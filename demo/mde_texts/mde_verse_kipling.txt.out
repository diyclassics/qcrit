(ROOT
  (S
    (PP (IN Beyond)
      (NP
        (NP (DT the) (NN path))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ outmost) (NN sun))
            (PP (IN through)
              (NP
                (NP (JJ utter) (NNS darkness))
                (VP (VBN hurled))))))))
    (PRN (: --)
      (PP
        (ADVP (RB Further))
        (IN than)
        (NP
          (ADJP (RB ever) (JJ comet))
          (NN flared)
          (CC or)
          (NN vagrant) (NN star-dust) (NN swirled)))
      (: --))
    (VP (VBD Live)
      (PP (JJ such)
        (PP (IN as)
          (NP (NNP fought))))
      (CC and)
      (VBD sailed)
      (CC and)
      (VBD ruled)
      (CC and)
      (VBD loved)
      (CC and)
      (VBD made)
      (NP (PRP$ our) (NN world)))
    (. .)))

case(path-3, Beyond-1)
det(path-3, the-2)
nmod:beyond(Live-23, path-3)
case(sun-7, of-4)
det(sun-7, the-5)
amod(sun-7, outmost-6)
nmod:of(path-3, sun-7)
case(darkness-10, through-8)
amod(darkness-10, utter-9)
nmod:through(sun-7, darkness-10)
acl(darkness-10, hurled-11)
advmod(flared-17, Further-13)
case(flared-17, than-14)
advmod(comet-16, ever-15)
amod(flared-17, comet-16)
dep(Live-23, flared-17)
cc(flared-17, or-18)
compound(swirled-21, vagrant-19)
compound(swirled-21, star-dust-20)
conj:or(flared-17, swirled-21)
dep(Live-23, swirled-21)
root(ROOT-0, Live-23)
case(fought-26, such-24)
case(fought-26, as-25)
advcl(Live-23, fought-26)
cc(Live-23, and-27)
conj:and(Live-23, sailed-28)
cc(Live-23, and-29)
conj:and(Live-23, ruled-30)
cc(Live-23, and-31)
conj:and(Live-23, loved-32)
cc(Live-23, and-33)
conj:and(Live-23, made-34)
nmod:poss(world-36, our-35)
dobj(Live-23, world-36)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP are)
        (VP (VBN purged)
          (PP (IN of)
            (NP (NN pride)))
          (SBAR (IN because)
            (S
              (NP (PRP they))
              (VP (VBD died)))))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP know)
        (NP
          (NP (DT the) (NN worth))
          (PP (IN of)
            (NP (PRP$ their) (NNS bays))))))
    (, ,)
    (S
      (NP (PRP They))
      (VP (VBP sit)
        (PP (IN at)
          (NP
            (NP
              (NP (NN wine))
              (PP (IN with)
                (NP (DT the) (NNP Maidens) (NNP Nine))))
            (CC and)
            (NP
              (NP (DT the) (NNS Gods))
              (PP (IN of)
                (NP (DT the) (NNP Elder) (NNPS Days))))))))
    (, ,)
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (PRP$ their) (NN will)
          (S
            (VP (TO to)
              (VP
                (VP (VB serve))
                (CC or)
                (VP (VB be)
                  (ADVP (RB still))
                  (SBAR (IN as)
                    (S
                      (VP (VBP fitteth)
                        (NP
                          (NP (PRP$ our) (NN Father) (POS 's))
                          (NN praise))))))))))))
    (. .)))

nsubjpass(purged-3, They-1)
auxpass(purged-3, are-2)
root(ROOT-0, purged-3)
case(pride-5, of-4)
nmod:of(purged-3, pride-5)
mark(died-8, because-6)
nsubj(died-8, they-7)
advcl(purged-3, died-8)
nsubj(know-11, they-10)
parataxis(purged-3, know-11)
det(worth-13, the-12)
dobj(know-11, worth-13)
case(bays-16, of-14)
nmod:poss(bays-16, their-15)
nmod:of(worth-13, bays-16)
nsubj(sit-19, They-18)
parataxis(purged-3, sit-19)
case(wine-21, at-20)
nmod:at(sit-19, wine-21)
case(Nine-25, with-22)
det(Nine-25, the-23)
compound(Nine-25, Maidens-24)
nmod:with(wine-21, Nine-25)
cc(wine-21, and-26)
det(Gods-28, the-27)
nmod:at(sit-19, Gods-28)
conj:and(wine-21, Gods-28)
case(Days-32, of-29)
det(Days-32, the-30)
compound(Days-32, Elder-31)
nmod:of(Gods-28, Days-32)
nsubj(will-37, It-34)
cop(will-37, is-35)
nmod:poss(will-37, their-36)
parataxis(purged-3, will-37)
mark(serve-39, to-38)
acl(will-37, serve-39)
cc(serve-39, or-40)
acl(will-37, be-41)
conj:or(serve-39, be-41)
advmod(be-41, still-42)
mark(fitteth-44, as-43)
advcl(be-41, fitteth-44)
nmod:poss(Father-46, our-45)
nmod:poss(praise-48, Father-46)
case(Father-46, 's-47)
dobj(fitteth-44, praise-48)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBZ is)
        (NP (PRP theirs))
        (PP (TO to)
          (NP (NN sweep)))
        (PP (IN through)
          (NP
            (NP (DT the) (VBG ringing) (NN deep))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP
                  (NP (NNP Azrael) (POS 's))
                  (NNS outposts))
                (VP (VBP are))))))))
    (, ,)
    (CC Or)
    (S
      (S
        (VP (VB buffet)
          (NP (DT a) (NN path))
          (PP (IN through)
            (NP
              (NP
                (NP (DT the) (NN Pit) (POS 's))
                (JJ red) (NN wrath))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (NNP God))
                  (VP (VBZ goes)
                    (PRT (RP out))
                    (PP (TO to)
                      (NP (NN war))))))))))
      (, ,)
      (NP (NNP Or))
      (VP (VBP hang)
        (PP (IN with)
          (NP
            (NP (DT the) (JJ reckless) (NN Seraphim))
            (PP (IN on)
              (NP
                (NP (DT the) (NN rein))
                (PP (IN of)
                  (NP (DT a) (JJ red-maned) (NN star)))))))))
    (. .)))

nsubj(theirs-3, 'T-1)
cop(theirs-3, is-2)
root(ROOT-0, theirs-3)
case(sweep-5, to-4)
nmod:to(theirs-3, sweep-5)
case(deep-9, through-6)
det(deep-9, the-7)
amod(deep-9, ringing-8)
nmod:through(theirs-3, deep-9)
advmod(are-14, where-10)
nmod:poss(outposts-13, Azrael-11)
case(Azrael-11, 's-12)
nsubj(are-14, outposts-13)
acl:relcl(deep-9, are-14)
cc(theirs-3, Or-16)
ccomp(hang-34, buffet-17)
det(path-19, a-18)
dobj(buffet-17, path-19)
case(wrath-25, through-20)
det(Pit-22, the-21)
nmod:poss(wrath-25, Pit-22)
case(Pit-22, 's-23)
amod(wrath-25, red-24)
nmod:through(buffet-17, wrath-25)
advmod(goes-28, when-26)
nsubj(goes-28, God-27)
acl:relcl(wrath-25, goes-28)
compound:prt(goes-28, out-29)
case(war-31, to-30)
nmod:to(goes-28, war-31)
nsubj(hang-34, Or-33)
conj:or(theirs-3, hang-34)
case(Seraphim-38, with-35)
det(Seraphim-38, the-36)
amod(Seraphim-38, reckless-37)
nmod:with(hang-34, Seraphim-38)
case(rein-41, on-39)
det(rein-41, the-40)
nmod:on(Seraphim-38, rein-41)
case(star-45, of-42)
det(star-45, a-43)
amod(star-45, red-maned-44)
nmod:of(rein-41, star-45)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP take)
        (NP (PRP$ their) (NN mirth))
        (PP (IN in)
          (NP
            (NP (DT the) (NN joy))
            (PP (IN of)
              (NP (DT the) (NN Earth)))))))
    (: --)
    (S
      (NP (PRP they))
      (VP (MD dare) (RB not)
        (VP (VB grieve)
          (PP (IN for)
            (NP (PRP$ her) (NN pain))))))
    (: --)
    (S
      (NP (PRP They))
      (VP (VBP know)
        (PP (IN of)
          (NP
            (NP (NNP toil))
            (CC and)
            (NP
              (NP (DT the) (NN end))
              (PP (IN of)
                (NP (NNP toil))))))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP know)
        (SBAR
          (S
            (NP
              (NP (NNP God) (POS 's))
              (NN law))
            (VP (VBZ is)
              (ADJP (JJ plain)))))))
    (, ,) (IN So)
    (S
      (NP (PRP they))
      (VP (VBP whistle)
        (NP
          (NP (DT the)
            (ADJP (JJ Devil)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (PRP them))))))
            (NN sport))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP know)
                (SBAR (IN that)
                  (S
                    (NP (NNP Sin))
                    (VP (VBZ is)
                      (ADJP (JJ vain)))))))))))
    (. .)))

nsubj(take-2, They-1)
root(ROOT-0, take-2)
nmod:poss(mirth-4, their-3)
dobj(take-2, mirth-4)
case(joy-7, in-5)
det(joy-7, the-6)
nmod:in(take-2, joy-7)
case(Earth-10, of-8)
det(Earth-10, the-9)
nmod:of(joy-7, Earth-10)
nsubj(grieve-15, they-12)
aux(grieve-15, dare-13)
neg(grieve-15, not-14)
parataxis(take-2, grieve-15)
case(pain-18, for-16)
nmod:poss(pain-18, her-17)
nmod:for(grieve-15, pain-18)
nsubj(know-21, They-20)
parataxis(take-2, know-21)
case(toil-23, of-22)
nmod:of(know-21, toil-23)
cc(toil-23, and-24)
det(end-26, the-25)
nmod:of(know-21, end-26)
conj:and(toil-23, end-26)
case(toil-28, of-27)
nmod:of(end-26, toil-28)
nsubj(know-31, they-30)
parataxis(take-2, know-31)
nmod:poss(law-34, God-32)
case(God-32, 's-33)
nsubj(plain-36, law-34)
cop(plain-36, is-35)
ccomp(know-31, plain-36)
dep(take-2, So-38)
nsubj(whistle-40, they-39)
parataxis(take-2, whistle-40)
det(sport-46, the-41)
amod(sport-46, Devil-42)
mark(make-44, to-43)
xcomp(Devil-42, make-44)
dobj(make-44, them-45)
dobj(whistle-40, sport-46)
nsubj(know-48, sport-46)
ref(sport-46, who-47)
acl:relcl(sport-46, know-48)
mark(vain-52, that-49)
nsubj(vain-52, Sin-50)
cop(vain-52, is-51)
ccomp(know-48, vain-52)

(ROOT
  (S (CC And)
    (S
      (NP (NNS ofttimes))
      (VP (VBP cometh)
        (NP
          (NP (PRP$ our) (JJ wise) (NNP Lord) (NNP God) (, ,) (NN master))
          (PP (IN of)
            (NP (DT every) (NN trade))))))
    (, ,)
    (CC And)
    (SINV
      (VP (VBZ tells)
        (NP (PRP them)))
      (NP
        (NP (NNS tales))
        (PP (IN of)
          (NP (PRP$ His) (JJ daily) (NN toil)))
        (, ,)
        (PP (IN of)
          (NP
            (NP (NNP Edens))
            (ADJP (RB newly) (VBN made))))))
    (: ;)
    (S (CC And)
      (NP (PRP they))
      (VP (VBP rise)
        (PP (TO to)
          (NP (PRP$ their) (NNS feet)))
        (SBAR (IN as)
          (S
            (NP (PRP He))
            (VP (VBZ passes)
              (PP (IN by)))))))
    (, ,)
    (S
      (NP (NNS gentlemen))
      (ADJP (JJ unafraid)))
    (. .)))

cc(cometh-3, And-1)
nsubj(cometh-3, ofttimes-2)
root(ROOT-0, cometh-3)
nmod:poss(master-9, our-4)
amod(master-9, wise-5)
compound(master-9, Lord-6)
compound(master-9, God-7)
dobj(cometh-3, master-9)
case(trade-12, of-10)
det(trade-12, every-11)
nmod:of(master-9, trade-12)
cc(cometh-3, And-14)
conj:and(cometh-3, tells-15)
dobj(tells-15, them-16)
nsubj(tells-15, tales-17)
case(toil-21, of-18)
nmod:poss(toil-21, His-19)
amod(toil-21, daily-20)
nmod:of(tales-17, toil-21)
case(Edens-24, of-23)
nmod:of(tales-17, Edens-24)
advmod(made-26, newly-25)
amod(Edens-24, made-26)
cc(rise-30, And-28)
nsubj(rise-30, they-29)
dep(cometh-3, rise-30)
case(feet-33, to-31)
nmod:poss(feet-33, their-32)
nmod:to(rise-30, feet-33)
mark(passes-36, as-34)
nsubj(passes-36, He-35)
advcl(rise-30, passes-36)
nmod(passes-36, by-37)
dep(unafraid-40, gentlemen-39)
parataxis(cometh-3, unafraid-40)

(ROOT
  (S
    (PP (TO To)
      (NP
        (NP
          (NP (DT these))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (VP (VBN cleansed)
                  (PP (IN of)
                    (NP
                      (NP (NN base) (NN Desire))
                      (, ,)
                      (NP (NN Sorrow)
                        (CC and)
                        (NN Lust))
                      (CC and)
                      (NP (NNP Shame)))))))))
        (: --)
        (NP
          (NP (NNS Gods))
          (SBAR (IN for)
            (S
              (NP (PRP they))
              (VP (VBD knew)
                (NP
                  (NP (DT the) (NNS hearts))
                  (PP (IN of)
                    (NP
                      (NP (NNS men))
                      (, ,)
                      (NP (NNS men)))))
                (SBAR (IN for)
                  (S
                    (NP (PRP they))
                    (VP (VBD stooped)
                      (PP (TO to)
                        (NP
                          (NP (NNP Fame) (, ,) (NNP Borne))
                          (PP (IN on)
                            (NP (DT the) (NN breath)))))
                      (SBAR (IN that)
                        (S
                          (NP (NNS men))
                          (VP (VBP call)
                            (NP (NN Death))))))))))))))
    (, ,)
    (NP
      (NP (PRP$ my) (NN brother) (POS 's))
      (NN spirit))
    (VP (VBD came))
    (. .)))

case(these-2, To-1)
nsubjpass(cleansed-5, these-2)
nmod:to(came-45, these-2)
ref(these-2, who-3)
auxpass(cleansed-5, are-4)
acl:relcl(these-2, cleansed-5)
case(Desire-8, of-6)
compound(Desire-8, base-7)
nmod:of(cleansed-5, Desire-8)
nmod:of(cleansed-5, Sorrow-10)
conj:and(Desire-8, Sorrow-10)
cc(Sorrow-10, and-11)
conj:and(Desire-8, Lust-12)
conj:and(Sorrow-10, Lust-12)
cc(Desire-8, and-13)
nmod:of(cleansed-5, Shame-14)
conj:and(Desire-8, Shame-14)
dep(these-2, Gods-16)
mark(knew-19, for-17)
nsubj(knew-19, they-18)
dep(Gods-16, knew-19)
det(hearts-21, the-20)
dobj(knew-19, hearts-21)
case(men-23, of-22)
nmod:of(hearts-21, men-23)
appos(men-23, men-25)
mark(stooped-28, for-26)
nsubj(stooped-28, they-27)
advcl(knew-19, stooped-28)
case(Borne-32, to-29)
compound(Borne-32, Fame-30)
nmod:to(stooped-28, Borne-32)
case(breath-35, on-33)
det(breath-35, the-34)
nmod:on(Borne-32, breath-35)
mark(call-38, that-36)
nsubj(call-38, men-37)
ccomp(stooped-28, call-38)
dobj(call-38, Death-39)
nmod:poss(brother-42, my-41)
nmod:poss(spirit-44, brother-42)
case(brother-42, 's-43)
nsubj(came-45, spirit-44)
root(ROOT-0, came-45)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB scarce))
    (VP (VBD had)
      (VP (VBP need)
        (S
          (VP (TO to)
            (VP
              (VP (VB doff)
                (NP (PRP$ his) (NN pride)))
              (CC or)
              (VP
                (VP (VB slough)
                  (NP
                    (NP
                      (NP (DT the) (NNS dross))
                      (PP (IN of)
                        (NP (NNP Earth))))
                    (: --)
                    (NP
                      (NP (NNP E'en))
                      (SBAR (IN as)
                        (S
                          (NP (PRP he))
                          (VP (VBD trod)
                            (SBAR (IN that)
                              (S
                                (NP
                                  (NP (NN day))
                                  (PP (TO to)
                                    (NP (NNP God))))
                                (ADVP (RB so))
                                (VP (VBD walked)
                                  (NP (PRP he))
                                  (PP (IN from)
                                    (NP (PRP$ his) (NN birth)))
                                  (, ,)
                                  (PP (IN In)
                                    (NP (NNS simpleness)
                                      (CC and)
                                      (NN gentleness))))))))))))
                (CC and)
                (VP (VB honour)
                  (CC and)
                  (VB clean)
                  (NP (NN mirth)))))))))
    (. .)))

nsubj(need-4, He-1)
nsubj:xsubj(doff-6, He-1)
nsubj:xsubj(slough-10, He-1)
advmod(need-4, scarce-2)
aux(need-4, had-3)
root(ROOT-0, need-4)
mark(doff-6, to-5)
xcomp(need-4, doff-6)
nmod:poss(pride-8, his-7)
dobj(doff-6, pride-8)
cc(doff-6, or-9)
xcomp(need-4, slough-10)
conj:or(doff-6, slough-10)
det(dross-12, the-11)
dobj(slough-10, dross-12)
case(Earth-14, of-13)
nmod:of(dross-12, Earth-14)
dep(dross-12, E'en-16)
mark(trod-19, as-17)
nsubj(trod-19, he-18)
dep(E'en-16, trod-19)
mark(walked-25, that-20)
nsubj(walked-25, day-21)
case(God-23, to-22)
nmod:to(day-21, God-23)
advmod(walked-25, so-24)
ccomp(trod-19, walked-25)
dobj(walked-25, he-26)
case(birth-29, from-27)
nmod:poss(birth-29, his-28)
nmod:from(walked-25, birth-29)
case(simpleness-32, In-31)
nmod:in(walked-25, simpleness-32)
cc(simpleness-32, and-33)
nmod:in(walked-25, gentleness-34)
conj:and(simpleness-32, gentleness-34)
cc(slough-10, and-35)
conj:or(doff-6, honour-36)
conj:and(slough-10, honour-36)
cc(honour-36, and-37)
conj:and(slough-10, clean-38)
conj:and(honour-36, clean-38)
dobj(honour-36, mirth-39)

(ROOT
  (S (IN So)
    (S
      (PP
        (ADVP (CD cup) (TO to) (CD lip))
        (IN in)
        (NP (NN fellowship)))
      (NP (PRP they))
      (VP (VBD gave)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBP welcome)
              (ADJP (JJ high)))))))
    (CC And)
    (S
      (VP
        (VP (VBN made)
          (S
            (NP (PRP him))
            (VP
              (VP (VB place)
                (PP (IN at)
                  (NP (DT the) (JJ banquet) (NN board))))
              (: --)
              (NP
                (NP (DT the) (JJ Strong) (NN Men))
                (VP (VBN ranged)
                  (ADVP (RB thereby)))
                (, ,)
                (SBAR
                  (WHNP (WP Who))
                  (S
                    (VP (VBD had)
                      (VP (VBN done)
                        (NP (PRP$ his) (NN work))))))))))
        (CC and)
        (VP (VBN held)
          (NP (PRP$ his) (NN peace)))
        (CC and)
        (VP (VBD had)
          (NP (DT no) (NN fear)
            (S
              (VP (TO to)
                (VP (VB die))))))))
    (. .)))

dep(gave-8, So-1)
dep(lip-4, cup-2)
dep(lip-4, to-3)
advmod(fellowship-6, lip-4)
case(fellowship-6, in-5)
nmod:in(gave-8, fellowship-6)
nsubj(gave-8, they-7)
nsubj(made-13, they-7)
root(ROOT-0, gave-8)
nsubj(welcome-10, him-9)
ccomp(gave-8, welcome-10)
xcomp(welcome-10, high-11)
cc(gave-8, And-12)
conj:and(gave-8, made-13)
nsubj(place-15, him-14)
ccomp(made-13, place-15)
case(board-19, at-16)
det(board-19, the-17)
amod(board-19, banquet-18)
nmod:at(place-15, board-19)
det(Men-23, the-21)
amod(Men-23, Strong-22)
dobj(place-15, Men-23)
nsubj(done-29, Men-23)
acl(Men-23, ranged-24)
advmod(ranged-24, thereby-25)
ref(Men-23, Who-27)
aux(done-29, had-28)
acl:relcl(Men-23, done-29)
nmod:poss(work-31, his-30)
dobj(done-29, work-31)
cc(made-13, and-32)
conj:and(gave-8, held-33)
conj:and(made-13, held-33)
nmod:poss(peace-35, his-34)
dobj(held-33, peace-35)
cc(made-13, and-36)
conj:and(gave-8, had-37)
conj:and(made-13, had-37)
neg(fear-39, no-38)
dobj(had-37, fear-39)
mark(die-41, to-40)
acl(fear-39, die-41)

(ROOT
  (S
    (PP (IN Beyond)
      (NP
        (NP (DT the) (NN loom))
        (PP (IN of)
          (NP (DT the) (JJ last) (JJ lone) (NN star)))))
    (, ,)
    (PP (IN through)
      (NP
        (NP (JJ open) (NNS darkness))
        (VP (VBN hurled) (, ,)
          (PP
            (ADVP (RB Further))
            (IN than)
            (NP
              (NP (JJ rebel) (NN comet) (NNS dared))
              (CC or)
              (NP (VBG hiving) (JJ star-swarm) (NN swirled)))))))
    (, ,)
    (VP (VBZ Sits)
      (NP (PRP he))
      (PP (IN with)
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP praise)
                (NP (PRP$ our) (NN God))
                (PP (IN for)
                  (SBAR (IN that)
                    (S
                      (NP (PRP they))
                      (VP (VBD served)
                        (NP (PRP$ His) (NN world))))))))))))
    (. .)))

case(loom-3, Beyond-1)
det(loom-3, the-2)
nmod:beyond(Sits-25, loom-3)
case(star-8, of-4)
det(star-8, the-5)
amod(star-8, last-6)
amod(star-8, lone-7)
nmod:of(loom-3, star-8)
case(darkness-12, through-10)
amod(darkness-12, open-11)
nmod:through(Sits-25, darkness-12)
acl(darkness-12, hurled-13)
advmod(dared-19, Further-15)
case(dared-19, than-16)
amod(dared-19, rebel-17)
compound(dared-19, comet-18)
nmod:than(hurled-13, dared-19)
cc(dared-19, or-20)
amod(swirled-23, hiving-21)
amod(swirled-23, star-swarm-22)
nmod:than(hurled-13, swirled-23)
conj:or(dared-19, swirled-23)
root(ROOT-0, Sits-25)
dobj(Sits-25, he-26)
case(those-28, with-27)
nmod:with(Sits-25, those-28)
nsubj(praise-30, those-28)
ref(those-28, that-29)
acl:relcl(those-28, praise-30)
nmod:poss(God-32, our-31)
dobj(praise-30, God-32)
mark(served-36, for-33)
mark(served-36, that-34)
nsubj(served-36, they-35)
advcl(praise-30, served-36)
nmod:poss(world-38, His-37)
dobj(served-36, world-38)

(ROOT
  (S
    (S
      (NP (NNP BARRACK-ROOM))
      (VP (VBZ BALLADS)
        (PP (TO To)
          (NP
            (NP (NNP T.) (NNP A.))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP have)
                  (VP (VBN made)
                    (PP (IN for)
                      (NP (PRP you)))
                    (NP (DT a) (NN song))))))))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (PRP it))
        (VP (MD may)
          (VP (VB be)
            (ADJP (JJ right)
              (CC or)
              (JJ wrong)))))
      (, ,)
      (CC But)
      (S
        (ADVP (RB only))
        (NP (PRP you))
        (VP (MD can)
          (VP (VB tell)
            (NP (PRP me))
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADJP (JJ true)))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN tried)
          (PP (IN for)
            (NP
              (S
                (VP (TO to)
                  (VP (VB explain)
                    (NP (PDT Both) (PRP$ your) (NN pleasure)))))
              (CC and)
              (NP (PRP$ your) (NN pain)))))))
    (, ,)
    (CC And)
    (, ,)
    (S
      (NP (NNP Thomas))
      (, ,)
      (ADVP (RB here))
      (VP (VBZ 's)
        (NP
          (NP (PRP$ my) (JJS best) (NNS respects))
          (PP (TO to)
            (NP (PRP you))))))
    (. !)))

nsubj(BALLADS-2, BARRACK-ROOM-1)
root(ROOT-0, BALLADS-2)
case(A.-5, To-3)
compound(A.-5, T.-4)
nmod:to(BALLADS-2, A.-5)
nsubj(made-8, I-6)
aux(made-8, have-7)
acl:relcl(A.-5, made-8)
case(you-10, for-9)
nmod:for(made-8, you-10)
det(song-12, a-11)
dobj(made-8, song-12)
cc(BALLADS-2, And-14)
nsubj(right-18, it-15)
nsubj(wrong-20, it-15)
aux(right-18, may-16)
cop(right-18, be-17)
conj:and(BALLADS-2, right-18)
cc(right-18, or-19)
conj:and(BALLADS-2, wrong-20)
conj:or(right-18, wrong-20)
cc(right-18, But-22)
advmod(tell-26, only-23)
nsubj(tell-26, you-24)
aux(tell-26, can-25)
conj:and(BALLADS-2, tell-26)
conj:but(right-18, tell-26)
dobj(tell-26, me-27)
mark(true-31, if-28)
nsubj(true-31, it-29)
cop(true-31, 's-30)
advcl(tell-26, true-31)
nsubj(tried-35, I-33)
aux(tried-35, have-34)
conj:and(BALLADS-2, tried-35)
case(explain-38, for-36)
mark(explain-38, to-37)
nmod:for(tried-35, explain-38)
det:predet(pleasure-41, Both-39)
nmod:poss(pleasure-41, your-40)
dobj(explain-38, pleasure-41)
cc(explain-38, and-42)
nmod:poss(pain-44, your-43)
nmod:for(tried-35, pain-44)
conj:and(explain-38, pain-44)
cc(BALLADS-2, And-46)
nsubj(respects-54, Thomas-48)
advmod(respects-54, here-50)
cop(respects-54, 's-51)
nmod:poss(respects-54, my-52)
amod(respects-54, best-53)
conj:And(BALLADS-2, respects-54)
case(you-56, to-55)
nmod:to(respects-54, you-56)

(ROOT
  (S
    (S
      (NP (NNP O))
      (ADVP (RB there))
      (VP (MD 'll)
        (ADVP (RB surely))
        (VP (VB come)
          (NP (DT a) (NN day))
          (SBAR
            (WHADVP (WRB When))
            (S
              (NP (PRP they))
              (VP (MD 'll)
                (VP (VB give)
                  (NP (PRP you))
                  (NP (PDT all) (PRP$ your) (NN pay)))))))))
    (, ,)
    (CC And)
    (S
      (VP (VB treat)
        (NP (PRP you))
        (SBAR (IN as)
          (S
            (NP (DT a) (NNP Christian))
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB do)))))))))
    (: ;)
    (S
      (ADVP (RB So))
      (, ,)
      (SBAR (IN until)
        (S
          (NP (DT that) (NN day))
          (VP (VBZ comes)
            (NP (NN round)))))
      (, ,)
      (NP (NNP Heaven))
      (VP (VBP keep)
        (S
          (NP (PRP you))
          (ADJP (JJ safe)
            (CC and)
            (JJ sound)))))
    (, ,)
    (CC And)
    (, ,)
    (S
      (NP (NNP Thomas))
      (, ,)
      (ADVP (RB here))
      (VP (VBZ 's)
        (NP
          (NP (PRP$ my) (JJS best) (NNS respects))
          (PP (TO to)
            (NP (PRP you))))))
    (. !)))

nsubj(come-5, O-1)
nsubj(treat-18, O-1)
advmod(come-5, there-2)
aux(come-5, 'll-3)
advmod(come-5, surely-4)
root(ROOT-0, come-5)
det(day-7, a-6)
nmod:tmod(come-5, day-7)
advmod(give-11, When-8)
nsubj(give-11, they-9)
aux(give-11, 'll-10)
advcl(come-5, give-11)
iobj(give-11, you-12)
det:predet(pay-15, all-13)
nmod:poss(pay-15, your-14)
dobj(give-11, pay-15)
cc(come-5, And-17)
conj:and(come-5, treat-18)
dobj(treat-18, you-19)
mark(ought-23, as-20)
det(Christian-22, a-21)
nsubj(ought-23, Christian-22)
nsubj:xsubj(do-25, Christian-22)
advcl(treat-18, ought-23)
mark(do-25, to-24)
xcomp(ought-23, do-25)
advmod(keep-36, So-27)
mark(comes-32, until-29)
det(day-31, that-30)
nsubj(comes-32, day-31)
advcl(keep-36, comes-32)
dobj(comes-32, round-33)
nsubj(keep-36, Heaven-35)
conj:and(come-5, keep-36)
nsubj(safe-38, you-37)
nsubj(sound-40, you-37)
xcomp(keep-36, safe-38)
cc(safe-38, and-39)
xcomp(keep-36, sound-40)
conj:and(safe-38, sound-40)
cc(come-5, And-42)
nsubj(respects-50, Thomas-44)
advmod(respects-50, here-46)
cop(respects-50, 's-47)
nmod:poss(respects-50, my-48)
amod(respects-50, best-49)
conj:And(come-5, respects-50)
case(you-52, to-51)
nmod:to(respects-50, you-52)

(ROOT
  (S
    (VP (VBG R.)
      (NP (NNP K.) (NNP DANNY) (NNP DEEVER))
      (`` ``)
      (SBARQ
        (WHNP (WP What))
        (SQ (VBP are)
          (NP (DT the) (JJ bugles) (NN blowin) ('' '))
          (PP (IN for)))
        (. ?))
      ('' ''))))

root(ROOT-0, R.-1)
compound(DEEVER-4, K.-2)
compound(DEEVER-4, DANNY-3)
dobj(R.-1, DEEVER-4)
ccomp(R.-1, What-6)
cop(What-6, are-7)
det(blowin-10, the-8)
amod(blowin-10, bugles-9)
nsubj(What-6, blowin-10)
dep(What-6, for-12)

(ROOT
  (S
    (VP (VBD said)
      (ADJP (JJ Files-on-Parade)))
    (. .)))

root(ROOT-0, said-1)
xcomp(said-1, Files-on-Parade-2)

(ROOT
  (S (`` ``)
    (S
      (VP (TO To)
        (VP (VB turn)
          (NP (PRP you))
          (PP (IN out))
          (, ,)
          (S
            (VP (TO to)
              (VP (VB turn)
                (NP (PRP you))
                (PRT (RP out))))
            ('' '')))))
    (, ,)
    (NP (DT the) (NN Colour-Sergeant))
    (VP (VBD said))
    (. .)))

mark(turn-3, To-2)
advcl(said-15, turn-3)
dobj(turn-3, you-4)
nmod(turn-3, out-5)
mark(turn-8, to-7)
advcl(turn-3, turn-8)
dobj(turn-8, you-9)
compound:prt(turn-8, out-10)
det(Colour-Sergeant-14, the-13)
nsubj(said-15, Colour-Sergeant-14)
root(ROOT-0, said-15)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (S
          (NP (PRP you))
          (VP (VB look)
            (ADJP
              (ADJP (RB so) (JJ white))
              (, ,)
              (ADJP (RB so) (JJ white)))))))
    (. ?) ('' '')))

dobj(makes-3, What-2)
root(ROOT-0, makes-3)
nsubj(look-5, you-4)
ccomp(makes-3, look-5)
advmod(white-7, so-6)
xcomp(look-5, white-7)
advmod(white-10, so-9)
dep(white-7, white-10)

(ROOT
  (S
    (VP (VBD said)
      (ADJP (JJ Files-on-Parade)))
    (. .)))

root(ROOT-0, said-1)
xcomp(said-1, Files-on-Parade-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ dreadin))
        ('' ')
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN got)
                (S
                  (VP (TO to)
                    (VP (VB watch) ('' ''))))))))))
    (, ,)
    (NP (DT the) (NN Colour-Sergeant))
    (VP (VBD said))
    (. .)))

nsubj(dreadin-4, I-2)
cop(dreadin-4, 'm-3)
ccomp(said-16, dreadin-4)
dobj(watch-11, what-6)
nsubj(got-9, I-7)
nsubj:xsubj(watch-11, I-7)
aux(got-9, 've-8)
ccomp(dreadin-4, got-9)
mark(watch-11, to-10)
xcomp(got-9, watch-11)
det(Colour-Sergeant-15, the-14)
nsubj(said-16, Colour-Sergeant-15)
root(ROOT-0, said-16)

(ROOT
  (S
    (S
      (SBAR (IN For)
        (S
          (NP (PRP they))
          (VP (VBP 're)
            (NP
              (NP (NN hangin) (POS '))
              (NNP Danny) (NNP Deever)))))
      (, ,)
      (NP (PRP you))
      (VP (MD can)
        (VP (VB hear)
          (NP (DT the) (NNP Dead) (NNP March) (NN play)))))
    (, ,)
    (NP (DT The) (NN regiment))
    (VP (VBZ 's)
      (PP (IN in) (`` `)
        (NP
          (NP (NN ollow) (NN square))
          (: --)
          (S
            (S
              (NP (PRP they))
              (VP (VBP 're)
                (VP (VBN hangin) ('' ')
                  (NP (PRP him) (JJ to-day)))))
            (: ;)
            (S
              (NP (PRP They))
              (VP (VBP 've)
                (VP (VBN taken)
                  (PP (IN of)
                    (NP
                      (NP (PRP$ his) (NNS buttons))
                      (ADVP (IN off))
                      (, an) ('' ')
                      (VP (VBN cut)
                        (NP (PRP$ his) (NNS stripes))
                        (ADVP (RB away))
                        (, ,)
                        (NP
                          (NP (NNP An))
                          ('' ')
                          (SBAR
                            (S
                              (NP (PRP they))
                              (VP (VBP 're)
                                (NP
                                  (NP
                                    (NP (NN hangin) (POS '))
                                    (NNP Danny) (NNP Deever))
                                  (PP (IN in)
                                    (NP (DT the) (NN mornin))))))))))))))))
        ('' ')))
    (. .)))

mark(Deever-7, For-1)
nsubj(Deever-7, they-2)
cop(Deever-7, 're-3)
nmod:poss(Deever-7, hangin-4)
case(hangin-4, '-5)
compound(Deever-7, Danny-6)
advcl(hear-11, Deever-7)
nsubj(hear-11, you-9)
aux(hear-11, can-10)
ccomp(square-23, hear-11)
det(play-15, the-12)
compound(play-15, Dead-13)
compound(play-15, March-14)
dobj(hear-11, play-15)
det(regiment-18, The-17)
nsubj(square-23, regiment-18)
cop(square-23, 's-19)
case(square-23, in-20)
compound(square-23, ollow-22)
root(ROOT-0, square-23)
nsubjpass(hangin-27, they-25)
auxpass(hangin-27, 're-26)
dep(square-23, hangin-27)
dobj(hangin-27, him-29)
amod(him-29, to-day-30)
nsubj(taken-34, They-32)
aux(taken-34, 've-33)
parataxis(hangin-27, taken-34)
case(buttons-37, of-35)
nmod:poss(buttons-37, his-36)
nmod:of(taken-34, buttons-37)
advmod(buttons-37, off-38)
acl(buttons-37, cut-41)
nmod:poss(stripes-43, his-42)
dobj(cut-41, stripes-43)
advmod(cut-41, away-44)
dobj(cut-41, An-46)
nsubj(Deever-53, they-48)
cop(Deever-53, 're-49)
nmod:poss(Deever-53, hangin-50)
case(hangin-50, '-51)
compound(Deever-53, Danny-52)
acl:relcl(An-46, Deever-53)
case(mornin-56, in-54)
det(mornin-56, the-55)
nmod:in(Deever-53, mornin-56)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (S
          (NP (DT the) (JJ rear-rank) (NN breathe))
          (ADJP (RB so) (`` `) (JJ ard)))))
    (. ?) ('' '')))

nsubj(makes-3, What-2)
root(ROOT-0, makes-3)
det(breathe-6, the-4)
amod(breathe-6, rear-rank-5)
nsubj(ard-9, breathe-6)
advmod(ard-9, so-7)
xcomp(makes-3, ard-9)

(ROOT
  (S
    (VP (VBD said)
      (ADJP (JJ Files-on-Parade)))
    (. .)))

root(ROOT-0, said-1)
xcomp(said-1, Files-on-Parade-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (JJ bitter) (NN cold))
          (, ,)
          (NP
            (NP (PRP it) (POS 's))
            (JJ bitter) (NN cold))
          ('' ''))))
    (, ,)
    (NP (DT the) (NN Colour-Sergeant))
    (VP (VBD said))
    (. .)))

nsubj(cold-5, It-2)
cop(cold-5, 's-3)
amod(cold-5, bitter-4)
ccomp(said-15, cold-5)
nmod:poss(cold-10, it-7)
case(it-7, 's-8)
amod(cold-10, bitter-9)
appos(cold-5, cold-10)
det(Colour-Sergeant-14, the-13)
nsubj(said-15, Colour-Sergeant-14)
root(ROOT-0, said-15)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (NP (DT that) (JJ front-rank) (NN man) (NN fall))
        (PRT (RP down))))
    (. ?) ('' '')))

nsubj(makes-3, What-2)
root(ROOT-0, makes-3)
det(fall-7, that-4)
amod(fall-7, front-rank-5)
compound(fall-7, man-6)
nmod:tmod(makes-3, fall-7)
compound:prt(makes-3, down-8)

(ROOT
  (S
    (VP (VBD said)
      (ADJP (JJ Files-on-Parade)))
    (. .)))

root(ROOT-0, said-1)
xcomp(said-1, Files-on-Parade-2)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP
          (NP (DT A) (NN touch) (NN o) (POS '))
          (NN sun))
        (, ,)
        (NP (DT a) (NN touch)))
      (VP (VBP o) ('' ')
        (NP (NN sun))
        ('' '')))
    (, ,)
    (NP (DT the) (NN Colour-Sergeant))
    (VP (VBD said))
    (. .)))

det(o-4, A-2)
compound(o-4, touch-3)
nmod:poss(sun-6, o-4)
case(o-4, '-5)
nsubj(o-10, sun-6)
det(touch-9, a-8)
appos(sun-6, touch-9)
ccomp(said-17, o-10)
dobj(o-10, sun-12)
det(Colour-Sergeant-16, the-15)
nsubj(said-17, Colour-Sergeant-16)
root(ROOT-0, said-17)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP are)
        (NP
          (NP (NN hangin) (POS '))
          (NNP Danny) (NNP Deever))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADJP (JJ marchin) ('' ')
        (PP (IN of)
          (NP (`` `)
            (NP (NN im) (NN round))
            (, ,)
            (NP
              (NP (PRP They))
              (SBAR
                (S (`` `)
                  (NP (NN ave))
                  (`` `)
                  (VP
                    (VP (VBD alted)
                      (NP (NNP Danny) (NNP Deever))
                      (PP (IN by))
                      (`` `)
                      (SQ (VBZ is)
                        (NP
                          (NP (NN coffin))
                          (PP (IN on)
                            (NP
                              (NP (DT the) (NN ground))
                              (: ;)
                              (NP
                                (NP (NNP An) (POS '))
                                (`` `)
                                (S
                                  (NP (NNP e))
                                  (VP (MD 'll)
                                    (VP (VB swing)
                                      (PP (IN in) (`` `)
                                        (NP
                                          (NP (NN arf))
                                          (NP (DT a) (NN minute))))
                                      (PP (IN for)
                                        (NP
                                          (NP (DT a) (NN sneakin) (POS '))
                                          (NN shootin))))))
                                ('' ') (NN hound)))))))
                    (: --)
                    (NP
                      (NP (NNP O))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBP 're)
                            (NP
                              (NP
                                (NP (NN hangin) (POS '))
                                (NNP Danny) (NNP Deever))
                              (PP (IN in)
                                (NP (DT the) (NN mornin)))))))))
                  ('' '))))))))
    (. !) ('' '')))

nsubj(Deever-6, They-1)
cop(Deever-6, are-2)
nmod:poss(Deever-6, hangin-3)
case(hangin-3, '-4)
compound(Deever-6, Danny-5)
ccomp(marchin-10, Deever-6)
nsubj(marchin-10, they-8)
cop(marchin-10, are-9)
root(ROOT-0, marchin-10)
case(round-15, of-12)
compound(round-15, im-14)
nmod:of(marchin-10, round-15)
appos(round-15, They-17)
nsubj(alted-21, ave-19)
acl:relcl(They-17, alted-21)
compound(Deever-23, Danny-22)
dobj(alted-21, Deever-23)
nmod(alted-21, by-24)
dep(alted-21, is-26)
nsubj(is-26, coffin-27)
case(ground-30, on-28)
det(ground-30, the-29)
nmod:on(coffin-27, ground-30)
nmod:poss(hound-49, An-32)
case(An-32, '-33)
nsubj(swing-37, e-35)
aux(swing-37, 'll-36)
dep(hound-49, swing-37)
case(arf-40, in-38)
nmod:in(swing-37, arf-40)
det(minute-42, a-41)
dep(arf-40, minute-42)
case(shootin-47, for-43)
det(sneakin-45, a-44)
nmod:poss(shootin-47, sneakin-45)
case(sneakin-45, '-46)
nmod:for(swing-37, shootin-47)
dep(ground-30, hound-49)
dobj(alted-21, O-51)
nsubj(Deever-57, they-52)
cop(Deever-57, 're-53)
nmod:poss(Deever-57, hangin-54)
case(hangin-54, '-55)
compound(Deever-57, Danny-56)
acl:relcl(O-51, Deever-57)
case(mornin-60, in-58)
det(mornin-60, the-59)
nmod:in(Deever-57, mornin-60)

(ROOT
  (S (`` `)
    (S
      (VP (VBZ Is)
        (NP
          (NP (NN cot))
          (SBAR
            (S
              (VP (VBD was)
                (NP
                  (NP (NN right))
                  (: -) (`` `)
                  (CC and)
                  (NP (NN cot)))))))
        (PP (TO to)
          (NP (NN mine)))
        ('' '')))
    (, ,)
    (VP (VBD said)
      (ADJP (JJ Files-on-Parade)))
    (. .) ('' '')))

cop(cot-3, Is-2)
ccomp(said-14, cot-3)
cop(right-5, was-4)
acl:relcl(cot-3, right-5)
cc(right-5, and-8)
acl:relcl(cot-3, cot-9)
conj:and(right-5, cot-9)
case(mine-11, to-10)
nmod:to(cot-3, mine-11)
root(ROOT-0, said-14)
xcomp(said-14, Files-on-Parade-15)

(ROOT
  (S (`` `)
    (S
      (NP (NNP E))
      (VP (VBZ 's)
        (ADJP (JJ sleepin) ('' ')
          (PP (IN out)
            (NP (DT an))))
        (`` ')
        (ADJP (RB far) (JJ to-night))
        ('' '')))
    (, ,)
    (NP (DT the) (NN Colour-Sergeant))
    (VP (VBD said))
    (. .)))

nsubj(sleepin-4, E-2)
cop(sleepin-4, 's-3)
ccomp(said-15, sleepin-4)
case(an-7, out-6)
nmod:out(sleepin-4, an-7)
advmod(to-night-10, far-9)
xcomp(sleepin-4, to-night-10)
det(Colour-Sergeant-14, the-13)
nsubj(said-15, Colour-Sergeant-14)
root(ROOT-0, said-15)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (NP (JJ drunk))
        (`` `)
        (SQ (VBZ is)
          (NP (NN beer))
          (NP
            (NP (DT a) (NN score) (NN o) (POS '))
            (NNS times)))
        ('' '')))
    (, ,)
    (VP (VBD said))
    (NP (NNP Files-on-Parade))
    (. .) ('' '')))

nsubj('ve-3, I-2)
ccomp(said-15, 've-3)
dobj('ve-3, drunk-4)
cop(times-12, is-6)
nsubj(times-12, beer-7)
det(o-10, a-8)
compound(o-10, score-9)
nmod:poss(times-12, o-10)
case(o-10, '-11)
dep('ve-3, times-12)
root(ROOT-0, said-15)
nsubj(said-15, Files-on-Parade-16)

(ROOT
  (S
    (S (`` `)
      (NP (NNP E))
      (VP (VBZ 's)
        (NP
          (NP (NN drinkin) (POS '))
          (JJ bitter) (NN beer))
        (ADVP (RB alone)))
      ('' ''))
    (, ,)
    (NP (DT the) (NN Colour-Sergeant))
    (VP (VBD said))
    (. .)))

nsubj(beer-7, E-2)
cop(beer-7, 's-3)
nmod:poss(beer-7, drinkin-4)
case(drinkin-4, '-5)
amod(beer-7, bitter-6)
ccomp(said-13, beer-7)
advmod(beer-7, alone-8)
det(Colour-Sergeant-12, the-11)
nsubj(said-13, Colour-Sergeant-12)
root(ROOT-0, said-13)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP are)
        (NP
          (NP (NN hangin) (POS '))
          (NNP Danny) (NNP Deever))))
    (, ,)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB mark) (`` `)
          (ADJP (JJ im)
            (SBAR
              (S
                (S
                  (NP (TO to))
                  (`` `)
                  (VP (VBZ is)
                    (NP (NN place))))
                (, ,) (IN For)
                (S
                  (NP (POS '))
                  (ADVP (RB e))
                  (VP (VBD shot)
                    (NP (DT a) (NN comrade) (NN sleepin)))))))
          ('' '))))
    (: --)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB look) (`` `)
          (NP
            (NP (NN im))
            (PP (IN in)
              (NP (DT the) (NN face)))))))
    (: ;)
    (S
      (NP
        (NP (CD Nine))
        (`` `)
        (VP (VBN undred)
          (PP (IN of))))
      (`` `)
      (VP (VBZ is)
        (NP
          (NP (NN county))
          (, an) ('' ')
          (NP
            (NP (DT the) (NN regiment) (POS 's))
            (VBG disgrace)))))
    (, ,)
    (SBAR (IN While)
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (NP
            (NP
              (NP (NN hangin) (POS '))
              (NNP Danny) (NNP Deever))
            (PP (IN in)
              (NP (DT the) (NN mornin) (POS ')))))))
    (. .)))

nsubj(Deever-6, They-1)
cop(Deever-6, are-2)
nmod:poss(Deever-6, hangin-3)
case(hangin-3, '-4)
compound(Deever-6, Danny-5)
root(ROOT-0, Deever-6)
nsubj(mark-10, you-8)
aux(mark-10, must-9)
dep(Deever-6, mark-10)
xcomp(mark-10, im-12)
nsubj(place-16, to-13)
cop(place-16, is-15)
ccomp(im-12, place-16)
dep(place-16, For-18)
nsubj(shot-21, '-19)
advmod(shot-21, e-20)
parataxis(place-16, shot-21)
det(sleepin-24, a-22)
compound(sleepin-24, comrade-23)
dobj(shot-21, sleepin-24)
nsubj(look-29, you-27)
aux(look-29, must-28)
parataxis(Deever-6, look-29)
dobj(look-29, im-31)
case(face-34, in-32)
det(face-34, the-33)
nmod:in(im-31, face-34)
nsubj(county-42, Nine-36)
acl(Nine-36, undred-38)
nmod(undred-38, of-39)
cop(county-42, is-41)
parataxis(Deever-6, county-42)
det(regiment-46, the-45)
dep(county-42, regiment-46)
case(regiment-46, 's-47)
amod(regiment-46, disgrace-48)
mark(Deever-56, While-50)
nsubj(Deever-56, they-51)
cop(Deever-56, 're-52)
nmod:poss(Deever-56, hangin-53)
case(hangin-53, '-54)
compound(Deever-56, Danny-55)
dep(Deever-6, Deever-56)
case(mornin-59, in-57)
det(mornin-59, the-58)
nmod:'(Deever-56, mornin-59)
case(mornin-59, '-60)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT that)
        (ADJP (RB so) (JJ black))
        (NP
          (NP (NN agin) (POS '))
          (NP (DT the) (NN sun)))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, 's-3)
det(agin-7, that-4)
advmod(black-6, so-5)
amod(agin-7, black-6)
nsubj(What-2, agin-7)
case(agin-7, '-8)
det(sun-10, the-9)
dep(agin-7, sun-10)

(ROOT
  (S
    (VP (VBD said)
      (ADJP (JJ Files-on-Parade)))
    (. .)))

root(ROOT-0, said-1)
xcomp(said-1, Files-on-Parade-2)

(ROOT
  (S
    (S (`` ``)
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (NNP Danny) (NNP fightin) (POS '))
          (`` `) (NN ard))
        (PP (IN for)
          (NP (NN life))))
      ('' ''))
    (, ,)
    (NP (DT the) (NN Colour-Sergeant))
    (VP (VBD said))
    (. .)))

nsubj(ard-8, It-2)
cop(ard-8, 's-3)
compound(fightin-5, Danny-4)
nmod:poss(ard-8, fightin-5)
case(fightin-5, '-6)
ccomp(said-15, ard-8)
case(life-10, for-9)
nmod:for(ard-8, life-10)
det(Colour-Sergeant-14, the-13)
nsubj(said-15, Colour-Sergeant-14)
root(ROOT-0, said-15)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT that) (DT that) (NNS whimpers))
        (PP (IN over) (`` `)
          (NP (NN ead)))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, 's-3)
det:predet(whimpers-6, that-4)
det(whimpers-6, that-5)
nsubj(What-2, whimpers-6)
case(ead-9, over-7)
nmod:over(whimpers-6, ead-9)

(ROOT
  (S
    (VP (VBD said)
      (ADJP (JJ Files-on-Parade)))
    (. .)))

root(ROOT-0, said-1)
xcomp(said-1, Files-on-Parade-2)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (NNP Danny) (POS 's))
          (NN soul)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (VP (VBN passin) (`` ')
                  (ADVP (RB now))
                  ('' ''))))))))
    (, ,)
    (NP (DT the) (NN Colour-Sergeant))
    (VP (VBD said))
    (. .)))

nsubj(soul-6, It-2)
cop(soul-6, 's-3)
nmod:poss(soul-6, Danny-4)
case(Danny-4, 's-5)
ccomp(said-16, soul-6)
nsubjpass(passin-9, that-7)
auxpass(passin-9, 's-8)
ccomp(soul-6, passin-9)
advmod(passin-9, now-11)
det(Colour-Sergeant-15, the-14)
nsubj(said-16, Colour-Sergeant-15)
root(ROOT-0, said-16)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (VP (VBN done)
            (PP (IN with)
              (NP
                (NP (NNP Danny) (NNP Deever))
                (, ,)
                (PRN
                  (S
                    (NP (PRP you))
                    (VP (MD can) (`` `)
                      (VP (VB ear)
                        (NP
                          (NP (DT the) (NN quickstep) (NN play))
                          (, ,)
                          (NP
                            (NP (DT The) (NN regiment) (POS 's))
                            (PP (IN in)
                              (NP (NN column))))
                          (, ,))))))
                (, an) ('' ')
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBP 're)
                      (ADJP (JJ marchin) ('' ')))))))))))
    (NP (PRP us))
    (ADVP (RB away))
    (: ;)
    (VP (VBZ Ho))
    (. !)))

mark(done-4, For-1)
nsubjpass(done-4, they-2)
auxpass(done-4, 're-3)
advcl(Ho-32, done-4)
case(Deever-7, with-5)
compound(Deever-7, Danny-6)
nmod:with(done-4, Deever-7)
nsubj(ear-12, you-9)
aux(ear-12, can-10)
dep(Deever-7, ear-12)
det(play-15, the-13)
compound(play-15, quickstep-14)
dobj(ear-12, play-15)
det(regiment-18, The-17)
appos(play-15, regiment-18)
case(regiment-18, 's-19)
case(column-21, in-20)
nmod:in(regiment-18, column-21)
nsubj(marchin-27, they-25)
cop(marchin-27, 're-26)
acl:relcl(Deever-7, marchin-27)
nsubj(Ho-32, us-29)
advmod(Ho-32, away-30)
root(ROOT-0, Ho-32)

(ROOT
  (S
    (NP (DT the) (JJ young) (NNS recruits))
    (VP (VBP are)
      (NP (NN shakin) ('' '))
      (, ,)
      (NP
        (NP (DT an))
        ('' ')
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD 'll)
              (VP (VB want)
                (NP (PRP$ their) (NN beer) (NN to-day))))))))
    (, ,)
    (PP (IN After)
      (NP
        (NP (NN hangin) (POS '))
        (NNP Danny) (NNP Deever)))
    (PP (IN in)
      (NP (DT the) (NN mornin) (POS ')))
    (. .)))

det(recruits-3, the-1)
amod(recruits-3, young-2)
nsubj(shakin-5, recruits-3)
cop(shakin-5, are-4)
root(ROOT-0, shakin-5)
dep(shakin-5, an-8)
nsubj(want-12, they-10)
aux(want-12, 'll-11)
acl:relcl(an-8, want-12)
nmod:poss(to-day-15, their-13)
compound(to-day-15, beer-14)
dobj(want-12, to-day-15)
case(Deever-21, After-17)
nmod:poss(Deever-21, hangin-18)
case(hangin-18, '-19)
compound(Deever-21, Danny-20)
nmod:after(shakin-5, Deever-21)
case(mornin-24, in-22)
det(mornin-24, the-23)
nmod:'(shakin-5, mornin-24)
case(mornin-24, '-25)

(ROOT
  (S
    (NP (NNP TOMMY))
    (PRN
      (S
        (NP (PRP I))
        (VP (VBD went)
          (PP (IN into)
            (NP (DT a) (NN public)))
          (: -) (`` `)
          (S
            (NP (NN ouse))
            (VP (TO to)
              (VP (VB get)
                (NP
                  (NP
                    (NP (DT a) (NN pint) (NN o) (POS '))
                    (NN beer))
                  (, ,)
                  (NP
                    (NP (DT The) (NN publican) (POS '))
                    (ADJP (VBN e)
                      (NP
                        (QP (RB up) (DT an))))
                    ('' ') (NN sez))))))))
      (, ,))
    (`` ``)
    (NP (PRP We))
    (VP (VBP serve)
      (NP (DT no) (NNS red-coats))
      (ADVP (RB here)))
    (. .) ('' '')))

nsubj(serve-29, TOMMY-1)
nsubj(went-3, I-2)
parataxis(serve-29, went-3)
case(public-6, into-4)
det(public-6, a-5)
nmod:into(went-3, public-6)
dobj(went-3, ouse-9)
nsubj:xsubj(get-11, ouse-9)
mark(get-11, to-10)
xcomp(went-3, get-11)
det(o-14, a-12)
compound(o-14, pint-13)
nmod:poss(beer-16, o-14)
case(o-14, '-15)
dobj(get-11, beer-16)
det(publican-19, The-18)
nmod:poss(sez-25, publican-19)
case(publican-19, '-20)
amod(sez-25, e-21)
advmod(an-23, up-22)
dep(e-21, an-23)
appos(beer-16, sez-25)
nsubj(serve-29, We-28)
root(ROOT-0, serve-29)
neg(red-coats-31, no-30)
dobj(serve-29, red-coats-31)
advmod(serve-29, here-32)

(ROOT
  (S
    (S
      (NP (DT The) (NNS girls))
      (VP (VBD be'ind)
        (SBAR
          (S
            (NP
              (NP (DT the) (NN bar))
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBD laughed))))
              (, an) ('' '))
            (VP (VBD giggled)
              (ADJP (JJ fit)
                (S
                  (VP (TO to)
                    (VP (VB die)
                      (PRN (, ,)
                        (S
                          (NP (PRP I))
                          (VP (VBZ outs)
                            (PP (IN into)
                              (NP
                                (NP (DT the) (NN street))
                                (NP (RB again) (DT an))))
                            ('' ')
                            (SBAR (TO to)
                              (S
                                (NP (PRP myself))
                                (VP (VBP sez)
                                  (NP (PRP I))
                                  (: :)
                                  (S
                                    (S
                                      (NP
                                        (NP (NNP O))
                                        (SBAR
                                          (S
                                            (NP (PRP it))
                                            (VP (VBZ 's)
                                              (VP (VBG Tommy)
                                                (NP
                                                  (NP (DT this))
                                                  (, ,)
                                                  (NP
                                                    (NP (DT an))
                                                    ('' ')
                                                    (VP (VBN Tommy)
                                                      (NP (DT that)))
                                                    (, ,))
                                                  (, an) ('' ')))))))
                                      (`` ``)
                                      (NP (NNP Tommy) (, ,))
                                      (VP (VBP go)
                                        (PRT (RP away)))
                                      ('' ''))
                                    (: ;)
                                    (CC But)
                                    (S
                                      (NP (PRP it))
                                      (VP (VBZ 's) (`` ``)
                                        (VP (VB Thank)
                                          (NP (PRP you)))))))))))
                        (, ,))
                      (NP (NNP Mister) (NNP Atkins))
                      ('' ''))))))))))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN band))
          (VP (VBZ begins)
            (S
              (VP (TO to)
                (VP (VB play)))))))
      (, ,)
      (NP (DT The) (NN band))
      (VP (VBZ begins)
        (S
          (VP (TO to)
            (VP (VB play))))))
    (, ,)
    (S
      (NP (PRP$ my) (NNS boys))
      (PRN (, ,)
        (S
          (NP (DT the) (NN band))
          (VP (VBZ begins)
            (S
              (VP (TO to)
                (VP (VB play))))))
        (, ,))
      (VP (VBP O)
        (S
          (NP (PRP it) (POS 's))
          (VP (`` ``) (VB Thank)
            (NP (PRP you))
            (, ,)
            (NP (NNP Mister) (NNP Atkins))
            ('' '')))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN band))
            (VP (VBZ begins)
              (S
                (VP (TO to)
                  (VP (VB play)))))))))
    (. .)))

det(girls-2, The-1)
nsubj(be'ind-3, girls-2)
root(ROOT-0, be'ind-3)
det(bar-5, the-4)
nsubj(giggled-10, bar-5)
nsubj(laughed-7, they-6)
acl:relcl(bar-5, laughed-7)
ccomp(be'ind-3, giggled-10)
xcomp(giggled-10, fit-11)
mark(die-13, to-12)
xcomp(fit-11, die-13)
nsubj(outs-16, I-15)
parataxis(die-13, outs-16)
case(street-19, into-17)
det(street-19, the-18)
nmod:into(outs-16, street-19)
advmod(an-21, again-20)
dep(street-19, an-21)
dep(sez-25, to-23)
nsubj(sez-25, myself-24)
ccomp(outs-16, sez-25)
dobj(sez-25, I-26)
nsubj(go-44, O-28)
nsubj(Tommy-31, it-29)
aux(Tommy-31, 's-30)
acl:relcl(O-28, Tommy-31)
dobj(Tommy-31, this-32)
appos(this-32, an-34)
acl(an-34, Tommy-36)
dobj(Tommy-36, that-37)
nsubj(go-44, Tommy-42)
parataxis(sez-25, go-44)
compound:prt(go-44, away-45)
cc(go-44, But-48)
nsubj(Thank-52, it-49)
aux(Thank-52, 's-50)
parataxis(sez-25, Thank-52)
conj:but(go-44, Thank-52)
dobj(Thank-52, you-53)
compound(Atkins-56, Mister-55)
dobj(die-13, Atkins-56)
advmod(begins-62, when-59)
det(band-61, the-60)
nsubj(begins-62, band-61)
nsubj:xsubj(play-64, band-61)
advcl(begins-68, begins-62)
mark(play-64, to-63)
xcomp(begins-62, play-64)
det(band-67, The-66)
nsubj(begins-68, band-67)
nsubj:xsubj(play-70, band-67)
parataxis(be'ind-3, begins-68)
mark(play-70, to-69)
xcomp(begins-68, play-70)
nmod:poss(boys-73, my-72)
nsubj(O-81, boys-73)
det(band-76, the-75)
nsubj(begins-77, band-76)
nsubj:xsubj(play-79, band-76)
parataxis(O-81, begins-77)
mark(play-79, to-78)
xcomp(begins-77, play-79)
parataxis(be'ind-3, O-81)
nsubj(Thank-85, it-82)
case(it-82, 's-83)
ccomp(O-81, Thank-85)
dobj(Thank-85, you-86)
compound(Atkins-89, Mister-88)
dobj(Thank-85, Atkins-89)
advmod(begins-95, when-92)
det(band-94, the-93)
nsubj(begins-95, band-94)
nsubj:xsubj(play-97, band-94)
advcl(O-81, begins-95)
mark(play-97, to-96)
xcomp(begins-95, play-97)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD went)
        (PP (IN into)
          (NP
            (NP (DT a) (NN theatre))
            (ADJP (RB as) (JJ sober))))
        (SBAR (IN as)
          (S
            (VP (MD could)
              (VP
                (VP (VB be) (, ,)
                  (SBAR
                    (S
                      (S
                        (NP (PRP They))
                        (VP (VBD gave)
                          (NP (DT a) (JJ drunk) (JJ civilian) (NN room))))
                      (, ,)
                      (CC but)
                      (`` `)
                      (S
                        (NP (NN ad))
                        (VP (RB n't) (VBN none)
                          (PP (IN for)
                            (NP (PRP me)))))
                      (: ;)
                      (S
                        (NP (PRP They))
                        (VP (VBD sent)
                          (NP (PRP me))
                          (PP (TO to)
                            (NP (DT the) (NN gallery))))))))
                (CC or)
                (VP (VB round)
                  (NP
                    (NP (DT the) (NN music))
                    (: -) (`` `)
                    (NP (NNS alls))))))))))
    (, ,)
    (CC But)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBZ comes)
            (S
              (VP (TO to)
                (VP (VB fightin) ('' ')))))))
      (, ,)
      (VP (VB Lord)))
    (. !)))

nsubj(went-2, I-1)
nsubj(Lord-49, I-1)
root(ROOT-0, went-2)
case(theatre-5, into-3)
det(theatre-5, a-4)
nmod:into(went-2, theatre-5)
advmod(sober-7, as-6)
amod(theatre-5, sober-7)
mark(be-10, as-8)
aux(be-10, could-9)
advcl(went-2, be-10)
nsubj(gave-13, They-12)
dep(be-10, gave-13)
det(room-17, a-14)
amod(room-17, drunk-15)
amod(room-17, civilian-16)
dobj(gave-13, room-17)
cc(gave-13, but-19)
nsubj(none-23, ad-21)
neg(none-23, n't-22)
dep(be-10, none-23)
conj:but(gave-13, none-23)
case(me-25, for-24)
nmod:for(none-23, me-25)
nsubj(sent-28, They-27)
dep(be-10, sent-28)
conj:but(gave-13, sent-28)
dobj(sent-28, me-29)
case(gallery-32, to-30)
det(gallery-32, the-31)
nmod:to(sent-28, gallery-32)
cc(be-10, or-33)
advcl(went-2, round-34)
conj:or(be-10, round-34)
det(music-36, the-35)
dobj(round-34, music-36)
dep(music-36, alls-39)
cc(went-2, But-41)
advmod(comes-44, when-42)
nsubj(comes-44, it-43)
nsubj:xsubj(fightin-46, it-43)
advcl(Lord-49, comes-44)
mark(fightin-46, to-45)
xcomp(comes-44, fightin-46)
conj:but(went-2, Lord-49)

(ROOT
  (S
    (NP (PRP they))
    (VP (MD 'll)
      (VP (VB shove)
        (NP (PRP me))
        (PP (IN in)
          (NP (DT the) (NNS stalls)))))
    (. !)))

nsubj(shove-3, they-1)
aux(shove-3, 'll-2)
root(ROOT-0, shove-3)
dobj(shove-3, me-4)
case(stalls-7, in-5)
det(stalls-7, the-6)
nmod:in(shove-3, stalls-7)

(ROOT
  (S
    (S
      (PP (IN For)
        (S
          (NP (PRP it) (POS 's))
          (VP (VBG Tommy)
            (NP (DT this)))))
      (, ,)
      (NP (DT an))
      ('' ')
      (VP (VBZ Tommy)
        (SBAR (IN that)
          (S (, ,)
            (S
              (S
                (NP (DT an))
                ('' ')
                (VP (`` ``) (VB Tommy) (, ,) (VB wait)
                  (NP (RB outside))
                  ('' '')))
              (: ;)
              (CC But)
              (S
                (NP (PRP it))
                (VP (VBZ 's) (`` ``)
                  (NP
                    (NP (JJ Special) (NN train))
                    (PP (IN for)
                      (NP (NNP Atkins))))
                  ('' '')
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (DT the) (NN trooper))
                      (VP (VBZ 's)
                        (PP (IN on)
                          (NP (DT the) (NN tide)))))))))
            (, ,)
            (NP (DT The) (NN troopship))
            (VP (VBZ 's)
              (PP (IN on)
                (NP (DT the) (NN tide))))))))
    (, ,)
    (NP
      (NP (PRP$ my) (NNS boys))
      (, ,)
      (NP
        (NP (DT the) (NN troopship) (POS 's))
        (PP (IN on)
          (NP (DT the) (NN tide))))
      (, ,))
    (VP (VBP O)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's) (`` ``)
            (NP
              (NP (JJ Special) (NN train))
              (PP (IN for)
                (NP (NNP Atkins))))
            ('' '')
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (DT the) (NN trooper))
                (VP (VBZ 's)
                  (PP (IN on)
                    (NP (DT the) (NN tide))))))))))
    (. .)))

mark(Tommy-4, For-1)
nsubj(Tommy-4, it-2)
case(it-2, 's-3)
advcl(Tommy-9, Tommy-4)
dobj(Tommy-4, this-5)
nsubj(Tommy-9, an-7)
ccomp(O-55, Tommy-9)
mark(tide-43, that-10)
nsubj(Tommy-15, an-12)
ccomp(tide-43, Tommy-15)
dep(Tommy-15, wait-17)
dobj(Tommy-15, outside-18)
cc(Tommy-15, But-21)
nsubj(train-26, it-22)
cop(train-26, 's-23)
amod(train-26, Special-25)
conj:but(Tommy-15, train-26)
ccomp(tide-43, train-26)
case(Atkins-28, for-27)
nmod:for(train-26, Atkins-28)
advmod(tide-36, when-30)
det(trooper-32, the-31)
nsubj(tide-36, trooper-32)
cop(tide-36, 's-33)
case(tide-36, on-34)
det(tide-36, the-35)
advcl(train-26, tide-36)
det(troopship-39, The-38)
nsubj(tide-43, troopship-39)
cop(tide-43, 's-40)
case(tide-43, on-41)
det(tide-43, the-42)
ccomp(Tommy-9, tide-43)
nmod:poss(boys-46, my-45)
nsubj(O-55, boys-46)
det(troopship-49, the-48)
appos(boys-46, troopship-49)
case(troopship-49, 's-50)
case(tide-53, on-51)
det(tide-53, the-52)
nmod:on(troopship-49, tide-53)
root(ROOT-0, O-55)
nsubj(train-60, it-56)
cop(train-60, 's-57)
amod(train-60, Special-59)
ccomp(O-55, train-60)
case(Atkins-62, for-61)
nmod:for(train-60, Atkins-62)
advmod(tide-70, when-64)
det(trooper-66, the-65)
nsubj(tide-70, trooper-66)
cop(tide-70, 's-67)
case(tide-70, on-68)
det(tide-70, the-69)
advcl(train-60, tide-70)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP
        (NP
          (NP (NN makin) (POS '))
          (JJ mock) (NN o) ('' ') (NNS uniforms))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP guard)
              (NP (PRP you))
              (SBAR (IN while)
                (S
                  (NP (PRP you))
                  (VP (VBP sleep))))))))
      (VP (VBZ Is)
        (ADJP (JJR cheaper))
        (SBAR (IN than)
          (S
            (NP (PRP them))
            (VP
              (VP (VBZ uniforms))
              (, ,)
              (NP
                (NP (DT an))
                ('' ')
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBP 're)
                      (ADJP (RB starvation) (JJ cheap)))))))))))
    (: ;)
    (S
      (NP
        (NP
          (NP
            (NP (NNP An) (POS '))
            (NN hustlin) (POS '))
          (NN drunken) (NNS soldiers))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBP 're)
              (NP
                (NP
                  (NP (NN goin) (POS '))
                  (JJ large))
                (NP (DT a) (NN bit)))))))
      (VP (VBZ Is)
        (NP
          (NP
            (ADJP
              (NP (CD five) (NNS times))
              (JJR better))
            (NN business))
          (PP (IN than)
            (NP
              (NP (NN paradin))
              ('' ')
              (PP (IN in)
                (NP (JJ full) (NN kit))))))))
    (. .)))

discourse(cheaper-16, Yes-1)
nmod:poss(uniforms-8, makin-3)
case(makin-3, '-4)
amod(uniforms-8, mock-5)
compound(uniforms-8, o-6)
nsubj(guard-10, uniforms-8)
nsubj(cheaper-16, uniforms-8)
ref(uniforms-8, that-9)
acl:relcl(uniforms-8, guard-10)
dobj(guard-10, you-11)
mark(sleep-14, while-12)
nsubj(sleep-14, you-13)
advcl(guard-10, sleep-14)
cop(cheaper-16, Is-15)
root(ROOT-0, cheaper-16)
mark(uniforms-19, than-17)
nsubj(uniforms-19, them-18)
advcl(cheaper-16, uniforms-19)
dobj(uniforms-19, an-21)
nsubj(cheap-26, they-23)
cop(cheap-26, 're-24)
advmod(cheap-26, starvation-25)
acl:relcl(an-21, cheap-26)
nmod:poss(hustlin-30, An-28)
case(An-28, '-29)
nmod:poss(soldiers-33, hustlin-30)
case(hustlin-30, '-31)
compound(soldiers-33, drunken-32)
nsubj(business-46, soldiers-33)
advmod(goin-37, when-34)
nsubj(goin-37, they-35)
cop(goin-37, 're-36)
acl:relcl(soldiers-33, goin-37)
case(goin-37, '-38)
amod(goin-37, large-39)
det(bit-41, a-40)
dep(goin-37, bit-41)
cop(business-46, Is-42)
nummod(times-44, five-43)
nmod:npmod(better-45, times-44)
amod(business-46, better-45)
parataxis(cheaper-16, business-46)
case(paradin-48, than-47)
nmod:than(business-46, paradin-48)
case(kit-52, in-50)
amod(kit-52, full-51)
nmod:in(paradin-48, kit-52)

(ROOT
  (S (RB Then)
    (NP (PRP it))
    (VP (VBZ 's)
      (VP (VB Tommy)
        (NP
          (NP (DT this))
          (, ,)
          (NP
            (NP (DT an))
            ('' ')
            (VP (VBN Tommy)
              (NP (DT that)))
            (, ,))
          (, an) ('' '))
        (`` ``)
        (NP
          (NP (NNP Tommy))
          (, ,)
          (NP (`` `)
            (NP (NNP ow) (POS 's))
            (NN yer) (NN soul)))))
    (. ?) ('' '')))

advmod(Tommy-4, Then-1)
nsubj(Tommy-4, it-2)
aux(Tommy-4, 's-3)
root(ROOT-0, Tommy-4)
dobj(Tommy-4, this-5)
appos(this-5, an-7)
acl(an-7, Tommy-9)
dobj(Tommy-9, that-10)
dobj(Tommy-4, Tommy-15)
nmod:poss(soul-21, ow-18)
case(ow-18, 's-19)
compound(soul-21, yer-20)
appos(Tommy-15, soul-21)

(ROOT
  (S (CC But)
    (S
      (NP (PRP it))
      (VP (VBZ 's) (`` ``)
        (NP
          (NP (JJ Thin) (JJ red) (NN line))
          (PP (IN of)
            (NP
              (NP (`` `) (NNS eroes) ('' ''))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (DT the) (NNS drums))
                  (VP (VBP begin)
                    (S
                      (VP (TO to)
                        (VP (VB roll))))))))))))
    (PRN (, ,)
      (S
        (NP (DT The) (NNS drums))
        (VP (VBP begin)
          (S
            (VP (TO to)
              (VP (VB roll))))))
      (, ,))
    (S
      (NP (PRP$ my) (NNS boys))
      (PRN (, ,)
        (S
          (NP (DT the) (NNS drums))
          (VP (VBP begin)
            (S
              (VP (TO to)
                (VP (VB roll))))))
        (, ,))
      (VP (VBP O)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's) (`` ``)
              (NP
                (NP (JJ Thin) (JJ red) (NN line))
                (PP (IN of)
                  (NP
                    (NP (`` `) (NNS eroes) ('' ''))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (DT the) (NNS drums))
                        (VP (VBP begin)
                          (S
                            (VP (TO to)
                              (VP (VB roll)))))))))))))))
    (. .)))

cc(line-7, But-1)
nsubj(line-7, it-2)
cop(line-7, 's-3)
amod(line-7, Thin-5)
amod(line-7, red-6)
root(ROOT-0, line-7)
case(eroes-10, of-8)
nmod:of(line-7, eroes-10)
advmod(begin-15, when-12)
det(drums-14, the-13)
nsubj(begin-15, drums-14)
nsubj:xsubj(roll-17, drums-14)
acl:relcl(eroes-10, begin-15)
mark(roll-17, to-16)
xcomp(begin-15, roll-17)
det(drums-20, The-19)
nsubj(begin-21, drums-20)
nsubj:xsubj(roll-23, drums-20)
dep(line-7, begin-21)
mark(roll-23, to-22)
xcomp(begin-21, roll-23)
nmod:poss(boys-26, my-25)
nsubj(O-34, boys-26)
det(drums-29, the-28)
nsubj(begin-30, drums-29)
nsubj:xsubj(roll-32, drums-29)
parataxis(O-34, begin-30)
mark(roll-32, to-31)
xcomp(begin-30, roll-32)
parataxis(line-7, O-34)
nsubj(line-40, it-35)
cop(line-40, 's-36)
amod(line-40, Thin-38)
amod(line-40, red-39)
ccomp(O-34, line-40)
case(eroes-43, of-41)
nmod:of(line-40, eroes-43)
advmod(begin-48, when-45)
det(drums-47, the-46)
nsubj(begin-48, drums-47)
nsubj:xsubj(roll-50, drums-47)
acl:relcl(eroes-43, begin-48)
mark(roll-50, to-49)
xcomp(begin-48, roll-50)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP are) (RB n't)
        (NP (DT no) (JJ thin) (JJ red) (`` `) (NNS eroes))))
    (, ,)
    (CC nor)
    (S
      (S
        (NP (PRP we))
        (VP (VBP are) (RB n't)
          (NP (DT no) (NNS blackguards))
          (ADVP (RB too))))
      (, ,)
      (CC But)
      (S
        (NP
          (NP (JJ single) (NNS men))
          (PP (IN in)
            (NP
              (NP (NNS barricks))
              (, ,)
              (ADJP (RBS most) (JJ remarkable)))))
        (VP (VBP like)
          (NP
            (NP (PRP you))
            (: ;)
            (NP
              (NP (NNP An))
              ('' ')
              (SBAR (IN if)
                (S
                  (S
                    (ADVP (RB sometimes))
                    (NP (PRP$ our) (NN conduck))
                    (VP (VBZ is) (RB n't)
                      (NP (PDT all) (PRP$ your) (JJ fancy) (NNS paints))))
                  (, ,)
                  (S
                    (S
                      (INTJ (WRB Why))
                      (, ,)
                      (NP
                        (NP (JJ single) (NNS men))
                        (PP (IN in)
                          (NP (NNS barricks))))
                      (VP (VBP do) (RB n't)
                        (VP (VB grow)
                          (PP (IN into)
                            (NP (NN plaster) (NNS saints))))))
                    (: ;)
                    (S
                      (SBAR (IN While)
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (VP (VBG Tommy)
                              (NP (DT this))))))
                      (, ,)
                      (NP (DT an))
                      ('' ')
                      (VP (VBZ Tommy)
                        (SBAR (IN that) (, ,)
                          (S
                            (S
                              (NP (DT an))
                              ('' ')
                              (VP (`` ``) (VB Tommy) (, ,) (VB fall)
                                (NP (NN be'ind))
                                ('' '')))
                            (, ,)
                            (CC But)
                            (S
                              (NP (PRP it))
                              (VP (VBZ 's)
                                (S (`` ``)
                                  (ADJP (JJ Please)
                                    (S
                                      (VP (TO to)
                                        (VP (VB walk)
                                          (PP (IN in)
                                            (NP
                                              (NP (NN front))
                                              (, ,)
                                              (NP (NN sir))))))))
                                  ('' '')))))))))
                  (, ,)
                  (S
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (EX there))
                        (VP (VBZ 's)
                          (NP
                            (NP (NN trouble))
                            (PP (IN in)
                              (NP (DT the) (NN wind)))))))
                    (, ,)
                    (NP (EX There))
                    (VP (VBZ 's)
                      (NP
                        (NP (NN trouble))
                        (PP (IN in)
                          (NP (DT the) (NN wind))))))
                  (, ,)
                  (S
                    (NP (PRP$ my) (NNS boys))
                    (PRN (, ,)
                      (S
                        (NP (EX there))
                        (VP (VBZ 's)
                          (NP
                            (NP (NN trouble))
                            (PP (IN in)
                              (NP (DT the) (NN wind))))))
                      (, ,))
                    (VP (VBP O)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (S (`` ``)
                              (ADJP (JJ Please)
                                (S
                                  (VP (TO to)
                                    (VP (VB walk)
                                      (PP (IN in)
                                        (NP
                                          (NP (NN front))
                                          (, ,)
                                          (NP (NN sir))))))))
                              ('' '')))))))))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (EX there))
                  (VP (VBZ 's)
                    (NP
                      (NP (NN trouble))
                      (PP (IN in)
                        (NP (DT the) (NN wind))))))))))))
    (. .)))

nsubj(eroes-8, We-1)
cop(eroes-8, are-2)
neg(eroes-8, n't-3)
neg(eroes-8, no-4)
amod(eroes-8, thin-5)
amod(eroes-8, red-6)
root(ROOT-0, eroes-8)
cc(eroes-8, nor-10)
nsubj(blackguards-15, we-11)
cop(blackguards-15, are-12)
neg(blackguards-15, n't-13)
neg(blackguards-15, no-14)
conj:nor(eroes-8, blackguards-15)
advmod(blackguards-15, too-16)
cc(blackguards-15, But-18)
amod(men-20, single-19)
nsubj(like-26, men-20)
case(barricks-22, in-21)
nmod:in(men-20, barricks-22)
advmod(remarkable-25, most-24)
amod(barricks-22, remarkable-25)
conj:nor(eroes-8, like-26)
conj:but(blackguards-15, like-26)
dobj(like-26, you-27)
dep(you-27, An-29)
mark(paints-40, if-31)
advmod(paints-40, sometimes-32)
nmod:poss(conduck-34, our-33)
nsubj(paints-40, conduck-34)
cop(paints-40, is-35)
neg(paints-40, n't-36)
det:predet(paints-40, all-37)
nmod:poss(paints-40, your-38)
amod(paints-40, fancy-39)
dep(An-29, paints-40)
discourse(grow-50, Why-42)
amod(men-45, single-44)
nsubj(grow-50, men-45)
case(barricks-47, in-46)
nmod:in(men-45, barricks-47)
aux(grow-50, do-48)
neg(grow-50, n't-49)
parataxis(paints-40, grow-50)
case(saints-53, into-51)
compound(saints-53, plaster-52)
nmod:into(grow-50, saints-53)
mark(Tommy-58, While-55)
nsubj(Tommy-58, it-56)
aux(Tommy-58, 's-57)
advcl(Tommy-63, Tommy-58)
dobj(Tommy-58, this-59)
nsubj(Tommy-63, an-61)
parataxis(grow-50, Tommy-63)
mark(Tommy-69, that-64)
nsubj(Tommy-69, an-66)
ccomp(Tommy-63, Tommy-69)
dep(Tommy-69, fall-71)
dobj(Tommy-69, be'ind-72)
cc(Tommy-69, But-75)
nsubj('s-77, it-76)
ccomp(Tommy-63, 's-77)
conj:but(Tommy-69, 's-77)
xcomp('s-77, Please-79)
mark(walk-81, to-80)
xcomp(Please-79, walk-81)
case(front-83, in-82)
nmod:in(walk-81, front-83)
appos(front-83, sir-85)
advmod('s-90, when-88)
expl('s-90, there-89)
advcl('s-97, 's-90)
nsubj('s-90, trouble-91)
case(wind-94, in-92)
det(wind-94, the-93)
nmod:in(trouble-91, wind-94)
expl('s-97, There-96)
parataxis(paints-40, 's-97)
nsubj('s-97, trouble-98)
case(wind-101, in-99)
det(wind-101, the-100)
nmod:in(trouble-98, wind-101)
nmod:poss(boys-104, my-103)
nsubj(O-113, boys-104)
expl('s-107, there-106)
parataxis(O-113, 's-107)
nsubj('s-107, trouble-108)
case(wind-111, in-109)
det(wind-111, the-110)
nmod:in(trouble-108, wind-111)
parataxis(paints-40, O-113)
nsubj('s-115, it-114)
ccomp(O-113, 's-115)
xcomp('s-115, Please-117)
mark(walk-119, to-118)
xcomp(Please-117, walk-119)
case(front-121, in-120)
nmod:in(walk-119, front-121)
appos(front-121, sir-123)
advmod('s-128, when-126)
expl('s-128, there-127)
acl:relcl(An-29, 's-128)
nsubj('s-128, trouble-129)
case(wind-132, in-130)
det(wind-132, the-131)
nmod:in(trouble-129, wind-132)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP
        (VP (VB talk)
          (NP
            (NP
              (NP (NNP o) (POS '))
              (JJR better) (NN food))
            (PP (IN for)
              (NP (PRP us)))))
        (, ,)
        (NP
          (NP (DT an))
          (POS ') (NNS schools))))
    (, ,)
    (NP (DT an))
    (VP (`` ') (VBZ fires) (, ,)
      (ADVP (DT an))
      ('' ')
      (NP
        (NP (DT all))
        (: :)
        (S
          (NP (PRP We))
          (VP (MD 'll)
            (VP (VB wait)
              (PP (IN for)
                (NP (JJ extry) (NNS rations)))
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP treat)
                    (S
                      (NP (PRP us))
                      (ADJP (JJ rational)))))))))))
    (. .)))

nsubj(talk-2, You-1)
ccomp(fires-16, talk-2)
nmod:poss(food-6, o-3)
case(o-3, '-4)
amod(food-6, better-5)
dobj(talk-2, food-6)
case(us-8, for-7)
nmod:for(food-6, us-8)
nmod:poss(schools-12, an-10)
case(schools-12, '-11)
dobj(talk-2, schools-12)
nsubj(fires-16, an-14)
root(ROOT-0, fires-16)
advmod(fires-16, an-18)
dobj(fires-16, all-20)
nsubj(wait-24, We-22)
aux(wait-24, 'll-23)
dep(all-20, wait-24)
case(rations-27, for-25)
amod(rations-27, extry-26)
nmod:for(wait-24, rations-27)
mark(treat-30, if-28)
nsubj(treat-30, you-29)
advcl(wait-24, treat-30)
nsubj(rational-32, us-31)
xcomp(treat-30, rational-32)

(ROOT
  (S
    (S
      (VP (VBP Do) (RB n't)
        (VP
          (VP (VB mess)
            (PP (IN about)
              (NP (DT the) (JJ cook-room) (NNS slops))))
          (, ,)
          (CC but)
          (VP (VB prove)
            (NP (PRP it))
            (PP (TO to)
              (NP (PRP$ our) (NN face)))))))
    (NP
      (NP (DT The) (NNP Widow) (POS 's))
      (NNP Uniform))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT the) (NN soldier-man) (POS 's))
        (NN disgrace)))
    (. .)))

aux(mess-3, Do-1)
neg(mess-3, n't-2)
dep(disgrace-24, mess-3)
case(slops-7, about-4)
det(slops-7, the-5)
amod(slops-7, cook-room-6)
nmod:about(mess-3, slops-7)
cc(mess-3, but-9)
conj:but(mess-3, prove-10)
dep(disgrace-24, prove-10)
dobj(prove-10, it-11)
case(face-14, to-12)
nmod:poss(face-14, our-13)
nmod:to(prove-10, face-14)
det(Widow-16, The-15)
nmod:poss(Uniform-18, Widow-16)
case(Widow-16, 's-17)
nsubj(disgrace-24, Uniform-18)
cop(disgrace-24, is-19)
neg(disgrace-24, not-20)
det(soldier-man-22, the-21)
nmod:poss(disgrace-24, soldier-man-22)
case(soldier-man-22, 's-23)
root(ROOT-0, disgrace-24)

(ROOT
  (S
    (PP (IN For)
      (S
        (NP (PRP it) (POS 's))
        (VP (VBG Tommy)
          (NP (DT this)))))
    (, ,)
    (NP (DT an))
    (PRN
      (S
        (VP (`` ') (VB Tommy)
          (NP (DT that))
          (, ,)
          (NP (DT an))
          ('' '))))
    (`` ``)
    (VP (VBD Chuck)
      (NP (PRP him))
      (PRT (RP out))
      (, ,)
      (S
        (NP (DT the) (NN brute))))
    (. !) ('' '')))

mark(Tommy-4, For-1)
nsubj(Tommy-4, it-2)
case(it-2, 's-3)
advcl(Chuck-15, Tommy-4)
dobj(Tommy-4, this-5)
nsubj(Chuck-15, an-7)
parataxis(Chuck-15, Tommy-9)
dobj(Tommy-9, that-10)
dobj(Tommy-9, an-12)
root(ROOT-0, Chuck-15)
dobj(Chuck-15, him-16)
compound:prt(Chuck-15, out-17)
det(brute-20, the-19)
xcomp(Chuck-15, brute-20)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ 's) (`` ``)
      (NP
        (NP (NNP Saviour))
        (PP (IN of)
          (NP (`` `)
            (S
              (VP (VBZ is)
                (NP (NN country))
                ('' '')
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (DT the) (NNS guns))
                    (VP (VBP begin)
                      (NP
                        (NP
                          (S
                            (VP (TO to)
                              (VP (VB shoot))))
                          (: ;)
                          (NP
                            (NP
                              (NP (NNP An) (POS '))
                              (NP (PRP it) (POS 's))
                              (NNP Tommy))
                            (NP (DT this))))
                        (, ,)
                        (NP
                          (NP (DT an))
                          ('' ')
                          (VP (VBN Tommy)
                            (NP (DT that)))
                          (, ,))))))))
            (, an) ('' ')
            (NP
              (NP (NN anything))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP please)
                    (S (: ;)
                      (S
                        (NP
                          (NP (NNP An) (POS '))
                          (NNP Tommy))
                        (VP (VBP ai) (RB n't)
                          (NP
                            (NP (DT a) (NN bloomin) (POS '))
                            (NN fool))))
                      (: --)
                      (S
                        (NP (PRP you))
                        (VP (VBP bet)
                          (SBAR (IN that)
                            (S
                              (NP (NNP Tommy))
                              (VP (VBZ sees)))))))))))))))
    (. !)))

cc(Saviour-5, But-1)
nsubj(Saviour-5, it-2)
cop(Saviour-5, 's-3)
root(ROOT-0, Saviour-5)
case(anything-32, of-6)
cop(country-9, is-8)
dep(anything-32, country-9)
advmod(begin-14, when-11)
det(guns-13, the-12)
nsubj(begin-14, guns-13)
advcl(country-9, begin-14)
mark(shoot-16, to-15)
dep(Tommy-22, shoot-16)
nmod:poss(Tommy-22, An-18)
case(An-18, '-19)
nmod:poss(Tommy-22, it-20)
case(it-20, 's-21)
dobj(begin-14, Tommy-22)
dep(Tommy-22, this-23)
appos(Tommy-22, an-25)
acl(an-25, Tommy-27)
dobj(Tommy-27, that-28)
nmod:of(Saviour-5, anything-32)
nsubj(please-34, you-33)
acl:relcl(anything-32, please-34)
nmod:poss(Tommy-38, An-36)
case(An-36, '-37)
nsubj(fool-44, Tommy-38)
cop(fool-44, ai-39)
neg(fool-44, n't-40)
det(bloomin-42, a-41)
nmod:poss(fool-44, bloomin-42)
case(bloomin-42, '-43)
xcomp(please-34, fool-44)
nsubj(bet-47, you-46)
parataxis(fool-44, bet-47)
mark(sees-50, that-48)
nsubj(sees-50, Tommy-49)
ccomp(bet-47, sees-50)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (`` ``)
            (NP (NNP FUZZY-WUZZY))
            ('' '')
            (PRN (-LRB- -LRB-)
              (NP (NNP Soudan) (NNP Expeditionary) (NNP Force))
              (-RRB- -RRB-)))
          (SBAR
            (S
              (NP (PRP We))
              (VP (VBP 've)
                (VP (VBN fought)
                  (PP (IN with)
                    (NP
                      (NP (JJ many) (NNS men) (NN acrost))
                      (SBAR
                        (S
                          (NP
                            (NP (DT the) (NNS seas))
                            (, ,)
                            (NP
                              (NP (NNP An) (POS '))
                              (NP
                                (NP (DT some))
                                (PP (IN of)
                                  (NP (PRP 'em))))))
                          (VP (VBD was)
                            (ADJP (JJ brave))))))))))))
        (, an) ('' ')
        (NP (DT some)))
      (VP (VBD was) (RB not)))
    (: :)
    (S
      (NP
        (NP (DT The) (NNP Paythan))
        (, an) ('' ')
        (NP
          (NP (DT the) (NNP Zulu))
          (NP (DT an)))
        ('' '))
      (VP (VBP Burmese)))
    (: ;)
    (CC But)
    (S
      (NP (DT the) (NNP Fuzzy))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJS finest) (NN o) (POS '))
          (NP (DT the) (NN lot)))))
    (. .)))

nsubj(was-29, FUZZY-WUZZY-2)
compound(Force-7, Soudan-5)
compound(Force-7, Expeditionary-6)
appos(FUZZY-WUZZY-2, Force-7)
nsubj(fought-11, We-9)
aux(fought-11, 've-10)
acl:relcl(FUZZY-WUZZY-2, fought-11)
case(acrost-15, with-12)
amod(acrost-15, many-13)
compound(acrost-15, men-14)
nmod:with(fought-11, acrost-15)
det(seas-17, the-16)
nsubj(brave-25, seas-17)
appos(seas-17, An-19)
case(An-19, '-20)
dep(An-19, some-21)
case('em-23, of-22)
nmod:of(some-21, 'em-23)
cop(brave-25, was-24)
acl:relcl(acrost-15, brave-25)
dep(FUZZY-WUZZY-2, some-28)
root(ROOT-0, was-29)
neg(was-29, not-30)
det(Paythan-33, The-32)
nsubj(Burmese-40, Paythan-33)
det(Zulu-37, the-36)
dep(Paythan-33, Zulu-37)
dep(Zulu-37, an-38)
conj:but(was-29, Burmese-40)
cc(was-29, But-42)
det(Fuzzy-44, the-43)
nsubj(o-48, Fuzzy-44)
cop(o-48, was-45)
det(o-48, the-46)
amod(o-48, finest-47)
conj:but(was-29, o-48)
case(o-48, '-49)
det(lot-51, the-50)
dep(o-48, lot-51)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (ADVP (RB never))
        (VBD got)
        (NP (DT a) (NN ha))
        (`` `)
        (NP
          (NP
            (NP (NN porth) (POS 's))
            (NN change))
          (PP (IN of) (`` `)
            (NP (NN im))))))
    (: :) ('' ')
    (S
      (NP
        (NP (NN E))
        (VP (VBN squatted)
          (PP (IN in)
            (NP (DT the) (NN scrub))))
        (, an) ('' '))
      (`` `)
      (VP (VBD ocked)
        (NP
          (NP (PRP$ our) (`` `) (NN orses))
          (, ,) ('' ')
          (PRN
            (S
              (NP (NNP E))
              (VP (VBD cut)
                (NP (PRP$ our) (NNS sentries))
                (PRT (RP up))
                (PP (IN at)
                  (NP (NNP Sua_kim) (NNP _))))))
          (, ,)
          (NP
            (NP
              (NP (NNP An) (POS '))
              ('' ') (NN e))
            (VP (VBN played)
              (NP
                (NP (DT the) (JJ cat) (DT an))
                (POS ') (NN banjo))
              (PP (IN with)
                (NP (PRP$ our) (NNS forces))))))))
    (. .)))

nsubj(got-3, We-1)
neg(got-3, never-2)
root(ROOT-0, got-3)
det(ha-5, a-4)
dobj(got-3, ha-5)
nmod:poss(change-9, porth-7)
case(porth-7, 's-8)
dobj(got-3, change-9)
case(im-12, of-10)
nmod:of(change-9, im-12)
nsubj(ocked-23, E-15)
acl(E-15, squatted-16)
case(scrub-19, in-17)
det(scrub-19, the-18)
nmod:in(squatted-16, scrub-19)
parataxis(got-3, ocked-23)
nmod:poss(orses-26, our-24)
dobj(ocked-23, orses-26)
nsubj(cut-30, E-29)
dep(orses-26, cut-30)
nmod:poss(sentries-32, our-31)
dobj(cut-30, sentries-32)
compound:prt(cut-30, up-33)
case(_-36, at-34)
compound(_-36, Sua_kim-35)
nmod:at(cut-30, _-36)
nmod:poss(e-41, An-38)
case(An-38, '-39)
appos(orses-26, e-41)
acl(e-41, played-42)
det(cat-44, the-43)
nmod:poss(banjo-47, cat-44)
dep(cat-44, an-45)
case(banjo-47, '-46)
dobj(played-42, banjo-47)
case(forces-50, with-48)
nmod:poss(forces-50, our-49)
nmod:with(played-42, forces-50)

(ROOT
  (S (CC So)
    (`` `)
    (NP (NN ere))
    (VP (VBZ 's)
      (ADJP (JJ _)
        (S
          (VP (TO to)
            (VP (VB _)
              (SBAR
                (S
                  (NP (PRP you))
                  (, ,)
                  (NP
                    (NP (NNP Fuzzy-Wuzzy))
                    (, ,)
                    (PP (IN at)
                      (NP
                        (NP (PRP$ your) (`` `) (NN ome))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NNP Soudan))
                            (: ;)
                            (SBAR
                              (S
                                (NP (PRP You))
                                (VP (VBP 're)
                                  (NP
                                    (NP (DT a)
                                      (ADJP (JJ pore) (JJ benighted))
                                      (`` `)
                                      (NX
                                        (NP (NN eathen))
                                        (PP (CC but)
                                          (NP (DT a) (JJ first-class) (NN fightin))))
                                      ('' ') (NN man))
                                    (: ;)
                                    (S
                                      (NP (PRP We))
                                      (VP (VBZ gives)
                                        (NP (PRP you))
                                        (NP (PRP$ your) (NN certificate))))))))
                            (, ,)))))
                    (, an) ('' ')
                    (SBAR (IN if)
                      (S
                        (NP (PRP you))
                        (VP (VBP want)
                          (SBAR
                            (S
                              (NP (PRP it))
                              (VP (VBD signed)
                                (SBAR
                                  (S
                                    (NP (PRP We))
                                    (VP (MD 'll)
                                      (VP (VB come)))))))))))
                    (, an) ('' '))
                  (`` `)
                  (VP (VBP ave)
                    (NP (DT a) (NN romp))
                    (PP (IN with)
                      (NP (PRP you)))
                    (SBAR
                      (WHADVP (WRB whenever))
                      (S
                        (NP (PRP you))
                        (VP (VBP 're)
                          (ADJP (JJ inclined)))))))))))))
    (. .)))

cc(_-5, So-1)
nsubj(_-5, ere-3)
nsubj:xsubj(_-7, ere-3)
cop(_-5, 's-4)
root(ROOT-0, _-5)
mark(_-7, to-6)
xcomp(_-5, _-7)
nsubj(ave-53, you-8)
nsubj(ave-53, Fuzzy-Wuzzy-10)
case(ome-15, at-12)
nmod:poss(ome-15, your-13)
nmod:at(Fuzzy-Wuzzy-10, ome-15)
case(Soudan-18, in-16)
det(Soudan-18, the-17)
nmod:in(ome-15, Soudan-18)
nsubj(man-32, You-20)
cop(man-32, 're-21)
det(man-32, a-22)
amod(benighted-24, pore-23)
amod(man-32, benighted-24)
dep(man-32, eathen-26)
case(fightin-30, but-27)
det(fightin-30, a-28)
amod(fightin-30, first-class-29)
nmod:but(eathen-26, fightin-30)
acl:relcl(Soudan-18, man-32)
nsubj(gives-35, We-34)
dep(man-32, gives-35)
iobj(gives-35, you-36)
nmod:poss(certificate-38, your-37)
dobj(gives-35, certificate-38)
mark(want-44, if-42)
nsubj(want-44, you-43)
dep(Fuzzy-Wuzzy-10, want-44)
nsubj(signed-46, it-45)
ccomp(want-44, signed-46)
nsubj(come-49, We-47)
aux(come-49, 'll-48)
ccomp(signed-46, come-49)
ccomp(_-7, ave-53)
det(romp-55, a-54)
dobj(ave-53, romp-55)
case(you-57, with-56)
nmod:with(ave-53, you-57)
advmod(inclined-61, whenever-58)
nsubj(inclined-61, you-59)
cop(inclined-61, 're-60)
advcl(ave-53, inclined-61)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD took)
        (NP (PRP$ our) (NN chanst))
        (PP (IN among)
          (NP
            (NP (DT the) (NNP Khyber))
            (`` `)
            (NP (NNS ills))))))
    (, ,)
    (S
      (NP (DT The) (NNPS Boers))
      (VP (VBD knocked)
        (S
          (NP (PRP us))
          (ADJP (JJ silly)
            (PP (IN at)
              (NP (DT a) (NN mile)))))))
    (, ,)
    (S
      (NP (DT The) (NNP Burman))
      (VP (VBP give)
        (NP (PRP us))
        (NP (NNP Irriwaddy) (NNS chills))))
    (, ,)
    (S
      (NP (NNP An) (POS ') (DT a) (NNP Zulu) (NNP _) (NN impi) (NNS _))
      (VP (VBD dished)
        (NP (PRP us))
        (PRT (RP up))
        (PP (IN in)
          (NP (NN style)))))
    (: :)
    (S (CC But)
      (ADVP (DT all))
      (NP (PRP we))
      (VP
        (ADVP (RB ever))
        (VBD got)
        (PP (IN from)
          (NP (JJ such)))
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP (VBD Was)
              (ADJP (JJ pop)
                (PP (TO to)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (DT the) (NNP Fuzzy))
                      (VP (VBD made)
                        (SBAR
                          (S
                            (NP (PRP us))
                            (VP (VBP swaller))))))))))))))
    (: ;)
    (S
      (NP (PRP We))
      (`` `)
      (VP (VBP eld)
        (NP
          (NP (PRP$ our) (NN bloomin) (POS '))
          (JJ own))))
    (, ,)
    (S
      (NP (DT the) (NNS papers))
      (VP (VBP say)))
    (, ,)
    (CC But)
    (S
      (NP
        (NP (NN man))
        (PP (IN for)
          (NP (NN man))))
      (NP (DT the) (NNP Fuzzy))
      (VP (VBD knocked)
        (S
          (NP (PRP us))
          (`` `)
          (ADJP (JJ oller)))))
    (. .)))

nsubj(took-2, We-1)
root(ROOT-0, took-2)
nmod:poss(chanst-4, our-3)
dobj(took-2, chanst-4)
case(Khyber-7, among-5)
det(Khyber-7, the-6)
nmod:among(took-2, Khyber-7)
dep(Khyber-7, ills-9)
det(Boers-12, The-11)
nsubj(knocked-13, Boers-12)
ccomp(took-2, knocked-13)
nsubj(silly-15, us-14)
xcomp(knocked-13, silly-15)
case(mile-18, at-16)
det(mile-18, a-17)
nmod:at(silly-15, mile-18)
det(Burman-21, The-20)
nsubj(give-22, Burman-21)
ccomp(took-2, give-22)
iobj(give-22, us-23)
compound(chills-25, Irriwaddy-24)
dobj(give-22, chills-25)
nmod:poss(_-33, An-27)
case(_-33, '-28)
det(_-33, a-29)
compound(_-33, Zulu-30)
compound(_-33, _-31)
compound(_-33, impi-32)
nsubj(dished-34, _-33)
conj:but(took-2, dished-34)
dobj(dished-34, us-35)
compound:prt(dished-34, up-36)
case(style-38, in-37)
nmod:in(dished-34, style-38)
cc(got-44, But-40)
advmod(got-44, all-41)
nsubj(got-44, we-42)
advmod(got-44, ever-43)
conj:but(took-2, got-44)
case(such-46, from-45)
nmod:from(got-44, such-46)
mark(pop-50, as-47)
nsubj(pop-50, they-48)
cop(pop-50, Was-49)
advcl(got-44, pop-50)
mark(made-55, to-51)
dobj(made-55, what-52)
det(Fuzzy-54, the-53)
nsubj(made-55, Fuzzy-54)
advcl(pop-50, made-55)
nsubj(swaller-57, us-56)
ccomp(made-55, swaller-57)
nsubj(eld-61, We-59)
conj:but(took-2, eld-61)
nmod:poss(bloomin-63, our-62)
dobj(eld-61, bloomin-63)
case(bloomin-63, '-64)
amod(bloomin-63, own-65)
det(papers-68, the-67)
nsubj(say-69, papers-68)
ccomp(took-2, say-69)
cc(took-2, But-71)
nsubj(knocked-77, man-72)
case(man-74, for-73)
nmod:for(man-72, man-74)
det(Fuzzy-76, the-75)
nsubj(knocked-77, Fuzzy-76)
conj:but(took-2, knocked-77)
dep(oller-80, us-78)
xcomp(knocked-77, oller-80)

(ROOT
  (S (RB Then)
    (NP (`` `)
      (NP (NN ere))
      (SBAR
        (S
          (VP (VBZ 's)
            (ADJP (JJ _)
              (PP (TO to)
                (NP
                  (NP (NNP _) (PRP you) (, ,) (NNP Fuzzy-Wuzzy) (, ,))
                  (, an) ('' ')
                  (NP
                    (NP (DT the) (NNS missis))
                    (CC and)
                    (NP
                      (NP (DT the) (NN kid))
                      (: ;)
                      (NP
                        (NP (PRP$ Our) (NNS orders))
                        (SBAR
                          (S
                            (VP (VBD was)
                              (S
                                (VP (TO to)
                                  (VP (VB break)
                                    (NP (PRP you)))))))))
                      (, ,)))
                  (, an) ('' ')
                  (PP (IN of)
                    (NP (NN course)))
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (VBD went))))))))))
      (, an) ('' '))
    (VP (VBD did))
    (. .)))

advmod(did-35, Then-1)
nsubj(did-35, ere-3)
cop(_-5, 's-4)
acl:relcl(ere-3, _-5)
case(Fuzzy-Wuzzy-10, to-6)
compound(Fuzzy-Wuzzy-10, _-7)
dep(Fuzzy-Wuzzy-10, you-8)
nmod:to(_-5, Fuzzy-Wuzzy-10)
det(missis-15, the-14)
dep(Fuzzy-Wuzzy-10, missis-15)
cc(missis-15, and-16)
det(kid-18, the-17)
dep(Fuzzy-Wuzzy-10, kid-18)
conj:and(missis-15, kid-18)
nmod:poss(orders-21, Our-20)
dep(kid-18, orders-21)
acl:relcl(orders-21, was-22)
mark(break-24, to-23)
xcomp(was-22, break-24)
dobj(break-24, you-25)
case(course-30, of-29)
nmod:of(Fuzzy-Wuzzy-10, course-30)
nsubj(went-32, we-31)
acl:relcl(Fuzzy-Wuzzy-10, went-32)
root(ROOT-0, did-35)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD sloshed)
          (NP (PRP you))
          (PP (IN with)
            (NP (NNP Martinis))))
        (, ,)
        (NP
          (NP (DT an))
          ('' ')
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was) (RB n't)
                (ADJP (`` `) (RB ardly) (JJ fair))))))))
    (: ;)
    (S (CC But)
      (SBAR (IN for)
        (S
          (NP (PDT all) (DT the) (NNS odds))
          (VP (VBP agin) ('' ')
            (NP (PRP you))
            (, ,)
            (ADVP (RB Fuzzy-Wuz)))))
      (, ,)
      (NP (PRP you))
      (VP (VBD broke)
        (NP (DT the) (NN square))))
    (. .) ('' ')))

nsubj(sloshed-2, We-1)
root(ROOT-0, sloshed-2)
dobj(sloshed-2, you-3)
case(Martinis-5, with-4)
nmod:with(sloshed-2, Martinis-5)
dobj(sloshed-2, an-7)
nsubj(fair-14, it-9)
cop(fair-14, was-10)
neg(fair-14, n't-11)
advmod(fair-14, ardly-13)
acl:relcl(an-7, fair-14)
cc(broke-28, But-16)
mark(agin-21, for-17)
det:predet(odds-20, all-18)
det(odds-20, the-19)
nsubj(agin-21, odds-20)
advcl(broke-28, agin-21)
dobj(agin-21, you-23)
advmod(agin-21, Fuzzy-Wuz-25)
nsubj(broke-28, you-27)
parataxis(sloshed-2, broke-28)
det(square-30, the-29)
dobj(broke-28, square-30)

(ROOT
  (S
    (S
      (NP (NNP E))
      (VP (`` `)
        (ADVP (RB as) (RB n't))
        (VP (VBD got)
          (NP
            (NP (DT no) (NNS papers))
            (PP (IN of)
              (NP (`` `)
                (S
                  (VP (VBZ is)
                    (ADJP (JJ own))))
                (, ,) ('' ')
                (NP
                  (NP (NN E))
                  (SBAR
                    (S
                      (VP (`` `)
                        (ADVP (RB as) (RB n't))
                        (VBD got)
                        (NP (DT no) (NNS medals))))))))))
        (CC nor)
        (VP (VBZ rewards))))
    (, ,) (IN So)
    (S
      (NP (PRP we))
      (VP (MD must)
        (VP (VB certify)
          (NP
            (NP (DT the) (NN skill) (`` `)
              (NX
                (S
                  (NP (NNP e))
                  (VP (VBZ 's)
                    (VP (VBN shown)
                      (PP (IN In)
                        (NP (NN usin)))))))
              ('' '))
            (PP (IN of)
              (NP (`` `)
                (S
                  (VP (VBZ is)
                    (ADVP (RB long))
                    (NP
                      (NP (CD two))
                      (: -) (`` `)
                      (NP (JJ anded) (NNS swords))
                      (: :)
                      (SBAR
                        (WHADVP (WRB When))
                        (S
                          (NP
                            (NP (`` `)
                              (NP
                                (NP (NNP e) (POS 's))
                                (`` `) (NN oppin) ('' '))
                              (PP (IN in)
                                (NP (DT an)))
                              ('' '))
                            (ADJP (IN out)
                              (PP (IN among)
                                (NP (DT the) (NN bush)))
                              (PP (IN With))))
                          (`` `)
                          (VP (VBZ is)
                            (NP
                              (NP (NN coffin))
                              (: -) (`` `)
                              (NP (JJ eaded) (NN shield)))))))))
                (, an) ('' ')
                (NP
                  (NP (NN shovel-spear))
                  (, ,)
                  (NP
                    (NP (DT An) (`` `) (JJ appy) (NN day))
                    (PP (IN with)
                      (NP
                        (NP (NNP Fuzzy))
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NN rush))
                            (SBAR
                              (S
                                (NP (NNP Will))
                                (VP (VB last)
                                  (NP (DT an) (`` `) (JJ ealthy) (NNP Tommy))
                                  (PP (IN for)
                                    (NP (DT a) (NN year))))))))))))))))))
    (. .)))

nsubj(got-5, E-1)
nsubj(rewards-22, E-1)
advmod(n't-4, as-3)
neg(got-5, n't-4)
root(ROOT-0, got-5)
neg(papers-7, no-6)
dobj(got-5, papers-7)
case(E-14, of-8)
cop(own-11, is-10)
dep(E-14, own-11)
nmod:of(papers-7, E-14)
advmod(n't-17, as-16)
neg(got-18, n't-17)
acl:relcl(E-14, got-18)
neg(medals-20, no-19)
dobj(got-18, medals-20)
cc(got-5, nor-21)
conj:nor(got-5, rewards-22)
dep(got-5, So-24)
nsubj(certify-27, we-25)
aux(certify-27, must-26)
parataxis(got-5, certify-27)
det(shown-33, the-28)
dep(shown-33, skill-29)
nsubjpass(shown-33, e-31)
auxpass(shown-33, 's-32)
dobj(certify-27, shown-33)
case(usin-35, In-34)
nmod:in(shown-33, usin-35)
case(shovel-spear-71, of-37)
cop(two-41, is-39)
advmod(two-41, long-40)
dep(shovel-spear-71, two-41)
amod(swords-45, anded-44)
dep(two-41, swords-45)
advmod(coffin-64, When-47)
nmod:poss(oppin-52, e-49)
case(e-49, 's-50)
nsubj(coffin-64, oppin-52)
case(an-55, in-54)
nmod:in(oppin-52, an-55)
amod(oppin-52, out-57)
case(bush-60, among-58)
det(bush-60, the-59)
nmod:with(out-57, bush-60)
case(bush-60, With-61)
cop(coffin-64, is-63)
acl:relcl(two-41, coffin-64)
amod(shield-68, eaded-67)
dep(coffin-64, shield-68)
nmod:of(shown-33, shovel-spear-71)
det(day-76, An-73)
amod(day-76, appy-75)
appos(shovel-spear-71, day-76)
case(Fuzzy-78, with-77)
nmod:with(day-76, Fuzzy-78)
case(rush-81, on-79)
det(rush-81, the-80)
nmod:on(Fuzzy-78, rush-81)
nsubj(last-83, Will-82)
acl:relcl(rush-81, last-83)
det(Tommy-87, an-84)
amod(Tommy-87, ealthy-86)
dobj(last-83, Tommy-87)
case(year-90, for-88)
det(year-90, a-89)
nmod:for(last-83, year-90)

(ROOT
  (S (CC So)
    (`` `)
    (NP (NN ere))
    (VP (VBZ 's)
      (ADJP (JJ _)
        (PP (TO to)
          (NP
            (NP (NNP _) (PRP you) (, ,) (NNP Fuzzy-Wuzzy) (, ,))
            (, an) ('' ')
            (NP
              (NP (PRP$ your) (NNS friends))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBP are)
                    (ADVP
                      (ADVP (RB no) (RBR more))
                      (PRN (, ,)
                        (SBAR (IN If)
                          (S
                            (S
                              (NP (PRP we))
                              (`` `)
                              (NP (NN ad))
                              (ADVP (RB n't))
                              (VP (VBD lost)
                                (SBAR
                                  (S
                                    (NP (DT some))
                                    (VP (VBZ messmates)
                                      (SBAR
                                        (S
                                          (NP (PRP we))
                                          (VP (MD would) (`` `)
                                            (VP (VB elp)
                                              (S
                                                (NP (PRP you))
                                                (VP (TO to)
                                                  (VP (VB deplore)))))))))))))
                            (: ;)
                            (S
                              (S (CC But)
                                (VP (VB give)
                                  (NP (DT an)
                                    (S
                                      (NP (POS '))
                                      (VP (VBP take))))))
                              (VP (VBZ 's)
                                (NP (DT the) (NN gospel))))))
                        (, ,)))))))
            (, an) ('' ')
            (SBAR
              (S
                (S
                  (NP (PRP we))
                  (VP (MD 'll)
                    (VP (VB call)
                      (S
                        (NP (DT the) (NN bargain))
                        (ADJP (JJ fair))))))
                (, ,) (IN For)
                (S
                  (SBAR (IN if)
                    (S
                      (NP (PRP you))
                      (`` `)
                      (ADVP (RB ave))
                      (VP (VBD lost)
                        (NP (JJR more))
                        (PP (IN than)
                          (NP (PRP us))))))
                  (, ,)
                  (NP (PRP you))
                  (VP (VBD crumpled)
                    (PRT (RP up))
                    (NP (DT the) (NN square))))))))))
    (. !) ('' ')))

cc(_-5, So-1)
nsubj(_-5, ere-3)
cop(_-5, 's-4)
root(ROOT-0, _-5)
case(Fuzzy-Wuzzy-10, to-6)
compound(Fuzzy-Wuzzy-10, _-7)
dep(Fuzzy-Wuzzy-10, you-8)
nmod:to(_-5, Fuzzy-Wuzzy-10)
nmod:poss(friends-15, your-14)
dep(Fuzzy-Wuzzy-10, friends-15)
nsubj(are-17, friends-15)
ref(friends-15, which-16)
acl:relcl(friends-15, are-17)
neg(more-19, no-18)
advmod(are-17, more-19)
mark(lost-26, If-21)
nsubj(lost-26, we-22)
nsubj(lost-26, ad-24)
neg(lost-26, n't-25)
dep(more-19, lost-26)
nsubj(messmates-28, some-27)
ccomp(lost-26, messmates-28)
nsubj(elp-32, we-29)
aux(elp-32, would-30)
ccomp(messmates-28, elp-32)
dobj(elp-32, you-33)
nsubj:xsubj(deplore-35, you-33)
mark(deplore-35, to-34)
xcomp(elp-32, deplore-35)
cc(give-38, But-37)
csubj(gospel-44, give-38)
dobj(give-38, an-39)
nsubj(take-41, '-40)
dep(an-39, take-41)
cop(gospel-44, 's-42)
det(gospel-44, the-43)
parataxis(lost-26, gospel-44)
nsubj(call-50, we-48)
aux(call-50, 'll-49)
acl:relcl(Fuzzy-Wuzzy-10, call-50)
det(bargain-52, the-51)
nsubj(fair-53, bargain-52)
xcomp(call-50, fair-53)
dep(call-50, For-55)
mark(lost-60, if-56)
nsubj(lost-60, you-57)
advmod(lost-60, ave-59)
advcl(crumpled-66, lost-60)
dobj(lost-60, more-61)
case(us-63, than-62)
nmod:than(lost-60, us-63)
nsubj(crumpled-66, you-65)
parataxis(call-50, crumpled-66)
compound:prt(crumpled-66, up-67)
det(square-69, the-68)
dobj(crumpled-66, square-69)

(ROOT
  (S
    (NP (NNP E))
    (VP (VBZ rushes)
      (PP (IN at)
        (NP (DT the) (NN smoke)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBP let)
            (NP (NN drive)))))
      (, ,)
      (S
        (NP (NNP An) (POS ')))
      (, ,)
      (SBAR (IN before)
        (S
          (NP (PRP we))
          (VP (VBP know) (, ,) (`` `)
            (SBAR
              (S
                (NP (NNP e))
                (VP (VBZ 's)
                  (ADJP (`` `) (JJ ackin) ('' ')
                    (PP (IN at)
                      (NP
                        (NP (PRP$ our) (`` `) (NN ead))
                        (: ;)
                        (NP (`` `)
                          (NP
                            (NP (NNP E) (POS 's))
                            (NP (DT all) (`` `) (JJ ot) (NN sand)))
                          (, an) ('' ')
                          (NP
                            (NP (NN ginger))
                            (SBAR
                              (WHADVP (WRB when))
                              (S
                                (ADVP (RB alive))
                                (, ,)
                                (NP
                                  (NP (NNP An) (POS '))
                                  (`` `) (NNS e))
                                (VP (VBZ 's)
                                  (ADJP (RB generally) (JJ shammin) ('' ')
                                    (SBAR
                                      (WHADVP (WRB when))
                                      (S (`` `)
                                        (NP (NNP e))
                                        (VP (VBZ 's)
                                          (ADJP (JJ dead)))))))))))))))))))))
    (. .)))

nsubj(rushes-2, E-1)
root(ROOT-0, rushes-2)
case(smoke-5, at-3)
det(smoke-5, the-4)
nmod:at(rushes-2, smoke-5)
advmod(let-8, when-6)
nsubj(let-8, we-7)
advcl(rushes-2, let-8)
dobj(let-8, drive-9)
xcomp(rushes-2, An-11)
case(An-11, '-12)
mark(know-16, before-14)
nsubj(know-16, we-15)
advcl(rushes-2, know-16)
nsubj(ackin-22, e-19)
cop(ackin-22, 's-20)
ccomp(know-16, ackin-22)
case(ead-27, at-24)
nmod:poss(ead-27, our-25)
nmod:at(ackin-22, ead-27)
dep(ead-27, E-30)
case(E-30, 's-31)
det(sand-35, all-32)
amod(sand-35, ot-34)
dep(E-30, sand-35)
dep(E-30, ginger-38)
advmod(shammin-48, when-39)
advmod(shammin-48, alive-40)
nmod:poss(e-45, An-42)
case(An-42, '-43)
nsubj(shammin-48, e-45)
cop(shammin-48, 's-46)
advmod(shammin-48, generally-47)
acl:relcl(ginger-38, shammin-48)
advmod(dead-54, when-50)
nsubj(dead-54, e-52)
cop(dead-54, 's-53)
ccomp(shammin-48, dead-54)

(ROOT
  (S (`` `)
    (S
      (NP (NNP E))
      (VP (VBZ 's)
        (NP (DT a) (NN daisy))))
    (, ,) (`` `)
    (NP (NNP e))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN ducky))
        (, ,) (`` `)
        (NP
          (NP (NNP e) (POS 's))
          (NP (DT a) (NN lamb)))))
    (. !)))

nsubj(daisy-5, E-2)
cop(daisy-5, 's-3)
det(daisy-5, a-4)
ccomp(ducky-11, daisy-5)
nsubj(ducky-11, e-8)
cop(ducky-11, 's-9)
det(ducky-11, a-10)
root(ROOT-0, ducky-11)
dep(ducky-11, e-14)
case(e-14, 's-15)
det(lamb-17, a-16)
dep(e-14, lamb-17)

(ROOT
  (S (`` `)
    (S
      (NP (NNP E))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (JJ injia-rubber) (NN idiot))
          (PP (IN on)
            (NP (DT the) (NN spree))))))
    (, ,) (`` `)
    (NP (NNP E))
    (VP (VBZ 's)
      (NP
        (NP (DT the)
          (ADJP (IN on))
          ('' ') (NN y) (NN thing))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ does) (RB n't)
              (VP (VB give)
                (S
                  (NP (DT a) (NN damn))
                  (PP (IN For)
                    (NP
                      (NP (DT a) (NNP Regiment) (NN o) (POS '))
                      (NNP British) (NNP Infantree))))))))))
    (. !)))

nsubj(idiot-6, E-2)
cop(idiot-6, 's-3)
det(idiot-6, a-4)
amod(idiot-6, injia-rubber-5)
ccomp(thing-18, idiot-6)
case(spree-9, on-7)
det(spree-9, the-8)
nmod:on(idiot-6, spree-9)
nsubj(thing-18, E-12)
cop(thing-18, 's-13)
det(thing-18, the-14)
amod(thing-18, on-15)
compound(thing-18, y-17)
root(ROOT-0, thing-18)
nsubj(give-22, thing-18)
ref(thing-18, that-19)
aux(give-22, does-20)
neg(give-22, n't-21)
acl:relcl(thing-18, give-22)
det(damn-24, a-23)
xcomp(give-22, damn-24)
case(Infantree-31, For-25)
det(o-28, a-26)
compound(o-28, Regiment-27)
nmod:poss(Infantree-31, o-28)
case(o-28, '-29)
compound(Infantree-31, British-30)
dep(damn-24, Infantree-31)

(ROOT
  (S
    (S (CC So)
      (`` `)
      (NP (NN ere))
      (VP (VBZ 's)
        (UCP
          (ADJP (JJ _)
            (PP (TO to)
              (NP
                (NP
                  (NP (NNP _) (PRP you) (, ,) (NNP Fuzzy-Wuzzy) (, ,))
                  (PP (IN at)
                    (NP
                      (NP (PRP$ your) (`` `) (NN ome))
                      (PP (IN in)
                        (NP (DT the) (NNP Soudan))))))
                (: ;)
                (S
                  (NP (PRP You))
                  (VP (VBP 're)
                    (NP (DT a) (JJ pore) (JJ benighted) (`` `) (NN eathen)))))))
          (CC but)
          (NP
            (NP (DT a) (JJ first-class) (NN fightin) (POS '))
            (NN man)))))
    (: ;)
    (S
      (NP
        (NP (NNP An) (POS '))
        (`` `) (NN ere))
      (VP (VBZ 's)
        (ADJP (JJ _)
          (PP (TO to)
            (NP
              (NP (NNP _) (PRP you) (, ,) (NNP Fuzzy-Wuzzy) (, ,))
              (PP (IN with)
                (NP
                  (NP (PRP$ your) (`` `) (JJ ayrick) (`` `) (NN ead))
                  (PP (IN of) (`` `)
                    (S
                      (VP (NN air)
                        (PRN (: --)
                          (S
                            (NP (PRP You))
                            (ADJP (JJ big))))
                        (NP
                          (NP (JJ black) (NN boundin) (POS '))
                          (NN beggar))))))))))
        (: --)
        (SBAR (IN for)
          (S
            (NP (PRP you))
            (VP (VBD broke)
              (NP (DT a) (JJ British) (NN square)))))))
    (. !)))

cc(_-5, So-1)
nsubj(_-5, ere-3)
cop(_-5, 's-4)
root(ROOT-0, _-5)
case(Fuzzy-Wuzzy-10, to-6)
compound(Fuzzy-Wuzzy-10, _-7)
dep(Fuzzy-Wuzzy-10, you-8)
nmod:to(_-5, Fuzzy-Wuzzy-10)
case(ome-15, at-12)
nmod:poss(ome-15, your-13)
nmod:at(Fuzzy-Wuzzy-10, ome-15)
case(Soudan-18, in-16)
det(Soudan-18, the-17)
nmod:in(ome-15, Soudan-18)
nsubj(eathen-26, You-20)
cop(eathen-26, 're-21)
det(eathen-26, a-22)
amod(eathen-26, pore-23)
amod(eathen-26, benighted-24)
parataxis(Fuzzy-Wuzzy-10, eathen-26)
cc(_-5, but-27)
det(fightin-30, a-28)
amod(fightin-30, first-class-29)
nmod:poss(man-32, fightin-30)
case(fightin-30, '-31)
conj:but(_-5, man-32)
nmod:poss(ere-37, An-34)
case(An-34, '-35)
nsubj(_-39, ere-37)
cop(_-39, 's-38)
parataxis(_-5, _-39)
case(Fuzzy-Wuzzy-44, to-40)
compound(Fuzzy-Wuzzy-44, _-41)
dep(Fuzzy-Wuzzy-44, you-42)
nmod:to(_-39, Fuzzy-Wuzzy-44)
case(ead-51, with-46)
nmod:poss(ead-51, your-47)
amod(ead-51, ayrick-49)
nmod:with(Fuzzy-Wuzzy-44, ead-51)
case(air-54, of-52)
acl(ead-51, air-54)
dep(big-57, You-56)
parataxis(air-54, big-57)
amod(boundin-59, black-58)
nmod:poss(beggar-61, boundin-59)
case(boundin-59, '-60)
dobj(air-54, beggar-61)
mark(broke-65, for-63)
nsubj(broke-65, you-64)
advcl(_-39, broke-65)
det(square-68, a-66)
amod(square-68, British-67)
dobj(broke-65, square-68)

(ROOT
  (S
    (NP (NNP SOLDIER) (, ,) (NNP SOLDIER) (`` ``) (NNP Soldier) (, ,) (NNP soldier))
    (VP (VBP come)
      (SBAR
        (SBARQ
          (PP (IN from)
            (NP (DT the) (NNS wars)))
          (, ,)
          (WHADVP (WRB Why))
          (SQ (VBP do) (RB n't)
            (NP (PRP you))
            (VP (VB march)
              (PP (IN with)
                (NP (PRP$ my) (JJ true) (NN love)))))
          (. ?) ('' ''))))))

compound(soldier-7, SOLDIER-1)
appos(soldier-7, SOLDIER-3)
compound(soldier-7, Soldier-5)
nsubj(come-8, soldier-7)
root(ROOT-0, come-8)
case(wars-11, from-9)
det(wars-11, the-10)
nmod:from(march-17, wars-11)
advmod(march-17, Why-13)
aux(march-17, do-14)
neg(march-17, n't-15)
nsubj(march-17, you-16)
dep(come-8, march-17)
case(love-21, with-18)
nmod:poss(love-21, my-19)
amod(love-21, true-20)
nmod:with(march-17, love-21)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (ADJP (JJ fresh)
          (PP (IN from)
            (PP (IN off)
              (NP (DT the)
                (NP (NN ship))
                (, an) ('' ') (`` `)
                (NP
                  (NP (NNP e) (POS 's))
                  (NN maybe)))))))
      (VP (VB give)
        (NP (DT the) (NN slip))
        (, ,)
        (NP (NNP An))))
    ('' ')
    (NP (PRP you))
    (VP (MD 'd)
      (ADVP (RBS best))
      (VP (VB go)
        (NP (NN look))
        (PP (IN for)
          (NP (DT a) (JJ new) (NN love)))))
    (. .) ('' '')))

nsubj(fresh-4, We-2)
cop(fresh-4, 're-3)
ccomp(go-24, fresh-4)
case(ship-8, from-5)
case(ship-8, off-6)
det(ship-8, the-7)
nmod:off(fresh-4, ship-8)
nmod:poss(maybe-14, e-12)
case(e-12, 's-13)
dep(ship-8, maybe-14)
dep(fresh-4, give-15)
det(slip-17, the-16)
dobj(give-15, slip-17)
dobj(give-15, An-19)
nsubj(go-24, you-21)
aux(go-24, 'd-22)
advmod(go-24, best-23)
root(ROOT-0, go-24)
dobj(go-24, look-25)
case(love-29, for-26)
det(love-29, a-27)
amod(love-29, new-28)
nmod:for(go-24, love-29)

(ROOT
  (S
    (NP (NNP New))
    (VP (VBP love))
    (. !)))

nsubj(love-2, New-1)
root(ROOT-0, love-2)

(ROOT
  (S
    (NP (NNP True))
    (VP (VBP love))
    (. !)))

nsubj(love-2, True-1)
root(ROOT-0, love-2)

(ROOT
  (S
    (S
      (NP (JJS Best))
      (VP (VBP go)
        (SBAR
          (S
            (NP
              (NP
                (NP (NN look))
                (PP (IN for)
                  (NP
                    (NP (DT a) (JJ new) (NN love))
                    (, ,)
                    (NP
                      (NP (DT The) (NN dead))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (MD can) (RB not)
                            (VP (VB rise))))))
                    (, ,))))
              (, an) ('' ')
              (NP (PRP you)))
            (VP (MD 'd)
              (ADVP (RBR better))
              (VP (VB dry)
                (NP (PRP$ your) (NNS eyes))))))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (NN you))
    (VP (MD 'd)
      (ADVP (RBS best))
      (VP (VB go)
        (NP (NN look))
        (PP (IN for)
          (NP (DT a) (JJ new) (NN love)))))
    (. .)))

nsubj(go-2, Best-1)
ccomp(go-30, go-2)
nsubj(dry-21, look-3)
case(love-7, for-4)
det(love-7, a-5)
amod(love-7, new-6)
nmod:for(look-3, love-7)
det(dead-10, The-9)
appos(love-7, dead-10)
nsubj(rise-14, they-11)
aux(rise-14, can-12)
neg(rise-14, not-13)
acl:relcl(dead-10, rise-14)
dep(look-3, you-18)
aux(dry-21, 'd-19)
advmod(dry-21, better-20)
ccomp(go-2, dry-21)
nmod:poss(eyes-23, your-22)
dobj(dry-21, eyes-23)
nmod:poss(you-27, An-25)
case(An-25, '-26)
nsubj(go-30, you-27)
aux(go-30, 'd-28)
advmod(go-30, best-29)
root(ROOT-0, go-30)
dobj(go-30, look-31)
case(love-35, for-32)
det(love-35, a-33)
amod(love-35, new-34)
nmod:for(go-30, love-35)

(ROOT
  (FRAG (`` ``)
    (NP
      (NP (NNP Soldier))
      (, ,)
      (NP
        (NP (NN soldier))
        (VP (VBN come)
          (PP (IN from)
            (NP
              (NP (DT the) (NNS wars))
              (, ,)
              (SBAR
                (WHNP (WP What))
                (S
                  (VP (VBD did)
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP see)
                          (VP (VB o) ('' ')
                            (NP (PRP$ my) (JJ true) (NN love))))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Soldier-2)
appos(Soldier-2, soldier-4)
acl(soldier-4, come-5)
case(wars-8, from-6)
det(wars-8, the-7)
nmod:from(come-5, wars-8)
nsubj(did-11, wars-8)
ref(wars-8, What-10)
acl:relcl(wars-8, did-11)
nsubj(see-13, you-12)
ccomp(did-11, see-13)
xcomp(see-13, o-14)
nmod:poss(love-18, my-16)
amod(love-18, true-17)
dobj(o-14, love-18)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD seed) (`` `)
      (S
        (NP (NN im))
        (VP (VB serve)
          (NP (DT the) (NN Queen))
          (PP (IN in)
            (NP
              (NP (DT a) (NN suit) (NN o) (POS '))
              (NN rifle-green)))
          (, ,)
          (NP
            (NP (NNP An))
            ('' ')
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD 'd)
                  (ADVP (RBS best))
                  (VP (VB go)
                    (NP (NN look))
                    (PP (IN for)
                      (NP (DT a) (JJ new) (NN love)))))))))))
    (. .) ('' '')))

nsubj(seed-3, I-2)
root(ROOT-0, seed-3)
nsubj(serve-6, im-5)
ccomp(seed-3, serve-6)
det(Queen-8, the-7)
dobj(serve-6, Queen-8)
case(rifle-green-14, in-9)
det(o-12, a-10)
compound(o-12, suit-11)
nmod:poss(rifle-green-14, o-12)
case(o-12, '-13)
nmod:in(serve-6, rifle-green-14)
dobj(serve-6, An-16)
nsubj(go-21, you-18)
aux(go-21, 'd-19)
advmod(go-21, best-20)
acl:relcl(An-16, go-21)
dobj(go-21, look-22)
case(love-26, for-23)
det(love-26, a-24)
amod(love-26, new-25)
nmod:for(go-21, love-26)

(ROOT
  (X (`` ``)
    (NP
      (NP (NNP Soldier) (, ,) (NNP soldier))
      (VP (VBN come)
        (PP (IN from)
          (NP (DT the) (NNS wars)))))
    (, ,)
    (NP
      (SQ (VBD Did)
        (NP (PRP ye))
        (VP (VB see)
          (ADVP (DT no) (RBR more))))
      (VP (VB o) ('' ')
        (NP (PRP$ my) (JJ true) (NN love))))
    (. ?) ('' '')))

compound(soldier-4, Soldier-2)
dep(see-12, soldier-4)
acl(soldier-4, come-5)
case(wars-8, from-6)
det(wars-8, the-7)
nmod:from(come-5, wars-8)
aux(see-12, Did-10)
nsubj(see-12, ye-11)
root(ROOT-0, see-12)
neg(more-14, no-13)
advmod(see-12, more-14)
dep(see-12, o-15)
nmod:poss(love-19, my-17)
amod(love-19, true-18)
dobj(o-15, love-19)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBZ seed)
        (ADJP (`` `) (RB im) (JJ runnin) ('' ')
          (PP (IN by)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (DT the) (NNS shots))
                (VP (VBN begun)
                  (S
                    (VP (TO to)
                      (VP (VB fly)))))))))))
    (: --)
    (CC But)
    (S
      (NP (PRP you))
      (VP (MD 'd)
        (ADVP (RBS best))
        (VP (VB go)
          (NP (NN look))
          (PP (IN for)
            (NP (DT a) (JJ new) (NN love))))))
    (. .) ('' '')))

nsubj(seed-3, I-2)
root(ROOT-0, seed-3)
advmod(runnin-6, im-5)
xcomp(seed-3, runnin-6)
mark(begun-12, by-8)
advmod(begun-12, when-9)
det(shots-11, the-10)
nsubj(begun-12, shots-11)
nsubj:xsubj(fly-14, shots-11)
advcl(runnin-6, begun-12)
mark(fly-14, to-13)
xcomp(begun-12, fly-14)
cc(seed-3, But-16)
nsubj(go-20, you-17)
aux(go-20, 'd-18)
advmod(go-20, best-19)
conj:but(seed-3, go-20)
dobj(go-20, look-21)
case(love-25, for-22)
det(love-25, a-23)
amod(love-25, new-24)
nmod:for(go-20, love-25)

(ROOT
  (X (`` ``)
    (NP
      (NP (NNP Soldier) (, ,) (NNP soldier))
      (VP (VBN come)
        (PP (IN from)
          (NP (DT the) (NNS wars)))))
    (, ,)
    (NP
      (SQ (VBD Did)
        (NP (NN aught))
        (VP (VB take)))
      (VP (`` `) (VB arm)
        (PP (TO to)
          (NP (PRP$ my) (JJ true) (NN love)))))
    (. ?) ('' '')))

compound(soldier-4, Soldier-2)
dep(take-12, soldier-4)
acl(soldier-4, come-5)
case(wars-8, from-6)
det(wars-8, the-7)
nmod:from(come-5, wars-8)
aux(take-12, Did-10)
nsubj(take-12, aught-11)
root(ROOT-0, take-12)
dep(take-12, arm-14)
case(love-18, to-15)
nmod:poss(love-18, my-16)
amod(love-18, true-17)
nmod:to(arm-14, love-18)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB see)
          (NP
            (NP (DT the) (NN fight))
            (, ,)
            (PP (IN for)
              (NP
                (NP (DT the) (NN smoke))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBD lay)
                      (ADJP (RB so) (JJ white)))))))))))
    (: --)
    (S
      (NP
        (NP (NNP An) (POS '))
        (NN you))
      (VP (MD 'd)
        (ADVP (RBS best))
        (VP (VB go)
          (NP (NN look))
          (PP (IN for)
            (NP (DT a) (JJ new) (NN love))))))
    (. .) ('' '')))

nsubj(see-5, I-2)
aux(see-5, could-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
det(fight-7, the-6)
dobj(see-5, fight-7)
case(smoke-11, for-9)
det(smoke-11, the-10)
nmod:for(fight-7, smoke-11)
nsubj(lay-13, it-12)
acl:relcl(smoke-11, lay-13)
advmod(white-15, so-14)
xcomp(lay-13, white-15)
nmod:poss(you-19, An-17)
case(An-17, '-18)
nsubj(go-22, you-19)
aux(go-22, 'd-20)
advmod(go-22, best-21)
parataxis(see-5, go-22)
dobj(go-22, look-23)
case(love-27, for-24)
det(love-27, a-25)
amod(love-27, new-26)
nmod:for(go-22, love-27)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Soldier))
      (, ,)
      (NP
        (NP (NN soldier))
        (VP (VBN come)
          (PP (IN from)
            (NP (DT the) (NNS wars)))))
      (, ,))
    (NP (PRP I))
    (VP (MD 'll)
      (ADVP (IN up) (DT an))
      (VP (`` ') (VB tend)
        (PP (TO to)
          (NP (PRP$ my) (JJ true) (NN love)))))
    (. !) ('' '') ('' '')))

nsubj(tend-15, Soldier-2)
appos(Soldier-2, soldier-4)
acl(soldier-4, come-5)
case(wars-8, from-6)
det(wars-8, the-7)
nmod:from(come-5, wars-8)
nsubj(tend-15, I-10)
aux(tend-15, 'll-11)
case(an-13, up-12)
advmod(tend-15, an-13)
root(ROOT-0, tend-15)
case(love-19, to-16)
nmod:poss(love-19, my-17)
amod(love-19, true-18)
nmod:to(tend-15, love-19)

(ROOT
  (S (`` `)
    (NP
      (NP
        (NP (NNP E) (POS 's))
        (VBG lying))
      (PP (IN on)
        (NP
          (NP (DT the) (NN dead))
          (PP (IN with)
            (NP (DT a) (NN bullet) (IN through))))))
    (`` `)
    (VP (VBZ is)
      (NP (`` `)
        (NP
          (NP (NN ead))
          (, ,)
          (NP (NNP An)))
        ('' ')
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD 'd)
              (ADVP (RBS best))
              (VP (VB go)
                (NP (NN look))
                (PP (IN for)
                  (NP (DT a) (JJ new) (NN love)))))))))
    (. .) ('' '')))

nsubj(ead-15, E-2)
case(E-2, 's-3)
amod(E-2, lying-4)
case(dead-7, on-5)
det(dead-7, the-6)
nmod:on(E-2, dead-7)
case(bullet-10, with-8)
det(bullet-10, a-9)
nmod:with(dead-7, bullet-10)
amod(bullet-10, through-11)
cop(ead-15, is-13)
root(ROOT-0, ead-15)
appos(ead-15, An-17)
nsubj(go-22, you-19)
aux(go-22, 'd-20)
advmod(go-22, best-21)
acl:relcl(ead-15, go-22)
dobj(go-22, look-23)
case(love-27, for-24)
det(love-27, a-25)
amod(love-27, new-26)
nmod:for(go-22, love-27)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Soldier))
      (, ,)
      (NP
        (NP (NN soldier))
        (VP (VBN come)
          (PP (IN from)
            (NP (DT the) (NNS wars)))))
      (, ,))
    (NP (PRP I))
    (VP (MD 'll)
      (ADVP (IN down) (DT an))
      (VP (`` ') (VB die)
        (PP (IN with)
          (NP (PRP$ my) (JJ true) (NN love)))))
    (. !) ('' '')))

nsubj(die-15, Soldier-2)
appos(Soldier-2, soldier-4)
acl(soldier-4, come-5)
case(wars-8, from-6)
det(wars-8, the-7)
nmod:from(come-5, wars-8)
nsubj(die-15, I-10)
aux(die-15, 'll-11)
case(an-13, down-12)
advmod(die-15, an-13)
root(ROOT-0, die-15)
case(love-19, with-16)
nmod:poss(love-19, my-17)
amod(love-19, true-18)
nmod:with(die-15, love-19)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (DT The) (NN pit))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD dug)))))
      (VP (MD 'll)
        (VP (`` `) (VB ide) (`` `)
          (NP (NN im) (DT an))
          ('' ')
          (PP
            (NP (DT the) (CD twenty) (NNS men))
            (IN beside)
            (NP (`` `)
              (NP (NN im))
              (: --)
              (NP (NNP An)))))))
    ('' ')
    (NP (PRP you))
    (VP (MD 'd)
      (ADVP (RBS best))
      (VP (VB go)
        (NP (NN look))
        (PP (IN for)
          (NP (DT a) (JJ new) (NN love)))))
    (. .) ('' '')))

det(pit-3, The-2)
nsubj(ide-8, pit-3)
nsubj(dug-5, we-4)
acl:relcl(pit-3, dug-5)
aux(ide-8, 'll-6)
ccomp(go-25, ide-8)
dobj(ide-8, im-10)
dep(im-10, an-11)
det(men-15, the-13)
nummod(men-15, twenty-14)
nmod:beside(ide-8, men-15)
case(men-15, beside-16)
dep(men-15, im-18)
dep(im-18, An-20)
nsubj(go-25, you-22)
aux(go-25, 'd-23)
advmod(go-25, best-24)
root(ROOT-0, go-25)
dobj(go-25, look-26)
case(love-30, for-27)
det(love-30, a-28)
amod(love-30, new-29)
nmod:for(go-25, love-30)

(ROOT
  (S (`` ``)
    (NP (NNP Soldier))
    (PRN (, ,)
      (S
        (NP (NN soldier))
        (VP (VBP come)
          (PP (IN from)
            (NP (DT the) (NNS wars)))))
      (, ,))
    (VP (VBP Do)
      (S
        (NP (PRP you))
        (VP (VB bring)
          (NP (DT no) (NN sign))
          (PP (IN from)
            (NP (PRP$ my) (JJ true) (NN love))))))
    (. ?) ('' '')))

nsubj(Do-10, Soldier-2)
nsubj(come-5, soldier-4)
parataxis(Do-10, come-5)
case(wars-8, from-6)
det(wars-8, the-7)
nmod:from(come-5, wars-8)
root(ROOT-0, Do-10)
nsubj(bring-12, you-11)
ccomp(Do-10, bring-12)
neg(sign-14, no-13)
dobj(bring-12, sign-14)
case(love-18, from-15)
nmod:poss(love-18, my-16)
amod(love-18, true-17)
nmod:from(bring-12, love-18)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP bring)
      (NP
        (NP (DT a) (NN lock))
        (PP (IN of) (`` `)
          (NP (NN air))))
      (SBAR (IN that)
        (S
          (S
            (NP (POS '))
            (X
              (X (SYM e))
              (NP
                (NP (NNS allus))
                (VP (VBN used)
                  (S
                    (VP (TO to)
                      (VP (VB wear) (, ,)
                        (SBAR
                          (S
                            (NP
                              (NP (NNP An) (POS '))
                              (NN you))
                            (VP (MD 'd)
                              (ADVP (RBS best))
                              (VP (VB go))))))))))))
          (VP (VBP look)
            (PP (IN for)
              (NP (DT a) (JJ new) (NN love)))))))
    (. .) ('' '')))

nsubj(bring-3, I-2)
root(ROOT-0, bring-3)
det(lock-5, a-4)
dobj(bring-3, lock-5)
case(air-8, of-6)
nmod:of(lock-5, air-8)
mark(look-23, that-9)
csubj(look-23, '-10)
dep(allus-12, e-11)
dep('-10, allus-12)
acl(allus-12, used-13)
mark(wear-15, to-14)
xcomp(used-13, wear-15)
nmod:poss(you-19, An-17)
case(An-17, '-18)
nsubj(go-22, you-19)
aux(go-22, 'd-20)
advmod(go-22, best-21)
ccomp(wear-15, go-22)
ccomp(bring-3, look-23)
case(love-27, for-24)
det(love-27, a-25)
amod(love-27, new-26)
nmod:for(look-23, love-27)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP Soldier))
        (, ,)
        (NP
          (NP (NN soldier))
          (VP (VBN come)
            (PP (IN from)
              (NP (DT the) (NNS wars)))))
        (, ,))
      (VP (VBP O)))
    (RB then)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (JJ true)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP 've)
                      (VP (VBN lost)
                        (NP (PRP$ my) (JJ true) (NN love))))))))))))
    (. !) ('' '')))

nsubj(O-10, Soldier-2)
appos(Soldier-2, soldier-4)
acl(soldier-4, come-5)
case(wars-8, from-6)
det(wars-8, the-7)
nmod:from(come-5, wars-8)
root(ROOT-0, O-10)
advmod(O-10, then-11)
nsubj(know-13, I-12)
parataxis(O-10, know-13)
nsubj(true-16, it-14)
cop(true-16, 's-15)
ccomp(know-13, true-16)
nsubj(lost-19, I-17)
aux(lost-19, 've-18)
ccomp(true-16, lost-19)
nmod:poss(love-22, my-20)
amod(love-22, true-21)
dobj(lost-19, love-22)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP An) (POS '))
        (NN I))
      (VP (VBP tell)
        (NP (PRP you) (NN truth))
        (ADVP (RB again))))
    (: --)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP 've)
            (VP (VBN lost)
              (NP
                (NP (DT the) (NN feel) (NN o) (POS '))
                (NN pain))))))
      (NP (PRP You))
      (VP (MD 'd)
        (ADVP (RBS best))
        (VP (VB take)
          (NP (PRP me))
          (PP (IN for)
            (NP (PRP$ your) (JJ true) (NN love))))))
    (. .) ('' '')))

nmod:poss(I-4, An-2)
case(An-2, '-3)
nsubj(tell-5, I-4)
root(ROOT-0, tell-5)
dep(truth-7, you-6)
dobj(tell-5, truth-7)
advmod(tell-5, again-8)
advmod(lost-13, when-10)
nsubj(lost-13, you-11)
aux(lost-13, 've-12)
advcl(take-22, lost-13)
det(o-16, the-14)
compound(o-16, feel-15)
nmod:poss(pain-18, o-16)
case(o-16, '-17)
dobj(lost-13, pain-18)
nsubj(take-22, You-19)
aux(take-22, 'd-20)
advmod(take-22, best-21)
parataxis(tell-5, take-22)
dobj(take-22, me-23)
case(love-27, for-24)
nmod:poss(love-27, your-25)
amod(love-27, true-26)
nmod:for(take-22, love-27)

(ROOT
  (S
    (NP (NNP True))
    (VP (VBP love))
    (. !)))

nsubj(love-2, True-1)
root(ROOT-0, love-2)

(ROOT
  (S
    (NP (NNP New))
    (VP (VBP love))
    (. !)))

nsubj(love-2, New-1)
root(ROOT-0, love-2)

(ROOT
  (S
    (NP (JJS Best))
    (VP (VBP take)
      (SBAR
        (S (`` `)
          (S
            (VP (VBN im)
              (PP (IN for)
                (NP (DT a) (JJ new) (NN love)))))
          (, ,)
          (X (DT The)
            (ADJP (JJ dead)))
          (NP (PRP they))
          (VP (MD can) (RB not)
            (VP (VB rise) (, ,)
              (ADVP (DT an))
              ('' ')
              (PRN
                (S
                  (NP (PRP you))
                  (VP (MD 'd)
                    (ADVP (RBR better))
                    (VP (VB dry)
                      (NP (PRP$ your) (NNS eyes))))))
              (, ,)
              (NP
                (NP (NNP An))
                ('' ')
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD 'd)
                      (ADVP (RBS best))
                      (VP (VB take) (`` `)
                        (NP (NN im)))))))
              (PP (IN for)
                (NP (PRP$ your) (JJ true) (NN love))))))))
    (. .)))

nsubj(take-2, Best-1)
root(ROOT-0, take-2)
dep(rise-15, im-4)
case(love-8, for-5)
det(love-8, a-6)
amod(love-8, new-7)
nmod:for(im-4, love-8)
det(dead-11, The-10)
dep(rise-15, dead-11)
nsubj(rise-15, they-12)
aux(rise-15, can-13)
neg(rise-15, not-14)
ccomp(take-2, rise-15)
advmod(rise-15, an-17)
nsubj(dry-22, you-19)
aux(dry-22, 'd-20)
advmod(dry-22, better-21)
parataxis(rise-15, dry-22)
nmod:poss(eyes-24, your-23)
dobj(dry-22, eyes-24)
dobj(rise-15, An-26)
nsubj(take-31, you-28)
aux(take-31, 'd-29)
advmod(take-31, best-30)
acl:relcl(An-26, take-31)
dobj(take-31, im-33)
case(love-37, for-34)
nmod:poss(love-37, your-35)
amod(love-37, true-36)
nmod:for(rise-15, love-37)

(ROOT
  (S
    (NP
      (NP
        (NP
          (NP (NNP SCREW-GUNS) (NNP Smokin) (POS '))
          (JJ my) (NN pipe))
        (PP (IN on)
          (NP (DT the) (NNS mountings))))
      (, ,)
      (VP (VBN sniffin) (`` ')
        (NP
          (NP
            (NP (DT the) (NN mornin) (POS '))
            (NN cool))
          (, ,)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBZ walks)
                (PP (IN in)
                  (NP (PRP$ my) (JJ old) (JJ brown) (NNS gaiters)))
                (PP (IN along)
                  (NP (NN o)))))))
        ('' ')
        (S
          (NP
            (NP (PRP$ my) (JJ old) (JJ brown) (NN mule))
            (, ,)
            (SBAR (IN With)
              (S
                (NP (JJ seventy) (NNS gunners))
                (VP (VBD be'ind)
                  (NP (PRP me)))))
            (, ,))))
      (, an) ('' '))
    (VP
      (ADVP (RB never)
        (NP (DT a) (NN beggar)))
      (VBZ forgets)
      (SBAR
        (S
          (NP (PRP It))
          (VP (VBZ 's)
            (ADVP (RB only))
            (NP
              (NP (DT the) (NN pick))
              (PP (IN of)
                (NP (DT the) (NNP Army)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ handles)
                    (NP (DT the)
                      (ADJP (RB dear))
                      (JJ little) (NN pets))))))
            (: --) (`` `)
            (ADJP (JJ Tss))))))
    (. !)))

compound(Smokin-2, SCREW-GUNS-1)
nmod:poss(pipe-5, Smokin-2)
case(Smokin-2, '-3)
amod(pipe-5, my-4)
nsubj(forgets-43, pipe-5)
case(mountings-8, on-6)
det(mountings-8, the-7)
nmod:on(pipe-5, mountings-8)
acl(pipe-5, sniffin-10)
det(mornin-13, the-12)
nmod:poss(cool-15, mornin-13)
case(mornin-13, '-14)
dobj(sniffin-10, cool-15)
nsubj(walks-18, I-17)
acl:relcl(cool-15, walks-18)
case(gaiters-23, in-19)
nmod:poss(gaiters-23, my-20)
amod(gaiters-23, old-21)
amod(gaiters-23, brown-22)
nmod:in(walks-18, gaiters-23)
case(o-25, along-24)
nmod:along(walks-18, o-25)
nmod:poss(mule-30, my-27)
amod(mule-30, old-28)
amod(mule-30, brown-29)
xcomp(sniffin-10, mule-30)
mark(be'ind-35, With-32)
amod(gunners-34, seventy-33)
nsubj(be'ind-35, gunners-34)
dep(mule-30, be'ind-35)
dobj(be'ind-35, me-36)
neg(forgets-43, never-40)
det(beggar-42, a-41)
nmod:npmod(never-40, beggar-42)
root(ROOT-0, forgets-43)
nsubj(Tss-60, It-44)
cop(Tss-60, 's-45)
advmod(Tss-60, only-46)
det(pick-48, the-47)
nsubj(handles-53, pick-48)
dep(Tss-60, pick-48)
case(Army-51, of-49)
det(Army-51, the-50)
nmod:of(pick-48, Army-51)
ref(pick-48, that-52)
acl:relcl(pick-48, handles-53)
det(pets-57, the-54)
amod(pets-57, dear-55)
amod(pets-57, little-56)
dobj(handles-53, pets-57)
ccomp(forgets-43, Tss-60)

(ROOT
  (S (`` `)
    (VP (VB Tss))
    (. !)))

root(ROOT-0, Tss-2)

(ROOT
  (S
    (PP (IN For)
      (NP (PRP you)))
    (NP (DT all))
    (VP (VBP love)
      (NP
        (NP (DT the) (NNS screw-guns))
        (: --)
        (NP
          (NP (DT the) (NNS screw-guns))
          (SBAR
            (S
              (NP (PRP they))
              (ADVP (DT all))
              (VP (VBP love)
                (NP (PRP you))))))))
    (. !)))

case(you-2, For-1)
nmod:for(love-4, you-2)
nsubj(love-4, all-3)
root(ROOT-0, love-4)
det(screw-guns-6, the-5)
dobj(love-4, screw-guns-6)
det(screw-guns-9, the-8)
dep(screw-guns-6, screw-guns-9)
nsubj(love-12, they-10)
advmod(love-12, all-11)
acl:relcl(screw-guns-9, love-12)
dobj(love-12, you-13)

(ROOT
  (S (CC So)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP we))
        (VP (VBP call)
          (NP (NN round))
          (PP (IN with)
            (NP (DT a) (JJ few) (NNS guns) (, ,) (NN o) ('' ') (NN course))))))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (TO to)
              (VP (VB do) (: --)
                (NP (NN hoo))))))))
    (. !)))

cc(know-16, So-1)
advmod(call-4, when-2)
nsubj(call-4, we-3)
advcl(know-16, call-4)
dobj(call-4, round-5)
case(course-13, with-6)
det(course-13, a-7)
amod(course-13, few-8)
compound(course-13, guns-9)
dep(course-13, o-11)
nmod:with(call-4, course-13)
nsubj(know-16, you-14)
aux(know-16, will-15)
root(ROOT-0, know-16)
nsubj(do-19, what-17)
mark(do-19, to-18)
ccomp(know-16, do-19)
dobj(do-19, hoo-21)

(ROOT
  (NP (NN hoo) (. !)))

root(ROOT-0, hoo-1)

(ROOT
  (S
    (S
      (NP (NNP Jest))
      (VP (VBP send)
        (PP (IN in)
          (NP
            (NP (PRP$ your) (NNP Chief))
            (, an) ('' ')
            (NP (NN surrender))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJR worse))
        (SBAR (IN if)
          (S
            (S
              (NP (PRP you))
              (VP (VBZ fights)))
            (CC or)
            (S
              (NP (PRP you))
              (VP (VBZ runs)))))))
    (: :)
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB go)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP you))
              (VP (VBP please)))))))
    (, ,)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB skid)
          (PRT (RP up))
          (NP (DT the) (NNS trees)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (VP (VB get)
          (PRT (RP away))
          (PP (IN from)
            (NP (DT the) (NNS guns))))))
    (. !)))

nsubj(send-2, Jest-1)
root(ROOT-0, send-2)
case(Chief-5, in-3)
nmod:poss(Chief-5, your-4)
nmod:in(send-2, Chief-5)
dep(Chief-5, surrender-8)
nsubj(worse-12, it-10)
cop(worse-12, 's-11)
conj:but(send-2, worse-12)
mark(fights-15, if-13)
nsubj(fights-15, you-14)
advcl(worse-12, fights-15)
cc(fights-15, or-16)
nsubj(runs-18, you-17)
advcl(worse-12, runs-18)
conj:or(fights-15, runs-18)
nsubj(go-22, You-20)
aux(go-22, can-21)
conj:but(send-2, go-22)
advmod(please-25, where-23)
nsubj(please-25, you-24)
advcl(go-22, please-25)
nsubj(skid-29, you-27)
aux(skid-29, can-28)
ccomp(send-2, skid-29)
compound:prt(skid-29, up-30)
det(trees-32, the-31)
dobj(skid-29, trees-32)
cc(send-2, but-34)
nsubj(get-38, you-35)
aux(get-38, do-36)
neg(get-38, n't-37)
conj:but(send-2, get-38)
compound:prt(get-38, away-39)
case(guns-42, from-40)
det(guns-42, the-41)
nmod:from(get-38, guns-42)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBZ sends)
        (NP (PRP us))
        (PP (IN along)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (NNS roads))
              (VP (VBP are)))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB mostly))
      (NP (PRP we))
      (VP (VBZ goes)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP they))
            (VP (VBP ai) (RB n't))))))
    (: :)
    (S
      (NP (PRP We))
      (VP (MD 'd)
        (VP (VB climb)
          (PRT (RP up))
          (NP
            (NP
              (NP (DT the) (NN side))
              (PP (IN of)
                (NP (DT a) (JJ sign-board) (DT an)))
              (POS '))
            (NN trust))
          (PP (TO to)
            (NP
              (NP (DT the) (NN stick) (NN o) (POS '))
              (DT the) (NN paint))))))
    (: :)
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN chivied)
          (NP (DT the)
            (NP (NNP Naga))
            (, an) ('' ')
            (NP (NNP Looshai))))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBP 've)
        (VP (VBP give)
          (NP (DT the) (NNP Afreedeeman) (NNS fits)))))
    (, ,) (IN For)
    (S
      (NP (PRP we))
      (VP (VBZ fancies)
        (NP (PRP ourselves))
        (PP (IN at)
          (NP (CD two) (CD thousand)))
        (, ,)
        (NP
          (NP (PRP we) (NNS guns))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP are)
                (VP (VBN built)
                  (PP (IN in)
                    (NP
                      (NP (CD two) (NNS bits))
                      (: --) (`` `)
                      (NP (NNP Tss)))))))))))
    (. !)))

nsubj(sends-2, They-1)
root(ROOT-0, sends-2)
dobj(sends-2, us-3)
mark(are-8, along-4)
advmod(are-8, where-5)
det(roads-7, the-6)
nsubj(are-8, roads-7)
advcl(sends-2, are-8)
cc(sends-2, but-10)
advmod(goes-13, mostly-11)
nsubj(goes-13, we-12)
conj:but(sends-2, goes-13)
advmod(ai-16, where-14)
nsubj(ai-16, they-15)
advcl(goes-13, ai-16)
neg(ai-16, n't-17)
nsubj(climb-21, We-19)
aux(climb-21, 'd-20)
conj:but(sends-2, climb-21)
compound:prt(climb-21, up-22)
det(side-24, the-23)
nmod:poss(trust-30, side-24)
case(sign-board-27, of-25)
det(sign-board-27, a-26)
nmod:of(side-24, sign-board-27)
dep(sign-board-27, an-28)
case(side-24, '-29)
dobj(climb-21, trust-30)
case(paint-37, to-31)
det(o-34, the-32)
compound(o-34, stick-33)
nmod:poss(paint-37, o-34)
case(o-34, '-35)
det(paint-37, the-36)
nmod:to(climb-21, paint-37)
nsubj(chivied-41, We-39)
aux(chivied-41, 've-40)
conj:but(sends-2, chivied-41)
det(Naga-43, the-42)
dobj(chivied-41, Naga-43)
dep(Naga-43, Looshai-46)
nsubj(give-50, we-48)
aux(give-50, 've-49)
conj:but(sends-2, give-50)
det(fits-53, the-51)
compound(fits-53, Afreedeeman-52)
dobj(give-50, fits-53)
dep(sends-2, For-55)
nsubj(fancies-57, we-56)
parataxis(sends-2, fancies-57)
dobj(fancies-57, ourselves-58)
case(thousand-61, at-59)
nummod(thousand-61, two-60)
nmod:at(fancies-57, thousand-61)
dep(guns-64, we-63)
dobj(fancies-57, guns-64)
nsubjpass(built-67, guns-64)
ref(guns-64, that-65)
auxpass(built-67, are-66)
acl:relcl(guns-64, built-67)
case(bits-70, in-68)
nummod(bits-70, two-69)
nmod:in(built-67, bits-70)
dep(bits-70, Tss-73)

(ROOT
  (S (`` `)
    (VP (VB Tss))
    (. !)))

root(ROOT-0, Tss-2)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (PRP you)))
      (NP (DT all))
      (VP (VBP love)
        (NP (DT the) (NNS screw-guns))))
    (: ...)
    (S
      (SBAR (IN If)
        (S
          (NP (DT a) (NN man))
          (VP (VBZ does) (RB n't)
            (VP (VB work) (, ,)
              (SBAR
                (WHADVP (WRB why))
                (, ,)
                (S
                  (NP (PRP we))
                  (VP (VBD drills)
                    (SBAR
                      (S
                        (NP (`` `)
                          (NP (NN im))
                          (, an) ('' '))
                        (VP (VBZ teaches)
                          (S
                            (NP (`` `) (NN im) (`` `) (NN ow))
                            (VP (TO to)
                              (VP (VB behave))))))))
                  (: ;)
                  (SBAR (IN If)
                    (S
                      (NP (DT a) (NN beggar))
                      (VP (MD ca) (RB n't)
                        (VP (VB march)))))))
              (, ,)
              (SBAR
                (WHADVP (WRB why))
                (, ,)
                (S
                  (NP (PRP we))
                  (VP (VBZ kills)
                    (SBAR
                      (S
                        (NP (`` `)
                          (NP (NN im))
                          (, an) ('' '))
                        (VP (VBZ rattles) (`` `)
                          (NP (NN im))
                          (PP (IN into))))))))))))
      (VP (`` `) (VBZ is)
        (ADJP (JJ grave))))
    (. .)))

case(you-2, For-1)
nmod:for(love-4, you-2)
nsubj(love-4, all-3)
root(ROOT-0, love-4)
det(screw-guns-6, the-5)
dobj(love-4, screw-guns-6)
mark(work-13, If-8)
det(man-10, a-9)
nsubj(work-13, man-10)
aux(work-13, does-11)
neg(work-13, n't-12)
csubj(grave-52, work-13)
advmod(drills-18, why-15)
nsubj(drills-18, we-17)
advcl(work-13, drills-18)
nsubj(teaches-23, im-20)
ccomp(drills-18, teaches-23)
compound(ow-27, im-25)
dobj(teaches-23, ow-27)
nsubj:xsubj(behave-29, ow-27)
mark(behave-29, to-28)
xcomp(teaches-23, behave-29)
mark(march-36, If-31)
det(beggar-33, a-32)
nsubj(march-36, beggar-33)
aux(march-36, ca-34)
neg(march-36, n't-35)
parataxis(drills-18, march-36)
advmod(kills-41, why-38)
nsubj(kills-41, we-40)
advcl(work-13, kills-41)
nsubj(rattles-46, im-43)
ccomp(kills-41, rattles-46)
dobj(rattles-46, im-48)
nmod(rattles-46, into-49)
cop(grave-52, is-51)
parataxis(love-4, grave-52)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 've)
      (VP (VBN got)
        (S
          (VP (TO to)
            (VP (VB stand)
              (PRT (RP up))
              (PP (TO to)
                (NP
                  (NP (PRP$ our) (NN business))
                  (, an) ('' ')
                  (NP (NN spring))))
              (PP (IN without)
                (NP
                  (NP (NN snatchin) (POS '))
                  (CC or)
                  (NP (NNS fuss)))))))))
    (. .)))

nsubj(got-3, You-1)
nsubj:xsubj(stand-5, You-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
mark(stand-5, to-4)
xcomp(got-3, stand-5)
compound:prt(stand-5, up-6)
case(business-9, to-7)
nmod:poss(business-9, our-8)
nmod:to(stand-5, business-9)
dep(business-9, spring-12)
case(snatchin-14, without-13)
nmod:'(stand-5, snatchin-14)
case(snatchin-14, '-15)
cc(snatchin-14, or-16)
nmod:'(stand-5, fuss-17)
conj:or(snatchin-14, fuss-17)

(ROOT
  (S
    (NP (NNP D'you))
    (VP (VBP say)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP sweat)
            (PP (IN with)
              (NP (DT the) (NNS field-guns)))))))
    (. ?)))

nsubj(say-2, D'you-1)
root(ROOT-0, say-2)
mark(sweat-5, that-3)
nsubj(sweat-5, you-4)
ccomp(say-2, sweat-5)
case(field-guns-8, with-6)
det(field-guns-8, the-7)
nmod:with(sweat-5, field-guns-8)

(ROOT
  (S
    (PP (IN By)
      (NP (NNP God)))
    (, ,)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB lather)
        (PP (IN with)
          (NP (PRP us)))
        (: --) (`` `)
        (NP (NNP Tss))))
    (. !)))

case(God-2, By-1)
nmod:by(lather-6, God-2)
nsubj(lather-6, you-4)
aux(lather-6, must-5)
root(ROOT-0, lather-6)
case(us-8, with-7)
nmod:with(lather-6, us-8)
dobj(lather-6, Tss-11)

(ROOT
  (S (`` `)
    (VP (VB Tss))
    (. !)))

root(ROOT-0, Tss-2)

(ROOT
  (S
    (S
      (SBAR (IN For)
        (S
          (S
            (NP (PRP you))
            (ADVP (DT all))
            (VP (VBP love)
              (NP (DT the) (NNS screw-guns))))
          (: ...)
          (S
            (NP (DT The) (NNS eagles))
            (VP (VBZ is)
              (VP (VBN screamin) ('' ')
                (PP (IN around)
                  (NP
                    (NP (PRP us))
                    (, ,)
                    (NP
                      (NP (DT the) (NN river) (POS 's))
                      (NN a-moanin))))
                ('' ')
                (ADVP (RB below)))))))
      (, ,)
      (NP (PRP We))
      (VP (VBP 're)
        (ADJP (JJ clear)
          (SBAR
            (S
              (VP (VBP o) (`` ')
                (NP
                  (NP (DT the) (NN pine))
                  (, an) ('' ')
                  (NP (DT the)
                    (ADJP
                      (ADJP (JJ oak-scrub))
                      (PRN (, ,)
                        (S
                          (NP (PRP we))
                          (VP (VBP 're)
                            (PRT (RP out))
                            (PP (IN on)
                              (NP
                                (NP (DT the) (NNS rocks))
                                (, an) ('' ')
                                (NP (DT the) (NN snow))))))
                        (, ,)))
                    (NNP An)))
                ('' ')))))))
    (NP (DT the) (NN wind))
    (VP (VBZ is)
      (ADJP (RB as) (JJ thin))
      (PP (IN as)
        (NP
          (NP (DT a) (NN whip-lash))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ carries)
                (NP
                  (ADVP (RB away)
                    (PP (TO to)
                      (NP (DT the) (NNS plains))))
                  (NP (DT The) (NN rattle))
                  (, an) ('' ')
                  (NP
                    (NP (NN stamp))
                    (NP (NN o)))
                  ('' ')
                  (NP (DT the) (NNS lead-mules))
                  (: --)
                  (NP
                    (NP (DT the) (JJ jinglety-jink) (NN o) (POS '))
                    (NP (DT the) (NNS chains)))))))))
      (: --) (`` `)
      (ADJP (JJ Tss)))
    (. !)))

mark(love-4, For-1)
nsubj(love-4, you-2)
advmod(love-4, all-3)
advcl(clear-25, love-4)
det(screw-guns-6, the-5)
dobj(love-4, screw-guns-6)
det(eagles-9, The-8)
nsubjpass(screamin-11, eagles-9)
auxpass(screamin-11, is-10)
parataxis(love-4, screamin-11)
case(us-14, around-13)
nmod:around(screamin-11, us-14)
det(river-17, the-16)
nmod:poss(a-moanin-19, river-17)
case(river-17, 's-18)
appos(us-14, a-moanin-19)
advmod(screamin-11, below-21)
nsubj(clear-25, We-23)
cop(clear-25, 're-24)
dep(thin-52, clear-25)
ccomp(clear-25, o-26)
det(pine-29, the-28)
dobj(o-26, pine-29)
det(An-46, the-32)
amod(An-46, oak-scrub-33)
nsubj(rocks-40, we-35)
cop(rocks-40, 're-36)
compound:prt(rocks-40, out-37)
case(rocks-40, on-38)
det(rocks-40, the-39)
dep(oak-scrub-33, rocks-40)
det(snow-44, the-43)
dep(rocks-40, snow-44)
dep(pine-29, An-46)
det(wind-49, the-48)
nsubj(thin-52, wind-49)
cop(thin-52, is-50)
advmod(thin-52, as-51)
root(ROOT-0, thin-52)
case(whip-lash-55, as-53)
det(whip-lash-55, a-54)
nmod:as(thin-52, whip-lash-55)
nsubj(carries-57, whip-lash-55)
ref(whip-lash-55, what-56)
acl:relcl(whip-lash-55, carries-57)
advmod(rattle-63, away-58)
case(plains-61, to-59)
det(plains-61, the-60)
nmod:to(away-58, plains-61)
det(rattle-63, The-62)
dobj(carries-57, rattle-63)
dep(rattle-63, stamp-66)
dep(stamp-66, o-67)
det(lead-mules-70, the-69)
dep(rattle-63, lead-mules-70)
det(o-74, the-72)
amod(o-74, jinglety-jink-73)
dep(rattle-63, o-74)
case(o-74, '-75)
det(chains-77, the-76)
dep(o-74, chains-77)
xcomp(thin-52, Tss-80)

(ROOT
  (S (`` `)
    (VP (VB Tss))
    (. !)))

root(ROOT-0, Tss-2)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (PRP you)))
      (NP (DT all))
      (VP (VBP love)
        (NP (DT the) (NNS screw-guns))))
    (: ...)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN wheel))
          (PP (IN on)
            (NP (DT the) (NNP Horns) (NN o)))
          ('' ')
          (NP
            (NP (DT the)
              (NP (NNP Mornin) (POS ')))
            (, ,)
            (NP (DT an)))
          ('' ')
          (NP
            (NP (DT a) (NN wheel))
            (PP (IN on)
              (NP (DT the) (NN edge) (NN o))))
          ('' ')
          (NP
            (NP (DT the) (NN Pit))
            (, ,)
            (NP (NNP An)))
          ('' ')
          (NP
            (NP (DT a) (NN drop))
            (PP (IN into)
              (NP (NN nothin))))
          ('' ')
          (PP (IN beneath)
            (NP (PRP you))))
        (PP (RB as)
          (PP (RB straight) (IN as)
            (NP
              (NP (DT a) (NN beggar))
              (SBAR
                (S
                  (VP (MD can)
                    (VP (VB spit)))))))
          (: :)
          (PP (IN With)
            (NP
              (NP
                (NP (DT the) (NN sweat) (NN runnin))
                ('' ')
                (VP
                  (ADVP (RB out))
                  (VBN o) ('' ')
                  (NP (PRP$ your) (NNS shirt-sleeves)))
                (, ,))
              (, an) ('' ')
              (NP
                (NP (DT the) (NN sun))
                (ADVP (RB off)
                  (NP (DT the) (NN snow))
                  (PP (IN in)
                    (NP
                      (NP (PRP$ your) (NN face))
                      (, ,)
                      (NP
                        (NP
                          (NP (NNP An) (POS '))
                          (`` `) (NN arf) (NN o) ('' '))
                        (NP (DT the) (NNS men))))))
                (PP (IN on)
                  (NP (DT the) (NNS drag-ropes)))
                (S
                  (VP (TO to)
                    (VP (VB hold)
                      (NP (DT the) (JJ old) (NN gun))
                      (PP (IN in) (`` `)
                        (NP
                          (NP (NN er) (NN place))
                          (: --) (`` `)
                          (NP (NNP Tss)))))))))))))
    (. !)))

case(you-2, For-1)
nmod:for(love-4, you-2)
nsubj(love-4, all-3)
root(ROOT-0, love-4)
det(screw-guns-6, the-5)
dobj(love-4, screw-guns-6)
expl('s-9, There-8)
parataxis(love-4, 's-9)
det(wheel-11, a-10)
iobj('s-9, wheel-11)
case(o-15, on-12)
det(o-15, the-13)
compound(o-15, Horns-14)
nmod:on(wheel-11, o-15)
det(Mornin-18, the-17)
dep(wheel-11, Mornin-18)
case(Mornin-18, '-19)
appos(Mornin-18, an-21)
det(wheel-24, a-23)
dep(wheel-11, wheel-24)
case(o-28, on-25)
det(o-28, the-26)
compound(o-28, edge-27)
nmod:on(wheel-24, o-28)
det(Pit-31, the-30)
dep(wheel-11, Pit-31)
appos(Pit-31, An-33)
det(drop-36, a-35)
dep(wheel-11, drop-36)
case(nothin-38, into-37)
nmod:into(drop-36, nothin-38)
case(you-41, beneath-40)
nmod:beneath(wheel-11, you-41)
advmod(beggar-46, as-42)
advmod(beggar-46, straight-43)
case(beggar-46, as-44)
det(beggar-46, a-45)
advcl('s-9, beggar-46)
aux(spit-48, can-47)
acl:relcl(beggar-46, spit-48)
case(runnin-53, With-50)
det(runnin-53, the-51)
compound(runnin-53, sweat-52)
nmod:with(beggar-46, runnin-53)
advmod(o-56, out-55)
acl(runnin-53, o-56)
nmod:poss(shirt-sleeves-59, your-58)
dobj(o-56, shirt-sleeves-59)
det(sun-64, the-63)
dep(runnin-53, sun-64)
advmod(sun-64, off-65)
det(snow-67, the-66)
nmod:npmod(off-65, snow-67)
case(face-70, in-68)
nmod:poss(face-70, your-69)
nmod:in(off-65, face-70)
nmod:poss(o-76, An-72)
case(An-72, '-73)
compound(o-76, arf-75)
appos(face-70, o-76)
det(men-79, the-78)
dep(o-76, men-79)
case(drag-ropes-82, on-80)
det(drag-ropes-82, the-81)
nmod:on(sun-64, drag-ropes-82)
mark(hold-84, to-83)
acl(sun-64, hold-84)
det(gun-87, the-85)
amod(gun-87, old-86)
dobj(hold-84, gun-87)
case(place-91, in-88)
compound(place-91, er-90)
nmod:in(hold-84, place-91)
dep(place-91, Tss-94)

(ROOT
  (S (`` `)
    (VP (VB Tss))
    (. !)))

root(ROOT-0, Tss-2)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (PRP you)))
      (NP (DT all))
      (VP (VBP love)
        (NP (DT the) (NNS screw-guns))))
    (: ...)
    (S
      (S
        (NP
          (NP (NNP Smokin) (POS '))
          (NP (PRP$ my) (NN pipe))
          (PP (IN on)
            (NP
              (NP (DT the) (NNS mountings))
              (, ,)
              (NP
                (NP (NN sniffin) (POS '))
                (NP (DT the) (NN mornin) (POS '))
                (NNP cool))))))
      (, ,)
      (NP (PRP I))
      (VP (VBZ climbs)
        (PP (IN in)
          (NP (PRP$ my) (JJ old) (JJ brown) (NNS gaiters)))
        (PP (IN along)
          (NP
            (NP (NNP o) (POS '))
            (NP (PRP$ my) (JJ old) (JJ brown) (NN mule))))))
    (. .)))

case(you-2, For-1)
nmod:for(love-4, you-2)
nsubj(love-4, all-3)
root(ROOT-0, love-4)
det(screw-guns-6, the-5)
dobj(love-4, screw-guns-6)
ccomp(climbs-24, Smokin-8)
case(Smokin-8, '-9)
nmod:poss(pipe-11, my-10)
dep(Smokin-8, pipe-11)
case(mountings-14, on-12)
det(mountings-14, the-13)
nmod:on(Smokin-8, mountings-14)
nmod:poss(cool-21, sniffin-16)
case(sniffin-16, '-17)
det(mornin-19, the-18)
nmod:poss(cool-21, mornin-19)
case(mornin-19, '-20)
appos(mountings-14, cool-21)
nsubj(climbs-24, I-23)
parataxis(love-4, climbs-24)
case(gaiters-29, in-25)
nmod:poss(gaiters-29, my-26)
amod(gaiters-29, old-27)
amod(gaiters-29, brown-28)
nmod:in(climbs-24, gaiters-29)
case(o-31, along-30)
nmod:along(climbs-24, o-31)
case(o-31, '-32)
nmod:poss(mule-36, my-33)
amod(mule-36, old-34)
amod(mule-36, brown-35)
dep(o-31, mule-36)

(ROOT
  (S
    (S
      (NP (DT The) (NN monkey))
      (VP (MD can)
        (VP (VB say)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP$ our) (NN road))
              (VP (VBD was)))))))
    (: --)
    (S
      (NP
        (NP (DT the) (NN wild-goat) (POS '))
        (NN e))
      (VP (VBZ knows)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP we))
            (VP (VBD passed))))))
    (. .)))

det(monkey-2, The-1)
nsubj(say-4, monkey-2)
aux(say-4, can-3)
root(ROOT-0, say-4)
dobj(was-8, what-5)
nmod:poss(road-7, our-6)
nsubj(was-8, road-7)
ccomp(say-4, was-8)
det(wild-goat-11, the-10)
nmod:poss(e-13, wild-goat-11)
case(wild-goat-11, '-12)
nsubj(knows-14, e-13)
parataxis(say-4, knows-14)
advmod(passed-17, where-15)
nsubj(passed-17, we-16)
ccomp(knows-14, passed-17)

(ROOT
  (S
    (S
      (VP (VB Stand)
        (ADJP (JJ easy))))
    (, ,)
    (NP (PRP you))
    (VP (VBD long-eared)
      (SBAR
        (S
          (NP (JJ old) (NN darlin))
          (VP (VBZ 's)))))
    (. !)))

ccomp(long-eared-5, Stand-1)
xcomp(Stand-1, easy-2)
nsubj(long-eared-5, you-4)
root(ROOT-0, long-eared-5)
amod(darlin-7, old-6)
nsubj('s-8, darlin-7)
ccomp(long-eared-5, 's-8)

(ROOT
  (FRAG
    (PP (IN Out)
      (NP (NNS drag-ropes)))
    (. !)))

case(drag-ropes-2, Out-1)
root(ROOT-0, drag-ropes-2)

(ROOT
  (FRAG
    (PP (IN With)
      (NP (NN shrapnel)))
    (. !)))

case(shrapnel-2, With-1)
root(ROOT-0, shrapnel-2)

(ROOT
  (SQ
    (VP (VB Hold)
      (ADVP (RB fast))
      (: --) (`` `)
      (NP (NNP Tss)))
    (. !)))

root(ROOT-0, Hold-1)
advmod(Hold-1, fast-2)
dobj(Hold-1, Tss-5)

(ROOT
  (S (`` `)
    (VP (VB Tss))
    (. !)))

root(ROOT-0, Tss-2)

(ROOT
  (S
    (PP (IN For)
      (NP (PRP you)))
    (NP (DT all))
    (VP (VBP love)
      (NP
        (NP (DT the) (NNS screw-guns))
        (: --)
        (NP
          (NP (DT the) (NNS screw-guns))
          (SBAR
            (S
              (NP (PRP they))
              (ADVP (DT all))
              (VP (VBP love)
                (NP (PRP you))))))))
    (. !)))

case(you-2, For-1)
nmod:for(love-4, you-2)
nsubj(love-4, all-3)
root(ROOT-0, love-4)
det(screw-guns-6, the-5)
dobj(love-4, screw-guns-6)
det(screw-guns-9, the-8)
dep(screw-guns-6, screw-guns-9)
nsubj(love-12, they-10)
advmod(love-12, all-11)
acl:relcl(screw-guns-9, love-12)
dobj(love-12, you-13)

(ROOT
  (S (CC So)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP we))
        (VP (VBP take)
          (NP (NN tea))
          (PP (IN with)
            (NP (DT a) (JJ few) (NNS guns) (, ,) (NN o) ('' ') (NN course))))))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (TO to)
              (VP (VB do) (: --)
                (NP (NN hoo))))))))
    (. !)))

cc(know-16, So-1)
advmod(take-4, when-2)
nsubj(take-4, we-3)
advcl(know-16, take-4)
dobj(take-4, tea-5)
case(course-13, with-6)
det(course-13, a-7)
amod(course-13, few-8)
compound(course-13, guns-9)
dep(course-13, o-11)
nmod:with(take-4, course-13)
nsubj(know-16, you-14)
aux(know-16, will-15)
root(ROOT-0, know-16)
nsubj(do-19, what-17)
mark(do-19, to-18)
ccomp(know-16, do-19)
dobj(do-19, hoo-21)

(ROOT
  (NP (NN hoo) (. !)))

root(ROOT-0, hoo-1)

(ROOT
  (S
    (S
      (NP (NNP Jest))
      (VP (VBP send)
        (PP (IN in)
          (NP
            (NP (PRP$ your) (NNP Chief))
            (, an) ('' ')
            (NP (NN surrender))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJR worse))
        (SBAR (IN if)
          (S
            (S
              (NP (PRP you))
              (VP (VBZ fights)))
            (CC or)
            (S
              (NP (PRP you))
              (VP (VBZ runs)))))))
    (: :)
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB hide)
          (PP (IN in)
            (NP (DT the) (NNS caves))))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (MD 'll)
        (VP (VB be)
          (ADVP (RB only))
          (NP (PRP$ your) (NNS graves)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB get)
          (PRT (RP away))
          (PP (IN from)
            (NP (DT the) (NNS guns))))))
    (. !)))

nsubj(send-2, Jest-1)
root(ROOT-0, send-2)
case(Chief-5, in-3)
nmod:poss(Chief-5, your-4)
nmod:in(send-2, Chief-5)
dep(Chief-5, surrender-8)
nsubj(worse-12, it-10)
cop(worse-12, 's-11)
conj:but(send-2, worse-12)
mark(fights-15, if-13)
nsubj(fights-15, you-14)
advcl(worse-12, fights-15)
cc(fights-15, or-16)
nsubj(runs-18, you-17)
advcl(worse-12, runs-18)
conj:or(fights-15, runs-18)
nsubj(hide-22, You-20)
aux(hide-22, may-21)
conj:but(send-2, hide-22)
case(caves-25, in-23)
det(caves-25, the-24)
nmod:in(hide-22, caves-25)
nsubj(graves-32, they-27)
aux(graves-32, 'll-28)
cop(graves-32, be-29)
advmod(graves-32, only-30)
nmod:poss(graves-32, your-31)
ccomp(send-2, graves-32)
cc(send-2, but-34)
nsubj(get-38, you-35)
aux(get-38, ca-36)
neg(get-38, n't-37)
conj:but(send-2, get-38)
compound:prt(get-38, away-39)
case(guns-42, from-40)
det(guns-42, the-41)
nmod:from(get-38, guns-42)

(ROOT
  (S
    (S
      (NP (NNP CELLS) (NNP I))
      (VP (VBP 've)
        (NP
          (NP (DT a) (NN head))
          (PP (IN like)
            (NP (DT a) (NN concertina))))))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (NP
          (NP (DT a) (NN tongue))
          (PP (IN like)
            (NP (DT a) (NN button-stick))))))
    (: :)
    (S
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (NP
            (NP (DT a) (NN mouth))
            (PP (IN like)
              (NP (DT an) (JJ old) (NN potato))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (ADJP
              (NP
                (QP (JJR more) (IN than) (DT a)))
              (RB little) (JJ sick))))
        (, ,)
        (CC But)
        (S
          (NP (PRP I))
          (VP (VBP 've)
            (VP (VBN had)
              (NP
                (NP (PRP$ my) (NN fun) (NN o))
                ('' ')
                (SBAR
                  (S
                    (NP (DT the) (NNP Corp))
                    (`` `)
                    (ADVP (RB ral))
                    (VP (VBZ 's)
                      (NP (NNP Guard)))))))))))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN made)
          (S
            (NP (DT the) (NNS cinders))
            (VP (VB fly))))))
    (, ,)
    (S (CC And)
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (ADVP (RB here))
          (PP (IN in)
            (NP
              (NP (DT the) (NN Clink))
              (PP (IN for)
                (NP (DT a) (VBG thundering) (NN drink)))))))
      (CC and)
      (S
        (VP (VBG blacking)
          (NP
            (NP (DT the) (NN Corporal) (POS 's))
            (NN eye)))))
    (. .)))

compound(I-2, CELLS-1)
nsubj('ve-3, I-2)
root(ROOT-0, 've-3)
det(head-5, a-4)
dobj('ve-3, head-5)
case(concertina-8, like-6)
det(concertina-8, a-7)
nmod:like(head-5, concertina-8)
nsubj('ve-11, I-10)
parataxis('ve-3, 've-11)
det(tongue-13, a-12)
dobj('ve-11, tongue-13)
case(button-stick-16, like-14)
det(button-stick-16, a-15)
nmod:like(tongue-13, button-stick-16)
nsubj('ve-19, I-18)
parataxis('ve-3, 've-19)
det(mouth-21, a-20)
dobj('ve-19, mouth-21)
case(potato-25, like-22)
det(potato-25, an-23)
amod(potato-25, old-24)
nmod:like(mouth-21, potato-25)
cc('ve-19, and-27)
nsubj(sick-34, I-28)
cop(sick-34, 'm-29)
advmod(a-32, more-30)
mwe(more-30, than-31)
dep(sick-34, a-32)
advmod(sick-34, little-33)
parataxis('ve-3, sick-34)
conj:and('ve-19, sick-34)
cc(sick-34, But-36)
nsubj(had-39, I-37)
aux(had-39, 've-38)
conj:and('ve-19, had-39)
conj:but(sick-34, had-39)
nmod:poss(o-42, my-40)
compound(o-42, fun-41)
dobj(had-39, o-42)
det(Corp-45, the-44)
nsubj(Guard-49, Corp-45)
advmod(Guard-49, ral-47)
cop(Guard-49, 's-48)
acl:relcl(o-42, Guard-49)
nsubj(made-53, I-51)
aux(made-53, 've-52)
parataxis('ve-3, made-53)
det(cinders-55, the-54)
nsubj(fly-56, cinders-55)
ccomp(made-53, fly-56)
cc(Clink-64, And-58)
nsubj(Clink-64, I-59)
nsubj(blacking-70, I-59)
cop(Clink-64, 'm-60)
advmod(Clink-64, here-61)
case(Clink-64, in-62)
det(Clink-64, the-63)
parataxis('ve-3, Clink-64)
case(drink-68, for-65)
det(drink-68, a-66)
amod(drink-68, thundering-67)
nmod:for(Clink-64, drink-68)
cc(Clink-64, and-69)
parataxis('ve-3, blacking-70)
conj:and(Clink-64, blacking-70)
det(Corporal-72, the-71)
nmod:poss(eye-74, Corporal-72)
case(Corporal-72, 's-73)
dobj(blacking-70, eye-74)

(ROOT
  (S
    (PP (IN With)
      (NP (DT a) (JJ second-hand) (NN overcoat)))
    (S
      (UCP
        (PP (IN under)
          (NP (PRP$ my) (NN head)))
        (, ,)
        (CC And)
        (NP
          (NP (DT a) (JJ beautiful) (NN view))
          (PP (IN of)
            (NP (DT the) (NN yard))))))
    (, ,)
    (ADVP (RB O))
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (NN pack-drill))
          (PP (IN for)
            (NP (PRP me))))
        (CC and)
        (NP
          (NP
            (NP (DT a) (NN fortnight) (POS 's))
            (NNP C.B.))
          (PP (IN For)
            (S
              (VP (`` ``) (VBG drunk)
                (CC and)
                (VBG resisting)
                (NP (DT the) (NN Guard))))))))
    (. !) ('' '')))

case(overcoat-4, With-1)
det(overcoat-4, a-2)
amod(overcoat-4, second-hand-3)
nmod:with(pack-drill-20, overcoat-4)
case(head-7, under-5)
nmod:poss(head-7, my-6)
ccomp(pack-drill-20, head-7)
cc(head-7, And-9)
det(view-12, a-10)
amod(view-12, beautiful-11)
conj:and(head-7, view-12)
ccomp(pack-drill-20, view-12)
case(yard-15, of-13)
det(yard-15, the-14)
nmod:of(view-12, yard-15)
advmod(it-18, O-17)
nsubj(pack-drill-20, it-18)
cop(pack-drill-20, 's-19)
root(ROOT-0, pack-drill-20)
case(me-22, for-21)
nmod:for(pack-drill-20, me-22)
cc(pack-drill-20, and-23)
det(fortnight-25, a-24)
nmod:poss(C.B.-27, fortnight-25)
case(fortnight-25, 's-26)
conj:and(pack-drill-20, C.B.-27)
mark(drunk-30, For-28)
acl(C.B.-27, drunk-30)
cc(drunk-30, and-31)
acl(C.B.-27, resisting-32)
conj:and(drunk-30, resisting-32)
det(Guard-34, the-33)
dobj(drunk-30, Guard-34)

(ROOT
  (S
    (S
      (NP (NNP Mad))
      (VP (VBG drunk)
        (CC and)
        (VBG resisting)
        (NP
          (NP (DT the) (NN Guard))
          (: --) (`` `)
          (NP (NNP Strewth)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD socked)
        (S
          (NP (PRP it))
          (ADJP
            (NP (PRP them))
            (JJ hard)))))
    (. !)))

nsubj(drunk-2, Mad-1)
nsubj(resisting-4, Mad-1)
root(ROOT-0, drunk-2)
cc(drunk-2, and-3)
conj:and(drunk-2, resisting-4)
det(Guard-6, the-5)
dobj(drunk-2, Guard-6)
dep(Guard-6, Strewth-9)
cc(drunk-2, but-11)
nsubj(socked-13, I-12)
conj:but(drunk-2, socked-13)
nsubj(hard-16, it-14)
nmod:npmod(hard-16, them-15)
xcomp(socked-13, hard-16)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (NN pack-drill))
          (PP (IN for)
            (NP (PRP me))))
        (CC and)
        (NP
          (NP
            (NP (DT a) (NN fortnight) (POS 's))
            (NNP C.B.))
          (PP (IN For)
            (S
              (VP (`` ``) (VBG drunk)
                (CC and)
                (VBG resisting)
                (NP (DT the) (NN Guard))))))))
    (. .) ('' '')))

dep(pack-drill-4, So-1)
nsubj(pack-drill-4, it-2)
cop(pack-drill-4, 's-3)
root(ROOT-0, pack-drill-4)
case(me-6, for-5)
nmod:for(pack-drill-4, me-6)
cc(pack-drill-4, and-7)
det(fortnight-9, a-8)
nmod:poss(C.B.-11, fortnight-9)
case(fortnight-9, 's-10)
conj:and(pack-drill-4, C.B.-11)
mark(drunk-14, For-12)
acl(C.B.-11, drunk-14)
cc(drunk-14, and-15)
acl(C.B.-11, resisting-16)
conj:and(drunk-14, resisting-16)
det(Guard-18, the-17)
dobj(drunk-14, Guard-18)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD started)
        (NP
          (NP (NNP o) (POS '))
          (NN canteen) (NN porter))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBD finished)
          (NP
            (NP (NNP o) (POS '))
            (NN canteen) (NN beer))))
      (, ,))
    (CC But)
    (S
      (SBAR
        (NP
          (NP (DT a) (NN dose) (NN o) (POS '))
          (NN gin))
        (IN that)
        (S
          (NP (DT a) (NN mate))
          (VP (VBD slipped)
            (PRT (RP in)))))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)
        (SBAR (IN that)
          (S
            (NP (DT that))
            (VP (VBD brought)
              (NP (PRP me))
              (ADVP (RB here)))))))
    (. .)))

nsubj(started-2, I-1)
root(ROOT-0, started-2)
nmod:poss(porter-6, o-3)
case(o-3, '-4)
compound(porter-6, canteen-5)
dobj(started-2, porter-6)
nsubj(finished-9, I-8)
dep(started-2, finished-9)
nmod:poss(beer-13, o-10)
case(o-10, '-11)
compound(beer-13, canteen-12)
dobj(finished-9, beer-13)
cc(started-2, But-15)
det(o-18, a-16)
compound(o-18, dose-17)
nmod:poss(gin-20, o-18)
case(o-18, '-19)
dep(slipped-24, gin-20)
mark(slipped-24, that-21)
det(mate-23, a-22)
nsubj(slipped-24, mate-23)
advcl(was-28, slipped-24)
compound:prt(slipped-24, in-25)
nsubj(was-28, it-27)
conj:but(started-2, was-28)
mark(brought-31, that-29)
nsubj(brought-31, that-30)
ccomp(was-28, brought-31)
dobj(brought-31, me-32)
advmod(brought-31, here-33)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (NP
          (NP (DT that))
          (CC and)
          (NP
            (NP (DT an) (JJ extry) (JJ double) (NN Guard))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD rubbed)
                  (NP (PRP$ my) (NN nose))
                  (PP (IN in)
                    (NP (DT the) (NN dirt))))))))))
    (: ;)
    (CC But)
    (S
      (NP (PRP I))
      (VP (VBD fell)
        (ADVP (RB away)
          (PP (IN with)
            (NP (DT the) (NNP Corp))))
        (NP (`` `)
          (NP
            (NP (NNP ral) (POS 's))
            (NN stock))
          (CC and)
          (NP
            (NP (DT the) (JJS best))
            (PP (IN of)
              (NP (DT the) (NNP Corp) (`` `) (NNP ral) (POS 's) (NNP shirt)))))))
    (. .)))

nsubj(that-3, 'T-1)
cop(that-3, was-2)
root(ROOT-0, that-3)
cc(that-3, and-4)
det(Guard-8, an-5)
amod(Guard-8, extry-6)
amod(Guard-8, double-7)
conj:and(that-3, Guard-8)
nsubj(rubbed-10, Guard-8)
ref(Guard-8, that-9)
acl:relcl(Guard-8, rubbed-10)
nmod:poss(nose-12, my-11)
dobj(rubbed-10, nose-12)
case(dirt-15, in-13)
det(dirt-15, the-14)
nmod:in(rubbed-10, dirt-15)
cc(that-3, But-17)
nsubj(fell-19, I-18)
conj:and(that-3, fell-19)
advmod(fell-19, away-20)
case(Corp-23, with-21)
det(Corp-23, the-22)
nmod:with(away-20, Corp-23)
nmod:poss(stock-27, ral-25)
case(ral-25, 's-26)
dobj(fell-19, stock-27)
cc(stock-27, and-28)
det(best-30, the-29)
dobj(fell-19, best-30)
conj:and(stock-27, best-30)
case(shirt-37, of-31)
det(shirt-37, the-32)
compound(shirt-37, Corp-33)
nmod:poss(shirt-37, ral-35)
case(shirt-37, 's-36)
nmod:of(best-30, shirt-37)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD left)
        (NP (PRP$ my) (NN cap))
        (PP (IN in)
          (NP
            (NP (DT a) (NN public-house))
            (, ,)
            (NP (PRP$ my) (NNS boots))))
        (PP (IN in)
          (NP (DT the) (JJ public) (NN road)))))
    (, ,)
    (CC And)
    (S
      (NP (NNP Lord))
      (VP (VBZ knows)
        (SBAR
          (WHADVP (WRB where))
          (S
            (PRN (, ,)
              (CC and)
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB care))))
              (, ,))
            (NP
              (NP (PRP$ my) (NN belt))
              (CC and)
              (NP (PRP$ my) (NN tunic)))
            (VP (VBD goed))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (MD 'll)
        (VP (VB stop)
          (NP (PRP$ my) (NN pay)))))
    (, ,)
    (S
      (S
        (NP (PRP they))
        (VP (MD 'll)
          (VP (VB cut)
            (PRT (RP away))
            (NP
              (NP (DT the) (NNS stripes))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD used)
                    (S
                      (VP (TO to)
                        (VP (VB wear)))))))))))
      (, ,)
      (CC But)
      (S
        (NP (PRP I))
        (VP (VBD left)
          (NP
            (NP
              (NP (PRP$ my) (NN mark))
              (PP (IN on)
                (NP (DT the) (NNP Corp) (`` `) (NNP ral)))
              (POS 's))
            (NN face)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD 'll)
              (VP (VB keep)
                (NP (PRP it))
                (ADVP (RB there))))))))
    (. !)))

nsubj(left-2, I-1)
root(ROOT-0, left-2)
nmod:poss(cap-4, my-3)
dobj(left-2, cap-4)
case(public-house-7, in-5)
det(public-house-7, a-6)
nmod:in(left-2, public-house-7)
nmod:poss(boots-10, my-9)
appos(public-house-7, boots-10)
case(road-14, in-11)
det(road-14, the-12)
amod(road-14, public-13)
nmod:in(left-2, road-14)
cc(left-2, And-16)
nsubj(knows-18, Lord-17)
conj:and(left-2, knows-18)
advmod(goed-32, where-19)
cc(care-25, and-21)
nsubj(care-25, I-22)
aux(care-25, do-23)
neg(care-25, n't-24)
parataxis(goed-32, care-25)
nmod:poss(belt-28, my-27)
nsubj(goed-32, belt-28)
cc(belt-28, and-29)
nmod:poss(tunic-31, my-30)
conj:and(belt-28, tunic-31)
nsubj(goed-32, tunic-31)
ccomp(knows-18, goed-32)
nsubj(stop-36, They-34)
aux(stop-36, 'll-35)
conj:and(left-2, stop-36)
nmod:poss(pay-38, my-37)
dobj(stop-36, pay-38)
nsubj(cut-42, they-40)
aux(cut-42, 'll-41)
ccomp(left-2, cut-42)
compound:prt(cut-42, away-43)
det(stripes-45, the-44)
dobj(cut-42, stripes-45)
nsubj(used-47, I-46)
nsubj:xsubj(wear-49, I-46)
acl:relcl(stripes-45, used-47)
mark(wear-49, to-48)
xcomp(used-47, wear-49)
cc(cut-42, But-51)
nsubj(left-53, I-52)
ccomp(left-2, left-53)
conj:but(cut-42, left-53)
nmod:poss(mark-55, my-54)
nmod:poss(face-62, mark-55)
case(ral-60, on-56)
det(ral-60, the-57)
compound(ral-60, Corp-58)
nmod:on(mark-55, ral-60)
case(mark-55, 's-61)
dobj(left-53, face-62)
cc(left-2, and-64)
nsubj(think-66, I-65)
conj:and(left-2, think-66)
nsubj(keep-69, he-67)
aux(keep-69, 'll-68)
ccomp(think-66, keep-69)
dobj(keep-69, it-70)
advmod(keep-69, there-71)

(ROOT
  (S
    (NP
      (NP (PRP$ My) (NN wife))
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBZ cries)
            (PP (IN on)
              (NP
                (NP (DT the) (NN barrack-gate))
                (, ,)
                (NP
                  (NP (PRP$ my) (NN kid))
                  (PP (IN in)
                    (NP (DT the) (NN barrack-yard))))))))))
    (, ,)
    (S
      (NP (PRP It))
      (VP (VBZ ai) (RB n't)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VB mind)
              (NP (DT the) (JJ Ord) (`` `) (NN ly) (NN room)))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (VP (VBG _)
          (NP
            (NP (DT that) (NN _))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ cuts)
                  (ADJP (RB so) (JJ hard)))))))))
    (. .)))

nmod:poss(wife-2, My-1)
dep(ai-16, wife-2)
nsubj(cries-4, she-3)
acl:relcl(wife-2, cries-4)
case(barrack-gate-7, on-5)
det(barrack-gate-7, the-6)
nmod:on(cries-4, barrack-gate-7)
nmod:poss(kid-10, my-9)
appos(barrack-gate-7, kid-10)
case(barrack-yard-13, in-11)
det(barrack-yard-13, the-12)
nmod:in(kid-10, barrack-yard-13)
nsubj(ai-16, It-15)
root(ROOT-0, ai-16)
neg(ai-16, n't-17)
mark(mind-20, that-18)
nsubj(mind-20, I-19)
ccomp(ai-16, mind-20)
det(room-25, the-21)
amod(room-25, Ord-22)
compound(room-25, ly-24)
dobj(mind-20, room-25)
nsubj(_-29, it-27)
aux(_-29, 's-28)
parataxis(ai-16, _-29)
det(_-31, that-30)
dobj(_-29, _-31)
nsubj(cuts-33, _-31)
ref(_-31, that-32)
acl:relcl(_-31, cuts-33)
advmod(hard-35, so-34)
xcomp(cuts-33, hard-35)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB take)
          (NP (PRP$ my) (NN oath))
          (PP (IN before)
            (NP (PRP them) (DT both)))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (MD will)
                (ADVP (RB sure))
                (VP (VB abstain))))))))
    (, ,)
    (CC But)
    (S
      (ADVP (RB as) (RB soon)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (PP (IN in) (IN with)
                (NP
                  (NP (DT a) (NN mate))
                  (CC and)
                  (NP (NN gin))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD 'll)
              (VP (VB do)
                (NP (PRP it))
                (ADVP (RB again))))))))
    (. !)))

nsubj(take-3, I-1)
aux(take-3, 'll-2)
root(ROOT-0, take-3)
nmod:poss(oath-5, my-4)
dobj(take-3, oath-5)
case(them-7, before-6)
nmod:before(take-3, them-7)
det(them-7, both-8)
mark(abstain-13, that-9)
nsubj(abstain-13, I-10)
aux(abstain-13, will-11)
advmod(abstain-13, sure-12)
ccomp(take-3, abstain-13)
cc(take-3, But-15)
advmod(soon-17, as-16)
advmod(know-29, soon-17)
mark(mate-24, as-18)
nsubj(mate-24, I-19)
cop(mate-24, 'm-20)
case(mate-24, in-21)
case(mate-24, with-22)
det(mate-24, a-23)
ccomp(soon-17, mate-24)
cc(mate-24, and-25)
ccomp(soon-17, gin-26)
conj:and(mate-24, gin-26)
nsubj(know-29, I-28)
conj:but(take-3, know-29)
nsubj(do-32, I-30)
aux(do-32, 'll-31)
ccomp(know-29, do-32)
dobj(do-32, it-33)
advmod(do-32, again-34)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP
          (NP (DT a) (JJ second-hand) (NN overcoat))
          (PP (IN under)
            (NP (PRP$ my) (NN head))))
        (, ,)
        (CC And)
        (NP
          (NP (DT a) (JJ beautiful) (NN view))
          (PP (IN of)
            (NP (DT the) (NN yard))))))
    (, ,)
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (NN pack-drill))
          (PP (IN for)
            (NP (PRP me))))
        (CC and)
        (NP
          (NP
            (NP (DT a) (NN fortnight) (POS 's))
            (NNP C.B.))
          (PP (IN For)
            (S
              (VP (`` ``) (VBG drunk)
                (CC and)
                (VBG resisting)
                (NP (DT the) (NN Guard))))))))
    (. !) ('' '')))

case(overcoat-4, With-1)
det(overcoat-4, a-2)
amod(overcoat-4, second-hand-3)
nmod:with(pack-drill-21, overcoat-4)
case(head-7, under-5)
nmod:poss(head-7, my-6)
nmod:under(overcoat-4, head-7)
cc(overcoat-4, And-9)
det(view-12, a-10)
amod(view-12, beautiful-11)
conj:and(overcoat-4, view-12)
nmod:with(pack-drill-21, view-12)
case(yard-15, of-13)
det(yard-15, the-14)
nmod:of(view-12, yard-15)
discourse(pack-drill-21, Yes-17)
nsubj(pack-drill-21, it-19)
cop(pack-drill-21, 's-20)
root(ROOT-0, pack-drill-21)
case(me-23, for-22)
nmod:for(pack-drill-21, me-23)
cc(pack-drill-21, and-24)
det(fortnight-26, a-25)
nmod:poss(C.B.-28, fortnight-26)
case(fortnight-26, 's-27)
conj:and(pack-drill-21, C.B.-28)
mark(drunk-31, For-29)
acl(C.B.-28, drunk-31)
cc(drunk-31, and-32)
acl(C.B.-28, resisting-33)
conj:and(drunk-31, resisting-33)
det(Guard-35, the-34)
dobj(drunk-31, Guard-35)

(ROOT
  (S
    (S
      (NP (NNP Mad))
      (VP (VBG drunk)
        (CC and)
        (VBG resisting)
        (NP
          (NP (DT the) (NN Guard))
          (: --) (`` `)
          (NP (NNP Strewth)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBD socked)
        (S
          (NP (PRP it))
          (ADJP
            (NP (PRP them))
            (JJ hard)))))
    (. !)))

nsubj(drunk-2, Mad-1)
nsubj(resisting-4, Mad-1)
root(ROOT-0, drunk-2)
cc(drunk-2, and-3)
conj:and(drunk-2, resisting-4)
det(Guard-6, the-5)
dobj(drunk-2, Guard-6)
dep(Guard-6, Strewth-9)
cc(drunk-2, but-11)
nsubj(socked-13, I-12)
conj:but(drunk-2, socked-13)
nsubj(hard-16, it-14)
nmod:npmod(hard-16, them-15)
xcomp(socked-13, hard-16)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (NN pack-drill))
          (PP (IN for)
            (NP (PRP me))))
        (CC and)
        (NP
          (NP
            (NP (DT a) (NN fortnight) (POS 's))
            (NNP C.B.))
          (PP (IN For)
            (S
              (VP (`` ``) (VBG drunk)
                (CC and)
                (VBG resisting)
                (NP (DT the) (NN Guard))))))))
    (. .) ('' '')))

dep(pack-drill-4, So-1)
nsubj(pack-drill-4, it-2)
cop(pack-drill-4, 's-3)
root(ROOT-0, pack-drill-4)
case(me-6, for-5)
nmod:for(pack-drill-4, me-6)
cc(pack-drill-4, and-7)
det(fortnight-9, a-8)
nmod:poss(C.B.-11, fortnight-9)
case(fortnight-9, 's-10)
conj:and(pack-drill-4, C.B.-11)
mark(drunk-14, For-12)
acl(C.B.-11, drunk-14)
cc(drunk-14, and-15)
acl(C.B.-11, resisting-16)
conj:and(drunk-14, resisting-16)
det(Guard-18, the-17)
dobj(drunk-14, Guard-18)

(ROOT
  (S
    (S
      (NP
        (NP (NNP GUNGA) (NNP DIN))
        (SBAR
          (S
            (NP (PRP You))
            (VP (MD may)
              (VP (VB talk)
                (NP
                  (NP (NNP o) (POS '))
                  (NN gin)
                  (CC and)
                  (NN beer))
                (SBAR
                  (WHADVP (WRB When))
                  (S
                    (NP (PRP you))
                    (VP (VBP 're)
                      (ADJP (RB quartered) (JJ safe)
                        (PP (IN out)
                          (NP (`` `)
                            (NP (NNP ere) (, ,) (NNP An))
                            ('' ')
                            (SBAR
                              (S
                                (NP (PRP you))
                                (VP (VBP 're)
                                  (VP (VBN sent)
                                    (PP (TO to)
                                      (NP (NNS penny-fights)))))))))))))))))
        (, an) ('' '))
      (VP (VB Aldershot)
        (NP (PRP it))))
    (: ;)
    (CC But)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBZ comes)
            (S
              (VP (TO to)
                (VP (VB slaughter)
                  (SBAR
                    (S
                      (NP (PRP You))
                      (VP (MD will)
                        (VP (VB do)
                          (NP (PRP$ your) (NN work))
                          (PP (IN on)
                            (NP (NN water)))))))))))))
      (, ,)
      (NP
        (NP (NNP An) (POS '))
        (NN you))
      (VP (MD 'll)
        (VP (VB lick)
          (NP
            (NP
              (NP (DT the) (NN bloomin) (POS '))
              (NNS boots))
            (PP (IN of) (`` `)
              (NP
                (NP (NN im))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ 's)
                      (VP (VBN got)
                        (NP (PRP it))))))))))))
    (. .)))

compound(DIN-2, GUNGA-1)
nsubj(Aldershot-29, DIN-2)
nsubj(talk-5, You-3)
aux(talk-5, may-4)
acl:relcl(DIN-2, talk-5)
nmod:poss(gin-8, o-6)
case(o-6, '-7)
dobj(talk-5, gin-8)
cc(gin-8, and-9)
dobj(talk-5, beer-10)
conj:and(gin-8, beer-10)
advmod(safe-15, When-11)
nsubj(safe-15, you-12)
cop(safe-15, 're-13)
advmod(safe-15, quartered-14)
advcl(talk-5, safe-15)
case(An-20, out-16)
compound(An-20, ere-18)
nmod:out(safe-15, An-20)
nsubjpass(sent-24, you-22)
auxpass(sent-24, 're-23)
acl:relcl(An-20, sent-24)
case(penny-fights-26, to-25)
nmod:to(sent-24, penny-fights-26)
root(ROOT-0, Aldershot-29)
dobj(Aldershot-29, it-30)
cc(Aldershot-29, But-32)
advmod(comes-35, when-33)
nsubj(comes-35, it-34)
nsubj:xsubj(slaughter-37, it-34)
advcl(lick-50, comes-35)
mark(slaughter-37, to-36)
xcomp(comes-35, slaughter-37)
nsubj(do-40, You-38)
aux(do-40, will-39)
ccomp(slaughter-37, do-40)
nmod:poss(work-42, your-41)
dobj(do-40, work-42)
case(water-44, on-43)
nmod:on(do-40, water-44)
nmod:poss(you-48, An-46)
case(An-46, '-47)
nsubj(lick-50, you-48)
aux(lick-50, 'll-49)
conj:but(Aldershot-29, lick-50)
det(bloomin-52, the-51)
nmod:poss(boots-54, bloomin-52)
case(bloomin-52, '-53)
dobj(lick-50, boots-54)
case(im-57, of-55)
nmod:of(boots-54, im-57)
nsubjpass(got-60, im-57)
ref(im-57, that-58)
auxpass(got-60, 's-59)
acl:relcl(im-57, got-60)
dobj(got-60, it-61)

(ROOT
  (SINV
    (PP
      (ADVP (RB Now))
      (IN in)
      (NP
        (NP
          (NP (NNP Injia) (POS 's))
          (JJ sunny) (NN clime))
        (, ,)
        (SBAR
          (WHADVP (WRB Where))
          (S
            (NP (PRP I))
            (VP (VBD used)
              (S
                (VP (TO to)
                  (VP (VB spend)
                    (NP
                      (NP (PRP$ my) (NN time) (NN A-servin))
                      ('' ')
                      (PP (IN of) (`` `)
                        (NP
                          (NP (NNP Er) (NNP Majesty))
                          (SBAR
                            (S
                              (NP (DT the) (NN Queen))
                              (, ,)
                              (PP (IN Of)
                                (NP (DT all)))
                              (NP (PRP them))
                              (VP (VBD blackfaced)
                                (NP (NN crew))
                                (NP
                                  (NP (DT The) (JJS finest) (NN man))
                                  (SBAR
                                    (S
                                      (NP (PRP I))
                                      (VP (VBD knew)))))))))))))))))))
    (VP (VBD Was))
    (NP
      (NP (PRP$ our) (JJ regimental) (NNS bhisti))
      (, ,)
      (NP (NNP Gunga) (NNP Din)))
    (. .)))

advmod(clime-6, Now-1)
case(clime-6, in-2)
nmod:poss(clime-6, Injia-3)
case(Injia-3, 's-4)
amod(clime-6, sunny-5)
nmod:in(Was-34, clime-6)
advmod(used-10, Where-8)
nsubj(used-10, I-9)
nsubj:xsubj(spend-12, I-9)
acl:relcl(clime-6, used-10)
mark(spend-12, to-11)
xcomp(used-10, spend-12)
nmod:poss(A-servin-15, my-13)
compound(A-servin-15, time-14)
dobj(spend-12, A-servin-15)
case(Majesty-20, of-17)
compound(Majesty-20, Er-19)
nmod:of(A-servin-15, Majesty-20)
det(Queen-22, the-21)
nsubj(blackfaced-27, Queen-22)
case(all-25, Of-24)
nmod:of(blackfaced-27, all-25)
nsubj(blackfaced-27, them-26)
acl:relcl(Majesty-20, blackfaced-27)
iobj(blackfaced-27, crew-28)
det(man-31, The-29)
amod(man-31, finest-30)
dobj(blackfaced-27, man-31)
nsubj(knew-33, I-32)
acl:relcl(man-31, knew-33)
root(ROOT-0, Was-34)
nmod:poss(bhisti-37, our-35)
amod(bhisti-37, regimental-36)
nsubj(Was-34, bhisti-37)
compound(Din-40, Gunga-39)
appos(bhisti-37, Din-40)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was) (`` ``)
      (ADJP (JJ Din)))
    (. !)))

nsubj(Din-4, He-1)
cop(Din-4, was-2)
root(ROOT-0, Din-4)

(ROOT
  (S
    (VP (VB Din))
    (. !)))

root(ROOT-0, Din-1)

(ROOT
  (S
    (VP (VB Din))
    (. !)))

root(ROOT-0, Din-1)

(ROOT
  (NP
    (NP (PRP You))
    (NP
      (NP
        (NP (NN limpin) (POS '))
        (NN lump) (NN o) ('' ') (NN brick-dust))
      (, ,)
      (NP (NNP Gunga) (NNP Din)))
    (. !)))

root(ROOT-0, You-1)
nmod:poss(brick-dust-7, limpin-2)
case(limpin-2, '-3)
compound(brick-dust-7, lump-4)
compound(brick-dust-7, o-5)
dep(You-1, brick-dust-7)
compound(Din-10, Gunga-9)
appos(brick-dust-7, Din-10)

(ROOT
  (S
    (VP (VB Hi))
    (. !)))

root(ROOT-0, Hi-1)

(ROOT
  (NP (NNP slippery) (NNP _) (NNP hitherao) (NNP _) (. !)))

compound(_-4, slippery-1)
compound(_-4, _-2)
compound(_-4, hitherao-3)
root(ROOT-0, _-4)

(ROOT
  (S
    (NP (NNP Water))
    (, ,)
    (VP (VB get)
      (NP (PRP it)))
    (. !)))

nsubj(get-3, Water-1)
root(ROOT-0, get-3)
dobj(get-3, it-4)

(ROOT
  (NP (NNP _) (NNP Panee) (NNP lao) (NNP _) (. !)))

compound(_-4, _-1)
compound(_-4, Panee-2)
compound(_-4, lao-3)
root(ROOT-0, _-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD squidgy-nosed)
      (NP
        (NP (JJ old) (NN idol))
        (, ,)
        (NP (NNP Gunga) (NNP Din))))
    (. .) ('' '')))

nsubj(squidgy-nosed-2, You-1)
root(ROOT-0, squidgy-nosed-2)
amod(idol-4, old-3)
dobj(squidgy-nosed-2, idol-4)
compound(Din-7, Gunga-6)
appos(idol-4, Din-7)

(ROOT
  (S
    (NP
      (NP (DT The) (NN uniform) (POS '))
      (NN e))
    (VP (VBD wore)
      (NP
        (NP (JJ Was) (NN nothin) (POS '))
        (JJ much))
      (SBAR (IN before) (, ,)
        (S
          (NP
            (NP (NNP An) (POS '))
            (ADJP
              (ADJP (RB rather) (JJR less))
              (PP (IN than)
                (NP
                  (NP (`` `) (NN arf) (NN o) ('' '))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD be'ind) (, ,)
                        (SBAR
                          (S
                            (PP (IN For)
                              (NP
                                (NP (DT a) (NN piece) (NN o) (POS '))
                                (JJ twisty) (NN rag)))
                            (NP (NNP An) (POS ') (DT a) (JJ goatskin) (NNS water-bag))
                            (VP (VBD Was)
                              (NP (PDT all) (DT the) (NN field-equipment)))
                            ('' ')))))))))
            (NNS e))
          (VP (MD could)
            (VP (VB find))))))
    (. .)))

det(uniform-2, The-1)
nmod:poss(e-4, uniform-2)
case(uniform-2, '-3)
nsubj(wore-5, e-4)
root(ROOT-0, wore-5)
amod(nothin-7, Was-6)
dobj(wore-5, nothin-7)
case(nothin-7, '-8)
amod(nothin-7, much-9)
mark(find-43, before-10)
nmod:poss(e-41, An-12)
case(An-12, '-13)
advmod(less-15, rather-14)
amod(e-41, less-15)
case(o-19, than-16)
compound(o-19, arf-18)
nmod:than(less-15, o-19)
nsubj(be'ind-22, o-19)
ref(o-19, that-21)
acl:relcl(o-19, be'ind-22)
case(rag-30, For-24)
det(o-27, a-25)
compound(o-27, piece-26)
nmod:poss(rag-30, o-27)
case(o-27, '-28)
amod(rag-30, twisty-29)
nmod:for(field-equipment-39, rag-30)
nmod:poss(water-bag-35, An-31)
case(water-bag-35, '-32)
det(water-bag-35, a-33)
amod(water-bag-35, goatskin-34)
nsubj(field-equipment-39, water-bag-35)
cop(field-equipment-39, Was-36)
det:predet(field-equipment-39, all-37)
det(field-equipment-39, the-38)
ccomp(be'ind-22, field-equipment-39)
nsubj(find-43, e-41)
aux(find-43, could-42)
advcl(wore-5, find-43)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP
          (NP (DT the) (NN sweatin) (POS '))
          (NN troop-train))
        (VP (VBD lay)
          (PP (IN In)
            (NP (DT a) (NN sidin)))
          ('' ')
          (PP (IN through)
            (NP
              (NP (DT the) (NN day))
              (, ,)
              (SBAR
                (WHADVP (WRB Where))
                (S
                  (NP (DT the) (`` `) (NN eat))
                  (VP (MD would)
                    (VP (VB make)
                      (NP
                        (NP (PRP$ your) (NN bloomin) (POS '))
                        (JJ eyebrows) (NN crawl)))))))))))
    (, ,)
    (NP (PRP We))
    (VP (VBD shouted)
      (S (`` ``)
        (NP (NNP Harry)))
      (PP (IN By)))
    (. !) ('' '')))

advmod(lay-6, When-1)
det(sweatin-3, the-2)
nmod:poss(troop-train-5, sweatin-3)
case(sweatin-3, '-4)
nsubj(lay-6, troop-train-5)
advcl(shouted-28, lay-6)
case(sidin-9, In-7)
det(sidin-9, a-8)
nmod:in(lay-6, sidin-9)
case(day-13, through-11)
det(day-13, the-12)
nmod:through(lay-6, day-13)
advmod(make-20, Where-15)
det(eat-18, the-16)
nsubj(make-20, eat-18)
aux(make-20, would-19)
acl:relcl(day-13, make-20)
nmod:poss(bloomin-22, your-21)
nmod:poss(crawl-25, bloomin-22)
case(bloomin-22, '-23)
amod(crawl-25, eyebrows-24)
dobj(make-20, crawl-25)
nsubj(shouted-28, We-27)
root(ROOT-0, shouted-28)
xcomp(shouted-28, Harry-30)
nmod(shouted-28, By-31)

(ROOT
  (S
    (S
      (ADVP (RB Till))
      (NP (PRP$ our) (NNS throats))
      (VP (VBD were)
        (ADJP (JJ bricky-dry))))
    (, ,) (RB Then)
    (S
      (NP (PRP we))
      (VP (VBD wopped)
        (NP
          (NP (`` `) (NN im) (NN 'cause) ('' '))
          (FRAG
            (X (SYM e))
            (VP (MD could) (RB n't)
              (VP (VB serve)
                (S
                  (NP (PRP us))
                  (NP (DT all)))))))))
    (. .)))

advmod(bricky-dry-5, Till-1)
nmod:poss(throats-3, our-2)
nsubj(bricky-dry-5, throats-3)
cop(bricky-dry-5, were-4)
root(ROOT-0, bricky-dry-5)
advmod(bricky-dry-5, Then-7)
nsubj(wopped-9, we-8)
parataxis(bricky-dry-5, wopped-9)
compound('cause-12, im-11)
dobj(wopped-9, 'cause-12)
dep(serve-17, e-14)
aux(serve-17, could-15)
neg(serve-17, n't-16)
dep('cause-12, serve-17)
nsubj(all-19, us-18)
xcomp(serve-17, all-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was) (`` ``)
      (ADJP (JJ Din)))
    (. !)))

nsubj(Din-4, It-1)
cop(Din-4, was-2)
root(ROOT-0, Din-4)

(ROOT
  (S
    (VP (VB Din))
    (. !)))

root(ROOT-0, Din-1)

(ROOT
  (S
    (VP (VB Din))
    (. !)))

root(ROOT-0, Din-1)

(ROOT
  (NP
    (NP
      (NP (PRP You))
      (VP (`` `) (VBN eathen) (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NN mischief))
            (VP (`` `) (VBP ave)
              (NP (PRP you)))))))
    (VP (VBN been))
    (. ?)))

root(ROOT-0, You-1)
acl(You-1, eathen-3)
advmod(ave-9, where-5)
det(mischief-7, the-6)
nsubj(ave-9, mischief-7)
advcl(eathen-3, ave-9)
dobj(ave-9, you-10)
acl(You-1, been-11)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD put)
        (NP (DT some) (JJ _) (NN juldee) (NN _))
        (PP (IN in)
          (NP (PRP it)))))
    (CC Or)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB _)
          (S
            (NP (NN marrow) (NNS _))
            (NP (PRP you))
            (SBAR
              (NP (DT this) (NN minute))
              (IN If)
              (S
                (NP (PRP you))
                (VP (VBP do) (RB n't)
                  (VP (VB fill)
                    (PRT (RP up))
                    (NP
                      (NP (PRP$ my) (NN helmet))
                      (, ,)
                      (NP (NNP Gunga) (NNP Din)))))))))))
    (. !) ('' '') ('' ')))

nsubj(put-2, You-1)
root(ROOT-0, put-2)
det(_-6, some-3)
amod(_-6, _-4)
compound(_-6, juldee-5)
dobj(put-2, _-6)
case(it-8, in-7)
nmod:in(put-2, it-8)
cc(put-2, Or-9)
nsubj(_-12, I-10)
aux(_-12, 'll-11)
conj:or(put-2, _-12)
compound(_-14, marrow-13)
nsubj(fill-22, _-14)
dep(fill-22, you-15)
det(minute-17, this-16)
dep(fill-22, minute-17)
mark(fill-22, If-18)
nsubj(fill-22, you-19)
aux(fill-22, do-20)
neg(fill-22, n't-21)
xcomp(_-12, fill-22)
compound:prt(fill-22, up-23)
nmod:poss(helmet-25, my-24)
dobj(fill-22, helmet-25)
compound(Din-28, Gunga-27)
appos(helmet-25, Din-28)

(ROOT
  (S
    (NP (NNP E))
    (VP (MD would)
      (VP (VB dot)
        (SBAR
          (S
            (NP (DT an)
              (S
                (NP (POS '))
                (VP (VBP carry)
                  (NP
                    (SBAR
                      (WHNP
                        (WHNP (CD one))
                        (PP (IN Till)
                          (NP (DT the) (JJS longest) (NN day))))
                      (S
                        (VP (VBD was)
                          (VP (VBN done)))))
                    (: ;)
                    (NP
                      (NP (NNP An) (POS '))
                      ('' ') (NN e))))))
            (VP (VBD did) (RB n't)
              (VP (VB seem)
                (S
                  (VP (TO to)
                    (VP (VB know)
                      (NP
                        (NP (DT the) (NN use) (NN o) (POS '))
                        (NN fear)))))))))))
    (. .)))

nsubj(dot-3, E-1)
aux(dot-3, would-2)
root(ROOT-0, dot-3)
nsubj(seem-21, an-4)
nsubj:xsubj(know-23, an-4)
nsubj(carry-6, '-5)
dep(an-4, carry-6)
nsubjpass(done-13, one-7)
case(day-11, Till-8)
det(day-11, the-9)
amod(day-11, longest-10)
nmod:till(one-7, day-11)
auxpass(done-13, was-12)
dep(e-18, done-13)
nmod:poss(e-18, An-15)
case(An-15, '-16)
dobj(carry-6, e-18)
aux(seem-21, did-19)
neg(seem-21, n't-20)
ccomp(dot-3, seem-21)
mark(know-23, to-22)
xcomp(seem-21, know-23)
det(o-26, the-24)
compound(o-26, use-25)
nmod:poss(fear-28, o-26)
case(o-26, '-27)
dobj(know-23, fear-28)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP
          (VP (VBD charged))
          (CC or)
          (VP
            (VP (VBD broke))
            (CC or)
            (VP (VBD cut))))))
    (PRN (, ,)
      (S
        (NP (PRP You))
        (VP (MD could)
          (VP (VB bet)
            (NP
              (NP (PRP$ your) (NN bloomin) (POS '))
              (NN nut)))))
      (, ,))
    (`` `)
    (NP (NNP E))
    (VP (MD 'd)
      (VP (VB be)
        (NP
          (NP (NN waitin) (POS '))
          (ADJP (RB fifty) (JJ paces))
          (JJ right) (NN flank) (NN rear))))
    (. .)))

mark(charged-3, If-1)
nsubj(charged-3, we-2)
nsubj(broke-5, we-2)
advcl(rear-27, charged-3)
cc(charged-3, or-4)
conj:or(charged-3, broke-5)
advcl(rear-27, broke-5)
cc(broke-5, or-6)
conj:or(charged-3, cut-7)
conj:or(broke-5, cut-7)
nsubj(bet-11, You-9)
aux(bet-11, could-10)
parataxis(rear-27, bet-11)
nmod:poss(bloomin-13, your-12)
nmod:poss(nut-15, bloomin-13)
case(bloomin-13, '-14)
dobj(bet-11, nut-15)
nsubj(rear-27, E-18)
aux(rear-27, 'd-19)
cop(rear-27, be-20)
nmod:poss(rear-27, waitin-21)
case(waitin-21, '-22)
advmod(paces-24, fifty-23)
amod(rear-27, paces-24)
amod(rear-27, right-25)
compound(rear-27, flank-26)
root(ROOT-0, rear-27)

(ROOT
  (S
    (SBAR (IN With)
      (S (`` `)
        (S
          (VP (VBZ is)
            (NP
              (NP (JJ _) (NN mussick) (NNS _))
              (PP (IN on)
                (NP (`` `)
                  (S
                    (VP (VBZ is)
                      (ADVP (RB back))))
                  (, ,) ('' ')
                  (NP
                    (NP (NN E))
                    (SBAR
                      (S
                        (VP (MD would)
                          (VP (VB skip)
                            (PP (IN with)
                              (NP (PRP$ our) (NN attack)))
                            (, ,)
                            (S
                              (NP (NNP An) (POS '))
                              (VP (VB watch)
                                (NP (PRP us))
                                (SBAR (IN till)
                                  (S
                                    (NP (DT the) (NNS bugles))
                                    (VP (VBD made)
                                      (S (`` ``)
                                        (NP (NNP Retire))
                                        ('' '')))))))))))))))))
        (, ,)
        (NP
          (NP (NNP An) (POS '))
          (PP (IN for)
            (NP (DT all))))
        (`` `)
        (VP (VBZ is)
          (ADJP (JJ dirty)))))
    (NP (`` `) (NNP ide) ('' ') (NNP E))
    (VP (VBD was)
      (ADJP
        (ADJP (JJ white))
        (, ,)
        (ADJP (JJ clear) (JJ white)))
      (, ,)
      (PP (IN inside)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (POS '))
            (ADVP (RB e))
            (VP (VBD went)
              (S
                (VP (TO to)
                  (VP (VB tend)
                    (NP (DT the) (JJ wounded))
                    (PP (IN under)
                      (NP (NN fire)))))))))))
    (. !)))

mark(dirty-38, With-1)
cop(_-6, is-3)
amod(_-6, _-4)
compound(_-6, mussick-5)
ccomp(dirty-38, _-6)
case(E-13, on-7)
dep(E-13, is-9)
advmod(is-9, back-10)
nmod:on(_-6, E-13)
aux(skip-15, would-14)
acl:relcl(E-13, skip-15)
case(attack-18, with-16)
nmod:poss(attack-18, our-17)
nmod:with(skip-15, attack-18)
nsubj(watch-22, An-20)
case(An-20, '-21)
ccomp(skip-15, watch-22)
dobj(watch-22, us-23)
mark(made-27, till-24)
det(bugles-26, the-25)
nsubj(made-27, bugles-26)
advcl(watch-22, made-27)
xcomp(made-27, Retire-29)
nsubj(dirty-38, An-32)
case(An-32, '-33)
case(all-35, for-34)
nmod:for(An-32, all-35)
cop(dirty-38, is-37)
advcl(white-44, dirty-38)
compound(E-42, ide-40)
nsubj(white-44, E-42)
cop(white-44, was-43)
root(ROOT-0, white-44)
amod(white-47, clear-46)
dep(white-44, white-47)
mark(went-53, inside-49)
advmod(went-53, When-50)
nsubj(went-53, '-51)
nsubj:xsubj(tend-55, '-51)
advmod(went-53, e-52)
advcl(white-44, went-53)
mark(tend-55, to-54)
xcomp(went-53, tend-55)
det(wounded-57, the-56)
dobj(tend-55, wounded-57)
case(fire-59, under-58)
nmod:under(tend-55, fire-59)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was) (`` ``)
      (ADJP (JJ Din)))
    (. !)))

nsubj(Din-4, It-1)
cop(Din-4, was-2)
root(ROOT-0, Din-4)

(ROOT
  (S
    (VP (VB Din))
    (. !)))

root(ROOT-0, Din-1)

(ROOT
  (S
    (VP (VB Din))
    (. !) ('' '')))

root(ROOT-0, Din-1)

(ROOT
  (S
    (PP (IN With)
      (NP (DT the) (NNS bullets)))
    (NP (NNP kickin) (POS '))
    (VP (VBZ dust-spots)
      (PP (IN on)
        (NP (DT the) (NN green))))
    (. .)))

case(bullets-3, With-1)
det(bullets-3, the-2)
nmod:with(dust-spots-6, bullets-3)
nsubj(dust-spots-6, kickin-4)
case(kickin-4, '-5)
root(ROOT-0, dust-spots-6)
case(green-9, on-7)
det(green-9, the-8)
nmod:on(dust-spots-6, green-9)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NNS cartridges))
        (VP (VBD ran)
          (PRT (RP out)))))
    (, ,)
    (NP (PRP You))
    (VP (MD could)
      (VP (VB hear)
        (NP
          (NP (DT the) (JJ front-files) (NN shout))
          (, ,) (`` ``)
          (NP (NNP Hi)))))
    (. !)))

advmod(ran-4, When-1)
det(cartridges-3, the-2)
nsubj(ran-4, cartridges-3)
advcl(hear-9, ran-4)
compound:prt(ran-4, out-5)
nsubj(hear-9, You-7)
aux(hear-9, could-8)
root(ROOT-0, hear-9)
det(shout-12, the-10)
amod(shout-12, front-files-11)
dobj(hear-9, shout-12)
dep(shout-12, Hi-15)

(ROOT
  (FRAG
    (NP
      (NP (NNS ammunition-mules))
      (NP
        (NP
          (NP (DT an))
          (POS '))
        (NNP Gunga) (NNP Din)))
    (. !) ('' '')))

root(ROOT-0, ammunition-mules-1)
nmod:poss(Din-5, an-2)
case(an-2, '-3)
compound(Din-5, Gunga-4)
dep(ammunition-mules-1, Din-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP sha) (RB n't)
      (VP (VB forgit)
        (NP (DT the) (NN night))
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP I))
            (VP (VBD dropped)
              (SBAR
                (S
                  (VP (VBD be'ind)
                    (NP (DT the) (NN fight))
                    (PP (IN With)
                      (NP (DT a) (NN bullet)))
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (PRP$ my) (NN belt-plate))
                        (VP (MD should)
                          (S
                            (NP (`` `)
                              (NP (SYM a))
                              ('' ')
                              (VP (VBN been)))))))))))))))
    (. .)))

nsubj(forgit-4, I-1)
aux(forgit-4, sha-2)
neg(forgit-4, n't-3)
root(ROOT-0, forgit-4)
det(night-6, the-5)
nmod:tmod(forgit-4, night-6)
advmod(dropped-9, When-7)
nsubj(dropped-9, I-8)
advcl(forgit-4, dropped-9)
ccomp(dropped-9, be'ind-10)
det(fight-12, the-11)
dobj(be'ind-10, fight-12)
case(bullet-15, With-13)
det(bullet-15, a-14)
nmod:with(be'ind-10, bullet-15)
advmod(should-19, where-16)
nmod:poss(belt-plate-18, my-17)
nsubj(should-19, belt-plate-18)
advcl(be'ind-10, should-19)
xcomp(should-19, a-21)
acl(a-21, been-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (NP
        (NP
          (NP (NN chokin) (POS '))
          (JJ mad))
        (PP (IN with)
          (NP
            (NP (NN thirst))
            (, ,)
            (NP (NNP An))))
        ('' ')
        (NP
          (NP (DT the) (NN man))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD spied)
                (SBAR
                  (S
                    (NP (PRP me))
                    (ADVP (RB first))
                    (VP (VBD Was)
                      (NP
                        (NP (PRP$ our) (JJ good) (JJ old) (NN grinnin) ('' '))
                        (, ,)
                        (NP
                          (NP (NN gruntin) (POS '))
                          (NNP Gunga) (NNP Din))))))))))))
    (. .) ('' ')))

nsubj(chokin-3, I-1)
cop(chokin-3, was-2)
root(ROOT-0, chokin-3)
case(chokin-3, '-4)
amod(chokin-3, mad-5)
case(thirst-7, with-6)
nmod:with(chokin-3, thirst-7)
appos(thirst-7, An-9)
det(man-12, the-11)
dep(chokin-3, man-12)
nsubj(spied-14, man-12)
ref(man-12, that-13)
acl:relcl(man-12, spied-14)
nsubj(grinnin-21, me-15)
advmod(grinnin-21, first-16)
cop(grinnin-21, Was-17)
nmod:poss(grinnin-21, our-18)
amod(grinnin-21, good-19)
amod(grinnin-21, old-20)
ccomp(spied-14, grinnin-21)
nmod:poss(Din-27, gruntin-24)
case(gruntin-24, '-25)
compound(Din-27, Gunga-26)
appos(grinnin-21, Din-27)

(ROOT
  (S
    (S
      (S
        (NP (NNP E))
        (VP (VBD lifted)
          (PRT (RP up))
          (NP (PRP$ my) (`` `)
            (S
              (VP (VBP ead) (, ,)
                (NP
                  (NP (NNP An))
                  ('' ')
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD plugged)
                        (NP
                          (NP
                            (NP (PRP me))
                            (SBAR
                              (WHADVP (WRB where))
                              (S
                                (NP (PRP I))
                                (VP (VBD bled)))))
                          (, ,)
                          (NP (NNP An) (POS ')))))))))
            ('' ') (NNS e))
          (S
            (VP (VB guv)
              (S
                (NP (PRP me))
                (`` `)
                (NP
                  (NP (JJ arf-a-pint) (NN o) (POS '))
                  (NN water-green)))))))
      (: :)
      (S
        (NP (PRP It))
        (VP (VBD was)
          (VP (VBN crawlin))))
      ('' ')
      (CC and)
      (S
        (NP (PRP it))
        (VP (VBP stunk))))
    (, ,)
    (CC But)
    (S
      (PP (IN of)
        (NP
          (NP (PDT all) (DT the) (NNS drinks))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 've)
                (ADVP (NN drunk)))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ gratefullest)
          (PP (TO to)
            (NP (CD one))))
        (PP (IN from)
          (NP (NNP Gunga) (NNP Din)))))
    (. .)))

nsubj(lifted-2, E-1)
root(ROOT-0, lifted-2)
compound:prt(lifted-2, up-3)
nmod:poss(e-20, my-4)
dep(e-20, ead-6)
dobj(ead-6, An-8)
nsubj(plugged-11, he-10)
acl:relcl(An-8, plugged-11)
dobj(plugged-11, me-12)
advmod(bled-15, where-13)
nsubj(bled-15, I-14)
acl:relcl(me-12, bled-15)
appos(me-12, An-17)
case(An-17, '-18)
dobj(lifted-2, e-20)
dep(lifted-2, guv-21)
dep(water-green-27, me-22)
amod(o-25, arf-a-pint-24)
nmod:poss(water-green-27, o-25)
case(o-25, '-26)
xcomp(guv-21, water-green-27)
nsubjpass(crawlin-31, It-29)
auxpass(crawlin-31, was-30)
conj:and(lifted-2, crawlin-31)
cc(lifted-2, and-33)
nsubj(stunk-35, it-34)
conj:and(lifted-2, stunk-35)
cc(lifted-2, But-37)
case(drinks-41, of-38)
det:predet(drinks-41, all-39)
det(drinks-41, the-40)
nmod:of(gratefullest-48, drinks-41)
nsubj('ve-43, I-42)
acl:relcl(drinks-41, 've-43)
advmod('ve-43, drunk-44)
nsubj(gratefullest-48, I-46)
cop(gratefullest-48, 'm-47)
conj:but(lifted-2, gratefullest-48)
case(one-50, to-49)
nmod:to(gratefullest-48, one-50)
case(Din-53, from-51)
compound(Din-53, Gunga-52)
nmod:from(gratefullest-48, Din-53)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was) (`` ``)
      (ADJP (JJ Din)))
    (. !)))

nsubj(Din-4, It-1)
cop(Din-4, was-2)
root(ROOT-0, Din-4)

(ROOT
  (S
    (VP (VB Din))
    (. !)))

root(ROOT-0, Din-1)

(ROOT
  (S
    (VP (VB Din))
    (. !)))

root(ROOT-0, Din-1)

(ROOT
  (S (`` `)
    (NP (NNP Ere))
    (VP (VBZ 's)
      (ADVP
        (NP
          (NP (DT a) (NN beggar))
          (PP (IN with)
            (NP (DT a) (NN bullet))))
        (IN through))
      (`` `)
      (SQ (VBZ is)
        (NP
          (NP
            (NP (NN spleen))
            (: ;)
            (NP (`` `)
              (NP
                (NP (NNP E) (POS 's))
                (NN chawin))
              ('' ')
              (PP (IN up)
                (NP
                  (NP (DT the) (NN ground))
                  (, ,)
                  (NP
                    (NP
                      (NP (NNP An) (POS '))
                      (`` `)
                      (NP (NNP e) (POS 's))
                      (NN kickin) ('' '))
                    (ADVP (DT all) (IN around)))))))
          (PRN (: :)
            (PP (IN For)
              (NP
                (NP (NNP Gawd) (POS 's))
                (NN sake) (NN git)))
            (NP
              (NP (DT the) (NN water))
              (, ,)
              (NP (NNP Gunga) (NNP Din)))))))
    (. !) ('' '') ('' ')))

nsubj('s-3, Ere-2)
root(ROOT-0, 's-3)
det(beggar-5, a-4)
advmod('s-3, beggar-5)
case(bullet-8, with-6)
det(bullet-8, a-7)
nmod:with(beggar-5, bullet-8)
case(beggar-5, through-9)
dep('s-3, is-11)
nsubj(is-11, spleen-12)
nmod:poss(chawin-17, E-15)
case(E-15, 's-16)
dep(spleen-12, chawin-17)
case(ground-21, up-19)
det(ground-21, the-20)
nmod:up(chawin-17, ground-21)
nmod:poss(kickin-28, An-23)
case(An-23, '-24)
nmod:poss(kickin-28, e-26)
case(e-26, 's-27)
appos(ground-21, kickin-28)
advmod(kickin-28, all-30)
case(all-30, around-31)
case(git-37, For-33)
nmod:poss(git-37, Gawd-34)
case(Gawd-34, 's-35)
compound(git-37, sake-36)
nmod:for(water-39, git-37)
det(water-39, the-38)
dep(spleen-12, water-39)
compound(Din-42, Gunga-41)
appos(water-39, Din-42)

(ROOT
  (S
    (S
      (NP (NNP E))
      (VP (VBD carried)
        (NP (PRP me))
        (ADVP (RB away)
          (PP (TO To)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT a) (NNS dooli))
                (VP (VBD lay))))))))
    (, ,)
    (NP (NNP An) (POS ') (DT a) (NNP bullet))
    (VP (VBP come)
      (SBAR
        (S
          (NP
            (NP (DT an))
            (POS '))
          (VP (VBN drilled)
            (S
              (NP (DT the) (NN beggar))
              (ADJP (JJ clean)))))))
    (. .) ('' ')))

nsubj(carried-2, E-1)
ccomp(come-15, carried-2)
dobj(carried-2, me-3)
advmod(carried-2, away-4)
mark(lay-9, To-5)
advmod(lay-9, where-6)
det(dooli-8, a-7)
nsubj(lay-9, dooli-8)
advcl(away-4, lay-9)
nmod:poss(bullet-14, An-11)
case(bullet-14, '-12)
det(bullet-14, a-13)
nsubj(come-15, bullet-14)
root(ROOT-0, come-15)
nsubj(drilled-18, an-16)
case(an-16, '-17)
ccomp(come-15, drilled-18)
det(beggar-20, the-19)
nsubj(clean-21, beggar-20)
xcomp(drilled-18, clean-21)

(ROOT
  (S
    (NP (NNP E))
    (VP (VBD put)
      (S
        (NP (PRP me))
        (ADJP (JJ safe)
          (PP (IN inside)
            (PRN (, ,)
              (S
                (NP
                  (NP
                    (NAC
                      (NP (NNP An) (POS '))
                      (PP
                        (ADVP (RB just))
                        (IN before)))
                    (POS '))
                  (NN e))
                (VP (VBD died) (, ,) (`` ``)
                  (S
                    (NP (PRP I))
                    (`` `)
                    (ADJP (JJ ope)
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBD liked)
                            (NP (PRP$ your) (NN drink))))))
                    ('' ''))))
              (, ,))
            (S
              (VP (VBG sez)
                (NP (NNP Gunga) (NNP Din))))))))
    (. .)))

nsubj(put-2, E-1)
root(ROOT-0, put-2)
nsubj(safe-4, me-3)
xcomp(put-2, safe-4)
case(sez-25, inside-5)
dep('-11, An-7)
case(An-7, '-8)
dep(An-7, just-9)
case(just-9, before-10)
nmod:poss(e-12, '-11)
nsubj(died-13, e-12)
dep(sez-25, died-13)
dep(ope-18, I-16)
xcomp(died-13, ope-18)
nsubj(liked-20, you-19)
ccomp(ope-18, liked-20)
nmod:poss(drink-22, your-21)
dobj(liked-20, drink-22)
advcl(safe-4, sez-25)
compound(Din-27, Gunga-26)
dobj(sez-25, Din-27)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB meet)
        (SBAR
          (S (`` `)
            (PP
              (ADVP
                (NP (CD im))
                (RBR later))
              (IN on) (IN At)
              (NP
                (NP
                  (NP
                    (NP (DT the) (NN place))
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (POS '))
                        (ADVP (RB e))
                        (VP (VBZ is)
                          (VP (VBN gone))))))
                  (: --)
                  (SBAR
                    (WHADVP (WRB Where))
                    (S
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (ADVP (RB always))
                        (NP
                          (NP (JJ double) (NN drill))
                          (CC and)
                          (NP (DT no) (NN canteen)))))))
                (: ;) (`` `)
                (S
                  (NP (NNP E))
                  (VP (MD 'll)
                    (VP (VB be)
                      (VP (VBN squattin) ('' ')
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NNP coals) (NNP Givin) (POS '))
                            (NN drink)))
                        (PP (TO to)
                          (NP (JJ poor) (JJ damned) (NNS souls)))))))))
            (, ,)
            (NP
              (NP (NNP An) (POS '))
              (NN I))
            (VP (MD 'll)
              (VP (VB get)
                (NP
                  (NP (DT a) (NN swig))
                  (PP (IN in)
                    (NP (NN hell))))
                (PP (IN from)
                  (NP (NNP Gunga) (NNP Din)))))))))
    (. !)))

dep(meet-4, So-1)
nsubj(meet-4, I-2)
aux(meet-4, 'll-3)
root(ROOT-0, meet-4)
nmod:npmod(later-7, im-6)
advmod(place-11, later-7)
case(place-11, on-8)
case(place-11, At-9)
det(place-11, the-10)
nmod:at(get-49, place-11)
advmod(gone-16, where-12)
nsubjpass(gone-16, '-13)
advmod(gone-16, e-14)
auxpass(gone-16, is-15)
acl:relcl(place-11, gone-16)
advmod(drill-23, Where-18)
nsubj(drill-23, it-19)
cop(drill-23, 's-20)
advmod(drill-23, always-21)
amod(drill-23, double-22)
acl:relcl(place-11, drill-23)
cc(drill-23, and-24)
neg(canteen-26, no-25)
acl:relcl(place-11, canteen-26)
conj:and(drill-23, canteen-26)
nsubjpass(squattin-32, E-29)
aux(squattin-32, 'll-30)
auxpass(squattin-32, be-31)
dep(place-11, squattin-32)
case(drink-39, on-34)
det(Givin-37, the-35)
compound(Givin-37, coals-36)
nmod:poss(drink-39, Givin-37)
case(Givin-37, '-38)
nmod:on(squattin-32, drink-39)
case(souls-43, to-40)
amod(souls-43, poor-41)
amod(souls-43, damned-42)
nmod:to(squattin-32, souls-43)
nmod:poss(I-47, An-45)
case(An-45, '-46)
nsubj(get-49, I-47)
aux(get-49, 'll-48)
ccomp(meet-4, get-49)
det(swig-51, a-50)
dobj(get-49, swig-51)
case(hell-53, in-52)
nmod:in(swig-51, hell-53)
case(Din-56, from-54)
compound(Din-56, Gunga-55)
nmod:from(get-49, Din-56)

(ROOT
  (FRAG
    (INTJ (UH Yes))
    (, ,)
    (NP (NNP Din))
    (. !)))

discourse(Din-3, Yes-1)
root(ROOT-0, Din-3)

(ROOT
  (S
    (VP (VB Din))
    (. !)))

root(ROOT-0, Din-1)

(ROOT
  (S
    (VP (VB Din))
    (. !)))

root(ROOT-0, Din-1)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBZ Lazarushian-leather)
      (NP (NNP Gunga) (NNP Din)))
    (. !)))

nsubj(Lazarushian-leather-2, You-1)
root(ROOT-0, Lazarushian-leather-2)
compound(Din-4, Gunga-3)
dobj(Lazarushian-leather-2, Din-4)

(ROOT
  (S
    (SBAR (IN Though)
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (VP
            (VP (VBN belted)
              (NP (PRP you)))
            (CC and)
            (VP (VBN flayed)
              (NP (PRP you)))))))
    (, ,)
    (S
      (PP (IN By)
        (NP
          (NP
            (NP (DT the) (NN livin) (POS '))
            (NNP Gawd))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD made)
                (NP (PRP you)))))))
      (, ,)
      (NP (PRP You))
      (VP (VBP 're)
        (NP
          (NP (DT a) (JJR better) (NN man))
          (SBAR (IN than)
            (S
              (NP (PRP I))
              (VP (VBP am)))))))
    (, ,)
    (S
      (NP (NNP Gunga) (NNP Din)))
    (. !)))

mark(belted-4, Though-1)
nsubj(belted-4, I-2)
nsubj(flayed-7, I-2)
aux(belted-4, 've-3)
advcl(man-23, belted-4)
dobj(belted-4, you-5)
cc(belted-4, and-6)
conj:and(belted-4, flayed-7)
advcl(man-23, flayed-7)
dobj(flayed-7, you-8)
case(Gawd-14, By-10)
det(livin-12, the-11)
nmod:poss(Gawd-14, livin-12)
case(livin-12, '-13)
nsubj(made-16, Gawd-14)
nmod:by(man-23, Gawd-14)
ref(Gawd-14, that-15)
acl:relcl(Gawd-14, made-16)
dobj(made-16, you-17)
nsubj(man-23, You-19)
cop(man-23, 're-20)
det(man-23, a-21)
amod(man-23, better-22)
root(ROOT-0, man-23)
mark(am-26, than-24)
nsubj(am-26, I-25)
dep(man-23, am-26)
compound(Din-29, Gunga-28)
parataxis(man-23, Din-29)

(ROOT
  (S
    (S
      (NP
        (NP (NNS OONTS))
        (PRN (-LRB- -LRB-)
          (NP (NNP Northern) (NNP India) (NNP Transport) (NNP Train))
          (-RRB- -RRB-))
        (NNS Wot))
      (VP (VBZ makes)
        (NP
          (NP (DT the) (NN soldier) (POS 's))
          (`` `) (NN eart))
        (S
          (VP (TO to)
            (VP (VB penk))))))
    (, ,)
    (NP (NN wot))
    (VP (VBZ makes) (`` `)
      (ADJP (JJ im)
        (S
          (VP (TO to)
            (VP (VB perspire))))))
    (. ?)))

compound(Wot-8, OONTS-1)
compound(Train-6, Northern-3)
compound(Train-6, India-4)
compound(Train-6, Transport-5)
appos(Wot-8, Train-6)
nsubj(makes-9, Wot-8)
ccomp(makes-19, makes-9)
det(soldier-11, the-10)
nmod:poss(eart-14, soldier-11)
case(soldier-11, 's-12)
dobj(makes-9, eart-14)
mark(penk-16, to-15)
advcl(makes-9, penk-16)
nsubj(makes-19, wot-18)
root(ROOT-0, makes-19)
xcomp(makes-19, im-21)
mark(perspire-23, to-22)
xcomp(im-21, perspire-23)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is) (RB n't)
        (ADJP (JJ standin) ('' '))
        (ADVP (RB up))
        (S
          (VP (TO to)
            (VP (VB charge)
              (CC nor)
              (VB lyin) ('' ')
              (ADVP (RB down)
                (PP (TO to)
                  (NP (NN fire)))))))))
    (: ;)
    (CC But)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (NN everlastin))
          ('' ')
          (SBAR
            (S
              (NP
                (NP (NN waitin))
                ('' ')
                (RRC
                  (PP (IN on)
                    (NP
                      (NP (DT a) (NN everlastin) (POS '))
                      (NN road)))
                  (PP (IN For)
                    (NP (DT the) (JJ commissariat) (NN camel))))
                (, an) ('' '))
              (`` `)
              (VP (VBZ is)
                (NP (JJ commissariat) (NN load))))))))
    (. .)))

nsubj(standin-4, It-1)
nsubj:xsubj(charge-8, It-1)
nsubj:xsubj(lyin-10, It-1)
cop(standin-4, is-2)
neg(standin-4, n't-3)
root(ROOT-0, standin-4)
advmod(standin-4, up-6)
mark(charge-8, to-7)
xcomp(standin-4, charge-8)
cc(charge-8, nor-9)
xcomp(standin-4, lyin-10)
conj:nor(charge-8, lyin-10)
advmod(charge-8, down-12)
case(fire-14, to-13)
nmod:to(down-12, fire-14)
cc(standin-4, But-16)
nsubj(everlastin-19, it-17)
cop(everlastin-19, 's-18)
conj:but(standin-4, everlastin-19)
nsubj(load-37, waitin-21)
case(road-27, on-23)
det(everlastin-25, a-24)
nmod:poss(road-27, everlastin-25)
case(everlastin-25, '-26)
nmod:on(camel-31, road-27)
case(camel-31, For-28)
det(camel-31, the-29)
amod(camel-31, commissariat-30)
acl:relcl(waitin-21, camel-31)
cop(load-37, is-35)
amod(load-37, commissariat-36)
acl:relcl(everlastin-19, load-37)

(ROOT
  (SINV
    (S
      (VP (VBG O)
        (NP (DT the) (NN oont))
        (X (SYM *))))
    (, ,)
    (VP (VBP O))
    (NP
      (NP (DT the) (NN oont))
      (, ,)
      (NP
        (NP (NNP O))
        (NP (DT the) (JJ commissariat) (NN oont))))
    (. !)))

dep(O-6, O-1)
det(oont-3, the-2)
dobj(O-1, oont-3)
dep(O-1, *-4)
root(ROOT-0, O-6)
det(oont-8, the-7)
nsubj(O-6, oont-8)
appos(oont-8, O-10)
det(oont-13, the-11)
amod(oont-13, commissariat-12)
dep(O-10, oont-13)

(ROOT
  (S
    (PP (IN With)
      (NP (`` `)
        (S
          (VP (VBZ is)
            (ADVP (RB silly) (NN neck))
            (ADJP (JJ a-bobbin) ('' ')
              (PP (IN like)
                (NP (DT a) (NN basket) (JJ full) (NN o))))))
        ('' ') (NNS snakes)))
    (: ;)
    (NP (PRP We))
    (VP (VBZ packs)
      (NP (`` `)
        (NP
          (NP (NN im))
          (PP (IN like)
            (NP
              (NP (DT an) (NN idol))
              (, ,)
              (NP (DT an)))))
        ('' ')
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD ought)
              (S
                (VP (TO to) (`` `)
                  (VP (VB ear)
                    (NP (`` `)
                      (NP
                        (NP (NN im) (NN grunt))
                        (, ,)
                        (NP (NNP An)))
                      ('' ')
                      (SBAR
                        (S
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP we))
                              (VP (VBZ gets) (`` `)
                                (ADJP (RB im) (VBN loaded)
                                  (PRT (RP up))))))
                          (`` `)
                          (VP (VBZ is)
                            (VP (VBN blessed)
                              (NP (JJ girth-rope) (NNS breaks)))))))))))))))
    (. .)))

case(snakes-14, With-1)
cop(a-bobbin-6, is-3)
advmod(a-bobbin-6, silly-4)
dep(silly-4, neck-5)
dep(snakes-14, a-bobbin-6)
case(o-12, like-8)
det(o-12, a-9)
compound(o-12, basket-10)
amod(o-12, full-11)
nmod:like(a-bobbin-6, o-12)
nmod:with(packs-17, snakes-14)
nsubj(packs-17, We-16)
root(ROOT-0, packs-17)
dobj(packs-17, im-19)
case(idol-22, like-20)
det(idol-22, an-21)
nmod:like(im-19, idol-22)
appos(idol-22, an-24)
nsubj(ought-27, you-26)
nsubj:xsubj(ear-30, you-26)
acl:relcl(im-19, ought-27)
mark(ear-30, to-28)
xcomp(ought-27, ear-30)
compound(grunt-33, im-32)
dobj(ear-30, grunt-33)
appos(grunt-33, An-35)
advmod(gets-39, when-37)
nsubj(gets-39, we-38)
advcl(blessed-46, gets-39)
advmod(loaded-42, im-41)
xcomp(gets-39, loaded-42)
dep(loaded-42, up-43)
auxpass(blessed-46, is-45)
acl:relcl(grunt-33, blessed-46)
amod(breaks-48, girth-rope-47)
dobj(blessed-46, breaks-48)

(ROOT
  (S
    (FRAG
      (X (SYM *))
      (NP (NNP Camel)))
    (: :)
    (S
      (LST (: --))
      (NP (JJ _) (NN oo) (NNS _))
      (VP (VBZ is)
        (VP (VBN pronounced)
          (PP
            (PP (IN like)
              (NP
                (NP (NNP _) (NNP u) (NNP _))
                (PP (IN in) (`` ``)
                  (NP (NN bull))
                  ('' ''))))
            (, ,)
            (CC but)
            (PP (IN by)
              (NP (NNP Mr.) (NNP Atkins))))
          (S
            (VP (TO to)
              (VP (VB rhyme)
                (PP (IN with) (`` ``)
                  (NP (NN front))
                  ('' ''))))))))
    (. .)))

dep(Camel-2, *-1)
dep(pronounced-9, Camel-2)
amod(_-7, _-5)
compound(_-7, oo-6)
nsubjpass(pronounced-9, _-7)
nsubjpass(pronounced-9', _-7)
nsubj:xsubj(rhyme-24, _-7)
auxpass(pronounced-9, is-8)
root(ROOT-0, pronounced-9)
conj:but(pronounced-9, pronounced-9')
case(_-13, like-10)
compound(_-13, _-11)
compound(_-13, u-12)
nmod:like(pronounced-9, _-13)
case(bull-16, in-14)
nmod:in(_-13, bull-16)
cc(pronounced-9, but-19)
case(Atkins-22, by-20)
compound(Atkins-22, Mr.-21)
nmod:by(pronounced-9', Atkins-22)
mark(rhyme-24, to-23)
xcomp(pronounced-9, rhyme-24)
case(front-27, with-25)
nmod:with(rhyme-24, front-27)

(ROOT
  (S
    (S
      (NP (NNP Wot))
      (VP (VBZ makes)
        (S
          (NP (DT the) (JJ rear-guard) (NN swear))
          (ADJP (RB so) (`` `) (JJ ard))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (NN night))
              (VP (VBZ is)
                (ADJP (JJ drorin) ('' ')
                  (PP (IN in)))))))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (ADJP (DT every) (JJ native))
      (NN follower))
    (VP (VBZ is)
      (ADJP (JJ shiverin) ('' ')
        (PP (IN for)))
      (`` `)
      (SQ (VBZ is)
        (NP (NN skin))))
    (. ?)))

nsubj(makes-2, Wot-1)
ccomp(shiverin-22, makes-2)
det(swear-5, the-3)
amod(swear-5, rear-guard-4)
nsubj(drorin-12, swear-5)
advmod(ard-8, so-6)
dep(drorin-12, ard-8)
advmod(drorin-12, when-9)
nsubj(drorin-12, night-10)
cop(drorin-12, is-11)
xcomp(makes-2, drorin-12)
nmod(drorin-12, in-14)
nmod:poss(follower-20, An-16)
case(An-16, '-17)
det(native-19, every-18)
amod(follower-20, native-19)
nsubj(shiverin-22, follower-20)
cop(shiverin-22, is-21)
root(ROOT-0, shiverin-22)
nmod(shiverin-22, for-24)
dep(shiverin-22, is-26)
nsubj(is-26, skin-27)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT the) (JJ chanst) (NN o))
          ('' ')
          (VP (VBG being)
            (VP (VBN rushed)
              (PP (IN by)
                (NP (NNP Paythans)))
              (PP (IN from)
                (NP (DT the) (`` `) (VB ills))))))))
    (, ,)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJ commissariat) (NN camel) (NN puttin) ('' '))
        (PP (IN on)
          (NP (`` `)
            (S
              (VP (VBZ is)
                (ADJP (JJ bloomin))))
            ('' ') (NNS frills)))))
    (. !)))

nsubj(o-6, It-1)
cop(o-6, ai-2)
neg(o-6, n't-3)
det(o-6, the-4)
amod(o-6, chanst-5)
ccomp(puttin-22, o-6)
auxpass(rushed-9, being-8)
acl(o-6, rushed-9)
case(Paythans-11, by-10)
nmod:by(rushed-9, Paythans-11)
case(the-13, from-12)
nmod:from(rushed-9, the-13)
dep(the-13, ills-15)
nsubj(puttin-22, It-17)
cop(puttin-22, 's-18)
det(puttin-22, the-19)
amod(puttin-22, commissariat-20)
compound(puttin-22, camel-21)
root(ROOT-0, puttin-22)
case(frills-29, on-24)
cop(bloomin-27, is-26)
dep(frills-29, bloomin-27)
nmod:on(puttin-22, frills-29)

(ROOT
  (S
    (ADVP (RB O))
    (NP
      (NP (DT the) (NN oont))
      (, ,)
      (NP
        (NP (NNP O))
        (NP (DT the) (NN oont)))
      (, ,))
    (VP (VBP O)
      (NP (DT the) (JJ hairy) (JJ scary) (NN oont)))
    (. !)))

advmod(O-9, O-1)
det(oont-3, the-2)
nsubj(O-9, oont-3)
appos(oont-3, O-5)
det(oont-7, the-6)
dep(O-5, oont-7)
root(ROOT-0, O-9)
det(oont-13, the-10)
amod(oont-13, hairy-11)
amod(oont-13, scary-12)
dobj(O-9, oont-13)

(ROOT
  (S
    (NP (NNP A-trippin) (POS '))
    (ADVP (RB over))
    (VP (VBZ tent-ropes)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBP 've)
            (VP (VBN got)
              (NP (DT the) (NN night) (NN alarm)))))))
    (. !)))

nsubj(tent-ropes-4, A-trippin-1)
case(A-trippin-1, '-2)
advmod(tent-ropes-4, over-3)
root(ROOT-0, tent-ropes-4)
advmod(got-8, when-5)
nsubj(got-8, we-6)
aux(got-8, 've-7)
advcl(tent-ropes-4, got-8)
det(alarm-11, the-9)
compound(alarm-11, night-10)
dobj(got-8, alarm-11)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBZ socks) (`` `)
      (NP
        (NP (NN im))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ stretcher-pole) (DT an))
            (POS ') (`` `)
            (S
              (NP
                (NP (NNS eads))
                (VP (`` `) (VBN im)
                  (ADVP (RB off)
                    (PP (IN in)
                      (NP
                        (NP (NN front))
                        (, ,)
                        (NP (NNP An)))))
                  ('' ')
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP we))
                      (VP (VBP 've)
                        (VP (VBD saved) (`` `)
                          (NP
                            (SBAR
                              (S
                                (VP (VBZ is)
                                  (NP
                                    (NP (NN bloomin) (POS '))
                                    (NN life))))))
                          ('' ')))))))
              (ADVP (RB e))
              (VP (VBZ chaws)
                (NP (PRP$ our) (NN bloomin))))
            ('' ') (NN arm)))))
    (. .)))

nsubj(socks-2, We-1)
root(ROOT-0, socks-2)
dobj(socks-2, im-4)
case(arm-35, with-5)
det(stretcher-pole-7, a-6)
nmod:poss(arm-35, stretcher-pole-7)
dep(stretcher-pole-7, an-8)
case(arm-35, '-9)
nsubj(chaws-31, eads-11)
acl(eads-11, im-13)
advmod(im-13, off-14)
case(front-16, in-15)
nmod:in(off-14, front-16)
appos(front-16, An-18)
advmod(saved-23, when-20)
nsubj(saved-23, we-21)
aux(saved-23, 've-22)
advcl(im-13, saved-23)
cop(life-28, is-25)
nmod:poss(life-28, bloomin-26)
case(bloomin-26, '-27)
dobj(saved-23, life-28)
advmod(chaws-31, e-30)
dep(arm-35, chaws-31)
nmod:poss(bloomin-33, our-32)
dobj(chaws-31, bloomin-33)
nmod:'(im-4, arm-35)

(ROOT
  (S
    (S
      (NP (DT The) (`` `) (NN orse) ('' ') (NN e))
      (VP (VBZ knows)
        (PP (IN above)
          (NP
            (NP (DT a) (NN bit))
            (, ,)
            (NP (DT the) (NN bullock) (POS 's))
            (CC but)
            (NP (DT a) (NN fool))))))
    (, ,)
    (S
      (NP (DT The) (NN elephant))
      (VP (VBZ 's)
        (NP (DT a) (NN gentleman))))
    (, ,)
    (S
      (NP (DT the) (NN battery-mule))
      (VP (VBZ 's)
        (NP (DT a) (NN mule))))
    (: ;)
    (CC But)
    (S
      (NP
        (NP (DT the) (JJ commissariat) (NN cam-u-el))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT all))
            (VP (VBZ is)
              (VP (VBN said)))))
        (, an) ('' ')
        (VP (VBN done) (, ,) (`` `)
          (NP (NN E))))
      (VP (VBZ 's)
        (NP (DT a)
          (NP (NNP devil))
          (, an) ('' ')
          (NP (DT a) (NN ostrich))
          (, an) ('' ')
          (NP
            (NP (DT a) (NN orphan-child))
            (PP (IN in)
              (NP (CD one)))))))
    (. .)))

det(e-5, The-1)
compound(e-5, orse-3)
nsubj(knows-6, e-5)
nsubj(knows-6', e-5)
root(ROOT-0, knows-6)
conj:but(knows-6, knows-6')
case(bit-9, above-7)
det(bit-9, a-8)
nmod:above(knows-6, bit-9)
det(bullock-12, the-11)
nmod:'s(knows-6', bullock-12)
case(bullock-12, 's-13)
cc(knows-6, but-14)
det(fool-16, a-15)
conj(bit-9, fool-16)
det(elephant-19, The-18)
nsubj(gentleman-22, elephant-19)
cop(gentleman-22, 's-20)
det(gentleman-22, a-21)
ccomp(knows-6, gentleman-22)
det(battery-mule-25, the-24)
nsubj(mule-28, battery-mule-25)
cop(mule-28, 's-26)
det(mule-28, a-27)
conj:but(knows-6, mule-28)
cc(knows-6, But-30)
det(cam-u-el-33, the-31)
amod(cam-u-el-33, commissariat-32)
nsubj(devil-47, cam-u-el-33)
advmod(said-38, when-35)
nsubjpass(said-38, all-36)
auxpass(said-38, is-37)
acl:relcl(cam-u-el-33, said-38)
acl(cam-u-el-33, done-41)
dobj(done-41, E-44)
cop(devil-47, 's-45)
det(devil-47, a-46)
conj:but(knows-6, devil-47)
det(ostrich-51, a-50)
dep(devil-47, ostrich-51)
det(orphan-child-55, a-54)
dep(devil-47, orphan-child-55)
case(one-57, in-56)
nmod:in(orphan-child-55, one-57)

(ROOT
  (S
    (ADVP (RB O))
    (NP
      (NP (DT the) (NN oont))
      (, ,)
      (NP
        (NP (NNP O))
        (NP (DT the) (NN oont)))
      (, ,))
    (VP (VBP O)
      (NP (DT the) (JJ Gawd-forsaken) (NN oont)))
    (. !)))

advmod(O-9, O-1)
det(oont-3, the-2)
nsubj(O-9, oont-3)
appos(oont-3, O-5)
det(oont-7, the-6)
dep(O-5, oont-7)
root(ROOT-0, O-9)
det(oont-12, the-10)
amod(oont-12, Gawd-forsaken-11)
dobj(O-9, oont-12)

(ROOT
  (FRAG
    (NP (DT The) (NN lumpy))
    (: -)
    (S
      (NP
        (NP (`` `) (NN umpy) (`` `) (NN ummin) ('' '))
        (: -)
        (ADJP
          (ADJP (RB bird) (JJ a-singin) ('' '))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (POS '))
              (ADVP (RB e))
              (VP (VBZ lies) (, ,) (`` `)
                (S
                  (S
                    (NP (NNP E) (POS 's))
                    (VP (VBD blocked)
                      (NP (DT the) (JJ whole) (NN division))
                      (PP (IN from)
                        (NP (DT the) (NN rear-guard)))
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN front))
                          (, ,)
                          (NP (NNP An))))
                      ('' ')
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP we))
                          (VP (VBP get)
                            (NP (PRP him))
                            (ADVP (RB up) (RB again)))))))
                  (: --)
                  (S
                    (NP (DT the) (NN beggar))
                    (VP (VBZ goes))))))))
        (, an) ('' '))
      (VP (VBZ dies)))
    (. !)))

det(lumpy-2, The-1)
root(ROOT-0, lumpy-2)
compound(ummin-7, umpy-5)
nsubj(dies-46, ummin-7)
advmod(a-singin-11, bird-10)
amod(ummin-7, a-singin-11)
advmod(lies-16, where-13)
nsubj(lies-16, '-14)
advmod(lies-16, e-15)
ccomp(a-singin-11, lies-16)
nsubj(blocked-21, E-19)
case(E-19, 's-20)
xcomp(lies-16, blocked-21)
det(division-24, the-22)
amod(division-24, whole-23)
dobj(blocked-21, division-24)
case(rear-guard-27, from-25)
det(rear-guard-27, the-26)
nmod:from(blocked-21, rear-guard-27)
case(front-30, to-28)
det(front-30, the-29)
nmod:to(blocked-21, front-30)
appos(front-30, An-32)
advmod(get-36, when-34)
nsubj(get-36, we-35)
advcl(blocked-21, get-36)
dobj(get-36, him-37)
advmod(again-39, up-38)
advmod(get-36, again-39)
det(beggar-42, the-41)
nsubj(goes-43, beggar-42)
parataxis(blocked-21, goes-43)
parataxis(lumpy-2, dies-46)

(ROOT
  (S (`` `)
    (S
      (NP (NNP E))
      (VP (MD 'll)
        (VP (VB gall)
          (NP
            (NP (DT an))
            ('' ')
            (SBAR
              (S
                (VP (VBP chafe))))
            (, an) ('' ')
            (VP (VBG lame)
              (NP
                (NP (DT an))
                (POS ') (NN fight)))))))
    (: --) ('' ')
    (PRN
      (S
        (NP (NNP e))
        (VP (VBZ smells)
          (NP
            (ADJP (RBS most) (JJ awful))
            (NN vile)))))
    (: ;) (`` `)
    (S
      (NP (NNP E))
      (VP (MD 'll)
        (VP (VB lose) (`` `)
          (NP
            (NP (NN isself))
            (PP (IN for)
              (NP (RB ever))))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBD let)
                (NP (`` `)
                  (NP
                    (NP (NN im))
                    (SBAR
                      (S
                        (VP (VBP stray)
                          (NP
                            (NP (DT a) (NN mile))
                            (: ;) (`` `)
                            (NP
                              (NP (NNP E) (POS 's))
                              (NN game)
                              (S
                                (VP (TO to)
                                  (VP (VB graze)
                                    (NP (DT the) (`` `) (NN ole) (NN day))
                                    (ADVP (RB long)))))))))))
                  (, an) ('' ')
                  (NP
                    (NP
                      (NP (`` `) (NN owl))
                      (NP (DT the) (`` `) (JJ ole) (NN night))
                      (ADVP (RB through)))
                    (, ,)
                    (NP (NNP An) (POS '))))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (S
                      (NP (POS '))
                      (X
                        (X (SYM e))
                        (ADJP (JJ comes)
                          (S
                            (VP (TO to)
                              (VP (VB greasy)
                                (NP
                                  (NP (NN ground) (POS '))
                                  (NN e))))))))
                    (VP (VBZ splits) (`` `)
                      (NP
                        (NP (NN isself))
                        (PP (IN in)
                          (NP (CD two)))))))))))))
    (. .)))

nsubj(gall-4, E-2)
aux(gall-4, 'll-3)
root(ROOT-0, gall-4)
dobj(gall-4, an-5)
acl:relcl(an-5, chafe-7)
acl(an-5, lame-10)
nmod:poss(fight-13, an-11)
case(fight-13, '-12)
dobj(lame-10, fight-13)
nsubj(smells-17, e-16)
dep(gall-4, smells-17)
advmod(awful-19, most-18)
amod(vile-20, awful-19)
dobj(smells-17, vile-20)
nsubj(lose-25, E-23)
aux(lose-25, 'll-24)
dep(gall-4, lose-25)
dobj(lose-25, isself-27)
case(ever-29, for-28)
nmod:for(isself-27, ever-29)
mark(let-32, if-30)
nsubj(let-32, you-31)
advcl(lose-25, let-32)
dobj(let-32, im-34)
acl:relcl(im-34, stray-35)
det(mile-37, a-36)
dobj(stray-35, mile-37)
nmod:poss(game-42, E-40)
case(E-40, 's-41)
dep(mile-37, game-42)
mark(graze-44, to-43)
acl(game-42, graze-44)
det(day-48, the-45)
compound(day-48, ole-47)
nmod:tmod(graze-44, day-48)
advmod(graze-44, long-49)
dep(im-34, owl-53)
det(night-57, the-54)
amod(night-57, ole-56)
dep(owl-53, night-57)
advmod(owl-53, through-58)
appos(owl-53, An-60)
case(An-60, '-61)
advmod(splits-71, when-62)
csubj(splits-71, '-63)
dep(comes-65, e-64)
dep('-63, comes-65)
mark(greasy-67, to-66)
xcomp(comes-65, greasy-67)
nmod:poss(e-70, ground-68)
case(ground-68, '-69)
dobj(greasy-67, e-70)
advcl(let-32, splits-71)
dobj(splits-71, isself-73)
case(two-75, in-74)
nmod:in(isself-73, two-75)

(ROOT
  (NP
    (NP (NNP O))
    (NP
      (NP (DT the) (NN oont))
      (, ,)
      (NP (NNP O)))
    (NP
      (NP (DT the) (NN oont))
      (, ,)
      (NP (NNP O)
        (NP (DT the) (NN floppin) (POS '))))
    (, ,)
    (NP
      (NP (NN droppin) (POS '))
      (NN oont))
    (. !)))

root(ROOT-0, O-1)
det(oont-3, the-2)
dep(O-1, oont-3)
appos(oont-3, O-5)
det(oont-7, the-6)
dep(O-1, oont-7)
appos(oont-7, O-9)
det(floppin-11, the-10)
nmod:poss(O-9, floppin-11)
case(floppin-11, '-12)
nmod:poss(oont-16, droppin-14)
case(droppin-14, '-15)
appos(O-1, oont-16)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S (`` `)
        (S
          (S
            (VP (VBZ is)
              (NP
                (NP (JJ long) (NNS legs))
                (SBAR
                  (S
                    (VP (VBP give)
                      (PP (IN from) (IN under)
                        (NP
                          (NP (DT an))
                          (POS ') (`` `)
                          (S
                            (VP (VBZ is)
                              (ADJP (JJ meltin))))
                          ('' ') (NN eye)))))))))
          (VP (VBZ is)
            (ADJP (JJ dim))))
        (, ,)
        (S
          (NP (DT The) (NNS tribes))
          (VP (VBZ is)
            (ADVP (RB up))
            (VP (VBN be'ind)
              (NP (PRP us)))))
        (, ,)
        (CC and)
        (S
          (NP (DT the) (NNS tribes))
          (VP (VBZ is)
            (ADVP (RB out))
            (PP (IN in)
              (NP (NN front)))))))
    (: --)
    (S
      (NP (PRP It))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT no) (NN jam))
          (PP (IN for)
            (NP (NNP Tommy))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (NNS kites))
          (, an) ('' ')
          (SBAR
            (S
              (VP (VBZ crows)
                (PP (IN for) (`` `)
                  (NP (NN im)))))))))
    (. .)))

advmod(dim-17, When-1)
cop(legs-5, is-3)
amod(legs-5, long-4)
csubj(dim-17, legs-5)
acl:relcl(legs-5, give-6)
case(eye-15, from-7)
case(eye-15, under-8)
nmod:poss(eye-15, an-9)
case(eye-15, '-10)
cop(meltin-13, is-12)
dep(eye-15, meltin-13)
nmod:'(give-6, eye-15)
cop(dim-17, is-16)
advcl(jam-38, dim-17)
det(tribes-20, The-19)
nsubjpass(be'ind-23, tribes-20)
auxpass(be'ind-23, is-21)
advmod(be'ind-23, up-22)
ccomp(dim-17, be'ind-23)
dobj(be'ind-23, us-24)
cc(dim-17, and-26)
det(tribes-28, the-27)
nsubj(front-32, tribes-28)
cop(front-32, is-29)
advmod(front-32, out-30)
case(front-32, in-31)
conj:and(dim-17, front-32)
advcl(jam-38, front-32)
nsubj(jam-38, It-34)
cop(jam-38, ai-35)
neg(jam-38, n't-36)
neg(jam-38, no-37)
root(ROOT-0, jam-38)
case(Tommy-40, for-39)
nmod:for(jam-38, Tommy-40)
cc(jam-38, but-42)
nsubj(kites-45, it-43)
cop(kites-45, 's-44)
conj:but(jam-38, kites-45)
acl:relcl(kites-45, crows-48)
case(im-51, for-49)
nmod:for(crows-48, im-51)

(ROOT
  (S (IN So)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (JJ cruel) (NN march))
          (VP (VBZ is)
            (VP (VBN done) (, ,)
              (NP
                (NP (DT an))
                ('' ')
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (DT the) (NNS roads))
                    (VP (VBZ is)
                      (ADJP (JJ blind))
                      (, ,)
                      (NP
                        (NP (NNP An))
                        ('' ')
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP we))
                            (VP (VBZ sees)
                              (NP
                                (NP (DT the) (NN camp))
                                (PP (IN in)
                                  (NP
                                    (NP (NN front))
                                    (, an) ('' ') (`` `)
                                    (NP (NNS ears)))))))))))))))))
      (NP (DT the) (NNS shots))
      (VP (VBD be'ind)))
    (, ,)
    (S
      (NP (NNP Ho)))
    (. !)))

dep(be'ind-32, So-1)
advmod(done-7, when-2)
det(march-5, the-3)
amod(march-5, cruel-4)
nsubjpass(done-7, march-5)
auxpass(done-7, is-6)
advcl(be'ind-32, done-7)
dobj(done-7, an-9)
advmod(blind-15, when-11)
det(roads-13, the-12)
nsubj(blind-15, roads-13)
cop(blind-15, is-14)
acl:relcl(an-9, blind-15)
dep(blind-15, An-17)
advmod(sees-21, when-19)
nsubj(sees-21, we-20)
acl:relcl(An-17, sees-21)
det(camp-23, the-22)
dobj(sees-21, camp-23)
case(front-25, in-24)
nmod:in(camp-23, front-25)
dep(front-25, ears-29)
det(shots-31, the-30)
nsubj(be'ind-32, shots-31)
root(ROOT-0, be'ind-32)
parataxis(be'ind-32, Ho-34)

(ROOT
  (S
    (S
      (S
        (ADVP (RB then))
        (NP (PRP we))
        (VP (VBZ strips) (`` `)
          (SBAR
            (S
              (VP (VBZ is)
                (VP (VBG saddle)
                  (PRT (RP off))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT all))
        (`` `)
        (VP (VBZ is)
          (NP
            (NP (NNS woes))
            (SBAR
              (S
                (VP (VBZ is)
                  (ADJP (JJ past)))))))))
    (: :) ('' ')
    (S
      (NP (NNP E))
      (VP (VBZ thinks)
        (PP (IN on)
          (NP (PRP us)))
        (SBAR (IN that)
          (S
            (S
              (VP (VBN used)))
            (VP (`` `)
              (VP (VBP im)
                (ADVP (RB so)))
              (, ,)
              (CC and)
              (VP (VBZ gets)
                (NP (NN revenge))
                (PP (IN at)
                  (NP (JJ last)))))))))
    (. .)))

advmod(strips-3, then-1)
nsubj(strips-3, we-2)
root(ROOT-0, strips-3)
aux(saddle-6, is-5)
ccomp(strips-3, saddle-6)
compound:prt(saddle-6, off-7)
cc(strips-3, and-9)
nsubj(woes-13, all-10)
cop(woes-13, is-12)
conj:and(strips-3, woes-13)
cop(past-15, is-14)
acl:relcl(woes-13, past-15)
nsubj(thinks-19, E-18)
parataxis(strips-3, thinks-19)
case(us-21, on-20)
nmod:on(thinks-19, us-21)
mark(im-25, that-22)
csubj(im-25, used-23)
csubj(gets-29, used-23)
ccomp(thinks-19, im-25)
advmod(im-25, so-26)
cc(im-25, and-28)
ccomp(thinks-19, gets-29)
conj:and(im-25, gets-29)
dobj(gets-29, revenge-30)
case(last-32, at-31)
nmod:at(gets-29, last-32)

(ROOT
  (NP
    (NP (NNP O))
    (NP
      (NP (DT the) (NN oont))
      (, ,)
      (NP (NNP O)))
    (NP
      (NP (DT the) (NN oont))
      (, ,)
      (NP (NNP O)
        (NP (DT the) (NN floatin) (POS '))))
    (, ,)
    (NP
      (NP (NN bloatin) (POS '))
      (NN oont))
    (. !)))

root(ROOT-0, O-1)
det(oont-3, the-2)
dep(O-1, oont-3)
appos(oont-3, O-5)
det(oont-7, the-6)
dep(O-1, oont-7)
appos(oont-7, O-9)
det(floatin-11, the-10)
nmod:poss(O-9, floatin-11)
case(floatin-11, '-12)
nmod:poss(oont-16, bloatin-14)
case(bloatin-14, '-15)
appos(O-1, oont-16)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ late) (JJ lamented) (NN camel))
        (PP (IN in)
          (NP
            (NP (DT the) (NN water-cut) (POS '))
            (NN e))))
      (VP (VBZ lies)))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBZ keeps)
        (SBAR
          (S
            (NP (DT a) (NN mile))
            (VP (VBD be'ind) (`` `)
              (NP
                (NP (NN im))
                (, an) ('' ')
                (PRN
                  (S
                    (S
                      (NP (PRP we))
                      (VP (VBZ keeps)
                        (NP
                          (NP (DT a) (NN mile))
                          (PP (IN in)
                            (NP (NN front))))))
                    (, ,)
                    (CC But)
                    (S
                      (NP (POS '))
                      (ADVP (RB e))
                      (VP (VBZ gets)
                        (PP (IN into)
                          (NP
                            (NP (DT the) (NN drinkin))
                            ('' ') (: -)
                            (NP (NNS casks))))))))
                (, ,)
                (CC and)
                (ADVP (RB then))
                (NP
                  (NP
                    (NP (NNP o) (POS '))
                    (NN course))
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (VBZ dies)))))))))))
    (. .)))

det(camel-4, The-1)
amod(camel-4, late-2)
amod(camel-4, lamented-3)
nsubj(lies-10, camel-4)
case(e-9, in-5)
det(water-cut-7, the-6)
nmod:poss(e-9, water-cut-7)
case(water-cut-7, '-8)
nmod:in(camel-4, e-9)
root(ROOT-0, lies-10)
nsubj(keeps-13, We-12)
parataxis(lies-10, keeps-13)
det(mile-15, a-14)
nsubj(be'ind-16, mile-15)
ccomp(keeps-13, be'ind-16)
dobj(be'ind-16, im-18)
nsubj(keeps-22, we-21)
dep(im-18, keeps-22)
det(mile-24, a-23)
dobj(keeps-22, mile-24)
case(front-26, in-25)
nmod:in(mile-24, front-26)
cc(keeps-22, But-28)
nsubj(gets-31, '-29)
advmod(gets-31, e-30)
dep(im-18, gets-31)
conj:but(keeps-22, gets-31)
case(drinkin-34, into-32)
det(drinkin-34, the-33)
nmod:into(gets-31, drinkin-34)
dep(drinkin-34, casks-37)
cc(im-18, and-39)
advmod(course-43, then-40)
nmod:poss(course-43, o-41)
case(o-41, '-42)
dobj(be'ind-16, course-43)
conj:and(im-18, course-43)
nsubj(dies-45, we-44)
acl:relcl(course-43, dies-45)

(ROOT
  (S
    (SBAR
      (NP (NNP LOOT))
      (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 've)
          (ADVP (RB ever))
          (VP (VBD stole)
            (SBAR
              (S
                (NP (DT a) (NN pheasant-egg))
                (VP (VBD be'ind)
                  (NP
                    (NP (DT the) (NN keeper) (POS 's))
                    (NN back)))))))))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 've)
          (ADVP (RB ever))
          (VP (VBN snigged)
            (NP (DT the) (NN washin))
            ('' ')
            (PP (IN from)
              (NP (DT the) (NN line)))))))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 've)
          (ADVP (RB ever))
          (VP (VBD crammed)
            (NP (DT a) (NN gander))
            (PP (IN in)
              (NP
                (NP (PRP$ your) (NN bloomin) (POS '))
                (`` `) (NN aversack)))))))
    (, ,)
    (NP (PRP You))
    (VP (MD will)
      (VP (VB understand)
        (NP
          (NP (DT this) (JJ little) (NN song) (NN o) (POS '))
          (NN mine))))
    (. .)))

dep(stole-6, LOOT-1)
mark(stole-6, If-2)
nsubj(stole-6, you-3)
aux(stole-6, 've-4)
advmod(stole-6, ever-5)
advcl(understand-43, stole-6)
det(pheasant-egg-8, a-7)
nsubj(be'ind-9, pheasant-egg-8)
ccomp(stole-6, be'ind-9)
det(keeper-11, the-10)
nmod:poss(back-13, keeper-11)
case(keeper-11, 's-12)
dobj(be'ind-9, back-13)
mark(snigged-19, If-15)
nsubj(snigged-19, you-16)
aux(snigged-19, 've-17)
advmod(snigged-19, ever-18)
advcl(understand-43, snigged-19)
det(washin-21, the-20)
dobj(snigged-19, washin-21)
case(line-25, from-23)
det(line-25, the-24)
nmod:from(snigged-19, line-25)
mark(crammed-31, If-27)
nsubj(crammed-31, you-28)
aux(crammed-31, 've-29)
advmod(crammed-31, ever-30)
advcl(understand-43, crammed-31)
det(gander-33, a-32)
dobj(crammed-31, gander-33)
case(aversack-39, in-34)
nmod:poss(bloomin-36, your-35)
nmod:poss(aversack-39, bloomin-36)
case(bloomin-36, '-37)
nmod:in(crammed-31, aversack-39)
nsubj(understand-43, You-41)
aux(understand-43, will-42)
root(ROOT-0, understand-43)
det(o-47, this-44)
amod(o-47, little-45)
compound(o-47, song-46)
nmod:poss(mine-49, o-47)
case(o-47, '-48)
dobj(understand-43, mine-49)

(ROOT
  (S (CC But)
    (NP (DT the) (NN service) (NNS rules))
    (VP (VBP are)
      (NP (`` `)
        (NP
          (NP (NN ard))
          (, ,)
          (NP (DT an)))
        ('' ')
        (SBAR
          (S
            (S
              (PP (IN from)
                (NP (JJ such)))
              (NP (PRP we))
              (VP (VBP are)
                (VP (VBN debarred))))
            (, ,) (IN For)
            (S
              (NP
                (NP (DT the) (JJ same))
                (PP (IN with)
                  (NP (JJ English) (NNS morals))))
              (VP (VBZ does) (RB not)
                (VP (VB suit))))))))
    (. .)))

cc(ard-7, But-1)
det(rules-4, the-2)
compound(rules-4, service-3)
nsubj(ard-7, rules-4)
cop(ard-7, are-5)
root(ROOT-0, ard-7)
appos(ard-7, an-9)
case(such-12, from-11)
nmod:from(debarred-15, such-12)
nsubjpass(debarred-15, we-13)
auxpass(debarred-15, are-14)
acl:relcl(ard-7, debarred-15)
dep(debarred-15, For-17)
det(same-19, the-18)
nsubj(suit-25, same-19)
case(morals-22, with-20)
amod(morals-22, English-21)
nmod:with(same-19, morals-22)
aux(suit-25, does-23)
neg(suit-25, not-24)
parataxis(debarred-15, suit-25)

(ROOT
  (NP (-LRB- -LRB-)
    (NP (NNP _) (NNP Cornet) (NNP _))
    (: :)
    (NP (NNP Toot))
    (. !)))

compound(_-4, _-2)
compound(_-4, Cornet-3)
root(ROOT-0, _-4)
dep(_-4, Toot-6)

(ROOT
  (PRN
    (S
      (NP (NN toot))
      (VP (VBZ !)))
    (-RRB- -RRB-)))

nsubj(!-2, toot-1)
root(ROOT-0, !-2)

(ROOT
  (S
    (NP
      (NP (NNP W))
      (`` `)
      (S
        (ADVP (RB y))
        (, ,)
        (NP (PRP they))
        (VP (VBP call)
          (NP (DT a) (NN man))
          (ADVP
            (NP (DT a) (NN robber))
            (IN if))))
      ('' '))
    (VP (VBD e)
      (SBAR
        (S
          (NP (NNS stuffs))
          (`` `)
          (VP (VBZ is)
            (NP
              (NP (NN marchin) (POS '))
              (NAC
                (NAC (NNP clobber)
                  (PP (IN With)
                    (NP (DT the))
                    (: --)))
                (PRN (-LRB- -LRB-)
                  (NP (NNP _) (NNP Chorus) (NNP _))
                  (-RRB- -RRB-)))
              (NN Loo))))))
    (. !)))

nsubj(e-13, W-1)
advmod(call-6, y-3)
nsubj(call-6, they-5)
dep(W-1, call-6)
det(man-8, a-7)
dobj(call-6, man-8)
det(robber-10, a-9)
advmod(call-6, robber-10)
case(robber-10, if-11)
root(ROOT-0, e-13)
nsubj(Loo-28, stuffs-14)
cop(Loo-28, is-16)
nmod:poss(Loo-28, marchin-17)
case(marchin-17, '-18)
dep(Loo-28, clobber-19)
case(the-21, With-20)
nmod:with(clobber-19, the-21)
compound(_-26, _-24)
compound(_-26, Chorus-25)
dep(clobber-19, _-26)
ccomp(e-13, Loo-28)

(ROOT
  (NP (NN loo) (. !)))

root(ROOT-0, loo-1)

(ROOT
  (FRAG
    (NP (NNP Lulu))
    (. !)))

root(ROOT-0, Lulu-1)

(ROOT
  (FRAG
    (ADJP (JJ lulu))
    (. !)))

root(ROOT-0, lulu-1)

(ROOT
  (S
    (VP (VB Loo))
    (. !)))

root(ROOT-0, Loo-1)

(ROOT
  (NP (NN loo) (. !)))

root(ROOT-0, loo-1)

(ROOT
  (S
    (VP (VB Loot))
    (. !)))

root(ROOT-0, Loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (S
    (VP (VB Ow)
      (NP (DT the) (NN loot)))
    (. !)))

root(ROOT-0, Ow-1)
det(loot-3, the-2)
dobj(Ow-1, loot-3)

(ROOT
  (FRAG
    (NP
      (NP (NNP Bloomin) (POS '))
      (NN loot))
    (. !)))

nmod:poss(loot-3, Bloomin-1)
case(Bloomin-1, '-2)
root(ROOT-0, loot-3)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (DT the) (NN thing)
        (S
          (VP (TO to)
            (VP (VB make)
              (S
                (NP (DT the) (NNS boys))
                (VP (VB git)
                  (PRT (RP up))
                  (NP
                    (NP (DT an))
                    (POS ') (NN shoot)))))))))
    (. !)))

nsubj(thing-4, That-1)
cop(thing-4, 's-2)
det(thing-4, the-3)
root(ROOT-0, thing-4)
mark(make-6, to-5)
acl(thing-4, make-6)
det(boys-8, the-7)
nsubj(git-9, boys-8)
ccomp(make-6, git-9)
compound:prt(git-9, up-10)
nmod:poss(shoot-13, an-11)
case(shoot-13, '-12)
dobj(git-9, shoot-13)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (DT the)
          (ADJP (JJ same)
            (PP (IN with)
              (NP (CD dogs) (DT an))))
          ('' ') (NNS men))))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD 'd)
          (VP (VB make)
            (S
              (NP (PRP 'em))
              (VP (VB come)
                (ADVP (RB again))))))))
    (VP (VB Clap)
      (NP (PRP 'em))
      (ADVP (RB forward))
      (PP (IN with)
        (NP (DT a) (NNP Loo))))
    (. !)))

nsubj(men-9, It-1)
cop(men-9, 's-2)
det(men-9, the-3)
amod(men-9, same-4)
case(dogs-6, with-5)
nmod:with(same-4, dogs-6)
dep(dogs-6, an-7)
ccomp(Clap-18, men-9)
mark(make-14, If-11)
nsubj(make-14, you-12)
aux(make-14, 'd-13)
csubj(Clap-18, make-14)
nsubj(come-16, 'em-15)
ccomp(make-14, come-16)
advmod(come-16, again-17)
root(ROOT-0, Clap-18)
dobj(Clap-18, 'em-19)
advmod(Clap-18, forward-20)
case(Loo-23, with-21)
det(Loo-23, a-22)
nmod:with(Clap-18, Loo-23)

(ROOT
  (NP (NN loo) (. !)))

root(ROOT-0, loo-1)

(ROOT
  (FRAG
    (NP (NNP Lulu))
    (. !)))

root(ROOT-0, Lulu-1)

(ROOT
  (S
    (VP (VB Loot))
    (. !)))

root(ROOT-0, Loot-1)

(ROOT
  (S (-LRB- -LRB-)
    (NP (JJ _) (NN ff) (NNS _))
    (-RRB- -RRB-)
    (VP (VBZ Whoopee))
    (. !)))

amod(_-4, _-2)
compound(_-4, ff-3)
nsubj(Whoopee-6, _-4)
root(ROOT-0, Whoopee-6)

(ROOT
  (S
    (NP (NNP Tear))
    (VP (`` `) (VBP im) (, ,)
      (ADVP (RB puppy)))
    (. !)))

nsubj(im-3, Tear-1)
root(ROOT-0, im-3)
advmod(im-3, puppy-5)

(ROOT
  (S
    (VP (VB Loo))
    (. !)))

root(ROOT-0, Loo-1)

(ROOT
  (NP (NN loo) (. !)))

root(ROOT-0, loo-1)

(ROOT
  (FRAG
    (NP (NNP Lulu))
    (. !)))

root(ROOT-0, Lulu-1)

(ROOT
  (S
    (VP (VB Loot))
    (. !)))

root(ROOT-0, Loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 've)
          (VP (VBN knocked)
            (NP (DT a) (NN nigger) (NNS edgeways))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP
                  (NP (`` `)
                    (NP (NNP e) (POS 's))
                    (NN thrustin) ('' '))
                  (PP (IN for)
                    (NP
                      (NP (PRP$ your) (NN life))
                      (, ,)
                      (PRN
                        (S
                          (NP (PRP You))
                          (VP (MD must)
                            (VP (VB leave) (`` `)
                              (S
                                (NP (NN im))
                                (ADJP (RB very) (JJ careful))
                                (SBAR
                                  (WHADVP (WRB where))
                                  (S
                                    (S
                                      (NP (POS '))
                                      (ADVP (RB e))
                                      (VP (VBD fell)))
                                    (: ;)
                                    (S
                                      (NP (NNP An) (POS '))
                                      (VP (MD may)
                                        (VP (VB thank)
                                          (NP (PRP$ your) (NNS stars))))))))))))
                      (, an) ('' ')
                      (SBAR
                        (S
                          (VP (VBZ gaiters)
                            (SBAR (IN if)
                              (S
                                (NP (PRP you))
                                (VP (VBD did) (RB n't)
                                  (VP (VB feel)))))))))))
                (`` `)
                (VP (VBZ is)
                  (VP (VBG knife)
                    (NP (DT That))))))))))
    (NP (PRP you))
    (VP (VBP ai) (RB n't)
      (VP (VBN told)
        (PRT (RP off))
        (S
          (VP (TO to)
            (VP (VB bury)
              (S
                (VP (`` `) (VB im)
                  (ADVP (RB as) (RB well)))))))))
    (. .)))

mark(knocked-4, If-1)
nsubj(knocked-4, you-2)
aux(knocked-4, 've-3)
advcl(told-51, knocked-4)
det(edgeways-7, a-5)
compound(edgeways-7, nigger-6)
dobj(knocked-4, edgeways-7)
advmod(knife-46, when-8)
nmod:poss(thrustin-12, e-10)
case(e-10, 's-11)
nsubj(knife-46, thrustin-12)
case(life-16, for-14)
nmod:poss(life-16, your-15)
nmod:for(thrustin-12, life-16)
nsubj(leave-20, You-18)
aux(leave-20, must-19)
dep(life-16, leave-20)
nsubj(fell-28, im-22)
advmod(careful-24, very-23)
dep(fell-28, careful-24)
advmod(fell-28, where-25)
nsubj(fell-28, '-26)
advmod(fell-28, e-27)
xcomp(leave-20, fell-28)
nsubj(thank-33, An-30)
case(An-30, '-31)
aux(thank-33, may-32)
parataxis(fell-28, thank-33)
nmod:poss(stars-35, your-34)
dobj(thank-33, stars-35)
acl:relcl(life-16, gaiters-38)
mark(feel-43, if-39)
nsubj(feel-43, you-40)
aux(feel-43, did-41)
neg(feel-43, n't-42)
advcl(gaiters-38, feel-43)
aux(knife-46, is-45)
advcl(knocked-4, knife-46)
dobj(knife-46, That-47)
nsubjpass(told-51, you-48)
nsubj:xsubj(bury-54, you-48)
auxpass(told-51, ai-49)
neg(told-51, n't-50)
root(ROOT-0, told-51)
compound:prt(told-51, off-52)
mark(bury-54, to-53)
xcomp(told-51, bury-54)
ccomp(bury-54, im-56)
advmod(im-56, as-57)
mwe(as-57, well-58)

(ROOT
  (S (RB Then)
    (NP
      (NP (DT the) (NN sweatin) (POS '))
      (NNS Tommies))
    (VP (VBP wonder)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBP spade)
            (NP (DT the) (NNS beggars))
            (PP (IN under)
              (SBAR
                (WHADVP (WRB Why))
                (S
                  (NP (NNP lootin) (POS '))
                  (VP (MD should)
                    (VP (VB be)
                      (VP (VBN entered)
                        (PP (IN as)
                          (NP (DT a) (NN crime))))))))))
          (: ;)
          (SBAR
            (ADVP (RB So))
            (IN if)
            (S
              (NP
                (NP (PRP$ my) (NN song))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD 'll) (`` `)
                      (VP (VB ear) (, ,)
                        (SBAR
                          (S
                            (NP (PRP I))
                            (VP (MD will)
                              (VP (VB learn)
                                (S
                                  (NP (PRP you))
                                  (ADJP (JJ plain)))))))))))
                (, an) ('' '))
              (VP (VB clear) (`` `)
                (NP (NNP Ow))
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (NP (PRP yourself))
                      (PP (IN for)
                        (NP
                          (NP (NN fightin) (POS '))
                          (NN overtime))))))))))))
    (. .)))

advmod(wonder-6, Then-1)
det(sweatin-3, the-2)
nmod:poss(Tommies-5, sweatin-3)
case(sweatin-3, '-4)
nsubj(wonder-6, Tommies-5)
root(ROOT-0, wonder-6)
mark(spade-9, as-7)
nsubj(spade-9, they-8)
advcl(wonder-6, spade-9)
det(beggars-11, the-10)
dobj(spade-9, beggars-11)
mark(entered-18, under-12)
advmod(entered-18, Why-13)
nsubjpass(entered-18, lootin-14)
case(lootin-14, '-15)
aux(entered-18, should-16)
auxpass(entered-18, be-17)
advcl(spade-9, entered-18)
case(crime-21, as-19)
det(crime-21, a-20)
nmod:as(entered-18, crime-21)
advmod(clear-39, So-23)
mark(clear-39, if-24)
nmod:poss(song-26, my-25)
nsubj(clear-39, song-26)
nsubj(ear-30, you-27)
aux(ear-30, 'll-28)
acl:relcl(song-26, ear-30)
nsubj(learn-34, I-32)
aux(learn-34, will-33)
ccomp(ear-30, learn-34)
nsubj(plain-36, you-35)
xcomp(learn-34, plain-36)
parataxis(spade-9, clear-39)
dobj(clear-39, Ow-41)
mark(pay-43, to-42)
advcl(clear-39, pay-43)
dobj(pay-43, yourself-44)
case(overtime-48, for-45)
nmod:poss(overtime-48, fightin-46)
case(fightin-46, '-47)
nmod:for(pay-43, overtime-48)

(ROOT
  (S
    (S
      (SBAR
        (PRN (-LRB- -LRB-)
          (NP (NNP _) (NNP Chorus) (NNP _))
          (-RRB- -RRB-))
        (S
          (PP (IN With)
            (NP (DT the) (NN loot)))
          (, ,) (: ...)
          (VP
            (ADVP (RB Now))
            (VBP remember)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP 're) (`` `)
                  (VP (VBG acking)
                    (NP (NN round)))))))))
      (NP (DT a) (JJ gilded) (NN Burma))
      (VP (VBP god)
        (NP (DT That))
        (`` `)
        (SQ (VBZ is)
          (NP
            (NP (NNS eyes))
            (SBAR
              (S
                (VP (VBZ is)
                  (ADVP (RB very) (RB often))
                  (NP
                    (NP (JJ precious) (NNS stones))
                    (: ;)
                    (NP (NNP An))
                    ('' '))
                  (SBAR (IN if)
                    (S
                      (NP (PRP you))
                      (VP (VBP treat)
                        (NP (DT a) (NN nigger))
                        (PP (TO to)
                          (NP
                            (NP (DT a) (NN dose) (NN o) (POS '))
                            (NN cleanin)))))))))))
        ('' ')))
    (: -)
    (S
      (NP
        (NP (NN rod))
        (`` `)
        (S
          (NP (NNP E) (POS 's))
          (VP (VBP like)
            (S
              (VP (TO to)
                (VP (VB show)
                  (NP (PRP you))
                  (NP (NN everything)))))))
        ('' '))
      (ADVP (RB e))
      (VP (VBZ owns)))
    (. .)))

compound(_-4, _-2)
compound(_-4, Chorus-3)
dep(remember-12, _-4)
case(loot-8, With-6)
det(loot-8, the-7)
nmod:with(remember-12, loot-8)
advmod(remember-12, Now-11)
advcl(god-22, remember-12)
advmod(acking-17, when-13)
nsubj(acking-17, you-14)
aux(acking-17, 're-15)
advcl(remember-12, acking-17)
dobj(acking-17, round-18)
det(Burma-21, a-19)
amod(Burma-21, gilded-20)
nsubj(god-22, Burma-21)
root(ROOT-0, god-22)
dobj(god-22, That-23)
dep(god-22, is-25)
nsubj(is-25, eyes-26)
cop(stones-31, is-27)
advmod(often-29, very-28)
advmod(stones-31, often-29)
amod(stones-31, precious-30)
acl:relcl(eyes-26, stones-31)
dep(stones-31, An-33)
mark(treat-37, if-35)
nsubj(treat-37, you-36)
advcl(stones-31, treat-37)
det(nigger-39, a-38)
dobj(treat-37, nigger-39)
case(cleanin-45, to-40)
det(o-43, a-41)
compound(o-43, dose-42)
nmod:poss(cleanin-45, o-43)
case(o-43, '-44)
nmod:to(treat-37, cleanin-45)
nsubj(owns-59, rod-48)
nsubj(like-52, E-50)
nsubj:xsubj(show-54, E-50)
case(E-50, 's-51)
dep(rod-48, like-52)
mark(show-54, to-53)
xcomp(like-52, show-54)
iobj(show-54, you-55)
dobj(show-54, everything-56)
advmod(owns-59, e-58)
parataxis(god-22, owns-59)

(ROOT
  (S
    (FRAG
      (WHADVP (WRB When)))
    ('' ')
    (NP (NNP e))
    (VP (MD wo) (RB n't)
      (VP
        (VP (VB prodooce)
          (ADVP (DT no) (RBR more)))
        (, ,)
        (VP (VB pour)
          (NP (DT some) (NN water))
          (PP (IN on)
            (NP
              (NP (DT the) (NN floor))
              (SBAR
                (WHADVP (WRB Where))
                (S
                  (NP (PRP you))
                  (`` `)
                  (VP (VBZ ear)
                    (S
                      (NP (PRP it))
                      (VP (VB answer) (`` `)
                        (NP (NN ollow))
                        (PP (TO to)
                          (NP (DT the) (NN boot) (-LRB- -LRB-) (CD _) (NNP Cornet) (NNS _))))))))
              (: :)
              (NP (NNP Toot)))))))
    (. !)))

dep(prodooce-6, When-1)
nsubj(prodooce-6, e-3)
aux(prodooce-6, wo-4)
neg(prodooce-6, n't-5)
root(ROOT-0, prodooce-6)
neg(more-8, no-7)
advmod(prodooce-6, more-8)
dep(prodooce-6, pour-10)
det(water-12, some-11)
dobj(pour-10, water-12)
case(floor-15, on-13)
det(floor-15, the-14)
nmod:on(pour-10, floor-15)
advmod(ear-19, Where-16)
nsubj(ear-19, you-17)
acl:relcl(floor-15, ear-19)
nsubj(answer-21, it-20)
ccomp(ear-19, answer-21)
dobj(answer-21, ollow-23)
case(_-30, to-24)
det(_-30, the-25)
compound(_-30, boot-26)
nummod(_-30, _-28)
compound(_-30, Cornet-29)
nmod:to(answer-21, _-30)
dep(floor-15, Toot-32)

(ROOT
  (PRN
    (S
      (NP (NN toot))
      (VP (VBZ !)))
    (-RRB- -RRB-)))

nsubj(!-2, toot-1)
root(ROOT-0, !-2)

(ROOT
  (S (: --)
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN ground))
        (VP (VBZ begins)
          (S
            (VP (TO to)
              (VP
                (VP (VB sink))
                (, ,)
                (VP (VB shove)
                  (NP (PRP$ your) (NN baynick))
                  (ADVP (RB down)
                    (NP (DT the) (NN chink))))))))))
    (, ,)
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP (JJ sure)
        (PP (TO to)
          (NP
            (NP (RB touch) (DT the))
            (: --)
            (NP
              (PRN (-LRB- -LRB-)
                (NP (NNP _) (NNP Chorus) (NNP _))
                (-RRB- -RRB-))
              (NNS Loo))))))
    (. !)))

advmod(begins-5, When-2)
det(ground-4, the-3)
nsubj(begins-5, ground-4)
nsubj:xsubj(sink-7, ground-4)
advcl(sure-20, begins-5)
mark(sink-7, to-6)
xcomp(begins-5, sink-7)
dep(sink-7, shove-9)
nmod:poss(baynick-11, your-10)
dobj(shove-9, baynick-11)
advmod(shove-9, down-12)
det(chink-14, the-13)
nmod:npmod(down-12, chink-14)
dep(sure-20, An-16)
case(An-16, '-17)
nsubj(sure-20, you-18)
cop(sure-20, 're-19)
root(ROOT-0, sure-20)
case(the-23, to-21)
advmod(the-23, touch-22)
nmod:to(sure-20, the-23)
compound(_-28, _-26)
compound(_-28, Chorus-27)
appos(Loo-30, _-28)
dep(the-23, Loo-30)

(ROOT
  (NP (NN loo) (. !)))

root(ROOT-0, loo-1)

(ROOT
  (FRAG
    (NP (NNP Lulu))
    (. !)))

root(ROOT-0, Lulu-1)

(ROOT
  (S
    (VP (VB Loot))
    (. !)))

root(ROOT-0, Loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (S
    (VP (VB Ow)
      (NP (DT the) (NN loot)))
    (. !)))

root(ROOT-0, Ow-1)
det(loot-3, the-2)
dobj(Ow-1, loot-3)

(ROOT
  (S (: ...)
    (SBAR
      (WHADVP (WRB When))
      (S
        (PP (IN from)
          (NP (`` `)
            (ADJP (JJ ouse)
              (S
                (VP (TO to) (`` `)
                  (VP (VB ouse)
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP 're)
                          (ADJP (`` `) (JJ unting) (, ,)
                            (SBAR
                              (S
                                (S
                                  (NP (PRP you))
                                  (VP (MD must)
                                    (ADVP (RB always))
                                    (VP (VB work)
                                      (PP (IN in)
                                        (NP (NNS pairs))))))
                                (: --)
                                (S
                                  (NP (PRP It))
                                  (`` `)
                                  (VP
                                    (VP (VBZ alves)
                                      (NP (DT the) (NN gain)))
                                    (, ,)
                                    (CC but)
                                    (VP (VBD safer)
                                      (SBAR
                                        (S
                                          (NP (PRP you))
                                          (VP (MD will)
                                            (VP (VB find))))))))
                                (: --)
                                (SBAR (IN For)
                                  (S
                                    (NP (DT a) (JJ single) (NN man))
                                    (VP (VBZ gets)
                                      (VP (VBN bottled)
                                        (PP (IN on)
                                          (NP (PRP them)))))))))))))))))
            (JJ twisty-wisty) (NNS stairs)))))
    (, ,)
    (S
      (NP (NNP An) (POS ')))
    (NP (DT a) (NN woman))
    (VP
      (VP (VBZ comes))
      (CC and)
      (VP (VBZ clobs) (`` `)
        (NP (NN im))
        (PP (IN from)
          (NP (NN be'ind)))))
    (. .)))

advmod(stairs-42, When-2)
case(stairs-42, from-3)
amod(stairs-42, ouse-5)
mark(ouse-8, to-6)
xcomp(ouse-5, ouse-8)
nsubj(unting-12, you-9)
cop(unting-12, 're-10)
ccomp(ouse-8, unting-12)
nsubj(work-17, you-14)
aux(work-17, must-15)
advmod(work-17, always-16)
ccomp(unting-12, work-17)
case(pairs-19, in-18)
nmod:in(work-17, pairs-19)
nsubj(alves-23, It-21)
nsubj(safer-28, It-21)
parataxis(work-17, alves-23)
det(gain-25, the-24)
dobj(alves-23, gain-25)
cc(alves-23, but-27)
parataxis(work-17, safer-28)
conj:but(alves-23, safer-28)
nsubj(find-31, you-29)
aux(find-31, will-30)
ccomp(safer-28, find-31)
mark(bottled-38, For-33)
det(man-36, a-34)
amod(man-36, single-35)
nsubjpass(bottled-38, man-36)
auxpass(bottled-38, gets-37)
parataxis(work-17, bottled-38)
case(them-40, on-39)
nmod:on(bottled-38, them-40)
amod(stairs-42, twisty-wisty-41)
advcl(comes-48, stairs-42)
dep(comes-48, An-44)
case(An-44, '-45)
det(woman-47, a-46)
nsubj(comes-48, woman-47)
nsubj(clobs-50, woman-47)
root(ROOT-0, comes-48)
cc(comes-48, and-49)
conj:and(comes-48, clobs-50)
dobj(clobs-50, im-52)
case(be'ind-54, from-53)
nmod:from(clobs-50, be'ind-54)

(ROOT
  (FRAG
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP 've)
          (VP (VBN turned)
            (NP (PRP 'em))
            (ADVP (RB inside) (RB out))
            (, ,)
            (NP
              (NP (DT an))
              ('' ')
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ seems)
                    (PP (IN beyond)
                      (ADVP
                        (NP (DT a) (NN doubt))
                        (RB As)))
                    (SBAR (IN if)
                      (S
                        (NP (EX there))
                        (VP (VBD were) (RB n't)
                          (ADJP (JJ enough)
                            (S
                              (VP (TO to)
                                (VP (VB dust)
                                  (NP
                                    (NP (DT a) (NN flute) (-LRB- -LRB-) (NN _) (NNP Cornet) (NN _))
                                    (: :)
                                    (NP (NNP Toot))))))))))))))))))
    (. !)))

advmod(turned-4, When-1)
nsubj(turned-4, you-2)
aux(turned-4, 've-3)
root(ROOT-0, turned-4)
dobj(turned-4, 'em-5)
advmod(out-7, inside-6)
advmod(turned-4, out-7)
dobj(turned-4, an-9)
nsubj(seems-12, it-11)
acl:relcl(an-9, seems-12)
case(As-16, beyond-13)
det(doubt-15, a-14)
nmod:npmod(As-16, doubt-15)
advcl(seems-12, As-16)
mark(were-19, if-17)
expl(were-19, there-18)
advcl(seems-12, were-19)
neg(were-19, n't-20)
xcomp(were-19, enough-21)
mark(dust-23, to-22)
xcomp(enough-21, dust-23)
det(_-29, a-24)
compound(_-29, flute-25)
compound(_-29, _-27)
compound(_-29, Cornet-28)
dobj(dust-23, _-29)
dep(_-29, Toot-31)

(ROOT
  (PRN
    (S
      (NP (NN toot))
      (VP (VBZ !)))
    (-RRB- -RRB-)))

nsubj(!-2, toot-1)
root(ROOT-0, !-2)

(ROOT
  (S
    (LST (: --))
    (PP (IN Before)
      (S
        (NP (PRP you))
        (VP (VBG sling)
          (NP
            (NP (PRP$ your) (`` `) (NN ook))
            (, ,)
            (ADVP (IN at) (DT the)))
          (`` `)
          (S
            (NP (NNS ousetops))
            (VP (VB take)
              (NP (DT a) (NN look)))))))
    (, ,)
    (PP (IN For)
      (S
        (NP (PRP it) (POS 's))
        (VP (VBG underneath)
          (NP (DT the) (NNS tiles)))))
    (NP (PRP they))
    (VP (`` `) (VBP ide)
      (NP (DT the) (NN loot)))
    (. .)))

mark(sling-4, Before-2)
nsubj(sling-4, you-3)
advcl(ide-25, sling-4)
nmod:poss(ook-7, your-5)
dobj(sling-4, ook-7)
case(the-10, at-9)
advmod(ook-7, the-10)
nsubj(take-13, ousetops-12)
dep(sling-4, take-13)
det(look-15, a-14)
dobj(take-13, look-15)
mark(underneath-20, For-17)
nsubj(underneath-20, it-18)
case(it-18, 's-19)
advcl(ide-25, underneath-20)
det(tiles-22, the-21)
dobj(underneath-20, tiles-22)
nsubj(ide-25, they-23)
root(ROOT-0, ide-25)
det(loot-27, the-26)
dobj(ide-25, loot-27)

(ROOT
  (NP
    (NP (-LRB- -LRB-) (NNP _) (NNP Chorus) (NNP _) (-RRB- -RRB-) (NNP Ow))
    (NP (DT the) (NN loot))
    (. !)))

compound(Ow-6, _-2)
compound(Ow-6, Chorus-3)
compound(Ow-6, _-4)
root(ROOT-0, Ow-6)
det(loot-8, the-7)
dep(Ow-6, loot-8)

(ROOT
  (S (: ...)
    (S
      (NP (PRP You))
      (VP (MD can)
        (ADVP (RB mostly))
        (VP (VB square)
          (NP
            (NP (DT a) (NN Sergint))
            (, an) ('' ')
            (ADVP
              (NP (DT a) (NN Quartermaster))
              (RB too))))))
    (, ,)
    (S
      (SBAR (IN If)
        (S
          (S
            (NP (PRP you))
            (ADVP (RB only))
            (VP (VB take)
              (NP (DT the) (JJ proper) (NN way)
                (S
                  (VP (TO to)
                    (VP (VB go)))))))
          (: ;)
          (S
            (NP (NNP _) (NNP I) (NNP _))
            (VP (MD could)
              (ADVP (RB never))
              (VP (VB keep)
                (NP (PRP$ my) (NN pickin) (NNS 's)))))
          (, ,)
          (CC but)
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN learned)
                (NP (PRP you))
                (NP
                  (NP (DT all))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBD knew))))))))
          (: --)
          (S
            (NP (NNP An) (POS '))
            (VP (VBP do) (RB n't)))))
      (NP (PRP you))
      (ADVP (RB never))
      (VP (VBP say)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD told)
              (NP (PRP you))
              (ADVP (RB so)))))))
    (. .)))

nsubj(square-5, You-2)
aux(square-5, can-3)
advmod(square-5, mostly-4)
root(ROOT-0, square-5)
det(Sergint-7, a-6)
dobj(square-5, Sergint-7)
det(Quartermaster-11, a-10)
nmod:npmod(too-12, Quartermaster-11)
advmod(Sergint-7, too-12)
mark(take-17, If-14)
nsubj(take-17, you-15)
advmod(take-17, only-16)
advcl(say-49, take-17)
det(way-20, the-18)
amod(way-20, proper-19)
dobj(take-17, way-20)
mark(go-22, to-21)
acl(way-20, go-22)
compound(_-26, _-24)
compound(_-26, I-25)
nsubj(keep-29, _-26)
aux(keep-29, could-27)
neg(keep-29, never-28)
conj:but(take-17, keep-29)
advcl(say-49, keep-29)
nmod:poss('s-32, my-30)
compound('s-32, pickin-31)
dobj(keep-29, 's-32)
cc(take-17, but-34)
nsubj(learned-37, I-35)
aux(learned-37, 've-36)
conj:but(take-17, learned-37)
advcl(say-49, learned-37)
iobj(learned-37, you-38)
dobj(learned-37, all-39)
nsubj(knew-41, I-40)
acl:relcl(all-39, knew-41)
nsubj(do-45, An-43)
case(An-43, '-44)
conj:but(take-17, do-45)
advcl(say-49, do-45)
neg(do-45, n't-46)
nsubj(say-49, you-47)
neg(say-49, never-48)
parataxis(square-5, say-49)
nsubj(told-51, I-50)
ccomp(say-49, told-51)
dobj(told-51, you-52)
advmod(told-51, so-53)

(ROOT
  (S
    (S
      (NP
        (NP (NNP An) (POS '))
        (JJ now) (NN I))
      (VP (MD 'll)
        (VP (VB bid)
          (ADJP (JJ good-bye))
          (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (ADJP (JJ gettin))
                ('' ')
                (PP (RB rather)
                  (ADJP (JJ dry)))))))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (NN I))
    (VP (VBP see)
      (NP (DT another) (NN tunin))
      ('' ')
      (ADVP (RB up)
        (S
          (VP (TO to)
            (VP (VB toot)
              (NP
                (NP (-LRB- -LRB-) (NNP _) (NNP Cornet) (CD _))
                (: :)
                (NP (NNP Toot))))))))
    (. !)))

nmod:poss(I-4, An-1)
case(An-1, '-2)
amod(I-4, now-3)
nsubj(bid-6, I-4)
aux(bid-6, 'll-5)
ccomp(see-20, bid-6)
xcomp(bid-6, good-bye-7)
mark(gettin-12, for-9)
nsubj(gettin-12, I-10)
cop(gettin-12, 'm-11)
advcl(bid-6, gettin-12)
advmod(dry-15, rather-14)
advcl(gettin-12, dry-15)
nmod:poss(I-19, An-17)
case(An-17, '-18)
nsubj(see-20, I-19)
root(ROOT-0, see-20)
det(tunin-22, another-21)
dobj(see-20, tunin-22)
advmod(see-20, up-24)
mark(toot-26, to-25)
dep(up-24, toot-26)
compound(Cornet-29, _-28)
dobj(toot-26, Cornet-29)
nummod(Cornet-29, _-30)
dep(Cornet-29, Toot-32)

(ROOT
  (PRN
    (S
      (NP (NN toot))
      (VP (VBZ !)))
    (-RRB- -RRB-)))

nsubj(!-2, toot-1)
root(ROOT-0, !-2)

(ROOT
  (S (: --)
    (S
      (S (CC So)
        (`` `)
        (NP (NN ere))
        (VP (VBZ 's)
          (ADJP (JJ good-luck)
            (PP (TO to)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ wears)
                      (NP
                        (NP (DT the) (NNP Widow) (POS 's))
                        (NNS clo'es))))))))))
      (, ,)
      (NP (NNP An) (POS ') (DT the) (NNP Devil))
      (VP (VB send)
        (NP (PRP 'em))))
    (RB all)
    (S
      (NP (PRP they))
      (VP (VBP want)
        (NP
          (NP (NNP o) (POS '))
          (NN loot))))
    (. !)))

cc(good-luck-6, So-2)
nsubj(good-luck-6, ere-4)
cop(good-luck-6, 's-5)
ccomp(send-20, good-luck-6)
case(those-8, to-7)
nmod:to(good-luck-6, those-8)
nsubj(wears-10, those-8)
ref(those-8, that-9)
acl:relcl(those-8, wears-10)
det(Widow-12, the-11)
nmod:poss(clo'es-14, Widow-12)
case(Widow-12, 's-13)
dobj(wears-10, clo'es-14)
nmod:poss(Devil-19, An-16)
case(Devil-19, '-17)
det(Devil-19, the-18)
nsubj(send-20, Devil-19)
root(ROOT-0, send-20)
dobj(send-20, 'em-21)
advmod(send-20, all-22)
nsubj(want-24, they-23)
parataxis(send-20, want-24)
nmod:poss(loot-27, o-25)
case(o-25, '-26)
dobj(want-24, loot-27)

(ROOT
  (NP
    (NP (-LRB- -LRB-) (NNP _) (NNP Chorus) (NNP _) (-RRB- -RRB-) (NNP Yes))
    (, ,)
    (NP
      (NP (DT the) (NN loot))
      (, ,)
      (NP
        (NP (NNP Bloomin) (POS '))
        (NN loot)))
    (. !)))

compound(Yes-6, _-2)
compound(Yes-6, Chorus-3)
compound(Yes-6, _-4)
root(ROOT-0, Yes-6)
det(loot-9, the-8)
appos(Yes-6, loot-9)
nmod:poss(loot-13, Bloomin-11)
case(Bloomin-11, '-12)
appos(loot-9, loot-13)

(ROOT
  (FRAG
    (PP (IN In)
      (NP
        (NP (DT the) (NN tunic))
        (, an) ('' ')
        (NP
          (NP
            (NP (DT the) (JJ mess-tin) (DT an))
            (POS '))
          (JJ the) (NN boot))))
    (. !)))

case(tunic-3, In-1)
det(tunic-3, the-2)
root(ROOT-0, tunic-3)
det(mess-tin-7, the-6)
nmod:poss(boot-11, mess-tin-7)
dep(mess-tin-7, an-8)
case(mess-tin-7, '-9)
amod(boot-11, the-10)
dep(tunic-3, boot-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (DT the) (JJ same))
          (PP (IN with)
            (NP (NNS dogs))))
        (, an) ('' ')
        (NP
          (NP (NNS men))
          (, ,)
          (SBAR (IN If)
            (S
              (NP (PRP you))
              (VP (MD 'd)
                (VP (VB make)
                  (S
                    (NP (PRP 'em))
                    (VP (VB come)
                      (ADVP (RB again)
                        (PRN (-LRB- -LRB-)
                          (NP (CD _) (NN fff) (NN _))
                          (-RRB- -RRB-))
                        (S
                          (VP (VB Whoop)
                            (NP (PRP 'em))
                            (ADVP (RB forward))
                            (PP (IN with)
                              (NP (DT a) (NNP Loo)))))))))))))))
    (. !)))

nsubj(same-4, It-1)
cop(same-4, 's-2)
det(same-4, the-3)
root(ROOT-0, same-4)
case(dogs-6, with-5)
nmod:with(same-4, dogs-6)
dep(same-4, men-9)
mark(make-14, If-11)
nsubj(make-14, you-12)
aux(make-14, 'd-13)
acl:relcl(men-9, make-14)
nsubj(come-16, 'em-15)
ccomp(make-14, come-16)
advmod(come-16, again-17)
nummod(_-21, _-19)
compound(_-21, fff-20)
dep(again-17, _-21)
dep(again-17, Whoop-23)
dobj(Whoop-23, 'em-24)
advmod(Whoop-23, forward-25)
case(Loo-28, with-26)
det(Loo-28, a-27)
nmod:with(Whoop-23, Loo-28)

(ROOT
  (NP (NN loo) (. !)))

root(ROOT-0, loo-1)

(ROOT
  (FRAG
    (NP (NNP Lulu))
    (. !)))

root(ROOT-0, Lulu-1)

(ROOT
  (S
    (VP (VB Loot))
    (. !)))

root(ROOT-0, Loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (FRAG
    (NP (NNP Heeya))
    (. !)))

root(ROOT-0, Heeya-1)

(ROOT
  (S
    (NP (NNP Sick))
    (VP (`` `) (VBP im) (, ,)
      (ADVP (RB puppy)))
    (. !)))

nsubj(im-3, Sick-1)
root(ROOT-0, im-3)
advmod(im-3, puppy-5)

(ROOT
  (S
    (VP (VB Loo))
    (. !)))

root(ROOT-0, Loo-1)

(ROOT
  (NP (NN loo) (. !)))

root(ROOT-0, loo-1)

(ROOT
  (FRAG
    (NP (NNP Lulu))
    (. !)))

root(ROOT-0, Lulu-1)

(ROOT
  (S
    (VP (VB Loot))
    (. !)))

root(ROOT-0, Loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (INTJ (UH loot) (. !)))

root(ROOT-0, loot-1)

(ROOT
  (S
    (S
      (S
        (VP (`` ``) (VBG SNARLEYOW) ('' '')
          (NP
            (NP (DT This))
            (VP (`` `) (VBN appened)
              (PP (IN in)
                (NP (DT a) (NN battle)))
              (PP (TO to)
                (NP
                  (NP (DT a) (JJ batt) (`` `) (NN ry))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN corps))
                      (SBAR
                        (WHNP (WDT Which))
                        (S
                          (VP (VBZ is)
                            (ADJP (JJ first)))))))))
              (PP (IN among)
                (NP
                  (NP (DT the) (NNS women))
                  (, an) ('' ')
                  (NP
                    (NP
                      (NP (NN amazin) (POS '))
                      (JJ first))
                    (PP (IN in)
                      (NP (NN war))))
                  (: ;)
                  (NP (NNP An))))
              ('' ')
              (SBAR
                (WHNP (WP what))
                (S
                  (NP
                    (NP (DT the) (NN bloomin) (POS '))
                    (NN battle))
                  (VP (VBD was)
                    (NP (PRP I)))))))))
      (VP (VBP do) (RB n't)
        (VP (VB remember)
          (ADVP (RB now)))))
    (, ,)
    (CC But)
    (S
      (NP
        (NP (CD Two) (POS 's))
        (JJ off-lead) ('' ') (NN e))
      (VP (VBN answered)
        (PP (TO to)
          (NP
            (NP (DT the) (NN name) (NN o) (POS '))
            (NNP _) (NNP Snarleyow) (NNP _)))))
    (. .)))

csubj(remember-43, SNARLEYOW-2)
dobj(SNARLEYOW-2, This-4)
acl(This-4, appened-6)
case(battle-9, in-7)
det(battle-9, a-8)
nmod:in(appened-6, battle-9)
case(ry-14, to-10)
det(ry-14, a-11)
amod(ry-14, batt-12)
nmod:to(appened-6, ry-14)
case(corps-17, of-15)
det(corps-17, the-16)
nmod:of(ry-14, corps-17)
nsubj(first-20, corps-17)
ref(corps-17, Which-18)
cop(first-20, is-19)
acl:relcl(corps-17, first-20)
case(women-23, among-21)
det(women-23, the-22)
nmod:among(appened-6, women-23)
dep(women-23, amazin-26)
case(amazin-26, '-27)
amod(amazin-26, first-28)
case(war-30, in-29)
nmod:in(amazin-26, war-30)
dep(women-23, An-32)
dobj(I-40, what-34)
det(bloomin-36, the-35)
nmod:poss(battle-38, bloomin-36)
case(bloomin-36, '-37)
nsubj(I-40, battle-38)
cop(I-40, was-39)
ccomp(appened-6, I-40)
aux(remember-43, do-41)
neg(remember-43, n't-42)
root(ROOT-0, remember-43)
advmod(remember-43, now-44)
cc(remember-43, But-46)
nmod:poss(e-51, Two-47)
case(Two-47, 's-48)
amod(e-51, off-lead-49)
nsubj(answered-52, e-51)
conj:but(remember-43, answered-52)
case(_-60, to-53)
det(o-56, the-54)
compound(o-56, name-55)
nmod:poss(_-60, o-56)
case(o-56, '-57)
compound(_-60, _-58)
compound(_-60, Snarleyow-59)
nmod:to(answered-52, _-60)

(ROOT
  (S
    (S
      (PP (IN Down)
        (PP (IN in)
          (NP (DT the) (NNP Infantry))))
      (, ,)
      (NP (NN nobody))
      (VP (VBZ cares)))
    (: ;)
    (S
      (PP (IN Down)
        (PP (IN in)
          (NP (DT the) (NNP Cavalry))))
      (, ,)
      (NP
        (NP (NNP Colonel) (POS '))
        (NN e))
      (VP (VBZ swears)))
    (: ;)
    (CC But)
    (S
      (NP
        (ADVP (RB down)
          (PP (IN in)
            (NP
              (NP (DT the) (NN lead))
              (PP (IN with)
                (NP
                  (NP (DT the) (NN wheel))
                  (PP (IN at)
                    (NP (DT the) (NN flog)))))))))
      (VP (VBZ Turns)
        (NP (DT the) (JJ bold) (NN Bombardier))
        (PP (TO to)
          (NP (DT a) (JJ little) (JJ whipped) (NN dog)))))
    (. !)))

case(Infantry-4, Down-1)
case(Infantry-4, in-2)
det(Infantry-4, the-3)
nmod:in(cares-7, Infantry-4)
nsubj(cares-7, nobody-6)
root(ROOT-0, cares-7)
case(Cavalry-12, Down-9)
case(Cavalry-12, in-10)
det(Cavalry-12, the-11)
nmod:in(swears-17, Cavalry-12)
nmod:poss(e-16, Colonel-14)
case(Colonel-14, '-15)
nsubj(swears-17, e-16)
conj:but(cares-7, swears-17)
cc(cares-7, But-19)
nsubj(Turns-30, down-20)
case(lead-23, in-21)
det(lead-23, the-22)
nmod:in(down-20, lead-23)
case(wheel-26, with-24)
det(wheel-26, the-25)
nmod:with(lead-23, wheel-26)
case(flog-29, at-27)
det(flog-29, the-28)
nmod:at(wheel-26, flog-29)
conj:but(cares-7, Turns-30)
det(Bombardier-33, the-31)
amod(Bombardier-33, bold-32)
dobj(Turns-30, Bombardier-33)
case(dog-38, to-34)
det(dog-38, a-35)
amod(dog-38, little-36)
amod(dog-38, whipped-37)
nmod:to(Turns-30, dog-38)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD was)
        (VP (VBN movin) ('' ')
          (PP (IN into)
            (NP (NN action)))
          (, ,)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBD was)
                (VP (VBN needed)
                  (S
                    (ADJP (RB very) (JJ sore)))
                  (, ,)
                  (S
                    (VP (TO To)
                      (VP (VB learn)
                        (NP (DT a) (JJ little) (NN schoolin))
                        ('' ')
                        (PP (TO to)
                          (NP
                            (NP (DT a) (JJ native) (NN army) (NN corps))
                            (, ,)
                            (NP (PRP They))))
                        (`` `)
                        (S
                          (NP (NN ad))
                          (VP (VBN nipped)
                            (PP (IN against)
                              (NP (DT an) (JJ uphill)))))))))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD was)
      (ADJP (JJ tuckin) ('' ')
        (PP (IN down)
          (NP
            (NP (DT the) (NN brow))
            (, ,)
            (SBAR
              (WHADVP (WRB When))
              (S
                (NP (DT a) (JJ tricky) (, ,) (JJ trundlin) ('' ') (NN roundshot))
                (VP (VBP give)
                  (NP (DT the) (NN knock))
                  (PP (TO to)
                    (NP (NNP _) (NNP Snarleyow) (NNP _))))))))))
    (. .)))

nsubjpass(movin-3, They-1)
auxpass(movin-3, was-2)
ccomp(tuckin-36, movin-3)
case(action-6, into-5)
nmod:into(movin-3, action-6)
nsubjpass(needed-10, they-8)
nsubj:xsubj(learn-15, they-8)
auxpass(needed-10, was-9)
ccomp(movin-3, needed-10)
advmod(sore-12, very-11)
xcomp(needed-10, sore-12)
mark(learn-15, To-14)
xcomp(needed-10, learn-15)
det(schoolin-18, a-16)
amod(schoolin-18, little-17)
dobj(learn-15, schoolin-18)
case(corps-24, to-20)
det(corps-24, a-21)
amod(corps-24, native-22)
compound(corps-24, army-23)
nmod:to(learn-15, corps-24)
appos(corps-24, They-26)
nsubj(nipped-29, ad-28)
dep(learn-15, nipped-29)
case(uphill-32, against-30)
det(uphill-32, an-31)
nmod:against(nipped-29, uphill-32)
nsubj(tuckin-36, they-34)
cop(tuckin-36, was-35)
root(ROOT-0, tuckin-36)
case(brow-40, down-38)
det(brow-40, the-39)
nmod:down(tuckin-36, brow-40)
advmod(give-49, When-42)
det(roundshot-48, a-43)
amod(roundshot-48, tricky-44)
amod(roundshot-48, trundlin-46)
nsubj(give-49, roundshot-48)
acl:relcl(brow-40, give-49)
det(knock-51, the-50)
dobj(give-49, knock-51)
case(_-55, to-52)
compound(_-55, _-53)
compound(_-55, Snarleyow-54)
nmod:to(give-49, _-55)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD cut)
        (NP (`` `)
          (NP (NN im) (JJ loose))
          (, an) ('' ')
          (VP (VBN left) (`` `)
            (ADVP (RB im))))))
    (: --)
    (S
      (NP (POS '))
      (X
        (X (SYM e))
        (NP
          (SQ (VBD was)
            (ADJP (RB almost)
              (SBAR
                (S
                  (VP (VBD tore)
                    (PP (IN in)
                      (NP (CD two)))
                    (: --)
                    (S
                      (S (CC But)
                        (NP (PRP he))
                        (VP (VBD tried)
                          (S
                            (VP (TO to)
                              (VP (VB follow)
                                (PP (IN after)
                                  (NP
                                    (NP (RB as) (DT a) (JJ well-trained))
                                    (`` `)
                                    (S
                                      (NP (NN orse))
                                      (VP (MD should)
                                        (VP (VB do))))
                                    (: ;) ('' '))))))))
                      (S
                        (NP (NNP E))
                        (VP (VBD went)
                          (S
                            (NP (DT an))
                            (VP (`` ') (VB fouled)
                              (NP (DT the) (NN limber))
                              (, ,)
                              (NP (DT an))
                              ('' ')))))
                      (S
                        (NP
                          (NP (DT the) (NN Driver) (POS 's))
                          (NNP Brother))
                        (VP (VBZ squeals) (: :) (`` ``)
                          (NP (NNP Pull))
                          (PP (RP up))))
                      (, ,)))))))
          (VP (VB pull)
            (PRT (RP up))
            (PP (IN for)
              (NP (NNP _) (NNP Snarleyow) (NNP _)))
            (: --) (`` `)
            (SQ (VBZ is)
              (NP
                (NP (NN head))
                (SBAR
                  (S
                    (VP (VBZ 's)
                      (ADVP (IN between))
                      (`` `)
                      (SQ (VBZ is) (`` `)
                        (NP (NNS eels))
                        (. !)))))))
            ('' '')))))))

nsubj(cut-2, They-1)
root(ROOT-0, cut-2)
dobj(cut-2, im-4)
amod(im-4, loose-5)
acl(im-4, left-8)
advmod(left-8, im-10)
parataxis(cut-2, '-12)
dep(almost-15, e-13)
cop(almost-15, was-14)
dep('-12, almost-15)
ccomp(almost-15, tore-16)
case(two-18, in-17)
nmod:in(tore-16, two-18)
cc(tried-22, But-20)
nsubj(tried-22, he-21)
nsubj:xsubj(follow-24, he-21)
parataxis(tore-16, tried-22)
mark(follow-24, to-23)
xcomp(tried-22, follow-24)
case(well-trained-28, after-25)
advmod(well-trained-28, as-26)
det(well-trained-28, a-27)
nmod:after(follow-24, well-trained-28)
nsubj(do-32, orse-30)
aux(do-32, should-31)
dep(well-trained-28, do-32)
nsubj(went-36, E-35)
parataxis(tried-22, went-36)
nsubj(fouled-39, an-37)
ccomp(went-36, fouled-39)
det(limber-41, the-40)
dobj(fouled-39, limber-41)
dobj(fouled-39, an-43)
det(Driver-46, the-45)
nmod:poss(Brother-48, Driver-46)
case(Driver-46, 's-47)
nsubj(squeals-49, Brother-48)
parataxis(tried-22, squeals-49)
dobj(squeals-49, Pull-52)
advcl(squeals-49, up-53)
dep(almost-15, pull-55)
compound:prt(pull-55, up-56)
case(_-60, for-57)
compound(_-60, _-58)
compound(_-60, Snarleyow-59)
nmod:for(pull-55, _-60)
dep(pull-55, is-63)
nsubj(is-63, head-64)
acl:relcl(head-64, 's-65)
advmod('s-65, between-66)
dep('s-65, is-68)
dep(is-68, eels-70)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Driver))
      (`` `)
      (VP (VBN umped)))
    (`` `)
    (VP (VBZ is)
      (NP (NN shoulder))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (DT the) (NNS wheels))
          (VP (VBD was)
            (NP
              (NP
                (NP
                  (NP (NN goin) (POS '))
                  (NN round))
                (, ,)
                (NP (NNP An) (POS ')))
              (SBAR
                (S
                  (NP (EX there))
                  (VP (VBP ai) (RB n't)
                    (NP (DT no) (`` ``) (JJ Stop) (, ,) (NN conductor))))))))))
    (. !) ('' '')))

det(Driver-2, The-1)
nsubj(shoulder-7, Driver-2)
acl(Driver-2, umped-4)
cop(shoulder-7, is-6)
root(ROOT-0, shoulder-7)
mark(round-15, for-9)
det(wheels-11, the-10)
nsubj(round-15, wheels-11)
cop(round-15, was-12)
nmod:poss(round-15, goin-13)
case(goin-13, '-14)
advcl(shoulder-7, round-15)
appos(round-15, An-17)
case(An-17, '-18)
expl(ai-20, there-19)
acl:relcl(round-15, ai-20)
neg(ai-20, n't-21)
neg(conductor-26, no-22)
amod(conductor-26, Stop-24)
nsubj(ai-20, conductor-26)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (DT a) (NN batt) (`` `) (NN ry))
        (VP (VBZ 's)
          (NP
            (NP (NN changin) (POS '))
            (NN ground)))))
    (: ;)
    (NP (NNP Sez))
    (VP (`` `) (VBZ e) (: :) (`` ``)
      (S
        (NP (PRP I))
        (VP (VBD broke)
          (NP (DT the) (NN beggar))
          (PP (IN in))
          (, ,)
          (ADVP (DT an))))
      ('' ')
      (NP
        (NP
          (NP (RB very) (JJ sad))
          (SBAR
            (S
              (S
                (NP (PRP I))
                (VP (VBZ feels)))
              (, ,)
              (CC But)
              (S
                (NP (PRP I))
                (VP (MD could) (RB n't)
                  (VP (VB pull)
                    (PRT (RP up))
                    (, ,)
                    (PP (RB not) (IN for)
                      (S
                        (VP (VBG _)
                          (S
                            (NP (PRP you))
                            (ADJP (JJ _))))))))))))
        (: --)
        (NP
          (NP (PRP$ your) (`` `) (NN ead))
          (PP (IN between)
            (NP (PRP$ your) (`` `)
              (NX (NNP eels)))))))
    (. !) ('' '') ('' ')))

advmod(ground-9, when-1)
det(ry-5, a-2)
compound(ry-5, batt-3)
nsubj(ground-9, ry-5)
cop(ground-9, 's-6)
nmod:poss(ground-9, changin-7)
case(changin-7, '-8)
advcl(e-13, ground-9)
nsubj(e-13, Sez-11)
root(ROOT-0, e-13)
nsubj(broke-17, I-16)
ccomp(e-13, broke-17)
det(beggar-19, the-18)
dobj(broke-17, beggar-19)
nmod(broke-17, in-20)
advmod(broke-17, an-22)
advmod(sad-25, very-24)
dobj(e-13, sad-25)
nsubj(feels-27, I-26)
acl:relcl(sad-25, feels-27)
cc(feels-27, But-29)
nsubj(pull-33, I-30)
aux(pull-33, could-31)
neg(pull-33, n't-32)
acl:relcl(sad-25, pull-33)
conj:but(feels-27, pull-33)
compound:prt(pull-33, up-34)
neg(_-38, not-36)
mark(_-38, for-37)
advcl(pull-33, _-38)
nsubj(_-40, you-39)
xcomp(_-38, _-40)
nmod:poss(ead-44, your-42)
dep(sad-25, ead-44)
case(eels-48, between-45)
nmod:poss(eels-48, your-46)
nmod:between(ead-44, eels-48)

(ROOT
  (S
    (S
      (NP (NNP E))
      (`` `)
      (NP
        (NP (NN ad))
        (ADJP (RB n't) (`` `) (JJ ardly)))
      (VP (VBD spoke)
        (SBAR
          (S
            (NP
              (NP (DT the) (NN word))
              (, ,)
              (NP
                (ADVP (IN before)
                  (NP
                    (NP (DT a) (NN droppin) (POS '))
                    (NN shell))
                  (ADVP
                    (NP (DT A) (RB little))
                    (RB right)))
                (NP (DT the) (JJ batt) (`` `) (NN ry) (, an) ('' '))
                (PP (IN between)
                  (NP (DT the) (NNS sections)))))
            (VP (VBD fell))))))
    (: ;)
    (S
      (S
        (NP (NNP An) (POS '))
        (X
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT the) (NN smoke) (`` `) (NN ad))
              (VP (VBD cleared)
                (PRT (RP away)))))
          (, ,)
          (X
            (ADVP (RB before))
            (NP (DT the) (NN limber)))
          (NP (NNS wheels))))
      (, ,)
      (NP (EX There))
      (VP (VBD lay)
        (SBAR
          (S
            (NP
              (NP
                (NP (DT the) (NN Driver) (POS 's))
                (NNP Brother))
              (PP (IN with) (`` `)
                (S
                  (VP (VBZ is) (`` `)
                    (ADJP (JJ ead)
                      (PP (IN between)))))))
            (`` `)
            (VP (VBZ is) (`` `)
              (ADJP (JJ eels)))))))
    (. .)))

nsubj(spoke-7, E-1)
nsubj(spoke-7, ad-3)
neg(ardly-6, n't-4)
amod(ad-3, ardly-6)
root(ROOT-0, spoke-7)
det(word-9, the-8)
nsubj(fell-28, word-9)
case(shell-15, before-11)
det(droppin-13, a-12)
nmod:poss(shell-15, droppin-13)
case(droppin-13, '-14)
advmod(ry-22, shell-15)
det(little-17, A-16)
nmod:npmod(right-18, little-17)
advmod(shell-15, right-18)
det(ry-22, the-19)
amod(ry-22, batt-20)
appos(word-9, ry-22)
case(sections-27, between-25)
det(sections-27, the-26)
nmod:between(ry-22, sections-27)
ccomp(spoke-7, fell-28)
ccomp(lay-46, An-30)
case(An-30, '-31)
advmod(cleared-37, when-32)
det(ad-36, the-33)
compound(ad-36, smoke-34)
nsubj(cleared-37, ad-36)
dep(wheels-43, cleared-37)
compound:prt(cleared-37, away-38)
dep(limber-42, before-40)
det(limber-42, the-41)
dep(wheels-43, limber-42)
dep(An-30, wheels-43)
expl(lay-46, There-45)
parataxis(spoke-7, lay-46)
det(Driver-48, the-47)
nmod:poss(Brother-50, Driver-48)
case(Driver-48, 's-49)
nsubj(eels-60, Brother-50)
case(ead-55, with-51)
cop(ead-55, is-53)
acl(Brother-50, ead-55)
nmod(ead-55, between-56)
cop(eels-60, is-58)
ccomp(lay-46, eels-60)

(ROOT
  (SINV
    (VP
      (ADVP (RB Then))
      (VBP sez))
    (NP
      (NP (DT the) (NN Driver) (POS 's))
      (NN Brother))
    (, ,)
    (S
      (S
        (NP (DT an)
          (S
            (NP (POS '))
            (VP (`` `) (VBZ is)
              (ADJP (JJ words)))))
        (VP (VBD was)
          (ADJP (RB very) (JJ plain))))
      (, ,)
      (S (`` ``)
        (SBAR (IN For)
          (S
            (NP
              (NP (NNP Gawd) (POS 's))
              (JJ own) (NN sake))
            (VP (VBP get)
              (PRT (RP over))
              (NP (PRP me)))))
        (, ,)
        (NP (DT an))
        ('' ')
        (VP (VBD put)
          (NP (PRP me))
          (PP (IN out)
            (NP
              (NP (NNP o) (POS '))
              (NN pain))))))
    (. .) ('' '')))

advmod(sez-2, Then-1)
root(ROOT-0, sez-2)
det(Driver-4, the-3)
nmod:poss(Brother-6, Driver-4)
case(Driver-4, 's-5)
nsubj(sez-2, Brother-6)
nsubj(plain-15, an-8)
nsubj(words-12, '-9)
cop(words-12, is-11)
dep(an-8, words-12)
cop(plain-15, was-13)
advmod(plain-15, very-14)
ccomp(sez-2, plain-15)
mark(get-23, For-18)
nmod:poss(sake-22, Gawd-19)
case(Gawd-19, 's-20)
amod(sake-22, own-21)
nsubj(get-23, sake-22)
advcl(put-29, get-23)
compound:prt(get-23, over-24)
dobj(get-23, me-25)
nsubj(put-29, an-27)
parataxis(plain-15, put-29)
dobj(put-29, me-30)
case(pain-34, out-31)
nmod:poss(pain-34, o-32)
case(o-32, '-33)
nmod:out(put-29, pain-34)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD saw)
      (NP (`` `)
        (S
          (S
            (S
              (VP (VBZ is)
                (NP (NNS wounds))))
            (VP
              (VP (VBD was)
                (ADJP (JJ mortial)))
              (, ,)
              (NP
                (NP (DT an))
                ('' ')
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBN judged)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBD was)
                            (ADVP (RBS best)))))))))))
          (, ,) (IN So)
          (S
            (NP (PRP they))
            (VP (VBD took)
              (SBAR
                (S
                  (NP (DT an)
                    (S
                      (NP (POS '))
                      (VP (VBD drove)
                        (NP (DT the) (NN limber))
                        (PP (RB straight)
                          (PP (IN across))))))
                  (`` `)
                  (VP (VBZ is)
                    (NP (RB back) (DT an))))))))
        ('' ') (NN chest)))
    (. .)))

nsubj(saw-2, They-1)
root(ROOT-0, saw-2)
cop(wounds-5, is-4)
csubj(mortial-7, wounds-5)
cop(mortial-7, was-6)
dep(chest-33, mortial-7)
dobj(mortial-7, an-9)
mark(was-15, an-9)
nsubj(judged-12, they-11)
acl:relcl(an-9, judged-12)
ref(an-9, that-13)
nsubj(was-15, it-14)
ccomp(judged-12, was-15)
advmod(was-15, best-16)
dep(mortial-7, So-18)
nsubj(took-20, they-19)
parataxis(mortial-7, took-20)
nsubj(an-31, an-21)
nsubj(drove-23, '-22)
dep(an-21, drove-23)
det(limber-25, the-24)
dobj(drove-23, limber-25)
advmod(across-27, straight-26)
advcl(drove-23, across-27)
cop(an-31, is-29)
advmod(an-31, back-30)
ccomp(took-20, an-31)
dobj(saw-2, chest-33)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Driver) (POS '))
      (NN e)
      (S
        (VP (VB give)
          (NP
            (NP
              (NP (NN nothin) (POS '))
              (`` `) (NN cept)
              (NP (DT a) (JJ little) (NN coughin) (POS '))
              (NN grunt) (, ,))
            (NX (NNP But) (POS ') (NNP e) (NNP swung))))))
    (`` `)
    (VP (VBZ is)
      (ADJP (`` `) (JJ orses))
      (`` `)
      (ADJP (JJ andsome))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBD came)
            (PP (TO to) (`` ``)
              (NP (NNP Action) (NNP Front)))))))
    (. !) ('' '')))

det(Driver-2, The-1)
nmod:poss(e-4, Driver-2)
case(Driver-2, '-3)
nsubj(orses-23, e-4)
dep(e-4, give-5)
nmod:poss(grunt-14, nothin-6)
case(nothin-6, '-7)
compound(grunt-14, cept-9)
det(coughin-12, a-10)
amod(coughin-12, little-11)
nmod:poss(grunt-14, coughin-12)
case(coughin-12, '-13)
dep(swung-19, grunt-14)
nmod:poss(swung-19, But-16)
dep(swung-19, '-17)
compound(swung-19, e-18)
dobj(give-5, swung-19)
cop(orses-23, is-21)
root(ROOT-0, orses-23)
xcomp(orses-23, andsome-25)
advmod(came-28, when-26)
nsubj(came-28, it-27)
advcl(orses-23, came-28)
case(Front-32, to-29)
compound(Front-32, Action-31)
nmod:to(came-28, Front-32)

(ROOT
  (S
    (S
      (NP
        (NP (NNP An) (POS '))
        (ADJP (IN if))
        (NN one) (NN wheel))
      (VP (VBD was)
        (ADVP (RB juicy))))
    (, ,)
    (NP (PRP you))
    (VP (MD may)
      (VP (VB lay)
        (NP (PRP$ your) (NNP Monday) (NN head))
        (SBAR
          (S
            (NP (PRP 'T))
            (VP (VBD was)
              (NP
                (NP (NN juicier))
                (PP (IN for)
                  (NP (DT the) (NNS niggers)))))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN case))
            (VP (VBN begun)
              (PP (TO to)
                (NP (NN spread))))))))
    (. .)))

nmod:poss(wheel-5, An-1)
case(An-1, '-2)
amod(wheel-5, if-3)
compound(wheel-5, one-4)
nsubj(was-6, wheel-5)
ccomp(lay-11, was-6)
advmod(was-6, juicy-7)
nsubj(lay-11, you-9)
aux(lay-11, may-10)
root(ROOT-0, lay-11)
nmod:poss(head-14, your-12)
compound(head-14, Monday-13)
dobj(lay-11, head-14)
nsubj(juicier-17, 'T-15)
cop(juicier-17, was-16)
dep(lay-11, juicier-17)
case(niggers-20, for-18)
det(niggers-20, the-19)
nmod:for(juicier-17, niggers-20)
advmod(begun-24, when-21)
det(case-23, the-22)
nsubj(begun-24, case-23)
advcl(lay-11, begun-24)
case(spread-26, to-25)
nmod:to(begun-24, spread-26)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (DT The) (NN moril))
          (PP (IN of)
            (NP (DT this) (NN story)))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB plainly)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN seen))))))))
    (: :)
    (S
      (NP (PRP You))
      (`` `)
      (VP (VBP av) (RB n't)
        (VP (VBP got)
          (NP (DT no) (NNS families))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP
                (NP (NN servin) ('' '))
                (PP (IN of)
                  (NP (DT the) (NN Queen)))))))))
    (: --)
    (S
      (NP (PRP You))
      (`` `)
      (VP (VBP av) (RB n't)
        (VP (VBD got)
          (NP
            (NP (DT no) (NNS brothers))
            (, ,)
            (NP (NNS fathers))
            (, ,)
            (NP (NNS sisters))
            (, ,)
            (NP (NNS wives))
            (, ,)
            (CC or)
            (NP (NNS sons))))))
    (: --)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB win)
                (S
                  (NP (PRP$ your) (NNS battles))
                  (VP (VB take)
                    (NP (DT an)
                      (S
                        (NP (POS '))
                        (VP (VBP work)
                          (NP
                            (NP (PRP$ your) (NN bloomin) (POS '))
                            (NNS guns)))))))))))))
    (. !)))

det(moril-2, The-1)
ccomp(plainly-9, moril-2)
case(story-5, of-3)
det(story-5, this-4)
nmod:of(moril-2, story-5)
nsubj(plainly-9, it-7)
nsubjpass:xsubj(seen-12, it-7)
cop(plainly-9, is-8)
root(ROOT-0, plainly-9)
mark(seen-12, to-10)
auxpass(seen-12, be-11)
xcomp(plainly-9, seen-12)
nsubj(av-16, You-14)
parataxis(plainly-9, av-16)
neg(av-16, n't-17)
dep(av-16, got-18)
neg(families-20, no-19)
dobj(got-18, families-20)
advmod(servin-22, when-21)
advcl(got-18, servin-22)
case(Queen-26, of-24)
det(Queen-26, the-25)
nmod:of(servin-22, Queen-26)
nsubj(av-30, You-28)
parataxis(plainly-9, av-30)
neg(av-30, n't-31)
dep(av-30, got-32)
neg(brothers-34, no-33)
dobj(got-32, brothers-34)
dobj(got-32, fathers-36)
conj:or(brothers-34, fathers-36)
dobj(got-32, sisters-38)
conj:or(brothers-34, sisters-38)
dobj(got-32, wives-40)
conj:or(brothers-34, wives-40)
cc(brothers-34, or-42)
dobj(got-32, sons-43)
conj:or(brothers-34, sons-43)
mark(want-47, If-45)
nsubj(want-47, you-46)
nsubj:xsubj(win-49, you-46)
parataxis(plainly-9, want-47)
mark(win-49, to-48)
xcomp(want-47, win-49)
nmod:poss(battles-51, your-50)
nsubj(take-52, battles-51)
ccomp(win-49, take-52)
dobj(take-52, an-53)
nsubj(work-55, '-54)
dep(an-53, work-55)
nmod:poss(bloomin-57, your-56)
nmod:poss(guns-59, bloomin-57)
case(bloomin-57, '-58)
dobj(work-55, guns-59)

(ROOT
  (S
    (S
      (PP (IN Down)
        (PP (IN in)
          (NP (DT the) (NNP Infantry))))
      (, ,)
      (NP (NN nobody))
      (VP (VBZ cares)))
    (: ;)
    (S
      (PP (IN Down)
        (PP (IN in)
          (NP (DT the) (NNP Cavalry))))
      (, ,)
      (NP
        (NP (NNP Colonel) (POS '))
        (NN e))
      (VP (VBZ swears)))
    (: ;)
    (CC But)
    (S
      (NP
        (ADVP (RB down)
          (PP (IN in)
            (NP
              (NP (DT the) (NN lead))
              (PP (IN with)
                (NP
                  (NP (DT the) (NN wheel))
                  (PP (IN at)
                    (NP (DT the) (NN flog)))))))))
      (VP (VBZ Turns)
        (NP (DT the) (JJ bold) (NN Bombardier))
        (PP (TO to)
          (NP (DT a) (JJ little) (JJ whipped) (NN dog)))))
    (. !)))

case(Infantry-4, Down-1)
case(Infantry-4, in-2)
det(Infantry-4, the-3)
nmod:in(cares-7, Infantry-4)
nsubj(cares-7, nobody-6)
root(ROOT-0, cares-7)
case(Cavalry-12, Down-9)
case(Cavalry-12, in-10)
det(Cavalry-12, the-11)
nmod:in(swears-17, Cavalry-12)
nmod:poss(e-16, Colonel-14)
case(Colonel-14, '-15)
nsubj(swears-17, e-16)
conj:but(cares-7, swears-17)
cc(cares-7, But-19)
nsubj(Turns-30, down-20)
case(lead-23, in-21)
det(lead-23, the-22)
nmod:in(down-20, lead-23)
case(wheel-26, with-24)
det(wheel-26, the-25)
nmod:with(lead-23, wheel-26)
case(flog-29, at-27)
det(flog-29, the-28)
nmod:at(wheel-26, flog-29)
conj:but(cares-7, Turns-30)
det(Bombardier-33, the-31)
amod(Bombardier-33, bold-32)
dobj(Turns-30, Bombardier-33)
case(dog-38, to-34)
det(dog-38, a-35)
amod(dog-38, little-36)
amod(dog-38, whipped-37)
nmod:to(Turns-30, dog-38)

(ROOT
  (NP
    (NP (DT THE) (NNP WIDOW) (NNP AT) (NNP WINDSOR) (`` `) (NNP Ave) (NN you) (`` `) (NN eard) (NN o) ('' '))
    (NP
      (NP (DT the) (NNP Widow))
      (PP (IN at)
        (NP
          (NP (NNP Windsor))
          (PP (IN With)
            (NP
              (NP (DT a) (JJ hairy) (NN gold) (NN crown))
              (PP (IN on)
                (NP (`` `) (NN er) (`` `) (NN ead))))))))
    (. ?)))

det(o-10, THE-1)
compound(o-10, WIDOW-2)
compound(o-10, AT-3)
compound(o-10, WINDSOR-4)
compound(o-10, Ave-6)
compound(o-10, you-7)
compound(o-10, eard-9)
root(ROOT-0, o-10)
det(Widow-13, the-12)
dep(o-10, Widow-13)
case(Windsor-15, at-14)
nmod:at(Widow-13, Windsor-15)
case(crown-20, With-16)
det(crown-20, a-17)
amod(crown-20, hairy-18)
compound(crown-20, gold-19)
nmod:with(Windsor-15, crown-20)
case(ead-25, on-21)
compound(ead-25, er-23)
nmod:on(crown-20, ead-25)

(ROOT
  (S
    (NP (PRP She))
    (`` `)
    (PP (IN as)
      (NP
        (NP (NNS ships))
        (PP (IN on)
          (NP
            (NP (DT the) (NN foam))
            (: --)
            (NP (PRP she))))
        (`` `)
        (PP (IN as)
          (NP
            (NP (NNS millions))
            (PP (IN at) (`` `)
              (NP (NN ome)))))))
    (, ,)
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP she))
    (VP (VBZ pays)
      (NP (PRP us))
      (NP
        (NP (JJ poor) (NNS beggars))
        (PP (IN in)
          (NP (NN red)))))
    (. .)))

nsubj(pays-20, She-1)
case(ships-4, as-3)
nmod:as(pays-20, ships-4)
case(foam-7, on-5)
det(foam-7, the-6)
nmod:on(ships-4, foam-7)
dep(foam-7, she-9)
case(millions-12, as-11)
nmod:as(ships-4, millions-12)
case(ome-15, at-13)
nmod:at(millions-12, ome-15)
dep(pays-20, An-17)
case(An-17, '-18)
nsubj(pays-20, she-19)
root(ROOT-0, pays-20)
iobj(pays-20, us-21)
amod(beggars-23, poor-22)
dobj(pays-20, beggars-23)
case(red-25, in-24)
nmod:in(beggars-23, red-25)

(ROOT
  (NP (-LRB- -LRB-)
    (NP (JJ Ow) (, ,) (JJ poor) (NNS beggars))
    (PP (IN in)
      (NP (NN red)))
    (. !) (-RRB- -RRB-)))

amod(beggars-5, Ow-2)
amod(beggars-5, poor-4)
root(ROOT-0, beggars-5)
case(red-7, in-6)
nmod:in(beggars-5, red-7)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBZ 's) (`` `)
          (NP
            (NP (NN er) (NN nick))
            (PP (IN on)
              (NP
                (NP (DT the) (NN cavalry))
                (`` `)
                (NP (NNS orses)))))))
      (, ,)
      (NP (EX There))
      (VP (VBZ 's) (`` `)
        (NP
          (NP (NN er) (NN mark))
          (PP (IN on)
            (NP (DT the) (JJ medical) (NNS stores))))))
    (: --)
    (S
      (NP
        (NP (NNP An) (POS '))
        (`` `) (NN er))
      (VP (VBZ troopers)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD 'll)
              (VP (VB find)
                (SBAR (IN with)
                  (S
                    (NP (DT a) (JJ fair) (NN wind))
                    (VP (VBD be'ind)
                      (SBAR
                        (S
                          (NP (DT That))
                          (VP (VBZ takes)
                            (NP (PRP us))
                            (PP (TO to)
                              (NP (JJ various) (NNS wars)))))))))))))))
    (. .)))

expl('s-2, There-1)
ccomp('s-13, 's-2)
compound(nick-5, er-4)
nsubj('s-2, nick-5)
case(cavalry-8, on-6)
det(cavalry-8, the-7)
nmod:on(nick-5, cavalry-8)
dep(cavalry-8, orses-10)
expl('s-13, There-12)
root(ROOT-0, 's-13)
compound(mark-16, er-15)
nsubj('s-13, mark-16)
case(stores-20, on-17)
det(stores-20, the-18)
amod(stores-20, medical-19)
nmod:on(mark-16, stores-20)
nmod:poss(er-25, An-22)
case(An-22, '-23)
nsubj(troopers-26, er-25)
parataxis('s-13, troopers-26)
nsubj(find-29, you-27)
aux(find-29, 'll-28)
ccomp(troopers-26, find-29)
mark(be'ind-34, with-30)
det(wind-33, a-31)
amod(wind-33, fair-32)
nsubj(be'ind-34, wind-33)
advcl(find-29, be'ind-34)
nsubj(takes-36, That-35)
ccomp(be'ind-34, takes-36)
dobj(takes-36, us-37)
case(wars-40, to-38)
amod(wars-40, various-39)
nmod:to(takes-36, wars-40)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Poor))
    (VP (VBZ beggars))
    (. !)))

nsubj(beggars-3, Poor-2)
root(ROOT-0, beggars-3)

(ROOT
  (NP (: --) (NNP barbarious) (NNP wars) (NNP !) (-RRB- -RRB-)))

compound(!-4, barbarious-2)
compound(!-4, wars-3)
root(ROOT-0, !-4)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (`` `) (NNP ere))
      (VP (VBZ 's)
        (PP (TO to)
          (NP (DT the) (NNP Widow)))
        (PP (IN at)
          (NP (NNP Windsor)))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (`` `) (NN ere))
    (VP (VBZ 's)
      (PP (TO to)
        (NP
          (NP (DT the) (NNS stores))
          (, an) ('' ')
          (NP
            (NP
              (NP (DT the) (NNS guns))
              (, ,)
              (NP (DT The) (NNS men))
              (, an) ('' '))
            (NP
              (NP (DT the) (`` `) (NNS orses))
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ makes)
                    (PRT (RP up))
                    (NP
                      (NP
                        (NP (DT the) (NNS forces) (NN O) (POS '))
                        (NNP Missis) (NNP Victorier) (POS 's))
                      (NNS sons))))))))))
    (. .)))

advmod(Widow-7, Then-1)
nsubj(Widow-7, ere-3)
cop(Widow-7, 's-4)
case(Widow-7, to-5)
det(Widow-7, the-6)
ccomp(stores-18, Widow-7)
case(Windsor-9, at-8)
nmod:at(Widow-7, Windsor-9)
nmod:poss(ere-14, An-11)
case(An-11, '-12)
nsubj(stores-18, ere-14)
cop(stores-18, 's-15)
case(stores-18, to-16)
det(stores-18, the-17)
root(ROOT-0, stores-18)
det(guns-22, the-21)
dep(stores-18, guns-22)
det(men-25, The-24)
appos(guns-22, men-25)
det(orses-30, the-28)
dep(guns-22, orses-30)
nsubj(makes-32, orses-30)
ref(orses-30, what-31)
acl:relcl(orses-30, makes-32)
compound:prt(makes-32, up-33)
det(O-36, the-34)
compound(O-36, forces-35)
nmod:poss(Victorier-39, O-36)
case(O-36, '-37)
compound(Victorier-39, Missis-38)
nmod:poss(sons-41, Victorier-39)
case(Victorier-39, 's-40)
dobj(makes-32, sons-41)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Poor))
    (VP (VBZ beggars))
    (. !)))

nsubj(beggars-3, Poor-2)
root(ROOT-0, beggars-3)

(ROOT
  (S
    (NP (NNP Victorier))
    (VP (VBZ 's)
      (NP (NNS sons)))
    (. !) (-RRB- -RRB-)))

nsubj(sons-3, Victorier-1)
cop(sons-3, 's-2)
root(ROOT-0, sons-3)

(ROOT
  (S
    (PP (IN Walk)
      (NP
        (NP (JJ wide) (NN o) (POS '))
        (NP
          (NP (DT the) (NNP Widow))
          (PP (IN at)
            (NP (NNP Windsor))))))
    (, ,)
    (S
      (PP (IN For)
        (NP (`` `)
          (NP (NN alf) (NN o))
          ('' ') (NNS Creation)))
      (NP (PRP she))
      (VP (VBZ owns)))
    (: :)
    (S
      (NP (PRP We))
      (`` `)
      (ADVP (RB ave))
      (VP (VBD bought)
        (SBAR
          (S (`` `)
            (S
              (VP (VB er)
                (NP (DT the) (JJ same))
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN sword))
                    (, an) ('' ')
                    (NP
                      (NP (DT the) (NN flame))
                      (, ,)
                      (NP (NNP An)))))))
            ('' ')
            (NP (PRP we))
            (VP (VBP 've)
              (VP (VBN salted)
                (NP (PRP it))
                (PRT (RP down))
                (PP (IN with)
                  (NP (PRP$ our) (NNS bones)))))))))
    (. .)))

case(o-3, Walk-1)
amod(o-3, wide-2)
nmod:'(owns-17, o-3)
case(o-3, '-4)
det(Widow-6, the-5)
dep(o-3, Widow-6)
case(Windsor-8, at-7)
nmod:at(Widow-6, Windsor-8)
case(Creation-15, For-10)
compound(o-13, alf-12)
compound(Creation-15, o-13)
nmod:for(owns-17, Creation-15)
nsubj(owns-17, she-16)
root(ROOT-0, owns-17)
nsubj(bought-22, We-19)
advmod(bought-22, ave-21)
parataxis(owns-17, bought-22)
ccomp(salted-39, er-24)
det(same-26, the-25)
dobj(er-24, same-26)
case(sword-29, with-27)
det(sword-29, the-28)
nmod:with(er-24, sword-29)
det(flame-33, the-32)
dep(sword-29, flame-33)
appos(flame-33, An-35)
nsubj(salted-39, we-37)
aux(salted-39, 've-38)
ccomp(bought-22, salted-39)
dobj(salted-39, it-40)
compound:prt(salted-39, down-41)
case(bones-44, with-42)
nmod:poss(bones-44, our-43)
nmod:with(salted-39, bones-44)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Poor))
    (VP (VBZ beggars))
    (. !)))

nsubj(beggars-3, Poor-2)
root(ROOT-0, beggars-3)

(ROOT
  (PRN (: --)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ blue)
          (PP (IN with)
            (NP (PRP$ our) (NNP bones) (NN !) (-RRB- -RRB-))))))))

nsubj(blue-4, it-2)
cop(blue-4, 's-3)
root(ROOT-0, blue-4)
case(!-8, with-5)
nmod:poss(!-8, our-6)
compound(!-8, bones-7)
nmod:with(blue-4, !-8)

(ROOT
  (SINV
    (VP (VBZ Hands)
      (PRT (RP off))
      (NP (NN o))
      ('' '))
    (NP
      (NP (DT the) (NNS sons) (NN o) (POS '))
      (NNP the) (NNP Widow))
    (, ,)
    (S
      (S
        (NP (NNP Hands))
        (ADVP (RB off))
        (VP (VBP o) ('' ')
          (NP (DT the) (NNS goods))
          (PP (IN in) (`` `)
            (NP (NN er) (NN shop)))))
      (, ,) (IN For)
      (S
        (NP (DT the) (NNPS Kings))
        (VP (MD must)
          (VP (VB come)
            (ADVP (IN down) (DT an))
            ('' ')
            (NP
              (NP (DT the) (NNP Emperors) (NN frown))
              (SBAR
                (WHADVP (WRB When))
                (S
                  (NP
                    (NP (DT the) (NNP Widow))
                    (PP (IN at)
                      (NP (NNP Windsor))))
                  (VP (VBZ says)
                    (S (`` ``)
                      (NP (NNP Stop))
                      ('' ''))))))))))
    (. !)))

root(ROOT-0, Hands-1)
compound:prt(Hands-1, off-2)
dobj(Hands-1, o-3)
det(o-7, the-5)
compound(o-7, sons-6)
nmod:poss(Widow-10, o-7)
case(o-7, '-8)
compound(Widow-10, the-9)
nsubj(Hands-1, Widow-10)
nsubj(o-14, Hands-12)
advmod(o-14, off-13)
ccomp(Hands-1, o-14)
det(goods-17, the-16)
dobj(o-14, goods-17)
case(shop-21, in-18)
compound(shop-21, er-20)
nmod:in(o-14, shop-21)
dep(o-14, For-23)
det(Kings-25, the-24)
nsubj(come-27, Kings-25)
aux(come-27, must-26)
parataxis(o-14, come-27)
case(an-29, down-28)
advmod(come-27, an-29)
det(frown-33, the-31)
compound(frown-33, Emperors-32)
dobj(come-27, frown-33)
advmod(says-39, When-34)
det(Widow-36, the-35)
nsubj(says-39, Widow-36)
case(Windsor-38, at-37)
nmod:at(Widow-36, Windsor-38)
acl:relcl(frown-33, says-39)
xcomp(says-39, Stop-41)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Poor))
    (VP (VBZ beggars))
    (. !)))

nsubj(beggars-3, Poor-2)
root(ROOT-0, beggars-3)

(ROOT
  (PRN (: --)
    (S
      (NP (PRP we))
      (VP (VBP 're)
        (VP (VBN sent)
          (S
            (VP (TO to)
              (VP (VB say) (`` ``)
                (ADVP (RB Stop))
                ('' '')
                (NP (NNS !))
                (-RRB- -RRB-)))))))))

nsubjpass(sent-4, we-2)
nsubj:xsubj(say-6, we-2)
auxpass(sent-4, 're-3)
root(ROOT-0, sent-4)
mark(say-6, to-5)
xcomp(sent-4, say-6)
advmod(say-6, Stop-8)
dobj(say-6, !-10)

(ROOT
  (S
    (S
      (VP (VBG Then)
        (NP (`` `)
          (NP
            (NP (NNP ere) (POS 's))
            (PP (TO to)
              (NP (DT the) (NNP Lodge) (NN o))))
          ('' ')
          (SBAR
            (S
              (NP (DT the) (NNP Widow))
              (, ,)
              (PP (IN From)
                (NP
                  (NP (DT the) (NNP Pole))
                  (PP (TO to)
                    (NP (DT the) (NNPS Tropics)))))
              (NP (PRP it))
              (VP (VBZ runs)))))
        (: --)
        (PP (TO To)
          (NP (DT the) (NNP Lodge)))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBZ tile)
              (PP (IN with)
                (NP
                  (NP (DT the) (NN rank))
                  (, an) ('' ')
                  (NP (DT the) (NN file)))))))))
    (, ,)
    (NP (NNP An) (POS '))
    (VP (VBP open)
      (PP (IN in)
        (NP (NN form)))
      (PP (IN with)
        (NP (DT the) (NNS guns))))
    (. .)))

advcl(open-38, Then-1)
dobj(Then-1, ere-3)
case(ere-3, 's-4)
case(o-8, to-5)
det(o-8, the-6)
compound(o-8, Lodge-7)
nmod:to(ere-3, o-8)
det(Widow-11, the-10)
nsubj(runs-20, Widow-11)
case(Pole-15, From-13)
det(Pole-15, the-14)
nmod:from(runs-20, Pole-15)
case(Tropics-18, to-16)
det(Tropics-18, the-17)
nmod:to(Pole-15, Tropics-18)
nsubj(runs-20, it-19)
acl:relcl(ere-3, runs-20)
case(Lodge-24, To-22)
det(Lodge-24, the-23)
nmod:to(Then-1, Lodge-24)
mark(tile-27, that-25)
nsubj(tile-27, we-26)
ccomp(Then-1, tile-27)
case(rank-30, with-28)
det(rank-30, the-29)
nmod:with(tile-27, rank-30)
det(file-34, the-33)
dep(rank-30, file-34)
nsubj(open-38, An-36)
case(An-36, '-37)
root(ROOT-0, open-38)
case(form-40, in-39)
nmod:in(open-38, form-40)
case(guns-43, with-41)
det(guns-43, the-42)
nmod:with(open-38, guns-43)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Poor))
    (VP (VBZ beggars))
    (. !)))

nsubj(beggars-3, Poor-2)
root(ROOT-0, beggars-3)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP it))
      (VP (VBZ 's)))
    (RB always)
    (S
      (NP (PRP they))
      (VP (VBZ guns)))
    (. !) (-RRB- -RRB-)))

nsubj('s-3, it-2)
root(ROOT-0, 's-3)
advmod('s-3, always-4)
nsubj(guns-6, they-5)
parataxis('s-3, guns-6)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (`` `) (VBZ ave) (`` `)
        (NP (JJ eard) (NN o))
        ('' ')
        (NP
          (NP (DT the) (NNP Widow))
          (PP (IN at)
            (NP
              (NP (NNP Windsor))
              (, ,)
              (NP
                (NP (PRP It) (POS 's))
                (ADJP (JJ safest)
                  (S
                    (VP (TO to)
                      (VP (VB let) (`` `)
                        (NP (NN er))))))
                (RB alone)))))))
    (: :)
    (S
      (PP (IN For) (`` `)
        (NP (NN er) (NNS sentries)))
      (NP (PRP we))
      (VP (VBP stand)
        (PP (IN by)
          (NP
            (NP (DT the) (NN sea))
            (, an) ('' ')
            (NP
              (NP (DT the) (NN land) (NN Wherever))
              (SBAR
                (S
                  (NP (DT the) (NNS bugles))
                  (VP (VBP are)
                    (VP (VBN blown))))))))))
    (. .)))

nsubj(ave-3, We-1)
root(ROOT-0, ave-3)
amod(o-6, eard-5)
dobj(ave-3, o-6)
det(Widow-9, the-8)
dobj(ave-3, Widow-9)
case(Windsor-11, at-10)
nmod:at(Widow-9, Windsor-11)
appos(Windsor-11, It-13)
case(It-13, 's-14)
amod(It-13, safest-15)
mark(let-17, to-16)
xcomp(safest-15, let-17)
dobj(let-17, er-19)
advmod(It-13, alone-20)
case(sentries-25, For-22)
compound(sentries-25, er-24)
nmod:for(stand-27, sentries-25)
nsubj(stand-27, we-26)
parataxis(ave-3, stand-27)
case(sea-30, by-28)
det(sea-30, the-29)
nmod:by(stand-27, sea-30)
det(Wherever-35, the-33)
compound(Wherever-35, land-34)
dep(sea-30, Wherever-35)
det(bugles-37, the-36)
nsubjpass(blown-39, bugles-37)
auxpass(blown-39, are-38)
acl:relcl(Wherever-35, blown-39)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Poor))
    (VP (VBZ beggars))
    (. !)))

nsubj(beggars-3, Poor-2)
root(ROOT-0, beggars-3)

(ROOT
  (PRN (: --)
    (NP
      (NP (DT an))
      (SBAR
        (S
          (NP (POS '))
          (VP
            (VP (VBP do) (RB n't))
            (PRN
              (S
                (NP (PRP we))
                (VP (VB get)
                  (FRAG
                    (ADJP (FW blown) (. !)))))
              (-RRB- -RRB-))))))))

root(ROOT-0, an-2)
nsubj(do-4, '-3)
acl:relcl(an-2, do-4)
neg(do-4, n't-5)
nsubj(get-7, we-6)
parataxis(do-4, get-7)
dep(get-7, blown-8)

(ROOT
  (S
    (S
      (VP (VB Take)
        (NP (`` `)
          (NP (JJ old) (NN o))
          ('' ')
          (SBAR
            (S
              (NP (DT the) (NNPS Wings))
              (VP (VBP o) ('' ')
                (NP (DT the) (NNP Mornin))
                ('' ')))))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (NN flop))
    (VP (VBP round)
      (NP (DT the) (NN earth))
      (SBAR (IN till)
        (S
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (ADJP (JJ dead))))
          (: ;)
          (S (CC But)
            (NP (PRP you))
            (VP (MD wo) (RB n't)
              (VP (VB get)
                (PRT (RP away))
                (PP (IN from)
                  (NP (DT the) (NN tune)))
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (VBP play)
                      (PP (TO To)
                        (NP
                          (NP (DT the) (NN bloomin) (POS '))
                          (JJ old) (NN rag)))
                      (PP (IN over) (`` `)
                        (NP (NN ead))))))))))))
    (. .)))

ccomp(round-17, Take-1)
amod(o-4, old-3)
dobj(Take-1, o-4)
det(Wings-7, the-6)
nsubj(o-8, Wings-7)
acl:relcl(o-4, o-8)
det(Mornin-11, the-10)
dobj(o-8, Mornin-11)
nmod:poss(flop-16, An-14)
case(An-14, '-15)
nsubj(round-17, flop-16)
root(ROOT-0, round-17)
det(earth-19, the-18)
dobj(round-17, earth-19)
mark(dead-23, till-20)
nsubj(dead-23, you-21)
cop(dead-23, 're-22)
advcl(round-17, dead-23)
cc(get-29, But-25)
nsubj(get-29, you-26)
aux(get-29, wo-27)
neg(get-29, n't-28)
parataxis(dead-23, get-29)
compound:prt(get-29, away-30)
case(tune-33, from-31)
det(tune-33, the-32)
nmod:from(get-29, tune-33)
mark(play-36, that-34)
nsubj(play-36, they-35)
ccomp(get-29, play-36)
case(rag-42, To-37)
det(bloomin-39, the-38)
nmod:poss(rag-42, bloomin-39)
case(bloomin-39, '-40)
amod(rag-42, old-41)
nmod:to(play-36, rag-42)
case(ead-45, over-43)
nmod:over(play-36, ead-45)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Poor))
    (VP (VBZ beggars))
    (. !)))

nsubj(beggars-3, Poor-2)
root(ROOT-0, beggars-3)

(ROOT
  (PRN (: --)
    (S
      (NP (PRP it))
      (VP (VBZ 's) (`` `)
        (VP (VB ot)
          (PRT (RP over))
          (NP (`` `) (NN ead) (NNS !) (-RRB- -RRB-)))))))

nsubj(ot-5, it-2)
aux(ot-5, 's-3)
root(ROOT-0, ot-5)
compound:prt(ot-5, over-6)
compound(!-9, ead-8)
dobj(ot-5, !-9)

(ROOT
  (S
    (ADVP (RB Then))
    (`` `)
    (NP (NN ere))
    (VP (VBZ 's)
      (PP (TO to)
        (NP
          (NP (DT the) (NNS sons) (NN o))
          ('' ')
          (SBAR
            (S
              (NP
                (NP (DT the) (NNP Widow))
                (, ,)
                (NP (NNP Wherever))
                (, ,))
              (`` `)
              (VP (VBP owever)
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBP roam))))))))))
    (. .)))

advmod(o-8, Then-1)
nsubj(o-8, ere-3)
cop(o-8, 's-4)
case(o-8, to-5)
det(o-8, the-6)
compound(o-8, sons-7)
root(ROOT-0, o-8)
det(Widow-11, the-10)
nsubj(owever-16, Widow-11)
appos(Widow-11, Wherever-13)
acl:relcl(o-8, owever-16)
nsubj(roam-18, they-17)
ccomp(owever-16, roam-18)

(ROOT
  (S (`` `)
    (NP (NNP Ere))
    (VP (VBZ 's)
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP desire) (, ,)
              (NP (DT an))
              ('' ')))))
      (SBAR (IN if)
        (S
          (NP (PRP they))
          (VP (VBP require)
            (NP
              (NP (DT A) (JJ speedy) (NN return))
              (TO to)
              (NP (PRP$ their) (`` `) (NN ome)))))))
    (. .)))

nsubj(all-4, Ere-2)
cop(all-4, 's-3)
root(ROOT-0, all-4)
nsubj(desire-6, they-5)
acl:relcl(all-4, desire-6)
dobj(desire-6, an-8)
mark(require-12, if-10)
nsubj(require-12, they-11)
advcl(all-4, require-12)
det(return-15, A-13)
amod(return-15, speedy-14)
dobj(require-12, return-15)
dep(return-15, to-16)
nmod:poss(ome-19, their-17)
dep(return-15, ome-19)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Poor))
    (VP (VBZ beggars))
    (. !)))

nsubj(beggars-3, Poor-2)
root(ROOT-0, beggars-3)

(ROOT
  (PRN (: --)
    (S
      (NP (PRP they))
      (VP (MD 'll)
        (ADVP (RB never))
        (VP (VB see)
          (NP (`` `) (NN ome) (NNS !) (-RRB- -RRB-)))))))

nsubj(see-5, they-2)
aux(see-5, 'll-3)
neg(see-5, never-4)
root(ROOT-0, see-5)
compound(!-8, ome-7)
dobj(see-5, !-8)

(ROOT
  (S
    (NP (NNS BELTS))
    (ADVP (RB There))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN row))
        (PP (IN in)
          (NP
            (NP
              (NP (NNP Silver) (NNP Street))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (ADJP (JJ near)
                      (PP (TO to)
                        (NP (NNP Dublin) (NNP Quay))))
                    (, ,)
                    (PP (IN Between)
                      (NP
                        (NP (DT an) (JJ Irish) (NN regiment))
                        (, an) ('' ')
                        (NP
                          (NP (JJ English) (NN cavalree))
                          (: ;)
                          (S
                            (NP (PRP It))
                            (VP (VBD started)
                              (PP (IN at)
                                (NP (NNP Revelly))))))
                        (, an) ('' ')
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBD lasted)
                              (PRT (RP on))
                              (PP (IN till)
                                (NP (NN dark))))))))))))
            (: :)
            (NP
              (NP (DT The) (JJ first) (NN man))
              (VP (VBN dropped)
                (PP (IN at)
                  (NP (NNP Harrison) (POS 's)))))
            (, ,)
            (NP
              (NP (DT the) (JJ last) (NN forninst))
              (NP (DT the) (NNP Park)))))))
    (. .)))

nsubj(row-5, BELTS-1)
advmod(row-5, There-2)
cop(row-5, was-3)
det(row-5, a-4)
root(ROOT-0, row-5)
case(Street-8, in-6)
compound(Street-8, Silver-7)
nmod:in(row-5, Street-8)
nsubj(Quay-14, Street-8)
ref(Street-8, that-9)
cop(Quay-14, 's-10)
case(Quay-14, near-11)
mwe(near-11, to-12)
compound(Quay-14, Dublin-13)
acl:relcl(Street-8, Quay-14)
case(regiment-19, Between-16)
det(regiment-19, an-17)
amod(regiment-19, Irish-18)
nmod:between(Quay-14, regiment-19)
amod(cavalree-23, English-22)
dep(regiment-19, cavalree-23)
nsubj(started-26, It-25)
dep(cavalree-23, started-26)
case(Revelly-28, at-27)
nmod:at(started-26, Revelly-28)
nsubj(lasted-32, it-31)
acl:relcl(regiment-19, lasted-32)
compound:prt(lasted-32, on-33)
case(dark-35, till-34)
nmod:till(lasted-32, dark-35)
det(man-39, The-37)
amod(man-39, first-38)
dep(Street-8, man-39)
acl(man-39, dropped-40)
case(Harrison-42, at-41)
nmod:'s(dropped-40, Harrison-42)
case(Harrison-42, 's-43)
det(forninst-47, the-45)
amod(forninst-47, last-46)
appos(Street-8, forninst-47)
det(Park-49, the-48)
dep(forninst-47, Park-49)

(ROOT
  (S
    (S (IN For)
      (NP (PRP it))
      (VP (VBD was)))
    (: :) (: --) (`` ``)
    (S
      (NP
        (NP (NNP Belts))
        (PRN (, ,)
          (NP
            (NP (NNS belts))
            (, ,)
            (NP (NNS belts)))
          (, ,))
        (, an) ('' '))
      (NP (DT that))
      (VP (VBZ 's)
        (NP
          (NP (CD one))
          (PP (IN for)
            (NP (PRP you))))))
    (. !) ('' '')))

dep(was-3, For-1)
nsubj(was-3, it-2)
root(ROOT-0, was-3)
nsubj(one-17, Belts-7)
dep(Belts-7, belts-9)
appos(belts-9, belts-11)
nsubj(one-17, that-15)
cop(one-17, 's-16)
parataxis(was-3, one-17)
case(you-19, for-18)
nmod:for(one-17, you-19)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP it))
    (VP (VBD was)
      (NP (`` ``)
        (NP
          (NP (NNP Belts))
          (, ,)
          (NP
            (NP (NNS belts))
            (, ,)
            (NP (NNS belts)))
          (, ,))
        (, an) ('' ')
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (VP (VBN done)
                (PP (IN for)
                  (NP (PRP you)))))))))
    (. !) ('' '')))

dep(Belts-6, An-1)
case(An-1, '-2)
nsubj(Belts-6, it-3)
cop(Belts-6, was-4)
root(ROOT-0, Belts-6)
nsubjpass(done-16, Belts-6)
appos(Belts-6, belts-8)
appos(belts-8, belts-10)
ref(Belts-6, that-14)
auxpass(done-16, 's-15)
acl:relcl(Belts-6, done-16)
case(you-18, for-17)
nmod:for(done-16, you-18)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP O))
        (ADJP (RB buckle) (DT an))
        (POS '))
      (NN tongue))
    (VP (VBD Was)
      (NP (DT the) (NN song))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBN sung)
            (PP (IN From)
              (NP (NNP Harrison) (POS 's)))
            (ADVP (RB down)
              (PP (TO to)
                (NP (DT the) (NNP Park))))))))
    (. !)))

nmod:poss(tongue-5, O-1)
advmod(an-3, buckle-2)
amod(O-1, an-3)
case(O-1, '-4)
nsubj(song-8, tongue-5)
cop(song-8, Was-6)
det(song-8, the-7)
root(ROOT-0, song-8)
mark(sung-11, that-9)
nsubj(sung-11, we-10)
ccomp(song-8, sung-11)
case(Harrison-13, From-12)
nmod:'s(sung-11, Harrison-13)
case(Harrison-13, 's-14)
advmod(sung-11, down-15)
case(Park-18, to-16)
det(Park-18, the-17)
nmod:to(down-15, Park-18)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP
          (NP
            (NP (DT a) (NN row))
            (PP (IN in)
              (NP (NNP Silver) (NNP Street))))
          (: --)
          (S
            (NP (DT the) (NNS regiments))
            (VP (VBD was)
              (ADJP (RP out))
              (PRN (, ,)
                (S
                  (NP (PRP They))
                  (VP (VBD called)
                    (S
                      (NP (PRP us))
                      (`` ``)
                      (NP (NNP Delhi) (NNP Rebels))
                      ('' ''))))
                (, ,)))))
        (, an) ('' ')
        (NP
          (NP (PRP we))
          (VP (VBN answered)
            (S (`` ``)
              (NP (NNP Threes)))
            (ADVP (RB about))))))
    (. !) ('' '')))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(row-4, a-3)
nsubj(was-2, row-4)
case(Street-7, in-5)
compound(Street-7, Silver-6)
nmod:in(row-4, Street-7)
det(regiments-10, the-9)
nsubj(out-12, regiments-10)
cop(out-12, was-11)
parataxis(row-4, out-12)
nsubj(called-15, They-14)
parataxis(out-12, called-15)
dep(Rebels-19, us-16)
compound(Rebels-19, Delhi-18)
xcomp(called-15, Rebels-19)
dep(row-4, we-24)
acl(we-24, answered-25)
xcomp(answered-25, Threes-27)
advmod(answered-25, about-28)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD drew)
      (NP (PRP them))
      (PP (IN like)
        (NP
          (NP (DT a) (NN hornet) (POS 's))
          (NN nest)))
      (PRN (: --)
        (S
          (NP (PRP we))
          (VP (VBD met)
            (NP (PRP them)))))
      (NP
        (NP (JJ good))
        (, an) ('' ')
        (NP
          (NP (JJ large))
          (, ,)
          (NP
            (NP (DT The) (NNP English))
            (PP (IN at)
              (NP (DT the) (JJ double) (DT an)))))
        ('' ')
        (NP
          (NP (DT the) (JJ Irish))
          (PP (IN at)
            (NP (DT the) (NN charge))))))
    (. .)))

nsubj(drew-2, That-1)
root(ROOT-0, drew-2)
dobj(drew-2, them-3)
case(nest-8, like-4)
det(hornet-6, a-5)
nmod:poss(nest-8, hornet-6)
case(hornet-6, 's-7)
nmod:like(drew-2, nest-8)
nsubj(met-11, we-10)
parataxis(drew-2, met-11)
dobj(met-11, them-12)
dobj(drew-2, good-13)
dep(good-13, large-16)
det(English-19, The-18)
appos(large-16, English-19)
case(double-22, at-20)
det(double-22, the-21)
nmod:at(English-19, double-22)
dep(double-22, an-23)
det(Irish-26, the-25)
dep(good-13, Irish-26)
case(charge-29, at-27)
det(charge-29, the-28)
nmod:at(Irish-26, charge-29)

(ROOT
  (S (RB Then)
    (S
      (NP (PRP it))
      (VP (VBD was)))
    (: :) (: --) (`` ``)
    (S
      (NP
        (NP
          (NP (NNP Belts))
          (: ...)
          (S
            (S
              (NP (EX There))
              (VP (VBD was)
                (NP
                  (NP (DT a) (NN row))
                  (PP (IN in)
                    (NP
                      (NP (NNP Silver) (NNP Street))
                      (: --)
                      (NP (DT an))
                      ('' ')))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBD was)
                        (PP (IN in)
                          (NP (PRP it)))
                        (ADVP (RB too))))))))
            (: ;)
            (S
              (NP (PRP We))
              (VP (VBD passed)
                (NP
                  (NP (DT the) (NN time) (NN o) (POS '))
                  (NN day)))
              (, ,))))
        (, an) ('' ')
        (NP (RB then) (DT the) (NNS belts)))
      (VP (VBD went)
        (ADJP (JJ whirraru))))
    (. !)))

advmod(was-3, Then-1)
nsubj(was-3, it-2)
root(ROOT-0, was-3)
nsubj(went-38, Belts-7)
expl(was-10, There-9)
parataxis(Belts-7, was-10)
det(row-12, a-11)
nsubj(was-10, row-12)
case(Street-15, in-13)
compound(Street-15, Silver-14)
nmod:in(row-12, Street-15)
dep(Street-15, an-17)
nsubj(it-22, I-19)
cop(it-22, was-20)
case(it-22, in-21)
acl:relcl(row-12, it-22)
advmod(it-22, too-23)
nsubj(passed-26, We-25)
parataxis(was-10, passed-26)
det(o-29, the-27)
compound(o-29, time-28)
nmod:poss(day-31, o-29)
case(o-29, '-30)
nmod:tmod(passed-26, day-31)
advmod(belts-37, then-35)
det(belts-37, the-36)
dep(Belts-7, belts-37)
parataxis(was-3, went-38)
xcomp(went-38, whirraru-39)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP misremember)
      (SBAR
        (WHNP (WP what))
        (S
          (VP
            (VP (VBD occurred))
            (, ,)
            (CC but)
            (VP (VBD subsequint)
              (NP (DT the) (NN storm))
              (SBAR
                (S
                  (NP
                    (NP (DT A) (NNP _) (NNP Freeman) (POS 's))
                    (NNP Journal) (NNP Supplemint) (NNP _))
                  (VP (VBD was) (RB all)
                    (NP (PRP$ my) (NN uniform))))))))))
    (. .)))

nsubj(misremember-2, I-1)
root(ROOT-0, misremember-2)
nsubj(occurred-4, what-3)
nsubj(subsequint-7, what-3)
ccomp(misremember-2, occurred-4)
cc(occurred-4, but-6)
ccomp(misremember-2, subsequint-7)
conj:but(occurred-4, subsequint-7)
det(storm-9, the-8)
dobj(subsequint-7, storm-9)
det(Freeman-12, A-10)
compound(Freeman-12, _-11)
nmod:poss(_-16, Freeman-12)
case(Freeman-12, 's-13)
compound(_-16, Journal-14)
compound(_-16, Supplemint-15)
nsubj(uniform-20, _-16)
cop(uniform-20, was-17)
advmod(uniform-20, all-18)
nmod:poss(uniform-20, my-19)
dep(subsequint-7, uniform-20)

(ROOT
  (S
    (ADVP (RB O))
    (NP (PRP it))
    (VP (VBD was) (: :)
      (S (: --)
        (S
          (S
            (VP (`` ``) (VB Belts)
              (S (: ...)
                (S
                  (NP (EX There))
                  (VP (VBD was)
                    (NP
                      (NP (DT a) (NN row))
                      (PP (IN in)
                        (NP (NNP Silver) (NNP Street))))))
                (: --)
                (S
                  (NP (PRP they))
                  (VP (VBD sent)
                    (NP (DT the) (NNPS Polis))
                    (ADVP (RB there)))))))
          (PRN (, ,)
            (S
              (NP (DT The) (NNP English))
              (VP (VBD were)
                (ADJP (RB too) (JJ drunk)
                  (S
                    (VP (TO to)
                      (VP (VB know)))))))
            (, ,))
          (NP (DT the) (JJ Irish))
          (VP (VBD did) (RB n't)
            (VP (VB care))))
        (: ;)
        (CC But)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (VBD grew)
                (NP (NN impertinint)))))
          (NP (PRP we))
          (ADVP (RB simultaneous))
          (VP (VBD rose) (, ,)
            (PP (IN Till)
              (NP
                (NP (DT half) (NN o))
                ('' ')
                (SBAR
                  (S
                    (NP (PRP them))
                    (VP (VBD was)
                      (NP (NNP Liffey) (NN mud)))))
                (, an) ('' ')
                (SBAR
                  (S
                    (NP (DT half))
                    (VP (VBD was)
                      (VP (VBN tatthered)
                        (NP (NNS clo'es))))))))))))
    (. .)))

advmod(was-3, O-1)
nsubj(was-3, it-2)
root(ROOT-0, was-3)
dep(care-35, Belts-7)
expl(was-10, There-9)
xcomp(Belts-7, was-10)
det(row-12, a-11)
nsubj(was-10, row-12)
case(Street-15, in-13)
compound(Street-15, Silver-14)
nmod:in(row-12, Street-15)
nsubj(sent-18, they-17)
parataxis(was-10, sent-18)
det(Polis-20, the-19)
dobj(sent-18, Polis-20)
advmod(sent-18, there-21)
det(English-24, The-23)
nsubj(drunk-27, English-24)
nsubj:xsubj(know-29, English-24)
cop(drunk-27, were-25)
advmod(drunk-27, too-26)
parataxis(care-35, drunk-27)
mark(know-29, to-28)
xcomp(drunk-27, know-29)
det(Irish-32, the-31)
nsubj(care-35, Irish-32)
aux(care-35, did-33)
neg(care-35, n't-34)
parataxis(was-3, care-35)
cc(care-35, But-37)
advmod(grew-40, when-38)
nsubj(grew-40, they-39)
advcl(rose-44, grew-40)
dobj(grew-40, impertinint-41)
nsubj(rose-44, we-42)
advmod(rose-44, simultaneous-43)
parataxis(was-3, rose-44)
conj:but(care-35, rose-44)
case(o-48, Till-46)
det(o-48, half-47)
nmod:till(rose-44, o-48)
nsubj(mud-53, them-50)
cop(mud-53, was-51)
compound(mud-53, Liffey-52)
acl:relcl(o-48, mud-53)
nsubjpass(tatthered-58, half-56)
auxpass(tatthered-58, was-57)
acl:relcl(o-48, tatthered-58)
dobj(tatthered-58, clo'es-59)

(ROOT
  (S
    (S (IN For)
      (NP (PRP it))
      (VP (VBD was)))
    (: :) (: --) (`` ``)
    (S
      (NP
        (NP
          (NP (NNP Belts))
          (: ...)
          (S
            (S
              (NP (EX There))
              (VP (VBD was)
                (NP
                  (NP (DT a) (NN row))
                  (PP (IN in)
                    (NP (NNP Silver) (NNP Street))))))
            (: --)
            (S
              (NP (PRP it))
              (VP (MD might)
                (VP (VB ha)
                  (S
                    (S
                      (NP (POS '))
                      (VP (VBN raged)
                        (PP (IN till)
                          (NP (RB now)))))
                    (, ,)
                    (CC But)
                    (S
                      (NP (DT some) (NN one))
                      (VP (VBD drew)
                        (S
                          (NP (PRP$ his) (NN side-arm))
                          (ADJP (JJ clear)))))
                    (, ,)))))))
        (, an) ('' ')
        (NP (NN nobody)))
      (VP (VBD knew)
        (NP (WRB how))))
    (: ;)
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (NP
          (NP (NNP Hogan))
          (SBAR
            (S
              (VP (VBD took)
                (NP
                  (NP (DT the) (NN point))
                  (, an) ('' ')
                  (VP (VBN dropped)))))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBD saw)
        (NP
          (NP (DT the) (JJ red) (NN blood) (NN run))
          (: :)
          (NP (NNP An))
          ('' '))
        (SBAR (IN so)
          (S
            (NP (PRP we))
            (ADVP (DT all))
            (VP (VBD was)
              (NP
                (NP (NNS murderers))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD started)
                      (PRT (RP out))
                      (PP (IN in)
                        (NP (NN fun))))))))))))
    (. .)))

dep(was-3, For-1)
nsubj(was-3, it-2)
root(ROOT-0, was-3)
nsubj(knew-36, Belts-7)
expl(was-10, There-9)
parataxis(Belts-7, was-10)
det(row-12, a-11)
nsubj(was-10, row-12)
case(Street-15, in-13)
compound(Street-15, Silver-14)
nmod:in(row-12, Street-15)
nsubj(ha-19, it-17)
aux(ha-19, might-18)
parataxis(was-10, ha-19)
nsubj(raged-21, '-20)
xcomp(ha-19, raged-21)
case(now-23, till-22)
nmod:till(raged-21, now-23)
cc(raged-21, But-25)
det(one-27, some-26)
nsubj(drew-28, one-27)
xcomp(ha-19, drew-28)
conj:but(raged-21, drew-28)
nmod:poss(side-arm-30, his-29)
nsubj(clear-31, side-arm-30)
xcomp(drew-28, clear-31)
dep(Belts-7, nobody-35)
dep(was-3, knew-36)
dobj(knew-36, how-37)
nsubj(Hogan-41, 'T-39)
cop(Hogan-41, was-40)
parataxis(was-3, Hogan-41)
acl:relcl(Hogan-41, took-42)
det(point-44, the-43)
dobj(took-42, point-44)
acl(point-44, dropped-47)
nsubj(saw-50, we-49)
parataxis(was-3, saw-50)
det(run-54, the-51)
amod(run-54, red-52)
compound(run-54, blood-53)
dobj(saw-50, run-54)
dep(run-54, An-56)
mark(murderers-62, so-58)
nsubj(murderers-62, we-59)
advmod(murderers-62, all-60)
cop(murderers-62, was-61)
advcl(saw-50, murderers-62)
nsubj(started-64, murderers-62)
ref(murderers-62, that-63)
acl:relcl(murderers-62, started-64)
compound:prt(started-64, out-65)
case(fun-67, in-66)
nmod:in(started-64, fun-67)

(ROOT
  (S
    (S
      (SBAR (IN While)
        (S
          (NP (PRP it))
          (VP (VBD was) (: :)
            (S (: --)
              (S
                (NP
                  (NP (`` ``) (NNS Belts))
                  (: ...)
                  (NP (EX There)))
                (VP (VBD was)
                  (NP
                    (NP (DT a) (NN row))
                    (PP (IN in)
                      (NP (NNP Silver) (NNP Street))))))
              (: --)
              (CC but)
              (S
                (NP (DT that))
                (VP (VBD put)
                  (PRT (RP down))
                  (NP (DT the) (NN shine))))))))
      (, ,)
      (VP (VB Wid)
        (NP (DT each) (NN man) (NN whisperin))
        ('' ')
        (PP (TO to)
          (NP (PRP$ his) (JJ next)))))
    (: :) ('' '')
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (ADVP (RB never))
        (NP
          (NP (NN work) (NN o) (POS '))
          (NN mine))))
    (. !) ('' '')))

mark(was-3, While-1)
nsubj(was-3, it-2)
advcl(Wid-24, was-3)
expl(was-10, Belts-7)
dep(Belts-7, There-9)
parataxis(was-3, was-10)
det(row-12, a-11)
dep(was-10, row-12)
case(Street-15, in-13)
compound(Street-15, Silver-14)
nmod:in(row-12, Street-15)
cc(was-10, but-17)
nsubj(put-19, that-18)
parataxis(was-3, put-19)
conj:but(was-10, put-19)
compound:prt(put-19, down-20)
det(shine-22, the-21)
dobj(put-19, shine-22)
root(ROOT-0, Wid-24)
det(whisperin-27, each-25)
compound(whisperin-27, man-26)
dobj(Wid-24, whisperin-27)
case(next-31, to-29)
nmod:poss(next-31, his-30)
nmod:to(Wid-24, next-31)
nsubj(mine-40, 'T-34)
cop(mine-40, was-35)
neg(mine-40, never-36)
compound(o-38, work-37)
nmod:poss(mine-40, o-38)
case(o-38, '-39)
parataxis(Wid-24, mine-40)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD went)
      (ADVP (RB away)
        (PP (IN like)
          (NP
            (NP (JJ beaten) (NNS dogs))
            (, ,)
            (NP (DT an)))))
      ('' ')
      (PP (IN down)
        (NP
          (NP (DT the) (NN street))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD bore)
                (SBAR
                  (S
                    (NP (PRP him))
                    (, ,)
                    (NP
                      (NP (DT The) (JJ poor) (JJ dumb) (NN corpse))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD could) (RB n't)
                            (VP (VB tell)
                              (NP (DT the) (NNS bhoys)))))))
                    (VP (VBD were)
                      (ADJP (JJ sorry)
                        (PP (IN for)
                          (NP (PRP him)))))))))))))
    (. .)))

nsubj(went-2, We-1)
root(ROOT-0, went-2)
advmod(went-2, away-3)
case(dogs-6, like-4)
amod(dogs-6, beaten-5)
nmod:like(away-3, dogs-6)
appos(dogs-6, an-8)
case(street-12, down-10)
det(street-12, the-11)
nmod:down(went-2, street-12)
nsubj(bore-14, we-13)
acl:relcl(street-12, bore-14)
nsubj(sorry-28, him-15)
det(corpse-20, The-17)
amod(corpse-20, poor-18)
amod(corpse-20, dumb-19)
nsubj(tell-24, corpse-20)
nsubj(sorry-28, corpse-20)
ref(corpse-20, that-21)
aux(tell-24, could-22)
neg(tell-24, n't-23)
acl:relcl(corpse-20, tell-24)
det(bhoys-26, the-25)
dobj(tell-24, bhoys-26)
cop(sorry-28, were-27)
ccomp(bore-14, sorry-28)
case(him-30, for-29)
nmod:for(sorry-28, him-30)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP it))
        (VP (VBD was) (: :)
          (S (: --)
            (S (`` ``)
              (S
                (VP (VB Belts)
                  (S (: ...)
                    (S
                      (NP (EX There))
                      (VP (VBD was)
                        (NP
                          (NP
                            (NP (DT a) (NN row))
                            (PP (IN in)
                              (NP (NNP Silver) (NNP Street))))
                          (: --)
                          (S
                            (S
                              (NP (PRP it))
                              (VP (VBZ is) (RB n't)
                                (ADJP (RP over))
                                (ADVP (RB yet))))
                            (, ,) (IN For)
                            (S
                              (NP
                                (NP (NN half))
                                (PP (IN of)
                                  (NP (PRP us))))
                              (VP (VBP are)
                                (PP (IN under)
                                  (NP (NN guard) (NN wid) (NNS punishments)))
                                (S
                                  (VP (TO to)
                                    (VP (VB get))))))))))
                    (: ;)
                    (S
                      (NP (PRP 'T))
                      (VP (VBZ is)
                        (NP (PDT all) (DT a) (NN merricle))
                        (PP (TO to)
                          (NP (PRP me)))
                        (PP (IN as)
                          (PP (IN in)
                            (NP (DT the) (NNP Clink)))))))))
              (NP (PRP I))
              (VP (VBP lie)))
            (: :)
            (S
              (NP (EX There))
              (VP (VBD was)
                (NP
                  (NP (DT a) (NN row))
                  (PP (IN in)
                    (NP
                      (NP (NNP Silver) (NNP Street))
                      (: --)
                      (VP (VBN begod)))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP wonder)
      (VP
        (FRAG
          (WHADVP (WRB why)))))
    (. !)))

advmod(was-3, When-1)
nsubj(was-3, it-2)
advcl(wonder-60, was-3)
dep(lie-47, Belts-7)
expl(was-10, There-9)
xcomp(Belts-7, was-10)
det(row-12, a-11)
nsubj(was-10, row-12)
case(Street-15, in-13)
compound(Street-15, Silver-14)
nmod:in(row-12, Street-15)
nsubj(over-20, it-17)
cop(over-20, is-18)
neg(over-20, n't-19)
parataxis(row-12, over-20)
advmod(over-20, yet-21)
dep(over-20, For-23)
nsubj(punishments-31, half-24)
nsubj:xsubj(get-33, half-24)
case(us-26, of-25)
nmod:of(half-24, us-26)
cop(punishments-31, are-27)
case(punishments-31, under-28)
compound(punishments-31, guard-29)
compound(punishments-31, wid-30)
parataxis(over-20, punishments-31)
mark(get-33, to-32)
xcomp(punishments-31, get-33)
nsubj(merricle-39, 'T-35)
cop(merricle-39, is-36)
det:predet(merricle-39, all-37)
det(merricle-39, a-38)
parataxis(was-10, merricle-39)
case(me-41, to-40)
nmod:to(merricle-39, me-41)
case(Clink-45, as-42)
case(Clink-45, in-43)
det(Clink-45, the-44)
nmod:in(merricle-39, Clink-45)
nsubj(lie-47, I-46)
parataxis(was-3, lie-47)
expl(was-50, There-49)
parataxis(lie-47, was-50)
det(row-52, a-51)
nsubj(was-50, row-52)
case(Street-55, in-53)
compound(Street-55, Silver-54)
nmod:in(row-52, Street-55)
acl(Street-55, begod-57)
nsubj(wonder-60, I-59)
root(ROOT-0, wonder-60)
dep(wonder-60, why-61)

(ROOT
  (S
    (S (CC But)
      (NP (PRP it))
      (VP (VBD was)))
    (: :) (: --) (`` ``)
    (S
      (NP
        (NP (NNP Belts))
        (PRN (, ,)
          (NP
            (NP (NNS belts))
            (, ,)
            (NP (NNS belts)))
          (, ,))
        (, an) ('' '))
      (NP (DT that))
      (VP (VBZ 's)
        (NP
          (NP (CD one))
          (PP (IN for)
            (NP (PRP you))))))
    (. !) ('' '')))

cc(was-3, But-1)
nsubj(was-3, it-2)
root(ROOT-0, was-3)
nsubj(one-17, Belts-7)
dep(Belts-7, belts-9)
appos(belts-9, belts-11)
nsubj(one-17, that-15)
cop(one-17, 's-16)
parataxis(was-3, one-17)
case(you-19, for-18)
nmod:for(one-17, you-19)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP it))
    (VP (VBD was)
      (NP (`` ``)
        (NP
          (NP (NNP Belts))
          (, ,)
          (NP
            (NP (NNS belts))
            (, ,)
            (NP (NNS belts)))
          (, ,))
        (, an) ('' ')
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (VP (VBN done)
                (PP (IN for)
                  (NP (PRP you)))))))))
    (. !) ('' '')))

dep(Belts-6, An-1)
case(An-1, '-2)
nsubj(Belts-6, it-3)
cop(Belts-6, was-4)
root(ROOT-0, Belts-6)
nsubjpass(done-16, Belts-6)
appos(Belts-6, belts-8)
appos(belts-8, belts-10)
ref(Belts-6, that-14)
auxpass(done-16, 's-15)
acl:relcl(Belts-6, done-16)
case(you-18, for-17)
nmod:for(done-16, you-18)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP O))
        (ADJP (RB buckle) (DT an))
        (POS '))
      (NN tongue))
    (VP (VBD Was)
      (NP (DT the) (NN song))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBN sung)
            (PP (IN From)
              (NP (NNP Harrison) (POS 's)))
            (ADVP (RB down)
              (PP (TO to)
                (NP (DT the) (NNP Park))))))))
    (. !)))

nmod:poss(tongue-5, O-1)
advmod(an-3, buckle-2)
amod(O-1, an-3)
case(O-1, '-4)
nsubj(song-8, tongue-5)
cop(song-8, Was-6)
det(song-8, the-7)
root(ROOT-0, song-8)
mark(sung-11, that-9)
nsubj(sung-11, we-10)
ccomp(song-8, sung-11)
case(Harrison-13, From-12)
nmod:'s(sung-11, Harrison-13)
case(Harrison-13, 's-14)
advmod(sung-11, down-15)
case(Park-18, to-16)
det(Park-18, the-17)
nmod:to(down-15, Park-18)

(ROOT
  (S
    (NP
      (NP (DT THE) (NNP YOUNG) (JJ BRITISH) (NN SOLDIER))
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (DT the) (`` `) (JJ arf-made) (NN recruity))
          (VP (VBZ goes)
            (PRT (RP out))
            (PP (TO to)
              (NP
                (NP
                  (NP
                    (NP (DT the) (NNP East) (POS '))
                    (NN E) (NNS acts))
                  (PP (IN like)
                    (NP (DT a) (NN babe)))
                  (, an) ('' '))
                ('' ')
                (VP (VBG e)
                  (NP (NNS drinks))
                  (PP (IN like)
                    (NP
                      (NP (DT a) (NN beast))
                      (, ,)
                      (NP
                        (NP (NNP An) (POS '))
                        ('' ') (NN e)))))))))))
    (VP (VBZ wonders)
      (SBAR (IN because)
        (S
          (S
            (NP (POS '))
            (X
              (X (SYM e))
              (NP
                (SQ (VBZ is)
                  (NP (JJ frequent) (NN deceased)))
                (VP (VB Ere) (`` `)
                  (NP (NNS e))))))
          (VP (VBZ 's)
            (ADJP (JJ fit)
              (PP (IN for)))
            (S
              (VP (TO to)
                (VP (VB serve)
                  (PP (IN as)
                    (NP (DT a) (NN soldier))))))))))
    (. .)))

det(SOLDIER-4, THE-1)
compound(SOLDIER-4, YOUNG-2)
amod(SOLDIER-4, BRITISH-3)
nsubj(wonders-34, SOLDIER-4)
advmod(goes-10, When-5)
det(recruity-9, the-6)
amod(recruity-9, arf-made-8)
nsubj(goes-10, recruity-9)
acl:relcl(SOLDIER-4, goes-10)
compound:prt(goes-10, out-11)
case(acts-17, to-12)
det(East-14, the-13)
nmod:poss(acts-17, East-14)
case(East-14, '-15)
compound(acts-17, E-16)
nmod:to(goes-10, acts-17)
case(babe-20, like-18)
det(babe-20, a-19)
nmod:like(acts-17, babe-20)
acl(acts-17, e-24)
dobj(e-24, drinks-25)
case(beast-28, like-26)
det(beast-28, a-27)
nmod:like(e-24, beast-28)
nmod:poss(e-33, An-30)
case(An-30, '-31)
appos(beast-28, e-33)
root(ROOT-0, wonders-34)
mark(fit-45, because-35)
csubj(fit-45, '-36)
dep(is-38, e-37)
dep('-36, is-38)
amod(deceased-40, frequent-39)
nsubj(is-38, deceased-40)
dep(is-38, Ere-41)
dobj(Ere-41, e-43)
cop(fit-45, 's-44)
advcl(wonders-34, fit-45)
nmod(fit-45, for-46)
mark(serve-48, to-47)
xcomp(fit-45, serve-48)
case(soldier-51, as-49)
det(soldier-51, a-50)
nmod:as(serve-48, soldier-51)

(ROOT
  (SQ
    (VP
      (VP (VB Serve))
      (, ,)
      (VP (VB serve))
      (, ,)
      (VP (VB serve)
        (PP (IN as)
          (NP
            (NP (DT a) (NN soldier))
            (, ,)
            (NP (NNP Serve)))))
      (, ,)
      (VP (VB serve))
      (, ,)
      (VP (VB serve)
        (PP (IN as)
          (NP
            (NP (DT a) (NN soldier))
            (, ,)
            (NP (NNP Serve)))))
      (, ,)
      (VP (VB serve))
      (, ,)
      (VP (VB serve)
        (PP (IN as)
          (NP (DT a) (NN soldier))))
      (, ,)
      (NP
        (NP (NNP So-oldier) (NNP _))
        (PP (IN OF)
          (S
            (VP (VBG _)
              (NP (DT the) (NN Queen)))))))
    (. !)))

root(ROOT-0, Serve-1)
dep(Serve-1, serve-3)
dep(Serve-1, serve-5)
case(soldier-8, as-6)
det(soldier-8, a-7)
nmod:as(serve-5, soldier-8)
appos(soldier-8, Serve-10)
dep(Serve-1, serve-12)
dep(Serve-1, serve-14)
case(soldier-17, as-15)
det(soldier-17, a-16)
nmod:as(serve-14, soldier-17)
appos(soldier-17, Serve-19)
dep(Serve-1, serve-21)
dep(Serve-1, serve-23)
case(soldier-26, as-24)
det(soldier-26, a-25)
nmod:as(serve-23, soldier-26)
compound(_-29, So-oldier-28)
dobj(Serve-1, _-29)
mark(_-31, OF-30)
acl(_-29, _-31)
det(Queen-33, the-32)
dobj(_-31, Queen-33)

(ROOT
  (S
    (S
      (ADVP (RB Now) (RB all))
      (NP (PRP you))
      (VP (VBZ recruities)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ 's)
              (VP (VBN drafted)
                (ADVP (RB to-day))))))))
    (, ,)
    (NP (PRP You))
    (VP (VBD shut)
      (PRT (RP up))
      (NP
        (NP (PRP$ your) (NN rag-box))
        (, an) ('' ')
        (PRN
          (S
            (NP (`` `)
              (NP (NN ark))
              (TO to)
              (NP (PRP$ my) (NN lay))
              (, ,)
              (NP
                (NP (NNP An) (POS '))
                (NN I)))
            (VP (MD 'll)
              (VP (VB sing)
                (NP (PRP you))
                (ADVP
                  (NP (DT a) (NN soldier))
                  (RB as) (RB far))
                (SBAR (IN as)
                  (S
                    (NP (PRP I))
                    (VP (MD may))))))))
        (: :)
        (NP
          (NP (DT A) (NN soldier))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ 's)
                (VP (VBN fit)
                  (PP (IN for)
                    (NP (DT a) (NN soldier))))))))))
    (. .)))

advmod(all-2, Now-1)
advmod(recruities-4, all-2)
nsubj(recruities-4, you-3)
ccomp(shut-11, recruities-4)
nsubjpass(drafted-7, what-5)
auxpass(drafted-7, 's-6)
ccomp(recruities-4, drafted-7)
advmod(drafted-7, to-day-8)
nsubj(shut-11, You-10)
root(ROOT-0, shut-11)
compound:prt(shut-11, up-12)
nmod:poss(rag-box-14, your-13)
dobj(shut-11, rag-box-14)
nsubj(sing-27, ark-18)
dep(ark-18, to-19)
nmod:poss(lay-21, my-20)
dep(ark-18, lay-21)
nmod:poss(I-25, An-23)
case(An-23, '-24)
appos(ark-18, I-25)
aux(sing-27, 'll-26)
dep(rag-box-14, sing-27)
dobj(sing-27, you-28)
det(soldier-30, a-29)
dep(far-32, soldier-30)
advmod(far-32, as-31)
advmod(sing-27, far-32)
mark(may-35, as-33)
nsubj(may-35, I-34)
advcl(sing-27, may-35)
det(soldier-38, A-37)
dep(rag-box-14, soldier-38)
nsubjpass(fit-41, soldier-38)
ref(soldier-38, what-39)
auxpass(fit-41, 's-40)
acl:relcl(soldier-38, fit-41)
case(soldier-44, for-42)
det(soldier-44, a-43)
nmod:for(fit-41, soldier-44)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Fit))
        (, ,)
        (NP (NN fit))
        (, ,))
      (VP (VBP fit)
        (PP (IN for)
          (NP (DT a) (NN soldier)))))
    (: ...)
    (S
      (NP (NNP First))
      (VP (VB mind)
        (S
          (NP (PRP you))
          (VP (VB steer)
            (SBAR
              (S
                (NP (JJ clear) (NN o) (POS ') (DT the) (NN grog-sellers) ('' ') (NNS huts))
                (, ,)
                (PP (IN For)
                  (S
                    (NP (PRP they))
                    (VP (VB sell)
                      (NP (PRP you))
                      (SBAR
                        (S
                          (NP (NNP Fixed) (NNP Bay))
                          (`` `)
                          (VP (VBZ nets)
                            (SBAR (IN that)
                              (S
                                (VP (VBZ rots)
                                  (PRT (RP out))
                                  (NP
                                    (NP (PRP$ your) (NNS guts))
                                    (: --)
                                    (NP (NNP Ay))))))))))))
                (, ,)
                (VP (VBP drink)
                  (SBAR (IN that)
                    (S (`` `)
                      (S
                        (VP (VB ud)
                          (VP (VB eat)
                            (NP
                              (NP
                                (NP (DT the) (JJ live) (NN steel))
                                (PP (IN from)
                                  (NP (PRP$ your) (NNS butts))))
                              (: --)
                              (NP (NNP An))))))
                      ('' ')
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (ADJP (JJ bad)
                          (PP (IN for)
                            (NP (DT the) (JJ young) (JJ British) (NN soldier))))))))))))))
    (. .)))

nsubj(fit-5, Fit-1)
appos(Fit-1, fit-3)
root(ROOT-0, fit-5)
case(soldier-8, for-6)
det(soldier-8, a-7)
nmod:for(fit-5, soldier-8)
nsubj(mind-11, First-10)
parataxis(fit-5, mind-11)
nsubj(steer-13, you-12)
ccomp(mind-11, steer-13)
amod(huts-20, clear-14)
nmod:poss(huts-20, o-15)
case(huts-20, '-16)
det(huts-20, the-17)
compound(huts-20, grog-sellers-18)
nsubj(drink-38, huts-20)
mark(sell-24, For-22)
nsubj(sell-24, they-23)
advcl(drink-38, sell-24)
dobj(sell-24, you-25)
compound(Bay-27, Fixed-26)
nsubj(nets-29, Bay-27)
dep(sell-24, nets-29)
mark(rots-31, that-30)
ccomp(nets-29, rots-31)
compound:prt(rots-31, out-32)
nmod:poss(guts-34, your-33)
dobj(rots-31, guts-34)
dep(guts-34, Ay-36)
ccomp(steer-13, drink-38)
mark(bad-54, that-39)
ccomp(bad-54, ud-41)
xcomp(ud-41, eat-42)
det(steel-45, the-43)
amod(steel-45, live-44)
dobj(eat-42, steel-45)
case(butts-48, from-46)
nmod:poss(butts-48, your-47)
nmod:from(steel-45, butts-48)
dep(steel-45, An-50)
nsubj(bad-54, it-52)
cop(bad-54, 's-53)
ccomp(drink-38, bad-54)
case(soldier-59, for-55)
det(soldier-59, the-56)
amod(soldier-59, young-57)
amod(soldier-59, British-58)
nmod:for(bad-54, soldier-59)

(ROOT
  (S
    (NP
      (NP
        (ADJP (JJ Bad) (, ,) (JJ bad) (, ,) (JJ bad)))
      (PP (IN for)
        (NP
          (NP (DT the) (NN soldier))
          (: ...)
          (SBAR
            (WHADVP (WRB When))
            (S
              (S
                (NP (DT the) (NN cholera))
                (VP (VBZ comes)
                  (PRN (: --)
                    (SBAR (IN as)
                      (S
                        (NP (PRP it))
                        (VP (MD will)
                          (VP (IN past)
                            (NP (DT a) (NN doubt))))))
                    (: --))
                  (S
                    (VP
                      (VP (VB Keep)
                        (PRT (RP out))
                        (PP (IN of)
                          (NP (DT the) (JJ wet))))
                      (CC and)
                      (VP (VBP do) (RB n't)
                        (VP (VB go)
                          (PP (IN on)
                            (NP (DT the) (NN shout)))))))))
              (, ,) (IN For)
              (S
                (S
                  (NP (DT the) (NN sickness))
                  (VP (VBZ gets)
                    (PRT (RP in))
                    (SBAR (IN as)
                      (S
                        (NP (DT the) (NN liquor))
                        (VP (VBZ dies)
                          (PRT (RP out)))))))
                (, ,)
                (S
                  (NP (NNP An) (POS '))
                  (NP (PRP it)))))))))
    (VP (VBZ crumples)
      (NP (DT the) (JJ young) (JJ British) (NN soldier)))
    (. .)))

amod(bad-5, Bad-1)
amod(bad-5, bad-3)
nsubj(crumples-49, bad-5)
case(soldier-8, for-6)
det(soldier-8, the-7)
nmod:for(bad-5, soldier-8)
advmod(comes-13, When-10)
det(cholera-12, the-11)
nsubj(comes-13, cholera-12)
acl:relcl(soldier-8, comes-13)
mark(doubt-20, as-15)
nsubj(doubt-20, it-16)
aux(doubt-20, will-17)
dep(doubt-20, past-18)
det(doubt-20, a-19)
parataxis(comes-13, doubt-20)
ccomp(comes-13, Keep-22)
compound:prt(Keep-22, out-23)
case(wet-26, of-24)
det(wet-26, the-25)
nmod:of(Keep-22, wet-26)
cc(Keep-22, and-27)
aux(go-30, do-28)
neg(go-30, n't-29)
ccomp(comes-13, go-30)
conj:and(Keep-22, go-30)
case(shout-33, on-31)
det(shout-33, the-32)
nmod:on(go-30, shout-33)
dep(comes-13, For-35)
det(sickness-37, the-36)
nsubj(gets-38, sickness-37)
parataxis(comes-13, gets-38)
compound:prt(gets-38, in-39)
mark(dies-43, as-40)
det(liquor-42, the-41)
nsubj(dies-43, liquor-42)
advcl(gets-38, dies-43)
compound:prt(dies-43, out-44)
dep(it-48, An-46)
case(An-46, '-47)
parataxis(gets-38, it-48)
root(ROOT-0, crumples-49)
det(soldier-53, the-50)
amod(soldier-53, young-51)
amod(soldier-53, British-52)
dobj(crumples-49, soldier-53)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Crum) (NNP -))
        (, ,)
        (NP (NN crum) (NNS -))
        (, ,))
      (VP (VBZ crumples)
        (NP (DT the) (NN soldier))))
    (: ...)
    (S (CC But)
      (NP
        (NP (DT the) (JJS worst))
        (VP (VBN o) ('' ')
          (NP (PRP$ your) (NNS foes))))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN sun))
          (PP (IN over) (`` `)
            (NP (NN ead))))))
    (: :)
    (S
      (NP (PRP You))
      (ADVP (RB _))
      (VP (MD must)
        (ADVP (RB _))
        (VP (VB wear)
          (NP
            (NP (PRP$ your) (`` `) (NN elmet))
            (PP (IN for)
              (NP
                (NP (DT all))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (VP (VBN said)))))))))))
    (: :)
    (S
      (SBAR (IN If)
        (S
          (S
            (NP (POS '))
            (X
              (X (SYM e))
              (NP
                (NP (NNS finds))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBD uncovered) (`` `)
                      (X (SYM e))))))))
          (VP (MD 'll)
            (VP (VB knock)
              (S
                (S
                  (NP (PRP you))
                  (ADJP (RB down) (JJ dead)))
                (, ,)
                (S
                  (NP (NNP An) (POS '))
                  (NP (PRP you))))))))
      (VP (MD 'll)
        (VP (VB die)
          (PP (IN like)
            (NP
              (NP (DT a) (NN fool))
              (PP (IN of)
                (NP (DT a) (NN soldier))))))))
    (. .)))

compound(--2, Crum-1)
nsubj(crumples-7, --2)
compound(--5, crum-4)
appos(--2, --5)
root(ROOT-0, crumples-7)
det(soldier-9, the-8)
dobj(crumples-7, soldier-9)
cc(sun-20, But-11)
det(worst-13, the-12)
nsubj(sun-20, worst-13)
acl(worst-13, o-14)
nmod:poss(foes-17, your-16)
dobj(o-14, foes-17)
cop(sun-20, is-18)
det(sun-20, the-19)
parataxis(crumples-7, sun-20)
case(ead-23, over-21)
nmod:over(sun-20, ead-23)
nsubj(wear-29, You-25)
advmod(wear-29, _-26)
aux(wear-29, must-27)
advmod(wear-29, _-28)
parataxis(crumples-7, wear-29)
nmod:poss(elmet-32, your-30)
dobj(wear-29, elmet-32)
case(all-34, for-33)
nmod:for(elmet-32, all-34)
nsubjpass(said-37, all-34)
ref(all-34, that-35)
auxpass(said-37, is-36)
acl:relcl(all-34, said-37)
mark(knock-48, If-39)
csubj(knock-48, '-40)
dep(finds-42, e-41)
dep('-40, finds-42)
nsubj(uncovered-44, you-43)
acl:relcl(finds-42, uncovered-44)
dep(uncovered-44, e-46)
aux(knock-48, 'll-47)
csubj(die-57, knock-48)
dep(dead-51, you-49)
advmod(dead-51, down-50)
xcomp(knock-48, dead-51)
dep(you-55, An-53)
case(An-53, '-54)
parataxis(dead-51, you-55)
aux(die-57, 'll-56)
parataxis(crumples-7, die-57)
case(fool-60, like-58)
det(fool-60, a-59)
nmod:like(die-57, fool-60)
case(soldier-63, of-61)
det(soldier-63, a-62)
nmod:of(fool-60, soldier-63)

(ROOT
  (FRAG
    (NP
      (NP (NNP Fool))
      (, ,)
      (NP (NN fool))
      (, ,)
      (NP
        (NP (NN fool))
        (PP (IN of)
          (NP (DT a) (NN soldier)))))
    (: ...)
    (S
      (S
        (SBAR (IN If)
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (VP (VBN cast)
                (PP (IN for)
                  (NP (NN fatigue)))
                (PP (IN by)
                  (NP (DT a) (NN sergeant)))))))
        (VP
          (VP (VBD unkind))
          (, ,)
          (VP (VBP Do) (RB n't)
            (VP (VB grouse)
              (PP (IN like)
                (NP (DT a) (NN woman)))))
          (CC nor)
          (VP (VBP crack)
            (PRT (RP on))
            (NP
              (NP (CC nor)
                (NN blind))
              (: ;)
              (VP (VB Be)
                (ADJP (JJ handy)
                  (CC and)
                  (JJ civil)))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB then))
        (NP (PRP you))
        (VP (MD will)
          (VP (VB find)
            (NP
              (NP (DT That))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (NP
                      (NP (NN beer))
                      (PP (IN for)
                        (NP (DT the) (JJ young) (JJ British) (NN soldier))))))))))))
    (. .)))

root(ROOT-0, Fool-1)
appos(Fool-1, fool-3)
appos(Fool-1, fool-5)
case(soldier-8, of-6)
det(soldier-8, a-7)
nmod:of(fool-5, soldier-8)
mark(cast-13, If-10)
nsubjpass(cast-13, you-11)
auxpass(cast-13, 're-12)
csubj(unkind-19, cast-13)
csubj(grouse-23, cast-13)
csubj(crack-28, cast-13)
case(fatigue-15, for-14)
nmod:for(cast-13, fatigue-15)
case(sergeant-18, by-16)
det(sergeant-18, a-17)
nmod:by(cast-13, sergeant-18)
parataxis(Fool-1, unkind-19)
aux(grouse-23, Do-21)
neg(grouse-23, n't-22)
parataxis(Fool-1, grouse-23)
conj:and(unkind-19, grouse-23)
case(woman-26, like-24)
det(woman-26, a-25)
nmod:like(grouse-23, woman-26)
cc(unkind-19, nor-27)
parataxis(Fool-1, crack-28)
conj:nor(unkind-19, crack-28)
compound:prt(crack-28, on-29)
cc(blind-31, nor-30)
dobj(crack-28, blind-31)
cop(handy-34, Be-33)
dep(blind-31, handy-34)
cc(handy-34, and-35)
dep(blind-31, civil-36)
conj:and(handy-34, civil-36)
cc(unkind-19, and-38)
advmod(find-42, then-39)
nsubj(find-42, you-40)
aux(find-42, will-41)
parataxis(Fool-1, find-42)
conj:nor(unkind-19, find-42)
dobj(find-42, That-43)
nsubj(beer-46, it-44)
cop(beer-46, 's-45)
acl:relcl(That-43, beer-46)
case(soldier-51, for-47)
det(soldier-51, the-48)
amod(soldier-51, young-49)
amod(soldier-51, British-50)
nmod:for(beer-46, soldier-51)

(ROOT
  (FRAG
    (NP
      (NP (NNP Beer))
      (, ,)
      (NP (NN beer))
      (, ,)
      (NP
        (NP (NN beer))
        (PP (IN for)
          (NP (DT the) (NN soldier)))))
    (: ...)
    (S
      (S
        (ADVP (RB Now))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (MD must)
              (VP (VB marry)))))
        (, ,)
        (VP (VBP take)
          (NP
            (NP
              (NP (NN care))
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBZ is)
                    (ADJP (JJ old))))))
            (: --)
            (S
              (S
                (NP
                  (NP (DT A) (NN troop-sergeant) (POS 's))
                  (NN widow))
                (VP (VBZ 's)
                  (NP
                    (NP (DT the) (NN nicest))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBP 'm)
                          (VP (VBN told))))))))
              (, ,) (IN For)
              (S
                (NP (NN beauty))
                (VP (MD wo) (RB n't)
                  (VP (VB help)
                    (SBAR (IN if)
                      (S
                        (NP (PRP$ your) (NNS rations))
                        (VP (VBZ is)
                          (ADJP (JJ cold))))))))))))
      (, ,)
      (CC Nor)
      (S
        (NP (NN love))
        (VP (VBP ai) (RB n't)
          (ADJP (JJ enough)
            (PP (IN for)
              (NP (DT a) (NN soldier)))))))
    (. .)))

root(ROOT-0, Beer-1)
appos(Beer-1, beer-3)
appos(Beer-1, beer-5)
case(soldier-8, for-6)
det(soldier-8, the-7)
nmod:for(beer-5, soldier-8)
advmod(take-17, Now-10)
mark(marry-15, if-12)
nsubj(marry-15, you-13)
aux(marry-15, must-14)
dep(take-17, marry-15)
parataxis(Beer-1, take-17)
dobj(take-17, care-18)
nsubj(old-21, she-19)
cop(old-21, is-20)
acl:relcl(care-18, old-21)
det(troop-sergeant-24, A-23)
nmod:poss(widow-26, troop-sergeant-24)
case(troop-sergeant-24, 's-25)
nsubj(nicest-29, widow-26)
cop(nicest-29, 's-27)
det(nicest-29, the-28)
dep(care-18, nicest-29)
nsubjpass(told-32, I-30)
auxpass(told-32, 'm-31)
acl:relcl(nicest-29, told-32)
dep(nicest-29, For-34)
nsubj(help-38, beauty-35)
aux(help-38, wo-36)
neg(help-38, n't-37)
parataxis(nicest-29, help-38)
mark(cold-43, if-39)
nmod:poss(rations-41, your-40)
nsubj(cold-43, rations-41)
cop(cold-43, is-42)
advcl(help-38, cold-43)
cc(take-17, Nor-45)
nsubj(enough-49, love-46)
cop(enough-49, ai-47)
neg(enough-49, n't-48)
parataxis(Beer-1, enough-49)
conj:nor(take-17, enough-49)
case(soldier-52, for-50)
det(soldier-52, a-51)
nmod:for(enough-49, soldier-52)

(ROOT
  (S
    (S (`` `)
      (NP (NNP Nough))
      (, ,) (`` `)
      (VP (VBD nough) (, ,) (`` `)
        (ADJP (JJ nough))
        (PP (IN for)
          (NP (DT a) (NN soldier)))))
    (: ...)
    (S
      (SBAR (IN If)
        (S
          (NP (DT the) (NN wife))
          (VP (MD should)
            (VP (VB go)
              (ADJP (JJ wrong))
              (PP (IN with)
                (NP (DT a) (NN comrade)))))))
      (, ,)
      (VP (VB be)
        (ADJP (JJ loath)
          (S
            (VP (TO To)
              (VP (VB shoot)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP you))
                    (VP (VB catch)
                      (NP (PRP 'em)))))))))))
    (: --)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB swing) (, ,)
          (PP (IN on)
            (NP (PRP$ my) (NN oath))))))
    (. !)))

nsubj(nough-5, Nough-2)
root(ROOT-0, nough-5)
xcomp(nough-5, nough-8)
case(soldier-11, for-9)
det(soldier-11, a-10)
nmod:for(nough-5, soldier-11)
mark(go-17, If-13)
det(wife-15, the-14)
nsubj(go-17, wife-15)
aux(go-17, should-16)
advcl(loath-24, go-17)
xcomp(go-17, wrong-18)
case(comrade-21, with-19)
det(comrade-21, a-20)
nmod:with(go-17, comrade-21)
cop(loath-24, be-23)
parataxis(nough-5, loath-24)
mark(shoot-26, To-25)
xcomp(loath-24, shoot-26)
advmod(catch-29, when-27)
nsubj(catch-29, you-28)
advcl(shoot-26, catch-29)
dobj(catch-29, 'em-30)
nsubj(swing-34, you-32)
aux(swing-34, 'll-33)
parataxis(nough-5, swing-34)
case(oath-38, on-36)
nmod:poss(oath-38, my-37)
nmod:on(swing-34, oath-38)

(ROOT
  (S (: --)
    (S
      (VP (VB Make) (`` `)
        (NP (NN im))
        (S
          (VP
            (VP (VB take) (`` `)
              (NP (NN er)))
            (CC and)
            (VP (VB keep) (`` `)
              (ADVP (RB er))
              (: :)
              (SBAR (IN that)
                (S
                  (VP (VBZ 's)
                    (NP
                      (NP (NNP Hell))
                      (PP (IN for)
                        (NP (PRP them) (DT both))))))))))))
    (, ,)
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP you))
    (VP (VBP 're)
      (VP (VBN shut)
        (S
          (NP
            (NP (NNP o) (POS '))
            (NP (DT the) (NN curse))
            (PP (IN of)
              (NP (DT a) (NN soldier)))))))
    (. .)))

parataxis(shut-24, Make-2)
dobj(Make-2, im-4)
dep(Make-2, take-5)
dobj(take-5, er-7)
cc(take-5, and-8)
dep(Make-2, keep-9)
conj:and(take-5, keep-9)
advmod(keep-9, er-11)
mark(Hell-15, that-13)
cop(Hell-15, 's-14)
ccomp(keep-9, Hell-15)
case(them-17, for-16)
nmod:for(Hell-15, them-17)
det(them-17, both-18)
parataxis(shut-24, An-20)
case(An-20, '-21)
nsubjpass(shut-24, you-22)
auxpass(shut-24, 're-23)
root(ROOT-0, shut-24)
xcomp(shut-24, o-25)
case(o-25, '-26)
det(curse-28, the-27)
dep(o-25, curse-28)
case(soldier-31, of-29)
det(soldier-31, a-30)
nmod:of(o-25, soldier-31)

(ROOT
  (S
    (ADVP (RB Curse))
    (, ,)
    (NP
      (NP (NN curse))
      (, ,)
      (NP
        (NP (NN curse))
        (PP (IN of)
          (NP
            (NP (DT a) (NN soldier))
            (: ...)
            (SBAR
              (WHADVP (WRB When))
              (S
                (NP (JJ first))
                (PP (IN under)
                  (NP (NN fire) (DT an)))
                ('' ')
                (NP (PRP you))
                (VP (VBP 're)
                  (ADJP (JJ wishful)
                    (S
                      (VP (TO to)
                        (VP (VB duck)))))))))))
      (, ,))
    (VP (VBP Do) (RB n't)
      (VP (VB look)
        (SBAR
          (S
            (S
              (VP (CC nor)
                (VP (VB take) (`` `)
                  (NP (NN eed))
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN man))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ is)
                            (VP (VBN struck))))))))
                (, ,)
                (VP
                  (VP (VB Be)
                    (ADJP (JJ thankful)
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBP 're)
                            (ADJP (JJ livin) ('' ')))))))
                  (, ,)
                  (CC and)
                  (VP (VB trust)
                    (PP (TO to)
                      (NP (PRP$ your) (NN luck)))))))
            (CC And)
            (S
              (VP (VB march)
                (PP (TO to)
                  (NP
                    (NP (PRP$ your) (NN front))
                    (PP (IN like)
                      (NP (DT a) (NN soldier)))))))))))
    (. .)))

advmod(look-24, Curse-1)
nsubj(look-24, curse-3)
appos(curse-3, curse-5)
case(soldier-8, of-6)
det(soldier-8, a-7)
nmod:of(curse-5, soldier-8)
advmod(wishful-18, When-10)
nsubj(wishful-18, first-11)
nsubj:xsubj(duck-20, first-11)
case(fire-13, under-12)
nmod:under(wishful-18, fire-13)
dep(fire-13, an-14)
nsubj(wishful-18, you-16)
nsubj:xsubj(duck-20, you-16)
cop(wishful-18, 're-17)
acl:relcl(soldier-8, wishful-18)
mark(duck-20, to-19)
xcomp(wishful-18, duck-20)
aux(look-24, Do-22)
neg(look-24, n't-23)
root(ROOT-0, look-24)
cc(take-26, nor-25)
dep(look-24, take-26)
dobj(take-26, eed-28)
case(man-31, at-29)
det(man-31, the-30)
nmod:at(take-26, man-31)
nsubjpass(struck-34, man-31)
ref(man-31, that-32)
auxpass(struck-34, is-33)
acl:relcl(man-31, struck-34)
cop(thankful-37, Be-36)
dep(take-26, thankful-37)
nsubj(livin-40, you-38)
cop(livin-40, 're-39)
ccomp(thankful-37, livin-40)
cc(thankful-37, and-43)
dep(take-26, trust-44)
conj:and(thankful-37, trust-44)
case(luck-47, to-45)
nmod:poss(luck-47, your-46)
nmod:to(trust-44, luck-47)
cc(take-26, And-48)
dep(look-24, march-49)
conj:nor(take-26, march-49)
case(front-52, to-50)
nmod:poss(front-52, your-51)
nmod:to(march-49, front-52)
case(soldier-55, like-53)
det(soldier-55, a-54)
nmod:like(front-52, soldier-55)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Front))
        (, ,)
        (NP (NN front))
        (, ,)
        (NP
          (NP (NN front))
          (PP (IN like)
            (NP
              (NP (DT a) (NN soldier))
              (: ...)
              (SBAR
                (WHADVP (WRB When))
                (S
                  (NP
                    (NP (`` `) (NN arf))
                    (PP (IN of)
                      (NP (PRP$ your) (NNS bullets))))
                  (VP (VBP fly)
                    (ADJP (JJ wide))
                    (PP (IN in)
                      (NP (DT the) (NN ditch)))))))))
        (, ,))
      (VP (VBP Do) (RB n't)
        (VP (VB call)
          (NP (PRP$ your) (NNP Martini))
          (NP (DT a) (JJ cross-eyed) (JJ old) (NN bitch)))))
    (: ;)
    (S
      (NP (PRP She))
      (VP (VBZ 's)
        (ADJP (JJ human))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP are))))))
    (: --)
    (S
      (NP (PRP you))
      (VP (VBP treat)
        (NP (PRP her))
        (PP (IN as)
          (NP (NN sich)))
        (, ,)
        (NP
          (NP (NNP An))
          ('' ')
          (SBAR
            (S
              (NP (PRP she))
              (VP (MD 'll)
                (VP (VB fight)
                  (PP (IN for)
                    (NP (DT the) (JJ young) (JJ British) (NN soldier))))))))))
    (. .)))

nsubj(call-24, Front-1)
appos(Front-1, front-3)
appos(Front-1, front-5)
case(soldier-8, like-6)
det(soldier-8, a-7)
nmod:like(front-5, soldier-8)
advmod(fly-16, When-10)
nsubj(fly-16, arf-12)
case(bullets-15, of-13)
nmod:poss(bullets-15, your-14)
nmod:of(arf-12, bullets-15)
acl:relcl(soldier-8, fly-16)
xcomp(fly-16, wide-17)
case(ditch-20, in-18)
det(ditch-20, the-19)
nmod:in(fly-16, ditch-20)
aux(call-24, Do-22)
neg(call-24, n't-23)
root(ROOT-0, call-24)
nmod:poss(Martini-26, your-25)
dep(call-24, Martini-26)
det(bitch-30, a-27)
amod(bitch-30, cross-eyed-28)
amod(bitch-30, old-29)
dobj(call-24, bitch-30)
nsubj(human-34, She-32)
cop(human-34, 's-33)
parataxis(call-24, human-34)
mark(are-37, as-35)
nsubj(are-37, you-36)
advcl(human-34, are-37)
nsubj(treat-40, you-39)
parataxis(call-24, treat-40)
dobj(treat-40, her-41)
case(sich-43, as-42)
nmod:as(treat-40, sich-43)
dobj(treat-40, An-45)
nsubj(fight-49, she-47)
aux(fight-49, 'll-48)
acl:relcl(An-45, fight-49)
case(soldier-54, for-50)
det(soldier-54, the-51)
amod(soldier-54, young-52)
amod(soldier-54, British-53)
nmod:for(fight-49, soldier-54)

(ROOT
  (S
    (S
      (NP
        (NP (NN Fight))
        (, ,)
        (NP (NN fight))
        (, ,))
      (VP (VBP fight)
        (PP (IN for)
          (NP (DT the) (NN soldier)))))
    (: ...)
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (VP (VBN shakin) ('' ')
            (NP (PRP$ their) (NNS bustles))
            (PP (IN like)
              (NP
                (NP (NNS ladies))
                (ADJP (RB so) (JJ fine)))))))
      (, ,)
      (NP (DT The) (NNS guns))
      (VP (VBP o) ('' ')
        (NP (DT the) (NN enemy) (NN wheel))
        (PP (IN into)
          (NP (NN line)))))
    (, ,)
    (S
      (NP
        (NP (NNP Shoot))
        (RRC
          (ADVP (JJ low))
          (PP (IN at)
            (NP (DT the) (NNS limbers))))
        (, an) ('' '))
      (VP (VBP do) (RB n't)
        (VP (VB mind)
          (NP (DT the) (NN shine)))))
    (, ,) (IN For)
    (S
      (NP (NN noise))
      (ADVP (RB never))
      (VP (VBZ startles)
        (NP (DT the) (NN soldier))))
    (. .)))

nsubj(fight-5, Fight-1)
appos(Fight-1, fight-3)
root(ROOT-0, fight-5)
case(soldier-8, for-6)
det(soldier-8, the-7)
nmod:for(fight-5, soldier-8)
advmod(shakin-11, When-10)
advcl(o-22, shakin-11)
nmod:poss(bustles-14, their-13)
dobj(shakin-11, bustles-14)
case(ladies-16, like-15)
nmod:like(shakin-11, ladies-16)
advmod(fine-18, so-17)
amod(ladies-16, fine-18)
det(guns-21, The-20)
nsubj(o-22, guns-21)
parataxis(fight-5, o-22)
det(wheel-26, the-24)
compound(wheel-26, enemy-25)
dobj(o-22, wheel-26)
case(line-28, into-27)
nmod:into(o-22, line-28)
nsubj(mind-39, Shoot-30)
advmod(limbers-34, low-31)
case(limbers-34, at-32)
det(limbers-34, the-33)
acl:relcl(Shoot-30, limbers-34)
aux(mind-39, do-37)
neg(mind-39, n't-38)
parataxis(fight-5, mind-39)
det(shine-41, the-40)
dobj(mind-39, shine-41)
dep(fight-5, For-43)
nsubj(startles-46, noise-44)
neg(startles-46, never-45)
parataxis(fight-5, startles-46)
det(soldier-48, the-47)
dobj(startles-46, soldier-48)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Start) (NNP -))
        (, ,)
        (VP (VBP start))
        (: -))
      (, ,)
      (VP (VBZ startles)
        (NP
          (NP (DT the) (NN soldier))
          (: ...)
          (S
            (SBAR (IN If)
              (S
                (S
                  (NP (PRP$ your) (NN officer))
                  (VP (VBZ 's)
                    (ADJP (JJ dead))))
                (CC and)
                (S
                  (NP (DT the) (NNS sergeants))
                  (VP (VBP look)
                    (ADJP (JJ white))))))
            (, ,)
            (VP (VB Remember)
              (S
                (NP (PRP it) (POS 's))
                (VP
                  (VP (VB ruin)
                    (S
                      (VP (TO to)
                        (VP (VB run)
                          (PP (IN from)
                            (NP (DT a) (NN fight)))
                          (: :)
                          (S (RB So)
                            (VP (VB take)
                              (NP (JJ open) (NN order))))))))
                  (, ,)
                  (VP (VB lie)
                    (PRT (RP down)))
                  (, ,)
                  (CC and)
                  (VP (VB sit)
                    (ADVP (RB tight))))))))))
    (, ,)
    (CC And)
    (S
      (VP (VB wait)
        (PP (IN for)
          (NP
            (NP (NNS supports))
            (PP (IN like)
              (NP (DT a) (NN soldier)))))))
    (. .)))

compound(--2, Start-1)
nsubj(startles-7, --2)
nsubj(wait-45, --2)
dep(--2, start-4)
root(ROOT-0, startles-7)
det(soldier-9, the-8)
dobj(startles-7, soldier-9)
mark(dead-15, If-11)
nmod:poss(officer-13, your-12)
nsubj(dead-15, officer-13)
cop(dead-15, 's-14)
advcl(Remember-22, dead-15)
cc(dead-15, and-16)
det(sergeants-18, the-17)
nsubj(look-19, sergeants-18)
conj:and(dead-15, look-19)
advcl(Remember-22, look-19)
xcomp(look-19, white-20)
dep(soldier-9, Remember-22)
nsubj(ruin-25, it-23)
nsubj:xsubj(run-27, it-23)
nsubj(lie-37, it-23)
nsubj(sit-41, it-23)
case(it-23, 's-24)
ccomp(Remember-22, ruin-25)
mark(run-27, to-26)
xcomp(ruin-25, run-27)
case(fight-30, from-28)
det(fight-30, a-29)
nmod:from(run-27, fight-30)
advmod(take-33, So-32)
ccomp(run-27, take-33)
amod(order-35, open-34)
dobj(take-33, order-35)
ccomp(Remember-22, lie-37)
conj:and(ruin-25, lie-37)
compound:prt(lie-37, down-38)
cc(ruin-25, and-40)
ccomp(Remember-22, sit-41)
conj:and(ruin-25, sit-41)
advmod(sit-41, tight-42)
cc(startles-7, And-44)
conj:and(startles-7, wait-45)
case(supports-47, for-46)
nmod:for(wait-45, supports-47)
case(soldier-50, like-48)
det(soldier-50, a-49)
nmod:like(supports-47, soldier-50)

(ROOT
  (S
    (VP
      (VP (VB Wait) (, ,) (VB wait) (, ,)
        (S
          (VP (VB wait)
            (PP (IN like)
              (NP (DT a) (NN soldier)))
            (: ...)
            (S
              (SBAR
                (WHADVP (WRB When))
                (S
                  (S
                    (NP (PRP you))
                    (VP (VBP 're)
                      (VP (VBN wounded)
                        (CC and)
                        (VBN left)
                        (PP (IN on)
                          (NP
                            (NP (NNP Afghanistan) (POS 's))
                            (NNS plains))))))
                  (, ,)
                  (CC And)
                  (S
                    (NP (DT the) (NNS women))
                    (VP (VBP come)
                      (PRT (RP out))
                      (S
                        (VP (TO to)
                          (VP (VB cut)
                            (PRT (RP up))
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (VP (VBZ remains)))))))))))
              (, ,)
              (NP (NNP Jest))
              (VP (VBP roll)
                (PP (TO to)
                  (NP (PRP$ your) (NN rifle))))))))
      (CC and)
      (VP (VB blow)
        (PRT (RP out))
        (NP
          (NP (PRP$ your) (NNS brains))
          (SBAR
            (S
              (NP (NNP An) (POS '))
              (VP (VBP go)
                (PP (TO to)
                  (NP
                    (NP (PRP$ your) (NN Gawd))
                    (PP (IN like)
                      (NP (DT a) (NN soldier)))))))))))
    (. .)))

root(ROOT-0, Wait-1)
dep(Wait-1, wait-3)
ccomp(Wait-1, wait-5)
case(soldier-8, like-6)
det(soldier-8, a-7)
nmod:like(wait-5, soldier-8)
advmod(wounded-13, When-10)
nsubjpass(wounded-13, you-11)
nsubjpass(left-15, you-11)
auxpass(wounded-13, 're-12)
advcl(roll-33, wounded-13)
cc(wounded-13, and-14)
conj:and(wounded-13, left-15)
advcl(roll-33, left-15)
case(plains-19, on-16)
nmod:poss(plains-19, Afghanistan-17)
case(Afghanistan-17, 's-18)
nmod:on(wounded-13, plains-19)
cc(wounded-13, And-21)
det(women-23, the-22)
nsubj(come-24, women-23)
nsubj:xsubj(cut-27, women-23)
conj:and(wounded-13, come-24)
advcl(roll-33, come-24)
compound:prt(come-24, out-25)
mark(cut-27, to-26)
xcomp(come-24, cut-27)
compound:prt(cut-27, up-28)
nsubj(remains-30, what-29)
ccomp(cut-27, remains-30)
nsubj(roll-33, Jest-32)
ccomp(wait-5, roll-33)
case(rifle-36, to-34)
nmod:poss(rifle-36, your-35)
nmod:to(roll-33, rifle-36)
cc(Wait-1, and-37)
conj:and(Wait-1, blow-38)
compound:prt(blow-38, out-39)
nmod:poss(brains-41, your-40)
dobj(blow-38, brains-41)
nsubj(go-44, An-42)
case(An-42, '-43)
acl:relcl(brains-41, go-44)
case(Gawd-47, to-45)
nmod:poss(Gawd-47, your-46)
nmod:to(go-44, Gawd-47)
case(soldier-50, like-48)
det(soldier-50, a-49)
nmod:like(Gawd-47, soldier-50)

(ROOT
  (SQ
    (VP
      (VP (VB Go))
      (, ,)
      (VP (VB go))
      (, ,)
      (VP (VB go)
        (PP (IN like)
          (NP (DT a) (NN soldier))))
      (, ,)
      (VP (VB Go))
      (, ,)
      (VP (VB go))
      (, ,)
      (VP (VB go)
        (PP (IN like)
          (NP (DT a) (NN soldier))))
      (, ,)
      (VP (VB Go))
      (, ,)
      (VP (VB go))
      (, ,)
      (VP (VB go)
        (PP (IN like)
          (NP (DT a) (NN soldier))))
      (, ,)
      (NP
        (NP (NNP So-oldier) (NNP _))
        (PP (IN of)
          (S
            (VP (VBG _)
              (NP (DT the) (NN Queen)))))))
    (. !)))

root(ROOT-0, Go-1)
dep(Go-1, go-3)
dep(Go-1, go-5)
case(soldier-8, like-6)
det(soldier-8, a-7)
nmod:like(go-5, soldier-8)
dep(Go-1, Go-10)
dep(Go-1, go-12)
dep(Go-1, go-14)
case(soldier-17, like-15)
det(soldier-17, a-16)
nmod:like(go-14, soldier-17)
dep(Go-1, Go-19)
dep(Go-1, go-21)
dep(Go-1, go-23)
case(soldier-26, like-24)
det(soldier-26, a-25)
nmod:like(go-23, soldier-26)
compound(_-29, So-oldier-28)
dobj(Go-1, _-29)
mark(_-31, of-30)
acl(_-29, _-31)
det(Queen-33, the-32)
dobj(_-31, Queen-33)

(ROOT
  (S
    (ADVP (RB MANDALAY))
    (PP (IN By)
      (NP
        (NP (DT the) (JJ old) (NNP Moulmein) (NNP Pagoda))
        (, ,)
        (NP
          (NP
            (NP (NN lookin) (POS '))
            (NN eastward))
          (PP (TO to)
            (NP (DT the) (NN sea))))))
    (, ,)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP (DT a) (NN Burma) (NN girl) (NN a-settin) ('' '))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBZ thinks)
              (NP
                (NP (NNP o) (POS '))
                (NX (FW me))))))))
    (: ;)
    (S
      (SBAR (IN For)
        (S
          (NP (DT the) (NN wind))
          (VP (VBZ is)
            (PP (IN in)
              (NP
                (NP (DT the) (NNS palm-trees))
                (, ,)
                (CC and)
                (NP (DT the) (NNS temple-bells)))))))
      (NP (PRP they))
      (VP (VBP say)))
    (: :) (`` ``)
    (S
      (S
        (VP (VB Come)
          (NP (PRP you))
          (ADVP (RB back))
          (, ,)
          (NP (PRP you) (JJ British) (NN soldier)))
        (: ;))
      (VP (VBP come)
        (NP (PRP you))
        (ADVP (RB back)
          (PP (TO to)
            (NP (NNP Mandalay))))))
    (. !) ('' '')))

advmod('s-16, MANDALAY-1)
case(Pagoda-6, By-2)
det(Pagoda-6, the-3)
amod(Pagoda-6, old-4)
compound(Pagoda-6, Moulmein-5)
nmod:by('s-16, Pagoda-6)
nmod:poss(eastward-10, lookin-8)
case(lookin-8, '-9)
appos(Pagoda-6, eastward-10)
case(sea-13, to-11)
det(sea-13, the-12)
nmod:to(eastward-10, sea-13)
expl('s-16, There-15)
root(ROOT-0, 's-16)
det(a-settin-20, a-17)
compound(a-settin-20, Burma-18)
compound(a-settin-20, girl-19)
nsubj('s-16, a-settin-20)
cc('s-16, and-23)
nsubj(know-25, I-24)
conj:and('s-16, know-25)
nsubj(thinks-27, she-26)
ccomp(know-25, thinks-27)
nmod:poss(me-30, o-28)
case(o-28, '-29)
dobj(thinks-27, me-30)
mark(palm-trees-38, For-32)
det(wind-34, the-33)
nsubj(palm-trees-38, wind-34)
cop(palm-trees-38, is-35)
case(palm-trees-38, in-36)
det(palm-trees-38, the-37)
advcl(say-44, palm-trees-38)
cc(palm-trees-38, and-40)
det(temple-bells-42, the-41)
conj:and(palm-trees-38, temple-bells-42)
advcl(say-44, temple-bells-42)
nsubj(say-44, they-43)
conj:and('s-16, say-44)
csubj(come-55, Come-47)
dobj(Come-47, you-48)
advmod(Come-47, back-49)
dep(soldier-53, you-51)
amod(soldier-53, British-52)
dobj(Come-47, soldier-53)
conj:and('s-16, come-55)
dobj(come-55, you-56)
advmod(come-55, back-57)
case(Mandalay-59, to-58)
nmod:to(back-57, Mandalay-59)

(ROOT
  (S
    (VP (VB Come)
      (NP (PRP you))
      (ADVP (RB back)
        (PP (TO to)
          (NP (NNP Mandalay))))
      (, ,)
      (SBAR
        (WHADVP (WRB Where))
        (S
          (NP (DT the) (JJ old) (NNP Flotilla))
          (VP (VBD lay) (: :)
            (SQ (MD Ca) (RB n't)
              (NP (PRP you))
              (VP (`` `) (VB ear)
                (NP (PRP$ their) (NNS paddles) (NN chunkin))
                ('' ')
                (PP (IN from)
                  (NP
                    (NP (NNP Rangoon))
                    (PP (TO to)
                      (NP (NNP Mandalay))))))
              (. ?))))))))

root(ROOT-0, Come-1)
dobj(Come-1, you-2)
advmod(Come-1, back-3)
case(Mandalay-5, to-4)
nmod:to(back-3, Mandalay-5)
advmod(lay-11, Where-7)
det(Flotilla-10, the-8)
amod(Flotilla-10, old-9)
nsubj(lay-11, Flotilla-10)
advcl(Come-1, lay-11)
aux(ear-17, Ca-13)
neg(ear-17, n't-14)
nsubj(ear-17, you-15)
parataxis(lay-11, ear-17)
nmod:poss(chunkin-20, their-18)
compound(chunkin-20, paddles-19)
dobj(ear-17, chunkin-20)
case(Rangoon-23, from-22)
nmod:from(ear-17, Rangoon-23)
case(Mandalay-25, to-24)
nmod:to(Rangoon-23, Mandalay-25)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP (DT the) (NN road))
        (PP (TO to)
          (NP (NNP Mandalay)))))
    (, ,)
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP
          (NP (DT the) (NN flyin) (POS '))
          (JJ -) (NNS fishes))
        (VP (VBP play))))
    (, ,)
    (S
      (NP (NNP An) (POS ')))
    (NP (DT the) (NN dawn))
    (VP (VBZ comes)
      (PRT (RP up))
      (PP (IN like)
        (NP (NN thunder) (NN outer) (NNP China) (`` `) (NNP crost) (DT the) (NNP Bay))))
    (. !)))

case(road-3, On-1)
det(road-3, the-2)
nmod:on(comes-19, road-3)
case(Mandalay-5, to-4)
nmod:to(road-3, Mandalay-5)
advmod(play-13, Where-7)
det(flyin-9, the-8)
nmod:poss(fishes-12, flyin-9)
case(flyin-9, '-10)
amod(fishes-12, --11)
nsubj(play-13, fishes-12)
advcl(comes-19, play-13)
dep(comes-19, An-15)
case(An-15, '-16)
det(dawn-18, the-17)
nsubj(comes-19, dawn-18)
root(ROOT-0, comes-19)
compound:prt(comes-19, up-20)
case(Bay-28, like-21)
compound(Bay-28, thunder-22)
compound(Bay-28, outer-23)
compound(Bay-28, China-24)
compound(Bay-28, crost-26)
det(Bay-28, the-27)
nmod:like(comes-19, Bay-28)

(ROOT
  (S
    (S
      (NP (`` `)
        (NP (NNP Er) (NNP petticoat))
        (SBAR
          (S
            (VP (VBD was)
              (ADJP (JJ yaller)))))
        (, an) ('' '))
      (`` `)
      (VP (VBP er)
        (SBAR
          (S
            (NP (JJ little) (NN cap))
            (VP (VBD was)
              (ADJP (JJ green)))))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (`` `) (JJ er) (NN name))
    (VP (VBD was)
      (VP (VBG Supi-yaw-lat)
        (PRN (: --)
          (S
            (VP (VB jes) (`` ')
              (NP
                (NP (DT the) (JJ same))
                (PP (IN as)
                  (NP
                    (NP
                      (NP (NNP Theebaw) (POS 's))
                      (NN Queen))
                    (, ,)
                    (NP
                      (NP
                        (NP (NNP An) (POS '))
                        (NN I) (NN seed))
                      (NP (PRP$ her) (JJ first) (NN a-smokin))))))
              ('' ')
              (PP (IN of)
                (NP
                  (NP (DT a) (NN whackin) (POS '))
                  (JJ white) (NN cheroot)))
              (, ,)
              (NP
                (NP
                  (NP
                    (NP
                      (NP (NNP An) (POS '))
                      (NN a-wastin) (POS '))
                    (JJ Christian) (NN kisses))
                  (PP (IN on)
                    (NP
                      (NP (DT an) (`` `) (NNP eathen) (NN idol) (POS 's))
                      (NN foot))))
                (: :)
                (NP
                  (NP
                    (NP (NNP Bloomin) (POS '))
                    (NN idol))
                  (VP (VBN made)
                    (S
                      (ADJP (JJ o'mud))))))))
          (: --))
        (NP
          (NP (NNP Wot))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBD called)
                (NP
                  (NP (DT the) (NNP Great) (NNP Gawd) (NNP Budd))
                  (: --)
                  (NP
                    (NP (NNP Plucky) (NN lot))
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (VBD cared)
                          (PP (IN for)
                            (NP (NNS idols)))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP I))
                              (VP (VBD kissed) (`` `)
                                (NP
                                  (NP (NN er))
                                  (SBAR
                                    (WHADVP (WRB where))
                                    (S
                                      (NP (PRP she))
                                      (VP (VBD stud)))))))))))))))))))
    (. !)))

compound(petticoat-3, Er-2)
nsubj(er-9, petticoat-3)
cop(yaller-5, was-4)
acl:relcl(petticoat-3, yaller-5)
ccomp(Supi-yaw-lat-21, er-9)
amod(cap-11, little-10)
nsubj(green-13, cap-11)
cop(green-13, was-12)
ccomp(er-9, green-13)
nmod:poss(name-19, An-15)
case(An-15, '-16)
amod(name-19, er-18)
nsubj(Supi-yaw-lat-21, name-19)
aux(Supi-yaw-lat-21, was-20)
root(ROOT-0, Supi-yaw-lat-21)
parataxis(Supi-yaw-lat-21, jes-23)
det(same-26, the-25)
dobj(jes-23, same-26)
case(Queen-30, as-27)
nmod:poss(Queen-30, Theebaw-28)
case(Theebaw-28, 's-29)
nmod:as(same-26, Queen-30)
nmod:poss(seed-35, An-32)
case(An-32, '-33)
compound(seed-35, I-34)
appos(Queen-30, seed-35)
nmod:poss(a-smokin-38, her-36)
amod(a-smokin-38, first-37)
dep(seed-35, a-smokin-38)
case(cheroot-45, of-40)
det(whackin-42, a-41)
nmod:poss(cheroot-45, whackin-42)
case(whackin-42, '-43)
amod(cheroot-45, white-44)
nmod:of(jes-23, cheroot-45)
nmod:poss(a-wastin-49, An-47)
case(An-47, '-48)
nmod:poss(kisses-52, a-wastin-49)
case(a-wastin-49, '-50)
amod(kisses-52, Christian-51)
dobj(jes-23, kisses-52)
case(foot-59, on-53)
det(idol-57, an-54)
compound(idol-57, eathen-56)
nmod:poss(foot-59, idol-57)
case(idol-57, 's-58)
nmod:on(kisses-52, foot-59)
nmod:poss(idol-63, Bloomin-61)
case(Bloomin-61, '-62)
dep(kisses-52, idol-63)
acl(idol-63, made-64)
xcomp(made-64, o'mud-65)
dobj(Supi-yaw-lat-21, Wot-67)
nsubj(called-69, they-68)
acl:relcl(Wot-67, called-69)
det(Budd-73, the-70)
compound(Budd-73, Great-71)
compound(Budd-73, Gawd-72)
dobj(called-69, Budd-73)
compound(lot-76, Plucky-75)
dep(Budd-73, lot-76)
nsubj(cared-78, she-77)
acl:relcl(lot-76, cared-78)
case(idols-80, for-79)
nmod:for(cared-78, idols-80)
advmod(kissed-83, when-81)
nsubj(kissed-83, I-82)
advcl(cared-78, kissed-83)
dobj(kissed-83, er-85)
advmod(stud-88, where-86)
nsubj(stud-88, she-87)
acl:relcl(er-85, stud-88)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP
          (NP (DT the) (NN road))
          (PP (TO to)
            (NP (NNP Mandalay))))
        (: ...)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (DT the) (NN mist))
            (VP (VBD was)
              (PP (IN on)
                (NP
                  (NP (DT the) (JJ rice-fields) (DT an))
                  ('' ')
                  (SBAR
                    (S
                      (NP (DT the) (NN sun))
                      (VP (VBD was)
                        (NP
                          (NP (NN droppin) (POS '))
                          (JJ slow))))))))))))
    (, ,)
    (NP (PRP She))
    (VP (MD 'd)
      (VP (VB git)
        (NP (`` `)
          (NP (NN er) (JJ little) (NN banjo))
          (, an) ('' '))
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD 'd)
              (VP (VB sing) ('' '')
                (NP (NNP _) (NNP Kulla-lo-lo))))))))
    (. !)))

case(road-3, On-1)
det(road-3, the-2)
nmod:on(git-25, road-3)
case(Mandalay-5, to-4)
nmod:to(road-3, Mandalay-5)
advmod(rice-fields-13, When-7)
det(mist-9, the-8)
nsubj(rice-fields-13, mist-9)
cop(rice-fields-13, was-10)
case(rice-fields-13, on-11)
det(rice-fields-13, the-12)
acl:relcl(road-3, rice-fields-13)
dep(rice-fields-13, an-14)
det(sun-17, the-16)
nsubj(droppin-19, sun-17)
cop(droppin-19, was-18)
acl:relcl(rice-fields-13, droppin-19)
case(droppin-19, '-20)
amod(droppin-19, slow-21)
nsubj(git-25, She-23)
aux(git-25, 'd-24)
root(ROOT-0, git-25)
compound(banjo-29, er-27)
amod(banjo-29, little-28)
dobj(git-25, banjo-29)
nsubj(sing-34, she-32)
aux(sing-34, 'd-33)
dep(git-25, sing-34)
compound(Kulla-lo-lo-37, _-36)
dobj(sing-34, Kulla-lo-lo-37)

(ROOT
  (S
    (NP
      (NP
        (NP (NN _) ('' ''))
        (SBAR
          (S
            (PP (IN With)
              (NP (`` `)
                (NP
                  (NP (NN er) (NN arm))
                  (PP (IN upon)
                    (NP (PRP$ my) (NN shoulder))))
                (, an) ('' ') (`` `)
                (NP
                  (NP (NN er) (NN cheek))
                  (NP
                    (NP (NN agin) (POS '))
                    (JJ my) (NN cheek)))))
            (NP (PRP We))
            (VP (VBP useter)
              (VP (VB watch)
                (NP (DT the) (NNS steamers)))))))
      (, an) ('' ')
      (NP (DT the) (NN _)))
    (VP (VBZ hathis)
      (NP
        (NP (JJ _) (NN pilin) (POS '))
        (NN teak)))
    (. .)))

nsubj(hathis-28, _-1)
case(arm-6, With-3)
compound(arm-6, er-5)
nmod:with(useter-20, arm-6)
case(shoulder-9, upon-7)
nmod:poss(shoulder-9, my-8)
nmod:upon(arm-6, shoulder-9)
compound(cheek-14, er-13)
dep(arm-6, cheek-14)
nmod:poss(cheek-18, agin-15)
case(agin-15, '-16)
amod(cheek-18, my-17)
dep(cheek-14, cheek-18)
nsubj(useter-20, We-19)
acl:relcl(_-1, useter-20)
xcomp(useter-20, watch-21)
det(steamers-23, the-22)
dobj(watch-21, steamers-23)
det(_-27, the-26)
dep(_-1, _-27)
root(ROOT-0, hathis-28)
amod(pilin-30, _-29)
nmod:poss(teak-32, pilin-30)
case(pilin-30, '-31)
dobj(hathis-28, teak-32)

(ROOT
  (S
    (NP
      (NP (JJ Elephints) (NN a-pilin) (POS '))
      (NN teak))
    (PP (IN In)
      (NP (DT the) (JJ sludgy) (, ,) (JJ squdgy) (NN creek)))
    (, ,)
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP (DT the) (NN silence))
        (VP (`` `) (VBP ung)
          (NP (DT that)))))
    (`` `)
    (ADVP (RB eavy))
    (NP (PRP you))
    (VP (VBD was)
      (ADJP (`` `) (RB arf) (JJ afraid)
        (S
          (VP (TO to)
            (VP (VB speak))))))
    (. !)))

amod(a-pilin-2, Elephints-1)
nmod:poss(teak-4, a-pilin-2)
case(a-pilin-2, '-3)
nsubj(afraid-24, teak-4)
nsubj:xsubj(speak-26, teak-4)
case(creek-10, In-5)
det(creek-10, the-6)
amod(creek-10, sludgy-7)
amod(creek-10, squdgy-9)
nmod:in(afraid-24, creek-10)
advmod(ung-16, Where-12)
det(silence-14, the-13)
nsubj(ung-16, silence-14)
advcl(afraid-24, ung-16)
dobj(ung-16, that-17)
advmod(afraid-24, eavy-19)
nsubj(afraid-24, you-20)
nsubj:xsubj(speak-26, you-20)
cop(afraid-24, was-21)
advmod(afraid-24, arf-23)
root(ROOT-0, afraid-24)
mark(speak-26, to-25)
xcomp(afraid-24, speak-26)

(ROOT
  (FRAG
    (PP (IN On)
      (NP (DT the) (NN road)
        (S
          (VP (TO to)
            (VP (VB Mandalay)
              (S (: ...)
                (S (CC But)
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ 's)
                        (NP
                          (NP (DT all) (NN shove))
                          (VP (VBN be'ind)
                            (NP
                              (NP (PRP me))
                              (: --)
                              (NP
                                (ADVP (RB long) (RB ago))
                                (DT an))
                              ('' '))
                            (NP
                              (NP (NN fur))
                              (ADVP (RB away))))))))
                  (, ,)
                  (NP (NNP An) (POS '))
                  (ADVP (RB there))
                  (VP (VBP ai) (RB n't)
                    (NP (DT no) (`` `) (JJ busses) (NN runnin) ('' '))
                    (PP (IN from)
                      (NP (DT the) (NNP Bank)))
                    (PP (TO to)
                      (NP (NNP Mandalay)))))
                (: ;)
                (S
                  (NP
                    (NP (NNP An) (POS '))
                    (NN I))
                  (VP (VBP 'm)
                    (NP
                      (NP (NN learnin) (POS '))
                      (`` `) (NN ere))
                    (PP (IN in)
                      (NP (NNP London)))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (DT the) (JJ ten-year) (NN soldier))
                        (VP (VBZ tells))))))))))))
    (: :) (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP 've) (`` `)
            (VP (VBN eard)
              (NP (DT the) (NNP East) (NN a-callin) ('' '))))))
      (, ,)
      (NP (PRP you))
      (VP (MD wo) (RB n't)
        (ADVP (RB never))
        (VP (`` `) (VB eed)
          (NP
            (NP (NN naught))
            (ADJP (RB else))))))
    (. .) ('' '')))

case(road-3, On-1)
det(road-3, the-2)
nmod:on(eed-70, road-3)
mark(Mandalay-5, to-4)
acl(road-3, Mandalay-5)
cc(runnin-30, But-7)
nsubj(shove-11, that-8)
cop(shove-11, 's-9)
det(shove-11, all-10)
advcl(runnin-30, shove-11)
acl(shove-11, be'ind-12)
iobj(be'ind-12, me-13)
advmod(ago-16, long-15)
advmod(an-17, ago-16)
dep(me-13, an-17)
dobj(be'ind-12, fur-19)
advmod(fur-19, away-20)
nsubj(runnin-30, An-22)
case(An-22, '-23)
advmod(runnin-30, there-24)
cop(runnin-30, ai-25)
neg(runnin-30, n't-26)
neg(runnin-30, no-27)
amod(runnin-30, busses-29)
xcomp(Mandalay-5, runnin-30)
case(Bank-34, from-32)
det(Bank-34, the-33)
nmod:from(runnin-30, Bank-34)
case(Mandalay-36, to-35)
nmod:to(runnin-30, Mandalay-36)
nmod:poss(I-40, An-38)
case(An-38, '-39)
nsubj(ere-45, I-40)
cop(ere-45, 'm-41)
nmod:poss(ere-45, learnin-42)
case(learnin-42, '-43)
parataxis(runnin-30, ere-45)
case(London-47, in-46)
nmod:in(ere-45, London-47)
dobj(tells-52, what-48)
det(soldier-51, the-49)
amod(soldier-51, ten-year-50)
nsubj(tells-52, soldier-51)
dep(ere-45, tells-52)
mark(eard-59, If-55)
nsubj(eard-59, you-56)
aux(eard-59, 've-57)
advcl(eed-70, eard-59)
det(a-callin-62, the-60)
compound(a-callin-62, East-61)
dobj(eard-59, a-callin-62)
nsubj(eed-70, you-65)
aux(eed-70, wo-66)
neg(eed-70, n't-67)
neg(eed-70, never-68)
root(ROOT-0, eed-70)
dobj(eed-70, naught-71)
amod(naught-71, else-72)

(ROOT
  (INTJ (UH No) (. !)))

root(ROOT-0, No-1)

(ROOT
  (S
    (S
      (S
        (NP (PRP you))
        (VP (MD wo) (RB n't)
          (VP (`` `)
            (ADVP (RB eed))
            (VB nothin) ('' ')
            (NP (RB else)))))
      (CC But)
      (S
        (S
          (NP
            (NP (PRP them))
            (ADJP (RB spicy) (JJ garlic)))
          (VP (VBZ smells)))
        (, ,)
        (S
          (NP
            (NP
              (NP (NNP An) (POS '))
              (NP (DT the) (NN sunshine)))
            (, an) ('' ')
            (NP (DT the) (JJ palm-trees) (DT an))
            ('' ')
            (NP (DT the) (JJ tinkly) (NNS temple-bells))
            (: ;))
          (PP (IN On)
            (NP
              (NP (DT the) (NN road))
              (PP (TO to)
                (NP (NNP Mandalay))))))
        (: ...)
        (S
          (S
            (NP (PRP I))
            (VP (VBP am)
              (NP
                (NP
                  (NP (JJ sick) (NN o) (POS '))
                  (NN wastin) ('' ') (NN leather))
                (PP (IN on)
                  (NP
                    (NP (DT these) (JJ gritty) (NN pavin))
                    ('' ') (: -)
                    (NP (NNS stones)))))))
          (, ,)
          (S
            (NP (NNP An) (POS ') (DT the) (NNP blasted) (NNP Henglish) (NN drizzle) (NNS wakes))
            (NP
              (NP (DT the) (NN fever))
              (PP (IN in)
                (NP (PRP$ my) (NNS bones)))))
          (: ;)
          (S
            (NP
              (NP (NNP Tho) (POS '))
              (NN I))
            (VP (VBZ walks)
              (SBAR (IN with)
                (S
                  (NP (NN fifty))
                  (`` `)
                  (VP (VBZ ousemaids)
                    (NP (JJ outer) (NNP Chelsea))
                    (PP (TO to)
                      (NP (DT the) (NNP Strand)))
                    (, ,)
                    (NP
                      (NP (NNP An))
                      ('' ')
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBZ talks)
                            (NP
                              (NP (DT a) (NN lot) (NN o) (POS '))
                              (NN lovin)))))))
                  ('' '))))))))
    (, ,)
    (CC but)
    (S
      (NP (NN wot))
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP understand))))))
    (. ?)))

nsubj(nothin-6, you-1)
aux(nothin-6, wo-2)
neg(nothin-6, n't-3)
advmod(nothin-6, eed-5)
root(ROOT-0, nothin-6)
dobj(nothin-6, else-8)
cc(nothin-6, But-9)
nsubj(smells-13, them-10)
advmod(garlic-12, spicy-11)
amod(them-10, garlic-12)
conj:but(nothin-6, smells-13)
parataxis(smells-13, An-15)
case(An-15, '-16)
det(sunshine-18, the-17)
dep(An-15, sunshine-18)
det(palm-trees-22, the-21)
dep(An-15, palm-trees-22)
dep(palm-trees-22, an-23)
det(temple-bells-27, the-25)
amod(temple-bells-27, tinkly-26)
dep(An-15, temple-bells-27)
case(road-31, On-29)
det(road-31, the-30)
dep(An-15, road-31)
case(Mandalay-33, to-32)
nmod:to(road-31, Mandalay-33)
nsubj(leather-42, I-35)
cop(leather-42, am-36)
amod(o-38, sick-37)
nmod:poss(leather-42, o-38)
case(o-38, '-39)
compound(leather-42, wastin-40)
parataxis(smells-13, leather-42)
case(pavin-46, on-43)
det(pavin-46, these-44)
amod(pavin-46, gritty-45)
nmod:on(leather-42, pavin-46)
dep(pavin-46, stones-49)
nmod:poss(wakes-57, An-51)
case(wakes-57, '-52)
det(wakes-57, the-53)
compound(wakes-57, blasted-54)
compound(wakes-57, Henglish-55)
compound(wakes-57, drizzle-56)
dep(fever-59, wakes-57)
det(fever-59, the-58)
dep(leather-42, fever-59)
case(bones-62, in-60)
nmod:poss(bones-62, my-61)
nmod:in(fever-59, bones-62)
nmod:poss(I-66, Tho-64)
case(Tho-64, '-65)
nsubj(walks-67, I-66)
parataxis(leather-42, walks-67)
mark(ousemaids-71, with-68)
nsubj(ousemaids-71, fifty-69)
advcl(walks-67, ousemaids-71)
amod(Chelsea-73, outer-72)
dobj(ousemaids-71, Chelsea-73)
case(Strand-76, to-74)
det(Strand-76, the-75)
nmod:to(ousemaids-71, Strand-76)
dobj(ousemaids-71, An-78)
nsubj(talks-81, they-80)
acl:relcl(An-78, talks-81)
det(o-84, a-82)
compound(o-84, lot-83)
nmod:poss(lovin-86, o-84)
case(o-84, '-85)
dobj(talks-81, lovin-86)
cc(nothin-6, but-89)
nsubj(do-91, wot-90)
conj:but(nothin-6, do-91)
nsubj(understand-93, they-92)
ccomp(do-91, understand-93)

(ROOT
  (FRAG
    (NP (JJ Beefy) (NN face) (, an) ('' '))
    (S
      (VP (VB grubby)
        (NP (`` `)
          (NP (NNP and))
          (: --)
          (NP (NNP Law)))))
    (. !)))

amod(face-2, Beefy-1)
root(ROOT-0, face-2)
dep(face-2, grubby-5)
dobj(grubby-5, and-7)
dep(and-7, Law-9)

(ROOT
  (S
    (NP (NN wot))
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP understand)))))
    (. ?)))

nsubj(do-2, wot-1)
root(ROOT-0, do-2)
nsubj(understand-4, they-3)
ccomp(do-2, understand-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (NP
        (NP (DT a) (NN neater))
        (, ,)
        (NP
          (NP (NN sweeter) (NN maiden))
          (PP (IN in)
            (NP (DT a)
              (ADJP (JJR cleaner) (, ,) (JJR greener))
              (NN land))))))
    (. !)))

nsubj('ve-2, I-1)
root(ROOT-0, 've-2)
det(neater-4, a-3)
dobj('ve-2, neater-4)
compound(maiden-7, sweeter-6)
appos(neater-4, maiden-7)
case(land-13, in-8)
det(land-13, a-9)
dep(greener-12, cleaner-10)
amod(land-13, greener-12)
nmod:in(maiden-7, land-13)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP
          (NP (DT the) (NN road))
          (PP (TO to)
            (NP (NNP Mandalay))))
        (: ...)
        (NP
          (NP (NNP Ship))
          (SBAR
            (S
              (NP (PRP me))
              (VP (VBZ somewheres)
                (ADVP (RB east))
                (PP (IN of)
                  (NP (NNP Suez))))))
          (, ,)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (JJS best))
              (VP (VBZ is)
                (PP (IN like)
                  (NP
                    (NP (DT the) (JJS worst))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB Where))
                      (S
                        (NP (EX there))
                        (VP (VBP are) (RB n't)
                          (NP
                            (NP (DT no) (CD Ten) (NNS Commandments))
                            (, an) ('' ')
                            (PRN
                              (S
                                (NP (DT a) (NN man))
                                (VP (MD can)
                                  (VP (VB raise)
                                    (NP (DT a) (NN thirst))))))
                            (: ;)
                            (SBAR
                              (S
                                (PP (IN For)
                                  (NP (DT the) (NNS temple-bells)))
                                (VP (VBP are)
                                  (ADJP (JJ callin) ('' ')))))))))
                    (, ,))))))
          (, an) ('' '))))
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB there))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD would)
            (VP (VB be)
              (PRN (: --)
                (PP (IN By)
                  (NP (DT the) (JJ old) (NNP Moulmein) (NNP Pagoda)))
                (, ,)
                (S
                  (VP (VBG looking)
                    (ADJP (JJ lazy))
                    (PP (IN at)
                      (NP (DT the) (NN sea)))))
                (: ;))
              (NP
                (NP (IN On) (DT the) (NN road))
                (PP (TO to)
                  (NP
                    (NP (NNP Mandalay))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB Where))
                      (S
                        (NP (DT the) (JJ old) (NNP Flotilla))
                        (VP (VBD lay) (, ,)
                          (PP (IN With)
                            (NP (PRP$ our) (JJ sick)))
                          (PP (IN beneath)
                            (NP (DT the) (NNS awnings)))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP we))
                              (VP (VBD went)
                                (PP (TO to)
                                  (NP (NNP Mandalay)))))))))))))))))
    (. !)))

case(road-3, On-1)
det(road-3, the-2)
nmod:on('s-48, road-3)
case(Mandalay-5, to-4)
nmod:to(road-3, Mandalay-5)
dep(road-3, Ship-7)
nsubj(somewheres-9, me-8)
acl:relcl(Ship-7, somewheres-9)
advmod(somewheres-9, east-10)
case(Suez-12, of-11)
nmod:of(somewheres-9, Suez-12)
advmod(worst-20, where-14)
det(best-16, the-15)
nsubj(worst-20, best-16)
cop(worst-20, is-17)
case(worst-20, like-18)
det(worst-20, the-19)
acl:relcl(Ship-7, worst-20)
advmod(are-24, Where-22)
expl(are-24, there-23)
acl:relcl(worst-20, are-24)
neg(are-24, n't-25)
neg(Commandments-28, no-26)
nummod(Commandments-28, Ten-27)
nsubj(are-24, Commandments-28)
det(man-32, a-31)
nsubj(raise-34, man-32)
aux(raise-34, can-33)
dep(Commandments-28, raise-34)
det(thirst-36, a-35)
dobj(raise-34, thirst-36)
case(temple-bells-40, For-38)
det(temple-bells-40, the-39)
nmod:for(callin-42, temple-bells-40)
cop(callin-42, are-41)
acl:relcl(Commandments-28, callin-42)
nsubj('s-48, it-47)
root(ROOT-0, 's-48)
advmod('s-48, there-49)
mark(road-69, that-50)
nsubj(road-69, I-51)
aux(road-69, would-52)
cop(road-69, be-53)
case(Pagoda-59, By-55)
det(Pagoda-59, the-56)
amod(Pagoda-59, old-57)
compound(Pagoda-59, Moulmein-58)
nmod:by(looking-61, Pagoda-59)
parataxis(road-69, looking-61)
xcomp(looking-61, lazy-62)
case(sea-65, at-63)
det(sea-65, the-64)
nmod:at(looking-61, sea-65)
amod(road-69, On-67)
det(road-69, the-68)
ccomp('s-48, road-69)
case(Mandalay-71, to-70)
nmod:to(road-69, Mandalay-71)
advmod(lay-77, Where-73)
det(Flotilla-76, the-74)
amod(Flotilla-76, old-75)
nsubj(lay-77, Flotilla-76)
acl:relcl(Mandalay-71, lay-77)
case(sick-81, With-79)
nmod:poss(sick-81, our-80)
nmod:with(lay-77, sick-81)
case(awnings-84, beneath-82)
det(awnings-84, the-83)
nmod:beneath(lay-77, awnings-84)
advmod(went-87, when-85)
nsubj(went-87, we-86)
advcl(lay-77, went-87)
case(Mandalay-89, to-88)
nmod:to(went-87, Mandalay-89)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP (DT the) (NN road))
        (PP (TO to)
          (NP (NNP Mandalay)))))
    (, ,)
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP
          (NP (DT the) (NN flyin) (POS '))
          (JJ -) (NNS fishes))
        (VP (VBP play))))
    (, ,)
    (S
      (NP (NNP An) (POS ')))
    (NP (DT the) (NN dawn))
    (VP (VBZ comes)
      (PRT (RP up))
      (PP (IN like)
        (NP (NN thunder) (NN outer) (NNP China) (`` `) (NNP crost) (DT the) (NNP Bay))))
    (. !)))

case(road-3, On-1)
det(road-3, the-2)
nmod:on(comes-19, road-3)
case(Mandalay-5, to-4)
nmod:to(road-3, Mandalay-5)
advmod(play-13, Where-7)
det(flyin-9, the-8)
nmod:poss(fishes-12, flyin-9)
case(flyin-9, '-10)
amod(fishes-12, --11)
nsubj(play-13, fishes-12)
advcl(comes-19, play-13)
dep(comes-19, An-15)
case(An-15, '-16)
det(dawn-18, the-17)
nsubj(comes-19, dawn-18)
root(ROOT-0, comes-19)
compound:prt(comes-19, up-20)
case(Bay-28, like-21)
compound(Bay-28, thunder-22)
compound(Bay-28, outer-23)
compound(Bay-28, China-24)
compound(Bay-28, crost-26)
det(Bay-28, the-27)
nmod:like(comes-19, Bay-28)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP TROOPIN) (POS '))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (PRP$ Our) (NN Army))
            (PP (IN in)
              (NP (DT the) (NNP East))))
          (-RRB- -RRB-))
        (NN Troopin) ('' '))
      (, ,)
      (NP (NN troopin) ('' '))
      (, ,))
    (VP (VBP troopin) ('' ')
      (PP (TO to)
        (NP (DT the) (NN sea)))
      (: :)
      (S (`` `)
        (S
          (NP
            (NP (NNP Ere) (POS 's))
            (NNP September))
          (VP (VBP come)
            (ADVP (RB again))))
        (: --)
        (S
          (NP (DT the) (JJ six-year) (NNS men))
          (VP (VBP are)
            (ADJP (JJ free))))))
    (. .)))

nmod:poss(Troopin-10, TROOPIN-1)
case(TROOPIN-1, '-2)
nmod:poss(Army-5, Our-4)
dep(Troopin-10, Army-5)
case(East-8, in-6)
det(East-8, the-7)
nmod:in(Army-5, East-8)
nsubj(troopin-16, Troopin-10)
appos(Troopin-10, troopin-13)
root(ROOT-0, troopin-16)
case(sea-20, to-18)
det(sea-20, the-19)
nmod:to(troopin-16, sea-20)
nmod:poss(September-25, Ere-23)
case(Ere-23, 's-24)
nsubj(come-26, September-25)
parataxis(troopin-16, come-26)
advmod(come-26, again-27)
det(men-31, the-29)
amod(men-31, six-year-30)
nsubj(free-33, men-31)
cop(free-33, are-32)
parataxis(come-26, free-33)

(ROOT
  (S
    (NP (NNP O))
    (VP (VBP leave)
      (SBAR
        (S
          (NP (DT the) (NN dead))
          (VP (VBD be'ind)
            (NP (PRP us))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP they))
                (VP (MD can) (RB not)
                  (VP (VB come)
                    (PRT (RP away))
                    (PP (TO To)
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (DT the) (NN ship))
                          (VP (VBZ 's)
                            (ADJP (JJ a-coalin) ('' ')
                              (PP (IN up)
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBZ takes)
                                      (S
                                        (NP (PRP us))
                                        (`` `)
                                        (ADJP (RB ome) (JJ to-day))))))))))))))))))))
    (. .)))

nsubj(leave-2, O-1)
root(ROOT-0, leave-2)
det(dead-4, the-3)
nsubj(be'ind-5, dead-4)
ccomp(leave-2, be'ind-5)
dobj(be'ind-5, us-6)
mark(come-12, for-8)
nsubj(come-12, they-9)
aux(come-12, can-10)
neg(come-12, not-11)
advcl(be'ind-5, come-12)
compound:prt(come-12, away-13)
mark(a-coalin-19, To-14)
advmod(a-coalin-19, where-15)
det(ship-17, the-16)
nsubj(a-coalin-19, ship-17)
cop(a-coalin-19, 's-18)
advcl(come-12, a-coalin-19)
mark(takes-23, up-21)
nsubj(takes-23, that-22)
advcl(a-coalin-19, takes-23)
dep(to-day-27, us-24)
advmod(to-day-27, ome-26)
xcomp(takes-23, to-day-27)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (NP
          (NP (NN goin) (POS '))
          (`` `) (NN ome))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBP 're)
        (NP
          (NP (NN goin) (POS '))
          (`` `) (NN ome))))
    (, ,)
    (S
      (NP (PRP$ Our) (NN ship))
      (VP (VBZ is)
        (PP (IN at)
          (NP (DT the) (NN shore)))))
    (, ,)
    (S
      (NP
        (NP (NNP An) (POS '))
        (NN you))
      (VP (MD must)
        (VP (VB pack)
          (S
            (NP (PRP your))
            (`` `)
            (NP (NN aversack))))))
    (, ,) (IN For)
    (S
      (NP (PRP we))
      (VP (MD wo) (RB n't)
        (VP (VB come)
          (PRT (RP back))
          (ADVP (DT no) (RBR more)))))
    (. .)))

nsubj(ome-6, We-1)
cop(ome-6, 're-2)
nmod:poss(ome-6, goin-3)
case(goin-3, '-4)
root(ROOT-0, ome-6)
nsubj(ome-13, we-8)
cop(ome-13, 're-9)
nmod:poss(ome-13, goin-10)
case(goin-10, '-11)
parataxis(ome-6, ome-13)
nmod:poss(ship-16, Our-15)
nsubj(shore-20, ship-16)
cop(shore-20, is-17)
case(shore-20, at-18)
det(shore-20, the-19)
parataxis(ome-6, shore-20)
nmod:poss(you-24, An-22)
case(An-22, '-23)
nsubj(pack-26, you-24)
aux(pack-26, must-25)
parataxis(ome-6, pack-26)
dep(aversack-29, your-27)
xcomp(pack-26, aversack-29)
dep(ome-6, For-31)
nsubj(come-35, we-32)
aux(come-35, wo-33)
neg(come-35, n't-34)
parataxis(ome-6, come-35)
compound:prt(come-35, back-36)
neg(more-38, no-37)
advmod(come-35, more-38)

(ROOT
  (S
    (S
      (VP (VBD Ho) (, ,)
        (SQ (VBP do) (RB n't)
          (NP (PRP you))
          (VP (VB grieve)
            (PP (IN for)
              (NP
                (NP (PRP me))
                (, ,)
                (NP (PRP$ My) (JJ lovely) (NN Mary-Ann))))))))
    (, ,) (IN For)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB marry)
          (S
            (NP (PRP you))
            (ADJP (JJ yit)
              (PP (IN on)
                (NP (DT a) (NN fourp) (`` `) (NN ny) (NN bit))))
            (PP (IN As)
              (NP (DT a) (JJ time-expired) (NN man)))))))
    (. .)))

root(ROOT-0, Ho-1)
aux(grieve-6, do-3)
neg(grieve-6, n't-4)
nsubj(grieve-6, you-5)
dep(Ho-1, grieve-6)
case(me-8, for-7)
nmod:for(grieve-6, me-8)
nmod:poss(Mary-Ann-12, My-10)
amod(Mary-Ann-12, lovely-11)
appos(me-8, Mary-Ann-12)
dep(Ho-1, For-14)
nsubj(marry-17, I-15)
aux(marry-17, 'll-16)
parataxis(Ho-1, marry-17)
nsubj(yit-19, you-18)
xcomp(marry-17, yit-19)
case(bit-25, on-20)
det(bit-25, a-21)
compound(bit-25, fourp-22)
compound(bit-25, ny-24)
nmod:on(yit-19, bit-25)
case(man-29, As-26)
det(man-29, a-27)
amod(man-29, time-expired-28)
dep(yit-19, man-29)

(ROOT
  (S
    (NP (DT The) (NNP _) (NNP Malabar) (NNP _))
    (VP (VBZ 's)
      (PP (IN in)
        (NP
          (NP (`` `)
            (NP (NN arbour))
            (PP (IN with)
              (NP
                (NP (DT the) (NNP _) (NNP Jumner) (NNP _))
                (PP (IN at)
                  (NP (`` `)
                    (NP (NN er) (NN tail))
                    (, ,)
                    (NP
                      (NP (NNP An) (POS '))
                      (NP (DT the) (NN time-expired) (POS 's))
                      (NNP waitin))))))
            ('' '))
          (PP (IN of))))
      (`` `)
      (SQ (VBZ is)
        (NP
          (NP (NNS orders))
          (PP (IN for)
            (PP (TO to)
              (NP (NN sail)))))))
    (. .)))

det(_-4, The-1)
compound(_-4, _-2)
compound(_-4, Malabar-3)
nsubj(arbour-8, _-4)
cop(arbour-8, 's-5)
case(arbour-8, in-6)
root(ROOT-0, arbour-8)
case(_-13, with-9)
det(_-13, the-10)
compound(_-13, _-11)
compound(_-13, Jumner-12)
nmod:with(arbour-8, _-13)
case(tail-17, at-14)
compound(tail-17, er-16)
nmod:at(_-13, tail-17)
nmod:poss(waitin-24, An-19)
case(An-19, '-20)
det(time-expired-22, the-21)
nmod:poss(waitin-24, time-expired-22)
case(time-expired-22, 's-23)
appos(tail-17, waitin-24)
acl(arbour-8, of-26)
dep(arbour-8, is-28)
nsubj(is-28, orders-29)
case(sail-32, for-30)
case(sail-32, to-31)
acl(orders-29, sail-32)

(ROOT
  (INTJ (UH Ho) (. !)))

root(ROOT-0, Ho-1)

(ROOT
  (S
    (NP
      (NP (DT the) (JJ weary) (NN waitin) ('' '))
      (SBAR
        (WHADVP (WRB when))
        (S
          (S
            (PP (IN on)
              (NP (JJ Khyber) (`` `) (NNS ills)))
            (NP (PRP we))
            (VP (VBD lay)))
          (, ,)
          (CC But)
          (S
            (NP (DT the) (NN time-expired))
            (VP (VBZ 's)
              (ADJP (JJ waitin) ('' ')
                (PP (IN of)))
              (`` `)
              (SQ (VBZ is)
                (NP (NNS orders))))))))
    (VP (`` `) (VBP ome)
      (NP (NN to-day)))
    (. .)))

det(waitin-3, the-1)
amod(waitin-3, weary-2)
nsubj(ome-24, waitin-3)
advmod(lay-11, when-5)
case(ills-9, on-6)
amod(ills-9, Khyber-7)
nmod:on(lay-11, ills-9)
nsubj(lay-11, we-10)
acl:relcl(waitin-3, lay-11)
cc(lay-11, But-13)
det(time-expired-15, the-14)
nsubj(waitin-17, time-expired-15)
cop(waitin-17, 's-16)
acl:relcl(waitin-3, waitin-17)
conj:but(lay-11, waitin-17)
nmod(waitin-17, of-19)
dep(waitin-17, is-21)
nsubj(is-21, orders-22)
root(ROOT-0, ome-24)
dobj(ome-24, to-day-25)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (VP (MD 'll)
          (VP (VB turn)
            (NP (PRP us))
            (PRT (RP out))
            (PP (IN at)
              (NP
                (NP
                  (NP
                    (NP (NNP Portsmouth) (NNP wharf))
                    (PP (IN in)
                      (NP
                        (NP (JJ cold))
                        (, an) ('' ')
                        (NP
                          (ADJP (JJ wet))
                          (DT an))))
                    (POS '))
                  (NN rain))
                (, ,)
                (NP
                  (NP (DT All) (NN wearin) (POS '))
                  (JJ Injian) (NN cotton) (NN kit)))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP we))
        (VP (MD will) (RB not)
          (VP (VB complain))))
      (: ;)
      (S
        (NP (PRP They))
        (VP (MD 'll)
          (VP (VB kill)
            (NP (PRP us))
            (PP (IN of)
              (NP (NN pneumonia)))))))
    (PRN (: --)
      (PP (IN for)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (NP (PRP$ their) (JJ little) (NN way))))))
      (: --))
    (CC But)
    (S
      (PP (IN damn)
        (NP
          (NP (DT the) (NN chills)
            (CC and)
            (NN fever))
          (, ,)
          (NP (NNS men))))
      (, ,)
      (NP (PRP we))
      (VP (VBP 're)
        (NP
          (NP (NN goin) (POS '))
          (`` `) (JJ ome) (NN to-day))))
    (. !)))

nsubj(turn-3, They-1)
aux(turn-3, 'll-2)
root(ROOT-0, turn-3)
dobj(turn-3, us-4)
compound:prt(turn-3, out-5)
case(rain-16, at-6)
compound(wharf-8, Portsmouth-7)
nmod:poss(rain-16, wharf-8)
case(cold-10, in-9)
nmod:in(wharf-8, cold-10)
dep(cold-10, wet-13)
dep(wet-13, an-14)
case(wharf-8, '-15)
nmod:at(turn-3, rain-16)
det(wearin-19, All-18)
nmod:poss(kit-23, wearin-19)
case(wearin-19, '-20)
amod(kit-23, Injian-21)
compound(kit-23, cotton-22)
appos(rain-16, kit-23)
cc(turn-3, but-25)
nsubj(complain-29, we-26)
aux(complain-29, will-27)
neg(complain-29, not-28)
conj:but(turn-3, complain-29)
nsubj(kill-33, They-31)
aux(kill-33, 'll-32)
conj:but(turn-3, kill-33)
dobj(kill-33, us-34)
case(pneumonia-36, of-35)
nmod:of(kill-33, pneumonia-36)
mark(way-43, for-38)
nsubj(way-43, that-39)
cop(way-43, 's-40)
nmod:poss(way-43, their-41)
amod(way-43, little-42)
dep(turn-3, way-43)
cc(turn-3, But-45)
case(chills-48, damn-46)
det(chills-48, the-47)
nmod:damn(to-day-60, chills-48)
cc(chills-48, and-49)
conj:and(chills-48, fever-50)
nmod:damn(to-day-60, fever-50)
appos(chills-48, men-52)
nsubj(to-day-60, we-54)
cop(to-day-60, 're-55)
nmod:poss(to-day-60, goin-56)
case(goin-56, '-57)
amod(to-day-60, ome-59)
conj:but(turn-3, to-day-60)

(ROOT
  (S
    (NP
      (NP (NNP Troopin) (POS '))
      (, ,)
      (VP (VBN troopin) ('' '))
      (, ,))
    (NP (NN winter))
    (VP (VBZ 's)
      (ADVP (RB round) (RB again)))
    (. !)))

nsubj('s-8, Troopin-1)
case(Troopin-1, '-2)
acl(Troopin-1, troopin-4)
nsubj('s-8, winter-7)
root(ROOT-0, 's-8)
advmod(again-10, round-9)
advmod('s-8, again-10)

(ROOT
  (S
    (VP (VB See)
      (SBAR
        (S
          (S
            (NP (DT the) (JJ new) (NN draf))
            (VP (VBZ 's)
              (ADJP (JJ pourin) ('' ')
                (PP (IN in)
                  (PP (IN for)
                    (NP
                      (NP (DT the) (JJ old) (NN campaign))
                      (: ;)
                      (NP
                        (NP (NNP Ho))
                        (, ,)
                        (NP
                          (NP (PRP you))
                          (NP (JJ poor) (NNS recruities))))))))))
          (, ,)
          (CC but)
          (S
            (NP (PRP you))
            (VP (VBP 've)
              (VP (VBN got)
                (S
                  (VP (TO to)
                    (VP (VB earn)
                      (NP (PRP$ your) (NN pay))
                      (: --)
                      (SBARQ
                        (WHNP (WP What))
                        (SQ (VBZ 's)
                          (NP
                            (NP (DT the) (JJ last))
                            (PP (IN from)
                              (NP
                                (NP (NNP Lunnon))
                                (, ,)
                                (NP (NNS lads))))))
                        (. ?)))))))))))))

root(ROOT-0, See-1)
det(draf-4, the-2)
amod(draf-4, new-3)
nsubj(pourin-6, draf-4)
cop(pourin-6, 's-5)
dep(See-1, pourin-6)
case(campaign-12, in-8)
case(campaign-12, for-9)
det(campaign-12, the-10)
amod(campaign-12, old-11)
nmod:for(pourin-6, campaign-12)
dep(campaign-12, Ho-14)
appos(Ho-14, you-16)
amod(recruities-18, poor-17)
dep(you-16, recruities-18)
cc(pourin-6, but-20)
nsubj(got-23, you-21)
nsubj:xsubj(earn-25, you-21)
aux(got-23, 've-22)
dep(See-1, got-23)
conj:but(pourin-6, got-23)
mark(earn-25, to-24)
xcomp(got-23, earn-25)
nmod:poss(pay-27, your-26)
dobj(earn-25, pay-27)
ccomp(earn-25, What-29)
cop(What-29, 's-30)
det(last-32, the-31)
nsubj(What-29, last-32)
case(Lunnon-34, from-33)
nmod:from(last-32, Lunnon-34)
appos(Lunnon-34, lads-36)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (VP (VBN goin) ('' ')
        (NP (RB there) (JJ to-day))))
    (. .)))

nsubjpass(goin-3, We-1)
auxpass(goin-3, 're-2)
root(ROOT-0, goin-3)
advmod(to-day-6, there-5)
dobj(goin-3, to-day-6)

(ROOT
  (S
    (NP
      (NP (NNP Troopin) (POS '))
      (, ,)
      (VP (VBN troopin) ('' '))
      (, ,))
    (VP (VBP give)
      (NP
        (NP (DT another) (NN cheer))
        (: --) (`` `)
        (S
          (NP (NNP Ere))
          (VP (VBZ 's)
            (PP (TO to)
              (NP
                (NP (JJ English) (NNS women))
                (, an) ('' ')
                (NP
                  (NP (DT a) (NN quart))
                  (PP (IN of)
                    (NP (JJ English) (NN beer))))))))))
    (. .)))

nsubj(give-7, Troopin-1)
case(Troopin-1, '-2)
acl(Troopin-1, troopin-4)
root(ROOT-0, give-7)
det(cheer-9, another-8)
dobj(give-7, cheer-9)
nsubj(women-16, Ere-12)
cop(women-16, 's-13)
case(women-16, to-14)
amod(women-16, English-15)
dep(cheer-9, women-16)
det(quart-20, a-19)
dep(women-16, quart-20)
case(beer-23, of-21)
amod(beer-23, English-22)
nmod:of(quart-20, beer-23)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Colonel))
      (, an) ('' ')
      (NP
        (NP (DT the) (NN regiment))
        (, an) ('' ')
        (SBAR
          (WHNP (DT all))
          (S
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP 've)
                  (VP (VBN got)
                    (S
                      (VP (TO to)
                        (VP (VB stay))))))))
            (, ,)
            (NP
              (NP (NNP Gawd) (POS 's))
              (NN mercy))
            (VP (VBP strike)
              (S
                (NP (PRP 'em))
                (ADJP (JJ gentle)))))))
      (: --))
    (VP (VBZ Whoop))
    (. !)))

det(Colonel-2, The-1)
nsubj(Whoop-23, Colonel-2)
det(regiment-6, the-5)
dep(Colonel-2, regiment-6)
nsubj(got-12, regiment-6)
nsubj:xsubj(stay-14, regiment-6)
dobj(strike-19, all-9)
ref(regiment-6, who-10)
aux(got-12, 've-11)
advcl(strike-19, got-12)
mark(stay-14, to-13)
xcomp(got-12, stay-14)
nmod:poss(mercy-18, Gawd-16)
case(Gawd-16, 's-17)
nsubj(strike-19, mercy-18)
acl:relcl(regiment-6, strike-19)
nsubj(gentle-21, 'em-20)
xcomp(strike-19, gentle-21)
root(ROOT-0, Whoop-23)

(ROOT
  (S
    (NP (PRP we))
    (VP (VBP 're)
      (NP
        (NP (NN goin) (POS '))
        (`` `) (JJ ome) (NN to-day)))
    (. .)))

nsubj(to-day-7, we-1)
cop(to-day-7, 're-2)
nmod:poss(to-day-7, goin-3)
case(goin-3, '-4)
amod(to-day-7, ome-6)
root(ROOT-0, to-day-7)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (NP
          (NP (NN goin) (POS '))
          (`` `) (NN ome))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBP 're)
        (NP
          (NP (NN goin) (POS '))
          (`` `) (NN ome))))
    (, ,)
    (S
      (NP (PRP$ Our) (NN ship))
      (VP (VBZ is)
        (PP (IN at)
          (NP (DT the) (NN shore)))))
    (, ,)
    (S
      (NP
        (NP (NNP An) (POS '))
        (NN you))
      (VP (MD must)
        (VP (VB pack)
          (S
            (NP (PRP your))
            (`` `)
            (NP (NN aversack))))))
    (, ,) (IN For)
    (S
      (NP (PRP we))
      (VP (MD wo) (RB n't)
        (VP (VB come)
          (PRT (RP back))
          (ADVP (DT no) (RBR more)))))
    (. .)))

nsubj(ome-6, We-1)
cop(ome-6, 're-2)
nmod:poss(ome-6, goin-3)
case(goin-3, '-4)
root(ROOT-0, ome-6)
nsubj(ome-13, we-8)
cop(ome-13, 're-9)
nmod:poss(ome-13, goin-10)
case(goin-10, '-11)
parataxis(ome-6, ome-13)
nmod:poss(ship-16, Our-15)
nsubj(shore-20, ship-16)
cop(shore-20, is-17)
case(shore-20, at-18)
det(shore-20, the-19)
parataxis(ome-6, shore-20)
nmod:poss(you-24, An-22)
case(An-22, '-23)
nsubj(pack-26, you-24)
aux(pack-26, must-25)
parataxis(ome-6, pack-26)
dep(aversack-29, your-27)
xcomp(pack-26, aversack-29)
dep(ome-6, For-31)
nsubj(come-35, we-32)
aux(come-35, wo-33)
neg(come-35, n't-34)
parataxis(ome-6, come-35)
compound:prt(come-35, back-36)
neg(more-38, no-37)
advmod(come-35, more-38)

(ROOT
  (S
    (S
      (VP (VBD Ho) (, ,)
        (SQ (VBP do) (RB n't)
          (NP (PRP you))
          (VP (VB grieve)
            (PP (IN for)
              (NP
                (NP (PRP me))
                (, ,)
                (NP (PRP$ My) (JJ lovely) (NN Mary-Ann))))))))
    (, ,) (IN For)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB marry)
          (S
            (NP (PRP you))
            (ADJP (JJ yit)
              (PP (IN on)
                (NP (DT a) (NN fourp) (`` `) (NN ny) (NN bit))))
            (PP (IN As)
              (NP (DT a) (JJ time-expired) (NN man)))))))
    (. .)))

root(ROOT-0, Ho-1)
aux(grieve-6, do-3)
neg(grieve-6, n't-4)
nsubj(grieve-6, you-5)
dep(Ho-1, grieve-6)
case(me-8, for-7)
nmod:for(grieve-6, me-8)
nmod:poss(Mary-Ann-12, My-10)
amod(Mary-Ann-12, lovely-11)
appos(me-8, Mary-Ann-12)
dep(Ho-1, For-14)
nsubj(marry-17, I-15)
aux(marry-17, 'll-16)
parataxis(Ho-1, marry-17)
nsubj(yit-19, you-18)
xcomp(marry-17, yit-19)
case(bit-25, on-20)
det(bit-25, a-21)
compound(bit-25, fourp-22)
compound(bit-25, ny-24)
nmod:on(yit-19, bit-25)
case(man-29, As-26)
det(man-29, a-27)
amod(man-29, time-expired-28)
dep(yit-19, man-29)

(ROOT
  (S
    (NP (DT THE) (NNP WIDOW))
    (VP (VBZ 'S)
      (ADJP (JJ PARTY))
      (SBAR
        (SBARQ (`` ``)
          (WHADVP (WRB Where))
          (SQ (VBP have)
            (NP (PRP you))
            (VP (VBN been)
              (NP
                (NP (DT this) (NN while)
                  (PRT (RP away)))
                (, ,)
                (NP (NNP Johnnie) (, ,) (NNP Johnnie)))))
          (. ?) ('' ''))))))

det(WIDOW-2, THE-1)
nsubj(PARTY-4, WIDOW-2)
cop(PARTY-4, 'S-3)
root(ROOT-0, PARTY-4)
advmod(while-11, Where-6)
aux(while-11, have-7)
nsubj(while-11, you-8)
cop(while-11, been-9)
det(while-11, this-10)
dep(PARTY-4, while-11)
dep(while-11, away-12)
compound(Johnnie-16, Johnnie-14)
appos(while-11, Johnnie-16)

(ROOT
  (S (`` `)
    (S
      (NP
        (NP (NNP Long))
        (PP (IN with)
          (NP
            (NP (DT the) (NN rest))
            (PP (IN on)
              (NP (DT a) (NN picnic))))))
      (VP (VBD lay)))
    (, ,)
    (NP
      (NP (NNP Johnnie))
      (, ,)
      (NP (PRP$ my) (NN Johnnie))
      (, ,))
    (VP (VBP aha))
    (. !)))

nsubj(lay-9, Long-2)
case(rest-5, with-3)
det(rest-5, the-4)
nmod:with(Long-2, rest-5)
case(picnic-8, on-6)
det(picnic-8, a-7)
nmod:on(rest-5, picnic-8)
ccomp(aha-16, lay-9)
nsubj(aha-16, Johnnie-11)
nmod:poss(Johnnie-14, my-13)
appos(Johnnie-11, Johnnie-14)
root(ROOT-0, aha-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD called)
      (SBAR
        (S
          (NP (PRP us))
          (VP
            (ADVP (IN out)
              (PP (IN of)
                (NP
                  (NP (DT the) (NN barrack-yard))
                  (PP (TO To)
                    (NP (NNP Gawd))))))
            (VBZ knows)
            (SBAR
              (WHADVP (WRB where))
              (S
                (S
                  (PP (IN from)
                    (NP (NNP Gosport) (NNP Hard)))
                  (, ,)
                  (CC And)
                  (NP (PRP you))
                  (VP (MD ca) (RB n't)
                    (VP (VB refuse)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP you))
                          (VP (VBP get)
                            (NP (DT the) (NN card))))))))
                (, ,)
                (CC And)
                (S
                  (NP (DT the) (NNP Widow))
                  (VP (VBZ gives)
                    (NP (DT the) (NN party))))))))))
    (. .)))

nsubj(called-2, They-1)
root(ROOT-0, called-2)
nsubj(knows-10, us-3)
case(barrack-yard-7, out-4)
mwe(out-4, of-5)
det(barrack-yard-7, the-6)
nmod:out_of(knows-10, barrack-yard-7)
case(Gawd-9, To-8)
nmod:to(barrack-yard-7, Gawd-9)
ccomp(called-2, knows-10)
advmod(refuse-20, where-11)
case(Hard-14, from-12)
compound(Hard-14, Gosport-13)
nmod:from(refuse-20, Hard-14)
cc(refuse-20, And-16)
ccomp(knows-10, you-17)
conj:and(refuse-20, you-17)
aux(refuse-20, ca-18)
neg(refuse-20, n't-19)
ccomp(knows-10, refuse-20)
advmod(get-23, when-21)
nsubj(get-23, you-22)
advcl(refuse-20, get-23)
det(card-25, the-24)
dobj(get-23, card-25)
cc(refuse-20, And-27)
det(Widow-29, the-28)
nsubj(gives-30, Widow-29)
ccomp(knows-10, gives-30)
conj:and(refuse-20, gives-30)
det(party-32, the-31)
dobj(gives-30, party-32)

(ROOT
  (PRN (-LRB- -LRB-)
    (FRAG
      (NP
        (NP (NNP _) (NNP Bugle) (NNP _))
        (: :)
        (NP (NNP Ta)))
      (: --)
      (NP
        (NP (NN rara))
        (: --)
        (NP (NN ra-ra-rara)))
      (. !))
    (-RRB- -RRB-)))

compound(_-4, _-2)
compound(_-4, Bugle-3)
root(ROOT-0, _-4)
dep(_-4, Ta-6)
dep(_-4, rara-8)
dep(rara-8, ra-ra-rara-10)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB get)
        (S
          (VP (TO to)
            (VP
              (VP (VB eat))
              (CC and)
              (VP (VB drink) (, ,)
                (FRAG
                  (INTJ (UH Johnnie))
                  (, ,)
                  (NP (NNP Johnnie)))))))))
    (. ?) ('' '')))

dep(get-5, What-2)
aux(get-5, did-3)
nsubj(get-5, you-4)
nsubj:xsubj(eat-7, you-4)
nsubj:xsubj(drink-9, you-4)
root(ROOT-0, get-5)
mark(eat-7, to-6)
xcomp(get-5, eat-7)
cc(eat-7, and-8)
xcomp(get-5, drink-9)
conj:and(eat-7, drink-9)
discourse(Johnnie-13, Johnnie-11)
dep(drink-9, Johnnie-13)

(ROOT
  (S
    (S
      (VP (VBG Standing)
        (NP (NN water))
        (ADVP (RB as) (JJ thick))
        (PP (IN as)
          (NP (NN ink)))))
    (, ,)
    (NP
      (NP (NNP Johnnie))
      (, ,)
      (NP (PRP$ my) (NN Johnnie))
      (, ,))
    (VP (VBP aha))
    (. !)))

advcl(aha-13, Standing-1)
dobj(Standing-1, water-2)
advmod(thick-4, as-3)
advmod(Standing-1, thick-4)
case(ink-6, as-5)
nmod:as(Standing-1, ink-6)
nsubj(aha-13, Johnnie-8)
nmod:poss(Johnnie-11, my-10)
appos(Johnnie-8, Johnnie-11)
root(ROOT-0, aha-13)

(ROOT
  (S
    (S
      (NP (DT A) (NN bit))
      (VP
        (NP
          (NP (NNP o) (POS '))
          (NN beef)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD were)
                (VP
                  (NP (CD three) (NN year))
                  (VBN stored))))))
        (, ,)
        (NP
          (NP
            (NP (DT A) (NN bit) (NN o) (POS '))
            (NN mutton))
          (ADJP (RB as) (JJ tough)
            (PP (IN as)
              (NP (DT a) (NN board)))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT a) (NN fowl))
        (NP (PRP we)))
      (VP (VBD killed)
        (PP (IN with)
          (NP
            (NP
              (NP (DT a) (NN sergeant) (POS 's))
              (NN sword))
            (, ,)
            (SBAR
              (WHADVP (WRB When))
              (S
                (NP (DT the) (NNP Widow))
                (VP (VBP give)
                  (NP (DT the) (NN party)))))))))
    (. .)))

det(bit-2, A-1)
nsubj(beef-5, bit-2)
nmod:poss(beef-5, o-3)
case(o-3, '-4)
root(ROOT-0, beef-5)
nsubjpass(stored-10, that-6)
auxpass(stored-10, were-7)
nummod(year-9, three-8)
nmod:tmod(stored-10, year-9)
ccomp(beef-5, stored-10)
det(o-14, A-12)
compound(o-14, bit-13)
nmod:poss(mutton-16, o-14)
case(o-14, '-15)
dobj(beef-5, mutton-16)
advmod(tough-18, as-17)
amod(mutton-16, tough-18)
case(board-21, as-19)
det(board-21, a-20)
nmod:as(tough-18, board-21)
cc(beef-5, And-23)
det(fowl-25, a-24)
nsubj(killed-27, fowl-25)
dep(fowl-25, we-26)
conj:and(beef-5, killed-27)
case(sword-32, with-28)
det(sergeant-30, a-29)
nmod:poss(sword-32, sergeant-30)
case(sergeant-30, 's-31)
nmod:with(killed-27, sword-32)
advmod(give-37, When-34)
det(Widow-36, the-35)
nsubj(give-37, Widow-36)
acl:relcl(sword-32, give-37)
det(party-39, the-38)
dobj(give-37, party-39)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB do)
        (PP (IN for)
          (NP
            (NP (NNS knives)
              (CC and)
              (NNS forks))
            (, ,)
            (NP (NNP Johnnie) (, ,) (NNP Johnnie))))))
    (. ?) ('' '')))

dobj(do-5, What-2)
aux(do-5, did-3)
nsubj(do-5, you-4)
root(ROOT-0, do-5)
case(knives-7, for-6)
nmod:for(do-5, knives-7)
cc(knives-7, and-8)
nmod:for(do-5, forks-9)
conj:and(knives-7, forks-9)
compound(Johnnie-13, Johnnie-11)
appos(knives-7, Johnnie-13)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBZ carries)
        (NP (PRP 'em))
        (PP (IN with)
          (NP (PRP us)))
        (SBAR
          (WHADVP (WRB wherever))
          (S
            (NP (PRP we))
            (VP (VBZ walks))))))
    (, ,)
    (NP
      (NP (NNP Johnnie))
      (, ,)
      (NP (PRP$ my) (NN Johnnie))
      (, ,))
    (VP (VBP aha))
    (. !)))

nsubj(carries-2, We-1)
ccomp(aha-15, carries-2)
dobj(carries-2, 'em-3)
case(us-5, with-4)
nmod:with(carries-2, us-5)
advmod(walks-8, wherever-6)
nsubj(walks-8, we-7)
advcl(carries-2, walks-8)
nsubj(aha-15, Johnnie-10)
nmod:poss(Johnnie-13, my-12)
appos(Johnnie-10, Johnnie-13)
root(ROOT-0, aha-15)

(ROOT
  (S (CC And)
    (S
      (NP (DT some))
      (VP (VBD was)
        (VP (VBN sliced))))
    (CC and)
    (S
      (S
        (NP (DT some))
        (VP (VBD was)
          (VP (VBN halved))))
      (, ,)
      (CC And)
      (S
        (NP (DT some))
        (VP (VBD was)
          (VP (JJ crimped))))
      (CC and)
      (S
        (S
          (NP (DT some))
          (VP (VBD was)
            (VP (VBN carved))))
        (, ,)
        (CC And)
        (S
          (NP (DT some))
          (VP (VBD was)
            (VP (VBN gutted)))))
      (CC and)
      (S
        (NP (DT some))
        (VP (VBD was)
          (VP (VBN starved) (, ,)
            (SBAR
              (WHADVP (WRB When))
              (S
                (NP (DT the) (NNP Widow))
                (VP (VBP give)
                  (NP (DT the) (NN party)))))))))
    (. .)))

cc(sliced-4, And-1)
nsubjpass(sliced-4, some-2)
auxpass(sliced-4, was-3)
root(ROOT-0, sliced-4)
cc(sliced-4, and-5)
nsubjpass(halved-8, some-6)
auxpass(halved-8, was-7)
conj:and(sliced-4, halved-8)
cc(halved-8, And-10)
nsubj(crimped-13, some-11)
aux(crimped-13, was-12)
conj:and(sliced-4, crimped-13)
conj:and(halved-8, crimped-13)
cc(halved-8, and-14)
nsubjpass(carved-17, some-15)
auxpass(carved-17, was-16)
conj:and(sliced-4, carved-17)
conj:and(halved-8, carved-17)
cc(carved-17, And-19)
nsubjpass(gutted-22, some-20)
auxpass(gutted-22, was-21)
conj:and(halved-8, gutted-22)
conj:and(carved-17, gutted-22)
cc(halved-8, and-23)
nsubjpass(starved-26, some-24)
auxpass(starved-26, was-25)
conj:and(sliced-4, starved-26)
conj:and(halved-8, starved-26)
advmod(give-31, When-28)
det(Widow-30, the-29)
nsubj(give-31, Widow-30)
advcl(starved-26, give-31)
det(party-33, the-32)
dobj(give-31, party-33)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ ha) (`` ')
        (S
          (NP (PRP you))
          (VP (VBN done)
            (PP (IN with)
              (NP
                (NP (PDT half) (PRP$ your) (NN mess))
                (, ,)
                (NP (NNP Johnnie) (, ,) (NNP Johnnie))))))))
    (. ?) ('' '')))

dobj(ha-3, What-2)
root(ROOT-0, ha-3)
nsubj(done-6, you-5)
dep(ha-3, done-6)
case(mess-10, with-7)
det:predet(mess-10, half-8)
nmod:poss(mess-10, your-9)
nmod:with(done-6, mess-10)
compound(Johnnie-14, Johnnie-12)
appos(mess-10, Johnnie-14)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD could) (RB n't)
        (VP (VB do)
          (NP (JJR more)))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD would) (RB n't)
        (VP (VB do)
          (NP
            (NP (JJR less))
            (, ,)
            (NP (NNP Johnnie))
            (, ,)
            (NP (PRP$ my) (NN Johnnie))
            (, ,)
            (NP (NN aha))))))
    (. !)))

nsubj(do-4, They-1)
aux(do-4, could-2)
neg(do-4, n't-3)
root(ROOT-0, do-4)
dobj(do-4, more-5)
cc(do-4, and-6)
nsubj(do-10, they-7)
aux(do-10, would-8)
neg(do-10, n't-9)
conj:and(do-4, do-10)
dobj(do-10, less-11)
appos(less-11, Johnnie-13)
nmod:poss(Johnnie-16, my-15)
appos(less-11, Johnnie-16)
appos(less-11, aha-18)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD ate)
        (NP (PRP$ their) (NN whack))))
    (CC and)
    (S
      (S
        (NP (PRP they))
        (VP (VBD drank)
          (NP (PRP$ their) (NN fill))))
      (, ,)
      (CC And)
      (S
        (NP (PRP I))
        (VP (VBP think)
          (SBAR
            (S
              (NP (DT the) (NNS rations))
              (VP (VBZ has)
                (VP (VBN made)
                  (S
                    (NP (PRP them))
                    (ADJP (RB ill)))))))))
      (, ,)
      (S
        (PP (IN For)
          (NP (PDT half) (PRP$ my) (NN comp)))
        (`` `)
        (ADVP (RB ny))
        (VP (VBZ 's)
          (VP (VBG lying)
            (ADVP (RB still))
            (SBAR
              (WHADVP (WRB Where))
              (S
                (NP (DT the) (NNP Widow))
                (VP (VBP give)
                  (NP (DT the) (NN party)))))))))
    (. .)))

nsubj(ate-2, They-1)
root(ROOT-0, ate-2)
nmod:poss(whack-4, their-3)
dobj(ate-2, whack-4)
cc(ate-2, and-5)
nsubj(drank-7, they-6)
nsubj(lying-28, they-6)
conj:and(ate-2, drank-7)
nmod:poss(fill-9, their-8)
dobj(drank-7, fill-9)
cc(drank-7, And-11)
nsubj(think-13, I-12)
conj:and(ate-2, think-13)
conj:and(drank-7, think-13)
det(rations-15, the-14)
nsubj(made-17, rations-15)
aux(made-17, has-16)
ccomp(think-13, made-17)
nsubj(ill-19, them-18)
xcomp(made-17, ill-19)
case(comp-24, For-21)
det:predet(comp-24, half-22)
nmod:poss(comp-24, my-23)
nmod:for(lying-28, comp-24)
advmod(lying-28, ny-26)
aux(lying-28, 's-27)
conj:and(ate-2, lying-28)
conj:and(drank-7, lying-28)
advmod(lying-28, still-29)
advmod(give-33, Where-30)
det(Widow-32, the-31)
nsubj(give-33, Widow-32)
advcl(lying-28, give-33)
det(party-35, the-34)
dobj(give-33, party-35)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBD did)
      (NP (PRP you))
      (VP (VB get)
        (ADVP (RB away))
        (: --)
        (ADVP (RB away))
        (, ,)
        (NP
          (NP (NNP Johnnie))
          (, ,)
          (NP (NNP Johnnie)))))
    (. ?) ('' '')))

advmod(get-5, How-2)
aux(get-5, did-3)
nsubj(get-5, you-4)
root(ROOT-0, get-5)
advmod(get-5, away-6)
advmod(get-5, away-8)
dobj(get-5, Johnnie-10)
appos(Johnnie-10, Johnnie-12)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP (DT the) (JJ broad) (NN o) (POS '))
        (NP
          (NP (PRP$ my) (NN back))
          (PP (IN at)
            (NP (DT the) (NN end) (NN o) ('' '))))))
    (NP (DT the) (NN day))
    (, ,)
    (NP
      (NP (NNP Johnnie))
      (, ,)
      (NP (PRP$ my) (NN Johnnie))
      (, ,))
    (VP (VBP aha))
    (. !)))

case(o-4, On-1)
det(o-4, the-2)
amod(o-4, broad-3)
nmod:'(aha-21, o-4)
case(o-4, '-5)
nmod:poss(back-7, my-6)
dep(o-4, back-7)
case(o-11, at-8)
det(o-11, the-9)
compound(o-11, end-10)
nmod:at(back-7, o-11)
det(day-14, the-13)
nmod:tmod(aha-21, day-14)
nsubj(aha-21, Johnnie-16)
nmod:poss(Johnnie-19, my-18)
appos(Johnnie-16, Johnnie-19)
root(ROOT-0, aha-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD comed)
        (PRT (RP away))
        (PP (IN like)
          (NP
            (NP (DT a) (NN bleedin) (POS '))
            (NN toff)))))
    (, ,) (IN For)
    (S
      (NP (PRP I))
      (VP (VBD got)
        (NP (CD four) (NNS niggers))
        (S
          (VP (TO to)
            (VP (VB carry)
              (NP (PRP me))
              (PRT (RP off)))))))
    (, ,)
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBD lay)
          (PP (IN in)
            (NP
              (NP (DT the) (NN bight))
              (PP (IN of)
                (NP (DT a) (NN canvas) (NN trough)))))
          (, ,)
          (SBAR
            (WHADVP (WRB When))
            (S
              (NP (DT the) (NNP Widow))
              (VP (VBP give)
                (NP (DT the) (NN party))))))))
    (. .)))

nsubj(comed-2, I-1)
root(ROOT-0, comed-2)
compound:prt(comed-2, away-3)
case(toff-8, like-4)
det(bleedin-6, a-5)
nmod:poss(toff-8, bleedin-6)
case(bleedin-6, '-7)
nmod:like(comed-2, toff-8)
dep(comed-2, For-10)
nsubj(got-12, I-11)
parataxis(comed-2, got-12)
nummod(niggers-14, four-13)
dobj(got-12, niggers-14)
mark(carry-16, to-15)
advcl(got-12, carry-16)
dobj(carry-16, me-17)
compound:prt(carry-16, off-18)
mark(lay-22, As-20)
nsubj(lay-22, I-21)
dep(comed-2, lay-22)
case(bight-25, in-23)
det(bight-25, the-24)
nmod:in(lay-22, bight-25)
case(trough-29, of-26)
det(trough-29, a-27)
compound(trough-29, canvas-28)
nmod:of(bight-25, trough-29)
advmod(give-34, When-31)
det(Widow-33, the-32)
nsubj(give-34, Widow-33)
advcl(lay-22, give-34)
det(party-36, the-35)
dobj(give-34, party-36)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBD was)
      (NP
        (NP (DT the) (NN end))
        (PP (IN of)
          (NP
            (NP (PDT all) (DT the) (NN show))
            (, ,)
            (NP (NNP Johnnie) (, ,) (NNP Johnnie))))))
    (. ?) ('' '')))

root(ROOT-0, What-2)
cop(What-2, was-3)
det(end-5, the-4)
nsubj(What-2, end-5)
case(show-9, of-6)
det:predet(show-9, all-7)
det(show-9, the-8)
nmod:of(end-5, show-9)
compound(Johnnie-13, Johnnie-11)
appos(show-9, Johnnie-13)

(ROOT
  (S
    (S
      (VP (VB Ask)
        (NP (PRP$ my) (NN Colonel))
        (, ,)
        (PP (IN for)
          (S
            (VP (VBG _)
              (SBAR
                (S
                  (NP (PRP I))
                  (ADVP (RB _))
                  (VP (VBP do) (RB n't)
                    (VP (VB know))))))))))
    (, ,)
    (NP
      (NP (NNP Johnnie))
      (, ,)
      (NP (PRP$ my) (NN Johnnie))
      (, ,))
    (VP (VBP aha))
    (. !)))

ccomp(aha-18, Ask-1)
nmod:poss(Colonel-3, my-2)
dobj(Ask-1, Colonel-3)
mark(_-6, for-5)
advcl(Ask-1, _-6)
nsubj(know-11, I-7)
advmod(know-11, _-8)
aux(know-11, do-9)
neg(know-11, n't-10)
ccomp(_-6, know-11)
nsubj(aha-18, Johnnie-13)
nmod:poss(Johnnie-16, my-15)
appos(Johnnie-13, Johnnie-16)
root(ROOT-0, aha-18)

(ROOT
  (S
    (S
      (S
        (NP (PRP We))
        (VP (VBD broke)
          (NP (DT a) (NNP King))))
      (CC and)
      (S
        (NP (PRP we))
        (VP (VBD built)
          (NP (DT a) (NN road)))))
    (: --)
    (S
      (NP (DT A) (NN court-house))
      (VP (VBZ stands)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NN reg) (`` `) (NN ment))
            (VP (VBD goed))))))
    (. .)))

nsubj(broke-2, We-1)
root(ROOT-0, broke-2)
det(King-4, a-3)
dobj(broke-2, King-4)
cc(broke-2, and-5)
nsubj(built-7, we-6)
conj:and(broke-2, built-7)
det(road-9, a-8)
dobj(built-7, road-9)
det(court-house-12, A-11)
nsubj(stands-13, court-house-12)
parataxis(broke-2, stands-13)
advmod(goed-19, where-14)
det(ment-18, the-15)
compound(ment-18, reg-16)
nsubj(goed-19, ment-18)
advcl(stands-13, goed-19)

(ROOT
  (S (CC And)
    (NP (DT the) (NN river))
    (VP (VBZ 's)
      (ADJP (JJ clean))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (JJ raw) (NN blood))
          (VP (VBD flowed)
            (SBAR
              (WHADVP (WRB When))
              (S
                (NP (DT the) (NNP Widow))
                (VP (VBP give)
                  (NP (DT the) (NN party)))))))))
    (. .)))

cc(clean-5, And-1)
det(river-3, the-2)
nsubj(clean-5, river-3)
cop(clean-5, 's-4)
root(ROOT-0, clean-5)
advmod(flowed-10, where-6)
det(blood-9, the-7)
amod(blood-9, raw-8)
nsubj(flowed-10, blood-9)
advcl(clean-5, flowed-10)
advmod(give-14, When-11)
det(Widow-13, the-12)
nsubj(give-14, Widow-13)
advcl(flowed-10, give-14)
det(party-16, the-15)
dobj(give-14, party-16)

(ROOT
  (PRN (-LRB- -LRB-)
    (FRAG
      (NP
        (NP (NNP _) (NNP Bugle) (NNP _))
        (: :)
        (NP (NNP Ta)))
      (: --)
      (NP
        (NP (NN rara))
        (: --)
        (NP (NN ra-ra-rara)))
      (. !))
    (-RRB- -RRB-)))

compound(_-4, _-2)
compound(_-4, Bugle-3)
root(ROOT-0, _-4)
dep(_-4, Ta-6)
dep(_-4, rara-8)
dep(rara-8, ra-ra-rara-10)

(ROOT
  (S
    (S
      (NP
        (NP (NNP FORD) (NNP O) (POS '))
        (NNP KABUL) (NNP RIVER) (NNP Kabul) (NN town))
      (VP (VBZ 's)
        (PP (IN by)
          (NP (NNP Kabul) (NN river)))))
    (: --)
    (S
      (NP
        (NP (NNP Blow))
        (NP (DT the) (NN bugle)))
      (, ,)
      (VP (VBP draw)
        (NP (DT the) (NN sword))
        (: --)
        (S
          (NP (EX There))
          (NP (PRP I))
          (S
            (VP (VBG lef) ('' ')
              (NP
                (NP (PRP$ my) (NN mate))
                (PP (IN for)
                  (NP
                    (NP (RB ever))
                    (, ,)
                    (NP (NNP Wet))
                    (, an) ('' ')
                    (VP (VBN drippin)))))
              ('' ')
              (PP (IN by)
                (NP (DT the) (NN ford))))))))
    (. .)))

compound(O-2, FORD-1)
nmod:poss(town-7, O-2)
case(O-2, '-3)
compound(town-7, KABUL-4)
compound(town-7, RIVER-5)
compound(town-7, Kabul-6)
nsubj(river-11, town-7)
cop(river-11, 's-8)
case(river-11, by-9)
compound(river-11, Kabul-10)
root(ROOT-0, river-11)
nsubj(draw-17, Blow-13)
det(bugle-15, the-14)
dep(Blow-13, bugle-15)
parataxis(river-11, draw-17)
det(sword-19, the-18)
dobj(draw-17, sword-19)
expl(lef-23, There-21)
dep(lef-23, I-22)
parataxis(draw-17, lef-23)
nmod:poss(mate-26, my-25)
dobj(lef-23, mate-26)
case(ever-28, for-27)
nmod:for(mate-26, ever-28)
appos(ever-28, Wet-30)
acl(ever-28, drippin-33)
case(ford-37, by-35)
det(ford-37, the-36)
nmod:by(lef-23, ford-37)

(ROOT
  (S
    (NP
      (NP (NNP Ford))
      (, ,)
      (VP (VBN ford))
      (, ,))
    (VP (VBD ford)
      (NP
        (NP
          (NP (NNP o) (POS '))
          (NNP Kabul) (NN river))
        (, ,)
        (NP
          (NP (NNP Ford) (NNP o) (POS '))
          (NNP Kabul) (NN river)))
      (PP (IN in)
        (NP (DT the) (NN dark))))
    (. !)))

nsubj(ford-5, Ford-1)
acl(Ford-1, ford-3)
root(ROOT-0, ford-5)
nmod:poss(river-9, o-6)
case(o-6, '-7)
compound(river-9, Kabul-8)
dobj(ford-5, river-9)
compound(o-12, Ford-11)
nmod:poss(river-15, o-12)
case(o-12, '-13)
compound(river-15, Kabul-14)
appos(river-9, river-15)
case(dark-18, in-16)
det(dark-18, the-17)
nmod:in(ford-5, dark-18)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN river))
        (PP (IN up)
          (NP
            (NP (NNP and) (NNP brimmin) (POS '))
            (, ,)
            (NP (DT an))
            ('' ')))
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ 's) (`` `)
              (VP (VB arf)
                (NP
                  (NP (DT a) (NN squadron) (NN swimmin) (POS '))
                  (`` `)
                  (NX (NNP Cross)
                    (PP
                      (NP
                        (NP (DT the) (JJ ford) (NN o) (POS '))
                        (NNP Kabul) (NN river))
                      (IN in)
                      (NP (DT the) (NN dark)))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(river-4, the-3)
nsubj('s-2, river-4)
case(brimmin-7, up-5)
compound(brimmin-7, and-6)
nmod:'(river-4, brimmin-7)
case(brimmin-7, '-8)
appos(brimmin-7, an-10)
expl('s-13, there-12)
acl:relcl(river-4, 's-13)
dep('s-13, arf-15)
det(swimmin-18, a-16)
compound(swimmin-18, squadron-17)
nmod:poss(Cross-21, swimmin-18)
case(swimmin-18, '-19)
nsubj('s-13, Cross-21)
det(o-24, the-22)
amod(o-24, ford-23)
nmod:poss(river-27, o-24)
case(o-24, '-25)
compound(river-27, Kabul-26)
nmod:in(Cross-21, river-27)
case(river-27, in-28)
det(dark-30, the-29)
dep(river-27, dark-30)

(ROOT
  (S
    (NP (NNP Kabul) (NN town))
    (VP (VBZ 's)
      (NP (DT a) (JJ blasted) (NN place))
      (PRN (: --)
        (S
          (VP
            (VP (VB Blow)
              (NP (DT the) (NN bugle)))
            (, ,)
            (VP (VB draw)
              (NP (DT the) (NN sword)))))
        (: --))
      (`` `)
      (NP
        (NP (NNP Strewth))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP sha)
              (NP (CC 'n')
                (NP (NN t) (NNS forget))
                (`` `)
                (SBAR
                  (S
                    (VP (VBZ is)
                      (NP
                        (NP (VB face) (NN Wet))
                        (, an) ('' ')
                        (VP (VBN drippin) ('' ')
                          (PP (IN by)
                            (NP (DT the) (NN ford))))))))))))))
    (. !)))

compound(town-2, Kabul-1)
nsubj(place-6, town-2)
cop(place-6, 's-3)
det(place-6, a-4)
amod(place-6, blasted-5)
root(ROOT-0, place-6)
parataxis(place-6, Blow-8)
det(bugle-10, the-9)
dobj(Blow-8, bugle-10)
dep(Blow-8, draw-12)
det(sword-14, the-13)
dobj(draw-12, sword-14)
dep(place-6, Strewth-17)
nsubj(sha-19, I-18)
acl:relcl(Strewth-17, sha-19)
cc(forget-22, 'n'-20)
compound(forget-22, t-21)
dobj(sha-19, forget-22)
cop(Wet-26, is-24)
dep(Wet-26, face-25)
acl:relcl(forget-22, Wet-26)
acl(Wet-26, drippin-29)
case(ford-33, by-31)
det(ford-33, the-32)
nmod:by(drippin-29, ford-33)

(ROOT
  (S
    (NP
      (NP (NNP Ford))
      (, ,)
      (VP (VBN ford))
      (, ,))
    (VP (VBD ford)
      (NP
        (NP
          (NP (NNP o) (POS '))
          (NNP Kabul) (NN river))
        (, ,)
        (NP
          (NP (NNP Ford) (NNP o) (POS '))
          (NNP Kabul) (NN river)))
      (PP (IN in)
        (NP (DT the) (NN dark))))
    (. !)))

nsubj(ford-5, Ford-1)
acl(Ford-1, ford-3)
root(ROOT-0, ford-5)
nmod:poss(river-9, o-6)
case(o-6, '-7)
compound(river-9, Kabul-8)
dobj(ford-5, river-9)
compound(o-12, Ford-11)
nmod:poss(river-15, o-12)
case(o-12, '-13)
compound(river-15, Kabul-14)
appos(river-9, river-15)
case(dark-18, in-16)
det(dark-18, the-17)
nmod:in(ford-5, dark-18)

(ROOT
  (S
    (VP (VB Keep)
      (NP (DT the) (NNS crossing-stakes))
      (PP (IN beside)
        (NP (PRP you)))
      (, ,)
      (NP
        (NP (DT an))
        ('' ')
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD will)
              (ADVP (RB surely))
              (VP (VB guide)
                (S
                  (NP (PRP you))
                  (VP (`` `) (VBG Cross)
                    (NP
                      (NP (DT the) (JJ ford) (NN o) (POS '))
                      (NNP Kabul) (NN river))
                    (PP (IN in)
                      (NP (DT the) (NN dark)))))))))))
    (. .)))

root(ROOT-0, Keep-1)
det(crossing-stakes-3, the-2)
dobj(Keep-1, crossing-stakes-3)
case(you-5, beside-4)
nmod:beside(Keep-1, you-5)
dobj(Keep-1, an-7)
nsubj(guide-12, they-9)
aux(guide-12, will-10)
advmod(guide-12, surely-11)
acl:relcl(an-7, guide-12)
nsubj(Cross-15, you-13)
ccomp(guide-12, Cross-15)
det(o-18, the-16)
amod(o-18, ford-17)
nmod:poss(river-21, o-18)
case(o-18, '-19)
compound(river-21, Kabul-20)
dobj(Cross-15, river-21)
case(dark-24, in-22)
det(dark-24, the-23)
nmod:in(Cross-15, dark-24)

(ROOT
  (S
    (S
      (NP (NNP Kabul) (NN town))
      (VP (VBZ is)
        (NP
          (NP (NN sun)
            (CC and)
            (NN dust))
          (: --)
          (NP
            (NP (NNP Blow))
            (NP (DT the) (NN bugle))))
        (, ,)
        (S
          (VP (VB draw)
            (NP (DT the) (NN sword))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBD 'd)
        (NP
          (NP
            (NP (NNP ha) (POS '))
            (JJ sooner) (JJ drownded) (JJ fust) (`` `) (NNP Stead))
          (PP (IN of) (`` `)
            (NP (NN im))))
        (PP (IN beside)
          (NP (DT the) (NN ford)))))
    (. .)))

compound(town-2, Kabul-1)
nsubj(sun-4, town-2)
cop(sun-4, is-3)
root(ROOT-0, sun-4)
cc(sun-4, and-5)
conj:and(sun-4, dust-6)
dep(sun-4, Blow-8)
det(bugle-10, the-9)
dep(Blow-8, bugle-10)
dep(sun-4, draw-12)
det(sword-14, the-13)
dobj(draw-12, sword-14)
nsubj('d-17, I-16)
parataxis(sun-4, 'd-17)
nmod:poss(Stead-24, ha-18)
case(ha-18, '-19)
amod(Stead-24, sooner-20)
amod(Stead-24, drownded-21)
amod(Stead-24, fust-22)
dobj('d-17, Stead-24)
case(im-27, of-25)
nmod:of(Stead-24, im-27)
case(ford-30, beside-28)
det(ford-30, the-29)
nmod:beside('d-17, ford-30)

(ROOT
  (S
    (NP
      (NP (NNP Ford))
      (, ,)
      (VP (VBN ford))
      (, ,))
    (VP (VBD ford)
      (NP
        (NP
          (NP (NNP o) (POS '))
          (NNP Kabul) (NN river))
        (, ,)
        (NP
          (NP (NNP Ford) (NNP o) (POS '))
          (NNP Kabul) (NN river)))
      (PP (IN in)
        (NP (DT the) (NN dark))))
    (. !)))

nsubj(ford-5, Ford-1)
acl(Ford-1, ford-3)
root(ROOT-0, ford-5)
nmod:poss(river-9, o-6)
case(o-6, '-7)
compound(river-9, Kabul-8)
dobj(ford-5, river-9)
compound(o-12, Ford-11)
nmod:poss(river-15, o-12)
case(o-12, '-13)
compound(river-15, Kabul-14)
appos(river-9, river-15)
case(dark-18, in-16)
det(dark-18, the-17)
nmod:in(ford-5, dark-18)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can) (`` `)
        (VP (VB ear)
          (NP (DT the) (`` `) (JJ orses) (NN threshin) ('' ')))))
    (, ,)
    (NP (PRP you))
    (VP (MD can) (`` `)
      (VP (VB ear)
        (NP
          (NP (DT the) (NNS men) (NN a-splashin) ('' '))
          (, ,) (`` `)
          (NP
            (NP (NNP Cross))
            (NP
              (NP (DT the) (JJ ford) (NN o) (POS '))
              (NNP Kabul) (NN river))))
        (PP (IN in)
          (NP (DT the) (NN dark)))))
    (. .)))

nsubj(ear-4, You-1)
aux(ear-4, can-2)
ccomp(ear-14, ear-4)
det(threshin-8, the-5)
amod(threshin-8, orses-7)
dobj(ear-4, threshin-8)
nsubj(ear-14, you-11)
aux(ear-14, can-12)
root(ROOT-0, ear-14)
det(a-splashin-17, the-15)
compound(a-splashin-17, men-16)
dobj(ear-14, a-splashin-17)
dep(a-splashin-17, Cross-21)
det(o-24, the-22)
amod(o-24, ford-23)
nmod:poss(river-27, o-24)
case(o-24, '-25)
compound(river-27, Kabul-26)
dep(Cross-21, river-27)
case(dark-30, in-28)
det(dark-30, the-29)
nmod:in(ear-14, dark-30)

(ROOT
  (S
    (S
      (NP (NNP Kabul) (NN town))
      (VP (VBD was)
        (S
          (NP (PRP ours))
          (VP (TO to)
            (VP (VB take))))))
    (: --)
    (S
      (NP
        (NP (NNP Blow))
        (SBAR
          (S
            (NP (DT the) (NN bugle))
            (, ,)
            (S
              (VP (VB draw)
                (NP
                  (NP (DT the) (NN sword))
                  (: --)
                  (S
                    (NP (PRP I))
                    (VP (MD 'd)
                      (VP (VB ha)))))))
            ('' ')
            (VP (VBD left)
              (NP (PRP it))
              (PP (IN for))))))
      (`` `)
      (VP (VBZ is)
        (NP (NN sake))
        (: --) (`` `)
        (NP
          (NP (NNP Im))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD left)
                (NP (PRP me))
                (PP (IN by)
                  (NP (DT the) (NN ford)))))))))
    (. .)))

compound(town-2, Kabul-1)
nsubj(was-3, town-2)
root(ROOT-0, was-3)
dobj(was-3, ours-4)
nsubj:xsubj(take-6, ours-4)
mark(take-6, to-5)
xcomp(was-3, take-6)
nsubj(sake-25, Blow-8)
det(bugle-10, the-9)
nsubj(left-20, bugle-10)
ccomp(left-20, draw-12)
det(sword-14, the-13)
dobj(draw-12, sword-14)
nsubj(ha-18, I-16)
aux(ha-18, 'd-17)
dep(sword-14, ha-18)
acl:relcl(Blow-8, left-20)
dobj(left-20, it-21)
nmod(left-20, for-22)
cop(sake-25, is-24)
parataxis(was-3, sake-25)
dep(sake-25, Im-28)
nsubj(left-30, Im-28)
ref(Im-28, that-29)
acl:relcl(Im-28, left-30)
dobj(left-30, me-31)
case(ford-34, by-32)
det(ford-34, the-33)
nmod:by(left-30, ford-34)

(ROOT
  (S
    (NP
      (NP (NNP Ford))
      (, ,)
      (VP (VBN ford))
      (, ,))
    (VP (VBD ford)
      (NP
        (NP
          (NP (NNP o) (POS '))
          (NNP Kabul) (NN river))
        (, ,)
        (NP
          (NP (NNP Ford) (NNP o) (POS '))
          (NNP Kabul) (NN river)))
      (PP (IN in)
        (NP (DT the) (NN dark))))
    (. !)))

nsubj(ford-5, Ford-1)
acl(Ford-1, ford-3)
root(ROOT-0, ford-5)
nmod:poss(river-9, o-6)
case(o-6, '-7)
compound(river-9, Kabul-8)
dobj(ford-5, river-9)
compound(o-12, Ford-11)
nmod:poss(river-15, o-12)
case(o-12, '-13)
compound(river-15, Kabul-14)
appos(river-9, river-15)
case(dark-18, in-16)
det(dark-18, the-17)
nmod:in(ford-5, dark-18)

(ROOT
  (S
    (NP
      (NP
        (NP (PRP It) (POS 's))
        (NN none))
      (ADJP (RB so) (JJ bloomin) ('' ') (JJ dry)))
    (ADVP (RB there))
    (: ;)
    (VP (VBZ ai) (RB n't)
      (NP (PRP you))
      (ADVP (RB never))
      (ADJP (JJ comin))
      ('' ')
      (S
        (VP (VB nigh)
          (ADVP (RB there))
          (, ,)
          (S
            (VP (`` `) (VBG Cross)
              (NP
                (NP (DT the) (JJ ford) (NN o) (POS '))
                (NNP Kabul) (NN river))
              (PP (IN in)
                (NP (DT the) (NN dark))))))))
    (. ?)))

nmod:poss(none-3, It-1)
case(It-1, 's-2)
nsubj(comin-14, none-3)
advmod(dry-7, so-4)
amod(dry-7, bloomin-5)
amod(none-3, dry-7)
advmod(comin-14, there-8)
cop(comin-14, ai-10)
neg(comin-14, n't-11)
dep(comin-14, you-12)
neg(comin-14, never-13)
root(ROOT-0, comin-14)
dep(comin-14, nigh-16)
advmod(nigh-16, there-17)
ccomp(nigh-16, Cross-20)
det(o-23, the-21)
amod(o-23, ford-22)
nmod:poss(river-26, o-23)
case(o-23, '-24)
compound(river-26, Kabul-25)
dobj(Cross-20, river-26)
case(dark-29, in-27)
det(dark-29, the-28)
nmod:in(Cross-20, dark-29)

(ROOT
  (S
    (NP (NNP Kabul) (NN town))
    (VP (MD 'll)
      (VP (VB go)
        (PP (TO to)
          (NP (NN hell)))
        (PRN (: --)
          (S
            (VP
              (VP (VB Blow)
                (NP (DT the) (NN bugle)))
              (, ,)
              (VP (VB draw)
                (NP
                  (NP (DT the) (NN sword))
                  (: --) (`` `)
                  (NP
                    (NP (NNP Fore))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBP see)
                          (S
                            (NP (PRP him))
                            (`` `)
                            (ADJP (JJ live)))))))
                  (, an))
                ('' ')
                (ADVP (RB well)))))
          (: --))
        (`` `) (VB Im)
        (NP (DT the) (JJS best))
        (PP (IN beside)
          (NP (DT the) (NN ford)))))
    (. .)))

compound(town-2, Kabul-1)
nsubj(go-4, town-2)
aux(go-4, 'll-3)
root(ROOT-0, go-4)
case(hell-6, to-5)
nmod:to(go-4, hell-6)
parataxis(go-4, Blow-8)
det(bugle-10, the-9)
dobj(Blow-8, bugle-10)
dep(Blow-8, draw-12)
det(sword-14, the-13)
dobj(draw-12, sword-14)
dep(sword-14, Fore-17)
nsubj(see-19, I-18)
acl:relcl(Fore-17, see-19)
dep(live-22, him-20)
xcomp(see-19, live-22)
advmod(draw-12, well-25)
dep(go-4, Im-28)
det(best-30, the-29)
dobj(go-4, best-30)
case(ford-33, beside-31)
det(ford-33, the-32)
nmod:beside(go-4, ford-33)

(ROOT
  (S
    (NP
      (NP (NNP Ford))
      (, ,)
      (VP (VBN ford))
      (, ,))
    (VP (VBD ford)
      (NP
        (NP
          (NP (NNP o) (POS '))
          (NNP Kabul) (NN river))
        (, ,)
        (NP
          (NP (NNP Ford) (NNP o) (POS '))
          (NNP Kabul) (NN river)))
      (PP (IN in)
        (NP (DT the) (NN dark))))
    (. !)))

nsubj(ford-5, Ford-1)
acl(Ford-1, ford-3)
root(ROOT-0, ford-5)
nmod:poss(river-9, o-6)
case(o-6, '-7)
compound(river-9, Kabul-8)
dobj(ford-5, river-9)
compound(o-12, Ford-11)
nmod:poss(river-15, o-12)
case(o-12, '-13)
compound(river-15, Kabul-14)
appos(river-9, river-15)
case(dark-18, in-16)
det(dark-18, the-17)
nmod:in(ford-5, dark-18)

(ROOT
  (S
    (S
      (NP (NNP Gawd))
      (`` `)
      (VP (VBP elp)
        (NP (PRP 'em))
        (SBAR (IN if)
          (S
            (NP (PRP they))
            (VP (VB blunder))))))
    (, ,) (IN for)
    (S
      (NP (PRP$ their) (NNS boots))
      (VP (MD 'll)
        (VP (VB pull)
          (NP (PRP 'em))
          (PP (IN under)))))
    (, ,)
    (PP (IN By)
      (NP
        (NP (DT the)
          (NP (JJ ford) (NN o) (POS '))
          (NNP Kabul) (NN river))
        (PP (IN in)
          (NP (DT the) (NN dark)))))
    (. .)))

nsubj(elp-3, Gawd-1)
root(ROOT-0, elp-3)
dobj(elp-3, 'em-4)
mark(blunder-7, if-5)
nsubj(blunder-7, they-6)
advcl(elp-3, blunder-7)
dep(elp-3, for-9)
nmod:poss(boots-11, their-10)
nsubj(pull-13, boots-11)
aux(pull-13, 'll-12)
parataxis(elp-3, pull-13)
dobj(pull-13, 'em-14)
nmod(pull-13, under-15)
case(river-23, By-17)
det(river-23, the-18)
amod(o-20, ford-19)
nmod:poss(river-23, o-20)
case(o-20, '-21)
compound(river-23, Kabul-22)
nmod:by(elp-3, river-23)
case(dark-26, in-24)
det(dark-26, the-25)
nmod:in(river-23, dark-26)

(ROOT
  (S
    (VP (VB Turn)
      (S
        (NP
          (NP
            (NP (PRP$ your) (`` `) (NN orse))
            (PP (IN from)
              (NP (NNP Kabul) (NN town))))
          (: --)
          (NP
            (NP (NNP Blow))
            (NP (DT the) (NN bugle)))
          (, ,))
        (VP
          (VP (VB draw)
            (NP (DT the) (NN sword)))
          (: --)
          (NP (`` `)
            (NP (NNP Im) (DT an))
            ('' ')
            (SBAR
              (S
                (NP (`` `)
                  (NP (NN arf))
                  (SBAR
                    (S
                      (NP (PRP$ my) (NN troop))
                      (VP (VBZ is)
                        (ADVP (RB down))
                        (, ,)
                        (ADVP (RB Down)))))
                  (, an) ('' '))
                (VP (VBN drownded)
                  (PP (IN by)
                    (NP (DT the) (NN ford))))))))))
    (. .)))

root(ROOT-0, Turn-1)
nmod:poss(orse-4, your-2)
nsubj(draw-13, orse-4)
case(town-7, from-5)
compound(town-7, Kabul-6)
nmod:from(orse-4, town-7)
dep(orse-4, Blow-9)
det(bugle-11, the-10)
dep(Blow-9, bugle-11)
ccomp(Turn-1, draw-13)
det(sword-15, the-14)
dobj(draw-13, sword-15)
dobj(draw-13, Im-18)
dep(Im-18, an-19)
nsubj(drownded-31, arf-22)
nmod:poss(troop-24, my-23)
nsubj(is-25, troop-24)
acl:relcl(arf-22, is-25)
advmod(is-25, down-26)
advmod(is-25, Down-28)
acl:relcl(Im-18, drownded-31)
case(ford-34, by-32)
det(ford-34, the-33)
nmod:by(drownded-31, ford-34)

(ROOT
  (S
    (NP
      (NP (NNP Ford))
      (, ,)
      (VP (VBN ford))
      (, ,))
    (VP (VBD ford)
      (NP
        (NP
          (NP (NNP o) (POS '))
          (NNP Kabul) (NN river))
        (, ,)
        (NP
          (NP (NNP Ford) (NNP o) (POS '))
          (NNP Kabul) (NN river)))
      (PP (IN in)
        (NP (DT the) (NN dark))))
    (. !)))

nsubj(ford-5, Ford-1)
acl(Ford-1, ford-3)
root(ROOT-0, ford-5)
nmod:poss(river-9, o-6)
case(o-6, '-7)
compound(river-9, Kabul-8)
dobj(ford-5, river-9)
compound(o-12, Ford-11)
nmod:poss(river-15, o-12)
case(o-12, '-13)
compound(river-15, Kabul-14)
appos(river-9, river-15)
case(dark-18, in-16)
det(dark-18, the-17)
nmod:in(ford-5, dark-18)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN river) (NN low))
          (, an) ('' ')
          (VP (VBN fallin) ('' ')))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT no) (NN use) (NN o) (POS '))
          (NN callin) ('' ')
          (S
            (VP (`` `) (VBG Cross)
              (NP
                (NP (DT the) (JJ ford) (NN o) (POS '))
                (NNP Kabul) (NN river))
              (PP (IN in)
                (NP (DT the) (NN dark))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(low-5, the-3)
compound(low-5, river-4)
nsubj('s-2, low-5)
acl(low-5, fallin-8)
cc('s-2, but-11)
nsubj(callin-19, it-12)
cop(callin-19, ai-13)
neg(callin-19, n't-14)
neg(o-17, no-15)
compound(o-17, use-16)
nmod:poss(callin-19, o-17)
case(o-17, '-18)
conj:but('s-2, callin-19)
dep(callin-19, Cross-22)
det(o-25, the-23)
amod(o-25, ford-24)
nmod:poss(river-28, o-25)
case(o-25, '-26)
compound(river-28, Kabul-27)
dobj(Cross-22, river-28)
case(dark-31, in-29)
det(dark-31, the-30)
nmod:in(Cross-22, dark-31)

(ROOT
  (S
    (S
      (NP
        (NP (NNP GENTLEMEN-RANKERS))
        (PP (TO To)
          (NP
            (NP (DT the) (NN legion))
            (PP (IN of)
              (NP (DT the) (VBN lost) (NNS ones)))))
        (, ,)
        (PP
          (PP (TO to)
            (NP
              (NP (DT the) (NN cohort))
              (PP (IN of)
                (NP (DT the) (NN damned)))))
          (, ,)
          (PP (TO To)
            (NP
              (NP (PRP$ my) (NNS brethren))
              (PP (IN in)
                (NP (PRP$ their) (NN sorrow)))))
          (ADVP (RB overseas)))
        (, ,)
        (NP
          (NP (NNP Sings))
          (SBAR
            (S
              (NP
                (NP (DT a) (NN gentleman))
                (PP (IN of)
                  (NP (NNP England))))
              (ADVP (RB cleanly))
              (VP (VBD bred)))))
        (, ,))
      (ADVP (RB machinely))
      (VP (VBD crammed)))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT a) (NN trooper))
        (PP (IN of)
          (NP
            (NP (DT the) (NNPS Empress))
            (, ,)
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP please))))))))
    (. .)))

nsubj(crammed-34, GENTLEMEN-RANKERS-1)
case(legion-4, To-2)
det(legion-4, the-3)
nmod:to(GENTLEMEN-RANKERS-1, legion-4)
case(ones-8, of-5)
det(ones-8, the-6)
amod(ones-8, lost-7)
nmod:of(legion-4, ones-8)
case(cohort-12, to-10)
det(cohort-12, the-11)
nmod:to(overseas-23, cohort-12)
case(damned-15, of-13)
det(damned-15, the-14)
nmod:of(cohort-12, damned-15)
case(brethren-19, To-17)
nmod:poss(brethren-19, my-18)
nmod:to(overseas-23, brethren-19)
case(sorrow-22, in-20)
nmod:poss(sorrow-22, their-21)
nmod:in(brethren-19, sorrow-22)
acl(GENTLEMEN-RANKERS-1, overseas-23)
appos(GENTLEMEN-RANKERS-1, Sings-25)
det(gentleman-27, a-26)
nsubj(bred-31, gentleman-27)
case(England-29, of-28)
nmod:of(gentleman-27, England-29)
advmod(bred-31, cleanly-30)
acl:relcl(Sings-25, bred-31)
advmod(crammed-34, machinely-33)
root(ROOT-0, crammed-34)
cc(crammed-34, And-36)
det(trooper-38, a-37)
conj:and(crammed-34, trooper-38)
case(Empress-41, of-39)
det(Empress-41, the-40)
nmod:of(trooper-38, Empress-41)
mark(please-45, if-43)
nsubj(please-45, you-44)
acl:relcl(Empress-41, please-45)

(ROOT
  (S
    (FRAG
      (NP
        (NP (NNP Yea))
        (, ,)
        (NP
          (NP (DT a) (NN trooper))
          (PP (IN of)
            (NP (DT the) (NNS forces)))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ has)
                (VP (VBN run)
                  (NP (PRP$ his) (JJ own) (CD six) (NNS horses)))))))))
    (, ,)
    (S
      (S (CC And)
        (ADVP (RB faith))
        (NP (PRP he))
        (VP
          (VP (VBD went)
            (NP (DT the) (NN pace)))
          (CC and)
          (VP (VBD went)
            (S
              (NP (PRP it))
              (ADJP (JJ blind))))))
      (, ,)
      (CC And)
      (S
        (NP (DT the) (NN world))
        (VP (VBD was)
          (ADVP (RBR more) (IN than))
          (VP (VBN kin)
            (SBAR (IN while)
              (S
                (NP (PRP he))
                (VP (VBD held)
                  (NP (DT the) (JJ ready) (NN tin)))))))))
    (, ,)
    (CC But)
    (FRAG
      (ADVP (RB to-day))
      (ADVP
        (ADVP
          (NP
            (NP (DT the) (NNP Sergeant) (POS 's))
            (NN something))
          (JJR less))
        (PP (IN than)
          (NP (NN kind)))))
    (. .)))

dep(went-19, Yea-1)
det(trooper-4, a-3)
appos(Yea-1, trooper-4)
nsubj(run-10, trooper-4)
case(forces-7, of-5)
det(forces-7, the-6)
nmod:of(trooper-4, forces-7)
ref(trooper-4, who-8)
aux(run-10, has-9)
acl:relcl(trooper-4, run-10)
nmod:poss(horses-14, his-11)
amod(horses-14, own-12)
nummod(horses-14, six-13)
dobj(run-10, horses-14)
cc(went-19, And-16)
advmod(went-19, faith-17)
nsubj(went-19, he-18)
nsubj(went-23, he-18)
root(ROOT-0, went-19)
det(pace-21, the-20)
dobj(went-19, pace-21)
cc(went-19, and-22)
conj:and(went-19, went-23)
nsubj(blind-25, it-24)
xcomp(went-23, blind-25)
cc(went-19, And-27)
det(world-29, the-28)
nsubjpass(kin-33, world-29)
auxpass(kin-33, was-30)
advmod(kin-33, more-31)
case(more-31, than-32)
conj:and(went-19, kin-33)
mark(held-36, while-34)
nsubj(held-36, he-35)
advcl(kin-33, held-36)
det(tin-39, the-37)
amod(tin-39, ready-38)
dobj(held-36, tin-39)
cc(went-19, But-41)
conj:and(went-19, to-day-42)
det(Sergeant-44, the-43)
nmod:poss(something-46, Sergeant-44)
case(Sergeant-44, 's-45)
nmod:npmod(less-47, something-46)
dep(to-day-42, less-47)
case(kind-49, than-48)
nmod:than(less-47, kind-49)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (NP
        (NP (JJ poor) (JJ little) (NNS lambs))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP 've)
              (VP (VBN lost)
                (NP
                  (NP (PRP$ our) (NN way))
                  (, ,)
                  (NP (NNP Baa)))))))))
    (. !)))

nsubj(lambs-5, We-1)
cop(lambs-5, 're-2)
amod(lambs-5, poor-3)
amod(lambs-5, little-4)
root(ROOT-0, lambs-5)
nsubj(lost-8, lambs-5)
ref(lambs-5, who-6)
aux(lost-8, 've-7)
acl:relcl(lambs-5, lost-8)
nmod:poss(way-10, our-9)
dobj(lost-8, way-10)
appos(way-10, Baa-12)

(ROOT
  (S
    (VP (VB Baa))
    (. !)))

root(ROOT-0, Baa-1)

(ROOT
  (S
    (VP (VB Baa))
    (. !)))

root(ROOT-0, Baa-1)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (NP
          (NP (JJ little) (JJ black) (NN sheep))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP 've)
                (VP (VBN gone)
                  (ADVP (RB astray)))))))))
    (, ,)
    (NP
      (NP (NNP Baa))
      (PRN (: --)
        (NP (NN aa))
        (: --)))
    (VP (VBP aa))
    (. !)))

nsubj(sheep-5, We-1)
cop(sheep-5, 're-2)
amod(sheep-5, little-3)
amod(sheep-5, black-4)
nsubj(gone-8, sheep-5)
ccomp(aa-15, sheep-5)
ref(sheep-5, who-6)
aux(gone-8, 've-7)
acl:relcl(sheep-5, gone-8)
advmod(gone-8, astray-9)
nsubj(aa-15, Baa-11)
dep(Baa-11, aa-13)
root(ROOT-0, aa-15)

(ROOT
  (NP
    (NP (NNS Gentlemen-rankers))
    (PP (RB out) (IN on)
      (NP (DT the) (NN spree)))
    (, ,)
    (NP
      (NP (NNP Damned))
      (PP (IN from)
        (NP
          (NP (RB here))
          (PP (TO to)
            (NP (NN Eternity))))))
    (, ,)
    (NP
      (NP
        (NP (NNP God) (NNP ha) (POS '))
        (NN mercy))
      (PP (IN on)
        (NP
          (NP (JJ such))
          (PP (IN as)
            (NP (PRP we))))))
    (, ,)
    (NP (NNP Baa))
    (. !)))

root(ROOT-0, Gentlemen-rankers-1)
advmod(spree-5, out-2)
case(spree-5, on-3)
det(spree-5, the-4)
nmod:on(Gentlemen-rankers-1, spree-5)
appos(Gentlemen-rankers-1, Damned-7)
case(here-9, from-8)
nmod:from(Damned-7, here-9)
case(Eternity-11, to-10)
nmod:to(here-9, Eternity-11)
compound(ha-14, God-13)
nmod:poss(mercy-16, ha-14)
case(ha-14, '-15)
appos(Gentlemen-rankers-1, mercy-16)
case(such-18, on-17)
nmod:on(mercy-16, such-18)
case(we-20, as-19)
nmod:as(such-18, we-20)
appos(Gentlemen-rankers-1, Baa-22)

(ROOT
  (S
    (VP (VB Yah))
    (. !)))

root(ROOT-0, Yah-1)

(ROOT
  (S
    (VP (VB Bah))
    (. !)))

root(ROOT-0, Bah-1)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (ADJP (JJ sweet)
            (S
              (VP (TO to)
                (VP (VB sweat)
                  (PP (IN through)
                    (NP (NNS stables)))
                  (, ,)
                  (ADJP (JJ sweet)
                    (PP (TO to)
                      (NP (JJ empty) (NN kitchen) (NNS slops))))))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (ADJP (JJ sweet)
            (S
              (VP (TO to)
                (VP (VB hear)
                  (NP
                    (NP (DT the) (NNS tales))
                    (SBAR
                      (S
                        (NP (DT the) (NNS troopers))
                        (VP (VBP tell) (, ,)
                          (S
                            (VP (TO To)
                              (VP (VB dance)
                                (PP (IN with)
                                  (NP (JJ blowzy) (NNS housemaids)))
                                (PP (IN at)
                                  (NP (DT the) (JJ regimental) (NN hops)))))))))))))))))
    (CC And)
    (S
      (VP (VB thrash)
        (NP
          (NP (DT the) (NN cad))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ says)
                (S
                  (NP (PRP you))
                  (VP (VB waltz)
                    (ADVP (RB too) (RB well))))))))))
    (. .)))

discourse(sweet-5, Oh-1)
nsubj(sweet-5, it-3)
nsubj:xsubj(sweat-7, it-3)
nsubj(thrash-39, it-3)
cop(sweet-5, 's-4)
root(ROOT-0, sweet-5)
mark(sweat-7, to-6)
xcomp(sweet-5, sweat-7)
case(stables-9, through-8)
nmod:through(sweat-7, stables-9)
xcomp(sweat-7, sweet-11)
case(slops-15, to-12)
amod(slops-15, empty-13)
compound(slops-15, kitchen-14)
nmod:to(sweet-11, slops-15)
cc(sweet-5, And-17)
nsubj(sweet-20, it-18)
nsubj:xsubj(hear-22, it-18)
cop(sweet-20, 's-19)
conj:and(sweet-5, sweet-20)
mark(hear-22, to-21)
xcomp(sweet-20, hear-22)
det(tales-24, the-23)
dobj(hear-22, tales-24)
det(troopers-26, the-25)
nsubj(tell-27, troopers-26)
nsubj:xsubj(dance-30, troopers-26)
acl:relcl(tales-24, tell-27)
mark(dance-30, To-29)
xcomp(tell-27, dance-30)
case(housemaids-33, with-31)
amod(housemaids-33, blowzy-32)
nmod:with(dance-30, housemaids-33)
case(hops-37, at-34)
det(hops-37, the-35)
amod(hops-37, regimental-36)
nmod:at(dance-30, hops-37)
cc(sweet-5, And-38)
conj:and(sweet-5, thrash-39)
det(cad-41, the-40)
dobj(thrash-39, cad-41)
nsubj(says-43, cad-41)
ref(cad-41, who-42)
acl:relcl(cad-41, says-43)
nsubj(waltz-45, you-44)
ccomp(says-43, waltz-45)
advmod(well-47, too-46)
advmod(waltz-45, well-47)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (PRP it))
      (VP (VBZ makes)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBZ cock-a-hoop)
              (S
                (VP (TO to)
                  (VP (VB be) (`` ``)
                    (ADJP (JJ Rider))
                    ('' '')
                    (PP (TO to)
                      (NP (PRP$ your) (NN troop)))))))))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBN branded)
          (PP (IN with)
            (NP (DT a) (JJ blasted) (JJ worsted) (NN spur)))))
      (, ,)
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP you))
          (VP (VBP envy))))
      (, ,)
      (VP (VBP O)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (NNP keenly))
              (, ,)
              (NP
                (NP (CD one) (JJ poor) (NNS Tommy))
                (VP (VBG being)
                  (ADJP
                    (ADVP (RB cleanly))
                    (SBAR
                      (WHNP (WP Who))
                      (FRAG
                        (NP
                          (NP (NNS blacks))
                          (NP (PRP$ your)
                            (NX
                              (NX (NNS boots))
                              (CC and)))))))
                  (ADVP (RB sometimes)))))
            (VP (VBZ calls)
              (S
                (NP (PRP you))
                (`` ``)
                (NP (NNP Sir))
                ('' '')))))))
    (. .)))

discourse(makes-4, Yes-1)
nsubj(makes-4, it-3)
nsubj(O-28, it-3)
root(ROOT-0, makes-4)
nsubj(cock-a-hoop-6, you-5)
nsubj:xsubj(Rider-10, you-5)
ccomp(makes-4, cock-a-hoop-6)
mark(Rider-10, to-7)
cop(Rider-10, be-8)
xcomp(cock-a-hoop-6, Rider-10)
case(troop-14, to-12)
nmod:poss(troop-14, your-13)
nmod:to(Rider-10, troop-14)
cc(makes-4, And-16)
dep(O-28, branded-17)
case(spur-22, with-18)
det(spur-22, a-19)
amod(spur-22, blasted-20)
amod(spur-22, worsted-21)
nmod:with(branded-17, spur-22)
advmod(envy-26, When-24)
nsubj(envy-26, you-25)
advcl(O-28, envy-26)
conj:and(makes-4, O-28)
advmod(calls-43, how-29)
nsubj(calls-43, keenly-30)
nummod(Tommy-34, one-32)
amod(Tommy-34, poor-33)
appos(keenly-30, Tommy-34)
cop(cleanly-36, being-35)
acl(Tommy-34, cleanly-36)
dep(blacks-38, Who-37)
dep(cleanly-36, blacks-38)
nmod:poss(boots-40, your-39)
dep(blacks-38, boots-40)
cc(boots-40, and-41)
advmod(cleanly-36, sometimes-42)
ccomp(O-28, calls-43)
dep(Sir-46, you-44)
xcomp(calls-43, Sir-46)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (S
          (NP
            (NP (DT the) (NN home))
            (SBAR
              (S
                (S
                  (NP (PRP we))
                  (ADVP (RB never))
                  (VP (VB write)
                    (PP (TO to))))
                (, ,)
                (CC and)
                (S
                  (NP (DT the) (NNS oaths))
                  (NP (PRP we))))))
          (ADVP (RB never))
          (VP (VB keep)))
        (, ,)
        (CC And)
        (S
          (SBAR
            (WHNP (DT all))
            (S
              (NP (PRP we))
              (VP (VBP know)
                (S
                  (NP
                    (NP (RBS most) (JJ distant))
                    (CC and)
                    (NP (JJS most)))
                  (ADJP (RB dear))))))
          (, ,)
          (PP (IN Across)
            (NP (DT the) (JJ snoring) (JJ barrack-room) (NN return)))
          (VP (TO to)
            (VP (VB break)
              (NP (PRP$ our) (NN sleep)))))))
    (, ,) (MD Can)
    (NP (PRP you))
    (VP (VB blame)
      (NP (PRP us))
      (SBAR (IN if)
        (S
          (NP (PRP we))
          (VP (VB soak)
            (NP (PRP ourselves))
            (PP (IN in)
              (NP (NN beer)))))))
    (. ?)))

mark(keep-14, If-1)
det(home-3, the-2)
nsubj(keep-14, home-3)
nsubj(break-32, home-3)
nsubj(write-6, we-4)
neg(write-6, never-5)
acl:relcl(home-3, write-6)
nmod(write-6, to-7)
cc(write-6, and-9)
det(oaths-11, the-10)
dep(we-12, oaths-11)
acl:relcl(home-3, we-12)
conj:and(write-6, we-12)
neg(keep-14, never-13)
advcl(blame-38, keep-14)
cc(keep-14, And-16)
dobj(know-19, all-17)
nsubj(know-19, we-18)
dep(break-32, know-19)
advmod(distant-21, most-20)
nsubj(dear-24, distant-21)
cc(distant-21, and-22)
conj:and(distant-21, most-23)
nsubj(dear-24, most-23)
xcomp(know-19, dear-24)
case(return-30, Across-26)
det(return-30, the-27)
amod(return-30, snoring-28)
amod(return-30, barrack-room-29)
nmod:across(break-32, return-30)
mark(break-32, to-31)
conj:and(keep-14, break-32)
advcl(blame-38, break-32)
nmod:poss(sleep-34, our-33)
dobj(break-32, sleep-34)
aux(blame-38, Can-36)
nsubj(blame-38, you-37)
root(ROOT-0, blame-38)
dobj(blame-38, us-39)
mark(soak-42, if-40)
nsubj(soak-42, we-41)
advcl(blame-38, soak-42)
dobj(soak-42, ourselves-43)
case(beer-45, in-44)
nmod:in(soak-42, beer-45)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (S
          (NP (DT the) (NN drunken) (NN comrade))
          (VP (VBZ mutters)))
        (CC and)
        (S
          (S
            (NP (DT the) (JJ great) (NN guard-lantern))
            (VP (VBZ gutters)))
          (CC And)
          (S
            (NP
              (NP (DT the) (NN horror))
              (PP (IN of)
                (NP (PRP$ our) (NN fall))))
            (VP (VBZ is)
              (VP (VBN written)
                (S
                  (ADJP (JJ plain)))))))))
    (, ,)
    (NP
      (NP (DT Every) (NN secret))
      (, ,)
      (NP
        (NP (NN self-revealing))
        (PP (IN on)
          (NP (DT the) (JJ aching) (JJ white-washed) (NN ceiling))))
      (, ,))
    (VP (VBP Do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP wonder)
            (SBAR (IN that)
              (S
                (NP (VBP we) (NN drug))
                (VP (VBZ ourselves)
                  (PP (IN from)
                    (NP (NN pain))))))))))
    (. ?)))

advmod(mutters-5, When-1)
det(comrade-4, the-2)
compound(comrade-4, drunken-3)
nsubj(mutters-5, comrade-4)
advcl(Do-31, mutters-5)
cc(mutters-5, and-6)
det(guard-lantern-9, the-7)
amod(guard-lantern-9, great-8)
nsubj(gutters-10, guard-lantern-9)
conj:and(mutters-5, gutters-10)
advcl(Do-31, gutters-10)
cc(gutters-10, And-11)
det(horror-13, the-12)
nsubjpass(written-18, horror-13)
case(fall-16, of-14)
nmod:poss(fall-16, our-15)
nmod:of(horror-13, fall-16)
auxpass(written-18, is-17)
conj:and(mutters-5, written-18)
conj:and(gutters-10, written-18)
xcomp(written-18, plain-19)
det(secret-22, Every-21)
nsubj(Do-31, secret-22)
appos(secret-22, self-revealing-24)
case(ceiling-29, on-25)
det(ceiling-29, the-26)
amod(ceiling-29, aching-27)
amod(ceiling-29, white-washed-28)
nmod:on(self-revealing-24, ceiling-29)
root(ROOT-0, Do-31)
nsubj(wonder-33, you-32)
ccomp(Do-31, wonder-33)
mark(ourselves-37, that-34)
dep(drug-36, we-35)
nsubj(ourselves-37, drug-36)
ccomp(wonder-33, ourselves-37)
case(pain-39, from-38)
nmod:from(ourselves-37, pain-39)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP have)
        (VP (VBN done)
          (PP (IN with)
            (NP (NNP Hope)
              (CC and)
              (NNP Honour))))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (VP (VBN lost)
          (PP (TO to)
            (NP (NNP Love)
              (CC and)
              (NNP Truth))))))
    (, ,)
    (S
      (NP (PRP We))
      (VP (VBP are)
        (VP (VBG dropping)
          (PRT (RP down))
          (NP
            (NP (DT the) (NN ladder))
            (VP (VBN rung)
              (PP (IN by)
                (NP (NNP rung))))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT the) (NN measure))
        (PP (IN of)
          (NP (PRP$ our) (NN torment))))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN measure))
          (PP (IN of)
            (NP (PRP$ our) (NN youth))))))
    (. .)))

nsubj(done-3, We-1)
aux(done-3, have-2)
root(ROOT-0, done-3)
case(Hope-5, with-4)
nmod:with(done-3, Hope-5)
cc(Hope-5, and-6)
nmod:with(done-3, Honour-7)
conj:and(Hope-5, Honour-7)
nsubjpass(lost-11, we-9)
auxpass(lost-11, are-10)
ccomp(done-3, lost-11)
case(Love-13, to-12)
nmod:to(lost-11, Love-13)
cc(Love-13, and-14)
nmod:to(lost-11, Truth-15)
conj:and(Love-13, Truth-15)
nsubj(dropping-19, We-17)
aux(dropping-19, are-18)
ccomp(done-3, dropping-19)
compound:prt(dropping-19, down-20)
det(ladder-22, the-21)
dobj(dropping-19, ladder-22)
acl(ladder-22, rung-23)
case(rung-25, by-24)
nmod:by(rung-23, rung-25)
cc(done-3, And-27)
det(measure-29, the-28)
nsubj(measure-35, measure-29)
case(torment-32, of-30)
nmod:poss(torment-32, our-31)
nmod:of(measure-29, torment-32)
cop(measure-35, is-33)
det(measure-35, the-34)
conj:and(done-3, measure-35)
case(youth-38, of-36)
nmod:poss(youth-38, our-37)
nmod:of(measure-35, youth-38)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBP help)
      (NP (PRP us))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP we))
          (VP (VBD knew)
            (NP
              (NP (DT the) (JJS worst))
              (ADJP (RB too) (JJ young)))))))
    (. !)))

nsubj(help-2, God-1)
root(ROOT-0, help-2)
dobj(help-2, us-3)
mark(knew-7, for-5)
nsubj(knew-7, we-6)
advcl(help-2, knew-7)
det(worst-9, the-8)
dobj(knew-7, worst-9)
advmod(young-11, too-10)
amod(worst-9, young-11)

(ROOT
  (S
    (S
      (NP (PRP$ Our) (NN shame))
      (VP (VBZ is)
        (NP
          (NP (JJ clean) (NN repentance))
          (PP (IN for)
            (NP
              (NP (DT the) (NN crime))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD brought)
                    (NP
                      (NP (DT the) (NN sentence))
                      (, ,)
                      (NP
                        (NP (PRP$ Our) (NN pride))
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBZ is)
                              (S
                                (VP (TO to)
                                  (VP (VB know)
                                    (NP
                                      (NP (DT no) (NN spur))
                                      (PP (IN of)
                                        (NP (NN pride))))))))))))))))))))
    (, ,)
    (CC And)
    (S
      (S
        (NP
          (NP (DT the) (NN Curse))
          (PP (IN of)
            (NP (NNP Reuben))))
        (VP (VBZ holds)
          (NP (PRP us))
          (SBAR (IN till)
            (S
              (NP (DT an) (JJ alien) (NN turf))
              (VP (VBZ enfolds)
                (NP (PRP us)))))))
      (CC And)
      (S
        (S
          (NP (PRP we))
          (VP (VBP die)))
        (, ,)
        (CC and)
        (S
          (NP (NN none))
          (VP (MD can)
            (VP (VB tell)
              (NP
                (NP (NNP Them))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP we))
                    (VP (VBD died))))))))))
    (. .)))

nmod:poss(shame-2, Our-1)
nsubj(repentance-5, shame-2)
cop(repentance-5, is-3)
amod(repentance-5, clean-4)
root(ROOT-0, repentance-5)
case(crime-8, for-6)
det(crime-8, the-7)
nmod:for(repentance-5, crime-8)
nsubj(brought-10, crime-8)
ref(crime-8, that-9)
acl:relcl(crime-8, brought-10)
det(sentence-12, the-11)
dobj(brought-10, sentence-12)
nmod:poss(pride-15, Our-14)
appos(sentence-12, pride-15)
nsubj(is-17, it-16)
nsubj:xsubj(know-19, it-16)
acl:relcl(pride-15, is-17)
mark(know-19, to-18)
xcomp(is-17, know-19)
neg(spur-21, no-20)
dobj(know-19, spur-21)
case(pride-23, of-22)
nmod:of(spur-21, pride-23)
cc(repentance-5, And-25)
det(Curse-27, the-26)
nsubj(holds-30, Curse-27)
case(Reuben-29, of-28)
nmod:of(Curse-27, Reuben-29)
conj:and(repentance-5, holds-30)
dobj(holds-30, us-31)
mark(enfolds-36, till-32)
det(turf-35, an-33)
amod(turf-35, alien-34)
nsubj(enfolds-36, turf-35)
advcl(holds-30, enfolds-36)
dobj(enfolds-36, us-37)
cc(holds-30, And-38)
nsubj(die-40, we-39)
conj:and(repentance-5, die-40)
conj:and(holds-30, die-40)
cc(die-40, and-42)
nsubj(tell-45, none-43)
aux(tell-45, can-44)
conj:and(holds-30, tell-45)
conj:and(die-40, tell-45)
dobj(tell-45, Them-46)
advmod(died-49, where-47)
nsubj(died-49, we-48)
acl:relcl(Them-46, died-49)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (NP
        (NP (JJ poor) (JJ little) (NNS lambs))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP 've)
              (VP (VBN lost)
                (NP
                  (NP (PRP$ our) (NN way))
                  (, ,)
                  (NP (NNP Baa)))))))))
    (. !)))

nsubj(lambs-5, We-1)
cop(lambs-5, 're-2)
amod(lambs-5, poor-3)
amod(lambs-5, little-4)
root(ROOT-0, lambs-5)
nsubj(lost-8, lambs-5)
ref(lambs-5, who-6)
aux(lost-8, 've-7)
acl:relcl(lambs-5, lost-8)
nmod:poss(way-10, our-9)
dobj(lost-8, way-10)
appos(way-10, Baa-12)

(ROOT
  (S
    (VP (VB Baa))
    (. !)))

root(ROOT-0, Baa-1)

(ROOT
  (S
    (VP (VB Baa))
    (. !)))

root(ROOT-0, Baa-1)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (NP
          (NP (JJ little) (JJ black) (NN sheep))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP 've)
                (VP (VBN gone)
                  (ADVP (RB astray)))))))))
    (, ,)
    (NP
      (NP (NNP Baa))
      (PRN (: --)
        (NP (NN aa))
        (: --)))
    (VP (VBP aa))
    (. !)))

nsubj(sheep-5, We-1)
cop(sheep-5, 're-2)
amod(sheep-5, little-3)
amod(sheep-5, black-4)
nsubj(gone-8, sheep-5)
ccomp(aa-15, sheep-5)
ref(sheep-5, who-6)
aux(gone-8, 've-7)
acl:relcl(sheep-5, gone-8)
advmod(gone-8, astray-9)
nsubj(aa-15, Baa-11)
dep(Baa-11, aa-13)
root(ROOT-0, aa-15)

(ROOT
  (NP
    (NP (NNS Gentlemen-rankers))
    (PP (RB out) (IN on)
      (NP (DT the) (NN spree)))
    (, ,)
    (NP
      (NP (NNP Damned))
      (PP (IN from)
        (NP
          (NP (RB here))
          (PP (TO to)
            (NP (NN Eternity))))))
    (, ,)
    (NP
      (NP
        (NP (NNP God) (NNP ha) (POS '))
        (NN mercy))
      (PP (IN on)
        (NP
          (NP (JJ such))
          (PP (IN as)
            (NP (PRP we))))))
    (, ,)
    (NP (NNP Baa))
    (. !)))

root(ROOT-0, Gentlemen-rankers-1)
advmod(spree-5, out-2)
case(spree-5, on-3)
det(spree-5, the-4)
nmod:on(Gentlemen-rankers-1, spree-5)
appos(Gentlemen-rankers-1, Damned-7)
case(here-9, from-8)
nmod:from(Damned-7, here-9)
case(Eternity-11, to-10)
nmod:to(here-9, Eternity-11)
compound(ha-14, God-13)
nmod:poss(mercy-16, ha-14)
case(ha-14, '-15)
appos(Gentlemen-rankers-1, mercy-16)
case(such-18, on-17)
nmod:on(mercy-16, such-18)
case(we-20, as-19)
nmod:as(such-18, we-20)
appos(Gentlemen-rankers-1, Baa-22)

(ROOT
  (S
    (VP (VB Yah))
    (. !)))

root(ROOT-0, Yah-1)

(ROOT
  (S
    (VP (VB Bah))
    (. !)))

root(ROOT-0, Bah-1)

(ROOT
  (S
    (FRAG
      (NP (NNP ROUTE) (NNP MARCHIN)))
    ('' ')
    (NP (PRP We))
    (VP (VBP 're)
      (ADJP (JJ marchin) ('' ')
        (PP (IN on)
          (NP
            (NP
              (NP (NN relief))
              (PP (IN over)
                (NP
                  (NP (NNP Injia) (POS 's))
                  (JJ sunny) (NNS plains))))
            (, ,)
            (NP
              (NP (DT A) (JJ little) (NN front) (NN o) (POS '))
              (NN Christmas-time))
            (, an) ('' ')
            (SBAR (RB just)
              (S
                (VP (VBD be'ind)
                  (NP
                    (NP (DT the) (NNPS Rains))
                    (: ;)
                    (NP (NNP Ho))))))))))
    (. !)))

compound(MARCHIN-2, ROUTE-1)
dep(marchin-6, MARCHIN-2)
nsubj(marchin-6, We-4)
cop(marchin-6, 're-5)
root(ROOT-0, marchin-6)
case(relief-9, on-8)
nmod:on(marchin-6, relief-9)
case(plains-14, over-10)
nmod:poss(plains-14, Injia-11)
case(Injia-11, 's-12)
amod(plains-14, sunny-13)
nmod:over(relief-9, plains-14)
det(o-19, A-16)
amod(o-19, little-17)
compound(o-19, front-18)
nmod:poss(Christmas-time-21, o-19)
case(o-19, '-20)
appos(relief-9, Christmas-time-21)
advmod(be'ind-25, just-24)
dep(relief-9, be'ind-25)
det(Rains-27, the-26)
dobj(be'ind-25, Rains-27)
dep(Rains-27, Ho-29)

(ROOT
  (S
    (S
      (VP (VB get)
        (PRT (RP away))
        (NP (PRP you) (JJ bullock-man))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 've)
      (VP (`` `) (VBN eard)
        (NP
          (NP (DT the) (NN bugle))
          (VP (VBN blowed)))))
    (PRN (, ,)
      (S
        (NP (EX There))
        (VP (VBZ 's)
          (NP
            (NP (DT a) (JJ regiment) (NN a-comin))
            ('' ')
            (PP (IN down)
              (NP (DT the) (NNP Grand) (NNP Trunk) (NNP Road)))
            (: ;)
            (PP (IN With)
              (NP
                (NP (PRP$ its) (JJS best) (NN foot) (RB first))
                (SBAR
                  (S
                    (S (CC And)
                      (NP (DT the) (NN road))
                      (VP (VBP a-sliding)
                        (NP
                          (NP (NN past))
                          (, ,)
                          (NP
                            (NP (NNP An) (POS '))
                            (NP (DT every) (NN bloomin) (POS '))
                            (NNP campin))
                          ('' '))))
                    (: -)
                    (S
                      (NP (NN ground))
                      (ADVP (RB exactly))
                      (VP (VBP like)
                        (NP (DT the) (JJ last))))
                    (: ;)
                    (SBAR (IN While)
                      (S
                        (NP (DT the) (NNP Big) (NNP Drum))
                        (VP (VBZ says)))))))))))
      (, ,))
    (SBAR (IN With)
      (S (`` `)
        (S
          (VP (VBZ is)))
        ('' '')
        (VP (VBZ _)
          (NP (NN rowdy-dowdy-dow)))))
    (. !)))

ccomp(eard-9, get-1)
compound:prt(get-1, away-2)
dobj(get-1, you-3)
amod(you-3, bullock-man-4)
nsubj(eard-9, you-6)
aux(eard-9, 've-7)
root(ROOT-0, eard-9)
det(bugle-11, the-10)
dobj(eard-9, bugle-11)
acl(bugle-11, blowed-12)
expl('s-15, There-14)
parataxis(eard-9, 's-15)
det(a-comin-18, a-16)
amod(a-comin-18, regiment-17)
nsubj('s-15, a-comin-18)
case(Road-24, down-20)
det(Road-24, the-21)
compound(Road-24, Grand-22)
compound(Road-24, Trunk-23)
nmod:down(a-comin-18, Road-24)
case(foot-29, With-26)
nmod:poss(foot-29, its-27)
amod(foot-29, best-28)
nmod:with(a-comin-18, foot-29)
advmod(foot-29, first-30)
cc(a-sliding-34, And-31)
det(road-33, the-32)
nsubj(a-sliding-34, road-33)
acl:relcl(foot-29, a-sliding-34)
dobj(a-sliding-34, past-35)
nmod:poss(campin-42, An-37)
case(An-37, '-38)
det(bloomin-40, every-39)
nmod:poss(campin-42, bloomin-40)
case(bloomin-40, '-41)
appos(past-35, campin-42)
nsubj(like-47, ground-45)
advmod(like-47, exactly-46)
parataxis(a-sliding-34, like-47)
det(last-49, the-48)
dobj(like-47, last-49)
mark(says-55, While-51)
det(Drum-54, the-52)
compound(Drum-54, Big-53)
nsubj(says-55, Drum-54)
parataxis(a-sliding-34, says-55)
mark(_-61, With-57)
ccomp(_-61, is-59)
dep(eard-9, _-61)
dobj(_-61, rowdy-dowdy-dow-62)

(ROOT
  (S
    (S
      (VP
        (VP (VB _) ('' ''))
        (: --)
        (VP ('' '')
          (NP (CD _)))))
    (NP (NNP Kiko) (NNP kissywarsti) (NNP _))
    (VP (VBP do) (RB n't)
      (VP
        (NP (PRP you))
        (S
          (VP (VBG _)
            (NP (NN hamsher) (NN argy) (NN jow))))))
    (. ?)))

dep(you-11, _-1)
dep(_-1, _-5)
compound(_-8, Kiko-6)
compound(_-8, kissywarsti-7)
nsubj(you-11, _-8)
aux(you-11, do-9)
neg(you-11, n't-10)
root(ROOT-0, you-11)
xcomp(you-11, _-12)
compound(jow-15, hamsher-13)
compound(jow-15, argy-14)
dobj(_-12, jow-15)

(ROOT
  (S
    (NP (NNP _) ('' '') (NNP *))
    (VP (VBD *)
      (SBAR
        (SBARQ
          (WHADVP (WRB Why))
          (SQ (VBP do) (RB n't)
            (NP (PRP you))
            (VP (VB get)
              (PRT (RP on))))
          (. ?))))))

compound(*-3, _-1)
nsubj(*-4, *-3)
root(ROOT-0, *-4)
advmod(get-9, Why-5)
aux(get-9, do-6)
neg(get-9, n't-7)
nsubj(get-9, you-8)
dep(*-4, get-9)
compound:prt(get-9, on-10)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP
            (NP (PRP them))
            (SBAR
              (S
                (NP (NNP Injian))
                (VP (VBZ temples)
                  (S
                    (VP (TO to)
                      (VP (VB admire)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP you))
                            (VP (VBP see)))))))))))))
      (, ,)
      (S
        (NP (EX There))
        (VP (VBZ 's)
          (NP
            (ADVP
              (NP (DT the) (NN peacock))
              (RB round))
            (NP (DT the) (NN corner))
            (, an) ('' ')
            (NP
              (NP (DT the) (NN monkey))
              (PP (IN up)
                (NP (DT the) (NN tree))))))))
    (, ,)
    (NP (NNP An) (POS '))
    (ADVP (RB there))
    (VP (VBZ 's)
      (NP
        (NP (DT that) (JJ rummy) (JJ silver) (NN grass) (NN a-wavin) ('' '))
        (PP (IN in)
          (NP
            (NP (DT the) (NN wind))
            (, ,)
            (NP
              (NP (NNP An) (POS '))
              (ADJP (DT the) (JJ old))
              (NNP Grand) (NNP Trunk) (NN a-trailin))
            ('' ')
            (PP (IN like)
              (NP (DT a) (JJ rifle-sling) (NN be'ind)))))))
    (. .)))

discourse('s-4, Oh-1)
expl('s-4, there-3)
ccomp('s-32, 's-4)
nsubj('s-4, them-5)
nsubj(temples-7, Injian-6)
nsubj:xsubj(admire-9, Injian-6)
acl:relcl(them-5, temples-7)
mark(admire-9, to-8)
xcomp(temples-7, admire-9)
advmod(see-12, when-10)
nsubj(see-12, you-11)
advcl(admire-9, see-12)
expl('s-15, There-14)
parataxis('s-4, 's-15)
det(peacock-17, the-16)
nmod:npmod(round-18, peacock-17)
advmod(corner-20, round-18)
det(corner-20, the-19)
nsubj('s-15, corner-20)
det(monkey-24, the-23)
dep(corner-20, monkey-24)
case(tree-27, up-25)
det(tree-27, the-26)
nmod:up(monkey-24, tree-27)
nsubj('s-32, An-29)
case(An-29, '-30)
advmod('s-32, there-31)
root(ROOT-0, 's-32)
det(a-wavin-37, that-33)
amod(a-wavin-37, rummy-34)
amod(a-wavin-37, silver-35)
compound(a-wavin-37, grass-36)
dep('s-32, a-wavin-37)
case(wind-41, in-39)
det(wind-41, the-40)
nmod:in(a-wavin-37, wind-41)
nmod:poss(a-trailin-49, An-43)
case(An-43, '-44)
det(old-46, the-45)
amod(a-trailin-49, old-46)
compound(a-trailin-49, Grand-47)
compound(a-trailin-49, Trunk-48)
appos(wind-41, a-trailin-49)
case(be'ind-54, like-51)
det(be'ind-54, a-52)
amod(be'ind-54, rifle-sling-53)
nmod:like(wind-41, be'ind-54)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (ADJP (JJS best)))))
    (VP (VBP foot)
      (ADVP (RB first))
      (, ,)
      (SBAR
        (S (: ...)
          (PP (IN At)
            (NP
              (NP
                (NP (JJ half-past) (CD five) (POS 's))
                (NNP Revelly))
              (, ,)
              (NP (DT an))))
          ('' ')
          (NP (PRP$ our))
          (VP (VBZ tents)
            (SBAR
              (S
                (NP (PRP they))
                (ADVP (RB down))
                (VP (MD must)
                  (VP (VB come) (, ,)
                    (PP (IN Like)
                      (NP
                        (NP (DT a) (NN lot))
                        (PP (IN of)
                          (NP (NN button) (NNS mushrooms)))))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP you))
                        (VP (VBP pick)
                          (NP (PRP 'em))
                          (PRT (RP up))
                          (PP (IN at) (`` `)
                            (NP (NN ome))))))))))))))
    (. .)))

mark(best-4, While-1)
nsubj(best-4, it-2)
cop(best-4, 's-3)
csubj(foot-5, best-4)
root(ROOT-0, foot-5)
advmod(foot-5, first-6)
case(Revelly-13, At-9)
amod(five-11, half-past-10)
nmod:poss(Revelly-13, five-11)
case(five-11, 's-12)
nmod:at(tents-18, Revelly-13)
appos(Revelly-13, an-15)
nsubj(tents-18, our-17)
ccomp(foot-5, tents-18)
nsubj(come-22, they-19)
advmod(come-22, down-20)
aux(come-22, must-21)
ccomp(tents-18, come-22)
case(lot-26, Like-24)
det(lot-26, a-25)
nmod:like(come-22, lot-26)
case(mushrooms-29, of-27)
compound(mushrooms-29, button-28)
nmod:of(lot-26, mushrooms-29)
advmod(pick-32, when-30)
nsubj(pick-32, you-31)
advcl(come-22, pick-32)
dobj(pick-32, 'em-33)
compound:prt(pick-32, up-34)
case(ome-37, at-35)
nmod:at(pick-32, ome-37)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB over))
      (PP (IN in)
        (NP (DT a) (NN minute)))
      (, ,)
      (NP
        (NP (DT an))
        ('' ')
        (PP (IN at)
          (NP
            (NP (CD six))
            (SBAR
              (S
                (NP (DT the) (NN column))
                (VP (VBZ starts))
                (, ,)
                (SBAR (IN While)
                  (S
                    (NP
                      (NP (DT the) (NNS women))
                      (CC and)
                      (NP (DT the) (NNS kiddies)))
                    (VP (VBP sit))))))))
        (, an) ('' ')
        (VP (VBG shiver)
          (PP (IN in)
            (NP (DT the) (NNS carts))))))
    (. .)))

cc(an-9, But-1)
nsubj(an-9, it-2)
cop(an-9, 's-3)
advmod(an-9, over-4)
case(minute-7, in-5)
det(minute-7, a-6)
nmod:in(an-9, minute-7)
root(ROOT-0, an-9)
case(six-12, at-11)
nmod:at(an-9, six-12)
det(column-14, the-13)
nsubj(starts-15, column-14)
acl:relcl(six-12, starts-15)
mark(sit-23, While-17)
det(women-19, the-18)
nsubj(sit-23, women-19)
cc(women-19, and-20)
det(kiddies-22, the-21)
conj:and(women-19, kiddies-22)
nsubj(sit-23, kiddies-22)
dep(starts-15, sit-23)
acl(an-9, shiver-26)
case(carts-29, in-27)
det(carts-29, the-28)
nmod:in(shiver-26, carts-29)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RBS best))
      (NP (NN foot) (JJ first))
      (, ,)
      (S (: ...)
        (S
          (S
            (NP
              (NP (NNP Oh))
              (PRN (, ,)
                (ADVP (RB then))
                (NP
                  (NP (PRP it) (POS 's))
                  (JJ open) (NN order))
                (, ,))
              (, an) ('' ')
              (NP
                (NP (PRP we))
                (VP (VBG lights)
                  (NP (PRP$ our) (NNS pipes))))
              (, an) ('' '))
            (VP (VBZ sings)))
          (, ,)
          (S
            (NP (NNP An) (POS '))
            (NP (PRP we))))
        (S
          (NP
            (NP (NNS talks))
            (PP (IN about)
              (NP
                (NP (PRP$ our) (NNS rations))
                (, an) ('' ')
                (NP
                  (NP (DT a) (NN lot))
                  (PP (IN of)
                    (NP (JJ other) (NNS things))))
                (, ,)
                (NP
                  (NP (NNP An) (POS '))
                  (NP (PRP we))))))
          (VP (VBZ thinks)
            (NP
              (NP (NNP o) (POS '))
              (NNS friends))
            (PP (IN in)
              (NP (NNP England)))
            (, ,)
            (S
              (VP
                (NP
                  (NP (DT an))
                  ('' ')
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (VBZ wonders)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP they))
                            (VP (VBP 're)
                              (PP (IN at)))))))))
                (, ,)
                (NP
                  (NP (NNP An) (POS '))
                  (`` `) (NN ow))))))
        (S
          (NP (PRP they))
          (VP (MD would)
            (VP (VB admire)
              (SBAR (IN for)
                (S
                  (VP (TO to)
                    (VP (VB hear)
                      (S
                        (NP (PRP us))
                        (VP (VBG sling)
                          (NP (DT the) (JJ _) (NN bat) (NN _)))))))))))))
    (. .)))

dep(foot-6, An-1)
case(An-1, '-2)
nsubj(foot-6, it-3)
cop(foot-6, 's-4)
advmod(foot-6, best-5)
root(ROOT-0, foot-6)
amod(foot-6, first-7)
nsubj(sings-26, Oh-10)
dep(order-16, then-12)
nmod:poss(order-16, it-13)
case(it-13, 's-14)
amod(order-16, open-15)
dep(Oh-10, order-16)
dep(Oh-10, we-20)
acl(we-20, lights-21)
nmod:poss(pipes-23, our-22)
dobj(lights-21, pipes-23)
xcomp(foot-6, sings-26)
dep(we-30, An-28)
case(An-28, '-29)
parataxis(sings-26, we-30)
nsubj(thinks-46, talks-31)
case(rations-34, about-32)
nmod:poss(rations-34, our-33)
nmod:about(talks-31, rations-34)
det(lot-38, a-37)
dep(rations-34, lot-38)
case(things-41, of-39)
amod(things-41, other-40)
nmod:of(lot-38, things-41)
appos(rations-34, An-43)
case(An-43, '-44)
dep(An-43, we-45)
parataxis(sings-26, thinks-46)
nmod:poss(friends-49, o-47)
case(o-47, '-48)
dobj(thinks-46, friends-49)
case(England-51, in-50)
nmod:in(thinks-46, England-51)
dep(thinks-46, an-53)
dobj(at-60, an-53)
nsubj(wonders-56, we-55)
acl:relcl(an-53, wonders-56)
ref(an-53, what-57)
nsubj(at-60, they-58)
cop(at-60, 're-59)
ccomp(wonders-56, at-60)
nmod:poss(ow-65, An-62)
case(An-62, '-63)
dobj(an-53, ow-65)
nsubj(admire-68, they-66)
aux(admire-68, would-67)
parataxis(sings-26, admire-68)
mark(hear-71, for-69)
mark(hear-71, to-70)
advcl(admire-68, hear-71)
nsubj(sling-73, us-72)
dep(hear-71, sling-73)
det(_-77, the-74)
amod(_-77, _-75)
compound(_-77, bat-76)
dobj(sling-73, _-77)

(ROOT
  (FRAG
    (FRAG
      (PP (IN *)
        (NP
          (NP (NNP An) (POS '))
          (NP
            (NP (PRP it) (POS 's))
            (JJS best) (NN foot) (NN first))))
      (, ,))
    (: ...)
    (FRAG
      (X (SYM *))
      (NP (NNP Language)))
    (. .)))

case(An-2, *-1)
root(ROOT-0, An-2)
case(An-2, '-3)
nmod:poss(first-8, it-4)
case(it-4, 's-5)
amod(first-8, best-6)
compound(first-8, foot-7)
dep(An-2, first-8)
dep(Language-12, *-11)
parataxis(An-2, Language-12)

(ROOT
  (S
    (NP
      (NP (NNP Thomas) (POS 's))
      (JJ first)
      (CC and)
      (NN firmest) (NN conviction))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBZ is)
            (NP
              (NP (DT a) (JJ profound) (NN Orientalist))
              (CC and)
              (NP
                (NP (DT a) (JJ fluent) (NN speaker))
                (PP (IN of)
                  (NP (NNP Hindustani)))))))))
    (. .)))

dep(first-3, Thomas-1)
case(Thomas-1, 's-2)
nsubj(is-7, first-3)
cc(first-3, and-4)
compound(conviction-6, firmest-5)
conj:and(first-3, conviction-6)
nsubj(is-7, conviction-6)
root(ROOT-0, is-7)
mark(Orientalist-13, that-8)
nsubj(Orientalist-13, he-9)
cop(Orientalist-13, is-10)
det(Orientalist-13, a-11)
amod(Orientalist-13, profound-12)
ccomp(is-7, Orientalist-13)
cc(Orientalist-13, and-14)
det(speaker-17, a-15)
amod(speaker-17, fluent-16)
ccomp(is-7, speaker-17)
conj:and(Orientalist-13, speaker-17)
case(Hindustani-19, of-18)
nmod:of(speaker-17, Hindustani-19)

(ROOT
  (S
    (PP (IN As)
      (NP
        (NP (DT a) (NN matter))
        (PP (IN of)
          (NP (NN fact)))))
    (, ,)
    (NP (PRP he))
    (VP (VBZ depends)
      (ADVP (RB largely))
      (PP (IN on)
        (NP (DT the) (NN sign-language))))
    (. .)))

case(matter-3, As-1)
det(matter-3, a-2)
nmod:as(depends-8, matter-3)
case(fact-5, of-4)
nmod:of(matter-3, fact-5)
nsubj(depends-8, he-7)
root(ROOT-0, depends-8)
advmod(depends-8, largely-9)
case(sign-language-12, on-10)
det(sign-language-12, the-11)
nmod:on(depends-8, sign-language-12)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (NN none))
        (SBAR (IN so)
          (S
            (NP
              (NP
                (NP (JJ bad) (NN o) (POS '))
                (NNP Sunday))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (VBP 're)
                    (ADJP (JJ lyin) ('' ')
                      (PP (IN at)
                        (NP (PRP$ your) (NN ease)))))))
              (, ,))
            (VP (TO To)
              (VP (VB watch)
                (NP
                  (NP
                    (NP (DT the) (JJ kites) (NN a-wheelin) (POS '))
                    (NN round))
                  (SBAR
                    (S
                      (NP (PRP them))
                      (VP
                        (VP (VBP feather))
                        (: -) (`` `)
                        (VP (VBD eaded)
                          (NP (NNS trees)))))))))))))
    (, ,) (IN For)
    (S
      (SBAR (IN although)
        (S
          (NP (EX there))
          (VP (VBP ai) (RB n't)
            (NP (DT no) (NNS women)))))
      (, ,)
      (ADVP (RB yet))
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (ADJP (RB no) (JJ barrick-yards))))
    (, ,) (IN So)
    (S
      (NP (DT the) (NNS orficers))
      (VP (VBZ goes)
        (NP
          (NP (NN shootin) ('' '))
          (, an) ('' ')
          (NP
            (NP (DT the) (NNS men))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBZ plays)
                  (PP (IN at)
                    (NP (NNS cards))))))))))
    (. .)))

nsubj(none-3, It-1)
cop(none-3, 's-2)
root(ROOT-0, none-3)
mark(watch-20, so-4)
amod(o-6, bad-5)
nmod:poss(Sunday-8, o-6)
case(o-6, '-7)
nsubj(watch-20, Sunday-8)
advmod(lyin-13, when-10)
nsubj(lyin-13, you-11)
cop(lyin-13, 're-12)
acl:relcl(Sunday-8, lyin-13)
case(ease-17, at-15)
nmod:poss(ease-17, your-16)
nmod:at(lyin-13, ease-17)
mark(watch-20, To-19)
advcl(none-3, watch-20)
det(a-wheelin-23, the-21)
amod(a-wheelin-23, kites-22)
nmod:poss(round-25, a-wheelin-23)
case(a-wheelin-23, '-24)
dobj(watch-20, round-25)
nsubj(feather-27, them-26)
acl:relcl(round-25, feather-27)
dep(feather-27, eaded-30)
dobj(eaded-30, trees-31)
dep(none-3, For-33)
mark(ai-36, although-34)
expl(ai-36, there-35)
advcl(ai-43, ai-36)
neg(ai-36, n't-37)
neg(women-39, no-38)
nsubj(ai-36, women-39)
expl(ai-43, yet-41)
dep(yet-41, there-42)
parataxis(none-3, ai-43)
neg(ai-43, n't-44)
neg(barrick-yards-46, no-45)
xcomp(ai-43, barrick-yards-46)
dep(none-3, So-48)
det(orficers-50, the-49)
nsubj(goes-51, orficers-50)
parataxis(none-3, goes-51)
dobj(goes-51, shootin-52)
det(men-57, the-56)
dep(shootin-52, men-57)
nsubj(plays-59, they-58)
acl:relcl(men-57, plays-59)
case(cards-61, at-60)
nmod:at(plays-59, cards-61)

(ROOT
  (S
    (FRAG
      (PP (IN Till)
        (NP
          (NP (PRP it) (POS 's))
          (JJS best) (NN foot) (RB first)))
      (, ,))
    (: ...)
    (S (CC So)
      (S
        (NP (`` `)
          (NP (NN ark))
          (, an) ('' '))
        (`` `)
        (VP (VBP eed)
          (PRN (, ,)
            (S
              (NP (PRP you))
              (VP (VBZ rookies)))
            (, ,))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is)
                (ADVP (RB always))
                (NP
                  (NP (NN grumblin) (POS '))
                  (NN sore)))))))
      (, ,)
      (S
        (NP (EX There))
        (VP (VBZ 's)
          (NP (NN worser) (NNS things))
          (PP (IN than)
            (NP
              (NP (NN marchin))
              ('' ')
              (PP (IN from)
                (NP (NNP Umballa)))))
          (PP (TO to)
            (NP
              (NP (NNP Cawnpore))
              (: ;)
              (NP (NNP An))
              ('' ')))
          (SBAR (IN if)
            (S
              (NP
                (NP
                  (NP (PRP$ your) (`` `) (NN eels))
                  (SBAR
                    (S
                      (VP (VBP are)
                        (VP (VBN blistered))))))
                (, an) ('' ')
                (NP (PRP they)))
              (VP (VBZ feels)
                (S
                  (VP (TO to) (`` `)
                    (VP (VB urt)
                      (PP (IN like)
                        (NP (`` `)
                          (NP (NN ell))
                          (, ,)
                          (PRN
                            (S
                              (NP (PRP You))
                              (VP (VBP drop)
                                (NP
                                  (NP (DT some) (NN tallow))
                                  (PP (IN in)
                                    (NP (PRP$ your) (NNS socks)))))))
                          (, an) ('' ')
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (MD will)
                                (VP (VB make)
                                  (NP (PRP 'em))
                                  (ADVP (RB well)))))))))))))))))
    (. .)))

case(foot-5, Till-1)
nmod:poss(foot-5, it-2)
case(it-2, 's-3)
amod(foot-5, best-4)
dep(eed-15, foot-5)
advmod(foot-5, first-6)
cc(eed-15, So-9)
nsubj(eed-15, ark-11)
root(ROOT-0, eed-15)
nsubj(rookies-18, you-17)
parataxis(eed-15, rookies-18)
nsubj(sore-25, which-20)
cop(sore-25, is-21)
advmod(sore-25, always-22)
nmod:poss(sore-25, grumblin-23)
case(grumblin-23, '-24)
ccomp(eed-15, sore-25)
expl('s-28, There-27)
parataxis(eed-15, 's-28)
compound(things-30, worser-29)
nsubj('s-28, things-30)
case(marchin-32, than-31)
nmod:than('s-28, marchin-32)
case(Umballa-35, from-34)
nmod:from(marchin-32, Umballa-35)
case(Cawnpore-37, to-36)
nmod:to('s-28, Cawnpore-37)
dep(Cawnpore-37, An-39)
mark(feels-50, if-41)
nmod:poss(eels-44, your-42)
nsubj(feels-50, eels-44)
nsubj:xsubj(urt-53, eels-44)
auxpass(blistered-46, are-45)
acl:relcl(eels-44, blistered-46)
dep(eels-44, they-49)
advcl('s-28, feels-50)
mark(urt-53, to-51)
xcomp(feels-50, urt-53)
case(ell-56, like-54)
nmod:like(urt-53, ell-56)
nsubj(make-69, ell-56)
nsubj(drop-59, You-58)
dep(ell-56, drop-59)
det(tallow-61, some-60)
dobj(drop-59, tallow-61)
case(socks-64, in-62)
nmod:poss(socks-64, your-63)
nmod:in(tallow-61, socks-64)
ref(ell-56, that-67)
aux(make-69, will-68)
acl:relcl(ell-56, make-69)
dobj(make-69, 'em-70)
advmod(make-69, well-71)

(ROOT
  (S
    (FRAG
      (PP (IN For)
        (NP
          (NP (PRP it) (POS 's))
          (JJS best) (NN foot) (RB first)))
      (, ,))
    (: ...)
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (VP (VBN marchin) ('' ')
          (PP (IN on)
            (NP
              (NP (NN relief))
              (PP (IN over)
                (NP
                  (NP (NNP Injia) (POS 's))
                  (NN coral) (NN strand)))))
          (, ,)
          (S
            (VP (VBG Eight)
              (NP (`` `)
                (NP (JJ undred) (NN fightin) ('' ') (NNP Englishmen))
                (, ,)
                (NP (DT the) (NNP Colonel))
                (, ,)
                (CC and)
                (NP (DT the) (NNP Band))
                (: ;)
                (NP (NNP Ho))))))))
    (. !)))

case(foot-5, For-1)
nmod:poss(foot-5, it-2)
case(it-2, 's-3)
amod(foot-5, best-4)
dep(marchin-11, foot-5)
advmod(foot-5, first-6)
nsubjpass(marchin-11, We-9)
auxpass(marchin-11, 're-10)
root(ROOT-0, marchin-11)
case(relief-14, on-13)
nmod:on(marchin-11, relief-14)
case(strand-19, over-15)
nmod:poss(strand-19, Injia-16)
case(Injia-16, 's-17)
compound(strand-19, coral-18)
nmod:over(relief-14, strand-19)
xcomp(marchin-11, Eight-21)
amod(Englishmen-26, undred-23)
compound(Englishmen-26, fightin-24)
dobj(Eight-21, Englishmen-26)
det(Colonel-29, the-28)
dobj(Eight-21, Colonel-29)
conj:and(Englishmen-26, Colonel-29)
cc(Englishmen-26, and-31)
det(Band-33, the-32)
dobj(Eight-21, Band-33)
conj:and(Englishmen-26, Band-33)
dobj(Eight-21, Ho-35)
conj:and(Englishmen-26, Ho-35)

(ROOT
  (S
    (S
      (VP (VB get)
        (PRT (RP away))
        (NP (PRP you) (JJ bullock-man))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 've)
      (VP (`` `) (VBN eard)
        (NP
          (NP (DT the) (NN bugle))
          (VP (VBN blowed)))))
    (PRN (, ,)
      (S
        (NP (EX There))
        (VP (VBZ 's)
          (NP
            (NP (DT a) (JJ regiment) (NN a-comin))
            ('' ')
            (PP (IN down)
              (NP (DT the) (NNP Grand) (NNP Trunk) (NNP Road)))
            (: ;)
            (PP (IN With)
              (NP
                (NP (PRP$ its) (JJS best) (NN foot) (RB first))
                (SBAR
                  (S
                    (S (CC And)
                      (NP (DT the) (NN road))
                      (VP (VBP a-sliding)
                        (NP
                          (NP (NN past))
                          (, ,)
                          (NP
                            (NP (NNP An) (POS '))
                            (NP (DT every) (NN bloomin) (POS '))
                            (NNP campin))
                          ('' '))))
                    (: -)
                    (S
                      (NP (NN ground))
                      (ADVP (RB exactly))
                      (VP (VBP like)
                        (NP (DT the) (JJ last))))
                    (: ;)
                    (SBAR (IN While)
                      (S
                        (NP (DT the) (NNP Big) (NNP Drum))
                        (VP (VBZ says)))))))))))
      (, ,))
    (SBAR (IN With)
      (S (`` `)
        (S
          (VP (VBZ is)))
        ('' '')
        (VP (VBZ _)
          (NP (NN rowdy-dowdy-dow)))))
    (. !)))

ccomp(eard-9, get-1)
compound:prt(get-1, away-2)
dobj(get-1, you-3)
amod(you-3, bullock-man-4)
nsubj(eard-9, you-6)
aux(eard-9, 've-7)
root(ROOT-0, eard-9)
det(bugle-11, the-10)
dobj(eard-9, bugle-11)
acl(bugle-11, blowed-12)
expl('s-15, There-14)
parataxis(eard-9, 's-15)
det(a-comin-18, a-16)
amod(a-comin-18, regiment-17)
nsubj('s-15, a-comin-18)
case(Road-24, down-20)
det(Road-24, the-21)
compound(Road-24, Grand-22)
compound(Road-24, Trunk-23)
nmod:down(a-comin-18, Road-24)
case(foot-29, With-26)
nmod:poss(foot-29, its-27)
amod(foot-29, best-28)
nmod:with(a-comin-18, foot-29)
advmod(foot-29, first-30)
cc(a-sliding-34, And-31)
det(road-33, the-32)
nsubj(a-sliding-34, road-33)
acl:relcl(foot-29, a-sliding-34)
dobj(a-sliding-34, past-35)
nmod:poss(campin-42, An-37)
case(An-37, '-38)
det(bloomin-40, every-39)
nmod:poss(campin-42, bloomin-40)
case(bloomin-40, '-41)
appos(past-35, campin-42)
nsubj(like-47, ground-45)
advmod(like-47, exactly-46)
parataxis(a-sliding-34, like-47)
det(last-49, the-48)
dobj(like-47, last-49)
mark(says-55, While-51)
det(Drum-54, the-52)
compound(Drum-54, Big-53)
nsubj(says-55, Drum-54)
parataxis(a-sliding-34, says-55)
mark(_-61, With-57)
ccomp(_-61, is-59)
dep(eard-9, _-61)
dobj(_-61, rowdy-dowdy-dow-62)

(ROOT
  (S
    (S
      (VP
        (VP (VB _) ('' ''))
        (: --)
        (VP ('' '')
          (NP (CD _)))))
    (NP (NNP Kiko) (NNP kissywarsti) (NNP _))
    (VP (VBP do) (RB n't)
      (VP
        (NP (PRP you))
        (S
          (VP (VBG _)
            (NP (NN hamsher) (NN argy) (NN jow))))))
    (. ?)))

dep(you-11, _-1)
dep(_-1, _-5)
compound(_-8, Kiko-6)
compound(_-8, kissywarsti-7)
nsubj(you-11, _-8)
aux(you-11, do-9)
neg(you-11, n't-10)
root(ROOT-0, you-11)
xcomp(you-11, _-12)
compound(jow-15, hamsher-13)
compound(jow-15, argy-14)
dobj(_-12, jow-15)

(ROOT
  (S
    (S
      (NP
        (NP (NNP _) ('' '') (NNP SHILLIN) (POS '))
        (NNP A) (NNP DAY) (NNP My) (NN name))
      (VP (VBZ is)
        (ADJP (JJ O'Kelly))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (VP (VBN heard)
            (NP (DT the) (NN Revelly))
            (PP (IN From)
              (NP (NNP Birr)))
            (PP (TO to)
              (NP (NNP Bareilly)))
            (, ,)
            (PP (IN from)
              (NP
                (NP (NNP Leeds))
                (PP (TO to)
                  (NP (NNP Lahore) (, ,) (NNP Hong-Kong)
                    (CC and)
                    (NNP Peshawur) (, ,) (NNP Lucknow)
                    (CC and)
                    (NNP Etawah))))))))
      (, ,))
    (CC And)
    (S
      (VP (VB fifty-five)
        (ADVP (RBR more)
          (NP (DT all) (NN endin)))
        ('' ')
        (PP (IN in) (`` ``)
          (ADJP (JJ pore))
          ('' ''))))
    (. .)))

compound(SHILLIN-3, _-1)
nmod:poss(name-8, SHILLIN-3)
case(SHILLIN-3, '-4)
compound(name-8, A-5)
compound(name-8, DAY-6)
compound(name-8, My-7)
nsubj(O'Kelly-10, name-8)
nsubj(fifty-five-36, name-8)
cop(O'Kelly-10, is-9)
root(ROOT-0, O'Kelly-10)
nsubj(heard-14, I-12)
aux(heard-14, 've-13)
dep(O'Kelly-10, heard-14)
det(Revelly-16, the-15)
dobj(heard-14, Revelly-16)
case(Birr-18, From-17)
nmod:from(heard-14, Birr-18)
case(Bareilly-20, to-19)
nmod:to(heard-14, Bareilly-20)
case(Leeds-23, from-22)
nmod:from(heard-14, Leeds-23)
case(Lahore-25, to-24)
nmod:to(Leeds-23, Lahore-25)
nmod:to(Leeds-23, Hong-Kong-27)
conj:and(Lahore-25, Hong-Kong-27)
cc(Lahore-25, and-28)
nmod:to(Leeds-23, Peshawur-29)
conj:and(Lahore-25, Peshawur-29)
nmod:to(Leeds-23, Lucknow-31)
conj:and(Lahore-25, Lucknow-31)
cc(Lahore-25, and-32)
nmod:to(Leeds-23, Etawah-33)
conj:and(Lahore-25, Etawah-33)
cc(O'Kelly-10, And-35)
conj:and(O'Kelly-10, fifty-five-36)
advmod(fifty-five-36, more-37)
det(endin-39, all-38)
nmod:npmod(more-37, endin-39)
case(pore-43, in-41)
advcl(fifty-five-36, pore-43)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Black) (NNP Death))
        (CC and)
        (NP
          (NP (PRP$ his) (NNS quickness))
          (, ,)
          (NP (DT the) (NN depth))
          (CC and)
          (NP (DT the) (NN thickness))))
      (, ,)
      (PP (IN Of)
        (NP
          (NP (NN sorrow)
            (CC and)
            (NN sickness))
          (SBAR
            (S
              (S
                (S
                  (NP (PRP I))
                  (VP (VBP 've)
                    (VP (VBN known)
                      (PP (IN on)
                        (NP (PRP$ my) (NN way))))))
                (, ,)
                (CC But)
                (S
                  (NP (PRP I))
                  (VP (VBP 'm)
                    (ADJP (JJ old)))))
              (CC and)
              (S
                (NP (PRP I))
                (VP (VBP 'm)
                  (ADJP (JJ nervis))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBN cast)
          (PP (IN from)
            (NP (DT the) (NNP Service))))))
    (, ,)
    (CC And)
    (S (RB all)
      (NP (PRP I))
      (VP (VBP deserve)
        (SBAR
          (S
            (VP (VBZ is)
              (NP
                (NP (DT a) (NN shillin) ('' '))
                (NP (DT a) (NN day))))))))
    (. .)))

compound(Death-2, Black-1)
nsubjpass(cast-35, Death-2)
cc(Death-2, and-3)
nmod:poss(quickness-5, his-4)
conj:and(Death-2, quickness-5)
nsubjpass(cast-35, quickness-5)
det(depth-8, the-7)
conj:and(Death-2, depth-8)
conj:and(quickness-5, depth-8)
cc(quickness-5, and-9)
det(thickness-11, the-10)
conj:and(Death-2, thickness-11)
conj:and(quickness-5, thickness-11)
case(sorrow-14, Of-13)
nmod:of(cast-35, sorrow-14)
cc(sorrow-14, and-15)
conj:and(sorrow-14, sickness-16)
nmod:of(cast-35, sickness-16)
nsubj(known-19, I-17)
aux(known-19, 've-18)
acl:relcl(sorrow-14, known-19)
case(way-22, on-20)
nmod:poss(way-22, my-21)
nmod:on(known-19, way-22)
cc(known-19, But-24)
nsubj(old-27, I-25)
cop(old-27, 'm-26)
acl:relcl(sorrow-14, old-27)
conj:but(known-19, old-27)
cc(known-19, and-28)
nsubj(nervis-31, I-29)
cop(nervis-31, 'm-30)
acl:relcl(sorrow-14, nervis-31)
conj:and(known-19, nervis-31)
nsubjpass(cast-35, I-33)
auxpass(cast-35, 'm-34)
root(ROOT-0, cast-35)
case(Service-38, from-36)
det(Service-38, the-37)
nmod:from(cast-35, Service-38)
cc(cast-35, And-40)
advmod(deserve-43, all-41)
nsubj(deserve-43, I-42)
conj:and(cast-35, deserve-43)
cop(shillin-46, is-44)
det(shillin-46, a-45)
ccomp(deserve-43, shillin-46)
det(day-49, a-48)
dep(shillin-46, day-49)

(ROOT
  (S (-LRB- -LRB-)
    (SINV
      (VP (VBD _)
        (S
          (NP (NNP Chorus) (NNP _))
          (-RRB- -RRB-)
          (NP (NNP Shillin))
          ('' ')))
      (NP
        (NP (DT a) (NN day))
        (, ,)
        (NP
          (NP (NNP Bloomin) (POS '))
          (JJ good) (NN pay))))
    (: --)
    (S
      (ADJP (JJ Lucky)
        (S
          (VP (TO to)
            (VP (VB touch)
              (NP
                (NP (PRP it))
                (, ,)
                (NP
                  (NP (DT a) (NN shillin) ('' '))
                  (NP (DT a) (NN day)))))))))
    (. !)))

dep(Lucky-16, _-2)
compound(_-4, Chorus-3)
dep(Shillin-6, _-4)
xcomp(_-2, Shillin-6)
det(day-9, a-8)
nsubj(_-2, day-9)
nmod:poss(pay-14, Bloomin-11)
case(Bloomin-11, '-12)
amod(pay-14, good-13)
appos(day-9, pay-14)
root(ROOT-0, Lucky-16)
mark(touch-18, to-17)
xcomp(Lucky-16, touch-18)
dobj(touch-18, it-19)
det(shillin-22, a-21)
appos(it-19, shillin-22)
det(day-25, a-24)
dep(shillin-22, day-25)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (PRP it))
      (VP (VBZ drives)
        (S
          (NP (PRP me))
          (ADJP (RB half) (JJ crazy))
          (S
            (VP (TO to)
              (VP (VB think)
                (PP (IN of)
                  (NP (DT the) (NNS days)))
                (NP
                  (NP (NNP I) (NNP Went) (NNP slap))
                  (PP (IN for)
                    (NP (DT the) (NNP Ghazi))))))))))
    (, ,)
    (S
      (NP (PRP$ my) (NN sword))
      (PP (IN at)
        (NP (PRP$ my) (NN side))))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP we))
          (VP (VBD rode)
            (S
              (VP (VBG Hell-for-leather)
                (NP (DT Both) (NNS squadrons))
                (ADVP (RB together)))))))
      (, ,)
      (NP (DT That))
      (VP (VBD did) (RB n't)
        (VP (VB care)
          (SBAR (IN whether)
            (S
              (NP (PRP we))
              (VP (VBD lived)))))))
    (CC or)
    (S
      (NP (PRP we))
      (VP (VBD died)))
    (. .)))

discourse(drives-4, Oh-1)
nsubj(drives-4, it-3)
root(ROOT-0, drives-4)
nsubj(think-9, me-5)
advmod(crazy-7, half-6)
dep(think-9, crazy-7)
mark(think-9, to-8)
xcomp(drives-4, think-9)
case(days-12, of-10)
det(days-12, the-11)
nmod:of(think-9, days-12)
compound(slap-15, I-13)
compound(slap-15, Went-14)
dobj(think-9, slap-15)
case(Ghazi-18, for-16)
det(Ghazi-18, the-17)
nmod:for(slap-15, Ghazi-18)
nmod:poss(sword-21, my-20)
ccomp(drives-4, sword-21)
case(side-24, at-22)
nmod:poss(side-24, my-23)
dep(sword-21, side-24)
advmod(rode-28, When-26)
nsubj(rode-28, we-27)
advcl(care-37, rode-28)
xcomp(rode-28, Hell-for-leather-29)
det(squadrons-31, Both-30)
dobj(Hell-for-leather-29, squadrons-31)
advmod(Hell-for-leather-29, together-32)
nsubj(care-37, That-34)
aux(care-37, did-35)
neg(care-37, n't-36)
conj:or(drives-4, care-37)
mark(lived-40, whether-38)
nsubj(lived-40, we-39)
ccomp(care-37, lived-40)
cc(drives-4, or-41)
nsubj(died-43, we-42)
conj:or(drives-4, died-43)

(ROOT
  (S (CC But)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT no) (NN use) (NN despairin) ('' '))))
    (PRN (, ,)
      (S
        (NP (PRP$ my) (NN wife))
        (VP (MD must)
          (VP (VB go)
            (NP
              (NP (NN charin))
              ('' ')
              (SBAR
                (S
                  (NP
                    (NP (NNP An) (POS '))
                    (NX (FW me)))
                  (VP (VBN commissairin) ('' ')
                    (NP (DT the) (NNS pay-bills))
                    (PP (TO to)
                      (NP (JJR better))))))))))
      (, ,))
    (IN So)
    (S
      (FRAG (IN if)
        (NP (PRP me)))
      (NP (PRP you))
      (VP (VBD be'old)
        (SBAR
          (S
            (PP (IN In)
              (NP
                (NP (DT the) (NN wet))
                (CC and)
                (NP (DT the) (NN cold))))
            (, ,)
            (PP (IN By)
              (NP (DT the) (NNP Grand) (NNP Metropold)))
            (, ,)
            (VP (MD wo) (RB n't)
              (NP (PRP you))
              (VP (VB give)
                (NP (PRP me))
                (NP (DT a) (NN letter))))))))
    (. ?)))

cc(despairin-6, But-1)
nsubj(despairin-6, it-2)
cop(despairin-6, 's-3)
neg(despairin-6, no-4)
compound(despairin-6, use-5)
root(ROOT-0, despairin-6)
nmod:poss(wife-10, my-9)
nsubj(go-12, wife-10)
aux(go-12, must-11)
dep(despairin-6, go-12)
dobj(go-12, charin-13)
nmod:poss(me-17, An-15)
case(An-15, '-16)
nsubj(commissairin-18, me-17)
acl:relcl(charin-13, commissairin-18)
det(pay-bills-21, the-20)
dobj(commissairin-18, pay-bills-21)
case(better-23, to-22)
nmod:to(commissairin-18, better-23)
dep(despairin-6, So-25)
dep(be'old-29, if-26)
dep(if-26, me-27)
nsubj(be'old-29, you-28)
parataxis(despairin-6, be'old-29)
case(wet-32, In-30)
det(wet-32, the-31)
nmod:in(give-45, wet-32)
cc(wet-32, and-33)
det(cold-35, the-34)
conj:and(wet-32, cold-35)
nmod:in(give-45, cold-35)
case(Metropold-40, By-37)
det(Metropold-40, the-38)
compound(Metropold-40, Grand-39)
nmod:by(give-45, Metropold-40)
aux(give-45, wo-42)
neg(give-45, n't-43)
dobj(give-45, you-44)
ccomp(be'old-29, give-45)
iobj(give-45, me-46)
det(letter-48, a-47)
dobj(give-45, letter-48)

(ROOT
  (S
    (NP
      (PRN (-LRB- -LRB-)
        (NP (CD _) (NNP Full) (NN chorus) (NNS _))
        (-RRB- -RRB-)))
    (VP
      (VP (MD Give) (`` `)
        (VP (VB im)
          (NP (DT a) (NN letter))))
      (: --) (`` `)
      (VP (MD Ca) (RB n't)
        (VP (VB do)
          (NP
            (NP (RB no) (JJR better))
            (, ,) (RB Late)
            (NP (JJ Troop-Sergeant-Major) (DT an))
            ('' '))))
      (: --)
      (VP (VBZ runs)
        (PP (IN with)
          (NP (DT a) (NN letter)))))
    (. !)))

nummod(_-5, _-2)
compound(_-5, Full-3)
compound(_-5, chorus-4)
nsubj(im-9, _-5)
aux(im-9, Give-7)
root(ROOT-0, im-9)
det(letter-11, a-10)
dobj(im-9, letter-11)
aux(do-16, Ca-14)
neg(do-16, n't-15)
dep(im-9, do-16)
neg(better-18, no-17)
dobj(do-16, better-18)
advmod(better-18, Late-20)
dep(better-18, Troop-Sergeant-Major-21)
dep(Troop-Sergeant-Major-21, an-22)
dep(im-9, runs-25)
case(letter-28, with-26)
det(letter-28, a-27)
nmod:with(runs-25, letter-28)

(ROOT
  (SINV
    (S
      (VP (VB Think)
        (SBAR
          (WHNP (WP what))
          (S (`` `)
            (NP (NNP e))
            (VP (VBZ 's)
              (VP (VBN been)))))))
    (, ,)
    (VP (VBP Think))
    (NP
      (NP
        (NP (WP what))
        (`` `)
        (S
          (SBAR
            (X (SYM e))
            (S
              (NP (POS 's))
              (VP (VBN seen))))
          (, ,)
          (VP (VB Think)
            (PP (IN of)
              (NP (PRP$ his) (NN pension)))))
        (, an) ('' '))
      (: --)
      (NP (NNP GAWD) (NNP SAVE) (NNP THE) (NNP QUEEN)))
    (. .)))

ccomp(Think-8, Think-1)
dobj(been-6, what-2)
nsubjpass(been-6, e-4)
auxpass(been-6, 's-5)
ccomp(Think-1, been-6)
root(ROOT-0, Think-8)
nsubj(Think-8, what-9)
dep(seen-13, e-11)
nsubj(seen-13, 's-12)
dep(Think-15, seen-13)
dep(what-9, Think-15)
case(pension-18, of-16)
nmod:poss(pension-18, his-17)
nmod:of(Think-15, pension-18)
compound(QUEEN-25, GAWD-22)
compound(QUEEN-25, SAVE-23)
compound(QUEEN-25, THE-24)
dep(what-9, QUEEN-25)

(ROOT
  (NP
    (NP
      (NP (NNP OTHER) (NNP VERSES) (NNP THE) (NNP BALLAD))
      (PP (IN OF)
        (NP (NNP EAST)
          (CC AND)
          (NNP WEST))))
    (S
      (S
        (INTJ (UH Oh))
        (, ,)
        (S
          (NP (NNP East))
          (VP (VBZ is)
            (ADJP (JJ East))))
        (, ,)
        (CC and)
        (S
          (NP (NNP West))
          (VP (VBZ is)
            (ADJP (JJ West)))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB never))
        (NP (DT the) (NN twain))
        (VP (MD shall)
          (VP (VB meet)))))
    (, ,)
    (VP (VBG Till)
      (S
        (S
          (NP (NNP Earth)
            (CC and)
            (NNP Sky))
          (VP (VBP stand)
            (ADVP (RB presently))
            (PP (IN at)
              (NP
                (NP (NNP God) (POS 's))
                (JJ great) (NNP Judgment) (NNP Seat)))))
        (: ;)
        (CC But)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (ADJP (DT neither) (JJ East)
              (CC nor)
              (JJ West))))
        (, ,)
        (INTJ (UH Border))
        (, ,)
        (S (CC nor)
          (NP
            (NP (NNP Breed))
            (, ,)
            (CC nor)
            (NP (NNP Birth))
            (, ,)
            (SBAR
              (WHADVP (WRB When))
              (S
                (NP (CD two) (JJ strong) (NNS men))
                (VP (VBP stand)))))
          (VP (VBP face)
            (S
              (VP (TO to)
                (VP (VB face) (, ,)
                  (ADVP (RB tho))
                  ('' ')
                  (NP
                    (NP (PRP they))
                    (VP (VBN come)
                      (PP (IN from)
                        (NP (DT the) (NNS ends))))))))))))
    (PP (IN of)
      (NP (DT the) (NN earth)))
    (. !)))

compound(BALLAD-4, OTHER-1)
compound(BALLAD-4, VERSES-2)
compound(BALLAD-4, THE-3)
root(ROOT-0, BALLAD-4)
case(EAST-6, OF-5)
nmod:of(BALLAD-4, EAST-6)
cc(EAST-6, AND-7)
nmod:of(BALLAD-4, WEST-8)
conj:and(EAST-6, WEST-8)
discourse(East-13, Oh-9)
nsubj(East-13, East-11)
cop(East-13, is-12)
dep(BALLAD-4, East-13)
cc(East-13, and-15)
nsubj(West-18, West-16)
cop(West-18, is-17)
dep(BALLAD-4, West-18)
conj:and(East-13, West-18)
cc(East-13, and-20)
neg(meet-25, never-21)
det(twain-23, the-22)
nsubj(meet-25, twain-23)
aux(meet-25, shall-24)
dep(BALLAD-4, meet-25)
conj:and(East-13, meet-25)
acl(BALLAD-4, Till-27)
nsubj(stand-31, Earth-28)
nsubj(is-42, Earth-28)
cc(Earth-28, and-29)
conj:and(Earth-28, Sky-30)
nsubj(stand-31, Sky-30)
xcomp(Till-27, stand-31)
advmod(stand-31, presently-32)
case(Seat-38, at-33)
nmod:poss(Seat-38, God-34)
case(God-34, 's-35)
amod(Seat-38, great-36)
compound(Seat-38, Judgment-37)
nmod:at(stand-31, Seat-38)
cc(stand-31, But-40)
expl(is-42, there-41)
xcomp(Till-27, is-42)
conj:but(stand-31, is-42)
cc:preconj(East-44, neither-43)
xcomp(is-42, East-44)
cc(East-44, nor-45)
xcomp(is-42, West-46)
conj:nor(East-44, West-46)
discourse(stand-31, Border-48)
cc(face-61, nor-50)
nsubj(face-61, Breed-51)
nsubj:xsubj(face-63, Breed-51)
cc(Breed-51, nor-53)
conj:nor(Breed-51, Birth-54)
nsubj(face-61, Birth-54)
nsubj:xsubj(face-63, Birth-54)
advmod(stand-60, When-56)
nummod(men-59, two-57)
amod(men-59, strong-58)
nsubj(stand-60, men-59)
acl:relcl(Breed-51, stand-60)
xcomp(Till-27, face-61)
conj:but(stand-31, face-61)
mark(face-63, to-62)
xcomp(face-61, face-63)
advmod(face-63, tho-65)
dobj(face-63, they-67)
acl(they-67, come-68)
case(ends-71, from-69)
det(ends-71, the-70)
nmod:from(come-68, ends-71)
case(earth-74, of-72)
det(earth-74, the-73)
nmod:of(BALLAD-4, earth-74)

(ROOT
  (S
    (S
      (S
        (NP (NNP Kamal))
        (VP (VBZ is)
          (ADJP (IN out)
            (PP (IN with)
              (NP (CD twenty) (NNS men))))
          (S
            (VP (TO to)
              (VP (VB raise)
                (NP (DT the) (NN Border-side)))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP he))
        (VP (VBZ has)
          (VP (VBN lifted)
            (NP
              (NP (DT the) (NNP Colonel) (POS 's))
              (NN mare)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT the) (NNP Colonel) (POS 's))
                      (NN pride))))))))))
    (: :)
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN lifted)
          (UCP
            (NP
              (NP (PRP$ her) (NN out))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN stable-door))
                  (PP (IN between)
                    (NP
                      (NP (DT the) (NN dawn))
                      (CC and)
                      (NP (DT the) (NN day)))))))
            (, ,)
            (CC And)
            (VP
              (VP (VBN turned)
                (NP (DT the) (NNS calkins))
                (PP (IN upon)
                  (NP (PRP$ her) (NNS feet))))
              (, ,)
              (CC and)
              (VP (VBN ridden)
                (NP (PRP her))
                (ADVP (RB far) (RB away))))))))
    (. .)))

nsubj(out-3, Kamal-1)
nsubj:xsubj(raise-8, Kamal-1)
cop(out-3, is-2)
root(ROOT-0, out-3)
case(men-6, with-4)
nummod(men-6, twenty-5)
nmod:with(out-3, men-6)
mark(raise-8, to-7)
xcomp(out-3, raise-8)
det(Border-side-10, the-9)
dobj(raise-8, Border-side-10)
cc(out-3, And-12)
nsubj(lifted-15, he-13)
aux(lifted-15, has-14)
conj:and(out-3, lifted-15)
det(Colonel-17, the-16)
nmod:poss(mare-19, Colonel-17)
case(Colonel-17, 's-18)
dobj(lifted-15, mare-19)
nsubj(pride-25, that-20)
cop(pride-25, is-21)
det(Colonel-23, the-22)
nmod:poss(pride-25, Colonel-23)
case(Colonel-23, 's-24)
ccomp(mare-19, pride-25)
nsubj(lifted-29, He-27)
aux(lifted-29, has-28)
parataxis(out-3, lifted-29)
nmod:poss(stable-door-34, her-30)
case(stable-door-34, out-31)
mwe(out-31, of-32)
det(stable-door-34, the-33)
nmod:out_of(lifted-29, stable-door-34)
case(dawn-37, between-35)
det(dawn-37, the-36)
nmod:between(stable-door-34, dawn-37)
cc(dawn-37, and-38)
det(day-40, the-39)
nmod:between(stable-door-34, day-40)
conj:and(dawn-37, day-40)
cc(stable-door-34, And-42)
nmod:out_of(lifted-29, turned-43)
conj:and(stable-door-34, turned-43)
det(calkins-45, the-44)
dobj(turned-43, calkins-45)
case(feet-48, upon-46)
nmod:poss(feet-48, her-47)
nmod:upon(turned-43, feet-48)
cc(turned-43, and-50)
conj:and(stable-door-34, ridden-51)
conj:and(turned-43, ridden-51)
dobj(ridden-51, her-52)
advmod(away-54, far-53)
advmod(ridden-51, away-54)

(ROOT
  (S
    (ADVP (RB Then))
    (ADVP (RB up)
      (CC and)
      (RB spoke))
    (NP
      (NP
        (NP (DT the) (NNP Colonel) (POS 's))
        (NN son))
      (SBAR
        (WHNP (WDT that))
        (VP (VBD led)
          (NP
            (NP (DT a) (NN troop))
            (PP (IN of)
              (NP (DT the) (NNPS Guides))))
          (: :) (`` ``)
          (SQ (VBZ Is)
            (NP (EX there))
            (ADVP (RB never))
            (NP
              (NP (DT a) (NN man))
              (PP (IN of)
                (NP (PDT all) (PRP$ my) (NNS men))))))))
    (VP (MD can)
      (VP (VB say)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NNP Kamal))
            (VP (VBZ hides))))))
    (. ?) ('' '')))

advmod(say-28, Then-1)
advmod(say-28, up-2)
cc(up-2, and-3)
conj:and(up-2, spoke-4)
advmod(say-28, spoke-4)
det(Colonel-6, the-5)
nmod:poss(son-8, Colonel-6)
case(Colonel-6, 's-7)
nsubj(led-10, son-8)
nsubj(say-28, son-8)
ref(son-8, that-9)
acl:relcl(son-8, led-10)
det(troop-12, a-11)
dobj(led-10, troop-12)
case(Guides-15, of-13)
det(Guides-15, the-14)
nmod:of(troop-12, Guides-15)
dep(led-10, Is-18)
expl(Is-18, there-19)
advmod(Is-18, never-20)
det(man-22, a-21)
nsubj(Is-18, man-22)
case(men-26, of-23)
det:predet(men-26, all-24)
nmod:poss(men-26, my-25)
nmod:of(man-22, men-26)
aux(say-28, can-27)
root(ROOT-0, say-28)
advmod(hides-31, where-29)
nsubj(hides-31, Kamal-30)
advcl(say-28, hides-31)

(ROOT
  (SINV
    (VP
      (VP (VBD Then)
        (PRT (RP up)))
      (CC and)
      (VP (VBD spoke)))
    (NP
      (NP (NNP Mahommed) (NNP Khan))
      (, ,)
      (NP
        (NP (DT the) (NN son))
        (PP (IN of)
          (NP (DT the) (NNP Ressaldar)))))
    (: :) (`` ``)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP ye))
          (VP (VBP know)
            (NP
              (NP (DT the) (NN track))
              (PP (IN of)
                (NP (DT the) (NN morning-mist)))))))
      (, ,)
      (NP (PRP ye))
      (VP (VBP know)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP$ his) (NNS pickets))
            (VP (VBP are))))))
    (. .)))

root(ROOT-0, Then-1)
compound:prt(Then-1, up-2)
cc(Then-1, and-3)
conj:and(Then-1, spoke-4)
compound(Khan-6, Mahommed-5)
nsubj(Then-1, Khan-6)
nsubj(spoke-4, Khan-6)
det(son-9, the-8)
appos(Khan-6, son-9)
case(Ressaldar-12, of-10)
det(Ressaldar-12, the-11)
nmod:of(son-9, Ressaldar-12)
mark(know-17, If-15)
nsubj(know-17, ye-16)
advcl(know-25, know-17)
det(track-19, the-18)
dobj(know-17, track-19)
case(morning-mist-22, of-20)
det(morning-mist-22, the-21)
nmod:of(track-19, morning-mist-22)
nsubj(know-25, ye-24)
ccomp(Then-1, know-25)
advmod(are-29, where-26)
nmod:poss(pickets-28, his-27)
nsubj(are-29, pickets-28)
ccomp(know-25, are-29)

(ROOT
  (S
    (PP (IN At)
      (NP (NN dusk)))
    (NP (PRP he))
    (VP (VBZ harries)
      (NP
        (NP (DT the) (NNP Abazai))
        (: --)
        (S
          (S
            (S
              (PP (IN at)
                (NP (NN dawn)))
              (NP (PRP he))
              (VP (VBZ is)
                (PP (IN into)
                  (NP (NNP Bonair)))))
            (, ,)
            (CC But)
            (S
              (NP (PRP he))
              (VP (MD must)
                (VP (VB go)
                  (PP (IN by)
                    (NP
                      (NP (NNP Fort) (NNP Bukloh))
                      (PP (TO to)
                        (NP (PRP$ his) (JJ own) (NN place)))))
                  (S
                    (VP (TO to)
                      (VP (VB fare))))))))
          (, ,) (IN So)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP ye))
                (VP (VB gallop)
                  (PP (TO to)
                    (NP (NNP Fort) (NNP Bukloh)))
                  (SBAR
                    (ADVP (RB as) (RB fast))
                    (IN as)
                    (S
                      (NP (DT a) (NN bird))
                      (VP (MD can)
                        (VP (VB fly) (, ,)
                          (SBAR
                            (S
                              (PP (IN By)
                                (NP
                                  (NP (DT the) (NN favour))
                                  (PP (IN of)
                                    (NP (NNP God)))))
                              (NP (PRP ye))
                              (VP (MD may)
                                (VP (VB cut)
                                  (NP (PRP him))
                                  (PP (IN off)
                                    (NP (NN ere))))))))))))))
            (NP (PRP he))
            (VP (VBP win)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN Tongue))
                  (PP (IN of)
                    (NP (NNP Jagai))))))))))
    (. .)))

case(dusk-2, At-1)
nmod:at(harries-4, dusk-2)
nsubj(harries-4, he-3)
root(ROOT-0, harries-4)
det(Abazai-6, the-5)
dobj(harries-4, Abazai-6)
case(dawn-9, at-8)
nmod:at(Bonair-13, dawn-9)
nsubj(Bonair-13, he-10)
cop(Bonair-13, is-11)
case(Bonair-13, into-12)
parataxis(Abazai-6, Bonair-13)
cc(Bonair-13, But-15)
nsubj(go-18, he-16)
nsubj:xsubj(fare-27, he-16)
aux(go-18, must-17)
parataxis(Abazai-6, go-18)
conj:but(Bonair-13, go-18)
case(Bukloh-21, by-19)
compound(Bukloh-21, Fort-20)
nmod:by(go-18, Bukloh-21)
case(place-25, to-22)
nmod:poss(place-25, his-23)
amod(place-25, own-24)
nmod:to(Bukloh-21, place-25)
mark(fare-27, to-26)
xcomp(go-18, fare-27)
dep(Bonair-13, So-29)
mark(gallop-32, if-30)
nsubj(gallop-32, ye-31)
advcl(win-56, gallop-32)
case(Bukloh-35, to-33)
compound(Bukloh-35, Fort-34)
nmod:to(gallop-32, Bukloh-35)
advmod(fast-37, as-36)
advmod(fly-42, fast-37)
mark(fly-42, as-38)
det(bird-40, a-39)
nsubj(fly-42, bird-40)
aux(fly-42, can-41)
advcl(gallop-32, fly-42)
case(favour-46, By-44)
det(favour-46, the-45)
nmod:by(cut-51, favour-46)
case(God-48, of-47)
nmod:of(favour-46, God-48)
nsubj(cut-51, ye-49)
aux(cut-51, may-50)
ccomp(fly-42, cut-51)
dobj(cut-51, him-52)
case(ere-54, off-53)
nmod:off(cut-51, ere-54)
nsubj(win-56, he-55)
parataxis(Bonair-13, win-56)
case(Tongue-59, to-57)
det(Tongue-59, the-58)
nmod:to(win-56, Tongue-59)
case(Jagai-61, of-60)
nmod:of(Tongue-59, Jagai-61)

(ROOT
  (S (CC But)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP he))
          (VP (VB be)
            (NP
              (NP (JJ past) (DT the) (NN Tongue))
              (PP (IN of)
                (NP (NNP Jagai)))))))
      (, ,)
      (ADVP (RB right) (RB swiftly))
      (VP (VB turn)
        (NP (PRP ye))
        (ADVP (RB then))))
    (, ,) (IN For)
    (S
      (NP
        (NP (DT the) (NN length))
        (CC and)
        (NP
          (NP (DT the) (NN breadth))
          (PP (IN of)
            (NP (DT that) (JJ grisly) (NN plain)))))
      (VP (VBZ is)
        (VP (VBN sown)
          (PP (IN with)
            (NP
              (NP (NNP Kamal) (POS 's))
              (NNS men))))))
    (. .)))

cc(turn-13, But-1)
mark(Tongue-7, if-2)
nsubj(Tongue-7, he-3)
cop(Tongue-7, be-4)
amod(Tongue-7, past-5)
det(Tongue-7, the-6)
advcl(turn-13, Tongue-7)
case(Jagai-9, of-8)
nmod:of(Tongue-7, Jagai-9)
advmod(swiftly-12, right-11)
advmod(turn-13, swiftly-12)
root(ROOT-0, turn-13)
dobj(turn-13, ye-14)
advmod(turn-13, then-15)
dep(turn-13, For-17)
det(length-19, the-18)
nsubjpass(sown-28, length-19)
cc(length-19, and-20)
det(breadth-22, the-21)
conj:and(length-19, breadth-22)
nsubjpass(sown-28, breadth-22)
case(plain-26, of-23)
det(plain-26, that-24)
amod(plain-26, grisly-25)
nmod:of(breadth-22, plain-26)
auxpass(sown-28, is-27)
parataxis(turn-13, sown-28)
case(men-32, with-29)
nmod:poss(men-32, Kamal-30)
case(Kamal-30, 's-31)
nmod:with(sown-28, men-32)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADJP (NN rock)
          (PP (TO to)
            (NP
              (NP (DT the)
                (ADJP
                  (ADJP (JJ left))
                  (, ,)
                  (CC and)
                  (ADJP (NN rock)
                    (PP (TO to)
                      (NP (DT the) (NN right))))
                  (, ,)
                  (CC and)
                  (ADJP (RB low) (JJ lean)))
                (NN thorn))
              (PP (IN between)))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP ye))
      (VP (MD may)
        (VP (VB hear)
          (NP (DT a) (JJ breech-bolt) (NN snick))
          (SBAR
            (WHADVP (WRB where))
            (S
              (ADVP (RB never))
              (NP (DT a) (NN man))
              (VP (VBZ is)
                (VP (VBN seen))))))))
    (. .) ('' '')))

expl(is-2, There-1)
root(ROOT-0, is-2)
xcomp(is-2, rock-3)
case(thorn-17, to-4)
det(thorn-17, the-5)
amod(thorn-17, left-6)
cc(left-6, and-8)
conj:and(left-6, rock-9)
amod(thorn-17, rock-9)
case(right-12, to-10)
det(right-12, the-11)
nmod:to(rock-9, right-12)
cc(left-6, and-14)
advmod(lean-16, low-15)
conj:and(left-6, lean-16)
amod(thorn-17, lean-16)
nmod:to(rock-3, thorn-17)
acl(thorn-17, between-18)
cc(is-2, And-20)
nsubj(hear-23, ye-21)
aux(hear-23, may-22)
conj:and(is-2, hear-23)
det(snick-26, a-24)
amod(snick-26, breech-bolt-25)
dobj(hear-23, snick-26)
advmod(seen-32, where-27)
neg(seen-32, never-28)
det(man-30, a-29)
nsubjpass(seen-32, man-30)
auxpass(seen-32, is-31)
advcl(hear-23, seen-32)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNP Colonel) (POS 's))
        (NN son))
      (VP (VBZ has)
        (VP (VBN taken)
          (NP (DT a) (NN horse)))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (JJ raw) (JJ rough) (NN dun))
      (VP (VBD was)
        (UCP
          (NP (PRP he))
          (, ,)
          (PP (IN With)
            (NP
              (NP (DT the) (NN mouth))
              (PP (IN of)
                (NP (DT a) (NN bell)))))
          (CC and)
          (NP
            (NP
              (NP (DT the) (NN heart))
              (PP (IN of)
                (NP (NNP Hell))))
            (CC and)
            (NP
              (NP (DT the) (NN head))
              (PP (IN of)
                (NP (DT the) (NN gallows-tree))))))))
    (. .)))

det(Colonel-2, The-1)
nmod:poss(son-4, Colonel-2)
case(Colonel-2, 's-3)
nsubj(taken-6, son-4)
aux(taken-6, has-5)
root(ROOT-0, taken-6)
det(horse-8, a-7)
dobj(taken-6, horse-8)
cc(taken-6, and-10)
det(dun-14, a-11)
amod(dun-14, raw-12)
amod(dun-14, rough-13)
nsubj(he-16, dun-14)
cop(he-16, was-15)
conj:and(taken-6, he-16)
case(mouth-20, With-18)
det(mouth-20, the-19)
conj:and(taken-6, mouth-20)
conj:and(he-16, mouth-20)
case(bell-23, of-21)
det(bell-23, a-22)
nmod:of(mouth-20, bell-23)
cc(he-16, and-24)
det(heart-26, the-25)
conj:and(taken-6, heart-26)
conj:and(he-16, heart-26)
case(Hell-28, of-27)
nmod:of(heart-26, Hell-28)
cc(heart-26, and-29)
det(head-31, the-30)
conj:and(he-16, head-31)
conj:and(heart-26, head-31)
case(gallows-tree-34, of-32)
det(gallows-tree-34, the-33)
nmod:of(head-31, gallows-tree-34)

(ROOT
  (S
    (S
      (S
        (NP
          (NP
            (NP (DT The) (NNP Colonel) (POS 's))
            (NN son))
          (PP (TO to)
            (NP (DT the) (NNP Fort))))
        (VP (VBZ has)
          (VP (VBN won))))
      (, ,)
      (NP (PRP they))
      (VP (VBD bid)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBP stay)
              (S
                (VP (TO to)
                  (VP (VB eat)))))))))
    (: --)
    (S
      (SBAR
        (WHNP (WP Who))
        (S
          (NP
            (NP (NNS rides))
            (PP (IN at)
              (NP
                (NP (DT the) (NN tail))
                (PP (IN of)
                  (NP (DT a) (NNP Border) (NN thief))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ sits)
        (ADVP (RB not) (RB long))
        (PP (IN at)
          (NP (PRP$ his) (NN meat)))))
    (. .)))

det(Colonel-2, The-1)
nmod:poss(son-4, Colonel-2)
case(Colonel-2, 's-3)
nsubj(won-9, son-4)
case(Fort-7, to-5)
det(Fort-7, the-6)
nmod:to(son-4, Fort-7)
aux(won-9, has-8)
ccomp(bid-12, won-9)
nsubj(bid-12, they-11)
root(ROOT-0, bid-12)
nsubj(stay-14, him-13)
nsubj:xsubj(eat-16, him-13)
ccomp(bid-12, stay-14)
mark(eat-16, to-15)
xcomp(stay-14, eat-16)
dep(rides-19, Who-18)
advcl(sits-29, rides-19)
case(tail-22, at-20)
det(tail-22, the-21)
nmod:at(rides-19, tail-22)
case(thief-26, of-23)
det(thief-26, a-24)
compound(thief-26, Border-25)
nmod:of(tail-22, thief-26)
nsubj(sits-29, he-28)
parataxis(bid-12, sits-29)
dep(long-31, not-30)
advmod(sits-29, long-31)
case(meat-34, at-32)
nmod:poss(meat-34, his-33)
nmod:at(sits-29, meat-34)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ 's)
        (ADVP (RB up)
          (CC and)
          (RB away))
        (PP (IN from)
          (NP (NNP Fort) (NNP Bukloh)))
        (ADVP
          (ADVP (RB as) (RB fast))
          (SBAR (IN as)
            (S
              (NP (PRP he))
              (VP (MD can)
                (VP (VB fly) (, ,)
                  (PP (IN Till)
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (ADJP (JJ aware)
                          (PP (IN of)
                            (NP
                              (NP (PRP$ his) (NN father) (POS 's))
                              (NN mare))))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NN gut))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN Tongue))
                                (PP (IN of)
                                  (NP (NNP Jagai)))))))
                        (, ,)
                        (PP (IN Till)
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (ADJP (JJ aware)
                                (PP (IN of)
                                  (NP
                                    (NP
                                      (NP (PRP$ his) (NN father) (POS 's))
                                      (NN mare))
                                    (PP (IN with)
                                      (NP (NNP Kamal))))))
                              (PP (IN upon)
                                (NP (PRP$ her) (NN back))))))))))))))))
    (, ,)
    (CC And)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB spy)
              (NP
                (NP (DT the) (JJ white))
                (PP (IN of)
                  (NP (PRP$ her) (NN eye))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD made)
        (NP (DT the) (NN pistol) (NN crack))))
    (. .)))

nsubj(Bukloh-8, He-1)
cop(Bukloh-8, 's-2)
advmod(Bukloh-8, up-3)
cc(up-3, and-4)
conj:and(up-3, away-5)
advmod(Bukloh-8, away-5)
case(Bukloh-8, from-6)
compound(Bukloh-8, Fort-7)
root(ROOT-0, Bukloh-8)
advmod(fast-10, as-9)
advmod(Bukloh-8, fast-10)
mark(fly-14, as-11)
nsubj(fly-14, he-12)
aux(fly-14, can-13)
advcl(fast-10, fly-14)
mark(aware-19, Till-16)
nsubj(aware-19, he-17)
cop(aware-19, was-18)
advcl(fly-14, aware-19)
case(mare-24, of-20)
nmod:poss(father-22, his-21)
nmod:poss(mare-24, father-22)
case(father-22, 's-23)
nmod:of(aware-19, mare-24)
case(gut-27, in-25)
det(gut-27, the-26)
nmod:in(aware-19, gut-27)
case(Tongue-30, of-28)
det(Tongue-30, the-29)
nmod:of(gut-27, Tongue-30)
case(Jagai-32, of-31)
nmod:of(Tongue-30, Jagai-32)
mark(aware-37, Till-34)
nsubj(aware-37, he-35)
cop(aware-37, was-36)
advcl(aware-19, aware-37)
case(mare-42, of-38)
nmod:poss(father-40, his-39)
nmod:poss(mare-42, father-40)
case(father-40, 's-41)
nmod:of(aware-37, mare-42)
case(Kamal-44, with-43)
nmod:with(mare-42, Kamal-44)
case(back-47, upon-45)
nmod:poss(back-47, her-46)
nmod:upon(aware-37, back-47)
cc(Bukloh-8, And-49)
advmod(spy-53, when-50)
nsubj(spy-53, he-51)
aux(spy-53, could-52)
advcl(made-61, spy-53)
det(white-55, the-54)
dobj(spy-53, white-55)
case(eye-58, of-56)
nmod:poss(eye-58, her-57)
nmod:of(white-55, eye-58)
nsubj(made-61, he-60)
conj:and(Bukloh-8, made-61)
det(crack-64, the-62)
compound(crack-64, pistol-63)
dobj(made-61, crack-64)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN fired)
          (ADVP (RB once)))))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP (VBZ has)
          (VP (VBN fired)
            (ADVP (RB twice)))))
      (, ,))
    (CC but)
    (S
      (NP (DT the) (VBG whistling) (NN ball))
      (VP (VBD went)
        (ADJP (JJ wide))))
    (. .)))

nsubj(fired-3, He-1)
aux(fired-3, has-2)
root(ROOT-0, fired-3)
advmod(fired-3, once-4)
nsubj(fired-8, he-6)
aux(fired-8, has-7)
dep(fired-3, fired-8)
advmod(fired-8, twice-9)
cc(fired-3, but-11)
det(ball-14, the-12)
amod(ball-14, whistling-13)
nsubj(went-15, ball-14)
conj:but(fired-3, went-15)
xcomp(went-15, wide-16)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP Ye))
      (VP (VBP shoot)
        (PP (IN like)
          (NP (DT a) (NN soldier)))))
    (, ,) ('' '')
    (NP (NNP Kamal))
    (VP (VBD said))
    (. .)))

nsubj(shoot-3, Ye-2)
ccomp(said-10, shoot-3)
case(soldier-6, like-4)
det(soldier-6, a-5)
nmod:like(shoot-3, soldier-6)
nsubj(said-10, Kamal-9)
root(ROOT-0, said-10)

(ROOT
  (S (`` ``)
    (VP (VB Show)
      (ADVP (RB now))
      (SBAR (IN if)
        (S
          (NP (PRP ye))
          (VP (MD can)
            (VP (VB ride))))))
    (. .) ('' '')))

root(ROOT-0, Show-2)
advmod(Show-2, now-3)
mark(ride-7, if-4)
nsubj(ride-7, ye-5)
aux(ride-7, can-6)
advcl(Show-2, ride-7)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADVP (RP up)
          (CC and)
          (RP over))
        (NP
          (NP (DT the) (NN Tongue))
          (PP (IN of)
            (NP (NNP Jagai))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (JJ blown) (NNS dustdevils))
            (VP (VBP go) (, ,)
              (NP
                (NP (DT The) (NN dun))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD fled)
                      (PP (IN like)
                        (NP
                          (NP (DT a) (NN stag))
                          (PP (IN of)
                            (NP (CD ten))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN mare))
      (VP (VBP like)
        (NP (DT a) (JJ barren) (NN doe))))
    (. .)))

nsubj(Tongue-7, It-1)
cop(Tongue-7, 's-2)
advmod(Tongue-7, up-3)
cc(up-3, and-4)
conj:and(up-3, over-5)
advmod(Tongue-7, over-5)
det(Tongue-7, the-6)
root(ROOT-0, Tongue-7)
case(Jagai-9, of-8)
nmod:of(Tongue-7, Jagai-9)
mark(go-14, as-11)
amod(dustdevils-13, blown-12)
nsubj(go-14, dustdevils-13)
advcl(Tongue-7, go-14)
det(dun-17, The-16)
dobj(go-14, dun-17)
nsubj(fled-19, he-18)
acl:relcl(dun-17, fled-19)
case(stag-22, like-20)
det(stag-22, a-21)
nmod:like(fled-19, stag-22)
case(ten-24, of-23)
nmod:of(stag-22, ten-24)
cc(Tongue-7, but-26)
det(mare-28, the-27)
nsubj(like-29, mare-28)
conj:but(Tongue-7, like-29)
det(doe-32, a-30)
amod(doe-32, barren-31)
dobj(like-29, doe-32)

(ROOT
  (S
    (NP
      (NP (DT The) (NN dun))
      (SBAR
        (S
          (S
            (NP (PRP he))
            (VP
              (VP (VBD leaned)
                (PP (IN against)
                  (NP (DT the) (NN bit))))
              (CC and)
              (VP (VBD slugged)
                (NP (PRP$ his) (NN head))
                (PP (IN above)))))
          (, ,)
          (CC But)
          (S
            (NP (DT the) (JJ red) (NN mare))
            (VP (VBD played)
              (PP (IN with)
                (NP (DT the) (NNS snaffle-bars)))
              (, ,)
              (PP (IN as)
                (NP (DT a) (NN maiden))))))))
    (VP (VBZ plays)
      (PP (IN with)
        (NP (DT a) (NN glove))))
    (. .)))

det(dun-2, The-1)
nsubj(plays-26, dun-2)
nsubj(leaned-4, he-3)
nsubj(slugged-9, he-3)
acl:relcl(dun-2, leaned-4)
case(bit-7, against-5)
det(bit-7, the-6)
nmod:against(leaned-4, bit-7)
cc(leaned-4, and-8)
acl:relcl(dun-2, slugged-9)
conj:and(leaned-4, slugged-9)
nmod:poss(head-11, his-10)
dobj(slugged-9, head-11)
nmod(slugged-9, above-12)
cc(leaned-4, But-14)
det(mare-17, the-15)
amod(mare-17, red-16)
nsubj(played-18, mare-17)
acl:relcl(dun-2, played-18)
conj:but(leaned-4, played-18)
case(snaffle-bars-21, with-19)
det(snaffle-bars-21, the-20)
nmod:with(played-18, snaffle-bars-21)
case(maiden-25, as-23)
det(maiden-25, a-24)
nmod:as(played-18, maiden-25)
root(ROOT-0, plays-26)
case(glove-29, with-27)
det(glove-29, a-28)
nmod:with(plays-26, glove-29)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (ADJP (NN rock)
          (PP (TO to)
            (NP
              (NP (DT the)
                (ADJP
                  (ADJP
                    (ADJP (NN left)
                      (CC and)
                      (NN rock))
                    (PP (TO to)
                      (NP (DT the) (NN right))))
                  (, ,)
                  (CC and)
                  (ADJP (RB low) (JJ lean)))
                (NN thorn))
              (PP (IN between)))))))
    (, ,)
    (CC And)
    (S
      (ADVP (RB thrice))
      (NP (PRP he))
      (VP (VBD heard)
        (NP
          (NP (DT a) (JJ breech-bolt) (NN snick) (NN tho) ('' '))
          (ADVP (RB never))
          (SBAR
            (S
              (NP (DT a) (NN man))
              (VP (VBD was)
                (VP (VBN seen))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
xcomp(was-2, rock-3)
case(thorn-16, to-4)
det(thorn-16, the-5)
amod(thorn-16, left-6)
cc(left-6, and-7)
conj:and(left-6, rock-8)
amod(thorn-16, rock-8)
case(right-11, to-9)
det(right-11, the-10)
nmod:to(left-6, right-11)
cc(left-6, and-13)
advmod(lean-15, low-14)
conj:and(left-6, lean-15)
amod(thorn-16, lean-15)
nmod:to(rock-3, thorn-16)
acl(thorn-16, between-17)
cc(was-2, And-19)
advmod(heard-22, thrice-20)
nsubj(heard-22, he-21)
conj:and(was-2, heard-22)
det(tho-26, a-23)
amod(tho-26, breech-bolt-24)
compound(tho-26, snick-25)
dobj(heard-22, tho-26)
advmod(tho-26, never-28)
det(man-30, a-29)
nsubjpass(seen-32, man-30)
auxpass(seen-32, was-31)
acl:relcl(tho-26, seen-32)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (VP (VBP have)
          (VP (VBN ridden)
            (NP (DT the) (JJ low) (NN moon))
            (PRT (RP out))
            (PP (IN of)
              (NP (DT the) (NN sky))))))
      (, ,)
      (NP (PRP$ their) (NNS hoofs))
      (VP (VB drum)
        (PRT (RP up))
        (NP
          (NP (DT the) (NN dawn))
          (, ,)
          (NP
            (NP (DT The) (NN dun))
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBD went)
                  (PP (IN like)
                    (NP (DT a) (VBN wounded) (NN bull))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN mare))
      (VP (VBP like)
        (NP (DT a) (JJ new-roused) (NN fawn))))
    (. .)))

nsubj(ridden-3, They-1)
aux(ridden-3, have-2)
ccomp(drum-14, ridden-3)
det(moon-6, the-4)
amod(moon-6, low-5)
dobj(ridden-3, moon-6)
compound:prt(ridden-3, out-7)
case(sky-10, of-8)
det(sky-10, the-9)
nmod:of(ridden-3, sky-10)
nmod:poss(hoofs-13, their-12)
nsubj(drum-14, hoofs-13)
root(ROOT-0, drum-14)
compound:prt(drum-14, up-15)
det(dawn-17, the-16)
dobj(drum-14, dawn-17)
det(dun-20, The-19)
appos(dawn-17, dun-20)
nsubj(went-22, he-21)
acl:relcl(dun-20, went-22)
case(bull-26, like-23)
det(bull-26, a-24)
amod(bull-26, wounded-25)
nmod:like(went-22, bull-26)
cc(drum-14, but-28)
det(mare-30, the-29)
nsubj(like-31, mare-30)
conj:but(drum-14, like-31)
det(fawn-34, a-32)
amod(fawn-34, new-roused-33)
dobj(like-31, fawn-34)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN dun))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD fell)
              (PP (IN at)
                (NP (DT a) (NN water-course))))))
        (PRN (: --)
          (PP (IN in)
            (NP (DT a) (JJ woful) (NN heap)))))
      (VP (VBD fell)
        (NP (PRP he))))
    (, ,)
    (CC And)
    (S
      (NP (NNP Kamal))
      (VP
        (VP (VBZ has)
          (VP (VBN turned)
            (NP (DT the) (JJ red) (NN mare))
            (ADVP (RB back))))
        (, ,)
        (CC and)
        (VP (VBD pulled)
          (S
            (NP (DT the) (NN rider))
            (ADJP (JJ free))))))
    (. .)))

det(dun-2, The-1)
nsubj(fell-13, dun-2)
nsubj(fell-4, he-3)
acl:relcl(dun-2, fell-4)
case(water-course-7, at-5)
det(water-course-7, a-6)
nmod:at(fell-4, water-course-7)
case(heap-12, in-9)
det(heap-12, a-10)
amod(heap-12, woful-11)
nmod:in(dun-2, heap-12)
root(ROOT-0, fell-13)
dobj(fell-13, he-14)
cc(fell-13, And-16)
nsubj(turned-19, Kamal-17)
nsubj(pulled-26, Kamal-17)
aux(turned-19, has-18)
conj:and(fell-13, turned-19)
det(mare-22, the-20)
amod(mare-22, red-21)
dobj(turned-19, mare-22)
advmod(turned-19, back-23)
cc(turned-19, and-25)
conj:and(fell-13, pulled-26)
conj:and(turned-19, pulled-26)
det(rider-28, the-27)
nsubj(free-29, rider-28)
xcomp(pulled-26, free-29)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN knocked)
          (PP
            (ADVP
              (NP (DT the) (NN pistol))
              (IN out))
            (IN of)
            (NP (PRP$ his) (NN hand))))))
    (: --)
    (S
      (S
        (NP (JJ small) (NN room))
        (VP (VBD was)
          (ADVP (RB there))
          (S
            (VP (TO to)
              (VP (VB strive))))))
      (, ,) ('' '')
      (NP (PRP 'T))
      (VP (VBD was)
        (ADVP (RB only))
        (PP (IN by)
          (NP
            (NP (NN favour))
            (PP (IN of)
              (NP (NN mine)))))))
    (, ,) ('' '')
    (PRN
      (S
        (VP (VB quoth)
          (NP (PRP he)))))
    (, ,) (`` ``)
    (S
      (NP (PRP ye))
      (VP (VBD rode)
        (ADJP (RB so) (RB long) (JJ alive))))
    (: :)
    (S
      (NP (EX There))
      (VP (VBD was) (RB not)
        (NP
          (NP (DT a) (NN rock))
          (PP (IN for)
            (NP (CD twenty) (NN mile))))))
    (, ,)
    (S
      (NP (EX there))
      (VP (VBD was) (RB not)
        (NP
          (NP (DT a) (NN clump))
          (PP (IN of)
            (NP (NN tree))))))
    (, ,)
    (CC But)
    (S
      (S
        (VP (VBN covered)
          (NP
            (NP (DT a) (NN man))
            (PP (IN of)
              (NP (PRP$ my) (JJ own) (NNS men))))
          (PP (IN with)
            (NP (PRP$ his) (NN rifle)))))
      (VP (VBD cocked)
        (PP (IN on)
          (NP (PRP$ his) (NN knee)))))
    (. .)))

nsubj(knocked-3, He-1)
aux(knocked-3, has-2)
root(ROOT-0, knocked-3)
det(pistol-5, the-4)
advmod(hand-9, pistol-5)
case(pistol-5, out-6)
case(hand-9, of-7)
nmod:poss(hand-9, his-8)
nmod:of(knocked-3, hand-9)
amod(room-12, small-11)
nsubj(was-13, room-12)
nsubj:xsubj(strive-16, room-12)
ccomp(favour-23, was-13)
advmod(was-13, there-14)
mark(strive-16, to-15)
xcomp(was-13, strive-16)
nsubj(favour-23, 'T-19)
cop(favour-23, was-20)
advmod(favour-23, only-21)
case(favour-23, by-22)
conj:but(knocked-3, favour-23)
case(mine-25, of-24)
nmod:of(favour-23, mine-25)
dep(knocked-3, quoth-28)
dobj(quoth-28, he-29)
nsubj(rode-33, ye-32)
conj:but(knocked-3, rode-33)
advmod(alive-36, so-34)
advmod(alive-36, long-35)
xcomp(rode-33, alive-36)
expl(was-39, There-38)
conj:but(knocked-3, was-39)
neg(was-39, not-40)
det(rock-42, a-41)
nsubj(was-39, rock-42)
case(mile-45, for-43)
nummod(mile-45, twenty-44)
nmod:for(rock-42, mile-45)
expl(was-48, there-47)
ccomp(knocked-3, was-48)
neg(was-48, not-49)
det(clump-51, a-50)
nsubj(was-48, clump-51)
case(tree-53, of-52)
nmod:of(clump-51, tree-53)
cc(knocked-3, But-55)
csubj(cocked-66, covered-56)
det(man-58, a-57)
dobj(covered-56, man-58)
case(men-62, of-59)
nmod:poss(men-62, my-60)
amod(men-62, own-61)
nmod:of(man-58, men-62)
case(rifle-65, with-63)
nmod:poss(rifle-65, his-64)
nmod:with(covered-56, rifle-65)
conj:but(knocked-3, cocked-66)
case(knee-69, on-67)
nmod:poss(knee-69, his-68)
nmod:on(cocked-66, knee-69)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (VP (VBN raised)
            (NP (PRP$ my) (NN bridle-hand))))))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN held)
            (S
              (NP (PRP it))
              (ADJP (JJ low)))))))
    (, ,)
    (S
      (NP
        (NP (DT The) (JJ little) (NNS jackals))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VB flee)
              (ADVP (RB so) (RB fast))))))
      (VP (VBD were)
        (VP (VBG feasting)
          (NP
            (NP (DT all))
            (PP (IN in)
              (NP (DT a) (NN row)))))))
    (: :)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP I))
          (VP (VBD had)
            (VP (VBD bowed)
              (NP (PRP$ my) (NN head))
              (PP (IN on)
                (NP (PRP$ my) (NN breast)))))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN held)
              (S
                (NP (PRP it))
                (ADJP (JJ high)))))))
      (, ,)
      (NP
        (NP (DT The) (NN kite))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBN whistles)
              (PP (IN above)
                (NP (PRP us)))))))
      (ADVP (RB now))
      (VP (VBD were)
        (VP (VBN gorged)
          (SBAR (IN till)
            (S
              (NP (PRP she))
              (VP (MD could) (RB not)
                (VP (VB fly))))))))
    (. .) ('' '')))

mark(raised-4, If-1)
nsubj(raised-4, I-2)
aux(raised-4, had-3)
advcl(feasting-23, raised-4)
nmod:poss(bridle-hand-6, my-5)
dobj(raised-4, bridle-hand-6)
mark(held-11, as-8)
nsubj(held-11, I-9)
aux(held-11, have-10)
dep(feasting-23, held-11)
nsubj(low-13, it-12)
xcomp(held-11, low-13)
det(jackals-17, The-15)
amod(jackals-17, little-16)
nsubj(flee-19, jackals-17)
nsubj(feasting-23, jackals-17)
ref(jackals-17, that-18)
acl:relcl(jackals-17, flee-19)
advmod(fast-21, so-20)
advmod(flee-19, fast-21)
aux(feasting-23, were-22)
root(ROOT-0, feasting-23)
dobj(feasting-23, all-24)
case(row-27, in-25)
det(row-27, a-26)
nmod:in(all-24, row-27)
mark(bowed-32, If-29)
nsubj(bowed-32, I-30)
aux(bowed-32, had-31)
advcl(gorged-54, bowed-32)
nmod:poss(head-34, my-33)
dobj(bowed-32, head-34)
case(breast-37, on-35)
nmod:poss(breast-37, my-36)
nmod:on(bowed-32, breast-37)
mark(held-42, as-39)
nsubj(held-42, I-40)
aux(held-42, have-41)
advcl(gorged-54, held-42)
nsubj(high-44, it-43)
xcomp(held-42, high-44)
det(kite-47, The-46)
nsubj(whistles-49, kite-47)
nsubjpass(gorged-54, kite-47)
ref(kite-47, that-48)
acl:relcl(kite-47, whistles-49)
case(us-51, above-50)
nmod:above(whistles-49, us-51)
advmod(gorged-54, now-52)
auxpass(gorged-54, were-53)
parataxis(feasting-23, gorged-54)
mark(fly-59, till-55)
nsubj(fly-59, she-56)
aux(fly-59, could-57)
neg(fly-59, not-58)
advcl(gorged-54, fly-59)

(ROOT
  (S
    (S
      (NP (NNP Lightly))
      (VP
        (VP (VBD answered)
          (NP
            (NP (DT the) (NNP Colonel) (POS 's))
            (NN son)))
        (: :) (`` ``)
        (VP (VBP Do)
          (ADJP (JJ good)
            (PP (TO to)
              (NP (NN bird)
                (CC and)
                (NN beast)))))))
    (, ,)
    (CC But)
    (S
      (NP
        (NP (NN count))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBN come)
              (PP (IN for)
                (NP (DT the) (JJ broken)))))))
      (VP (VBZ meats)
        (SBAR (IN before)
          (S
            (NP (PRP thou))
            (VP (VBP makest)
              (NP (DT a) (NN feast)))))))
    (. .)))

nsubj(answered-2, Lightly-1)
root(ROOT-0, answered-2)
det(Colonel-4, the-3)
nmod:poss(son-6, Colonel-4)
case(Colonel-4, 's-5)
dobj(answered-2, son-6)
dep(answered-2, Do-9)
xcomp(Do-9, good-10)
case(bird-12, to-11)
nmod:to(good-10, bird-12)
cc(bird-12, and-13)
nmod:to(good-10, beast-14)
conj:and(bird-12, beast-14)
cc(answered-2, But-16)
nsubj(come-19, count-17)
nsubj(meats-23, count-17)
ref(count-17, who-18)
acl:relcl(count-17, come-19)
case(broken-22, for-20)
det(broken-22, the-21)
nmod:for(come-19, broken-22)
conj:but(answered-2, meats-23)
mark(makest-26, before-24)
nsubj(makest-26, thou-25)
advcl(meats-23, makest-26)
det(feast-28, a-27)
dobj(makest-26, feast-28)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (MD should)
          (VP (VB follow)
            (S
              (NP (DT a) (CD thousand) (NNS swords))
              (VP (TO to)
                (VP (VB carry)
                  (NP (PRP$ my) (NNS bones))
                  (ADVP (RB away)))))))))
    (, ,)
    (NP
      (NP (JJ Belike) (DT the) (NN price))
      (PP (IN of)
        (NP
          (NP (DT a) (NN jackal) (POS 's))
          (NN meal))))
    (VP (VBD were)
      (ADJP
        (ADJP (JJR more))
        (SBAR (IN than)
          (S
            (NP (DT a) (NN thief))
            (VP (MD could)
              (VP (VB pay)))))))
    (. .)))

mark(follow-4, If-1)
expl(follow-4, there-2)
aux(follow-4, should-3)
advcl(were-22, follow-4)
det(swords-7, a-5)
nummod(swords-7, thousand-6)
dobj(follow-4, swords-7)
nsubj:xsubj(carry-9, swords-7)
mark(carry-9, to-8)
xcomp(follow-4, carry-9)
nmod:poss(bones-11, my-10)
dobj(carry-9, bones-11)
advmod(carry-9, away-12)
amod(price-16, Belike-14)
det(price-16, the-15)
nsubj(were-22, price-16)
case(meal-21, of-17)
det(jackal-19, a-18)
nmod:poss(meal-21, jackal-19)
case(jackal-19, 's-20)
nmod:of(price-16, meal-21)
root(ROOT-0, were-22)
xcomp(were-22, more-23)
mark(pay-28, than-24)
det(thief-26, a-25)
nsubj(pay-28, thief-26)
aux(pay-28, could-27)
ccomp(more-23, pay-28)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD will)
        (VP (VB feed)
          (NP (PRP$ their) (NN horse))
          (PP (IN on)
            (NP (DT the) (NN standing) (NN crop))))))
    (, ,)
    (NP
      (NP (PRP$ their) (NNS men))
      (PP (IN on)
        (NP
          (NP (DT the) (JJ garnered) (NN grain))
          (, ,)
          (NP
            (NP (DT The) (NN thatch))
            (PP (IN of)
              (NP (DT the) (NNS byres)))))))
    (VP (MD will)
      (VP (VB serve)
        (NP (PRP$ their) (NNS fires))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PDT all) (DT the) (NNS cattle))
            (VP (VBP are)
              (VP (VBN slain)))))))
    (. .)))

nsubj(feed-3, They-1)
aux(feed-3, will-2)
ccomp(serve-24, feed-3)
nmod:poss(horse-5, their-4)
dobj(feed-3, horse-5)
case(crop-9, on-6)
det(crop-9, the-7)
compound(crop-9, standing-8)
nmod:on(feed-3, crop-9)
nmod:poss(men-12, their-11)
nsubj(serve-24, men-12)
case(grain-16, on-13)
det(grain-16, the-14)
amod(grain-16, garnered-15)
nmod:on(men-12, grain-16)
det(thatch-19, The-18)
appos(grain-16, thatch-19)
case(byres-22, of-20)
det(byres-22, the-21)
nmod:of(thatch-19, byres-22)
aux(serve-24, will-23)
root(ROOT-0, serve-24)
nmod:poss(fires-26, their-25)
dobj(serve-24, fires-26)
advmod(slain-32, when-27)
det:predet(cattle-30, all-28)
det(cattle-30, the-29)
nsubjpass(slain-32, cattle-30)
auxpass(slain-32, are-31)
advcl(serve-24, slain-32)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP thou))
        (VP (VBP thinkest)
          (S
            (NP (DT the) (NN price))
            (VP (VB be)
              (ADJP (JJ fair)))))))
    (, ,)
    (PRN (: --)
      (S
        (S
          (NP (PRP$ thy) (NNS brethren))
          (VP (VBP wait)
            (S
              (VP (TO to)
                (VP (VB sup))))))
        (, ,)
        (S
          (NP (DT The) (NN hound))
          (VP (VBZ is)
            (VP (VBN kin)
              (PP (TO to)
                (NP (DT the) (NN jackal-spawn))))))
        (, ,))
      (: --))
    (VP
      (VP (VBD howl) (, ,)
        (NP (NN dog)))
      (, ,)
      (CC and)
      (VP (VBP call)
        (NP (PRP them))
        (PRT (RP up))))
    (. !)))

cc(howl-26, But-1)
mark(thinkest-4, if-2)
nsubj(thinkest-4, thou-3)
advcl(howl-26, thinkest-4)
det(price-6, the-5)
nsubj(fair-8, price-6)
cop(fair-8, be-7)
ccomp(thinkest-4, fair-8)
nmod:poss(brethren-12, thy-11)
nsubj(wait-13, brethren-12)
nsubj:xsubj(sup-15, brethren-12)
parataxis(howl-26, wait-13)
mark(sup-15, to-14)
xcomp(wait-13, sup-15)
det(hound-18, The-17)
nsubjpass(kin-20, hound-18)
auxpass(kin-20, is-19)
parataxis(wait-13, kin-20)
case(jackal-spawn-23, to-21)
det(jackal-spawn-23, the-22)
nmod:to(kin-20, jackal-spawn-23)
root(ROOT-0, howl-26)
dobj(howl-26, dog-28)
cc(howl-26, and-30)
conj:and(howl-26, call-31)
dobj(call-31, them-32)
compound:prt(call-31, up-33)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP thou))
        (VP (VBP thinkest))))
    (S
      (NP (DT the) (NN price))
      (VP
        (VP (VB be)
          (ADJP (JJ high))
          (, ,)
          (PP (IN in)
            (NP (NN steer)
              (CC and)
              (NN gear))))
        (CC and)
        (VP (VB stack))
        (, ,)
        (VP (VB Give)
          (NP (PRP me))
          (NP
            (NP
              (NP (PRP$ my) (NN father) (POS 's))
              (NN mare))
            (ADVP (RB again))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB fight)
          (NP (PRP$ my) (JJ own) (NN way))
          (ADVP (RB back)))))
    (. !) ('' '')))

cc(high-8, And-1)
mark(thinkest-4, if-2)
nsubj(thinkest-4, thou-3)
advcl(high-8, thinkest-4)
det(price-6, the-5)
nsubj(high-8, price-6)
nsubj(stack-15, price-6)
cop(high-8, be-7)
root(ROOT-0, high-8)
case(steer-11, in-10)
nmod:in(high-8, steer-11)
cc(steer-11, and-12)
nmod:in(high-8, gear-13)
conj:and(steer-11, gear-13)
cc(high-8, and-14)
conj:and(high-8, stack-15)
dep(high-8, Give-17)
iobj(Give-17, me-18)
nmod:poss(father-20, my-19)
nmod:poss(mare-22, father-20)
case(father-20, 's-21)
dobj(Give-17, mare-22)
advmod(mare-22, again-23)
cc(high-8, and-25)
nsubj(fight-28, I-26)
aux(fight-28, 'll-27)
conj:and(high-8, fight-28)
nmod:poss(way-31, my-29)
amod(way-31, own-30)
dobj(fight-28, way-31)
advmod(fight-28, back-32)

(ROOT
  (S
    (NP (NNP Kamal))
    (VP
      (VP (VBZ has)
        (VP (VBD gripped)
          (NP (PRP him))
          (PP (IN by)
            (NP (DT the) (NN hand)))))
      (CC and)
      (VP (VBD set)
        (NP (PRP him))
        (PP (IN upon)
          (NP (PRP$ his) (NNS feet)))))
    (. .)))

nsubj(gripped-3, Kamal-1)
nsubj(set-9, Kamal-1)
aux(gripped-3, has-2)
root(ROOT-0, gripped-3)
dobj(gripped-3, him-4)
case(hand-7, by-5)
det(hand-7, the-6)
nmod:by(gripped-3, hand-7)
cc(gripped-3, and-8)
conj:and(gripped-3, set-9)
dobj(set-9, him-10)
case(feet-13, upon-11)
nmod:poss(feet-13, his-12)
nmod:upon(set-9, feet-13)

(ROOT
  (S (`` ``)
    (NP (DT No) (NN talk))
    (VP (MD shall)
      (VP (VB be)
        (PP (IN of)
          (NP (NNS dogs)))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (PRP he)))
      (, ,) (`` ``))
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP
          (NP (NN wolf))
          (CC and)
          (NP (JJ gray) (NN wolf)))
        (VP (VBP meet))))
    (. .)))

neg(talk-3, No-2)
nsubj(dogs-7, talk-3)
aux(dogs-7, shall-4)
cop(dogs-7, be-5)
case(dogs-7, of-6)
root(ROOT-0, dogs-7)
parataxis(dogs-7, said-10)
nsubj(said-10, he-11)
advmod(meet-19, when-14)
nsubj(meet-19, wolf-15)
cc(wolf-15, and-16)
amod(wolf-18, gray-17)
conj:and(wolf-15, wolf-18)
nsubj(meet-19, wolf-18)
advcl(dogs-7, meet-19)

(ROOT
  (S
    (S
      (NP (NNP May))
      (NP (PRP I))
      (VP (VBP eat)
        (NP (NN dirt))
        (SBAR (IN if)
          (S
            (NP (PRP thou))
            (VP (VBP hast)
              (VP (VBN hurt)
                (PP (IN of)
                  (NP (PRP me)))
                (PP (IN in)
                  (NP (NN deed)
                    (CC or)
                    (NN breath)))))))))
    (: ;)
    (S
      (NP
        (NP (WP What) (NN dam))
        (PP (IN of)
          (NP (NNS lances))))
      (VP (VBD brought)
        (NP (PRP thee))
        (PRT (RP forth))
        (S
          (VP (TO to)
            (VP (VB jest)
              (PP (IN at)
                (NP (DT the) (NN dawn))))))
        (PP (IN with)
          (NP (NNP Death)))))
    (. ?) ('' '')))

nmod:tmod(eat-3, May-1)
nsubj(eat-3, I-2)
root(ROOT-0, eat-3)
dobj(eat-3, dirt-4)
mark(hast-7, if-5)
nsubj(hast-7, thou-6)
advcl(eat-3, hast-7)
dep(hast-7, hurt-8)
case(me-10, of-9)
nmod:of(hurt-8, me-10)
case(deed-12, in-11)
nmod:in(hurt-8, deed-12)
cc(deed-12, or-13)
nmod:in(hurt-8, breath-14)
conj:or(deed-12, breath-14)
det(dam-17, What-16)
nsubj(brought-20, dam-17)
case(lances-19, of-18)
nmod:of(dam-17, lances-19)
parataxis(eat-3, brought-20)
dobj(brought-20, thee-21)
compound:prt(brought-20, forth-22)
mark(jest-24, to-23)
advcl(brought-20, jest-24)
case(dawn-27, at-25)
det(dawn-27, the-26)
nmod:at(jest-24, dawn-27)
case(Death-29, with-28)
nmod:with(brought-20, Death-29)

(ROOT
  (SINV
    (VP
      (ADVP (RB Lightly))
      (VBD answered))
    (NP (DT the)
      (NP (NNP Colonel) (POS 's))
      (NN son))
    (: :) (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (VBP hold)
          (PP (IN by)
            (NP
              (NP (DT the) (NN blood))
              (PP (IN of)
                (NP (PRP$ my) (NN clan)))))
          (: :)
          (S
            (VP (VB Take)
              (PRT (RP up))
              (NP
                (NP (DT the) (NN mare))
                (PP (IN for)
                  (NP
                    (NP (PRP$ my) (NN father) (POS 's))
                    (NN gift))))))))
      (: --)
      (S
        (PP (IN by)
          (NP (NNP God)))
        (, ,)
        (NP (PRP she))
        (VP (VBZ has)
          (VP (VBN carried)
            (NP (DT a) (NN man))))))
    (. !) ('' '')))

advmod(answered-2, Lightly-1)
root(ROOT-0, answered-2)
det(son-6, the-3)
nmod:poss(son-6, Colonel-4)
case(Colonel-4, 's-5)
nsubj(answered-2, son-6)
nsubj(hold-10, I-9)
ccomp(answered-2, hold-10)
case(blood-13, by-11)
det(blood-13, the-12)
nmod:by(hold-10, blood-13)
case(clan-16, of-14)
nmod:poss(clan-16, my-15)
nmod:of(blood-13, clan-16)
ccomp(hold-10, Take-18)
compound:prt(Take-18, up-19)
det(mare-21, the-20)
dobj(Take-18, mare-21)
case(gift-26, for-22)
nmod:poss(father-24, my-23)
nmod:poss(gift-26, father-24)
case(father-24, 's-25)
nmod:for(mare-21, gift-26)
case(God-29, by-28)
nmod:by(carried-33, God-29)
nsubj(carried-33, she-31)
aux(carried-33, has-32)
parataxis(hold-10, carried-33)
det(man-35, a-34)
dobj(carried-33, man-35)

(ROOT
  (S
    (S
      (NP (DT The) (JJ red) (NN mare))
      (VP
        (VP (VBD ran)
          (PP (TO to)
            (NP
              (NP (DT the) (NNP Colonel) (POS 's))
              (NN son))))
        (, ,)
        (CC and)
        (VP (VBD nuzzled)
          (PP (IN against)
            (NP (PRP$ his) (NN breast)))
          (: ;) (`` ``)
          (S
            (NP (PRP We))
            (VP (VB be)
              (NP (CD two) (JJ strong) (NNS men)))))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said)
          (NP (NNP Kamal)))
        (NP (RB then)))
      (, ,))
    (`` ``)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBP loveth)
        (NP (DT the) (JJR younger))
        (ADVP (RBS best))))
    (. .)))

det(mare-3, The-1)
amod(mare-3, red-2)
nsubj(ran-4, mare-3)
nsubj(nuzzled-12, mare-3)
root(ROOT-0, ran-4)
case(son-9, to-5)
det(Colonel-7, the-6)
nmod:poss(son-9, Colonel-7)
case(Colonel-7, 's-8)
nmod:to(ran-4, son-9)
cc(ran-4, and-11)
conj:and(ran-4, nuzzled-12)
case(breast-15, against-13)
nmod:poss(breast-15, his-14)
nmod:against(nuzzled-12, breast-15)
nsubj(men-22, We-18)
cop(men-22, be-19)
nummod(men-22, two-20)
amod(men-22, strong-21)
ccomp(nuzzled-12, men-22)
dep(ran-4, said-25)
dobj(said-25, Kamal-26)
nsubj(said-25, then-27)
cc(ran-4, but-30)
nsubj(loveth-32, she-31)
conj:but(ran-4, loveth-32)
det(younger-34, the-33)
dobj(loveth-32, younger-34)
advmod(loveth-32, best-35)

(ROOT
  (S (IN So)
    (NP (PRP she))
    (VP (MD shall)
      (VP (VB go)
        (PP (IN with)
          (NP
            (NP
              (NP (DT a) (NN lifter) (POS 's))
              (NN dower))
            (, ,)
            (NP
              (NP (PRP$ my) (JJ turquoise-studded) (NN rein))
              (, ,)
              (NP (PRP$ My) (JJ broidered) (NN saddle)
                (CC and)
                (NN saddle-cloth))
              (, ,))
            (CC and)
            (NP (JJ silver) (NNS stirrups) (NN twain))))))
    (. .) ('' '')))

dep(go-4, So-1)
nsubj(go-4, she-2)
aux(go-4, shall-3)
root(ROOT-0, go-4)
case(dower-9, with-5)
det(lifter-7, a-6)
nmod:poss(dower-9, lifter-7)
case(lifter-7, 's-8)
nmod:with(go-4, dower-9)
nmod:poss(rein-13, my-11)
amod(rein-13, turquoise-studded-12)
nmod:with(go-4, rein-13)
conj:and(dower-9, rein-13)
nmod:poss(saddle-17, My-15)
amod(saddle-17, broidered-16)
appos(rein-13, saddle-17)
cc(saddle-17, and-18)
appos(rein-13, saddle-cloth-19)
conj:and(saddle-17, saddle-cloth-19)
cc(dower-9, and-21)
amod(twain-24, silver-22)
compound(twain-24, stirrups-23)
nmod:with(go-4, twain-24)
conj:and(dower-9, twain-24)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Colonel) (POS 's))
      (NN son))
    (PRN
      (S
        (NP (DT a) (NN pistol))
        (VP
          (VP (VBD drew))
          (CC and)
          (VP (VBD held)
            (S
              (NP (PRP it))
              (ADJP (JJ muzzle-end))))))
      (, ,))
    (`` ``)
    (NP (PRP Ye))
    (VP
      (VP (VBP have)
        (VP (VBN taken)
          (NP (DT the) (NN one))
          (PP (IN from)
            (NP (DT a) (NN foe)))))
      (, ,) ('' '')
      (VP (VBD said)
        (NP (PRP he)))
      (: ;) (`` ``)
      (VP (MD will)
        (ADVP (RB ye))
        (VP (VB take)
          (NP (DT the) (NN mate))
          (PP (IN from)
            (NP (DT a) (NN friend))))))
    (. ?) ('' '')))

det(Colonel-2, The-1)
nmod:poss(son-4, Colonel-2)
case(Colonel-2, 's-3)
nsubj(taken-16, son-4)
det(pistol-6, a-5)
nsubj(drew-7, pistol-6)
nsubj(held-9, pistol-6)
parataxis(taken-16, drew-7)
cc(drew-7, and-8)
conj:and(drew-7, held-9)
parataxis(taken-16, held-9)
nsubj(muzzle-end-11, it-10)
xcomp(held-9, muzzle-end-11)
nsubj(taken-16, Ye-14)
aux(taken-16, have-15)
root(ROOT-0, taken-16)
det(one-18, the-17)
dobj(taken-16, one-18)
case(foe-21, from-19)
det(foe-21, a-20)
nmod:from(taken-16, foe-21)
dep(taken-16, said-24)
dobj(said-24, he-25)
aux(take-30, will-28)
advmod(take-30, ye-29)
dep(taken-16, take-30)
det(mate-32, the-31)
dobj(take-30, mate-32)
case(friend-35, from-33)
det(friend-35, a-34)
nmod:from(take-30, friend-35)

(ROOT
  (S
    (NP (`` ``)
      (NP
        (NP (DT A) (NN gift))
        (PP (IN for)
          (NP (DT a) (NN gift))))
      (, ,) ('' ''))
    (VP (VBD said)
      (NP
        (NP (NNP Kamal) (NNP straight))
        (: ;) (`` ``)
        (NP
          (NP (DT a) (NN limb))
          (PP (IN for)
            (NP
              (NP (DT the) (NN risk))
              (PP (IN of)
                (NP (DT a) (NN limb))))))))
    (. .)))

det(gift-3, A-2)
nsubj(said-9, gift-3)
case(gift-6, for-4)
det(gift-6, a-5)
nmod:for(gift-3, gift-6)
root(ROOT-0, said-9)
compound(straight-11, Kamal-10)
dobj(said-9, straight-11)
det(limb-15, a-14)
dep(straight-11, limb-15)
case(risk-18, for-16)
det(risk-18, the-17)
nmod:for(limb-15, risk-18)
case(limb-21, of-19)
det(limb-21, a-20)
nmod:of(risk-18, limb-21)

(ROOT
  (S
    (S
      (NP (NNP Thy) (NN father))
      (VP (VBZ has)
        (VP (VBN sent)
          (NP (PRP$ his) (NN son))
          (PP (TO to)
            (NP (PRP me))))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB send)
        (NP (PRP$ my) (NN son))
        (PP (TO to)
          (NP (PRP him)))))
    (. !) ('' '')))

compound(father-2, Thy-1)
nsubj(sent-4, father-2)
aux(sent-4, has-3)
ccomp(send-12, sent-4)
nmod:poss(son-6, his-5)
dobj(sent-4, son-6)
case(me-8, to-7)
nmod:to(sent-4, me-8)
nsubj(send-12, I-10)
aux(send-12, 'll-11)
root(ROOT-0, send-12)
nmod:poss(son-14, my-13)
dobj(send-12, son-14)
case(him-16, to-15)
nmod:to(send-12, him-16)

(ROOT
  (S
    (PP (IN With)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBN whistled)
            (NP
              (NP (PRP$ his) (JJ only) (NN son))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD dropped)
                    (PP (IN from)
                      (NP (DT a) (NN mountain-crest)))))))))))
    (: --)
    (S
      (NP (PRP He))
      (VP (VBD trod)
        (NP (DT the) (NN ling))
        (PP (IN like)
          (NP (DT a) (NN buck)))
        (PP (IN in)
          (NP (NN spring)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD looked)
        (PP (IN like)
          (NP (DT a) (NN lance)))
        (PP (IN in)
          (NP (NN rest)))))
    (. .)))

mark(whistled-4, With-1)
mark(whistled-4, that-2)
nsubj(whistled-4, he-3)
advcl(trod-16, whistled-4)
nmod:poss(son-7, his-5)
amod(son-7, only-6)
dobj(whistled-4, son-7)
nsubj(dropped-10, son-7)
ref(son-7, that-9)
acl:relcl(son-7, dropped-10)
case(mountain-crest-13, from-11)
det(mountain-crest-13, a-12)
nmod:from(dropped-10, mountain-crest-13)
nsubj(trod-16, He-15)
root(ROOT-0, trod-16)
det(ling-18, the-17)
dobj(trod-16, ling-18)
case(buck-21, like-19)
det(buck-21, a-20)
nmod:like(trod-16, buck-21)
case(spring-23, in-22)
nmod:in(trod-16, spring-23)
cc(trod-16, and-25)
nsubj(looked-27, he-26)
conj:and(trod-16, looked-27)
case(lance-30, like-28)
det(lance-30, a-29)
nmod:like(looked-27, lance-30)
case(rest-32, in-31)
nmod:in(looked-27, rest-32)

(ROOT
  (S
    (S (`` ``)
      (ADVP (RB Now))
      (ADVP (RB here))
      (VP (VBZ is)
        (NP
          (NP (PRP$ thy) (NN master))
          (PRN (, ,) ('' '')
            (S
              (NP (NNP Kamal))
              (VP (VBD said)))
            (, ,) (`` ``))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ leads)
                (NP
                  (NP (DT a) (NN troop))
                  (PP (IN of)
                    (NP (DT the) (NNPS Guides))))))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP thou))
      (VP (MD must)
        (VP (VB ride)
          (PP (IN at)
            (NP (PRP$ his) (JJ left) (NN side)))
          (PP (IN as)
            (NP
              (NP (NN shield))
              (PP (IN on)
                (NP (NN shoulder) (NNS rides))))))))
    (. .)))

advmod(master-6, Now-2)
advmod(master-6, here-3)
cop(master-6, is-4)
nmod:poss(master-6, thy-5)
root(ROOT-0, master-6)
nsubj(leads-14, master-6)
nsubj(said-10, Kamal-9)
dep(master-6, said-10)
ref(master-6, who-13)
acl:relcl(master-6, leads-14)
det(troop-16, a-15)
dobj(leads-14, troop-16)
case(Guides-19, of-17)
det(Guides-19, the-18)
nmod:of(troop-16, Guides-19)
cc(master-6, And-21)
nsubj(ride-24, thou-22)
aux(ride-24, must-23)
conj:and(master-6, ride-24)
nsubj(leads-14, ride-24)
case(side-28, at-25)
nmod:poss(side-28, his-26)
amod(side-28, left-27)
nmod:at(ride-24, side-28)
case(shield-30, as-29)
nmod:as(ride-24, shield-30)
case(rides-33, on-31)
compound(rides-33, shoulder-32)
nmod:on(shield-30, rides-33)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Till) (NNP Death))
        (CC or)
        (NP (PRP I)))
      (VP (VBD cut)
        (ADVP (JJ loose)
          (NP (DT the) (NN tie)))
        (, ,)
        (PP (IN at)
          (NP (NN camp)
            (CC and)
            (NN board)
            (CC and)
            (NN bed)))))
    (, ,)
    (NP (NNP Thy) (NN life))
    (VP (VBZ is)
      (NP (PRP$ his))
      (: --)
      (NP
        (NP (PRP$ thy) (NN fate))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB guard)
                    (NP (PRP him))
                    (PP (IN with)
                      (NP (PRP$ thy) (NN head)))))))))))
    (. .)))

compound(Death-2, Till-1)
nsubj(cut-5, Death-2)
cc(Death-2, or-3)
conj:or(Death-2, I-4)
nsubj(cut-5, I-4)
ccomp(his-20, cut-5)
advmod(cut-5, loose-6)
det(tie-8, the-7)
dep(loose-6, tie-8)
case(camp-11, at-10)
nmod:at(cut-5, camp-11)
cc(camp-11, and-12)
nmod:at(cut-5, board-13)
conj:and(camp-11, board-13)
cc(camp-11, and-14)
nmod:at(cut-5, bed-15)
conj:and(camp-11, bed-15)
compound(life-18, Thy-17)
nsubj(his-20, life-18)
cop(his-20, is-19)
root(ROOT-0, his-20)
nmod:poss(fate-23, thy-22)
parataxis(his-20, fate-23)
nsubj(is-25, it-24)
nsubj:xsubj(guard-27, it-24)
acl:relcl(fate-23, is-25)
mark(guard-27, to-26)
xcomp(is-25, guard-27)
dobj(guard-27, him-28)
case(head-31, with-29)
nmod:poss(head-31, thy-30)
nmod:with(guard-27, head-31)

(ROOT
  (S
    (S
      (S
        (ADVP (RB So))
        (, ,)
        (NP (PRP thou))
        (VP (MD must)
          (VP (VB eat)
            (NP
              (NP (DT the) (NNP White) (NNP Queen) (POS 's))
              (NN meat)))))
      (, ,)
      (CC and)
      (S
        (NP (PDT all) (PRP$ her) (NNS foes))
        (VP (VBP are)
          (ADJP (JJ thine)))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (PRP thou))
        (VP (MD must)
          (VP (VB harry)
            (NP
              (NP (PRP$ thy) (NN father) (POS 's))
              (NN hold))
            (PP (IN for)
              (NP
                (NP (DT the) (NN peace))
                (PP (IN of)
                  (NP (DT the) (NN Border-line))))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP thou))
        (VP (MD must)
          (VP
            (VP (VB make)
              (S
                (NP (DT a) (NN trooper))
                (ADJP (JJ tough))))
            (CC and)
            (VP (VB hack)
              (NP (PRP$ thy) (NN way))
              (PP (TO to)
                (NP
                  (NP (NN power))
                  (: --)
                  (NP
                    (NP (NNP Belike))
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (MD will)
                          (VP (VB raise)
                            (S
                              (NP (PRP thee))
                              (VP (TO to)
                                (VP (VB Ressaldar)
                                  (SBAR
                                    (WHADVP (WRB when))
                                    (S
                                      (NP (PRP I))
                                      (VP (VBP am)
                                        (VP (VBN hanged)
                                          (PP (IN in)
                                            (NP (NNP Peshawur))))))))))))))))))))))
    (. .) ('' '')))

advmod(eat-5, So-1)
nsubj(eat-5, thou-3)
aux(eat-5, must-4)
root(ROOT-0, eat-5)
det(Queen-8, the-6)
compound(Queen-8, White-7)
nmod:poss(meat-10, Queen-8)
case(Queen-8, 's-9)
dobj(eat-5, meat-10)
cc(eat-5, and-12)
det:predet(foes-15, all-13)
nmod:poss(foes-15, her-14)
nsubj(thine-17, foes-15)
cop(thine-17, are-16)
conj:and(eat-5, thine-17)
cc(eat-5, And-19)
nsubj(harry-22, thou-20)
aux(harry-22, must-21)
conj:and(eat-5, harry-22)
nmod:poss(father-24, thy-23)
nmod:poss(hold-26, father-24)
case(father-24, 's-25)
dobj(harry-22, hold-26)
case(peace-29, for-27)
det(peace-29, the-28)
nmod:for(harry-22, peace-29)
case(Border-line-32, of-30)
det(Border-line-32, the-31)
nmod:of(peace-29, Border-line-32)
cc(harry-22, And-34)
nsubj(make-37, thou-35)
nsubj(hack-42, thou-35)
aux(make-37, must-36)
conj:and(eat-5, make-37)
conj:and(harry-22, make-37)
det(trooper-39, a-38)
nsubj(tough-40, trooper-39)
xcomp(make-37, tough-40)
cc(make-37, and-41)
conj:and(harry-22, hack-42)
conj:and(make-37, hack-42)
nmod:poss(way-44, thy-43)
dobj(hack-42, way-44)
case(power-46, to-45)
nmod:to(hack-42, power-46)
dep(power-46, Belike-48)
nsubj(raise-51, they-49)
aux(raise-51, will-50)
acl:relcl(Belike-48, raise-51)
dobj(raise-51, thee-52)
nsubj:xsubj(Ressaldar-54, thee-52)
mark(Ressaldar-54, to-53)
xcomp(raise-51, Ressaldar-54)
advmod(hanged-58, when-55)
nsubjpass(hanged-58, I-56)
auxpass(hanged-58, am-57)
advcl(Ressaldar-54, hanged-58)
case(Peshawur-60, in-59)
nmod:in(hanged-58, Peshawur-60)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP have)
        (VP (VBN looked)
          (NP
            (NP (DT each) (JJ other))
            (PP (IN between)
              (NP (DT the) (NNS eyes)))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB there))
      (NP (PRP they))
      (VP (VBD found)
        (NP (DT no) (NN fault))))
    (, ,)
    (S
      (NP (PRP They))
      (VP (VBP have)
        (VP (VBN taken)
          (NP
            (NP (DT the) (NNP Oath))
            (PP (IN of)
              (NP (DT the) (JJ Brother-in-Blood))))
          (PP (IN on)
            (NP (JJ leavened) (NN bread)
              (CC and)
              (NN salt))))))
    (: :)
    (S
      (NP (PRP They))
      (VP (VBP have)
        (VP (VBN taken)
          (NP
            (NP (DT the) (NNP Oath))
            (PP (IN of)
              (NP (DT the)
                (ADJP (JJ Brother-in-Blood)
                  (PP (IN on)
                    (NP (NN fire)
                      (CC and)
                      (NN fresh-cut))))
                (NN sod)))))))
    (, ,)
    (PP (IN On)
      (NP
        (NP (DT the) (NN hilt))
        (CC and)
        (NP
          (NP
            (NP (DT the) (NN haft))
            (PP (IN of)
              (NP (DT the) (NNP Khyber) (NN knife))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NNP Wondrous) (NNPS Names))
            (PP (IN of)
              (NP (NNP God)))))))
    (. .)))

nsubj(looked-3, They-1)
aux(looked-3, have-2)
root(ROOT-0, looked-3)
det(other-5, each-4)
dobj(looked-3, other-5)
case(eyes-8, between-6)
det(eyes-8, the-7)
nmod:between(other-5, eyes-8)
cc(looked-3, and-10)
advmod(found-13, there-11)
nsubj(found-13, they-12)
conj:and(looked-3, found-13)
neg(fault-15, no-14)
dobj(found-13, fault-15)
nsubj(taken-19, They-17)
aux(taken-19, have-18)
conj:and(looked-3, taken-19)
det(Oath-21, the-20)
dobj(taken-19, Oath-21)
case(Brother-in-Blood-24, of-22)
det(Brother-in-Blood-24, the-23)
nmod:of(Oath-21, Brother-in-Blood-24)
case(bread-27, on-25)
amod(bread-27, leavened-26)
nmod:on(taken-19, bread-27)
cc(bread-27, and-28)
nmod:on(taken-19, salt-29)
conj:and(bread-27, salt-29)
nsubj(taken-33, They-31)
aux(taken-33, have-32)
conj:and(looked-3, taken-33)
det(Oath-35, the-34)
dobj(taken-33, Oath-35)
case(sod-43, of-36)
det(sod-43, the-37)
amod(sod-43, Brother-in-Blood-38)
case(fire-40, on-39)
nmod:on(Brother-in-Blood-38, fire-40)
cc(fire-40, and-41)
nmod:on(Brother-in-Blood-38, fresh-cut-42)
conj:and(fire-40, fresh-cut-42)
nmod:of(Oath-35, sod-43)
case(hilt-47, On-45)
det(hilt-47, the-46)
conj:and(looked-3, hilt-47)
cc(hilt-47, and-48)
det(haft-50, the-49)
conj:and(looked-3, haft-50)
conj:and(hilt-47, haft-50)
case(knife-54, of-51)
det(knife-54, the-52)
compound(knife-54, Khyber-53)
nmod:of(haft-50, knife-54)
cc(haft-50, and-56)
det(Names-59, the-57)
compound(Names-59, Wondrous-58)
conj:and(hilt-47, Names-59)
conj:and(haft-50, Names-59)
case(God-61, of-60)
nmod:of(Names-59, God-61)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Colonel))
      (VP (VBZ 's)
        (NP
          (NP (NN son))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBZ rides)
                (NP
                  (NP (DT the) (NN mare))
                  (CC and)
                  (NP
                    (NP
                      (NP (NNP Kamal) (POS 's))
                      (NN boy))
                    (NP (DT the) (NN dun))))))))))
    (, ,)
    (CC And)
    (S
      (NP (CD two))
      (VP (VBP have)
        (VP (VBN come)
          (PRT (RP back))
          (PP (TO to)
            (NP
              (NP (NNP Fort) (NNP Bukloh))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (EX there))
                  (VP (VBD went)
                    (ADVP (RB forth))
                    (PP (CC but)
                      (NP (CD one)))))))))))
    (. .)))

det(Colonel-2, The-1)
nsubj(son-4, Colonel-2)
cop(son-4, 's-3)
root(ROOT-0, son-4)
nsubj(rides-6, he-5)
acl:relcl(son-4, rides-6)
det(mare-8, the-7)
dobj(rides-6, mare-8)
cc(mare-8, and-9)
nmod:poss(boy-12, Kamal-10)
case(Kamal-10, 's-11)
dobj(rides-6, boy-12)
conj:and(mare-8, boy-12)
det(dun-14, the-13)
dep(boy-12, dun-14)
cc(son-4, And-16)
nsubj(come-19, two-17)
aux(come-19, have-18)
conj:and(son-4, come-19)
compound:prt(come-19, back-20)
case(Bukloh-23, to-21)
compound(Bukloh-23, Fort-22)
nmod:to(come-19, Bukloh-23)
advmod(went-26, where-24)
expl(went-26, there-25)
acl:relcl(Bukloh-23, went-26)
advmod(went-26, forth-27)
case(one-29, but-28)
nmod:but(went-26, one-29)

(ROOT
  (S
    (S (CC And)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBD drew)
            (PP (TO to)
              (NP (DT the) (JJ Quarter-Guard))))))
      (, ,)
      (NP (JJ full) (NN twenty) (NNS swords))
      (VP (VBD flew)
        (ADJP (JJ clear))))
    (: --)
    (S
      (NP (EX There))
      (VP
        (VP (VBD was)
          (ADVP (RB not)
            (NP (DT a) (NN man))))
        (CC but)
        (VP (VBD carried)
          (NP (PRP$ his) (NN feud))
          (PP (IN with)
            (NP
              (NP (DT the) (NN blood))
              (PP (IN of)
                (NP (DT the) (NN mountaineer))))))))
    (. .)))

cc(flew-12, And-1)
advmod(drew-4, when-2)
nsubj(drew-4, they-3)
advcl(flew-12, drew-4)
case(Quarter-Guard-7, to-5)
det(Quarter-Guard-7, the-6)
nmod:to(drew-4, Quarter-Guard-7)
amod(swords-11, full-9)
compound(swords-11, twenty-10)
nsubj(flew-12, swords-11)
root(ROOT-0, flew-12)
xcomp(flew-12, clear-13)
expl(was-16, There-15)
parataxis(flew-12, was-16)
neg(was-16, not-17)
det(man-19, a-18)
nmod:npmod(not-17, man-19)
cc(was-16, but-20)
parataxis(flew-12, carried-21)
conj:but(was-16, carried-21)
nmod:poss(feud-23, his-22)
nsubj(was-16, feud-23)
nsubj(carried-21, feud-23)
case(blood-26, with-24)
det(blood-26, the-25)
nmod:with(carried-21, blood-26)
case(mountaineer-29, of-27)
det(mountaineer-29, the-28)
nmod:of(blood-26, mountaineer-29)

(ROOT
  (FRAG
    (ADJP (`` ``) (JJ Ha) ('' '))
    (S
      (VP (VBN done)))
    (. !)))

root(ROOT-0, Ha-2)
dep(Ha-2, done-4)

(ROOT
  (FRAG
    (NP
      (NP (NN ha) ('' '))
      (VP (VBN done)))
    (. !) ('' '')))

root(ROOT-0, ha-1)
acl(ha-1, done-3)

(ROOT
  (S
    (VP (VBD said)
      (NP
        (NP (DT the) (NNP Colonel) (POS 's))
        (NN son)))
    (. .)))

root(ROOT-0, said-1)
det(Colonel-3, the-2)
nmod:poss(son-5, Colonel-3)
case(Colonel-3, 's-4)
dobj(said-1, son-5)

(ROOT
  (S (`` ``)
    (VP (VB Put)
      (PRT (RP up))
      (NP
        (NP (DT the) (NN steel))
        (PP (IN at)
          (NP (PRP$ your) (NNS sides)))))
    (. !)))

root(ROOT-0, Put-2)
compound:prt(Put-2, up-3)
det(steel-5, the-4)
dobj(Put-2, steel-5)
case(sides-8, at-6)
nmod:poss(sides-8, your-7)
nmod:at(steel-5, sides-8)

(ROOT
  (S
    (S
      (NP (JJ Last) (NN night))
      (NP (PRP ye))
      (VP (VBD had)
        (VP (VBN struck)
          (PP (IN at)
            (NP (DT a) (NNP Border) (NN thief))))))
    (: --)
    (S
      (NP (JJ to-night) (NN 't))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN man))
          (PP (IN of)
            (NP (DT the) (NNPS Guides))))))
    (. !) ('' '')))

amod(night-2, Last-1)
nmod:tmod(struck-5, night-2)
nsubj(struck-5, ye-3)
aux(struck-5, had-4)
root(ROOT-0, struck-5)
case(thief-9, at-6)
det(thief-9, a-7)
compound(thief-9, Border-8)
nmod:at(struck-5, thief-9)
amod('t-12, to-night-11)
nsubj(man-15, 't-12)
cop(man-15, is-13)
det(man-15, a-14)
parataxis(struck-5, man-15)
case(Guides-18, of-16)
det(Guides-18, the-17)
nmod:of(man-15, Guides-18)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (S
        (S
          (NP (NNP East))
          (VP (VBZ is)
            (ADJP (JJ East))))
        (, ,)
        (CC and)
        (S
          (S
            (NP (NNP West))
            (VP (VBZ is)
              (ADJP (JJ West))))
          (, ,)
          (CC and)
          (S
            (ADVP (RB never))
            (NP (DT the) (NN twain))
            (VP (MD shall)
              (VP (VB meet) (, ,)
                (PP (IN Till)
                  (NP (NNP Earth))))))))
      (CC and)
      (S
        (S
          (NP (NNP Sky))
          (VP (VBP stand)
            (ADVP (RB presently))
            (PP (IN at)
              (NP
                (NP (NNP God) (POS 's))
                (JJ great) (NNP Judgment) (NNP Seat)))))
        (: ;)
        (CC But)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (UCP
              (ADJP (DT neither) (JJ East)
                (CC nor)
                (JJ West))
              (, ,)
              (X
                (NP (NNP Border)))
              (, ,)
              (CC nor)
              (VP (VBN Breed)))))))
    (, ,)
    (CC nor)
    (S
      (NP (NNP Birth))
      (, ,)
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (CD two) (JJ strong) (NNS men))
          (VP (VBP stand)
            (NP
              (NP (NN face)
                (S
                  (VP (TO to)
                    (VP (VB face)))))
              (, ,)
              (NP (NNP tho) (POS '))))))
      (NP (PRP they))
      (VP (VBP come)
        (PP (IN from)
          (NP
            (NP (DT the) (NNS ends))
            (PP (IN of)
              (NP (DT the) (NN earth)))))))
    (. !)))

discourse(East-5, Oh-1)
nsubj(East-5, East-3)
cop(East-5, is-4)
root(ROOT-0, East-5)
cc(East-5, and-7)
nsubj(West-10, West-8)
cop(West-10, is-9)
conj:and(East-5, West-10)
cc(West-10, and-12)
neg(meet-17, never-13)
det(twain-15, the-14)
nsubj(meet-17, twain-15)
aux(meet-17, shall-16)
conj:and(East-5, meet-17)
conj:and(West-10, meet-17)
case(Earth-20, Till-19)
nmod:till(meet-17, Earth-20)
cc(East-5, and-21)
nsubj(stand-23, Sky-22)
nsubj(is-34, Sky-22)
conj:and(East-5, stand-23)
advmod(stand-23, presently-24)
case(Seat-30, at-25)
nmod:poss(Seat-30, God-26)
case(God-26, 's-27)
amod(Seat-30, great-28)
compound(Seat-30, Judgment-29)
nmod:at(stand-23, Seat-30)
cc(stand-23, But-32)
expl(is-34, there-33)
conj:and(East-5, is-34)
conj:but(stand-23, is-34)
cc:preconj(East-36, neither-35)
xcomp(is-34, East-36)
cc(East-36, nor-37)
xcomp(is-34, West-38)
conj:nor(East-36, West-38)
dep(East-36, Border-40)
cc(East-36, nor-42)
xcomp(is-34, Breed-43)
conj:nor(East-36, Breed-43)
cc(East-5, nor-45)
nsubj(come-60, Birth-46)
advmod(stand-52, When-48)
nummod(men-51, two-49)
amod(men-51, strong-50)
nsubj(stand-52, men-51)
advcl(come-60, stand-52)
dobj(stand-52, face-53)
mark(face-55, to-54)
acl(face-53, face-55)
appos(face-53, tho-57)
case(tho-57, '-58)
nsubj(come-60, they-59)
conj:nor(East-5, come-60)
case(ends-63, from-61)
det(ends-63, the-62)
nmod:from(come-60, ends-63)
case(earth-66, of-64)
det(earth-66, the-65)
nmod:of(ends-63, earth-66)

(ROOT
  (S
    (NP (DT THE) (NNP LAST) (NNP SUTTEE))
    (RB Not)
    (NP (JJ many) (NNS years))
    (ADVP (IN ago)
      (NP (DT a) (NN King)))
    (VP (VBD died)
      (PP (IN in)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (NNP Rajpoot) (NNPS States))))))
    (. .)))

det(SUTTEE-3, THE-1)
compound(SUTTEE-3, LAST-2)
nsubj(died-10, SUTTEE-3)
neg(died-10, Not-4)
amod(years-6, many-5)
nsubj(died-10, years-6)
case(King-9, ago-7)
det(King-9, a-8)
advmod(died-10, King-9)
root(ROOT-0, died-10)
case(one-12, in-11)
nmod:in(died-10, one-12)
case(States-16, of-13)
det(States-16, the-14)
compound(States-16, Rajpoot-15)
nmod:of(one-12, States-16)

(ROOT
  (S
    (NP (PRP$ His) (NNS wives))
    (, ,)
    (S
      (VP (VBG disregarding)
        (NP
          (NP (DT the) (NNS orders))
          (PP (IN of)
            (NP (DT the) (NNP English))))
        (PP (IN against)
          (NP (NNP Suttee)))))
    (, ,)
    (VP (MD would)
      (VP (VB have)
        (VP (VBN broken)
          (PRT (RP out))
          (PP (IN of)
            (NP
              (NP (DT the) (NN palace))
              (VP (VBN had)
                (NP
                  (NP (RB not) (DT the) (NNS gates))
                  (VP (VBN been)
                    (VP (VBN barred))))))))))
    (. .)))

nmod:poss(wives-2, His-1)
nsubj(broken-15, wives-2)
advcl(broken-15, disregarding-4)
det(orders-6, the-5)
dobj(disregarding-4, orders-6)
case(English-9, of-7)
det(English-9, the-8)
nmod:of(orders-6, English-9)
case(Suttee-11, against-10)
nmod:against(disregarding-4, Suttee-11)
aux(broken-15, would-13)
aux(broken-15, have-14)
root(ROOT-0, broken-15)
compound:prt(broken-15, out-16)
case(palace-19, of-17)
det(palace-19, the-18)
nmod:of(broken-15, palace-19)
acl(palace-19, had-20)
neg(gates-23, not-21)
det(gates-23, the-22)
dobj(had-20, gates-23)
auxpass(barred-25, been-24)
acl(gates-23, barred-25)

(ROOT
  (S (CC But)
    (NP
      (NP (CD one))
      (PP (IN of)
        (NP (PRP them)))
      (, ,)
      (VP (VBN disguised)
        (PP (IN as)
          (NP
            (NP (DT the) (NNP King) (POS 's))
            (JJ favourite) (NN dancing-girl))))
      (, ,))
    (VP
      (VP (VBD passed)
        (PP (IN through)
          (NP
            (NP (DT the) (NN line))
            (PP (IN of)
              (NP (NNS guards))))))
      (CC and)
      (VP (VBD reached)
        (NP (DT the) (NN pyre))))
    (. .)))

cc(passed-14, But-1)
nsubj(passed-14, one-2)
nsubj(reached-21, one-2)
case(them-4, of-3)
nmod:of(one-2, them-4)
acl(one-2, disguised-6)
case(dancing-girl-12, as-7)
det(King-9, the-8)
nmod:poss(dancing-girl-12, King-9)
case(King-9, 's-10)
amod(dancing-girl-12, favourite-11)
nmod:as(disguised-6, dancing-girl-12)
root(ROOT-0, passed-14)
case(line-17, through-15)
det(line-17, the-16)
nmod:through(passed-14, line-17)
case(guards-19, of-18)
nmod:of(line-17, guards-19)
cc(passed-14, and-20)
conj:and(passed-14, reached-21)
det(pyre-23, the-22)
dobj(reached-21, pyre-23)

(ROOT
  (S
    (NP (EX There))
    (, ,)
    (S
      (NP
        (NP (PRP$ her) (NN courage))
        (VP (VBG failing))))
    (, ,)
    (NP (PRP she))
    (VP (VBD prayed)
      (S
        (NP
          (NP (PRP$ her) (NN cousin))
          (, ,)
          (NP
            (NP (DT a) (NN baron))
            (PP (IN of)
              (NP (DT the) (NN court))))
          (, ,))
        (VP (TO to)
          (VP (VB kill)
            (NP (PRP her))))))
    (. .)))

expl(prayed-8, There-1)
nmod:poss(courage-4, her-3)
ccomp(prayed-8, courage-4)
acl(courage-4, failing-5)
nsubj(prayed-8, she-7)
root(ROOT-0, prayed-8)
nmod:poss(cousin-10, her-9)
dobj(prayed-8, cousin-10)
nsubj:xsubj(kill-19, cousin-10)
det(baron-13, a-12)
appos(cousin-10, baron-13)
case(court-16, of-14)
det(court-16, the-15)
nmod:of(baron-13, court-16)
mark(kill-19, to-18)
xcomp(prayed-8, kill-19)
dobj(kill-19, her-20)

(ROOT
  (S
    (NP (DT This) (PRP he))
    (VP (VBD did) (, ,)
      (S
        (VP (RB not) (VBG knowing)
          (SBAR
            (WHNP (WP who))
            (S
              (NP (PRP she))
              (VP (VBD was)))))))
    (. .)))

det(he-2, This-1)
nsubj(did-3, he-2)
root(ROOT-0, did-3)
neg(knowing-6, not-5)
ccomp(did-3, knowing-6)
dobj(was-9, who-7)
nsubj(was-9, she-8)
ccomp(knowing-6, was-9)

(ROOT
  (S
    (NP (NNP Udai) (NNP Chand))
    (VP (VBD lay)
      (S
        (ADJP (JJ sick)
          (PP (TO to)
            (NP (NN death))))
        (PP (IN In)
          (NP (PRP$ his) (NN hold))))
      (PP (IN by)
        (NP (NNP Gungra) (NN hill))))
    (. .)))

compound(Chand-2, Udai-1)
nsubj(lay-3, Chand-2)
root(ROOT-0, lay-3)
xcomp(lay-3, sick-4)
case(death-6, to-5)
nmod:to(sick-4, death-6)
case(hold-9, In-7)
nmod:poss(hold-9, his-8)
dep(sick-4, hold-9)
case(hill-12, by-10)
compound(hill-12, Gungra-11)
nmod:by(lay-3, hill-12)

(ROOT
  (S
    (NP (DT All) (NN night))
    (NP (PRP we))
    (VP (VBD heard)
      (SBAR
        (S
          (NP (DT the) (NNS death-gongs))
          (VP (VBP ring)
            (SBAR
              (S
                (PP (IN For)
                  (NP
                    (NP (DT the) (NN soul))
                    (PP (IN of)
                      (NP (DT the) (VBG dying) (NNP Rajpoot) (NNP King)))))
                (, ,)
                (NP (DT All) (NN night))
                (VP (VBP beat)
                  (NP
                    (ADVP (RB up)
                      (PP (IN from)
                        (NP
                          (NP (DT the) (NNS women) (POS 's))
                          (NN wing))))
                    (NP (DT A) (NN cry))
                    (SBAR (IN that)
                      (S
                        (NP (PRP we))
                        (VP (MD could) (RB not)))))
                  (ADVP (RB still)))))))))
    (. .)))

det(night-2, All-1)
nmod:tmod(heard-4, night-2)
nsubj(heard-4, we-3)
root(ROOT-0, heard-4)
det(death-gongs-6, the-5)
nsubj(ring-7, death-gongs-6)
ccomp(heard-4, ring-7)
case(soul-10, For-8)
det(soul-10, the-9)
nmod:for(beat-19, soul-10)
case(King-15, of-11)
det(King-15, the-12)
amod(King-15, dying-13)
compound(King-15, Rajpoot-14)
nmod:of(soul-10, King-15)
det(night-18, All-17)
nsubj(beat-19, night-18)
ccomp(ring-7, beat-19)
advmod(cry-27, up-20)
case(wing-25, from-21)
det(women-23, the-22)
nmod:poss(wing-25, women-23)
case(women-23, 's-24)
nmod:from(up-20, wing-25)
det(cry-27, A-26)
dobj(beat-19, cry-27)
mark(could-30, that-28)
nsubj(could-30, we-29)
dep(cry-27, could-30)
neg(could-30, not-31)
advmod(beat-19, still-32)

(ROOT
  (S
    (S
      (NP (DT All) (NN night))
      (NP (DT the) (NNS barons))
      (VP (VBD came)
        (CC and)
        (VBD went) (, ,)
        (S
          (NP
            (NP (DT The) (NNS lords))
            (PP (IN of)
              (NP (DT the) (JJ outer) (NN guard)))))))
    (: :)
    (S
      (NP (DT All) (NN night))
      (NP (DT the) (NNS cressets))
      (VP (VBD glimmered)
        (NP
          (ADJP (JJ pale)
            (PP (IN On)
              (NP (NNP Ulwar) (NNP sabre)
                (CC and)
                (NNP Tonk))))
          (JJ jezail) (, ,) (NNP Mewar) (NNP headstall)
          (CC and)
          (NNP Marwar))
        (NP
          (NP (NN mail))
          (, ,)
          (NP
            (NP (DT That))
            (VP (VBN clinked)
              (PP (IN in)
                (NP (DT the) (NN palace) (NN yard))))))))
    (. .)))

det(night-2, All-1)
nmod:tmod(came-5, night-2)
det(barons-4, the-3)
nsubj(came-5, barons-4)
nsubj(went-7, barons-4)
root(ROOT-0, came-5)
cc(came-5, and-6)
conj:and(came-5, went-7)
det(lords-10, The-9)
xcomp(came-5, lords-10)
case(guard-14, of-11)
det(guard-14, the-12)
amod(guard-14, outer-13)
nmod:of(lords-10, guard-14)
det(night-17, All-16)
nmod:tmod(glimmered-20, night-17)
det(cressets-19, the-18)
nsubj(glimmered-20, cressets-19)
parataxis(came-5, glimmered-20)
amod(headstall-30, pale-21)
case(sabre-24, On-22)
compound(sabre-24, Ulwar-23)
nmod:on(pale-21, sabre-24)
cc(sabre-24, and-25)
nmod:on(pale-21, Tonk-26)
conj:and(sabre-24, Tonk-26)
amod(headstall-30, jezail-27)
iobj(glimmered-20, Mewar-29)
conj:and(headstall-30, Mewar-29)
iobj(glimmered-20, headstall-30)
cc(headstall-30, and-31)
iobj(glimmered-20, Marwar-32)
conj:and(headstall-30, Marwar-32)
dobj(glimmered-20, mail-33)
appos(mail-33, That-35)
acl(That-35, clinked-36)
case(yard-40, in-37)
det(yard-40, the-38)
compound(yard-40, palace-39)
nmod:in(clinked-36, yard-40)

(ROOT
  (S
    (S
      (S
        (PP (IN In)
          (NP
            (NP (DT the) (JJ Golden) (NN room))
            (PP (IN on)
              (NP (DT the) (NN palace) (NN roof)))
            (NP (DT All) (NN night))))
        (NP (PRP he))
        (VP (VBD fought)
          (PP (IN for)
            (NP (NN air)))))
      (: :)
      (CC And)
      (S
        (NP (EX there))
        (VP (VBD was)
          (VP (VBG sobbing)
            (PP (IN behind)
              (NP
                (NP (DT the) (NN screen))
                (, ,)
                (NP (NNP Rustle)))))))
      (CC and)
      (S
        (NP
          (NP (NN whisper))
          (PP (IN of)
            (NP (NNS women))))
        (ADJP (JJ unseen))))
    (, ,)
    (CC And)
    (S
      (FRAG
        (NP (DT the) (JJ hungry) (NNS eyes))
        (PP (IN of)
          (NP (DT the) (NNP Boondi) (NNP Queen)))
        (PP (IN On)
          (NP (DT the) (NN death))))
      (NP (PRP she))
      (VP (MD might) (RB not)
        (VP (VB share))))
    (. .)))

case(room-4, In-1)
det(room-4, the-2)
amod(room-4, Golden-3)
nmod:in(fought-12, room-4)
case(roof-8, on-5)
det(roof-8, the-6)
compound(roof-8, palace-7)
nmod:on(room-4, roof-8)
det(night-10, All-9)
dep(room-4, night-10)
nsubj(fought-12, he-11)
nsubj(sobbing-19, he-11)
nsubj(unseen-29, he-11)
root(ROOT-0, fought-12)
case(air-14, for-13)
nmod:for(fought-12, air-14)
cc(fought-12, And-16)
expl(sobbing-19, there-17)
aux(sobbing-19, was-18)
conj:and(fought-12, sobbing-19)
case(screen-22, behind-20)
det(screen-22, the-21)
nmod:behind(sobbing-19, screen-22)
appos(screen-22, Rustle-24)
cc(fought-12, and-25)
dep(unseen-29, whisper-26)
case(women-28, of-27)
nmod:of(whisper-26, women-28)
conj:and(fought-12, unseen-29)
cc(fought-12, And-31)
det(eyes-34, the-32)
amod(eyes-34, hungry-33)
dep(share-45, eyes-34)
case(Queen-38, of-35)
det(Queen-38, the-36)
compound(Queen-38, Boondi-37)
nmod:of(eyes-34, Queen-38)
case(death-41, On-39)
det(death-41, the-40)
nmod:on(eyes-34, death-41)
nsubj(share-45, she-42)
aux(share-45, might-43)
neg(share-45, not-44)
conj:and(fought-12, share-45)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD passed)
        (PP (IN at)
          (NP (NN dawn)))))
    (: --)
    (S
      (NP (DT the) (NN death-fire))
      (VP (VBD leaped)
        (PP (IN From)
          (NP (NN ridge)))
        (PP (TO to)
          (NP (NN river-head)))
        (, ,)
        (PP (IN From)
          (NP (DT the) (NNP Malwa) (NNS plains)))
        (PP (TO to)
          (NP (DT the) (NNP Abu) (NNS scars)))))
    (: :)
    (CC And)
    (S
      (S
        (VP (VB wail)
          (PP (IN upon)
            (NP (NNP wail)))))
      (VP (VBD went)
        (PRT (RP up))
        (PP (TO to)
          (NP
            (NP (DT the) (NNS stars))
            (PP (IN Behind)
              (NP (DT the) (JJ grim) (NNS zenana-bars)))))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP they))
            (VP (VBD knew)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NNP King))
                  (VP (VBD was)
                    (ADJP (JJ dead))))))))))
    (. .)))

nsubj(passed-2, He-1)
root(ROOT-0, passed-2)
case(dawn-4, at-3)
nmod:at(passed-2, dawn-4)
det(death-fire-7, the-6)
nsubj(leaped-8, death-fire-7)
conj:and(passed-2, leaped-8)
case(ridge-10, From-9)
nmod:from(leaped-8, ridge-10)
case(river-head-12, to-11)
nmod:to(leaped-8, river-head-12)
case(plains-17, From-14)
det(plains-17, the-15)
compound(plains-17, Malwa-16)
nmod:from(leaped-8, plains-17)
case(scars-21, to-18)
det(scars-21, the-19)
compound(scars-21, Abu-20)
nmod:to(leaped-8, scars-21)
cc(passed-2, And-23)
csubj(went-27, wail-24)
case(wail-26, upon-25)
nmod:upon(wail-24, wail-26)
conj:and(passed-2, went-27)
compound:prt(went-27, up-28)
case(stars-31, to-29)
det(stars-31, the-30)
nmod:to(went-27, stars-31)
case(zenana-bars-35, Behind-32)
det(zenana-bars-35, the-33)
amod(zenana-bars-35, grim-34)
nmod:behind(stars-31, zenana-bars-35)
advmod(knew-39, When-37)
nsubj(knew-39, they-38)
advcl(went-27, knew-39)
mark(dead-44, that-40)
det(King-42, the-41)
nsubj(dead-44, King-42)
cop(dead-44, was-43)
ccomp(knew-39, dead-44)

(ROOT
  (S
    (NP (DT The) (JJ dumb) (NN priest))
    (VP (VBP knelt)
      (S
        (VP (TO to)
          (VP (VB tie)
            (NP (PRP$ his) (NN mouth))))))
    (CC And)
    (VP (NNP robe)
      (NP (PRP him))
      (PP (IN for)
        (NP (DT the) (NN pyre))))
    (. .)))

det(priest-3, The-1)
amod(priest-3, dumb-2)
nsubj(knelt-4, priest-3)
nsubj:xsubj(tie-6, priest-3)
root(ROOT-0, knelt-4)
mark(tie-6, to-5)
xcomp(knelt-4, tie-6)
nmod:poss(mouth-8, his-7)
dobj(tie-6, mouth-8)
cc(knelt-4, And-9)
dep(him-11, robe-10)
conj:and(knelt-4, him-11)
case(pyre-14, for-12)
det(pyre-14, the-13)
nmod:for(him-11, pyre-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Boondi) (NNP Queen))
      (PP (IN beneath)
        (NP (PRP us))))
    (VP (VBD cried) (: :) (`` ``)
      (S
        (VP (VB See)
          (PRN (, ,)
            (ADVP (RB now))
            (, ,))
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (VBP die)
                (SBAR (IN as)
                  (S
                    (NP (PRP$ our) (NNS mothers))
                    (VP (VBD died)
                      (PP (IN In)
                        (NP (DT the) (NN bridal-bed)))
                      (PP (IN by)
                        (NP
                          (NP (PRP$ our) (NN master) (POS 's))
                          (NN side))))))))))))
    (. !)))

det(Queen-3, The-1)
compound(Queen-3, Boondi-2)
nsubj(cried-6, Queen-3)
case(us-5, beneath-4)
nmod:beneath(Queen-3, us-5)
root(ROOT-0, cried-6)
ccomp(cried-6, See-9)
dep(See-9, now-11)
mark(die-15, that-13)
nsubj(die-15, we-14)
ccomp(See-9, die-15)
mark(died-19, as-16)
nmod:poss(mothers-18, our-17)
nsubj(died-19, mothers-18)
advcl(die-15, died-19)
case(bridal-bed-22, In-20)
det(bridal-bed-22, the-21)
nmod:in(died-19, bridal-bed-22)
case(side-27, by-23)
nmod:poss(master-25, our-24)
nmod:poss(side-27, master-25)
case(master-25, 's-26)
nmod:by(died-19, side-27)

(ROOT
  (FRAG
    (PP (IN Out))
    (, ,)
    (NP (NNS women))
    (. !)))

dep(women-3, Out-1)
root(ROOT-0, women-3)

(ROOT
  (PRN (: --)
    (PP (TO to)
      (NP
        (NP (DT the) (NN fire))
        (VP (VBN !) ('' ''))))))

case(fire-4, to-2)
det(fire-4, the-3)
root(ROOT-0, fire-4)
acl(fire-4, !-5)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD drove)
        (NP (DT the) (JJ great) (NNS gates) (NN home) (NN apace))))
    (: :)
    (S
      (NP (NNP White) (NNS hands))
      (VP (VBD were)
        (PP (IN on)
          (NP (DT the) (NN sill)))))
    (: :)
    (CC But)
    (S
      (ADVP (RB ere))
      (S
        (NP
          (NP (DT the) (NN rush))
          (PP (IN of)
            (NP (DT the)
              (ADJP (JJ unseen))
              (NNS feet))))
        (VP (VBD Had)
          (VP (VBN reached)
            (NP (DT the) (NN turn))
            (PP (TO to)
              (NP (DT the) (JJ open) (NN street))))))
      (, ,)
      (S
        (NP (DT The) (NNS bars))
        (VP (VBD shot)
          (PRT (RP down))))
      (, ,)
      (S
        (NP (DT the) (NN guard-drum))
        (VP (VBD beat) (: --)
          (SBAR
            (S
              (NP (PRP We))
              (VP (VBD held)
                (NP (DT the) (NN dovecot))
                (ADVP (RB still))))))))
    (. .)))

nsubj(drove-2, We-1)
root(ROOT-0, drove-2)
det(apace-7, the-3)
amod(apace-7, great-4)
compound(apace-7, gates-5)
compound(apace-7, home-6)
dobj(drove-2, apace-7)
compound(hands-10, White-9)
nsubj(sill-14, hands-10)
cop(sill-14, were-11)
case(sill-14, on-12)
det(sill-14, the-13)
conj:but(drove-2, sill-14)
cc(drove-2, But-16)
advmod(reached-25, ere-17)
det(rush-19, the-18)
nsubj(reached-25, rush-19)
case(feet-23, of-20)
det(feet-23, the-21)
amod(feet-23, unseen-22)
nmod:of(rush-19, feet-23)
aux(reached-25, Had-24)
conj:but(drove-2, reached-25)
det(turn-27, the-26)
dobj(reached-25, turn-27)
case(street-31, to-28)
det(street-31, the-29)
amod(street-31, open-30)
nmod:to(reached-25, street-31)
det(bars-34, The-33)
nsubj(shot-35, bars-34)
parataxis(reached-25, shot-35)
compound:prt(shot-35, down-36)
det(guard-drum-39, the-38)
nsubj(beat-40, guard-drum-39)
parataxis(reached-25, beat-40)
nsubj(held-43, We-42)
ccomp(beat-40, held-43)
det(dovecot-45, the-44)
dobj(held-43, dovecot-45)
advmod(held-43, still-46)

(ROOT
  (S
    (S
      (S
        (NP (DT A) (NN face))
        (VP (VBD looked)
          (PRT (RP down))
          (PP (IN in)
            (NP (DT the) (NN gathering) (NN day)))))
      (, ,)
      (CC And)
      (S
        (NP (NN laughing))
        (VP (VBD spoke)
          (PP (IN from)
            (NP (DT the) (NN wall)))
          (: :) (`` ``)
          (S
            (INTJ (UH Oh))
            (NP (NNP -RSB-))
            (ADVP (RB /))
            (VP (VB e) (, ,)
              (S
                (NP (PRP they))
                (VP (VB mourn)
                  (ADVP (RB here)))))))))
    (: :)
    (S
      (VP (VB let)
        (NP (PRP me))
        (PP (IN by)
          (PRN (: --)
            (NP
              (NP (NNP Azizun))
              (, ,)
              (NP (DT the) (NNP Lucknow) (NN nautch-girl))
              (, ,)
              (NP (PRP I)))))))
    (. !)))

det(face-2, A-1)
nsubj(looked-3, face-2)
root(ROOT-0, looked-3)
compound:prt(looked-3, down-4)
case(day-8, in-5)
det(day-8, the-6)
compound(day-8, gathering-7)
nmod:in(looked-3, day-8)
cc(looked-3, And-10)
nsubj(spoke-12, laughing-11)
conj:and(looked-3, spoke-12)
case(wall-15, from-13)
det(wall-15, the-14)
nmod:from(spoke-12, wall-15)
discourse(e-21, Oh-18)
nsubj(e-21, -RSB--19)
advmod(e-21, /-20)
ccomp(spoke-12, e-21)
nsubj(mourn-24, they-23)
ccomp(e-21, mourn-24)
advmod(mourn-24, here-25)
parataxis(looked-3, let-27)
dobj(let-27, me-28)
case(Azizun-31, by-29)
advcl(let-27, Azizun-31)
det(nautch-girl-35, the-33)
compound(nautch-girl-35, Lucknow-34)
appos(Azizun-31, nautch-girl-35)
appos(Azizun-31, I-37)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (DT the) (NN house))
          (VP (VBZ is)
            (ADJP (JJ rotten)))))
      (, ,)
      (NP (DT the) (NNS rats))
      (VP (MD must)
        (VP (VB fly))))
    (, ,)
    (CC And)
    (S
      (NP (PRP I))
      (VP (VBP seek)
        (NP (DT another) (NN thrall))))
    (. .)))

advmod(rotten-5, When-1)
det(house-3, the-2)
nsubj(rotten-5, house-3)
cop(rotten-5, is-4)
advcl(fly-10, rotten-5)
det(rats-8, the-7)
nsubj(fly-10, rats-8)
aux(fly-10, must-9)
root(ROOT-0, fly-10)
cc(fly-10, And-12)
nsubj(seek-14, I-13)
conj:and(fly-10, seek-14)
det(thrall-16, another-15)
dobj(seek-14, thrall-16)

(ROOT
  (S (`` ``)
    (SBAR (IN For)
      (S
        (NP (PRP I))
        (VP (VBD ruled)
          (NP (DT the) (NNP King))
          (PP (IN as)
            (NP (NN ne'er))))))
    (VP (VBD did)
      (SBAR
        (S
          (NP (NNP Queen))
          (, ,) (: --)
          (VP (VBZ To-night)
            (S
              (NP (DT the) (NNP Queens) (NN rule))
              (NP (PRP me)))))))
    (. !)))

mark(ruled-4, For-2)
nsubj(ruled-4, I-3)
csubj(did-9, ruled-4)
det(King-6, the-5)
dobj(ruled-4, King-6)
case(ne'er-8, as-7)
nmod:as(ruled-4, ne'er-8)
root(ROOT-0, did-9)
nsubj(To-night-13, Queen-10)
ccomp(did-9, To-night-13)
det(rule-16, the-14)
compound(rule-16, Queens-15)
nsubj(me-17, rule-16)
xcomp(To-night-13, me-17)

(ROOT
  (S
    (S
      (NP (NNP Guard) (PRP them))
      (VP
        (VP (VBZ safely))
        (, ,)
        (CC but)
        (VP (VBD let)
          (SBAR
            (S
              (NP (PRP me))
              (VP (VBP go)))))))
    (, ,)
    (CC Or)
    (S
      (ADVP (RB ever))
      (NP (PRP they))
      (VP (VBP pay)
        (NP
          (NP (DT the) (NN debt))
          (SBAR
            (S
              (NP (PRP they))
              (VP
                (VP (VBP owe)
                  (PP (IN In)
                    (NP (NN scourge))))
                (CC and)
                (VP (VBP torture))))))))
    (. !) ('' '')))

nsubj(safely-3, Guard-1)
nsubj(let-6, Guard-1)
dep(Guard-1, them-2)
root(ROOT-0, safely-3)
cc(safely-3, but-5)
conj:but(safely-3, let-6)
nsubj(go-8, me-7)
ccomp(let-6, go-8)
cc(safely-3, Or-10)
advmod(pay-13, ever-11)
nsubj(pay-13, they-12)
conj:or(safely-3, pay-13)
det(debt-15, the-14)
dobj(pay-13, debt-15)
nsubj(owe-17, they-16)
nsubj(torture-21, they-16)
acl:relcl(debt-15, owe-17)
case(scourge-19, In-18)
nmod:in(owe-17, scourge-19)
cc(owe-17, and-20)
acl:relcl(debt-15, torture-21)
conj:and(owe-17, torture-21)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD leaped)
        (ADVP (RB below))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (JJ grim) (NN guard))
      (VP (VBD watched)
        (S
          (NP (PRP her))
          (VP (VB flee)))))
    (. .)))

nsubj(leaped-2, She-1)
root(ROOT-0, leaped-2)
advmod(leaped-2, below-3)
cc(leaped-2, And-5)
det(guard-8, the-6)
amod(guard-8, grim-7)
nsubj(watched-9, guard-8)
conj:and(leaped-2, watched-9)
nsubj(flee-11, her-10)
ccomp(watched-9, flee-11)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD knew)
        (SBAR (IN that)
          (S
            (NP (DT the) (NNP King))
            (VP (VBD had)
              (VP (VBN spent)
                (NP (PRP$ his) (NN soul))
                (PP (IN On)
                  (NP (DT a) (JJ North-bred) (NN dancing-girl)))))
            (: :)
            (SBAR (IN That)
              (S
                (NP (PRP he))
                (VP (VBD prayed)
                  (PP (TO to)
                    (NP
                      (NP (DT a) (JJ flat-nosed) (NNP Lucknow) (NN god))
                      (, ,)
                      (SBAR (CC And)
                        (S
                          (VP (VBD kissed)
                            (NP (DT the) (NN ground))
                            (SBAR
                              (WHADVP (WRB where))
                              (S
                                (NP (PRP$ her) (NNS feet))
                                (VP (VBD had)
                                  (VP (VBN trod)))))))))))))))))
    (, ,)
    (CC And)
    (S
      (VP (VBN doomed)
        (PP (TO to)
          (NP (NN death)))
        (PP (IN at)
          (NP
            (NP (PRP$ her) (NN drunken) (NN nod))
            (, ,)
            (SBAR (CC And)
              (S
                (VP (VBD swore)
                  (PP (IN by)
                    (NP (PRP$ her) (JJS lightest) (NNS curl))))))))))
    (. .)))

nsubj(knew-2, They-1)
nsubj(doomed-35, They-1)
root(ROOT-0, knew-2)
mark(spent-7, that-3)
det(King-5, the-4)
nsubj(spent-7, King-5)
aux(spent-7, had-6)
ccomp(knew-2, spent-7)
nmod:poss(soul-9, his-8)
dobj(spent-7, soul-9)
case(dancing-girl-13, On-10)
det(dancing-girl-13, a-11)
amod(dancing-girl-13, North-bred-12)
nmod:on(spent-7, dancing-girl-13)
mark(prayed-17, That-15)
nsubj(prayed-17, he-16)
parataxis(spent-7, prayed-17)
case(god-22, to-18)
det(god-22, a-19)
amod(god-22, flat-nosed-20)
compound(god-22, Lucknow-21)
nmod:to(prayed-17, god-22)
cc(kissed-25, And-24)
dep(god-22, kissed-25)
det(ground-27, the-26)
dobj(kissed-25, ground-27)
advmod(trod-32, where-28)
nmod:poss(feet-30, her-29)
nsubj(trod-32, feet-30)
aux(trod-32, had-31)
advcl(kissed-25, trod-32)
cc(knew-2, And-34)
conj:and(knew-2, doomed-35)
case(death-37, to-36)
nmod:to(doomed-35, death-37)
case(nod-41, at-38)
nmod:poss(nod-41, her-39)
compound(nod-41, drunken-40)
nmod:at(doomed-35, nod-41)
cc(swore-44, And-43)
dep(nod-41, swore-44)
case(curl-48, by-45)
nmod:poss(curl-48, her-46)
amod(curl-48, lightest-47)
nmod:by(swore-44, curl-48)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD bore)
      (NP (DT the) (NNP King))
      (PP (TO to)
        (NP
          (NP (PRP$ his) (NNS fathers) (POS '))
          (NN place)))
      (, ,)
      (SBAR
        (WHADVP (WRB Where))
        (S
          (S
            (NP
              (NP (DT the) (NNS tombs))
              (PP (IN of)
                (NP (DT the) (NN Sun-born))))
            (VP (VBP stand) (: :)
              (SBAR
                (WHADVP (WRB Where))
                (S
                  (NP (DT the) (JJ gray) (NNS apes))
                  (VP (VBP swing))))))
          (, ,)
          (CC and)
          (S
            (NP (DT the) (NNS peacocks))
            (ADJP (JJ preen)))
          (PP (IN On)
            (NP
              (NP
                (NP (JJ fretted) (NN pillar))
                (CC and)
                (NP (JJ jewelled) (NN screen)))
              (, ,)
              (CC And)
              (NP
                (NP (DT the) (JJ wild) (NN boar) (NN couch))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN house))
                    (PP (IN of)
                      (NP (DT the) (NN Queen))))))))
          (PP (IN On)
            (NP
              (NP (DT the) (NN drift))
              (PP (IN of)
                (NP (DT the) (NN desert) (NN sand))))))))
    (. .)))

nsubj(bore-2, We-1)
root(ROOT-0, bore-2)
det(King-4, the-3)
dobj(bore-2, King-4)
case(place-9, to-5)
nmod:poss(fathers-7, his-6)
nmod:poss(place-9, fathers-7)
case(fathers-7, '-8)
nmod:to(bore-2, place-9)
advmod(stand-17, Where-11)
det(tombs-13, the-12)
nsubj(stand-17, tombs-13)
nsubj(preen-28, tombs-13)
case(Sun-born-16, of-14)
det(Sun-born-16, the-15)
nmod:of(tombs-13, Sun-born-16)
advcl(bore-2, stand-17)
advmod(swing-23, Where-19)
det(apes-22, the-20)
amod(apes-22, gray-21)
nsubj(swing-23, apes-22)
parataxis(stand-17, swing-23)
cc(stand-17, and-25)
det(peacocks-27, the-26)
dep(preen-28, peacocks-27)
advcl(bore-2, preen-28)
conj:and(stand-17, preen-28)
case(pillar-31, On-29)
amod(pillar-31, fretted-30)
nmod:on(stand-17, pillar-31)
cc(pillar-31, and-32)
amod(screen-34, jewelled-33)
nmod:on(stand-17, screen-34)
conj:and(pillar-31, screen-34)
cc(pillar-31, And-36)
det(couch-40, the-37)
amod(couch-40, wild-38)
compound(couch-40, boar-39)
nmod:on(stand-17, couch-40)
conj:and(pillar-31, couch-40)
case(house-43, in-41)
det(house-43, the-42)
nmod:in(couch-40, house-43)
case(Queen-46, of-44)
det(Queen-46, the-45)
nmod:of(house-43, Queen-46)
case(drift-49, On-47)
det(drift-49, the-48)
nmod:on(stand-17, drift-49)
case(sand-53, of-50)
det(sand-53, the-51)
compound(sand-53, desert-52)
nmod:of(drift-49, sand-53)

(ROOT
  (S
    (S
      (NP (DT The) (NN herald))
      (VP (VBP read)
        (NP (PRP$ his) (NNS titles))
        (ADVP (RB forth))))
    (, ,)
    (NP (PRP We))
    (VP (VBD set)
      (NP (DT the) (JJ logs) (NN aglow))
      (: :) (`` ``)
      (S
        (NP
          (NP (NNP Friend))
          (PP (IN of)
            (NP (DT the) (NNP English)))
          (, ,)
          (ADJP (JJ free)
            (PP (IN from)
              (NP
                (NP (NN fear))
                (, ,)
                (NP
                  (NP (NNP Baron))
                  (PP (IN of)
                    (NP (NNP Luni))))))
            (PP (TO to)
              (NP
                (NP (NNP Jeysulmeer) (, ,) (NNP Lord))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN Desert))
                    (PP (IN of)
                      (NP
                        (NP (NNP Bikaneer))
                        (, ,)
                        (NP
                          (NP (NNP King))
                          (PP (IN of)
                            (NP (DT the) (NN Jungle))))
                        (, ,))))))))
          (: --))
        (VP (VB go))))
    (. !) ('' '')))

det(herald-2, The-1)
nsubj(read-3, herald-2)
ccomp(set-9, read-3)
nmod:poss(titles-5, his-4)
dobj(read-3, titles-5)
advmod(read-3, forth-6)
nsubj(set-9, We-8)
root(ROOT-0, set-9)
det(aglow-12, the-10)
amod(aglow-12, logs-11)
dobj(set-9, aglow-12)
nsubj(go-43, Friend-15)
case(English-18, of-16)
det(English-18, the-17)
nmod:of(Friend-15, English-18)
amod(Friend-15, free-20)
case(fear-22, from-21)
nmod:from(free-20, fear-22)
appos(fear-22, Baron-24)
case(Luni-26, of-25)
nmod:of(Baron-24, Luni-26)
case(Lord-30, to-27)
compound(Lord-30, Jeysulmeer-28)
nmod:to(free-20, Lord-30)
case(Desert-33, of-31)
det(Desert-33, the-32)
nmod:of(Lord-30, Desert-33)
case(Bikaneer-35, of-34)
nmod:of(Desert-33, Bikaneer-35)
appos(Bikaneer-35, King-37)
case(Jungle-40, of-38)
det(Jungle-40, the-39)
nmod:of(King-37, Jungle-40)
dep(set-9, go-43)

(ROOT
  (S
    (S
      (S
        (NP (DT All) (NN night))
        (NP
          (NP (DT the) (JJ red) (NN flame))
          (VP (VBN stabbed)
            (NP (DT the) (NN sky))
            (PP (IN With)
              (NP (VBG wavering) (JJ wind-tossed) (NNS spears)))
            (: :)
            (FRAG
              (FRAG (CC And)
                (PP (RB out) (IN of)
                  (NP
                    (NP (DT a) (VBN shattered) (NN temple))
                    (VP (VBN crept)
                      (NP
                        (NP (DT A) (NN woman))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP
                              (VP (VBZ veiled)
                                (NP (PRP$ her) (NN head)))
                              (CC and)
                              (VP (VBD wept))))))))))
              (, ,)
              (FRAG (CC And)
                (S
                  (VP (VBN called)
                    (PP (IN on)
                      (NP (DT the) (NNP King))))))))))
      (: --)
      (CC but)
      (S
        (NP (DT the) (JJ great) (NN King))
        (VP (VBD slept))))
    (, ,)
    (CC And)
    (S
      (VP (VBN turned)
        (PP (RB not) (IN for)
          (NP (PRP$ her) (NNS tears)))))
    (. .)))

det(night-2, All-1)
dep(flame-5, night-2)
det(flame-5, the-3)
amod(flame-5, red-4)
root(ROOT-0, flame-5)
acl(flame-5, stabbed-6)
det(sky-8, the-7)
dobj(stabbed-6, sky-8)
case(spears-12, With-9)
amod(spears-12, wavering-10)
amod(spears-12, wind-tossed-11)
nmod:with(stabbed-6, spears-12)
dep(stabbed-6, And-14)
case(temple-19, out-15)
mwe(out-15, of-16)
det(temple-19, a-17)
amod(temple-19, shattered-18)
nmod:out_of(And-14, temple-19)
acl(temple-19, crept-20)
det(woman-22, A-21)
dobj(crept-20, woman-22)
nsubj(veiled-24, woman-22)
nsubj(wept-28, woman-22)
ref(woman-22, who-23)
acl:relcl(woman-22, veiled-24)
nmod:poss(head-26, her-25)
dobj(veiled-24, head-26)
cc(veiled-24, and-27)
acl:relcl(woman-22, wept-28)
conj:and(veiled-24, wept-28)
cc(called-31, And-30)
parataxis(And-14, called-31)
case(King-34, on-32)
det(King-34, the-33)
nmod:on(called-31, King-34)
cc(flame-5, but-36)
det(King-39, the-37)
amod(King-39, great-38)
nsubj(slept-40, King-39)
conj:but(flame-5, slept-40)
cc(flame-5, And-42)
conj:and(flame-5, turned-43)
neg(tears-47, not-44)
case(tears-47, for-45)
nmod:poss(tears-47, her-46)
nmod:for(turned-43, tears-47)

(ROOT
  (S
    (S
      (S
        (NP (JJ Small) (NN thought))
        (VP (VBD had)
          (S
            (NP (PRP he))
            (VP (TO to)
              (VP (VB mark)
                (NP (DT the) (NN strife))
                (PRN (: --)
                  (S
                    (NP (NNP Cold))
                    (VP (VBP fear)
                      (PP (IN with)
                        (NP (JJ hot) (NN desire)))))
                  (: --))
                (SBAR
                  (WHADVP (WRB When))
                  (S
                    (VP (VBP thrice)
                      (SBAR
                        (S
                          (NP (PRP she))
                          (VP (VBD leaped)
                            (PP (IN from)
                              (NP (DT the) (JJ leaping) (NN flame))))))))))))))
      (, ,)
      (CC And)
      (S
        (S
          (ADVP (RB thrice))
          (NP (PRP she))
          (VP (VBD beat)
            (NP (PRP$ her) (NN breast))
            (PP (IN for)
              (NP (NN shame)))))
        (, ,)
        (CC And)
        (S
          (NP
            (NP (NN thrice))
            (PP (IN like)
              (NP (DT a) (JJ wounded))))
          (VP (VBD dove)
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBD came))))))))
    (CC And)
    (S
      (VP (VBN moaned)
        (PP (IN about)
          (NP (DT the) (NN fire)))))
    (. .)))

amod(thought-2, Small-1)
nsubj(had-3, thought-2)
nsubj(moaned-43, thought-2)
root(ROOT-0, had-3)
dobj(had-3, he-4)
mark(mark-6, to-5)
ccomp(had-3, mark-6)
det(strife-8, the-7)
dobj(mark-6, strife-8)
nsubj(fear-11, Cold-10)
parataxis(mark-6, fear-11)
case(desire-14, with-12)
amod(desire-14, hot-13)
nmod:with(fear-11, desire-14)
advmod(thrice-17, When-16)
advcl(mark-6, thrice-17)
nsubj(leaped-19, she-18)
ccomp(thrice-17, leaped-19)
case(flame-23, from-20)
det(flame-23, the-21)
amod(flame-23, leaping-22)
nmod:from(leaped-19, flame-23)
cc(had-3, And-25)
advmod(beat-28, thrice-26)
nsubj(beat-28, she-27)
conj:and(had-3, beat-28)
nmod:poss(breast-30, her-29)
dobj(beat-28, breast-30)
case(shame-32, for-31)
nmod:for(beat-28, shame-32)
cc(beat-28, And-34)
nsubj(dove-39, thrice-35)
case(wounded-38, like-36)
det(wounded-38, a-37)
nmod:like(thrice-35, wounded-38)
conj:and(had-3, dove-39)
conj:and(beat-28, dove-39)
nsubj(came-41, she-40)
ccomp(dove-39, came-41)
cc(had-3, And-42)
conj:and(had-3, moaned-43)
case(fire-46, about-44)
det(fire-46, the-45)
nmod:about(moaned-43, fire-46)

(ROOT
  (S
    (S
      (S
        (NP (PRP One))
        (VP (VBD watched) (, ,)
          (S
            (NP
              (NP (DT a) (NN bow-shot))
              (PP (IN from)
                (NP
                  (NP (DT the) (NN blaze))
                  (, ,)
                  (NP
                    (NP (DT The) (JJ silent) (NNS streets))
                    (PP (IN between)))))
              (, ,)
              (SBAR
                (WHNP (WP Who))
                (S
                  (VP (VBD had)
                    (VP (VBN stood)
                      (PP (IN by)
                        (NP (DT the) (NNP King)))
                      (PP (IN in)
                        (NP (NN sport)
                          (CC and)
                          (NN fray)))))))
              (, ,))
            (VP (TO To)
              (VP (VB blade)
                (PP (IN in)
                  (NP (NN ambush)
                    (CC or)
                    (NN boar)))
                (PP (IN at)
                  (NP (NN bay))))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN baron))
            (ADJP (JJ old)
              (CC and)
              (JJ gray))))))
    (, ,)
    (CC And)
    (S
      (VP (VBN kin)
        (PP (TO to)
          (NP (DT the) (NNP Boondi) (NNP Queen)))))
    (. .)))

nsubj(watched-2, One-1)
nsubj(kin-45, One-1)
root(ROOT-0, watched-2)
det(bow-shot-5, a-4)
dobj(watched-2, bow-shot-5)
nsubj(stood-17, bow-shot-5)
nsubj:xsubj(blade-27, bow-shot-5)
case(blaze-8, from-6)
det(blaze-8, the-7)
nmod:from(bow-shot-5, blaze-8)
det(streets-12, The-10)
amod(streets-12, silent-11)
appos(blaze-8, streets-12)
acl(streets-12, between-13)
ref(bow-shot-5, Who-15)
aux(stood-17, had-16)
acl:relcl(bow-shot-5, stood-17)
case(King-20, by-18)
det(King-20, the-19)
nmod:by(stood-17, King-20)
case(sport-22, in-21)
nmod:in(stood-17, sport-22)
cc(sport-22, and-23)
nmod:in(stood-17, fray-24)
conj:and(sport-22, fray-24)
mark(blade-27, To-26)
xcomp(watched-2, blade-27)
case(ambush-29, in-28)
nmod:in(blade-27, ambush-29)
cc(ambush-29, or-30)
nmod:in(blade-27, boar-31)
conj:or(ambush-29, boar-31)
case(bay-33, at-32)
nmod:at(blade-27, bay-33)
cc(watched-2, And-35)
nsubj(baron-39, he-36)
cop(baron-39, was-37)
det(baron-39, a-38)
conj:and(watched-2, baron-39)
amod(baron-39, old-40)
cc(old-40, and-41)
amod(baron-39, gray-42)
conj:and(old-40, gray-42)
cc(watched-2, And-44)
conj:and(watched-2, kin-45)
case(Queen-49, to-46)
det(Queen-49, the-47)
compound(Queen-49, Boondi-48)
nmod:to(kin-45, Queen-49)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD said) (: :) (`` ``)
      (S
        (NP (NNP O) (NNS shameless))
        (, ,)
        (VP (VB put)
          (PRT (RP aside))
          (NP (DT The) (NN veil))
          (PP (IN upon)
            (NP (PRP$ thy) (NN brow))))))
    (. !)))

nsubj(said-2, He-1)
root(ROOT-0, said-2)
compound(shameless-6, O-5)
nsubj(put-8, shameless-6)
ccomp(said-2, put-8)
compound:prt(put-8, aside-9)
det(veil-11, The-10)
dobj(put-8, veil-11)
case(brow-14, upon-12)
nmod:poss(brow-14, thy-13)
nmod:upon(put-8, brow-14)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WP Who))
      (S
        (VP (VBD held)
          (NP
            (NP (DT the) (NNP King))
            (CC and)
            (NP (PDT all) (PRP$ his) (NN land)))
          (PP (TO To)
            (NP
              (NP (DT the) (NN wanton) (NN will))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN harlot) (POS 's))
                  (NN hand))))))))
    (. !)))

nsubj(held-2, Who-1)
root(ROOT-0, held-2)
det(King-4, the-3)
dobj(held-2, King-4)
cc(King-4, and-5)
det:predet(land-8, all-6)
nmod:poss(land-8, his-7)
dobj(held-2, land-8)
conj:and(King-4, land-8)
case(will-12, To-9)
det(will-12, the-10)
compound(will-12, wanton-11)
nmod:to(held-2, will-12)
case(hand-17, of-13)
det(harlot-15, a-14)
nmod:poss(hand-17, harlot-15)
case(harlot-15, 's-16)
nmod:of(will-12, hand-17)

(ROOT
  (SQ (MD Will)
    (NP (DT the) (JJ white) (NN ash))
    (VP (VB rise)
      (PP (IN from)
        (NP (DT the) (JJ blistered) (NN brand))))
    (. ?)))

aux(rise-5, Will-1)
det(ash-4, the-2)
amod(ash-4, white-3)
nsubj(rise-5, ash-4)
root(ROOT-0, rise-5)
case(brand-9, from-6)
det(brand-9, the-7)
amod(brand-9, blistered-8)
nmod:from(rise-5, brand-9)

(ROOT
  (S
    (VP
      (VP (VB Stoop)
        (PRT (RP down)))
      (, ,)
      (CC and)
      (VP (VB call)
        (NP (PRP him))
        (ADVP (RB now))))
    (. !) ('' '')))

root(ROOT-0, Stoop-1)
compound:prt(Stoop-1, down-2)
cc(Stoop-1, and-4)
conj:and(Stoop-1, call-5)
dobj(call-5, him-6)
advmod(call-5, now-7)

(ROOT
  (SINV
    (VP (VBZ Then))
    (NP (PRP she))
    (: :) (`` ``)
    (S
      (S
        (PP (IN By)
          (NP
            (NP (DT the) (NN faith))
            (PP (IN of)
              (NP
                (NP (PRP$ my) (JJ tarnished) (NN soul))
                (, ,)
                (NP
                  (NP (DT All) (NNS things))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBD did)
                        (ADVP (RB not) (RB well))))))))))
        (, ,)
        (NP (PRP I))
        (VP (VBD had)
          (VP (VBN hoped)
            (S
              (VP (TO to)
                (VP (VB clear)
                  (NP
                    (NP (NN ere))
                    (SBAR
                      (S
                        (NP (DT the) (NN fire))
                        (VP (VBD died)))))))))))
      (, ,)
      (CC And)
      (S
        (VP (VB lay)
          (NP (PRP me))
          (ADVP (RB down)
            (PP (IN by)
              (NP
                (NP (PRP$ my) (NN master) (POS 's))
                (NN side)
                (S
                  (VP (TO To)
                    (VP (VB rule)
                      (PP (IN in)
                        (S
                          (S
                            (VP (VBG Heaven)
                              (NP (PRP$ his) (JJ only) (NN bride))))
                          (, ,)
                          (SBAR (IN While)
                            (S
                              (NP (DT the) (NNS others))
                              (VP (VBZ howl)
                                (PP (IN in)
                                  (NP (NNP Hell)))))))))))))))))
    (. .)))

root(ROOT-0, Then-1)
nsubj(Then-1, she-2)
case(faith-7, By-5)
det(faith-7, the-6)
nmod:by(hoped-22, faith-7)
case(soul-11, of-8)
nmod:poss(soul-11, my-9)
amod(soul-11, tarnished-10)
nmod:of(faith-7, soul-11)
det(things-14, All-13)
appos(soul-11, things-14)
nsubj(did-16, I-15)
acl:relcl(things-14, did-16)
dep(well-18, not-17)
advmod(did-16, well-18)
nsubj(hoped-22, I-20)
nsubj:xsubj(clear-24, I-20)
nsubj(lay-31, I-20)
aux(hoped-22, had-21)
ccomp(Then-1, hoped-22)
mark(clear-24, to-23)
xcomp(hoped-22, clear-24)
dobj(clear-24, ere-25)
det(fire-27, the-26)
nsubj(died-28, fire-27)
acl:relcl(ere-25, died-28)
cc(hoped-22, And-30)
ccomp(Then-1, lay-31)
conj:and(hoped-22, lay-31)
dobj(lay-31, me-32)
advmod(lay-31, down-33)
case(side-38, by-34)
nmod:poss(master-36, my-35)
nmod:poss(side-38, master-36)
case(master-36, 's-37)
nmod:by(down-33, side-38)
mark(rule-40, To-39)
acl(side-38, rule-40)
mark(Heaven-42, in-41)
advcl(rule-40, Heaven-42)
nmod:poss(bride-45, his-43)
amod(bride-45, only-44)
dobj(Heaven-42, bride-45)
mark(howl-50, While-47)
det(others-49, the-48)
nsubj(howl-50, others-49)
dep(Heaven-42, howl-50)
case(Hell-52, in-51)
nmod:in(howl-50, Hell-52)

(ROOT
  (S (`` ``)
    (S (CC But)
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN felt)
          (NP
            (NP (DT the) (NN fire) (POS 's))
            (NN breath)))))
    (, ,)
    (CC And)
    (S
      (ADVP (RB hard))
      (NP (PRP it))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB die))))))
    (. !)))

cc(felt-5, But-2)
nsubj(felt-5, I-3)
aux(felt-5, have-4)
root(ROOT-0, felt-5)
det(fire-7, the-6)
nmod:poss(breath-9, fire-7)
case(fire-7, 's-8)
dobj(felt-5, breath-9)
cc(felt-5, And-11)
advmod(is-14, hard-12)
nsubj(is-14, it-13)
nsubj:xsubj(die-16, it-13)
conj:and(felt-5, is-14)
mark(die-16, to-15)
xcomp(is-14, die-16)

(ROOT
  (S (CC Yet)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (MD may)
          (VP (VB pray)))))
    (S
      (NP (DT a) (NNP Rajpoot))
      (VP (VBD lord)
        (S
          (VP (TO To)
            (VP (VB sully)
              (NP
                (NP (DT the) (NN steel))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NNP Thakur) (POS 's))
                    (NN sword))))
              (PP (IN With)
                (NP
                  (NP (JJ base-born) (NN blood))
                  (PP (IN of)
                    (NP (DT a) (NN trade) (NN abhorred)))))))))
      (, ,) ('' ''))
    (: --)
    (CC And)
    (S
      (NP (DT the) (NNP Thakur))
      (VP (VBD answered) (, ,) (`` ``)
        (ADJP (JJ Ay))))
    (. .) ('' '')))

cc(lord-8, Yet-1)
mark(pray-5, if-2)
nsubj(pray-5, I-3)
aux(pray-5, may-4)
advcl(lord-8, pray-5)
det(Rajpoot-7, a-6)
nsubj(lord-8, Rajpoot-7)
nsubj:xsubj(sully-10, Rajpoot-7)
root(ROOT-0, lord-8)
mark(sully-10, To-9)
xcomp(lord-8, sully-10)
det(steel-12, the-11)
dobj(sully-10, steel-12)
case(sword-17, of-13)
det(Thakur-15, a-14)
nmod:poss(sword-17, Thakur-15)
case(Thakur-15, 's-16)
nmod:of(steel-12, sword-17)
case(blood-20, With-18)
amod(blood-20, base-born-19)
nmod:with(sully-10, blood-20)
case(abhorred-24, of-21)
det(abhorred-24, a-22)
compound(abhorred-24, trade-23)
nmod:of(blood-20, abhorred-24)
cc(lord-8, And-28)
det(Thakur-30, the-29)
nsubj(answered-31, Thakur-30)
conj:and(lord-8, answered-31)
xcomp(answered-31, Ay-34)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD drew))
        (CC and)
        (VP (VBD struck))))
    (: :)
    (S
      (NP (DT the) (JJ straight) (NN blade))
      (VP (VBD drank)
        (NP (DT The) (NN life))
        (PP (IN beneath)
          (NP (DT the) (NN breast)))))
    (. .)))

nsubj(drew-2, He-1)
nsubj(struck-4, He-1)
root(ROOT-0, drew-2)
cc(drew-2, and-3)
conj:and(drew-2, struck-4)
det(blade-8, the-6)
amod(blade-8, straight-7)
nsubj(drank-9, blade-8)
parataxis(drew-2, drank-9)
det(life-11, The-10)
dobj(drank-9, life-11)
case(breast-14, beneath-12)
det(breast-14, the-13)
nmod:beneath(drank-9, breast-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (VP (VBN looked)
          (PP (IN for)
            (NP (DT the) (NN Queen)))
          (S
            (VP (TO to)
              (VP (VB face)
                (NP (DT the) (NN flame))))))))
    (, ,)
    (CC But)
    (S
      (NP (DT the) (NN harlot))
      (VP
        (VP (VBZ dies)
          (PP (IN for)
            (NP
              (NP (DT the) (NNP Rajpoot) (NN dame))
              (: --)
              (NP
                (NP (NNP Sister))
                (PP (IN of)
                  (NP (NN mine)))))))
        (, ,)
        (VP (VB pass))
        (, ,)
        (VP (JJ free)
          (PP (IN from)
            (NP (NN shame))))
        (, ,)
        (VP (VB Pass)
          (PP (IN with)
            (NP (PRP$ thy) (NN King)))
          (PP (TO to)
            (NP (NN rest))))))
    (. !) ('' '')))

nsubj(looked-4, I-2)
nsubj:xsubj(face-9, I-2)
aux(looked-4, had-3)
root(ROOT-0, looked-4)
case(Queen-7, for-5)
det(Queen-7, the-6)
nmod:for(looked-4, Queen-7)
mark(face-9, to-8)
xcomp(looked-4, face-9)
det(flame-11, the-10)
dobj(face-9, flame-11)
cc(looked-4, But-13)
det(harlot-15, the-14)
nsubj(dies-16, harlot-15)
conj:but(looked-4, dies-16)
case(dame-20, for-17)
det(dame-20, the-18)
compound(dame-20, Rajpoot-19)
nmod:for(dies-16, dame-20)
dep(dame-20, Sister-22)
case(mine-24, of-23)
nmod:of(Sister-22, mine-24)
dep(dies-16, pass-26)
dep(dies-16, free-28)
case(shame-30, from-29)
nmod:from(free-28, shame-30)
dep(dies-16, Pass-32)
case(King-35, with-33)
nmod:poss(King-35, thy-34)
nmod:with(Pass-32, King-35)
case(rest-37, to-36)
nmod:to(Pass-32, rest-37)

(ROOT
  (S
    (S
      (NP (DT The) (JJ black) (NN log))
      (VP (VBD crashed)
        (PP (IN above)
          (NP (DT the) (JJ white)))))
    (: :)
    (S
      (NP
        (NP (DT The) (JJ little)
          (ADJP (JJ flames)
            (CC and)
            (JJ lean))
          (, ,) (NNP Red)
          (ADJP
            (ADJP (RB as) (JJ slaughter))
            (CC and)
            (ADJP (JJ blue) (IN as)))
          (NN steel))
        (, ,)
        (NP
          (NP (DT That))
          (VP (VBN whistled)
            (CC and)
            (VBN fluttered)
            (PP (IN from)
              (NP
                (NP (NN head))
                (PP (TO to)
                  (NP (NN heel)))))))
        (, ,))
      (VP (VBP Leaped)
        (PRT (RP up))
        (ADVP (RB anew))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP they))
            (VP (VBD found)
              (NP (PRP$ their) (NN meal))
              (PP (IN On)
                (NP
                  (NP
                    (NP (DT the) (NN heart))
                    (PP (IN of)))
                  (: --)
                  (NP (DT the) (NNP Boondi) (NNP Queen)))))))))
    (. !)))

det(log-3, The-1)
amod(log-3, black-2)
nsubj(crashed-4, log-3)
root(ROOT-0, crashed-4)
case(white-7, above-5)
det(white-7, the-6)
nmod:above(crashed-4, white-7)
det(steel-21, The-9)
amod(steel-21, little-10)
amod(steel-21, flames-11)
cc(flames-11, and-12)
conj:and(flames-11, lean-13)
amod(steel-21, lean-13)
dep(steel-21, Red-15)
advmod(slaughter-17, as-16)
amod(steel-21, slaughter-17)
cc(slaughter-17, and-18)
conj:and(slaughter-17, blue-19)
amod(steel-21, blue-19)
dep(blue-19, as-20)
nsubj(Leaped-32, steel-21)
appos(steel-21, That-23)
acl(That-23, whistled-24)
cc(whistled-24, and-25)
acl(That-23, fluttered-26)
conj:and(whistled-24, fluttered-26)
case(head-28, from-27)
nmod:from(whistled-24, head-28)
case(heel-30, to-29)
nmod:to(head-28, heel-30)
parataxis(crashed-4, Leaped-32)
compound:prt(Leaped-32, up-33)
advmod(Leaped-32, anew-34)
mark(found-38, for-36)
nsubj(found-38, they-37)
advcl(Leaped-32, found-38)
nmod:poss(meal-40, their-39)
dobj(found-38, meal-40)
case(heart-43, On-41)
det(heart-43, the-42)
nmod:on(found-38, heart-43)
acl(heart-43, of-44)
det(Queen-48, the-46)
compound(Queen-48, Boondi-47)
dep(heart-43, Queen-48)

(ROOT
  (S
    (NP
      (NP (DT THE) (NN BALLAD))
      (PP (IN OF)
        (NP
          (NP
            (NP
              (NP (DT THE) (NNP KING) (POS 'S))
              (NNP MERCY) (NNP _) (NNP Abdhur) (NNP Rahman))
            (, ,)
            (NP (DT the) (NNP Durani) (NNP Chief))
            (, ,))
          (PP (IN of)
            (NP (PRP him))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN story))
        (VP (VBN told))))
    (. .)))

det(BALLAD-2, THE-1)
nsubj(story-20, BALLAD-2)
case(Rahman-10, OF-3)
det(KING-5, THE-4)
nmod:poss(Rahman-10, KING-5)
case(KING-5, 'S-6)
compound(Rahman-10, MERCY-7)
compound(Rahman-10, _-8)
compound(Rahman-10, Abdhur-9)
nmod:of(BALLAD-2, Rahman-10)
det(Chief-14, the-12)
compound(Chief-14, Durani-13)
appos(Rahman-10, Chief-14)
case(him-17, of-16)
nmod:of(Rahman-10, him-17)
cop(story-20, is-18)
det(story-20, the-19)
root(ROOT-0, story-20)
acl(story-20, told-21)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN mercy))
      (VP (VBZ fills)
        (NP (DT the) (NNP Khyber) (NNS hills))))
    (: --)
    (S
      (NP (PRP$ his) (NN grace))
      (VP (VBZ is)
        (VP (VBN manifold))))
    (: ;)
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN taken)
          (NP
            (NP (NN toll))
            (PP (IN of)
              (NP
                (NP (DT the) (NNP North))
                (CC and)
                (NP (DT the) (NNP South))))))))
    (: --)
    (S
      (NP (PRP$ his) (NN glory))
      (VP (VBP reacheth)
        (ADVP (RB far))))
    (, ,)
    (CC And)
    (S
      (NP (PRP they))
      (VP (VBP tell)
        (NP
          (NP (DT the) (NN tale))
          (PP (IN of)
            (NP
              (NP (PRP$ his) (NN charity))
              (PP (IN from)
                (NP (NNP Balkh))))))
        (PP (TO to)
          (NP (NNP Kandahar) (NNP _)))))
    (. .)))

nmod:poss(mercy-2, His-1)
nsubj(fills-3, mercy-2)
root(ROOT-0, fills-3)
det(hills-6, the-4)
compound(hills-6, Khyber-5)
dobj(fills-3, hills-6)
nmod:poss(grace-9, his-8)
nsubjpass(manifold-11, grace-9)
auxpass(manifold-11, is-10)
conj:and(fills-3, manifold-11)
nsubj(taken-15, He-13)
aux(taken-15, has-14)
conj:and(fills-3, taken-15)
dobj(taken-15, toll-16)
case(North-19, of-17)
det(North-19, the-18)
nmod:of(toll-16, North-19)
cc(North-19, and-20)
det(South-22, the-21)
nmod:of(toll-16, South-22)
conj:and(North-19, South-22)
nmod:poss(glory-25, his-24)
nsubj(reacheth-26, glory-25)
conj:and(fills-3, reacheth-26)
advmod(reacheth-26, far-27)
cc(fills-3, And-29)
nsubj(tell-31, they-30)
conj:and(fills-3, tell-31)
det(tale-33, the-32)
dobj(tell-31, tale-33)
case(charity-36, of-34)
nmod:poss(charity-36, his-35)
nmod:of(tale-33, charity-36)
case(Balkh-38, from-37)
nmod:from(charity-36, Balkh-38)
case(_-41, to-39)
compound(_-41, Kandahar-40)
nmod:to(tell-31, _-41)

(ROOT
  (S
    (S
      (PP (IN Before)
        (NP (DT the) (JJ old) (NNP Peshawur) (NNP Gate)))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (NNP Kurd)
            (CC and)
            (NNP Kaffir))
          (VP (VBP meet))))
      (, ,)
      (NP
        (NP (DT The) (NN Governor))
        (PP (IN of)
          (NP (NNP Kabul))))
      (VP (VBD dealt)
        (NP
          (NP (DT the) (NNP Justice))
          (PP (IN of)
            (NP (DT the) (NNP Street))))))
    (, ,)
    (CC And)
    (S
      (NP (DT that))
      (VP (VBD was)
        (VP (VBN strait)
          (PP (IN as)
            (S
              (VP (VBG running)
                (ADJP (JJ noose)
                  (CC and)
                  (JJ swift)
                  (PP (IN as)
                    (S
                      (VP (VBG plunging)
                        (NP (NN knife))))))))))))
    (, ,)
    (S
      (NP (NNP Tho) (POS '))
      (NP (PRP he)))
    (SBAR
      (WHNP (WP who))
      (S
        (VP (VBD held)
          (SBAR
            (S
              (NP (DT the) (JJR longer) (NN purse))
              (VP (MD might)
                (VP (VB hold)
                  (NP (DT the) (JJR longer) (NN life)))))))))
    (. .)))

case(Gate-5, Before-1)
det(Gate-5, the-2)
amod(Gate-5, old-3)
compound(Gate-5, Peshawur-4)
nmod:before(dealt-17, Gate-5)
advmod(meet-11, where-7)
nsubj(meet-11, Kurd-8)
cc(Kurd-8, and-9)
conj:and(Kurd-8, Kaffir-10)
nsubj(meet-11, Kaffir-10)
advcl(dealt-17, meet-11)
det(Governor-14, The-13)
nsubj(dealt-17, Governor-14)
case(Kabul-16, of-15)
nmod:of(Governor-14, Kabul-16)
root(ROOT-0, dealt-17)
det(Justice-19, the-18)
dobj(dealt-17, Justice-19)
case(Street-22, of-20)
det(Street-22, the-21)
nmod:of(Justice-19, Street-22)
cc(dealt-17, And-24)
nsubjpass(strait-27, that-25)
auxpass(strait-27, was-26)
conj:and(dealt-17, strait-27)
mark(running-29, as-28)
advcl(strait-27, running-29)
xcomp(running-29, noose-30)
cc(noose-30, and-31)
xcomp(running-29, swift-32)
conj:and(noose-30, swift-32)
mark(plunging-34, as-33)
advcl(noose-30, plunging-34)
dobj(plunging-34, knife-35)
dep(he-39, Tho-37)
case(Tho-37, '-38)
conj:and(dealt-17, he-39)
nsubj(held-41, who-40)
dep(dealt-17, held-41)
det(purse-44, the-42)
amod(purse-44, longer-43)
nsubj(hold-46, purse-44)
aux(hold-46, might-45)
ccomp(held-41, hold-46)
det(life-49, the-47)
amod(life-49, longer-48)
dobj(hold-46, life-49)

(ROOT
  (SINV
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN hound))
          (PP (IN of)
            (NP (NNP Hindustan))))))
    (VP (VBD had)
      (VP (VBN struck)))
    (NP
      (NP (DT a) (NNP Euzufzai))
      (, ,)
      (NP
        (NP (NNP Wherefore))
        (SBAR
          (S
            (NP (PRP they))
            (VP
              (VP (VBP spat)
                (PP (IN upon)
                  (NP (PRP$ his) (NN face))))
              (CC and)
              (VP (VBD led)
                (NP (PRP him))
                (ADVP (RB out))
                (S
                  (VP (TO to)
                    (VP (VB die))))))))))
    (. .)))

expl(was-2, There-1)
dep(struck-8, was-2)
det(hound-4, a-3)
nsubj(was-2, hound-4)
case(Hindustan-6, of-5)
nmod:of(hound-4, Hindustan-6)
aux(struck-8, had-7)
root(ROOT-0, struck-8)
det(Euzufzai-10, a-9)
nsubj(struck-8, Euzufzai-10)
appos(Euzufzai-10, Wherefore-12)
nsubj(spat-14, they-13)
nsubj(led-19, they-13)
acl:relcl(Wherefore-12, spat-14)
case(face-17, upon-15)
nmod:poss(face-17, his-16)
nmod:upon(spat-14, face-17)
cc(spat-14, and-18)
acl:relcl(Wherefore-12, led-19)
conj:and(spat-14, led-19)
dobj(led-19, him-20)
advmod(led-19, out-21)
mark(die-23, to-22)
advcl(led-19, die-23)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD chanced)
        (SBAR
          (S
            (NP (DT the) (NNP King))
            (VP (VBD went)
              (ADVP (RB forth)
                (NP (DT that) (NN hour)))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (NN throat))
                  (VP (VBD was)
                    (VP (VBN bared)
                      (PP (TO to)
                        (NP (NN knife))))))))))))
    (: ;)
    (S
      (NP (DT The) (NNP Kaffir))
      (VP (VBD grovelled)
        (ADJP (JJ under-hoof)
          (CC and)
          (JJ clamoured))
        (PP (IN for)
          (NP (PRP$ his) (NN life)))))
    (. .)))

nsubj(chanced-2, It-1)
root(ROOT-0, chanced-2)
det(King-4, the-3)
nsubj(went-5, King-4)
ccomp(chanced-2, went-5)
advmod(went-5, forth-6)
det(hour-8, that-7)
nmod:npmod(forth-6, hour-8)
advmod(bared-12, when-9)
nsubjpass(bared-12, throat-10)
auxpass(bared-12, was-11)
advcl(went-5, bared-12)
case(knife-14, to-13)
nmod:to(bared-12, knife-14)
det(Kaffir-17, The-16)
nsubj(grovelled-18, Kaffir-17)
parataxis(chanced-2, grovelled-18)
xcomp(grovelled-18, under-hoof-19)
cc(under-hoof-19, and-20)
xcomp(grovelled-18, clamoured-21)
conj:and(under-hoof-19, clamoured-21)
case(life-24, for-22)
nmod:poss(life-24, his-23)
nmod:for(grovelled-18, life-24)

(ROOT
  (SINV (RB Then)
    (VP (VBD said)
      (NP
        (NP (DT the) (NNP King))
        (: :) (`` ``)
        (NP (NNP Have))))
    (NP
      (NP (NN hope))
      (, ,)
      (NP (NNP O) (NN friend)))
    (. !)))

advmod(said-2, Then-1)
root(ROOT-0, said-2)
det(King-4, the-3)
dobj(said-2, King-4)
dep(King-4, Have-7)
nsubj(said-2, hope-8)
compound(friend-11, O-10)
appos(hope-8, friend-11)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Yea) (, ,) (NNP Death))
        (VP (VBN disgraced)))
      (VP (VBZ is)
        (ADJP (JJ hard))))
    (: ;)
    (S
      (S
        (NP (JJ Much) (NN honour))
        (VP (MD shall)
          (VP (VB be)
            (VP
              (VP (VBN thine))
              ('' '') (: ;)
              (CC and)
              (VP (VBN called)
                (NP
                  (NP (DT the) (NNP Captain))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN Guard))
                      (, ,)
                      (NP (NNP Yar) (NNP Khan))
                      (, ,)
                      (NP
                        (NP (DT a) (NN bastard))
                        (PP (IN of)
                          (NP (DT the) (NN Blood))))
                      (, ,)
                      (ADVP (RB so)
                        (NP (JJ city-babble) (NN saith)))))))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP he))
        (VP (VBD was)
          (ADJP (VBN honoured)
            (PP (IN of)
              (NP
                (NP (DT the) (NNP King))
                (: --)
                (NP
                  (NP (DT the))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (NP
                          (NP (NN salt))
                          (PP (TO to)
                            (NP (NNP Death))))))))))))))
    (: ;)
    (S
      (S (CC And)
        (NP (PRP he))
        (VP (VBD was)
          (NP
            (NP (NN son))
            (PP (IN of)
              (NP
                (NP (NNP Daoud) (NNP Shah))
                (, ,)
                (NP
                  (NP (DT the) (NN Reiver))
                  (PP (IN of)
                    (NP (DT the) (NNPS Plains)))))))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP (NN blood))
          (PP (IN of)
            (NP (JJ old) (NNP Durani) (NNPS Lords))))
        (VP (VBD ran)
          (NP (NN fire))
          (PP (IN in)
            (NP (PRP$ his) (NNS veins))))))
    (: ;)
    (CC And)
    (S
      (S
        (NP (NN 't))
        (VP (VBD was)
          (S
            (VP (TO to)
              (VP (JJ tame)
                (SBAR
                  (S
                    (NP
                      (NP (DT an) (JJ Afghan) (NN pride))
                      (CC nor)
                      (NP (NNP Hell)
                        (CC nor)
                        (NNP Heaven)))
                    (VP (MD could)
                      (VP (VB bind))))))))))
      (, ,)
      (NP (DT The) (NNP King))
      (VP (MD would)
        (VP (VB make)
          (S
            (NP (PRP him))
            (ADJP (JJ butcher)
              (PP (TO to)
                (NP
                  (NP (DT a) (VBG yelping) (NN cur))
                  (PP (IN of)
                    (NP (NNP Hind))))))))))
    (. .)))

compound(Death-3, Yea-1)
nsubj(hard-6, Death-3)
acl(Death-3, disgraced-4)
cop(hard-6, is-5)
root(ROOT-0, hard-6)
amod(honour-9, Much-8)
nsubjpass(thine-12, honour-9)
nsubjpass(called-16, honour-9)
aux(thine-12, shall-10)
auxpass(thine-12, be-11)
conj:and(hard-6, thine-12)
cc(thine-12, and-15)
conj:and(hard-6, called-16)
conj:and(thine-12, called-16)
det(Captain-18, the-17)
dobj(called-16, Captain-18)
case(Guard-21, of-19)
det(Guard-21, the-20)
nmod:of(Captain-18, Guard-21)
compound(Khan-24, Yar-23)
appos(Guard-21, Khan-24)
det(bastard-27, a-26)
appos(Guard-21, bastard-27)
case(Blood-30, of-28)
det(Blood-30, the-29)
nmod:of(bastard-27, Blood-30)
advmod(Guard-21, so-32)
amod(saith-34, city-babble-33)
nmod:npmod(so-32, saith-34)
cc(thine-12, And-36)
nsubjpass(honoured-39, he-37)
auxpass(honoured-39, was-38)
conj:and(hard-6, honoured-39)
conj:and(thine-12, honoured-39)
case(King-42, of-40)
det(King-42, the-41)
nmod:of(honoured-39, King-42)
dep(King-42, the-44)
nsubj(salt-47, the-44)
ref(the-44, which-45)
cop(salt-47, is-46)
acl:relcl(the-44, salt-47)
case(Death-49, to-48)
nmod:to(salt-47, Death-49)
cc(son-54, And-51)
nsubj(son-54, he-52)
cop(son-54, was-53)
conj:and(hard-6, son-54)
case(Shah-57, of-55)
compound(Shah-57, Daoud-56)
nmod:of(son-54, Shah-57)
det(Reiver-60, the-59)
appos(Shah-57, Reiver-60)
case(Plains-63, of-61)
det(Plains-63, the-62)
nmod:of(Reiver-60, Plains-63)
cc(son-54, And-65)
nsubj(ran-71, blood-66)
case(Lords-70, of-67)
amod(Lords-70, old-68)
compound(Lords-70, Durani-69)
nmod:of(blood-66, Lords-70)
conj:and(hard-6, ran-71)
conj:and(son-54, ran-71)
dobj(ran-71, fire-72)
case(veins-75, in-73)
nmod:poss(veins-75, his-74)
nmod:in(ran-71, veins-75)
cc(hard-6, And-77)
nsubj(was-79, 't-78)
nsubj:xsubj(tame-81, 't-78)
ccomp(make-95, was-79)
mark(tame-81, to-80)
xcomp(was-79, tame-81)
det(pride-84, an-82)
amod(pride-84, Afghan-83)
nsubj(bind-90, pride-84)
cc(pride-84, nor-85)
conj:nor(pride-84, Hell-86)
nsubj(bind-90, Hell-86)
cc(Hell-86, nor-87)
conj:nor(pride-84, Heaven-88)
conj:nor(Hell-86, Heaven-88)
aux(bind-90, could-89)
ccomp(tame-81, bind-90)
det(King-93, The-92)
nsubj(make-95, King-93)
aux(make-95, would-94)
conj:and(hard-6, make-95)
nsubj(butcher-97, him-96)
xcomp(make-95, butcher-97)
case(cur-101, to-98)
det(cur-101, a-99)
amod(cur-101, yelping-100)
nmod:to(butcher-97, cur-101)
case(Hind-103, of-102)
nmod:of(cur-101, Hind-103)

(ROOT
  (INTJ (`` ``) (UH Strike) (. !) ('' '')))

root(ROOT-0, Strike-2)

(ROOT
  (S
    (VP (VBD said)
      (NP (DT the) (NNP King)))
    (. .)))

root(ROOT-0, said-1)
det(King-3, the-2)
dobj(said-1, King-3)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP King) (POS 's))
        (NN blood))
      (VP (VBP art)
        (NP (PRP thou))))
    (: --)
    (S
      (NP (PRP$ his) (NN death))
      (VP (MD shall)
        (VP (VB be)
          (NP (PRP$ his) (NN pride)))))
    (. !) ('' '')))

nmod:poss(blood-4, King-2)
case(King-2, 's-3)
nsubj(thou-6, blood-4)
cop(thou-6, art-5)
root(ROOT-0, thou-6)
nmod:poss(death-9, his-8)
nsubj(pride-13, death-9)
aux(pride-13, shall-10)
cop(pride-13, be-11)
nmod:poss(pride-13, his-12)
parataxis(thou-6, pride-13)

(ROOT
  (S (RB Then)
    (ADVP (RBR louder))
    (, ,)
    (SBAR (IN that)
      (S
        (NP (DT the) (NN crowd))
        (VP (MD might)
          (VP (VB catch)))))
    (: :) (`` ``)
    (NP
      (NP (NN Fear) (RB not))
      (: --)
      (NP (PRP$ his) (NNS arms)))
    (VP (VBP are)
      (VP (VBN tied)))
    (. !) ('' '')))

advmod(tied-17, Then-1)
advmod(tied-17, louder-2)
mark(catch-8, that-4)
det(crowd-6, the-5)
nsubj(catch-8, crowd-6)
aux(catch-8, might-7)
advcl(tied-17, catch-8)
nsubjpass(tied-17, Fear-11)
neg(Fear-11, not-12)
nmod:poss(arms-15, his-14)
dep(Fear-11, arms-15)
auxpass(tied-17, are-16)
root(ROOT-0, tied-17)

(ROOT
  (S
    (NP (NNP Yar) (NNP Khan))
    (VP
      (VP (VBD drew)
        (VP (VB clear)
          (NP (DT the) (NNP Khyber) (NN knife))))
      (, ,)
      (CC and)
      (VP (VBD struck))
      (, ,)
      (CC and)
      (VP (VBD sheathed)
        (ADVP (RB again))))
    (. .)))

compound(Khan-2, Yar-1)
nsubj(drew-3, Khan-2)
nsubj(struck-10, Khan-2)
nsubj(sheathed-13, Khan-2)
root(ROOT-0, drew-3)
xcomp(drew-3, clear-4)
det(knife-7, the-5)
compound(knife-7, Khyber-6)
dobj(clear-4, knife-7)
cc(drew-3, and-9)
conj:and(drew-3, struck-10)
cc(drew-3, and-12)
conj:and(drew-3, sheathed-13)
advmod(sheathed-13, again-14)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP O) (NN man))
        (, ,)
        (NP
          (NP (PRP$ thy) (NN will))
          (SBAR
            (S
              (VP (VBZ is)
                (VP (VBN done))))))
        (, ,) ('' ''))
      (VP (VBP quoth)
        (NP (PRP he))))
    (: ;) (`` ``)
    (S
      (NP
        (NP (DT a) (NNP King))
        (NP (DT this) (NN dog)))
      (VP (VBP hath)
        (S
          (VP (VBN slain)))))
    (. .) ('' '')))

compound(man-3, O-2)
nsubj(quoth-11, man-3)
nmod:poss(will-6, thy-5)
appos(man-3, will-6)
auxpass(done-8, is-7)
acl:relcl(will-6, done-8)
root(ROOT-0, quoth-11)
dobj(quoth-11, he-12)
det(King-16, a-15)
nsubj(hath-19, King-16)
det(dog-18, this-17)
dep(King-16, dog-18)
dep(quoth-11, hath-19)
dep(hath-19, slain-20)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP _) (NNP Abdhur) (NNP Rahman))
        (, ,)
        (NP (DT the) (NNP Durani) (NNP Chief))
        (, ,))
      (PP (TO to)
        (NP
          (NP (DT the) (NNP North))
          (CC and)
          (NP (DT the) (NNP South)))))
    (VP (VBZ is)
      (VP (VBN sold)))
    (. .)))

compound(Rahman-3, _-1)
compound(Rahman-3, Abdhur-2)
nsubjpass(sold-16, Rahman-3)
det(Chief-7, the-5)
compound(Chief-7, Durani-6)
appos(Rahman-3, Chief-7)
case(North-11, to-9)
det(North-11, the-10)
nmod:to(Rahman-3, North-11)
cc(North-11, and-12)
det(South-14, the-13)
nmod:to(Rahman-3, South-14)
conj:and(North-11, South-14)
auxpass(sold-16, is-15)
root(ROOT-0, sold-16)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP North))
      (CC and)
      (NP (DT the) (NNP South)))
    (VP (MD shall)
      (VP (VB open)
        (NP (PRP$ their) (NN mouth))
        (PP (TO to)
          (NP (DT a) (NNP Ghilzai) (NN flag) (NN unrolled)))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (S
              (NP (DT the) (JJ big) (NNS guns))
              (VP (VBP speak)
                (PP (TO to)
                  (NP (DT the) (NNP Khyber) (NN peak)))))
            (, ,)
            (CC and)
            (S
              (NP (PRP$ his) (NNS dog-Heratis))
              (VP (VBP fly)))
            (: :)
            (S
              (NP (PRP Ye))
              (VP (VBP have)
                (VP (VBN heard)
                  (NP (DT the) (NN song)))))))
        (: --)
        (FRAG
          (WHADJP (WRB How) (JJ long)))))
    (. ?)))

det(North-2, The-1)
nsubj(open-7, North-2)
cc(North-2, and-3)
det(South-5, the-4)
conj:and(North-2, South-5)
nsubj(open-7, South-5)
aux(open-7, shall-6)
root(ROOT-0, open-7)
nmod:poss(mouth-9, their-8)
dobj(open-7, mouth-9)
case(unrolled-14, to-10)
det(unrolled-14, a-11)
compound(unrolled-14, Ghilzai-12)
compound(unrolled-14, flag-13)
nmod:to(open-7, unrolled-14)
advmod(speak-20, When-16)
det(guns-19, the-17)
amod(guns-19, big-18)
nsubj(speak-20, guns-19)
advcl(open-7, speak-20)
case(peak-24, to-21)
det(peak-24, the-22)
compound(peak-24, Khyber-23)
nmod:to(speak-20, peak-24)
cc(speak-20, and-26)
nmod:poss(dog-Heratis-28, his-27)
nsubj(fly-29, dog-Heratis-28)
advcl(open-7, fly-29)
conj:and(speak-20, fly-29)
nsubj(heard-33, Ye-31)
aux(heard-33, have-32)
advcl(open-7, heard-33)
conj:and(speak-20, heard-33)
det(song-35, the-34)
dobj(heard-33, song-35)
advmod(long-38, How-37)
dep(open-7, long-38)

(ROOT
  (FRAG
    (WHNP (WRB How) (RB long))
    (. ?)))

advmod(long-2, How-1)
root(ROOT-0, long-2)

(ROOT
  (NP
    (NP (NNS Wolves))
    (PP (IN of)
      (NP (DT the) (NNP Abazai)))
    (. !)))

root(ROOT-0, Wolves-1)
case(Abazai-4, of-2)
det(Abazai-4, the-3)
nmod:of(Wolves-1, Abazai-4)

(ROOT
  (S
    (S
      (VP (VBN _)
        (NP (DT That) (NN night))
        (SBAR (IN before)
          (S
            (NP (DT the) (NN watch))
            (VP (VBD was)
              (VP (VBN set) (, ,)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PDT all) (DT the) (NNS streets))
                    (VP (VBD were)
                      (ADJP (JJ clear)))))))))))
    (, ,)
    (NP
      (NP (DT The) (NN Governor))
      (PP (IN of)
        (NP (NNP Kabul))))
    (VP (VBD spoke) (: :) (`` ``)
      (S
        (NP (PRP$ My) (NNP King) (, ,) (NN hast))
        (VP (VBG thou)
          (NP (DT no) (NN fear)))))
    (. ?)))

advcl(spoke-21, _-1)
det(night-3, That-2)
nmod:tmod(_-1, night-3)
mark(set-8, before-4)
det(watch-6, the-5)
nsubjpass(set-8, watch-6)
auxpass(set-8, was-7)
advcl(_-1, set-8)
advmod(clear-15, when-10)
det:predet(streets-13, all-11)
det(streets-13, the-12)
nsubj(clear-15, streets-13)
cop(clear-15, were-14)
advcl(set-8, clear-15)
det(Governor-18, The-17)
nsubj(spoke-21, Governor-18)
case(Kabul-20, of-19)
nmod:of(Governor-18, Kabul-20)
root(ROOT-0, spoke-21)
nmod:poss(hast-27, My-24)
compound(hast-27, King-25)
nsubj(thou-28, hast-27)
dep(spoke-21, thou-28)
neg(fear-30, no-29)
dobj(thou-28, fear-30)

(ROOT
  (S
    (S
      (NP (PRP Thou))
      (VP (VBD knowest) (: --)
        (S
          (NP (PRP thou))
          (ADJP (JJ hast))
          (S
            (VP (VBN heard)))))
      (, ,) ('' ''))
    (: --)
    (S
      (NP (PRP$ his) (NN speech))
      (VP (VBD died)
        (PP (IN at)
          (NP
            (NP (PRP$ his) (NN master) (POS 's))
            (NN face)))))
    (. .)))

nsubj(knowest-2, Thou-1)
root(ROOT-0, knowest-2)
nsubj(heard-6, thou-4)
dep(heard-6, hast-5)
parataxis(knowest-2, heard-6)
nmod:poss(speech-11, his-10)
nsubj(died-12, speech-11)
parataxis(knowest-2, died-12)
case(face-17, at-13)
nmod:poss(master-15, his-14)
nmod:poss(face-17, master-15)
case(master-15, 's-16)
nmod:at(died-12, face-17)

(ROOT
  (S (CC And)
    (NP (NNP grimly))
    (VP (VBD said)
      (NP (DT the) (JJ Afghan) (NN King))
      (: :) (`` ``)
      (S
        (NP (PRP I))
        (VP (VB rule)
          (NP (DT the) (JJ Afghan) (NN race)))))
    (. .)))

cc(said-3, And-1)
nsubj(said-3, grimly-2)
root(ROOT-0, said-3)
det(King-6, the-4)
amod(King-6, Afghan-5)
dobj(said-3, King-6)
nsubj(rule-10, I-9)
dep(said-3, rule-10)
det(race-13, the-11)
amod(race-13, Afghan-12)
dobj(rule-10, race-13)

(ROOT
  (S
    (NP (PRP$ My) (NN path))
    (VP (VBZ is)
      (NP
        (NP (NN mine))
        (PRN (: --)
          (S
            (VP (VB see)
              (S
                (NP (PRP thou))
                (VP (TO to)
                  (VP (VB thine))))))
          (: --))
        (ADJP (JJ to-night)
          (PP (IN upon)
            (NP
              (NP (PRP$ thy) (NN bed))
              (SBAR
                (S
                  (VP (VBP Think)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (NP (EX there))
                        (VP (VBP be)
                          (PP (IN in)
                            (NP (NNP Kabul)))
                          (ADVP (RB now)
                            (NP (DT that) (NN clamour))
                            (PP (IN for)
                              (NP (PRP$ thy) (NN head)))))))))))))))
    (. .) ('' '')))

nmod:poss(path-2, My-1)
nsubj(mine-4, path-2)
cop(mine-4, is-3)
root(ROOT-0, mine-4)
dep(mine-4, see-6)
dobj(see-6, thou-7)
nsubj:xsubj(thine-9, thou-7)
mark(thine-9, to-8)
xcomp(see-6, thine-9)
amod(mine-4, to-night-11)
case(bed-14, upon-12)
nmod:poss(bed-14, thy-13)
nmod:upon(to-night-11, bed-14)
dobj(be-18, bed-14)
acl:relcl(bed-14, Think-15)
ref(bed-14, who-16)
expl(be-18, there-17)
ccomp(Think-15, be-18)
case(Kabul-20, in-19)
nmod:in(be-18, Kabul-20)
advmod(be-18, now-21)
det(clamour-23, that-22)
nmod:npmod(now-21, clamour-23)
case(head-26, for-24)
nmod:poss(head-26, thy-25)
nmod:for(now-21, head-26)

(ROOT
  (S
    (NP (DT That) (NN night))
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PDT all) (DT the) (NNS gates))
        (VP (VBD were)
          (VP (VBN shut)
            (PP
              (PP (TO to)
                (NP (NNP City)))
              (CC and)
              (PP (TO to)
                (NP (NN throne))))))))
    (, ,)
    (PP (IN Within)
      (NP (DT a) (JJ little) (NN garden-house)))
    (NP (DT the) (NNP King))
    (VP (VBD lay)
      (PRT (RP down))
      (ADVP (RB alone)))
    (. .)))

det(night-2, That-1)
nmod:tmod(lay-21, night-2)
advmod(shut-8, when-3)
det:predet(gates-6, all-4)
det(gates-6, the-5)
nsubjpass(shut-8, gates-6)
nsubjpass(shut-8', gates-6)
auxpass(shut-8, were-7)
conj:and(shut-8, shut-8')
advcl(lay-21, shut-8)
advcl(lay-21, shut-8')
case(City-10, to-9)
nmod:to(shut-8, City-10)
cc(shut-8, and-11)
case(throne-13, to-12)
nmod:to(shut-8', throne-13)
case(garden-house-18, Within-15)
det(garden-house-18, a-16)
amod(garden-house-18, little-17)
nmod:within(lay-21, garden-house-18)
det(King-20, the-19)
nsubj(lay-21, King-20)
root(ROOT-0, lay-21)
compound:prt(lay-21, down-22)
advmod(lay-21, alone-23)

(ROOT
  (S
    (PP (IN Before)
      (NP
        (NP (DT the) (NN sinking))
        (PP (IN of)
          (NP
            (NP (DT the) (NN moon))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (NP
                    (NP (DT the) (NN Night))
                    (PP (IN of)
                      (NP (NNP Night)))))))))))
    (, ,)
    (NP (NNP Yar) (NNP Khan))
    (VP (VBD came)
      (ADVP (RB softly))
      (PP (TO to)
        (NP (DT the) (NNP King)))
      (S
        (VP (TO to)
          (VP (VB make)
            (S
              (NP (PRP$ his) (NN honour))
              (ADJP (JJ white)))))))
    (. .)))

case(sinking-3, Before-1)
det(sinking-3, the-2)
nmod:before(came-17, sinking-3)
case(moon-6, of-4)
det(moon-6, the-5)
nmod:of(sinking-3, moon-6)
nsubj(Night-11, moon-6)
ref(moon-6, which-8)
cop(Night-11, is-9)
det(Night-11, the-10)
acl:relcl(moon-6, Night-11)
case(Night-13, of-12)
nmod:of(Night-11, Night-13)
compound(Khan-16, Yar-15)
nsubj(came-17, Khan-16)
nsubj:xsubj(make-23, Khan-16)
root(ROOT-0, came-17)
advmod(came-17, softly-18)
case(King-21, to-19)
det(King-21, the-20)
nmod:to(came-17, King-21)
mark(make-23, to-22)
xcomp(came-17, make-23)
nmod:poss(honour-25, his-24)
nsubj(white-26, honour-25)
xcomp(make-23, white-26)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS children))
        (PP (IN of)
          (NP (DT the) (NN town))))
      (VP (VBD had)
        (VP (VBN mocked)
          (PP (IN beneath)
            (NP
              (NP (PRP$ his) (NN horse) (POS 's))
              (NNS hoofs))))))
    (, ,)
    (NP
      (NP (DT The) (NNS harlots))
      (PP (IN of)
        (NP (DT the) (NN town))))
    (VP (VBD had)
      (VP (VBN hailed)
        (S
          (NP (PRP him))
          (`` ``)
          (ADJP (JJ butcher)))))
    (. !) ('' '')))

det(children-2, The-1)
nsubj(mocked-7, children-2)
case(town-5, of-3)
det(town-5, the-4)
nmod:of(children-2, town-5)
aux(mocked-7, had-6)
ccomp(hailed-20, mocked-7)
case(hoofs-12, beneath-8)
nmod:poss(horse-10, his-9)
nmod:poss(hoofs-12, horse-10)
case(horse-10, 's-11)
nmod:beneath(mocked-7, hoofs-12)
det(harlots-15, The-14)
nsubj(hailed-20, harlots-15)
case(town-18, of-16)
det(town-18, the-17)
nmod:of(harlots-15, town-18)
aux(hailed-20, had-19)
root(ROOT-0, hailed-20)
dep(butcher-23, him-21)
xcomp(hailed-20, butcher-23)

(ROOT
  (FRAG
    (PP (IN from)
      (NP (PRP$ their) (NNS roofs)))
    (. .)))

case(roofs-3, from-1)
nmod:poss(roofs-3, their-2)
root(ROOT-0, roofs-3)

(ROOT
  (S (CC But)
    (SBAR (IN as)
      (S
        (NP (PRP he))
        (VP (VBD groped)
          (PP (IN against)
            (NP
              (NP (DT the) (NN wall))
              (, ,)
              (NP (CD two) (NNS hands))))
          (SBAR (IN upon)
            (S
              (NP (PRP him))
              (VP (VBD fell)))))))
    (, ,)
    (NP
      (NP (DT The) (NNP King))
      (PP (IN behind)
        (NP (PRP$ his) (NN shoulder))))
    (VP (VBD spake) (: :) (`` ``)
      (S
        (INTJ (UH Dead) (UH man))
        (, ,)
        (NP (PRP thou))
        (VP (VBP dost)
          (ADVP (RB not) (RB well)))))
    (. !)))

cc(spake-20, But-1)
mark(groped-4, as-2)
nsubj(groped-4, he-3)
advcl(spake-20, groped-4)
case(wall-7, against-5)
det(wall-7, the-6)
nmod:against(groped-4, wall-7)
nummod(hands-10, two-9)
appos(wall-7, hands-10)
mark(fell-13, upon-11)
nsubj(fell-13, him-12)
advcl(groped-4, fell-13)
det(King-16, The-15)
nsubj(spake-20, King-16)
case(shoulder-19, behind-17)
nmod:poss(shoulder-19, his-18)
nmod:behind(King-16, shoulder-19)
root(ROOT-0, spake-20)
discourse(dost-27, Dead-23)
dep(Dead-23, man-24)
nsubj(dost-27, thou-26)
ccomp(spake-20, dost-27)
dep(well-29, not-28)
advmod(dost-27, well-29)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBZ is)
        (ADJP (JJ ill)
          (S
            (VP (TO to)
              (VP
                (VP (VB jest)
                  (PP (IN with)
                    (NP (NNPS Kings)))
                  (PP (IN by)
                    (NP (NN day))))
                (CC and)
                (VP (VB seek)
                  (NP (DT a) (NN boon))
                  (PP (IN by)
                    (NP (NN night))))))))))
    (: ;)
    (CC And)
    (S
      (NP
        (NP (DT that) (JJ thou) (NN bearest))
        (PP (IN in)
          (NP (PRP$ thy) (NN hand))))
      (VP (VBZ is) (RB all)
        (ADJP (RB too) (JJ sharp)
          (S
            (VP (TO to)
              (VP (VB write)))))))
    (. .)))

nsubj(ill-3, 'T-1)
nsubj:xsubj(jest-5, 'T-1)
nsubj:xsubj(seek-11, 'T-1)
cop(ill-3, is-2)
root(ROOT-0, ill-3)
mark(jest-5, to-4)
xcomp(ill-3, jest-5)
case(Kings-7, with-6)
nmod:with(jest-5, Kings-7)
case(day-9, by-8)
nmod:by(jest-5, day-9)
cc(jest-5, and-10)
xcomp(ill-3, seek-11)
conj:and(jest-5, seek-11)
det(boon-13, a-12)
dobj(seek-11, boon-13)
case(night-15, by-14)
nmod:by(seek-11, night-15)
cc(ill-3, And-17)
det(bearest-20, that-18)
amod(bearest-20, thou-19)
nsubj(sharp-27, bearest-20)
nsubj:xsubj(write-29, bearest-20)
case(hand-23, in-21)
nmod:poss(hand-23, thy-22)
nmod:in(bearest-20, hand-23)
cop(sharp-27, is-24)
advmod(sharp-27, all-25)
advmod(sharp-27, too-26)
conj:and(ill-3, sharp-27)
mark(write-29, to-28)
xcomp(sharp-27, write-29)

(ROOT
  (S (CC But)
    (NP (CD three) (NNS days) (RB hence))
    (, ,)
    (SBAR
      (SBAR (IN if)
        (S
          (NP (NNP God))
          (VP (VB be)
            (ADJP (JJ good)))))
      (, ,)
      (CC and)
      (SBAR (IN if)
        (S
          (NP (PRP$ thy) (NN strength))
          (VP (VBP remain)))))
    (, ,)
    (NP (PRP Thou))
    (VP (MD shalt)
      (VP
        (VP (VB demand)
          (NP
            (NP (CD one) (NN boon))
            (PP (IN of)
              (NP (PRP me)))))
        (CC and)
        (VP (VB bless)
          (NP (PRP me))
          (PP (IN in)
            (NP (PRP$ thy) (NN pain))))))
    (. .)))

cc(demand-19, But-1)
nummod(days-3, three-2)
nmod:tmod(demand-19, days-3)
advmod(days-3, hence-4)
mark(good-9, if-6)
nsubj(good-9, God-7)
cop(good-9, be-8)
advcl(demand-19, good-9)
cc(good-9, and-11)
mark(remain-15, if-12)
nmod:poss(strength-14, thy-13)
nsubj(remain-15, strength-14)
conj:and(good-9, remain-15)
advcl(demand-19, remain-15)
nsubj(demand-19, Thou-17)
nsubj(bless-25, Thou-17)
aux(demand-19, shalt-18)
root(ROOT-0, demand-19)
nummod(boon-21, one-20)
dobj(demand-19, boon-21)
case(me-23, of-22)
nmod:of(boon-21, me-23)
cc(demand-19, and-24)
conj:and(demand-19, bless-25)
dobj(bless-25, me-26)
case(pain-29, in-27)
nmod:poss(pain-29, thy-28)
nmod:in(bless-25, pain-29)

(ROOT
  (S (IN For)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ merciful)
        (PP (TO to)
          (NP
            (NP (DT all))
            (, ,)
            (CC and)
            (NP
              (NP (JJS most))
              (PP (IN of)
                (NP
                  (NP (DT all))
                  (PP (TO to)
                    (NP (PRP thee))))))))))
    (. .)))

dep(merciful-4, For-1)
nsubj(merciful-4, I-2)
cop(merciful-4, am-3)
root(ROOT-0, merciful-4)
case(all-6, to-5)
nmod:to(merciful-4, all-6)
cc(all-6, and-8)
nmod:to(merciful-4, most-9)
conj:and(all-6, most-9)
case(all-11, of-10)
nmod:of(most-9, all-11)
case(thee-13, to-12)
nmod:to(all-11, thee-13)

(ROOT
  (FRAG
    (NP
      (NP
        (NP (PRP$ My) (NN butcher))
        (PP (IN of)
          (NP
            (NP (DT the) (NN shambles))
            (, ,)
            (NP (NN rest)))))
      (: --)
      (NP
        (NP (DT no) (NN knife) (NN hast) (NN thou))
        (PP (IN for)
          (NP (PRP me)))))
    (. !) ('' '')))

nmod:poss(butcher-2, My-1)
root(ROOT-0, butcher-2)
case(shambles-5, of-3)
det(shambles-5, the-4)
nmod:of(butcher-2, shambles-5)
appos(shambles-5, rest-7)
neg(thou-12, no-9)
compound(thou-12, knife-10)
compound(thou-12, hast-11)
dep(butcher-2, thou-12)
case(me-14, for-13)
nmod:for(thou-12, me-14)

(ROOT
  (S
    (S
      (NP
        (NP (NNP _) (NNP Abdhur) (NNP Rahman))
        (, ,)
        (NP (DT the) (NNP Durani) (NNP Chief))
        (, ,))
      (VP (VBZ holds)
        (ADJP (JJ hard)
          (PP (IN by)
            (NP
              (NP (DT the) (NNP South))
              (CC and)
              (NP (DT the) (NNP North)))))))
    (: ;)
    (S (CC But)
      (NP (DT the) (NNP Ghilzai))
      (VP
        (VP (VBZ knows))
        (, ,)
        (VP (VBP ere)
          (NP (DT the) (JJ melting) (NNS snows)))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (JJ swollen) (NNS banks))
            (VP (VBP break)
              (ADVP (RB forth)))))))
    (, ,)
    (SBAR
      (SBAR
        (WHADVP (WRB When))
        (S
          (S
            (NP (DT the) (NNS red-coats))
            (VP (VB crawl)
              (PP (TO to)
                (NP (DT the) (NN sungar) (NN wall)))))
          (, ,)
          (CC and)
          (S
            (NP (PRP$ his) (NNP Usbeg) (NNS lances))
            (VP (VBP fail)))
          (: :)
          (S
            (NP (PRP Ye))
            (VP (VBP have)
              (VP (VBN heard)
                (NP (DT the) (NN song)))))))
      (: --)
      (PRN
        (FRAG
          (WHADJP (WRB How) (JJ long)))))
    (. ?)))

compound(Rahman-3, _-1)
compound(Rahman-3, Abdhur-2)
nsubj(holds-9, Rahman-3)
det(Chief-7, the-5)
compound(Chief-7, Durani-6)
appos(Rahman-3, Chief-7)
root(ROOT-0, holds-9)
xcomp(holds-9, hard-10)
case(South-13, by-11)
det(South-13, the-12)
nmod:by(hard-10, South-13)
cc(South-13, and-14)
det(North-16, the-15)
nmod:by(hard-10, North-16)
conj:and(South-13, North-16)
cc(knows-21, But-18)
det(Ghilzai-20, the-19)
nsubj(knows-21, Ghilzai-20)
parataxis(holds-9, knows-21)
dep(knows-21, ere-23)
det(snows-26, the-24)
amod(snows-26, melting-25)
dobj(ere-23, snows-26)
advmod(break-32, when-28)
det(banks-31, the-29)
amod(banks-31, swollen-30)
nsubj(break-32, banks-31)
advcl(knows-21, break-32)
advmod(break-32, forth-33)
advmod(crawl-38, When-35)
det(red-coats-37, the-36)
nsubj(crawl-38, red-coats-37)
advcl(holds-9, crawl-38)
case(wall-42, to-39)
det(wall-42, the-40)
compound(wall-42, sungar-41)
nmod:to(crawl-38, wall-42)
cc(crawl-38, and-44)
nmod:poss(lances-47, his-45)
compound(lances-47, Usbeg-46)
nsubj(fail-48, lances-47)
advcl(holds-9, fail-48)
conj:and(crawl-38, fail-48)
nsubj(heard-52, Ye-50)
aux(heard-52, have-51)
advcl(holds-9, heard-52)
conj:and(crawl-38, heard-52)
det(song-54, the-53)
dobj(heard-52, song-54)
advmod(long-57, How-56)
dep(crawl-38, long-57)

(ROOT
  (FRAG
    (WHNP (WRB How) (RB long))
    (. ?)))

advmod(long-2, How-1)
root(ROOT-0, long-2)

(ROOT
  (NP
    (NP (NNS Wolves))
    (PP (IN of)
      (NP (DT the) (NNP Zuka) (NNP Kheyl)))
    (. !)))

root(ROOT-0, Wolves-1)
case(Kheyl-5, of-2)
det(Kheyl-5, the-3)
compound(Kheyl-5, Zuka-4)
nmod:of(Wolves-1, Kheyl-5)

(ROOT
  (S
    (ADVP (RB _))
    (NP (PRP They))
    (VP (VBD stoned)
      (NP (PRP him))
      (PP (IN in)
        (NP
          (NP (DT the) (NN rubbish-field))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (NN dawn))
              (VP (VBD was)
                (PP (IN in)
                  (NP (DT the) (NN sky))))))))
      (, ,)
      (PP (VBG According)
        (PP (TO to)
          (NP (DT the) (VBN written) (NN word))))
      (, ,)
      (S (`` ``)
        (VP (VB See)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBP do) (RB not)
                (VP (VB die))))))))
    (. .) ('' '')))

advmod(stoned-3, _-1)
nsubj(stoned-3, They-2)
root(ROOT-0, stoned-3)
dobj(stoned-3, him-4)
case(rubbish-field-7, in-5)
det(rubbish-field-7, the-6)
nmod:in(stoned-3, rubbish-field-7)
advmod(sky-13, when-8)
nsubj(sky-13, dawn-9)
cop(sky-13, was-10)
case(sky-13, in-11)
det(sky-13, the-12)
acl:relcl(rubbish-field-7, sky-13)
case(word-19, According-15)
mwe(According-15, to-16)
det(word-19, the-17)
amod(word-19, written-18)
nmod:according_to(stoned-3, word-19)
dep(stoned-3, See-22)
mark(die-27, that-23)
nsubj(die-27, he-24)
aux(die-27, do-25)
neg(die-27, not-26)
ccomp(See-22, die-27)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD stoned)
        (NP (PRP him))
        (SBAR (IN till)
          (S
            (NP (DT the) (NNS stones))
            (VP (VBD were)
              (VP (VBN piled)
                (PP (IN above)
                  (NP (PRP him)))
                (PP (IN on)
                  (NP (DT the) (NN plain)))))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT those) (DT the) (JJ labouring) (NNS limbs))
        (VP (VBN displaced)
          (NP (PRP they))))
      (VP (VBD tumbled)
        (PRT (RP back))
        (ADVP (RB again))))
    (. .)))

nsubj(stoned-2, They-1)
root(ROOT-0, stoned-2)
dobj(stoned-2, him-3)
mark(piled-8, till-4)
det(stones-6, the-5)
nsubjpass(piled-8, stones-6)
auxpass(piled-8, were-7)
advcl(stoned-2, piled-8)
case(him-10, above-9)
nmod:above(piled-8, him-10)
case(plain-13, on-11)
det(plain-13, the-12)
nmod:on(piled-8, plain-13)
cc(stoned-2, And-15)
det:predet(limbs-19, those-16)
det(limbs-19, the-17)
amod(limbs-19, labouring-18)
nsubj(tumbled-22, limbs-19)
acl(limbs-19, displaced-20)
dobj(displaced-20, they-21)
conj:and(stoned-2, tumbled-22)
compound:prt(tumbled-22, back-23)
advmod(tumbled-22, again-24)

(ROOT
  (S
    (S
      (NP (PRP One))
      (VP (VBD watched)
        (PP (IN beside)
          (NP
            (NP (DT the) (JJ dreary) (NN mound))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ veiled)
                  (NP (DT the) (JJ battered) (NN thing)))))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP him))
      (PP
        (NP (DT the) (NNP King))
        (IN with)
        (NP (NN laughter)))
      (VP (VBD called)
        (NP
          (NP (DT the) (NNP Herald))
          (PP (IN of)
            (NP (DT the) (NNP King))))))
    (. .)))

nsubj(watched-2, One-1)
root(ROOT-0, watched-2)
case(mound-6, beside-3)
det(mound-6, the-4)
amod(mound-6, dreary-5)
nmod:beside(watched-2, mound-6)
nsubj(veiled-8, mound-6)
ref(mound-6, that-7)
acl:relcl(mound-6, veiled-8)
det(thing-11, the-9)
amod(thing-11, battered-10)
dobj(veiled-8, thing-11)
cc(watched-2, And-13)
nsubj(called-19, him-14)
det(King-16, the-15)
nmod:with(called-19, King-16)
case(King-16, with-17)
dep(King-16, laughter-18)
conj:and(watched-2, called-19)
det(Herald-21, the-20)
dobj(called-19, Herald-21)
case(King-24, of-22)
det(King-24, the-23)
nmod:of(Herald-21, King-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (PP (IN upon)
          (NP
            (NP (DT the) (JJ second) (NN night))
            (, ,)
            (NP
              (NP (DT the) (NN night))
              (PP (IN of)
                (NP (NNP Ramazan))))))))
    (, ,)
    (NP
      (NP (DT The) (NN watcher))
      (VP (VBG leaning)
        (ADJP (JJ earthward))))
    (VP (VBD heard)
      (NP
        (NP (DT the) (NN message))
        (PP (IN of)
          (NP (NNP Yar) (NNP Khan)))))
    (. .)))

nsubj(night-6, It-1)
cop(night-6, was-2)
case(night-6, upon-3)
det(night-6, the-4)
amod(night-6, second-5)
ccomp(heard-17, night-6)
det(night-9, the-8)
appos(night-6, night-9)
case(Ramazan-11, of-10)
nmod:of(night-9, Ramazan-11)
det(watcher-14, The-13)
nsubj(heard-17, watcher-14)
acl(watcher-14, leaning-15)
xcomp(leaning-15, earthward-16)
root(ROOT-0, heard-17)
det(message-19, the-18)
dobj(heard-17, message-19)
case(Khan-22, of-20)
compound(Khan-22, Yar-21)
nmod:of(message-19, Khan-22)

(ROOT
  (S
    (PP (IN From)
      (NP (VBN shattered) (NN breast)))
    (PP (IN through)
      (NP (NN shrivelled)))
    (NP (NNS lips))
    (VP (VBD broke)
      (ADVP (RB forth))
      (NP (DT the) (JJ rattling) (NN breath))
      (PRN (, ,) (`` ``)
        (NP
          (NP (NNP Creature))
          (PP (IN of)
            (NP (NNP God))))
        (, ,))
      (VP (VB deliver)
        (NP (PRP me))
        (PP (IN from)
          (NP
            (NP (NN agony))
            (PP (IN of)
              (NP (NNP Death)))))))
    (. .) ('' '')))

case(breast-3, From-1)
amod(breast-3, shattered-2)
nmod:from(broke-7, breast-3)
case(shrivelled-5, through-4)
nmod:through(broke-7, shrivelled-5)
nsubj(broke-7, lips-6)
root(ROOT-0, broke-7)
advmod(broke-7, forth-8)
det(breath-11, the-9)
amod(breath-11, rattling-10)
dobj(broke-7, breath-11)
dep(broke-7, Creature-14)
case(God-16, of-15)
nmod:of(Creature-14, God-16)
dep(broke-7, deliver-18)
dobj(deliver-18, me-19)
case(agony-21, from-20)
nmod:from(deliver-18, agony-21)
case(Death-23, of-22)
nmod:of(agony-21, Death-23)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBD sought)
          (NP (DT the) (NNP King))
          (PP (IN among)
            (NP (PRP$ his) (NNS girls))))
        (, ,)
        (CC and)
        (VP (VBD risked)
          (NP (PRP$ their) (NNS lives))
          (ADVP (RB thereby)))))
    (: :) (`` ``)
    (S
      (NP
        (NP (NNP Protector))
        (PP (IN of)
          (NP (DT the) (NNP Pitiful))))
      (, ,)
      (VP (VBP give)
        (NP (NNS orders))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBP die))))))
    (. !) ('' '')))

nsubj(sought-2, They-1)
nsubj(risked-10, They-1)
root(ROOT-0, sought-2)
det(King-4, the-3)
dobj(sought-2, King-4)
case(girls-7, among-5)
nmod:poss(girls-7, his-6)
nmod:among(sought-2, girls-7)
cc(sought-2, and-9)
conj:and(sought-2, risked-10)
nmod:poss(lives-12, their-11)
dobj(risked-10, lives-12)
advmod(risked-10, thereby-13)
nsubj(give-21, Protector-16)
case(Pitiful-19, of-17)
det(Pitiful-19, the-18)
nmod:of(Protector-16, Pitiful-19)
parataxis(sought-2, give-21)
dobj(give-21, orders-22)
mark(die-25, that-23)
nsubj(die-25, he-24)
ccomp(give-21, die-25)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Bid) (PRP him))
      (VP (VBP endure)
        (PP (IN until)
          (NP (DT the) (NN day)))))
    (, ,) ('' '')
    (NP (DT a) (NN lagging) (NN answer))
    (VP (VBD came) (: ;) (`` ``)
      (S
        (S
          (NP (DT The) (NN night))
          (VP (VBZ is)
            (ADJP (JJ short))))
        (, ,)
        (CC and)
        (S
          (NP (PRP he))
          (VP (MD can)
            (VP
              (VP (VB pray))
              (CC and)
              (VP (VB learn)
                (S
                  (VP (TO to)
                    (VP (VB bless)
                      (NP (PRP$ my) (NN name)))))))))))
    (. .) ('' '')))

nsubj(endure-4, Bid-2)
dep(Bid-2, him-3)
ccomp(came-13, endure-4)
case(day-7, until-5)
det(day-7, the-6)
nmod:until(endure-4, day-7)
det(answer-12, a-10)
compound(answer-12, lagging-11)
nsubj(came-13, answer-12)
root(ROOT-0, came-13)
det(night-17, The-16)
nsubj(short-19, night-17)
cop(short-19, is-18)
xcomp(came-13, short-19)
cc(short-19, and-21)
nsubj(pray-24, he-22)
nsubj(learn-26, he-22)
nsubj:xsubj(bless-28, he-22)
aux(pray-24, can-23)
xcomp(came-13, pray-24)
conj:and(short-19, pray-24)
cc(pray-24, and-25)
conj:and(short-19, learn-26)
conj:and(pray-24, learn-26)
mark(bless-28, to-27)
xcomp(learn-26, bless-28)
nmod:poss(name-30, my-29)
dobj(bless-28, name-30)

(ROOT
  (S
    (S
      (PP (IN Before)
        (NP
          (NP (DT the) (NN dawn))
          (NP (CD three) (NNS times))))
      (NP (PRP he))
      (VP
        (VP (VBD spoke))
        (, ,)
        (CC and)
        (VP
          (PP (IN on)
            (NP (DT the) (NN day)))
          (ADVP (RB once) (RBR more)))
        (: :) (`` ``)
        (NP
          (NP (NNP Creature))
          (PP (IN of)
            (NP (NNP God))))))
    (, ,)
    (VP
      (VP (VB deliver)
        (NP (PRP me)))
      (, ,)
      (CC and)
      (VP (VB bless)
        (NP (DT the) (NNP King) (NN therefor))))
    (. !) ('' '')))

case(dawn-3, Before-1)
det(dawn-3, the-2)
nmod:before(spoke-7, dawn-3)
nummod(times-5, three-4)
dep(dawn-3, times-5)
nsubj(spoke-7, he-6)
ccomp(deliver-21, spoke-7)
cc(spoke-7, and-9)
case(day-12, on-10)
det(day-12, the-11)
conj:and(spoke-7, day-12)
ccomp(deliver-21, day-12)
advmod(more-14, once-13)
advmod(day-12, more-14)
conj:and(spoke-7, Creature-17)
ccomp(deliver-21, Creature-17)
case(God-19, of-18)
nmod:of(Creature-17, God-19)
root(ROOT-0, deliver-21)
dobj(deliver-21, me-22)
cc(deliver-21, and-24)
conj:and(deliver-21, bless-25)
det(therefor-28, the-26)
compound(therefor-28, King-27)
dobj(bless-25, therefor-28)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD shot)
        (NP (PRP him))
        (PP (IN at)
          (NP (DT the) (NN morning) (NN prayer)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB ease)
              (NP (PRP him))
              (PP (IN of)
                (NP (PRP$ his) (NN pain))))))))
    (, ,)
    (CC And)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBD heard)
            (NP (DT the) (JJ matchlocks) (NN clink)))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ blessed)
        (NP (DT the) (NNP King))
        (ADVP (RB again))))
    (. .)))

nsubj(shot-2, They-1)
root(ROOT-0, shot-2)
dobj(shot-2, him-3)
case(prayer-7, at-4)
det(prayer-7, the-5)
compound(prayer-7, morning-6)
nmod:at(shot-2, prayer-7)
mark(ease-10, to-9)
advcl(shot-2, ease-10)
dobj(ease-10, him-11)
case(pain-14, of-12)
nmod:poss(pain-14, his-13)
nmod:of(ease-10, pain-14)
cc(shot-2, And-16)
advmod(heard-19, when-17)
nsubj(heard-19, he-18)
advcl(blessed-25, heard-19)
det(clink-22, the-20)
amod(clink-22, matchlocks-21)
dobj(heard-19, clink-22)
nsubj(blessed-25, he-24)
conj:and(shot-2, blessed-25)
det(King-27, the-26)
dobj(blessed-25, King-27)
advmod(blessed-25, again-28)

(ROOT
  (S
    (NP
      (NP (JJ Which) (NN thing))
      (NP (DT the) (NNS singers)))
    (VP (VBD made)
      (NP (DT a) (NN song))
      (PP (IN for)
        (NP (PDT all) (DT the) (NN world)))
      (S
        (VP (TO to)
          (VP (VB sing))))
      (, ,)
      (SBAR
        (ADVP (RB So))
        (IN that)
        (S
          (NP (DT the) (NNP Outer) (NNS Seas))
          (VP (MD may)
            (VP (VB know)
              (NP
                (NP (DT the) (NN mercy))
                (PP (IN of)
                  (NP (DT the) (NNP King)))))))))
    (. .)))

amod(thing-2, Which-1)
nsubj(made-5, thing-2)
det(singers-4, the-3)
dep(thing-2, singers-4)
root(ROOT-0, made-5)
det(song-7, a-6)
dobj(made-5, song-7)
case(world-11, for-8)
det:predet(world-11, all-9)
det(world-11, the-10)
nmod:for(made-5, world-11)
mark(sing-13, to-12)
advcl(made-5, sing-13)
advmod(know-21, So-15)
mark(know-21, that-16)
det(Seas-19, the-17)
compound(Seas-19, Outer-18)
nsubj(know-21, Seas-19)
aux(know-21, may-20)
dep(made-5, know-21)
det(mercy-23, the-22)
dobj(know-21, mercy-23)
case(King-26, of-24)
det(King-26, the-25)
nmod:of(mercy-23, King-26)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (NNP _) (NNP Abdhur) (NNP Rahman))
          (, ,)
          (NP (DT the) (NNP Durani) (NNP Chief))
          (, ,))
        (PP (IN of)
          (NP (PRP him))))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN story))
          (VP (VBN told)))))
    (, ,)
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN opened)
          (NP (PRP$ his) (NN mouth))
          (PP (TO to)
            (NP
              (NP (DT the) (NNP North))
              (CC and)
              (NP (DT the) (NNP South)))))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (VP (VBD stuffed)
          (NP (PRP$ his) (NN mouth))
          (PP (IN with)
            (NP (NN gold))))))
    (. .)))

compound(Rahman-3, _-1)
compound(Rahman-3, Abdhur-2)
nsubj(story-13, Rahman-3)
det(Chief-7, the-5)
compound(Chief-7, Durani-6)
appos(Rahman-3, Chief-7)
case(him-10, of-9)
nmod:of(Rahman-3, him-10)
cop(story-13, is-11)
det(story-13, the-12)
root(ROOT-0, story-13)
acl(story-13, told-14)
nsubj(opened-18, He-16)
aux(opened-18, has-17)
parataxis(story-13, opened-18)
nmod:poss(mouth-20, his-19)
dobj(opened-18, mouth-20)
case(North-23, to-21)
det(North-23, the-22)
nmod:to(opened-18, North-23)
cc(North-23, and-24)
det(South-26, the-25)
nmod:to(opened-18, South-26)
conj:and(North-23, South-26)
nsubj(stuffed-30, they-28)
aux(stuffed-30, have-29)
parataxis(story-13, stuffed-30)
nmod:poss(mouth-32, his-31)
dobj(stuffed-30, mouth-32)
case(gold-34, with-33)
nmod:with(stuffed-30, gold-34)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (VBP know)
      (S
        (NP
          (NP (DT the) (NN truth))
          (PP (IN of)
            (NP
              (NP (PRP$ his) (NN tender))
              (ADJP (JJ ruth) (: --)
                (CC and)
                (JJ sweet))
              (SBAR
                (S
                  (NP (PRP$ his) (NNS favours))
                  (VP (VBP are)
                    (PRN (: :)
                      (S
                        (NP (PRP Ye))
                        (VP (VBP have)
                          (VP (VBN heard)
                            (NP (DT the) (NN song)))))
                      (: --))))))))
        (ADJP (WRB How) (JJ long))))
    (. ?)))

nsubj(know-2, Ye-1)
root(ROOT-0, know-2)
det(truth-4, the-3)
nsubj(long-23, truth-4)
case(tender-7, of-5)
nmod:poss(tender-7, his-6)
nmod:of(truth-4, tender-7)
amod(tender-7, ruth-8)
cc(ruth-8, and-10)
amod(tender-7, sweet-11)
conj:and(ruth-8, sweet-11)
nmod:poss(favours-13, his-12)
nsubj(are-14, favours-13)
acl:relcl(tender-7, are-14)
nsubj(heard-18, Ye-16)
aux(heard-18, have-17)
parataxis(are-14, heard-18)
det(song-20, the-19)
dobj(heard-18, song-20)
advmod(long-23, How-22)
xcomp(know-2, long-23)

(ROOT
  (FRAG
    (WHNP (WRB How) (RB long))
    (. ?)))

advmod(long-2, How-1)
root(ROOT-0, long-2)

(ROOT
  (FRAG
    (PP (IN from)
      (NP
        (NP (NNP Balkh))
        (PP (TO to)
          (NP (NNP Kandahar)))))
    (. .)))

case(Balkh-2, from-1)
root(ROOT-0, Balkh-2)
case(Kandahar-4, to-3)
nmod:to(Balkh-2, Kandahar-4)

(ROOT
  (S
    (S
      (VP (VBG _)
        (NP
          (NP (DT THE) (NN BALLAD))
          (PP (IN OF)
            (NP
              (NP (DT THE) (NNP KING) (POS 'S))
              (NN JEST)))
          (SBAR
            (WHADVP (WRB When))
            (S
              (NP (NN spring-time))
              (VP (VBZ flushes)
                (NP (DT the) (NN desert) (NN grass))))))))
    (, ,)
    (NP (PRP$ Our) (NNS kafilas))
    (VP (VBP wind)
      (PP (IN through)
        (NP (DT the) (NNP Khyber) (NN Pass))))
    (. .)))

advcl(wind-18, _-1)
det(BALLAD-3, THE-2)
dobj(_-1, BALLAD-3)
case(JEST-8, OF-4)
det(KING-6, THE-5)
nmod:poss(JEST-8, KING-6)
case(KING-6, 'S-7)
nmod:of(BALLAD-3, JEST-8)
advmod(flushes-11, When-9)
nsubj(flushes-11, spring-time-10)
acl:relcl(BALLAD-3, flushes-11)
det(grass-14, the-12)
compound(grass-14, desert-13)
dobj(flushes-11, grass-14)
nmod:poss(kafilas-17, Our-16)
nsubj(wind-18, kafilas-17)
root(ROOT-0, wind-18)
case(Pass-22, through-19)
det(Pass-22, the-20)
compound(Pass-22, Khyber-21)
nmod:through(wind-18, Pass-22)

(ROOT
  (S
    (NP (NNP Lean))
    (VP (VBP are)
      (NP (DT the)
        (ADJP (JJ camels)
          (CC but)
          (JJ fat))
        (NP (DT the) (NNS frails))))
    (PRN (, ,)
      (S
        (NP (NNP Light))
        (VP (VBP are)
          (NP (DT the)
            (ADJP (JJ purses)
              (CC but)
              (JJ heavy))
            (NP (DT the) (NNS bales)))))
      (, ,))
    (SBAR (IN As)
      (S
        (NP
          (NP (DT the) (JJ snowbound) (NN trade))
          (PP (IN of)
            (NP (DT the) (NNP North))))
        (VP (VBZ comes)
          (PRT (RP down))
          (PP (TO To)
            (NP
              (NP (DT the) (NN market-square))
              (PP (IN of)
                (NP (NNP Peshawur) (NN town))))))))
    (. .)))

nsubj(frails-8, Lean-1)
cop(frails-8, are-2)
det(frails-8, the-3)
amod(frails-8, camels-4)
cc(camels-4, but-5)
conj:but(camels-4, fat-6)
amod(frails-8, fat-6)
det(frails-8, the-7)
root(ROOT-0, frails-8)
nsubj(bales-17, Light-10)
cop(bales-17, are-11)
det(bales-17, the-12)
amod(bales-17, purses-13)
cc(purses-13, but-14)
conj:but(purses-13, heavy-15)
amod(bales-17, heavy-15)
det(bales-17, the-16)
parataxis(frails-8, bales-17)
mark(comes-26, As-19)
det(trade-22, the-20)
amod(trade-22, snowbound-21)
nsubj(comes-26, trade-22)
case(North-25, of-23)
det(North-25, the-24)
nmod:of(trade-22, North-25)
dep(frails-8, comes-26)
compound:prt(comes-26, down-27)
case(market-square-30, To-28)
det(market-square-30, the-29)
nmod:to(comes-26, market-square-30)
case(town-33, of-31)
compound(town-33, Peshawur-32)
nmod:of(market-square-30, town-33)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (NN turquoise) (NN twilight) (, ,) (NN crisp)
        (CC and)
        (NN chill)))
    (, ,)
    (NP (DT A) (NN kafila))
    (VP (VBD camped)
      (PP (IN at)
        (NP
          (NP (DT the) (NN foot))
          (PP (IN of)
            (NP (DT the) (NN hill))))))
    (. .)))

case(twilight-4, In-1)
det(twilight-4, a-2)
compound(twilight-4, turquoise-3)
nmod:in(camped-12, twilight-4)
conj:and(twilight-4, crisp-6)
nmod:in(camped-12, crisp-6)
cc(twilight-4, and-7)
conj:and(twilight-4, chill-8)
nmod:in(camped-12, chill-8)
det(kafila-11, A-10)
nsubj(camped-12, kafila-11)
root(ROOT-0, camped-12)
case(foot-15, at-13)
det(foot-15, the-14)
nmod:at(camped-12, foot-15)
case(hill-18, of-16)
det(hill-18, the-17)
nmod:of(foot-15, hill-18)

(ROOT
  (S (RB Then)
    (S
      (NP
        (NP (JJ blue) (NN smoke-haze))
        (PP (IN of)
          (NP (DT the) (NN cooking))))
      (VP (VBD rose)))
    (, ,)
    (CC And)
    (S
      (NP (NN tent-peg))
      (VP (VBD answered)
        (S
          (VP (TO to)
            (VP (VB hammer-nose))))))
    (: ;)
    (S (CC And)
      (NP
        (NP (DT the) (JJ picketed) (NNS ponies))
        (, ,)
        (ADJP (JJ shag)
          (CC and)
          (JJ wild))
        (, ,))
      (VP (VBD Strained)
        (PP (IN at)
          (NP (PRP$ their) (NNS ropes)))
        (SBAR (IN as)
          (S
            (NP (DT the) (NN feed))
            (VP (VBD was)
              (VP (VBN piled)))))))
    (: ;)
    (S (CC And)
      (NP
        (NP (DT the) (VBG bubbling) (NNS camels))
        (PP (IN beside)
          (NP (DT the) (NN load))))
      (VP (VBD Sprawled)
        (PP (IN for)
          (NP
            (NP (DT a) (VBG furlong) (NN adown))
            (NP (DT the) (NN road))))))
    (: ;)
    (S (CC And)
      (NP
        (NP (DT the) (JJ Persian) (NNS pussy-cats))
        (, ,)
        (VP (VBN brought)
          (PP (IN for)
            (NP (NN sale))))
        (, ,))
      (VP (VBD Spat)
        (PP (IN at)
          (NP (DT the) (NNS dogs)))
        (PP (IN from)
          (NP (DT the) (NN camel-bale)))))
    (: ;)
    (S (CC And)
      (NP (DT the) (NN tribesmen))
      (VP (VBD bellowed)
        (S
          (VP (TO to)
            (VP (VB hasten)
              (NP (DT the) (NN food)))))))
    (: ;)
    (S (CC And)
      (NP (DT the) (NNS camp-fires))
      (VP (VBD twinkled)
        (PP (IN by)
          (NP (NNP Fort) (NNP Jumrood)))))
    (: ;)
    (CC And)
    (S
      (NP (EX there))
      (VP (VBD fled)
        (PP (IN on)
          (NP
            (NP
              (NP (DT the) (NNS wings))
              (PP (IN of)
                (NP (DT the) (NN gathering) (NN dusk))))
            (NP
              (NP (DT A) (NN savour))
              (PP (IN of)
                (NP (NNS camels)
                  (CC and)
                  (NNS carpets))))
            (CC and)
            (NP
              (NP (NN musk))
              (, ,)
              (NP
                (NP (DT A) (NN murmur))
                (PP (IN of)
                  (NP
                    (NP (NNS voices))
                    (, ,)
                    (NP
                      (NP (DT a) (NN reek))
                      (PP (IN of)
                        (NP (NN smoke))))))))))
        (, ,)
        (S
          (VP (TO To)
            (VP (VB tell)
              (NP (PRP us))
              (NP
                (NP (DT the) (NN trade))
                (PP (IN of)
                  (NP (DT the) (NNP Khyber) (NNP woke)))))))))
    (. .)))

advmod(rose-7, Then-1)
amod(smoke-haze-3, blue-2)
nsubj(rose-7, smoke-haze-3)
nsubj(fled-85, smoke-haze-3)
nsubj:xsubj(tell-113, smoke-haze-3)
case(cooking-6, of-4)
det(cooking-6, the-5)
nmod:of(smoke-haze-3, cooking-6)
root(ROOT-0, rose-7)
cc(rose-7, And-9)
nsubj(answered-11, tent-peg-10)
nsubj:xsubj(hammer-nose-13, tent-peg-10)
conj:and(rose-7, answered-11)
mark(hammer-nose-13, to-12)
xcomp(answered-11, hammer-nose-13)
cc(Strained-24, And-15)
det(ponies-18, the-16)
amod(ponies-18, picketed-17)
nsubj(Strained-24, ponies-18)
amod(ponies-18, shag-20)
cc(shag-20, and-21)
amod(ponies-18, wild-22)
conj:and(shag-20, wild-22)
conj:and(rose-7, Strained-24)
case(ropes-27, at-25)
nmod:poss(ropes-27, their-26)
nmod:at(Strained-24, ropes-27)
mark(piled-32, as-28)
det(feed-30, the-29)
nsubjpass(piled-32, feed-30)
auxpass(piled-32, was-31)
advcl(Strained-24, piled-32)
cc(Sprawled-41, And-34)
det(camels-37, the-35)
amod(camels-37, bubbling-36)
nsubj(Sprawled-41, camels-37)
case(load-40, beside-38)
det(load-40, the-39)
nmod:beside(camels-37, load-40)
conj:and(rose-7, Sprawled-41)
case(adown-45, for-42)
det(adown-45, a-43)
amod(adown-45, furlong-44)
nmod:for(Sprawled-41, adown-45)
det(road-47, the-46)
dep(adown-45, road-47)
cc(Spat-58, And-49)
det(pussy-cats-52, the-50)
amod(pussy-cats-52, Persian-51)
nsubj(Spat-58, pussy-cats-52)
acl(pussy-cats-52, brought-54)
case(sale-56, for-55)
nmod:for(brought-54, sale-56)
conj:and(rose-7, Spat-58)
case(dogs-61, at-59)
det(dogs-61, the-60)
nmod:at(Spat-58, dogs-61)
case(camel-bale-64, from-62)
det(camel-bale-64, the-63)
nmod:from(Spat-58, camel-bale-64)
cc(bellowed-69, And-66)
det(tribesmen-68, the-67)
nsubj(bellowed-69, tribesmen-68)
nsubj:xsubj(hasten-71, tribesmen-68)
conj:and(rose-7, bellowed-69)
mark(hasten-71, to-70)
xcomp(bellowed-69, hasten-71)
det(food-73, the-72)
dobj(hasten-71, food-73)
cc(twinkled-78, And-75)
det(camp-fires-77, the-76)
nsubj(twinkled-78, camp-fires-77)
conj:and(rose-7, twinkled-78)
case(Jumrood-81, by-79)
compound(Jumrood-81, Fort-80)
nmod:by(twinkled-78, Jumrood-81)
cc(rose-7, And-83)
expl(fled-85, there-84)
conj:and(rose-7, fled-85)
case(wings-88, on-86)
det(wings-88, the-87)
nmod:on(fled-85, wings-88)
case(dusk-92, of-89)
det(dusk-92, the-90)
compound(dusk-92, gathering-91)
nmod:of(wings-88, dusk-92)
det(savour-94, A-93)
dep(wings-88, savour-94)
case(camels-96, of-95)
nmod:of(savour-94, camels-96)
cc(camels-96, and-97)
nmod:of(savour-94, carpets-98)
conj:and(camels-96, carpets-98)
cc(wings-88, and-99)
nmod:on(fled-85, musk-100)
conj:and(wings-88, musk-100)
det(murmur-103, A-102)
appos(musk-100, murmur-103)
case(voices-105, of-104)
nmod:of(murmur-103, voices-105)
det(reek-108, a-107)
appos(voices-105, reek-108)
case(smoke-110, of-109)
nmod:of(reek-108, smoke-110)
mark(tell-113, To-112)
xcomp(fled-85, tell-113)
iobj(tell-113, us-114)
det(trade-116, the-115)
dobj(tell-113, trade-116)
case(woke-120, of-117)
det(woke-120, the-118)
compound(woke-120, Khyber-119)
nmod:of(trade-116, woke-120)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN lid))
        (PP (IN of)
          (NP (DT the) (NN flesh-pot))))
      (VP (VBD chattered)
        (ADJP (JJ high))))
    (, ,)
    (S
      (NP (DT The) (NNS knives))
      (VP (VBD were)
        (VP (VBN whetted))))
    (CC and)
    (S
      (LST (: --))
      (NP (RB then))
      (VP (VBD came)
        (NP (PRP I))
        (PP (TO To)
          (NP
            (NP (NNP Mahbub) (NNP Ali))
            (SBAR
              (S
                (NP (DT the) (NN muleteer))
                (, ,)
                (S
                  (VP
                    (VP (VBG Patching)
                      (NP (PRP$ his) (NNS bridles)))
                    (CC and)
                    (VP (VBG counting)
                      (NP (PRP$ his) (NN gear)))))
                (, ,)
                (VP (VBN Crammed)
                  (PP (IN with)
                    (NP
                      (NP (DT the) (NN gossip))
                      (PP (IN of)
                        (NP (PDT half) (DT a) (NN year))))))))))))
    (. .)))

det(lid-2, The-1)
nsubj(chattered-6, lid-2)
case(flesh-pot-5, of-3)
det(flesh-pot-5, the-4)
nmod:of(lid-2, flesh-pot-5)
root(ROOT-0, chattered-6)
xcomp(chattered-6, high-7)
det(knives-10, The-9)
nsubjpass(whetted-12, knives-10)
auxpass(whetted-12, were-11)
conj:and(chattered-6, whetted-12)
cc(chattered-6, and-13)
nsubj(came-16, then-15)
conj:and(chattered-6, came-16)
dobj(came-16, I-17)
case(Ali-20, To-18)
compound(Ali-20, Mahbub-19)
nmod:to(came-16, Ali-20)
det(muleteer-22, the-21)
nsubj(Crammed-32, muleteer-22)
advcl(Crammed-32, Patching-24)
nmod:poss(bridles-26, his-25)
dobj(Patching-24, bridles-26)
cc(Patching-24, and-27)
conj:and(Patching-24, counting-28)
advcl(Crammed-32, counting-28)
nmod:poss(gear-30, his-29)
dobj(counting-28, gear-30)
acl:relcl(Ali-20, Crammed-32)
case(gossip-35, with-33)
det(gossip-35, the-34)
nmod:with(Crammed-32, gossip-35)
case(year-39, of-36)
det:predet(year-39, half-37)
det(year-39, a-38)
nmod:of(gossip-35, year-39)

(ROOT
  (S (CC But)
    (NP (NNP Mahbub) (NNP Ali))
    (PRN
      (S
        (NP (DT the) (NN kindly))
        (VP (VBD said)))
      (, ,))
    (`` ``)
    (NP (NNP Better))
    (VP (VBZ is)
      (NP
        (NP (NN speech))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN belly))
            (VP (VBZ is)
              (VP (VBN fed)))))))
    (. .) ('' '')))

cc(speech-11, But-1)
compound(Ali-3, Mahbub-2)
nsubj(speech-11, Ali-3)
det(kindly-5, the-4)
nsubj(said-6, kindly-5)
parataxis(speech-11, said-6)
nsubj(speech-11, Better-9)
cop(speech-11, is-10)
root(ROOT-0, speech-11)
advmod(fed-16, when-12)
det(belly-14, the-13)
nsubjpass(fed-16, belly-14)
auxpass(fed-16, is-15)
acl:relcl(speech-11, fed-16)

(ROOT
  (S (IN So)
    (S
      (NP (PRP we))
      (VP (VBD plunged)
        (NP (DT the) (NN hand))
        (PP (TO to)
          (NP
            (NP (DT the) (JJ mid-wrist)
              (ADJP (JJ deep)
                (PP (IN In)
                  (NP (DT a) (NNP cinnamon))))
              (NN stew))
            (PP (IN of)
              (NP (DT the) (JJ fat-tailed) (NN sheep)))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (PRP he))
        (SBAR
          (WHNP (WP who))
          (S
            (ADVP (RB never))
            (VP (VBD hath)))))
      (VP (VBD tasted)
        (NP (DT the) (NN food))))
    (, ,)
    (PP (IN By)
      (S
        (VP (VBG Allah))))
    (. !)))

dep(plunged-3, So-1)
nsubj(plunged-3, we-2)
root(ROOT-0, plunged-3)
det(hand-5, the-4)
dobj(plunged-3, hand-5)
case(stew-13, to-6)
det(stew-13, the-7)
amod(stew-13, mid-wrist-8)
amod(stew-13, deep-9)
case(cinnamon-12, In-10)
det(cinnamon-12, a-11)
nmod:in(deep-9, cinnamon-12)
nmod:to(plunged-3, stew-13)
case(sheep-17, of-14)
det(sheep-17, the-15)
amod(sheep-17, fat-tailed-16)
nmod:of(stew-13, sheep-17)
cc(plunged-3, And-19)
nsubj(hath-23, he-20)
nsubj(tasted-24, he-20)
ref(he-20, who-21)
neg(hath-23, never-22)
acl:relcl(he-20, hath-23)
conj:and(plunged-3, tasted-24)
det(food-26, the-25)
dobj(tasted-24, food-26)
mark(Allah-29, By-28)
advcl(plunged-3, Allah-29)

(ROOT
  (S
    (NP (PRP he))
    (VP (VBP knoweth)
      (ADJP (RB not) (JJ bad)
        (PP (IN from)
          (ADJP (JJ good)))))
    (. .)))

nsubj(knoweth-2, he-1)
root(ROOT-0, knoweth-2)
neg(bad-4, not-3)
xcomp(knoweth-2, bad-4)
case(good-6, from-5)
advcl(bad-4, good-6)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD cleansed)
        (NP
          (NP (PRP$ our) (NNS beards))
          (PP (IN of)
            (NP (DT the) (NN mutton-grease))))))
    (PRN (, ,)
      (S
        (NP (PRP We))
        (VP
          (VP (VBD lay)
            (PP (IN on)
              (NP (DT the) (NNS mats))))
          (CC and)
          (VP (VBD were)
            (VP (VBN filled)
              (PP (IN with)
                (NP (NN peace)))))))
      (, ,))
    (CC And)
    (S
      (S
        (NP (DT the) (NN talk))
        (VP (VBD slid)
          (ADJP (JJ north))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN talk))
        (VP (VBD slid)
          (ADVP (RB south))
          (, ,)
          (PP (IN With)
            (NP (DT the) (JJ sliding) (NNS puffs)))
          (PP (IN from)
            (NP (DT the) (NN hookah-mouth))))))
    (. .)))

nsubj(cleansed-2, We-1)
root(ROOT-0, cleansed-2)
nmod:poss(beards-4, our-3)
dobj(cleansed-2, beards-4)
case(mutton-grease-7, of-5)
det(mutton-grease-7, the-6)
nmod:of(beards-4, mutton-grease-7)
nsubj(lay-10, We-9)
nsubjpass(filled-16, We-9)
dep(cleansed-2, lay-10)
case(mats-13, on-11)
det(mats-13, the-12)
nmod:on(lay-10, mats-13)
cc(lay-10, and-14)
auxpass(filled-16, were-15)
dep(cleansed-2, filled-16)
conj:and(lay-10, filled-16)
case(peace-18, with-17)
nmod:with(filled-16, peace-18)
cc(cleansed-2, And-20)
det(talk-22, the-21)
nsubj(slid-23, talk-22)
conj:and(cleansed-2, slid-23)
xcomp(slid-23, north-24)
cc(slid-23, and-26)
det(talk-28, the-27)
nsubj(slid-29, talk-28)
conj:and(cleansed-2, slid-29)
conj:and(slid-23, slid-29)
advmod(slid-29, south-30)
case(puffs-35, With-32)
det(puffs-35, the-33)
amod(puffs-35, sliding-34)
nmod:with(slid-29, puffs-35)
case(hookah-mouth-38, from-36)
det(hookah-mouth-38, the-37)
nmod:from(slid-29, hookah-mouth-38)

(ROOT
  (NP
    (NP
      (NP (CD Four) (NNS things))
      (ADJP
        (ADJP (JJR greater))
        (SBAR (IN than)
          (S
            (NP (DT all) (NNS things))
            (VP (VBP are))
            (, ,)))))
    (: --)
    (NP
      (NP (NNS Women)
        (CC and)
        (NNS Horses))
      (CC and)
      (NP (NNP Power)
        (CC and)
        (NNP War)))
    (. .)))

nummod(things-2, Four-1)
root(ROOT-0, things-2)
amod(things-2, greater-3)
mark(are-7, than-4)
det(things-6, all-5)
nsubj(are-7, things-6)
ccomp(greater-3, are-7)
dep(things-2, Women-10)
cc(Women-10, and-11)
dep(things-2, Horses-12)
conj:and(Women-10, Horses-12)
cc(Women-10, and-13)
dep(things-2, Power-14)
conj:and(Women-10, Power-14)
cc(Power-14, and-15)
conj:and(Women-10, War-16)
conj:and(Power-14, War-16)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP spake)
        (PP (IN of)
          (NP
            (NP
              (NP (PRP them))
              (NP (DT all)))
            (, ,)
            (CC but)
            (NP
              (NP (DT the) (JJ last))
              (NP (DT the) (JJS most)))))))
    (, ,) (IN For)
    (S
      (S
        (NP (PRP I))
        (VP (VBD sought)
          (NP
            (NP (DT a) (NN word))
            (PP (IN of)
              (NP (DT a) (JJ Russian) (NN post))))
          (, ,)
          (PP (IN Of)
            (NP
              (NP (DT a) (JJ shifty) (NN promise))
              (, ,)
              (NP (DT an) (JJ unsheathed) (NN sword))))))
      (CC And)
      (S
        (NP
          (NP (DT a) (JJ gray-coat) (NN guard))
          (PP (IN on)
            (NP (DT the) (NNP Helmund))))
        (VP (VBD ford))))
    (. .)))

nsubj(spake-2, We-1)
root(ROOT-0, spake-2)
case(them-4, of-3)
nmod:of(spake-2, them-4)
det(them-4, all-5)
cc(them-4, but-7)
det(last-9, the-8)
nmod:of(spake-2, last-9)
conj:but(them-4, last-9)
det(most-11, the-10)
dep(last-9, most-11)
dep(spake-2, For-13)
nsubj(sought-15, I-14)
parataxis(spake-2, sought-15)
det(word-17, a-16)
dobj(sought-15, word-17)
case(post-21, of-18)
det(post-21, a-19)
amod(post-21, Russian-20)
nmod:of(word-17, post-21)
case(promise-26, Of-23)
det(promise-26, a-24)
amod(promise-26, shifty-25)
nmod:of(sought-15, promise-26)
det(sword-30, an-28)
amod(sword-30, unsheathed-29)
appos(promise-26, sword-30)
cc(sought-15, And-31)
det(guard-34, a-32)
amod(guard-34, gray-coat-33)
nsubj(ford-38, guard-34)
case(Helmund-37, on-35)
det(Helmund-37, the-36)
nmod:on(guard-34, Helmund-37)
parataxis(spake-2, ford-38)
conj:and(sought-15, ford-38)

(ROOT
  (S (RB Then)
    (NP (NNP Mahbub) (NNP Ali))
    (VP (VBD lowered)
      (NP (PRP$ his) (NNS eyes))
      (PP (IN In)
        (NP
          (NP (DT the) (NN fashion))
          (PP (IN of)
            (NP (CD one)))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ is)
                (VP (VBG weaving)
                  (NP (NNS lies)))))))))
    (. .)))

advmod(lowered-4, Then-1)
compound(Ali-3, Mahbub-2)
nsubj(lowered-4, Ali-3)
root(ROOT-0, lowered-4)
nmod:poss(eyes-6, his-5)
dobj(lowered-4, eyes-6)
case(fashion-9, In-7)
det(fashion-9, the-8)
nmod:in(lowered-4, fashion-9)
nsubj(weaving-14, fashion-9)
case(one-11, of-10)
nmod:of(fashion-9, one-11)
ref(fashion-9, who-12)
aux(weaving-14, is-13)
acl:relcl(fashion-9, weaving-14)
dobj(weaving-14, lies-15)

(ROOT
  (SQ
    (VP (VB Quoth)
      (NP (PRP he))
      (: :) (`` ``)
      (PP (IN Of)
        (NP
          (NP (DT the) (NNPS Russians))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (MD can)
                (VP (VB say))))))))
    (. ?)))

root(ROOT-0, Quoth-1)
dobj(Quoth-1, he-2)
case(Russians-7, Of-5)
det(Russians-7, the-6)
nmod:of(Quoth-1, Russians-7)
nsubj(say-10, Russians-7)
ref(Russians-7, who-8)
aux(say-10, can-9)
acl:relcl(Russians-7, say-10)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN night))
        (VP (VBZ is)
          (VP (VBG gathering)
            (NP (DT all))))))
    (VP (VBZ is)
      (ADJP (JJ gray)))
    (. .)))

advmod(gathering-5, When-1)
det(night-3, the-2)
nsubj(gathering-5, night-3)
aux(gathering-5, is-4)
advcl(gray-8, gathering-5)
dobj(gathering-5, all-6)
cop(gray-8, is-7)
root(ROOT-0, gray-8)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP look)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN gloom))
            (PP (IN of)
              (NP (DT the) (NN night))))
          (VP (MD shall)
            (VP (VB die)
              (PP (IN In)
                (NP
                  (NP (DT the) (NN morning) (NN flush))
                  (PP (IN of)
                    (NP (DT a) (JJ blood-red) (NN sky))))))))))
    (. .)))

cc(look-3, But-1)
nsubj(look-3, we-2)
root(ROOT-0, look-3)
mark(die-11, that-4)
det(gloom-6, the-5)
nsubj(die-11, gloom-6)
case(night-9, of-7)
det(night-9, the-8)
nmod:of(gloom-6, night-9)
aux(die-11, shall-10)
ccomp(look-3, die-11)
case(flush-15, In-12)
det(flush-15, the-13)
compound(flush-15, morning-14)
nmod:in(die-11, flush-15)
case(sky-19, of-16)
det(sky-19, a-17)
amod(sky-19, blood-red-18)
nmod:of(flush-15, sky-19)

(ROOT
  (S
    (NP
      (NP (NNP Friend))
      (PP (IN of)
        (NP (PRP$ my) (NN heart))))
    (, ,)
    (VP (VBZ is)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBP meet)
            (PRN (CC or)
              (ADJP (JJ wise)
                (S
                  (VP (TO To)
                    (VP (VB warn)
                      (NP
                        (NP (DT a) (NNP King))
                        (PP (IN of)
                          (NP (PRP$ his) (NNS enemies)))))))))))))
    (. ?)))

nsubj(is-6, Friend-1)
case(heart-4, of-2)
nmod:poss(heart-4, my-3)
nmod:of(Friend-1, heart-4)
root(ROOT-0, is-6)
nsubj(meet-8, it-7)
ccomp(is-6, meet-8)
cc(wise-10, or-9)
dep(meet-8, wise-10)
mark(warn-12, To-11)
xcomp(wise-10, warn-12)
det(King-14, a-13)
dobj(warn-12, King-14)
case(enemies-17, of-15)
nmod:poss(enemies-17, his-16)
nmod:of(King-14, enemies-17)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNP Heaven)
              (CC or)
              (NNP Hell))
            (VP (MD may)
              (VP (VB bring)))))))
    (, ,)
    (CC But)
    (S
      (NP (DT no) (NN man))
      (VP (VBP knoweth)
        (NP
          (NP (DT the) (NN mind))
          (PP (IN of)
            (NP (DT the) (NNP King))))))
    (. .)))

nsubj(know-2, We-1)
root(ROOT-0, know-2)
dobj(bring-8, what-3)
nsubj(bring-8, Heaven-4)
cc(Heaven-4, or-5)
conj:or(Heaven-4, Hell-6)
nsubj(bring-8, Hell-6)
aux(bring-8, may-7)
ccomp(know-2, bring-8)
cc(know-2, But-10)
neg(man-12, no-11)
nsubj(knoweth-13, man-12)
conj:but(know-2, knoweth-13)
det(mind-15, the-14)
dobj(knoweth-13, mind-15)
case(King-18, of-16)
det(King-18, the-17)
nmod:of(mind-15, King-18)

(ROOT
  (S
    (NP (DT That) (NN unsought) (NN counsel))
    (VP (VBZ is)
      (ADVP (RB cursed)
        (PP (IN of)
          (NP (NNP God) (NNP Attesteth))))
      (NP
        (NP (DT the) (NN story))
        (PP (IN of)
          (NP (NNP Wali) (NNP Dad)))))
    (. .)))

det(counsel-3, That-1)
compound(counsel-3, unsought-2)
nsubj(story-10, counsel-3)
cop(story-10, is-4)
advmod(story-10, cursed-5)
case(Attesteth-8, of-6)
compound(Attesteth-8, God-7)
nmod:of(cursed-5, Attesteth-8)
det(story-10, the-9)
root(ROOT-0, story-10)
case(Dad-13, of-11)
compound(Dad-13, Wali-12)
nmod:of(story-10, Dad-13)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ His) (NN sire))
      (VP (VBD was)
        (ADJP (JJ leaky)
          (PP (IN of)
            (NP (NN tongue)
              (CC and)
              (NN pen))))))
    (, ,)
    (NP (PRP$ His) (NN dam))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ clucking) (NNP Khuttuck) (NN hen))
        (: ;)
        (S
          (S (CC And)
            (NP (DT the) (NN colt))
            (VP (VBD bred)
              (ADJP (JJ close)
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN vice))
                    (PP (IN of)
                      (NP (DT each))))))))
          (, ,) (IN For)
          (S
            (NP (PRP he))
            (VP (VBD carried)
              (NP
                (NP (DT the) (NN curse))
                (PP (IN of)
                  (NP (DT an) (JJ unstanched) (NN speech)))))))))
    (. .)))

nmod:poss(sire-3, His-2)
nsubj(leaky-5, sire-3)
cop(leaky-5, was-4)
ccomp(hen-17, leaky-5)
case(tongue-7, of-6)
nmod:of(leaky-5, tongue-7)
cc(tongue-7, and-8)
nmod:of(leaky-5, pen-9)
conj:and(tongue-7, pen-9)
nmod:poss(dam-12, His-11)
nsubj(hen-17, dam-12)
cop(hen-17, was-13)
det(hen-17, a-14)
amod(hen-17, clucking-15)
compound(hen-17, Khuttuck-16)
root(ROOT-0, hen-17)
cc(bred-22, And-19)
det(colt-21, the-20)
nsubj(bred-22, colt-21)
parataxis(hen-17, bred-22)
case(vice-26, close-23)
mwe(close-23, to-24)
det(vice-26, the-25)
nmod:close_to(bred-22, vice-26)
case(each-28, of-27)
nmod:of(vice-26, each-28)
dep(bred-22, For-30)
nsubj(carried-32, he-31)
parataxis(bred-22, carried-32)
det(curse-34, the-33)
dobj(carried-32, curse-34)
case(speech-38, of-35)
det(speech-38, an-36)
amod(speech-38, unstanched-37)
nmod:of(curse-34, speech-38)

(ROOT
  (NP
    (NP (JJ Therewith) (NN madness))
    (PRN (: --)
      (SBAR (RB so) (IN that)
        (S
          (NP (PRP he))
          (VP (VBD sought)
            (NP
              (NP (DT The) (NN favour))
              (PP (IN of)
                (NP (NNS kings))))
            (PP (IN at)
              (NP (DT the) (NNP Kabul) (NN court))))))
      (: ;))
    (SBAR (CC And)
      (S
        (VP (VBD travelled) (, ,)
          (PP (IN in)
            (NP
              (NP (NN hope))
              (PP (IN of)
                (NP (NN honour)))))
          (, ,)
          (ADVP (RB far)
            (PP (TO To)
              (NP
                (NP (DT the) (NN line))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (DT the) (JJ gray-coat) (NNS squadrons))
                    (VP (VBP are))))))))))
    (. .)))

amod(madness-2, Therewith-1)
root(ROOT-0, madness-2)
mark(sought-7, so-4)
mwe(so-4, that-5)
nsubj(sought-7, he-6)
dep(madness-2, sought-7)
det(favour-9, The-8)
dobj(sought-7, favour-9)
case(kings-11, of-10)
nmod:of(favour-9, kings-11)
case(court-15, at-12)
det(court-15, the-13)
compound(court-15, Kabul-14)
nmod:at(sought-7, court-15)
cc(travelled-18, And-17)
dep(madness-2, travelled-18)
case(hope-21, in-20)
nmod:in(travelled-18, hope-21)
case(honour-23, of-22)
nmod:of(hope-21, honour-23)
advmod(travelled-18, far-25)
case(line-28, To-26)
det(line-28, the-27)
nmod:to(far-25, line-28)
advmod(are-33, where-29)
det(squadrons-32, the-30)
amod(squadrons-32, gray-coat-31)
nsubj(are-33, squadrons-32)
acl:relcl(line-28, are-33)

(ROOT
  (FRAG
    (FRAG
      (NP (RB There))
      (VP (VB have)
        (S
          (S
            (NP (PRP I))
            (VP (VBD journeyed)
              (ADVP (RB too))))
          (: --)
          (CC but)
          (S
            (NP (PRP I))
            (PRN
              (S
                (NP (NNP Saw))
                (VP (VBP naught)))
              (, ,))
            (VP (VBD said)
              (NP (NN naught)))))))
    (, ,)
    (CC and)
    (FRAG (: --)
      (VP (VBD did) (RB not)
        (VP (VB die)))
      (. !))))

root(ROOT-0, There-1)
dep(There-1, have-2)
nsubj(journeyed-4, I-3)
xcomp(have-2, journeyed-4)
advmod(journeyed-4, too-5)
cc(journeyed-4, but-7)
nsubj(said-12, I-8)
nsubj(naught-10, Saw-9)
parataxis(said-12, naught-10)
xcomp(have-2, said-12)
conj:but(journeyed-4, said-12)
dobj(said-12, naught-13)
cc(There-1, and-15)
aux(die-19, did-17)
neg(die-19, not-18)
dep(There-1, die-19)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD harked)
        (PP (TO to)
          (NP (NN rumour))))
      (, ,)
      (CC and)
      (VP (VBD snatched)
        (PP (IN at)
          (NP
            (NP
              (NP (DT a) (NN breath))
              (PP (IN Of)
                (NP (`` `)
                  (NP (DT this) (CD one) (NN knoweth))
                  ('' ')
                  (CC and)
                  (`` `)
                  (NP (DT that) (CD one) (NN saith) ('' ')))))
            (, ,) (: --)
            (NP
              (NP (NNP Legends))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD ran)
                    (PP (IN from)
                      (NP (NN mouth)))
                    (PP (TO to)
                      (NP (NN mouth)))
                    (PP (IN Of)
                      (NP
                        (NP (DT a) (NN gray-coat))
                        (VP (VBG coming))))))))
            (, ,)
            (CC and)
            (NP
              (NP (NN sack))
              (PP (IN of)
                (NP (DT the) (NNP South))))))))
    (. .)))

nsubj(harked-2, He-1)
nsubj(snatched-7, He-1)
root(ROOT-0, harked-2)
case(rumour-4, to-3)
nmod:to(harked-2, rumour-4)
cc(harked-2, and-6)
conj:and(harked-2, snatched-7)
case(breath-10, at-8)
det(breath-10, a-9)
nmod:at(snatched-7, breath-10)
case(knoweth-15, Of-11)
det(knoweth-15, this-13)
nummod(knoweth-15, one-14)
nmod:of(breath-10, knoweth-15)
cc(knoweth-15, and-17)
det(saith-21, that-19)
nummod(saith-21, one-20)
nmod:of(breath-10, saith-21)
conj:and(knoweth-15, saith-21)
nmod:at(snatched-7, Legends-25)
conj:and(breath-10, Legends-25)
nsubj(ran-27, Legends-25)
ref(Legends-25, that-26)
acl:relcl(Legends-25, ran-27)
case(mouth-29, from-28)
nmod:from(ran-27, mouth-29)
case(mouth-31, to-30)
nmod:to(ran-27, mouth-31)
case(gray-coat-34, Of-32)
det(gray-coat-34, a-33)
nmod:of(ran-27, gray-coat-34)
acl(gray-coat-34, coming-35)
cc(breath-10, and-37)
nmod:at(snatched-7, sack-38)
conj:and(breath-10, sack-38)
case(South-41, of-39)
det(South-41, the-40)
nmod:of(sack-38, South-41)

(ROOT
  (S
    (S
      (NP (DT These))
      (VP (VBP have)
        (NP (PRP I))
        (ADVP (RB also))
        (VP (VBN heard))))
    (: --)
    (S
      (NP (PRP they))
      (VP (VBP pass)
        (PP (IN With)
          (NP
            (NP (DT each) (JJ new) (NN spring))
            (CC and)
            (NP (DT the) (NN winter) (NN grass))))))
    (. .)))

nsubj(heard-5, These-1)
aux(heard-5, have-2)
dobj(heard-5, I-3)
advmod(heard-5, also-4)
root(ROOT-0, heard-5)
nsubj(pass-8, they-7)
parataxis(heard-5, pass-8)
case(spring-12, With-9)
det(spring-12, each-10)
amod(spring-12, new-11)
nmod:with(pass-8, spring-12)
cc(spring-12, and-13)
det(grass-16, the-14)
compound(grass-16, winter-15)
nmod:with(pass-8, grass-16)
conj:and(spring-12, grass-16)

(ROOT
  (S (`` ``)
    (NP
      (NP (JJ Hot-foot) (NN southward))
      (, ,)
      (VP (VBN forgotten)
        (PP (IN of)
          (NP (NNP God))))
      (, ,))
    (ADVP (RB Back)
      (PP (TO to)
        (NP (DT the) (NN city))))
    (VP (VBD ran)
      (NP
        (NP (NNP Wali) (NNP Dad))
        (, ,)
        (ADJP (JJ Even)
          (PP (TO to)
            (NP (NNP Kabul))))
        (: --))
      (PP (IN in)
        (NP (JJ full) (NN durbar)))
      (SBAR
        (S
          (NP (DT The) (NNP King))
          (VP (VBD held)
            (NP (NN talk))
            (PP (IN with)
              (NP (PRP$ his) (JJ Chief)))
            (PP (IN in)
              (NP (NNP War)))))))
    (. .)))

amod(southward-3, Hot-foot-2)
nsubj(ran-13, southward-3)
acl(southward-3, forgotten-5)
case(God-7, of-6)
nmod:of(forgotten-5, God-7)
advmod(ran-13, Back-9)
case(city-12, to-10)
det(city-12, the-11)
nmod:to(Back-9, city-12)
root(ROOT-0, ran-13)
compound(Dad-15, Wali-14)
dobj(ran-13, Dad-15)
amod(Dad-15, Even-17)
case(Kabul-19, to-18)
nmod:to(Even-17, Kabul-19)
case(durbar-23, in-21)
amod(durbar-23, full-22)
nmod:in(ran-13, durbar-23)
det(King-25, The-24)
nsubj(held-26, King-25)
dep(ran-13, held-26)
dobj(held-26, talk-27)
case(Chief-30, with-28)
nmod:poss(Chief-30, his-29)
nmod:with(held-26, Chief-30)
case(War-32, in-31)
nmod:in(held-26, War-32)

(ROOT
  (S
    (S
      (PP (NNP Into)
        (NP
          (NP (DT the) (NN press))
          (PP (IN of)
            (NP (DT the) (NN crowd)))))
      (NP (PRP he))
      (VP (VBD broke)))
    (, ,)
    (CC And)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBD had)
            (VP (VBN heard)
              (PP (IN of)
                (NP (DT the) (VBG coming)))))))
      (VP (VBD spoke)))
    (. .)))

dep(press-3, Into-1)
det(press-3, the-2)
nmod(broke-8, press-3)
case(crowd-6, of-4)
det(crowd-6, the-5)
nmod:of(press-3, crowd-6)
nsubj(broke-8, he-7)
root(ROOT-0, broke-8)
cc(broke-8, And-10)
dobj(heard-14, what-11)
nsubj(heard-14, he-12)
aux(heard-14, had-13)
csubj(spoke-18, heard-14)
case(the-16, of-15)
nmod:of(heard-14, the-16)
amod(the-16, coming-17)
conj:and(broke-8, spoke-18)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Then))
      (NP
        (NP (NNP Gholam) (NNP Hyder))
        (, ,)
        (NP (DT the) (NNP Red) (NNP Chief))
        (, ,))
      (VP (VBD smiled) (, ,)
        (SBAR (IN As)
          (S
            (NP (DT a) (NN mother))
            (VP (MD might)
              (PP (IN on)
                (NP (DT a) (JJ babbling) (NN child))))))))
    (: ;)
    (S (CC But)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD would)
              (VP (VB laugh))))))
      (VP (VBD restrained)
        (NP (PRP$ their) (NN breath))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP
              (NP (DT the) (NN face))
              (PP (IN of)
                (NP (DT the) (NNP King))))
            (VP (VBD showed)
              (ADJP (JJ dark))
              (PP (IN as)
                (NP (NN death))))))))
    (. .)))

advmod(smiled-10, Then-2)
compound(Hyder-4, Gholam-3)
nsubj(smiled-10, Hyder-4)
det(Chief-8, the-6)
compound(Chief-8, Red-7)
appos(Hyder-4, Chief-8)
root(ROOT-0, smiled-10)
mark(might-15, As-12)
det(mother-14, a-13)
nsubj(might-15, mother-14)
advcl(smiled-10, might-15)
case(child-19, on-16)
det(child-19, a-17)
amod(child-19, babbling-18)
nmod:on(might-15, child-19)
cc(restrained-26, But-21)
nsubj(laugh-25, those-22)
nsubj(restrained-26, those-22)
ref(those-22, who-23)
aux(laugh-25, would-24)
acl:relcl(those-22, laugh-25)
parataxis(smiled-10, restrained-26)
nmod:poss(breath-28, their-27)
dobj(restrained-26, breath-28)
advmod(showed-36, When-30)
det(face-32, the-31)
nsubj(showed-36, face-32)
case(King-35, of-33)
det(King-35, the-34)
nmod:of(face-32, King-35)
advcl(restrained-26, showed-36)
xcomp(showed-36, dark-37)
case(death-39, as-38)
nmod:as(showed-36, death-39)

(ROOT
  (S
    (ADVP (RB Evil))
    (NP (PRP it))
    (VP (VBZ is)
      (PP (IN in)
        (NP (JJ full) (NN durbar)))
      (S
        (VP (TO To)
          (VP (VB cry)
            (PP (TO to)
              (NP
                (NP (DT a) (NN ruler))
                (PP (IN of)
                  (NP (NN gathering) (NN war)))))))))
    (. !)))

advmod(durbar-6, Evil-1)
nsubj(durbar-6, it-2)
nsubj:xsubj(cry-8, it-2)
cop(durbar-6, is-3)
case(durbar-6, in-4)
amod(durbar-6, full-5)
root(ROOT-0, durbar-6)
mark(cry-8, To-7)
xcomp(durbar-6, cry-8)
case(ruler-11, to-9)
det(ruler-11, a-10)
nmod:to(cry-8, ruler-11)
case(war-14, of-12)
compound(war-14, gathering-13)
nmod:of(ruler-11, war-14)

(ROOT
  (S
    (S
      (ADVP (RB Slowly))
      (NP (PRP he))
      (VP (VBD led)
        (PP (TO to)
          (NP (DT a) (JJ peach-tree) (JJ small)))))
    (, ,)
    (NP (DT That))
    (VP (VBD grew)
      (PP (IN by)
        (NP
          (NP (DT a) (NN cleft))
          (PP (IN of)
            (NP (DT the) (NN city) (NN wall))))))
    (. .)))

advmod(led-3, Slowly-1)
nsubj(led-3, he-2)
ccomp(grew-10, led-3)
case(small-7, to-4)
det(small-7, a-5)
amod(small-7, peach-tree-6)
nmod:to(led-3, small-7)
nsubj(grew-10, That-9)
root(ROOT-0, grew-10)
case(cleft-13, by-11)
det(cleft-13, a-12)
nmod:by(grew-10, cleft-13)
case(wall-17, of-14)
det(wall-17, the-15)
compound(wall-17, city-16)
nmod:of(cleft-13, wall-17)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD said)
      (PP (TO to)
        (NP (DT the) (NN boy)))
      (: :) (`` `)
      (S
        (NP (PRP They))
        (VP (MD shall)
          (VP (VB praise)
            (NP (PRP$ thy) (NN zeal))
            (ADVP
              (ADVP (RB So) (RB long))
              (SBAR (IN as)
                (S
                  (NP (DT the) (JJ red) (NN spurt))
                  (VP (VBZ follows)
                    (NP (DT the) (NN steel))))))))))
    (. .)))

cc(said-3, And-1)
nsubj(said-3, he-2)
root(ROOT-0, said-3)
case(boy-6, to-4)
det(boy-6, the-5)
nmod:to(said-3, boy-6)
nsubj(praise-11, They-9)
aux(praise-11, shall-10)
ccomp(said-3, praise-11)
nmod:poss(zeal-13, thy-12)
dobj(praise-11, zeal-13)
advmod(long-15, So-14)
advmod(praise-11, long-15)
mark(follows-20, as-16)
det(spurt-19, the-17)
amod(spurt-19, red-18)
nsubj(follows-20, spurt-19)
advcl(long-15, follows-20)
det(steel-22, the-21)
dobj(follows-20, steel-22)

(ROOT
  (S (CC And)
    (NP (DT the) (NNP Russ))
    (VP (VBZ is)
      (PP (IN upon)
        (NP (PRP us)))
      (ADVP (RB even) (RB now)))
    (. ?)))

cc(us-6, And-1)
det(Russ-3, the-2)
nsubj(us-6, Russ-3)
cop(us-6, is-4)
case(us-6, upon-5)
root(ROOT-0, us-6)
advmod(now-8, even-7)
advmod(us-6, now-8)

(ROOT
  (S
    (NP (NNP Great))
    (VP (VBZ is)
      (NP (PRP$ thy) (NN prudence))
      (: --)
      (FRAG
        (VP (VB await)
          (NP (PRP them))
          (, ,)
          (ADVP (RB thou)))))
    (. .)))

nsubj(prudence-4, Great-1)
cop(prudence-4, is-2)
nmod:poss(prudence-4, thy-3)
root(ROOT-0, prudence-4)
dep(prudence-4, await-6)
dobj(await-6, them-7)
advmod(await-6, thou-9)

(ROOT
  (S
    (VP (VB Watch)
      (PP (IN from)
        (NP (DT the) (NN tree))))
    (. .)))

root(ROOT-0, Watch-1)
case(tree-4, from-2)
det(tree-4, the-3)
nmod:from(Watch-1, tree-4)

(ROOT
  (S
    (S
      (NP (PRP Thou))
      (VP (VBP art)
        (ADJP (JJ young)
          (CC and)
          (JJ strong))))
    (, ,)
    (ADVP (RB Surely))
    (S
      (NP (PRP$ thy) (NN vigil))
      (VP (VBZ is) (RB not)
        (PP (IN for)
          (ADVP (RB long)))))
    (. .)))

nsubj(young-3, Thou-1)
nsubj(strong-5, Thou-1)
cop(young-3, art-2)
root(ROOT-0, young-3)
cc(young-3, and-4)
conj:and(young-3, strong-5)
advmod(long-13, Surely-7)
nmod:poss(vigil-9, thy-8)
nsubj(long-13, vigil-9)
cop(long-13, is-10)
neg(long-13, not-11)
case(long-13, for-12)
parataxis(young-3, long-13)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Russ))
      (VP (VBZ is)
        (PP (IN upon)
          (NP (PRP us)))))
    (, ,)
    (NP (PRP$ thy) (NN clamour))
    (VP (VBD ran))
    (. ?)))

det(Russ-2, The-1)
nsubj(us-5, Russ-2)
cop(us-5, is-3)
case(us-5, upon-4)
ccomp(ran-9, us-5)
nmod:poss(clamour-8, thy-7)
nsubj(ran-9, clamour-8)
root(ROOT-0, ran-9)

(ROOT
  (S
    (ADVP (RB Surely))
    (NP (DT an) (NN hour))
    (VP (MD shall)
      (VP (VB bring)
        (NP (PRP$ their) (NN van))))
    (. .)))

advmod(bring-5, Surely-1)
det(hour-3, an-2)
nsubj(bring-5, hour-3)
aux(bring-5, shall-4)
root(ROOT-0, bring-5)
nmod:poss(van-7, their-6)
dobj(bring-5, van-7)

(ROOT
  (S
    (VP (VB Wait)
      (CC and)
      (VB watch))
    (. .)))

root(ROOT-0, Wait-1)
cc(Wait-1, and-2)
conj:and(Wait-1, watch-3)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN host))
        (VP (VBZ is)
          (ADJP (JJ near)))))
    (, ,)
    (NP (NNP Shout))
    (VP (VBZ aloud)
      (SBAR (IN that)
        (S
          (NP (PRP$ my) (NNS men))
          (VP (MD may)
            (VP (VB hear))))))
    (. .) ('' ')))

advmod(near-5, When-1)
det(host-3, the-2)
nsubj(near-5, host-3)
cop(near-5, is-4)
advcl(aloud-8, near-5)
nsubj(aloud-8, Shout-7)
root(ROOT-0, aloud-8)
mark(hear-13, that-9)
nmod:poss(men-11, my-10)
nsubj(hear-13, men-11)
aux(hear-13, may-12)
ccomp(aloud-8, hear-13)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Friend))
      (PP (IN of)
        (NP (PRP$ my) (NN heart))))
    (, ,)
    (VP (VBZ is)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBP meet)
            (PRN (CC or)
              (ADJP (JJ wise)
                (S
                  (VP (TO To)
                    (VP (VB warn)
                      (NP
                        (NP (DT a) (NNP King))
                        (PP (IN of)
                          (NP (PRP$ his) (NNS enemies)))))))))))))
    (. ?)))

nsubj(is-7, Friend-2)
case(heart-5, of-3)
nmod:poss(heart-5, my-4)
nmod:of(Friend-2, heart-5)
root(ROOT-0, is-7)
nsubj(meet-9, it-8)
ccomp(is-7, meet-9)
cc(wise-11, or-10)
dep(meet-9, wise-11)
mark(warn-13, To-12)
xcomp(wise-11, warn-13)
det(King-15, a-14)
dobj(warn-13, King-15)
case(enemies-18, of-16)
nmod:poss(enemies-18, his-17)
nmod:of(King-15, enemies-18)

(ROOT
  (S
    (S
      (NP (DT A) (NN guard))
      (VP (VBD was)
        (VP (VBN set)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD might) (RB not)
                (VP (VB flee))))))))
    (: --)
    (S
      (NP
        (NP (DT A) (NN score))
        (PP (IN of)
          (NP (NNS bayonets))))
      (VP (VBD ringed)
        (NP (DT the) (NN tree))))
    (. .)))

det(guard-2, A-1)
nsubjpass(set-4, guard-2)
auxpass(set-4, was-3)
root(ROOT-0, set-4)
mark(flee-9, that-5)
nsubj(flee-9, he-6)
aux(flee-9, might-7)
neg(flee-9, not-8)
ccomp(set-4, flee-9)
det(score-12, A-11)
nsubj(ringed-15, score-12)
case(bayonets-14, of-13)
nmod:of(score-12, bayonets-14)
parataxis(set-4, ringed-15)
det(tree-17, the-16)
dobj(ringed-15, tree-17)

(ROOT
  (S
    (NP (DT The) (NN peach-bloom))
    (VP (VBD fell)
      (PP (IN in)
        (NP
          (NP (NNS showers))
          (PP (IN of)
            (NP (NN snow)))))
      (, ,)
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP he))
          (VP (VBD shook)
            (PP (IN at)
              (NP (PRP$ his) (NN death)))
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBD looked)
                  (ADVP (RB below)))))))))
    (. .)))

det(peach-bloom-2, The-1)
nsubj(fell-3, peach-bloom-2)
root(ROOT-0, fell-3)
case(showers-5, in-4)
nmod:in(fell-3, showers-5)
case(snow-7, of-6)
nmod:of(showers-5, snow-7)
advmod(shook-11, When-9)
nsubj(shook-11, he-10)
advcl(fell-3, shook-11)
case(death-14, at-12)
nmod:poss(death-14, his-13)
nmod:at(shook-11, death-14)
mark(looked-17, as-15)
nsubj(looked-17, he-16)
advcl(shook-11, looked-17)
advmod(looked-17, below-18)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (DT the) (NN power))
        (PP (IN of)
          (NP (NNP God)))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (ADVP (RB alone))
            (VP (VBZ is)
              (ADJP (JJ great))
              (, ,)
              (PP (IN Till)
                (NP (DT the) (JJ seventh) (NN day))))))))
    (NP (PRP he))
    (VP (VBD fought)
      (PP (IN with)
        (NP (PRP$ his) (NN fate))))
    (. .)))

case(power-3, By-1)
det(power-3, the-2)
nsubj(great-10, power-3)
nmod:by(fought-17, power-3)
case(God-5, of-4)
nmod:of(power-3, God-5)
ref(power-3, who-7)
advmod(great-10, alone-8)
cop(great-10, is-9)
acl:relcl(power-3, great-10)
case(day-15, Till-12)
det(day-15, the-13)
amod(day-15, seventh-14)
nmod:till(great-10, day-15)
nsubj(fought-17, he-16)
root(ROOT-0, fought-17)
case(fate-20, with-18)
nmod:poss(fate-20, his-19)
nmod:with(fought-17, fate-20)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Then))
        (NP (NN madness))
        (VP (VBD took)
          (NP (PRP him))))
      (, ,)
      (CC and)
      (S
        (NP (NNS men))
        (VP (VBP declare)
          (SBAR
            (S
              (NP (PRP He))
              (VP (VBD mowed)
                (PP (IN in)
                  (NP (DT the) (NNS branches)))
                (PP (IN as)
                  (NP (NN ape)
                    (CC and)
                    (NN bear)))))))))
    (, ,)
    (CC And)
    (S
      (S
        (ADVP (JJ last)
          (PP (IN as)
            (NP
              (NP (DT a) (NN sloth))
              (, ,)
              (NP (NN ere)))))
        (NP (PRP$ his) (NN body))
        (VP (VBD failed)))
      (, ,)
      (CC And)
      (S
        (S
          (NP (PRP he))
          (VP
            (VP (VBD hung)
              (PP (IN as)
                (NP (DT a) (NN bat)))
              (PP (IN in)
                (NP (DT the) (NNS forks))))
            (, ,)
            (CC and)
            (VP (VBD wailed))))
        (, ,)
        (CC And)
        (S
          (S
            (S
              (VP (VB sleep)
                (NP
                  (NP (DT the) (NN cord))
                  (PP (IN of)
                    (NP (PRP$ his) (NNS hands))))))
            (VP (VBD untied)))
          (, ,)
          (CC And)
          (S
            (NP (PRP he))
            (VP
              (VP (VBD fell))
              (, ,)
              (CC and)
              (VP (VBD was)
                (VP
                  (VP (VBN caught)
                    (PP (IN on)
                      (NP (DT the) (NNS points))))
                  (CC and)
                  (VP (VBD died)))))))))
    (. .)))

advmod(took-3, Then-1)
nsubj(took-3, madness-2)
root(ROOT-0, took-3)
dobj(took-3, him-4)
cc(took-3, and-6)
nsubj(declare-8, men-7)
conj:and(took-3, declare-8)
nsubj(mowed-10, He-9)
ccomp(declare-8, mowed-10)
case(branches-13, in-11)
det(branches-13, the-12)
nmod:in(mowed-10, branches-13)
case(ape-15, as-14)
nmod:as(mowed-10, ape-15)
cc(ape-15, and-16)
nmod:as(mowed-10, bear-17)
conj:and(ape-15, bear-17)
cc(took-3, And-19)
advmod(failed-28, last-20)
case(sloth-23, as-21)
det(sloth-23, a-22)
nmod:as(last-20, sloth-23)
appos(sloth-23, ere-25)
nmod:poss(body-27, his-26)
nsubj(failed-28, body-27)
conj:and(took-3, failed-28)
cc(failed-28, And-30)
nsubj(hung-32, he-31)
nsubj(wailed-41, he-31)
conj:and(took-3, hung-32)
conj:and(failed-28, hung-32)
case(bat-35, as-33)
det(bat-35, a-34)
nmod:as(hung-32, bat-35)
case(forks-38, in-36)
det(forks-38, the-37)
nmod:in(hung-32, forks-38)
cc(hung-32, and-40)
conj:and(failed-28, wailed-41)
conj:and(hung-32, wailed-41)
cc(hung-32, And-43)
csubj(untied-50, sleep-44)
det(cord-46, the-45)
dobj(sleep-44, cord-46)
case(hands-49, of-47)
nmod:poss(hands-49, his-48)
nmod:of(cord-46, hands-49)
conj:and(failed-28, untied-50)
conj:and(hung-32, untied-50)
cc(untied-50, And-52)
nsubj(fell-54, he-53)
nsubjpass(caught-58, he-53)
conj:and(hung-32, fell-54)
conj:and(untied-50, fell-54)
cc(fell-54, and-56)
auxpass(caught-58, was-57)
conj:and(untied-50, caught-58)
conj:and(fell-54, caught-58)
case(points-61, on-59)
det(points-61, the-60)
nmod:on(caught-58, points-61)
cc(caught-58, and-62)
conj:and(fell-54, died-63)
conj:and(caught-58, died-63)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Heart))
      (PP (IN of)
        (NP (PRP$ my) (NN heart))))
    (, ,)
    (VP (VBZ is)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBP meet)
            (PRN (CC or)
              (ADJP (JJ wise)
                (S
                  (VP (TO To)
                    (VP (VB warn)
                      (NP
                        (NP (DT a) (NNP King))
                        (PP (IN of)
                          (NP (PRP$ his) (NNS enemies)))))))))))))
    (. ?)))

nsubj(is-7, Heart-2)
case(heart-5, of-3)
nmod:poss(heart-5, my-4)
nmod:of(Heart-2, heart-5)
root(ROOT-0, is-7)
nsubj(meet-9, it-8)
ccomp(is-7, meet-9)
cc(wise-11, or-10)
dep(meet-9, wise-11)
mark(warn-13, To-12)
xcomp(wise-11, warn-13)
det(King-15, a-14)
dobj(warn-13, King-15)
case(enemies-18, of-16)
nmod:poss(enemies-18, his-17)
nmod:of(King-15, enemies-18)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNP Heaven)
              (CC or)
              (NNP Hell))
            (VP (MD may)
              (VP (VB bring)))))))
    (, ,)
    (CC But)
    (S
      (NP (DT no) (NN man))
      (VP (VBP knoweth)
        (NP
          (NP (DT the) (NN mind))
          (PP (IN of)
            (NP (DT the) (NNP King))))))
    (. .)))

nsubj(know-2, We-1)
root(ROOT-0, know-2)
dobj(bring-8, what-3)
nsubj(bring-8, Heaven-4)
cc(Heaven-4, or-5)
conj:or(Heaven-4, Hell-6)
nsubj(bring-8, Hell-6)
aux(bring-8, may-7)
ccomp(know-2, bring-8)
cc(know-2, But-10)
neg(man-12, no-11)
nsubj(knoweth-13, man-12)
conj:but(know-2, knoweth-13)
det(mind-15, the-14)
dobj(knoweth-13, mind-15)
case(King-18, of-16)
det(King-18, the-17)
nmod:of(mind-15, King-18)

(ROOT
  (FRAG
    (PP (IN Of)
      (NP
        (NP (DT the) (JJ gray-coat) (VBG coming))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD can)
              (VP (VB say)))))))
    (. ?)))

case(gray-coat-3, Of-1)
det(gray-coat-3, the-2)
root(ROOT-0, gray-coat-3)
nsubj(say-7, gray-coat-3)
amod(gray-coat-3, coming-4)
ref(gray-coat-3, who-5)
aux(say-7, can-6)
acl:relcl(gray-coat-3, say-7)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN night))
        (VP (VBZ is)
          (VP (VBG gathering)
            (NP (DT all))))))
    (VP (VBZ is)
      (ADJP (JJ gray)))
    (. .)))

advmod(gathering-5, When-1)
det(night-3, the-2)
nsubj(gathering-5, night-3)
aux(gathering-5, is-4)
advcl(gray-8, gathering-5)
dobj(gathering-5, all-6)
cop(gray-8, is-7)
root(ROOT-0, gray-8)

(ROOT
  (S
    (S
      (ADJP
        (ADJP
          (NP (CD Two) (NNS things))
          (JJR greater))
        (SBAR (IN than)
          (S
            (NP (DT all) (NNS things))
            (VP (VBP are))))))
    (, ,)
    (NP (DT The) (JJ first))
    (VP (VBZ is)
      (NP
        (NP (NN Love))
        (, ,)
        (CC and)
        (NP (DT the) (JJ second) (NN War))))
    (. .)))

nummod(things-2, Two-1)
nmod:npmod(greater-3, things-2)
ccomp(Love-12, greater-3)
mark(are-7, than-4)
det(things-6, all-5)
nsubj(are-7, things-6)
ccomp(greater-3, are-7)
det(first-10, The-9)
nsubj(Love-12, first-10)
cop(Love-12, is-11)
root(ROOT-0, Love-12)
cc(Love-12, and-14)
det(War-17, the-15)
amod(War-17, second-16)
conj:and(Love-12, War-17)

(ROOT
  (S (CC And)
    (SBAR (IN since)
      (S
        (NP (PRP we))
        (VP (VBP know) (RB not)
          (NP
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (NNP War))
                (VP (MD may)
                  (VP (VB prove)))))
            (, ,)
            (NP
              (NP (NNP Heart))
              (PP (IN of)
                (NP (PRP$ my) (NN heart))))))))
    (, ,)
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP us))
          (VP (VBP talk)
            (PP (IN of)
              (NP (NN Love)))))))
    (. !) ('' '')))

cc(let-16, And-1)
mark(know-4, since-2)
nsubj(know-4, we-3)
advcl(let-16, know-4)
neg(know-4, not-5)
advmod(prove-9, how-6)
nsubj(prove-9, War-7)
aux(prove-9, may-8)
dep(Heart-11, prove-9)
dobj(know-4, Heart-11)
case(heart-14, of-12)
nmod:poss(heart-14, my-13)
nmod:of(Heart-11, heart-14)
root(ROOT-0, let-16)
nsubj(talk-18, us-17)
ccomp(let-16, talk-18)
case(Love-20, of-19)
nmod:of(talk-18, Love-20)

(ROOT
  (S
    (ADVP
      (PP (IN WITH)
        (NP
          (NP (NNP SCINDIA) (NNP TO) (NNP DELHI) (NNP _))
          (NP
            (QP (JJR More) (IN than) (DT a) (CD hundred))
            (NNS years))))
      (IN ago))
    (, ,)
    (PP (IN in)
      (NP
        (NP (DT a) (JJ great) (NN battle))
        (VP (VBN fought)
          (PP (IN near)
            (NP (NNP Delhi))))))
    (, ,)
    (NP (DT an) (NNP Indian) (NNP Prince))
    (VP (VBD rode)
      (NP (JJ fifty) (NNS miles))
      (SBAR (IN after)
        (S
          (NP (DT the) (NN day))
          (VP (VBD was)
            (VP (VBN lost)
              (PP (IN with)
                (NP
                  (NP (DT a) (NN beggar-girl))
                  (, ,)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBD had)
                        (VP
                          (VP (VBN loved)
                            (NP (PRP him)))
                          (CC and)
                          (VP (VBN followed)
                            (NP (PRP him))
                            (PP (IN in)
                              (NP (PDT all) (PRP$ his) (NNS camps)))
                            (, ,)
                            (PP (IN on)
                              (NP (PRP$ his) (NN saddle-bow)))))))))))))))
    (. .)))

case(_-5, WITH-1)
compound(_-5, SCINDIA-2)
compound(_-5, TO-3)
compound(_-5, DELHI-4)
advmod(rode-24, _-5)
advmod(hundred-9, More-6)
mwe(More-6, than-7)
advmod(hundred-9, a-8)
nummod(years-10, hundred-9)
dep(_-5, years-10)
case(_-5, ago-11)
case(battle-16, in-13)
det(battle-16, a-14)
amod(battle-16, great-15)
nmod:in(rode-24, battle-16)
acl(battle-16, fought-17)
case(Delhi-19, near-18)
nmod:near(fought-17, Delhi-19)
det(Prince-23, an-21)
compound(Prince-23, Indian-22)
nsubj(rode-24, Prince-23)
root(ROOT-0, rode-24)
amod(miles-26, fifty-25)
dobj(rode-24, miles-26)
mark(lost-31, after-27)
det(day-29, the-28)
nsubjpass(lost-31, day-29)
auxpass(lost-31, was-30)
advcl(rode-24, lost-31)
case(beggar-girl-34, with-32)
det(beggar-girl-34, a-33)
nmod:with(lost-31, beggar-girl-34)
nsubj(loved-38, beggar-girl-34)
nsubj(followed-41, beggar-girl-34)
ref(beggar-girl-34, who-36)
aux(loved-38, had-37)
acl:relcl(beggar-girl-34, loved-38)
dobj(loved-38, him-39)
cc(loved-38, and-40)
acl:relcl(beggar-girl-34, followed-41)
conj:and(loved-38, followed-41)
dobj(followed-41, him-42)
case(camps-46, in-43)
det:predet(camps-46, all-44)
nmod:poss(camps-46, his-45)
nmod:in(followed-41, camps-46)
case(saddle-bow-50, on-48)
nmod:poss(saddle-bow-50, his-49)
nmod:on(followed-41, saddle-bow-50)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD lost)
      (NP (DT the) (NN girl))
      (SBAR
        (WHADVP (WRB when))
        (S
          (ADJP (RB almost)
            (PP (IN within)
              (NP
                (NP (NN sight))
                (PP (IN of)
                  (NP (NN safety)))))))))
    (. .)))

nsubj(lost-2, He-1)
root(ROOT-0, lost-2)
det(girl-4, the-3)
dobj(lost-2, girl-4)
advmod(almost-6, when-5)
advcl(lost-2, almost-6)
case(sight-8, within-7)
nmod:within(almost-6, sight-8)
case(safety-10, of-9)
nmod:of(sight-8, safety-10)

(ROOT
  (S
    (S
      (NP (DT A) (NNP Maratta) (NN trooper))
      (VP (VBZ tells)
        (NP (DT the) (NN story))))
    (: :) (: --)
    (S
      (S
        (VP (VBG _)
          (NP
            (NP (DT The) (NN wreath))
            (PP (IN of)
              (NP
                (NP (JJ banquet) (JJ overnight) (NNS lay))
                (VP (VBN withered)
                  (PP (IN on)
                    (NP (DT the) (NN neck)))))))))
      (, ,)
      (NP (PRP$ Our) (NNS hands)
        (CC and)
        (NNS scarfs))
      (VP (VBD were)
        (VP (VBN saffron-dyed)
          (PP (IN for)
            (NP
              (NP (NN signal))
              (PP (IN of)
                (NP
                  (NP (NN despair))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB When))
                    (S
                      (NP (PRP we))
                      (VP (VBD went)
                        (ADVP (RB forth)
                          (PP (TO to)
                            (NP (NNP Paniput))))
                        (PP (TO to)
                          (NP (NN battle)))
                        (PP (IN with)
                          (NP (DT the) (NNP _) (NNP Mlech) (NNP _))))))
                  (, ,))))))))
    (: --)
    (S
      (NP (NNP Ere) (PRP we))
      (VP
        (VP (VBD came)
          (PRT (RP back))
          (PP (IN from)
            (NP (NNP Paniput))))
        (CC and)
        (VP (VBD left)
          (NP (DT a) (NN kingdom))
          (ADVP (RB there)))))
    (. .)))

det(trooper-3, A-1)
compound(trooper-3, Maratta-2)
nsubj(tells-4, trooper-3)
root(ROOT-0, tells-4)
det(story-6, the-5)
dobj(tells-4, story-6)
advcl(saffron-dyed-26, _-9)
det(wreath-11, The-10)
dobj(_-9, wreath-11)
case(lay-15, of-12)
amod(lay-15, banquet-13)
amod(lay-15, overnight-14)
nmod:of(wreath-11, lay-15)
acl(lay-15, withered-16)
case(neck-19, on-17)
det(neck-19, the-18)
nmod:on(withered-16, neck-19)
nmod:poss(hands-22, Our-21)
nsubjpass(saffron-dyed-26, hands-22)
cc(hands-22, and-23)
conj:and(hands-22, scarfs-24)
nsubjpass(saffron-dyed-26, scarfs-24)
auxpass(saffron-dyed-26, were-25)
parataxis(tells-4, saffron-dyed-26)
case(signal-28, for-27)
nmod:for(saffron-dyed-26, signal-28)
case(despair-30, of-29)
nmod:of(signal-28, despair-30)
advmod(went-34, When-32)
nsubj(went-34, we-33)
acl:relcl(despair-30, went-34)
advmod(went-34, forth-35)
case(Paniput-37, to-36)
nmod:to(forth-35, Paniput-37)
case(battle-39, to-38)
nmod:to(went-34, battle-39)
case(_-44, with-40)
det(_-44, the-41)
compound(_-44, _-42)
compound(_-44, Mlech-43)
nmod:with(went-34, _-44)
nsubj(came-49, Ere-47)
nsubj(left-54, Ere-47)
dep(Ere-47, we-48)
parataxis(tells-4, came-49)
compound:prt(came-49, back-50)
case(Paniput-52, from-51)
nmod:from(came-49, Paniput-52)
cc(came-49, and-53)
parataxis(tells-4, left-54)
conj:and(came-49, left-54)
det(kingdom-56, a-55)
dobj(left-54, kingdom-56)
advmod(left-54, there-57)

(ROOT
  (SINV
    (S
      (ADVP (RB Thrice))
      (NP (CD thirty) (CD thousand) (NNS men))
      (VP (VBD were)
        (S
          (NP (PRP we))
          (VP (TO to)
            (VP (VB force)
              (NP
                (NP (DT the) (NNP Jumna) (NNS fords))
                (: --)
                (NP
                  (NP (DT The) (JJ hawk-winged) (NN horse))
                  (PP (IN of)
                    (NP (NNP Damajee))))))))))
    (, ,)
    (VP (VBD mailed)
      (NP
        (NP
          (NP (NNS squadrons))
          (PP (IN of)
            (NP (DT the) (NNP Bhao)))
          (, ,)
          (NP
            (NP (NNP Stark) (NNS levies))
            (PP (IN of)
              (NP (DT the) (JJ southern) (NNS hills))))
          (, ,)
          (NP
            (NP (DT the) (NNP Deccan) (POS 's))
            (JJS sharpest) (NNS swords)))
        (, ,)
        (CC And)
        (NP
          (NP (PRP he))
          (NP
            (NP (DT the) (NN harlot) (POS 's))
            (NN traitor) (NN son)))))
    (NP (DT the) (JJ goatherd) (NNP Mulhar) (NNP Rao))
    (. !)))

advmod(were-5, Thrice-1)
nummod(men-4, thirty-2)
nummod(men-4, thousand-3)
nsubj(were-5, men-4)
ccomp(mailed-19, were-5)
dobj(were-5, we-6)
nsubj:xsubj(force-8, we-6)
mark(force-8, to-7)
xcomp(were-5, force-8)
det(fords-11, the-9)
compound(fords-11, Jumna-10)
dobj(force-8, fords-11)
det(horse-15, The-13)
amod(horse-15, hawk-winged-14)
dep(fords-11, horse-15)
case(Damajee-17, of-16)
nmod:of(horse-15, Damajee-17)
root(ROOT-0, mailed-19)
dobj(mailed-19, squadrons-20)
case(Bhao-23, of-21)
det(Bhao-23, the-22)
nmod:of(squadrons-20, Bhao-23)
compound(levies-26, Stark-25)
appos(squadrons-20, levies-26)
case(hills-30, of-27)
det(hills-30, the-28)
amod(hills-30, southern-29)
nmod:of(levies-26, hills-30)
det(Deccan-33, the-32)
nmod:poss(swords-36, Deccan-33)
case(Deccan-33, 's-34)
amod(swords-36, sharpest-35)
appos(squadrons-20, swords-36)
cc(squadrons-20, And-38)
dobj(mailed-19, he-39)
conj:and(squadrons-20, he-39)
det(harlot-41, the-40)
nmod:poss(son-44, harlot-41)
case(harlot-41, 's-42)
compound(son-44, traitor-43)
dep(he-39, son-44)
det(Rao-48, the-45)
amod(Rao-48, goatherd-46)
compound(Rao-48, Mulhar-47)
nsubj(mailed-19, Rao-48)

(ROOT
  (S
    (S
      (ADVP (RB Thrice))
      (NP (CD thirty) (CD thousand) (NNS men))
      (VP (VBD were)
        (NP (PRP we))
        (SBAR (IN before)
          (S
            (S
              (NP (DT the) (NNS mists))
              (VP (VBD had)
                (VP (VBN cleared))))
            (, ,)
            (S
              (NP
                (NP (DT The) (JJ low) (JJ white) (NNS mists))
                (PP (IN of)
                  (NP (NN morning))))
              (VP (VBD heard)
                (NP
                  (NP (DT the) (JJ war-conch) (NN scream)
                    (CC and)
                    (NN bray))
                  (: ;)
                  (S
                    (NP (PRP We))
                    (VP (VBD called)
                      (PP (IN upon)
                        (NP (NNP Bhowani))))))))
            (CC and)
            (S
              (NP (PRP we))
              (VP (VBD gripped)
                (NP (PRP them))
                (PP (IN by)
                  (NP (DT the) (NN beard)))))))))
    (, ,)
    (NP (PRP We))
    (VP
      (VP (VBD rolled)
        (PP (IN upon)
          (NP (PRP them)))
        (PP (IN like)
          (NP (DT a) (NN flood))))
      (CC and)
      (VP (VBD washed)
        (NP (PRP$ their) (NNS ranks))
        (ADVP (RB away))))
    (. .)))

advmod(we-6, Thrice-1)
nummod(men-4, thirty-2)
nummod(men-4, thousand-3)
nsubj(we-6, men-4)
cop(we-6, were-5)
ccomp(rolled-39, we-6)
mark(cleared-11, before-7)
det(mists-9, the-8)
nsubj(cleared-11, mists-9)
aux(cleared-11, had-10)
advcl(we-6, cleared-11)
det(mists-16, The-13)
amod(mists-16, low-14)
amod(mists-16, white-15)
nsubj(heard-19, mists-16)
case(morning-18, of-17)
nmod:of(mists-16, morning-18)
advcl(we-6, heard-19)
conj:and(cleared-11, heard-19)
det(scream-22, the-20)
amod(scream-22, war-conch-21)
dobj(heard-19, scream-22)
cc(scream-22, and-23)
dobj(heard-19, bray-24)
conj:and(scream-22, bray-24)
nsubj(called-27, We-26)
dep(scream-22, called-27)
case(Bhowani-29, upon-28)
nmod:upon(called-27, Bhowani-29)
cc(cleared-11, and-30)
nsubj(gripped-32, we-31)
advcl(we-6, gripped-32)
conj:and(cleared-11, gripped-32)
dobj(gripped-32, them-33)
case(beard-36, by-34)
det(beard-36, the-35)
nmod:by(gripped-32, beard-36)
nsubj(rolled-39, We-38)
nsubj(washed-46, We-38)
root(ROOT-0, rolled-39)
case(them-41, upon-40)
nmod:upon(rolled-39, them-41)
case(flood-44, like-42)
det(flood-44, a-43)
nmod:like(rolled-39, flood-44)
cc(rolled-39, and-45)
conj:and(rolled-39, washed-46)
nmod:poss(ranks-48, their-47)
dobj(washed-46, ranks-48)
advmod(washed-46, away-49)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS children))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS hills))
            (PP (IN of)
              (NP
                (NP (NNP Khost))
                (PP (IN before)
                  (NP (PRP$ our) (NNS lances))))))))
      (VP (VBD ran) (, ,)
        (S
          (S
            (NP (PRP We))
            (VP (VBD drove)
              (PP
                (ADVP
                  (NP (DT the) (JJ black) (NNS Rohillas))
                  (RB back))
                (IN as)
                (NP (NNS cattle)))
              (PP (TO to)
                (NP (DT the) (NN pen)))))
          (: ;)
          (S
            (NP (PRP 'T))
            (VP (VBD was)
              (ADVP (RB then))))
          (S
            (NP (PRP we))
            (VP (VBD needed)
              (S
                (NP (NNP Mulhar) (NNP Rao))
                (VP (TO to)
                  (VP (VB end)
                    (S
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP we))
                          (VP (VBD began))))
                      (, ,)
                      (NP (DT A) (CD thousand) (NNS men))
                      (VP (VBD had)
                        (VP (VBN saved)
                          (NP (DT the) (NN charge)))))))))))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD fled)
        (NP (DT the) (NN field))
        (PP (IN with)
          (NP (CD ten)))))
    (. !)))

det(children-2, The-1)
nsubj(ran-11, children-2)
case(hills-5, of-3)
det(hills-5, the-4)
nmod:of(children-2, hills-5)
case(Khost-7, of-6)
nmod:of(hills-5, Khost-7)
case(lances-10, before-8)
nmod:poss(lances-10, our-9)
nmod:before(Khost-7, lances-10)
root(ROOT-0, ran-11)
nsubj(drove-14, We-13)
xcomp(ran-11, drove-14)
det(Rohillas-17, the-15)
amod(Rohillas-17, black-16)
nmod:npmod(back-18, Rohillas-17)
advmod(cattle-20, back-18)
case(cattle-20, as-19)
nmod:as(drove-14, cattle-20)
case(pen-23, to-21)
det(pen-23, the-22)
nmod:to(drove-14, pen-23)
nsubj(was-26, 'T-25)
parataxis(drove-14, was-26)
advmod(was-26, then-27)
nsubj(needed-29, we-28)
parataxis(drove-14, needed-29)
compound(Rao-31, Mulhar-30)
dobj(needed-29, Rao-31)
nsubj:xsubj(end-33, Rao-31)
mark(end-33, to-32)
xcomp(needed-29, end-33)
dobj(began-36, what-34)
nsubj(began-36, we-35)
advcl(saved-42, began-36)
det(men-40, A-38)
nummod(men-40, thousand-39)
nsubj(saved-42, men-40)
aux(saved-42, had-41)
ccomp(end-33, saved-42)
det(charge-44, the-43)
dobj(saved-42, charge-44)
nsubj(fled-47, he-46)
parataxis(ran-11, fled-47)
det(field-49, the-48)
dobj(fled-47, field-49)
case(ten-51, with-50)
nmod:with(fled-47, ten-51)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP (DT no) (NN room)
          (S
            (S
              (VP (TO to)
                (VP (VB clear)
                  (NP (DT a) (NN sword)))))
            (: --)
            (S
              (NP (DT no) (NN power)
                (S
                  (VP (TO to)
                    (VP (VB strike)
                      (NP (DT a) (NN blow))))))
              (, ,)
              (SBAR (IN For)
                (S
                  (NP
                    (NP (NN foot) (TO to) (NN foot))
                    (, ,)
                    (NP (NN ay))
                    (, ,))
                  (NP
                    (NP (NN breast))
                    (PP (TO to)
                      (NP (NN breast))))))
              (, ,)
              (NP (DT the) (NN battle))
              (VP (VBD held)
                (NP (PRP us))
                (ADVP (RB fast))))
            (: --)
            (S
              (VP (VB Save)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (DT the) (JJ naked) (NN hill-men))
                    (VP (VBD ran))))))
            (, ,)
            (CC and)
            (S
              (VP (VBG stabbing)
                (PP (IN from)
                  (PP (IN below)
                    (NP (NNP Brought))))
                (PP (IN down)
                  (NP (DT the) (NN horse)
                    (CC and)
                    (NN rider)))))))))
    (CC and)
    (S
      (NP (PRP we))
      (VP
        (VP (VBN trampled)
          (NP (PRP them)))
        (CC and)
        (VP (VBN passed))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(room-4, no-3)
nsubj(was-2, room-4)
mark(clear-6, to-5)
dep(room-4, clear-6)
det(sword-8, a-7)
dobj(clear-6, sword-8)
neg(power-11, no-10)
nsubj(held-30, power-11)
mark(strike-13, to-12)
acl(power-11, strike-13)
det(blow-15, a-14)
dobj(strike-13, blow-15)
mark(breast-24, For-17)
compound(foot-20, foot-18)
dep(foot-20, to-19)
dep(breast-24, foot-20)
appos(foot-20, ay-22)
advcl(held-30, breast-24)
case(breast-26, to-25)
nmod:to(breast-24, breast-26)
det(battle-29, the-28)
nsubj(held-30, battle-29)
dep(room-4, held-30)
conj:and(clear-6, held-30)
dobj(held-30, us-31)
advmod(held-30, fast-32)
dep(room-4, Save-34)
conj:and(clear-6, Save-34)
advmod(ran-39, where-35)
det(hill-men-38, the-36)
amod(hill-men-38, naked-37)
nsubj(ran-39, hill-men-38)
advcl(Save-34, ran-39)
cc(clear-6, and-41)
dep(room-4, stabbing-42)
conj:and(clear-6, stabbing-42)
case(Brought-45, from-43)
case(Brought-45, below-44)
nmod:below(stabbing-42, Brought-45)
case(horse-48, down-46)
det(horse-48, the-47)
nmod:down(stabbing-42, horse-48)
cc(horse-48, and-49)
nmod:down(stabbing-42, rider-50)
conj:and(horse-48, rider-50)
cc(was-2, and-51)
nsubj(trampled-53, we-52)
nsubj(passed-56, we-52)
conj:and(was-2, trampled-53)
dobj(trampled-53, them-54)
cc(trampled-53, and-55)
conj:and(was-2, passed-56)
conj:and(trampled-53, passed-56)

(ROOT
  (S
    (S
      (NP (TO To))
      (VP (VBD left)
        (SBAR
          (S
            (NP
              (NP (DT the) (NN roar))
              (PP (IN of)
                (NP (NN musketry))))
            (VP (VBD rang)
              (PP (IN like)
                (NP
                  (NP (DT a) (VBG falling) (NN flood))
                  (: --)
                  (S
                    (VP (TO To)
                      (VP
                        (ADVP (RB right)
                          (NP (DT the) (NN sunshine)))
                        (VB rippled)
                        (NP (NN red))
                        (PP (IN from)
                          (NP (JJ redder) (NN lance))))))
                  (CC and)
                  (NP (NN blade)))))))))
    (: --)
    (S
      (PP (IN Above)
        (NP (DT the) (JJ dark) (NN _)))
      (NP (NNP Upsaras) (NNP _) (NNP *))
      (VP (VBD flew) (, ,)
        (PP (IN beneath)
          (NP
            (NP (PRP us))
            (VP (VBN plashed)
              (NP (DT the) (NN blood)))))))
    (, ,)
    (CC And)
    (, ,)
    (S
      (ADJP (JJ bellying) (NN black)
        (PP (IN against)
          (NP (DT the) (NN dust)))))
    (, ,)
    (S
      (NP (DT the) (NNP Bhagwa) (NNP Jhanda))
      (VP (VBN swayed)))
    (. .)))

nsubj(left-2, To-1)
root(ROOT-0, left-2)
det(roar-4, the-3)
nsubj(rang-7, roar-4)
case(musketry-6, of-5)
nmod:of(roar-4, musketry-6)
ccomp(left-2, rang-7)
case(flood-11, like-8)
det(flood-11, a-9)
amod(flood-11, falling-10)
nmod:like(rang-7, flood-11)
mark(rippled-17, To-13)
advmod(rippled-17, right-14)
det(sunshine-16, the-15)
nmod:npmod(right-14, sunshine-16)
acl(flood-11, rippled-17)
dobj(rippled-17, red-18)
case(lance-21, from-19)
amod(lance-21, redder-20)
nmod:from(rippled-17, lance-21)
cc(flood-11, and-22)
nmod:like(rang-7, blade-23)
conj:and(flood-11, blade-23)
case(_-28, Above-25)
det(_-28, the-26)
amod(_-28, dark-27)
nmod:above(flew-32, _-28)
compound(*-31, Upsaras-29)
compound(*-31, _-30)
nsubj(flew-32, *-31)
conj:And(left-2, flew-32)
case(us-35, beneath-34)
nmod:beneath(flew-32, us-35)
acl(us-35, plashed-36)
det(blood-38, the-37)
dobj(plashed-36, blood-38)
cc(left-2, And-40)
dep(black-43, bellying-42)
conj:And(left-2, black-43)
case(dust-46, against-44)
det(dust-46, the-45)
nmod:against(black-43, dust-46)
det(Jhanda-50, the-48)
compound(Jhanda-50, Bhagwa-49)
nsubj(swayed-51, Jhanda-50)
conj:And(left-2, swayed-51)

(ROOT
  (X
    (X (SYM *))
    (NP
      (NP (DT The) (NNPS Choosers))
      (PP (IN of)
        (NP (DT the) (NNP Slain) (. .))))))

dep(Choosers-3, *-1)
det(Choosers-3, The-2)
root(ROOT-0, Choosers-3)
case(Slain-6, of-4)
det(Slain-6, the-5)
nmod:of(Choosers-3, Slain-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD saw)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBP fall)
            (FRAG
              (PP (IN in)
                (NP (NN smoke)
                  (CC and)
                  (NN fire)))
              (, ,)
              (NP
                (NP (DT the) (NN banner))
                (PP (IN of)
                  (NP (DT the) (NNP Bhao)))
                (PRN (: ;)
                  (S
                    (NP (PRP I))
                    (VP (VBD heard)
                      (NP
                        (NP (DT a) (NN voice))
                        (PP (IN across)
                          (NP
                            (NP (DT the) (NN press))
                            (PP (IN of)
                              (NP (CD one)))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBN called)
                                  (PP (IN in)
                                    (NP (JJ vain))))))
                            (: :))))))
                  (: --))
                (`` ``)
                (ADJP (JJ Ho))))))))
    (. !)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
nsubj(fall-4, it-3)
ccomp(saw-2, fall-4)
case(smoke-6, in-5)
nmod:in(banner-11, smoke-6)
cc(smoke-6, and-7)
conj:and(smoke-6, fire-8)
nmod:in(banner-11, fire-8)
det(banner-11, the-10)
dep(fall-4, banner-11)
case(Bhao-14, of-12)
det(Bhao-14, the-13)
nmod:of(banner-11, Bhao-14)
nsubj(heard-17, I-16)
dep(banner-11, heard-17)
det(voice-19, a-18)
dobj(heard-17, voice-19)
case(press-22, across-20)
det(press-22, the-21)
nmod:across(voice-19, press-22)
nsubj(called-26, press-22)
case(one-24, of-23)
nmod:of(press-22, one-24)
ref(press-22, who-25)
acl:relcl(press-22, called-26)
case(vain-28, in-27)
nmod:in(called-26, vain-28)
amod(banner-11, Ho-32)

(ROOT
  (NP
    (NP (NNP Anand) (NNP Rao) (NNP Nimbalkhur))
    (, ,)
    (NP (NN ride))
    (. !)))

compound(Nimbalkhur-3, Anand-1)
compound(Nimbalkhur-3, Rao-2)
root(ROOT-0, Nimbalkhur-3)
appos(Nimbalkhur-3, ride-5)

(ROOT
  (S
    (VP (VB Get)
      (NP
        (NP (NN aid))
        (PP (IN of)
          (NP (NNP Mulhar) (NNP Rao)))))
    (. !)))

root(ROOT-0, Get-1)
dobj(Get-1, aid-2)
case(Rao-5, of-3)
compound(Rao-5, Mulhar-4)
nmod:of(aid-2, Rao-5)

(ROOT
  (S
    (NP (NNP Go))
    (VP (VBZ shame)
      (NP (PRP$ his) (NNS squadrons))
      (PP (IN into)
        (NP (NN fight)))
      (: --)
      (NP
        (NP (DT the) (NNP Bhao))
        (: --)
        (S
          (NP (DT the) (NNP Bhao))
          (VP (VBZ is)
            (VP (VBN slain))))))
    (. !) ('' '')))

nsubj(shame-2, Go-1)
root(ROOT-0, shame-2)
nmod:poss(squadrons-4, his-3)
dobj(shame-2, squadrons-4)
case(fight-6, into-5)
nmod:into(shame-2, fight-6)
det(Bhao-9, the-8)
parataxis(shame-2, Bhao-9)
det(Bhao-12, the-11)
nsubjpass(slain-14, Bhao-12)
auxpass(slain-14, is-13)
parataxis(Bhao-9, slain-14)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Thereat))
        (, ,)
        (PP (IN as)
          (SBAR
            (WHADVP (WRB when))
            (S
              (S
                (NP (DT a) (NN sand-bar))
                (VP (VBZ breaks)
                  (PP (IN in)
                    (NP (JJ clotted) (NN spume)
                      (CC and)
                      (NN spray)))))
              (: --)
              (S
                (SBAR
                  (WHADVP (WRB When))
                  (S
                    (NP
                      (NP (NN rain))
                      (PP (IN of)
                        (NP (JJ later) (NN autumn))))
                    (VP (VBZ sweeps)
                      (NP (DT the) (NNP Jumna) (NN water-head)))))
                (, ,)
                (PP (IN Before)
                  (NP
                    (NP (PRP$ their) (NN charge))
                    (PP (IN from)
                      (NP (NN flank)))))
                (VP (TO to)
                  (VP (VB flank)
                    (NP (PRP$ our) (NN riven) (NNS ranks)))))))))
      (VP (VBD gave)
        (NP (NN way))))
    (: ;)
    (CC But)
    (S
      (PP (IN of)
        (NP
          (NP (DT the) (NNS waters))
          (PP (IN of)
            (NP (DT that) (NN flood)))))
      (NP (DT the) (NNP Jumna) (NNS fords))
      (VP (VBD ran)
        (ADJP (JJ red))))
    (. .)))

nsubj(gave-34, Thereat-1)
mark(breaks-7, as-3)
advmod(breaks-7, when-4)
det(sand-bar-6, a-5)
nsubj(breaks-7, sand-bar-6)
acl(Thereat-1, breaks-7)
case(spume-10, in-8)
amod(spume-10, clotted-9)
nmod:in(breaks-7, spume-10)
cc(spume-10, and-11)
nmod:in(breaks-7, spray-12)
conj:and(spume-10, spray-12)
advmod(sweeps-19, When-14)
nsubj(sweeps-19, rain-15)
case(autumn-18, of-16)
amod(autumn-18, later-17)
nmod:of(rain-15, autumn-18)
advcl(flank-30, sweeps-19)
det(water-head-22, the-20)
compound(water-head-22, Jumna-21)
dobj(sweeps-19, water-head-22)
case(charge-26, Before-24)
nmod:poss(charge-26, their-25)
nmod:before(flank-30, charge-26)
case(flank-28, from-27)
nmod:from(charge-26, flank-28)
mark(flank-30, to-29)
parataxis(breaks-7, flank-30)
nmod:poss(ranks-33, our-31)
compound(ranks-33, riven-32)
dobj(flank-30, ranks-33)
root(ROOT-0, gave-34)
dobj(gave-34, way-35)
cc(gave-34, But-37)
case(waters-40, of-38)
det(waters-40, the-39)
nmod:of(ran-47, waters-40)
case(flood-43, of-41)
det(flood-43, that-42)
nmod:of(waters-40, flood-43)
det(fords-46, the-44)
compound(fords-46, Jumna-45)
nsubj(ran-47, fords-46)
conj:but(gave-34, ran-47)
xcomp(ran-47, red-48)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBN held)
        (PP (IN by)
          (NP
            (NP (NNP Scindia))
            (, ,)
            (NP (PRP$ my) (NN lord))))
        (, ,)
        (ADVP
          (ADVP (RB as) (RB close))
          (SBAR (IN as)
            (S
              (NP (NN man))
              (VP (MD might)
                (VP (VB hold)
                  (S (: ;)
                    (S
                      (NP
                        (NP (DT A) (NNP Soobah))
                        (PP (IN of)
                          (NP (DT the) (NNP Deccan))))
                      (VP (VBZ asks)
                        (NP (DT no) (NN aid)
                          (S
                            (VP (TO to)
                              (VP (VB guard)
                                (NP (PRP$ his) (NN life))))))))
                    (: ;)
                    (CC But)
                    (S
                      (S
                        (NP
                          (NP (NNP Holkar) (POS 's))
                          (NN Horse))
                        (VP (VBD were)
                          (VP (VBG flying))))
                      (, ,)
                      (CC and)
                      (S
                        (NP (PRP$ our) (NN chiefest) (NNS chiefs))
                        (VP (VBD were)
                          (ADJP (JJ cold)))))))))))))
    (, ,)
    (CC And)
    (S
      (PP (IN like)
        (NP
          (NP (DT a) (NN flame))
          (PP (IN among)
            (NP (PRP us)))))
      (VP (VB leapt)
        (NP (DT the) (JJ long) (JJ lean) (JJ Northern) (NN knife))))
    (. .)))

nsubj(held-2, I-1)
nsubj(leapt-49, I-1)
root(ROOT-0, held-2)
case(Scindia-4, by-3)
nmod:by(held-2, Scindia-4)
nmod:poss(lord-7, my-6)
appos(Scindia-4, lord-7)
advmod(close-10, as-9)
advmod(held-2, close-10)
mark(hold-14, as-11)
nsubj(hold-14, man-12)
aux(hold-14, might-13)
advcl(close-10, hold-14)
det(Soobah-17, A-16)
nsubj(asks-21, Soobah-17)
case(Deccan-20, of-18)
det(Deccan-20, the-19)
nmod:of(Soobah-17, Deccan-20)
xcomp(hold-14, asks-21)
neg(aid-23, no-22)
dobj(asks-21, aid-23)
mark(guard-25, to-24)
acl(aid-23, guard-25)
nmod:poss(life-27, his-26)
dobj(guard-25, life-27)
cc(asks-21, But-29)
nmod:poss(Horse-32, Holkar-30)
case(Holkar-30, 's-31)
nsubj(flying-34, Horse-32)
aux(flying-34, were-33)
xcomp(hold-14, flying-34)
conj:but(asks-21, flying-34)
cc(flying-34, and-36)
nmod:poss(chiefs-39, our-37)
compound(chiefs-39, chiefest-38)
nsubj(cold-41, chiefs-39)
cop(cold-41, were-40)
conj:but(asks-21, cold-41)
conj:and(flying-34, cold-41)
cc(held-2, And-43)
case(flame-46, like-44)
det(flame-46, a-45)
nmod:like(leapt-49, flame-46)
case(us-48, among-47)
nmod:among(flame-46, us-48)
conj:and(held-2, leapt-49)
det(knife-54, the-50)
amod(knife-54, long-51)
amod(knife-54, lean-52)
amod(knife-54, Northern-53)
dobj(leapt-49, knife-54)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD held)
        (PP (IN by)
          (NP
            (NP (NNP Scindia))
            (PRN (: --)
              (NP
                (NP (PRP$ my) (NN lance))
                (PP (IN from)
                  (NP (NN butt)))
                (S
                  (VP (TO to)
                    (VP (VB tuft)
                      (SBAR
                        (SINV (VBD was)
                          (NP
                            (NP (NNP dyed))
                            (, ,)
                            (NP
                              (NP (DT The) (NN froth))
                              (PP (IN of)
                                (NP (NN battle)))))
                          (VP
                            (VP (VBN bossed)
                              (NP (DT the) (NN shield)))
                            (CC and)
                            (VP (VBN roped)
                              (NP (DT the) (NN bridle-chain))))))))))
              (: --))
            (SBAR
              (WHNP
                (WHNP (WDT What) (NN time))
                (PP (IN beneath)
                  (NP
                    (NP (PRP$ our) (NNS horses) (POS '))
                    (NNS feet))))
              (S
                (NP (DT a) (NN maiden))
                (VP
                  (VP (VBD rose))
                  (CC and)
                  (VP (VBD cried)))))))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBG clung)
          (PP (TO to)
            (NP (NNP Scindia)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBD turned)
          (NP (DT a) (NN sword-cut))
          (PP (IN from)
            (NP (DT the) (NN twain))))))
    (. .)))

nsubj(held-2, I-1)
nsubj(clung-41, I-1)
root(ROOT-0, held-2)
case(Scindia-4, by-3)
nmod:by(held-2, Scindia-4)
det(time-28, Scindia-4)
nmod:poss(lance-7, my-6)
dep(Scindia-4, lance-7)
case(butt-9, from-8)
nmod:from(lance-7, butt-9)
mark(tuft-11, to-10)
acl(lance-7, tuft-11)
aux(bossed-19, was-12)
nsubj(bossed-19, dyed-13)
nsubj(roped-23, dyed-13)
det(froth-16, The-15)
appos(dyed-13, froth-16)
case(battle-18, of-17)
nmod:of(froth-16, battle-18)
advcl(tuft-11, bossed-19)
det(shield-21, the-20)
dobj(bossed-19, shield-21)
cc(bossed-19, and-22)
advcl(tuft-11, roped-23)
conj:and(bossed-19, roped-23)
det(bridle-chain-25, the-24)
dobj(roped-23, bridle-chain-25)
ref(Scindia-4, What-27)
dobj(rose-36, time-28)
case(feet-33, beneath-29)
nmod:poss(horses-31, our-30)
nmod:poss(feet-33, horses-31)
case(horses-31, '-32)
nmod:beneath(time-28, feet-33)
det(maiden-35, a-34)
nsubj(rose-36, maiden-35)
nsubj(cried-38, maiden-35)
acl:relcl(Scindia-4, rose-36)
cc(rose-36, and-37)
acl:relcl(Scindia-4, cried-38)
conj:and(rose-36, cried-38)
cc(held-2, And-40)
conj:and(held-2, clung-41)
case(Scindia-43, to-42)
nmod:to(clung-41, Scindia-43)
cc(clung-41, and-45)
nsubj(turned-47, I-46)
conj:and(held-2, turned-47)
conj:and(clung-41, turned-47)
det(sword-cut-49, a-48)
dobj(turned-47, sword-cut-49)
case(twain-52, from-50)
det(twain-52, the-51)
nmod:from(turned-47, twain-52)

(ROOT
  (S (-LRB- -LRB-)
    (NP (PRP He))
    (VP (VBP set)
      (NP (DT a) (NN spell))
      (PP (IN upon)
        (NP
          (NP (DT the) (NN maid))
          (PP (IN in)
            (NP (NNS woodlands)))))
      (ADVP
        (ADVP (RB long) (RB ago))
        (, ,)
        (SBAR
          (WHNP
            (NP (DT A) (NN hunter))
            (PP (IN by)
              (NP (DT the) (NNP Tapti) (NNS banks))))
          (S
            (NP (PRP she))
            (VP (VBD gave)
              (NP (PRP him))
              (NP (NN water))
              (ADVP (RB there)))))))
    (: :)
    (S
      (S
        (NP (PRP He))
        (VP (VBD turned)
          (NP (PRP$ her) (NN heart))
          (PP (TO to)
            (NP (NN water)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (VBD followed)
          (PP (TO to)
            (NP (PRP$ her) (NN woe))))))
    (. .)))

nsubj(set-3, He-2)
root(ROOT-0, set-3)
det(spell-5, a-4)
dobj(set-3, spell-5)
case(maid-8, upon-6)
det(maid-8, the-7)
nmod:upon(set-3, maid-8)
case(woodlands-10, in-9)
nmod:in(maid-8, woodlands-10)
advmod(ago-12, long-11)
advmod(set-3, ago-12)
det(hunter-15, A-14)
dobj(gave-21, hunter-15)
case(banks-19, by-16)
det(banks-19, the-17)
compound(banks-19, Tapti-18)
nmod:by(hunter-15, banks-19)
nsubj(gave-21, she-20)
advcl(ago-12, gave-21)
iobj(gave-21, him-22)
dobj(gave-21, water-23)
advmod(gave-21, there-24)
nsubj(turned-27, He-26)
parataxis(set-3, turned-27)
nmod:poss(heart-29, her-28)
dobj(turned-27, heart-29)
case(water-31, to-30)
nmod:to(turned-27, water-31)
cc(turned-27, and-33)
nsubj(followed-35, she-34)
parataxis(set-3, followed-35)
conj:and(turned-27, followed-35)
case(woe-38, to-36)
nmod:poss(woe-38, her-37)
nmod:to(followed-35, woe-38)

(ROOT
  (SBARQ
    (SBAR
      (WHNP (WP What))
      (S
        (NP (NN need))
        (VP (VBD had)
          (NP
            (NP (PRP he))
            (PP (IN of)
              (NP (NNP Lalun)))))))
    (WHNP (WP who))
    (SQ
      (VP (VBD had)
        (NP
          (NP (CD twenty) (NNS maids))
          (ADJP (RB as) (JJ fair)))))
    (. ?) (-RRB- -RRB-)))

dobj(had-3, What-1)
nsubj(had-3, need-2)
dep(had-8, had-3)
dobj(had-3, he-4)
case(Lalun-6, of-5)
nmod:of(he-4, Lalun-6)
nsubj(had-8, who-7)
root(ROOT-0, had-8)
nummod(maids-10, twenty-9)
dobj(had-8, maids-10)
advmod(fair-12, as-11)
amod(maids-10, fair-12)

(ROOT
  (S
    (S
      (NP
        (NP (RB Now))
        (PP (IN in)
          (NP (DT that) (NN hour) (NN strength))))
      (VP (VBD left)
        (NP (PRP$ my) (NN lord))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBZ wrenched)
        (NP (PRP$ his) (NN mare))
        (ADVP (RB aside))))
    (: ;)
    (S
      (NP (PRP He))
      (VP (VBN bound)
        (NP
          (NP (DT the) (NN girl))
          (PP (IN behind)
            (NP (PRP him))))))
    (CC and)
    (S
      (NP (PRP we))
      (VP
        (VP (VBD slashed))
        (CC and)
        (VP (VBD struggled)
          (S
            (ADJP (JJ free))))))
    (. .)))

nsubj(left-6, Now-1)
case(strength-5, in-2)
det(strength-5, that-3)
compound(strength-5, hour-4)
nmod:in(Now-1, strength-5)
root(ROOT-0, left-6)
nmod:poss(lord-8, my-7)
dobj(left-6, lord-8)
nsubj(wrenched-11, he-10)
conj:and(left-6, wrenched-11)
nmod:poss(mare-13, his-12)
dobj(wrenched-11, mare-13)
advmod(wrenched-11, aside-14)
nsubj(bound-17, He-16)
conj:and(left-6, bound-17)
det(girl-19, the-18)
dobj(bound-17, girl-19)
case(him-21, behind-20)
nmod:behind(girl-19, him-21)
cc(left-6, and-22)
nsubj(slashed-24, we-23)
nsubj(struggled-26, we-23)
conj:and(left-6, slashed-24)
cc(slashed-24, and-25)
conj:and(left-6, struggled-26)
conj:and(slashed-24, struggled-26)
xcomp(struggled-26, free-27)

(ROOT
  (S
    (S
      (PP (IN Across)
        (NP
          (NP (DT the) (JJ reeling) (NN wreck))
          (PP (IN of)
            (NP (NN strife)))))
      (NP (PRP we))
      (VP (VBD rode)
        (SBAR (IN as)
          (S
            (NP (NNS shadows))
            (VP (VBP ride)
              (PP (IN From)
                (NP (NNP Paniput)))
              (PP (TO to)
                (NP (NNP Delhi) (NN town))))))))
    (, ,)
    (CC but)
    (SINV
      (ADVP (RB not) (RB alone))
      (VBD were)
      (NP (PRP we)))
    (. .)))

case(wreck-4, Across-1)
det(wreck-4, the-2)
amod(wreck-4, reeling-3)
nmod:across(rode-8, wreck-4)
case(strife-6, of-5)
nmod:of(wreck-4, strife-6)
nsubj(rode-8, we-7)
root(ROOT-0, rode-8)
mark(ride-11, as-9)
nsubj(ride-11, shadows-10)
advcl(rode-8, ride-11)
case(Paniput-13, From-12)
nmod:from(ride-11, Paniput-13)
case(town-16, to-14)
compound(town-16, Delhi-15)
nmod:to(ride-11, town-16)
cc(rode-8, but-18)
dep(alone-20, not-19)
advmod(we-22, alone-20)
dep(we-22, were-21)
conj:but(rode-8, we-22)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (NP
          (NP (NNP Lutuf-Ullah) (NNP Populzai))
          (VP (VBN laid)
            (NP (NN horse))
            (PP (IN upon)
              (NP
                (NP (PRP$ our) (NN track))
                (, ,)
                (NP
                  (NP (DT A) (JJ swine-fed) (NN reiver))
                  (PP (IN of)
                    (NP (DT the) (NNP North)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBN lusted)
                        (PP (IN for)
                          (NP (DT the) (NN maid)))))))))))))
    (: ;)
    (S
      (S
        (NP (PRP I))
        (VP (MD might)
          (VP (VB have)
            (VP (VBN barred)
              (NP (PRP$ his) (NN path))
              (ADVP (RB awhile))))))
      (, ,)
      (CC but)
      (S
        (S
          (NP (NNP Scindia))
          (VP (VBD called)
            (NP (PRP me))
            (ADVP (RB back))))
        (, ,)
        (CC And)
        (S
          (NP (PRP I)
            (PRN (: --)
              (NP (NNP O))))
          (VP (VBZ woe)
            (PP (IN for)
              (NP (NNP Scindia)))))))
    (. !)))

nsubj(Populzai-4, 'T-1)
cop(Populzai-4, was-2)
compound(Populzai-4, Lutuf-Ullah-3)
root(ROOT-0, Populzai-4)
acl(Populzai-4, laid-5)
dobj(laid-5, horse-6)
case(track-9, upon-7)
nmod:poss(track-9, our-8)
nmod:upon(laid-5, track-9)
det(reiver-13, A-11)
amod(reiver-13, swine-fed-12)
appos(track-9, reiver-13)
nsubj(lusted-18, reiver-13)
case(North-16, of-14)
det(North-16, the-15)
nmod:of(reiver-13, North-16)
ref(reiver-13, that-17)
acl:relcl(reiver-13, lusted-18)
case(maid-21, for-19)
det(maid-21, the-20)
nmod:for(lusted-18, maid-21)
nsubj(barred-26, I-23)
aux(barred-26, might-24)
aux(barred-26, have-25)
parataxis(Populzai-4, barred-26)
nmod:poss(path-28, his-27)
dobj(barred-26, path-28)
advmod(barred-26, awhile-29)
cc(barred-26, but-31)
nsubj(called-33, Scindia-32)
parataxis(Populzai-4, called-33)
conj:but(barred-26, called-33)
dobj(called-33, me-34)
advmod(called-33, back-35)
cc(called-33, And-37)
nsubj(woe-41, I-38)
dep(I-38, O-40)
conj:but(barred-26, woe-41)
conj:and(called-33, woe-41)
case(Scindia-43, for-42)
nmod:for(woe-41, Scindia-43)

(ROOT
  (S (: --)
    (NP (PRP I))
    (VP
      (VP (VBD listened))
      (CC and)
      (VP (VBD obeyed)))
    (. .)))

nsubj(listened-3, I-2)
nsubj(obeyed-5, I-2)
root(ROOT-0, listened-3)
cc(listened-3, and-4)
conj:and(listened-3, obeyed-5)

(ROOT
  (S
    (NP (NNP League))
    (PP (IN after)
      (NP (NN league)))
    (NP (DT the) (NNS formless) (NN scrub))
    (VP (VBD took)
      (NP (NN shape)
        (CC and)
        (NN glided))
      (PP (IN by)
        (PRN (: --)
          (NP (NNP League))
          (PP (IN after)
            (NP
              (NP
                (ADVP (NN league))
                (DT the) (JJ white) (NN road))
              (VP (VBN swirled)
                (PP (IN behind)
                  (NP
                    (NP (DT the) (JJ white) (NN mare) (POS 's))
                    (NNS feet))))))
          (: --))
        (NP (NNP League)))
      (PP (IN after)
        (NP
          (NP (NN league))
          (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (NNS leagues))
              (VP (VBD were)
                (VP (VBN done)
                  (PRN (, ,)
                    (S
                      (NP (PRP we))
                      (VP (VBD heard)
                        (NP (DT the) (NNP Populzai))))
                    (, ,))
                  (SBAR
                    (WHADVP (WRB Where)
                      (ADJP
                        (ADJP (JJ sure)
                          (PP (IN as)
                            (NP (NNP Time))))
                        (CC and)
                        (ADJP (JJ swift)
                          (PP (IN as)
                            (NP (NNP Death))))))
                    (S
                      (NP (DT the) (NNS tireless) (NN footfall))
                      (VP (VBD beat)))))))))))
    (. .)))

nsubj(took-7, League-1)
case(league-3, after-2)
nmod:after(took-7, league-3)
det(scrub-6, the-4)
compound(scrub-6, formless-5)
nsubj(took-7, scrub-6)
root(ROOT-0, took-7)
dobj(took-7, shape-8)
cc(shape-8, and-9)
dobj(took-7, glided-10)
conj:and(shape-8, glided-10)
case(League-27, by-11)
dep(League-27, League-13)
case(road-18, after-14)
advmod(road-18, league-15)
det(road-18, the-16)
amod(road-18, white-17)
nmod:after(League-13, road-18)
acl(road-18, swirled-19)
case(feet-25, behind-20)
det(mare-23, the-21)
amod(mare-23, white-22)
nmod:poss(feet-25, mare-23)
case(mare-23, 's-24)
nmod:behind(swirled-19, feet-25)
nmod:by(took-7, League-27)
case(league-29, after-28)
nmod:after(took-7, league-29)
advmod(done-34, when-31)
nsubjpass(done-34, leagues-32)
auxpass(done-34, were-33)
acl:relcl(league-29, done-34)
nsubj(heard-37, we-36)
parataxis(done-34, heard-37)
det(Populzai-39, the-38)
dobj(heard-37, Populzai-39)
advmod(beat-52, Where-41)
dep(Where-41, sure-42)
case(Time-44, as-43)
nmod:as(sure-42, Time-44)
cc(sure-42, and-45)
dep(Where-41, swift-46)
conj:and(sure-42, swift-46)
case(Death-48, as-47)
nmod:as(swift-46, Death-48)
det(footfall-51, the-49)
compound(footfall-51, tireless-50)
nsubj(beat-52, footfall-51)
advcl(done-34, beat-52)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Noon) (POS 's))
        (NN eye))
      (VP (VBD beheld)
        (NP
          (NP (DT that) (NN shame))
          (PP (IN of)
            (NP (NN flight))))))
    (, ,)
    (S
      (NP (DT the) (NNS shadows))
      (VP (VBD fell)))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBD fled)
        (SBAR
          (WHADVP (WRB Where)
            (ADJP (JJ steadfast)
              (PP (IN as)
                (NP (DT the) (NN wheeling) (NN kite)))))
          (S
            (NP (PRP he))
            (VP (VBD followed)
              (PP (IN in)
                (NP (PRP$ our) (NN train))))))))
    (: ;)
    (S
      (NP (DT The) (JJ black) (NN wolf))
      (VP (VBD warred)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP we))
            (VP (VBD had)
              (VP (VBN warred)))))))
    (, ,)
    (S
      (NP (DT the) (NN jackal))
      (VP (VBN mocked)
        (NP (PRP$ our) (NN dead))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (NN terror))
        (VP (VBN born)
          (PP (IN of)
            (NP (NN twilight-tide)))))
      (VP (VBD made)
        (NP (JJ mad) (DT the) (JJ labouring) (NN brain))))
    (. .)))

nmod:poss(eye-3, Noon-1)
case(Noon-1, 's-2)
nsubj(beheld-4, eye-3)
root(ROOT-0, beheld-4)
det(shame-6, that-5)
dobj(beheld-4, shame-6)
case(flight-8, of-7)
nmod:of(shame-6, flight-8)
det(shadows-11, the-10)
nsubj(fell-12, shadows-11)
ccomp(beheld-4, fell-12)
nsubj(fled-15, we-14)
conj:and(beheld-4, fled-15)
advmod(followed-23, Where-16)
dep(Where-16, steadfast-17)
case(kite-21, as-18)
det(kite-21, the-19)
compound(kite-21, wheeling-20)
nmod:as(steadfast-17, kite-21)
nsubj(followed-23, he-22)
advcl(fled-15, followed-23)
case(train-26, in-24)
nmod:poss(train-26, our-25)
nmod:in(followed-23, train-26)
det(wolf-30, The-28)
amod(wolf-30, black-29)
nsubj(warred-31, wolf-30)
conj:and(beheld-4, warred-31)
advmod(warred-35, where-32)
nsubj(warred-35, we-33)
aux(warred-35, had-34)
advcl(warred-31, warred-35)
det(jackal-38, the-37)
nsubj(mocked-39, jackal-38)
conj:and(beheld-4, mocked-39)
nmod:poss(dead-41, our-40)
dobj(mocked-39, dead-41)
cc(beheld-4, And-43)
nsubj(made-48, terror-44)
acl(terror-44, born-45)
case(twilight-tide-47, of-46)
nmod:of(born-45, twilight-tide-47)
conj:and(beheld-4, made-48)
amod(brain-52, mad-49)
det(brain-52, the-50)
amod(brain-52, labouring-51)
dobj(made-48, brain-52)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD gasped)))
    (: :) (: --) (`` ``)
    (S
      (NP (DT A) (NN kingdom))
      (VP (VBZ waits)
        (NP (PRP$ my) (NN lord))))
    (: ;)
    (S
      (NP (PRP$ her) (NN love))
      (VP (VBZ is)
        (PP (CC but)
          (NP (PRP$ her) (JJ own)))))
    (. .)))

nsubj(gasped-2, I-1)
root(ROOT-0, gasped-2)
det(kingdom-7, A-6)
nsubj(waits-8, kingdom-7)
dep(gasped-2, waits-8)
nmod:poss(lord-10, my-9)
dobj(waits-8, lord-10)
nmod:poss(love-13, her-12)
nsubj(own-17, love-13)
cop(own-17, is-14)
case(own-17, but-15)
nmod:poss(own-17, her-16)
parataxis(gasped-2, own-17)

(ROOT
  (S
    (S
      (NP (DT A) (NN day))
      (VP (MD shall)
        (VP (VB mar))))
    (, ,)
    (NP (DT a) (NN day))
    (VP (MD shall)
      (VP
        (VP (VB cure)
          (PP (IN for)
            (NP (PRP her))))
        (, ,)
        (CC but)
        (VP
          (NP (WP what))
          (PP (IN for)
            (NP (PRP thee))))))
    (. ?)))

det(day-2, A-1)
nsubj(mar-4, day-2)
aux(mar-4, shall-3)
ccomp(cure-9, mar-4)
det(day-7, a-6)
nsubj(cure-9, day-7)
aux(cure-9, shall-8)
root(ROOT-0, cure-9)
case(her-11, for-10)
nmod:for(cure-9, her-11)
cc(cure-9, but-13)
conj:but(cure-9, what-14)
case(thee-16, for-15)
nmod:for(what-14, thee-16)

(ROOT
  (S
    (S
      (NP (NNP Cut))
      (VP (VBZ loose)
        (NP (DT the) (NN girl))))
    (: :)
    (S
      (NP (PRP he))
      (VP (VBZ follows)
        (ADVP (RB fast))))
    (. .)))

nsubj(loose-2, Cut-1)
root(ROOT-0, loose-2)
det(girl-4, the-3)
dobj(loose-2, girl-4)
nsubj(follows-7, he-6)
parataxis(loose-2, follows-7)
advmod(follows-7, fast-8)

(ROOT
  (S
    (NP (NNP Cut))
    (VP
      (VP (VBZ loose))
      (CC and)
      (VP (VBP ride)
        (ADVP (RB alone))))
    (. !) ('' '')))

nsubj(loose-2, Cut-1)
nsubj(ride-4, Cut-1)
root(ROOT-0, loose-2)
cc(loose-2, and-3)
conj:and(loose-2, ride-4)
advmod(ride-4, alone-5)

(ROOT
  (S (RB Then)
    (S
      (NP (NNP Scindia))
      (VP (`` `) (VBP twixt)
        (NP (PRP$ his) (JJ blistered) (NNS lips))))
    (: :) (: --) (`` ``)
    (S
      (NP
        (NP (NNP My) (NNP Queens) (POS '))
        (NN Queen))
      (VP (MD shall)
        (NP (PRP she))
        (S
          (VP (VB be)))))
    (. !)))

advmod(twixt-4, Then-1)
nsubj(twixt-4, Scindia-2)
root(ROOT-0, twixt-4)
nmod:poss(lips-7, his-5)
amod(lips-7, blistered-6)
dobj(twixt-4, lips-7)
compound(Queens-12, My-11)
nmod:poss(Queen-14, Queens-12)
case(Queens-12, '-13)
nsubj(shall-15, Queen-14)
parataxis(twixt-4, shall-15)
dobj(shall-15, she-16)
dep(shall-15, be-17)

(ROOT
  (S (`` ``)
    (PP (IN Of)
      (NP
        (NP (DT all))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD ate)
              (NP (PRP$ my) (NN bread))
              (NP (JJ last) (NN night)))))))
    (NP (NN 't))
    (VP (VBD was)
      (NP (PRP she))
      (ADVP (RB alone))
      (SBAR (IN that)
        (S
          (VP (VBD came)
            (S
              (VP (TO To)
                (VP
                  (VP (VB seek)
                    (NP
                      (NP (PRP$ her) (NN love))
                      (PP (IN between)
                        (NP (DT the) (NNS spears)))))
                  (CC and)
                  (VP (VB find)
                    (NP (PRP$ her) (NN crown))
                    (ADVP (RB therein))))))))))
    (. !)))

case(all-3, Of-2)
nsubj(ate-5, all-3)
nmod:of(she-12, all-3)
ref(all-3, who-4)
acl:relcl(all-3, ate-5)
nmod:poss(bread-7, my-6)
dobj(ate-5, bread-7)
amod(night-9, last-8)
nmod:tmod(ate-5, night-9)
nsubj(she-12, 't-10)
cop(she-12, was-11)
root(ROOT-0, she-12)
advmod(she-12, alone-13)
mark(came-15, that-14)
ccomp(she-12, came-15)
mark(seek-17, To-16)
xcomp(came-15, seek-17)
nmod:poss(love-19, her-18)
dobj(seek-17, love-19)
case(spears-22, between-20)
det(spears-22, the-21)
nmod:between(love-19, spears-22)
cc(seek-17, and-23)
xcomp(came-15, find-24)
conj:and(seek-17, find-24)
nmod:poss(crown-26, her-25)
dobj(find-24, crown-26)
advmod(find-24, therein-27)

(ROOT
  (S
    (NP (CD One) (NN shame))
    (VP (VBZ is)
      (NP
        (NP (NN mine) (NN to-day))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBP need)
              (NP
                (NP (DT the) (NN weight))
                (PP (IN of)
                  (NP (JJ double) (NN shame)))))))))
    (. ?)))

nummod(shame-2, One-1)
nsubj(to-day-5, shame-2)
cop(to-day-5, is-3)
compound(to-day-5, mine-4)
root(ROOT-0, to-day-5)
nsubj(need-8, to-day-5)
ref(to-day-5, what-7)
acl:relcl(to-day-5, need-8)
det(weight-10, the-9)
dobj(need-8, weight-10)
case(shame-13, of-11)
amod(shame-13, double-12)
nmod:of(weight-10, shame-13)

(ROOT
  (S
    (SBAR (IN If) (RB once)
      (S
        (NP (PRP we))
        (VP (VBP reach)
          (NP (DT the) (NNP Delhi) (NN gate)))))
    (, ,)
    (SBAR (IN though)
      (S
        (NP (DT all))
        (VP (VB be)
          (VP (VBN lost)))))
    (, ,)
    (NP (PRP I))
    (VP (VB win))
    (. !) ('' '')))

mark(reach-4, If-1)
advmod(reach-4, once-2)
nsubj(reach-4, we-3)
advcl(win-15, reach-4)
det(gate-7, the-5)
compound(gate-7, Delhi-6)
dobj(reach-4, gate-7)
mark(lost-12, though-9)
nsubjpass(lost-12, all-10)
auxpass(lost-12, be-11)
advcl(win-15, lost-12)
nsubj(win-15, I-14)
root(ROOT-0, win-15)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD rode)))
    (: --)
    (S
      (NP (DT the) (JJ white) (NN mare))
      (VP (VBD failed)))
    (: --)
    (S
      (NP (PRP her))
      (VP (VBP trot)
        (SBAR
          (S
            (NP (DT a) (JJ staggering) (NN stumble))
            (VP (VBD grew)))))
      (, ,))
    (: --)
    (S
      (NP
        (NP (DT The) (NN cooking-smoke))
        (PP (IN of)
          (ADVP (RB even))))
      (VP
        (VP (VBD rose))
        (CC and)
        (VP (VBN weltered)
          (CC and)
          (VBN hung)
          (ADVP (JJ low)))))
    (: ;)
    (S (CC And)
      (ADVP (RB still))
      (NP (PRP we))
      (VP (VBD heard)
        (NP (DT the) (NNP Populzai))))
    (CC and)
    (ADVP (RB still))
    (S
      (S
        (NP (PRP we))
        (VP (VBN strained)
          (ADVP (RB anew))))
      (, ,)
      (CC And)
      (S
        (S
          (NP (NNP Delhi) (NN town))
          (VP (VBD was)
            (ADJP (RB very) (JJ near))))
        (, ,)
        (CC but)
        (S
          (NP (NNP nearer))
          (VP (VBD was)
            (NP (DT the) (NN foe))))))
    (. .)))

nsubj(rode-2, We-1)
root(ROOT-0, rode-2)
det(mare-6, the-4)
amod(mare-6, white-5)
nsubj(failed-7, mare-6)
conj:and(rode-2, failed-7)
nsubj(trot-10, her-9)
conj:and(rode-2, trot-10)
det(stumble-13, a-11)
amod(stumble-13, staggering-12)
nsubj(grew-14, stumble-13)
ccomp(trot-10, grew-14)
det(cooking-smoke-18, The-17)
nsubj(rose-21, cooking-smoke-18)
nsubj(weltered-23, cooking-smoke-18)
case(even-20, of-19)
acl(cooking-smoke-18, even-20)
conj:and(rode-2, rose-21)
cc(rose-21, and-22)
conj:and(rode-2, weltered-23)
conj:and(rose-21, weltered-23)
cc(weltered-23, and-24)
conj:and(rose-21, hung-25)
conj:and(weltered-23, hung-25)
advmod(weltered-23, low-26)
cc(heard-31, And-28)
advmod(heard-31, still-29)
nsubj(heard-31, we-30)
conj:and(rode-2, heard-31)
det(Populzai-33, the-32)
dobj(heard-31, Populzai-33)
cc(rode-2, and-34)
advmod(strained-37, still-35)
nsubj(strained-37, we-36)
conj:and(rode-2, strained-37)
advmod(strained-37, anew-38)
cc(strained-37, And-40)
compound(town-42, Delhi-41)
nsubj(near-45, town-42)
cop(near-45, was-43)
advmod(near-45, very-44)
conj:and(rode-2, near-45)
conj:and(strained-37, near-45)
cc(near-45, but-47)
nsubj(foe-51, nearer-48)
cop(foe-51, was-49)
det(foe-51, the-50)
conj:and(strained-37, foe-51)
conj:but(near-45, foe-51)

(ROOT
  (S
    (ADVP (RB Yea))
    (, ,)
    (NP (NNP Delhi) (NN town))
    (VP
      (VP (VBD was)
        (ADJP (RB very) (JJ near)
          (SBAR (IN when)
            (S
              (NP (NNP Lalun))
              (VP (VBN whispered)))
            (: :))))
      (: --) (`` ``)
      (VP (VBP Slay)))
    (. !)))

advmod(near-7, Yea-1)
compound(town-4, Delhi-3)
nsubj(near-7, town-4)
cop(near-7, was-5)
advmod(near-7, very-6)
root(ROOT-0, near-7)
mark(whispered-10, when-8)
nsubj(whispered-10, Lalun-9)
ccomp(near-7, whispered-10)
dep(near-7, Slay-14)

(ROOT
  (S
    (NP
      (NP (NNP Lord))
      (PP (IN of)
        (NP
          (NP (PRP$ my) (NN life))
          (, ,)
          (NP (DT the) (NN mare)))))
    (VP (VBZ sinks)
      (ADVP (RB fast))
      (: --)
      (S
        (VP
          (VP (VB stab)
            (ADJP (JJ deep)))
          (CC and)
          (VP (VB let)
            (S
              (NP (PRP me))
              (VP (VB die)))))))
    (. !) ('' '')))

nsubj(sinks-8, Lord-1)
case(life-4, of-2)
nmod:poss(life-4, my-3)
nmod:of(Lord-1, life-4)
det(mare-7, the-6)
appos(life-4, mare-7)
root(ROOT-0, sinks-8)
advmod(sinks-8, fast-9)
ccomp(sinks-8, stab-11)
xcomp(stab-11, deep-12)
cc(stab-11, and-13)
ccomp(sinks-8, let-14)
conj:and(stab-11, let-14)
nsubj(die-16, me-15)
ccomp(let-14, die-16)

(ROOT
  (S (CC But)
    (S
      (S
        (NP (NNP Scindia))
        (VP (MD would) (RB not)))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN maid))
        (VP (VBD tore)
          (ADJP (JJ free)
            (CC and)
            (JJ flung))
          (ADVP (RB away)))))
    (, ,)
    (CC And)
    (S
      (VP (VBG turning)
        (SBAR (IN as)
          (S
            (NP (PRP she))
            (VP (VBD fell)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBD heard)
                    (NP (DT the) (JJ clattering) (NNP Populzai))))))))))
    (. .)))

cc(would-3, But-1)
nsubj(would-3, Scindia-2)
nsubj(turning-16, Scindia-2)
root(ROOT-0, would-3)
neg(would-3, not-4)
cc(would-3, and-6)
det(maid-8, the-7)
nsubj(tore-9, maid-8)
conj:and(would-3, tore-9)
xcomp(tore-9, free-10)
cc(free-10, and-11)
xcomp(tore-9, flung-12)
conj:and(free-10, flung-12)
advmod(tore-9, away-13)
cc(would-3, And-15)
conj:and(would-3, turning-16)
mark(fell-19, as-17)
nsubj(fell-19, she-18)
advcl(turning-16, fell-19)
nsubj(heard-21, we-20)
ccomp(fell-19, heard-21)
det(Populzai-24, the-22)
amod(Populzai-24, clattering-23)
dobj(heard-21, Populzai-24)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (NNP Scindia))
      (VP (VBD checked)
        (NP
          (NP (DT the) (VBG gasping) (NN mare))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBN rocked)
                (CC and)
                (VBN groaned)
                (PP (IN for)
                  (NP (NN breath)))))))))
    (, ,)
    (CC And)
    (S
      (S
        (VP
          (VP (VBN wheeled)
            (PP (TO to)
              (NP (NN charge))))
          (CC and)
          (VP (VBD plunged)
            (NP
              (NP
                (NP (DT the) (NN knife))
                (NP (DT a) (NN hand) (POS 's)))
              (: -)
              (NP
                (NP (NN breadth))
                (PP (IN in)
                  (NP (PRP$ her) (NN side))))
              (: --)
              (NP
                (NP (DT The) (NN hunter))
                (CC and)
                (NP (DT the) (NN hunted)))))))
      (VP
        (VP (VBP know)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT that) (JJ last) (NN pause))
              (VP (VBZ is)
                (NP
                  (NP (NN death))
                  (: --)
                  (S
                    (S
                      (NP (DT The) (NN blood))
                      (VP (VBD had)
                        (VP (VBN chilled)
                          (PP (IN about)
                            (NP (PRP$ her) (NN heart))))))
                    (, ,)
                    (NP (PRP she))
                    (VP
                      (VP (VBZ reared))
                      (CC and)
                      (VP (VBD fell)))))))))
        (CC and)
        (VP (VBD died))))
    (. .)))

advmod(checked-3, Then-1)
nsubj(checked-3, Scindia-2)
root(ROOT-0, checked-3)
det(mare-6, the-4)
amod(mare-6, gasping-5)
dobj(checked-3, mare-6)
nsubj(rocked-8, mare-6)
nsubj(groaned-10, mare-6)
ref(mare-6, that-7)
acl:relcl(mare-6, rocked-8)
cc(rocked-8, and-9)
acl:relcl(mare-6, groaned-10)
conj:and(rocked-8, groaned-10)
case(breath-12, for-11)
nmod:for(rocked-8, breath-12)
cc(checked-3, And-14)
csubj(know-36, wheeled-15)
csubj(died-57, wheeled-15)
case(charge-17, to-16)
nmod:to(wheeled-15, charge-17)
cc(wheeled-15, and-18)
conj:and(wheeled-15, plunged-19)
csubj(know-36, plunged-19)
det(knife-21, the-20)
dobj(plunged-19, knife-21)
det(hand-23, a-22)
nmod:poss(knife-21, hand-23)
case(hand-23, 's-24)
dep(knife-21, breadth-26)
case(side-29, in-27)
nmod:poss(side-29, her-28)
nmod:in(breadth-26, side-29)
det(hunter-32, The-31)
dep(knife-21, hunter-32)
cc(hunter-32, and-33)
det(hunted-35, the-34)
dep(knife-21, hunted-35)
conj:and(hunter-32, hunted-35)
conj:and(checked-3, know-36)
advmod(death-42, how-37)
det(pause-40, that-38)
amod(pause-40, last-39)
nsubj(death-42, pause-40)
cop(death-42, is-41)
ccomp(know-36, death-42)
det(blood-45, The-44)
nsubj(chilled-47, blood-45)
aux(chilled-47, had-46)
ccomp(reared-53, chilled-47)
case(heart-50, about-48)
nmod:poss(heart-50, her-49)
nmod:about(chilled-47, heart-50)
nsubj(reared-53, she-52)
nsubj(fell-55, she-52)
appos(death-42, reared-53)
cc(reared-53, and-54)
appos(death-42, fell-55)
conj:and(reared-53, fell-55)
cc(know-36, and-56)
conj:and(checked-3, died-57)
conj:and(know-36, died-57)

(ROOT
  (S
    (NP (PRP$ Our) (NNS Gods))
    (VP (VBD were)
      (ADJP (JJ kind)))
    (. .)))

nmod:poss(Gods-2, Our-1)
nsubj(kind-4, Gods-2)
cop(kind-4, were-3)
root(ROOT-0, kind-4)

(ROOT
  (S
    (S
      (SBAR (IN Before)
        (S
          (NP (PRP he))
          (VP (VBD heard)
            (SBAR
              (S
                (NP
                  (NP (DT the) (NN maiden) (POS 's))
                  (NNS piteous))
                (VP (VBP scream)
                  (NP (DT A) (NN log))
                  (PP (IN upon)
                    (NP (DT the) (NNP Delhi) (NN road)))
                  (, ,)
                  (PP (IN beneath)
                    (NP (DT the) (NN mare)))))))))
      (NP (PRP he))
      (VP (VBD lay)))
    (: --)
    (S
      (NP
        (NP (NNP Lost) (NNP mistress))
        (CC and)
        (NP (VBN lost) (NN battle)))
      (VP (VBD passed)
        (SBAR (IN before)
          (S
            (NP (PRP him))
            (VP (VBP like)
              (NP (DT a) (NN dream)))))))
    (: ;)
    (S
      (NP (DT The) (NNS darkness))
      (VP (VBD closed)
        (PP (IN about)
          (NP (PRP$ his) (NNS eyes)))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBD bore)
        (NP (PRP$ my) (NN King))
        (ADVP (RB away))))
    (. .)))

mark(heard-3, Before-1)
nsubj(heard-3, he-2)
advcl(lay-20, heard-3)
det(maiden-5, the-4)
nmod:poss(piteous-7, maiden-5)
case(maiden-5, 's-6)
nsubj(scream-8, piteous-7)
ccomp(heard-3, scream-8)
det(log-10, A-9)
dobj(scream-8, log-10)
case(road-14, upon-11)
det(road-14, the-12)
compound(road-14, Delhi-13)
nmod:upon(scream-8, road-14)
case(mare-18, beneath-16)
det(mare-18, the-17)
nmod:beneath(scream-8, mare-18)
nsubj(lay-20, he-19)
root(ROOT-0, lay-20)
compound(mistress-23, Lost-22)
nsubj(passed-27, mistress-23)
cc(mistress-23, and-24)
amod(battle-26, lost-25)
conj:and(mistress-23, battle-26)
nsubj(passed-27, battle-26)
parataxis(lay-20, passed-27)
mark(like-30, before-28)
nsubj(like-30, him-29)
advcl(passed-27, like-30)
det(dream-32, a-31)
dobj(like-30, dream-32)
det(darkness-35, The-34)
nsubj(closed-36, darkness-35)
parataxis(lay-20, closed-36)
case(eyes-39, about-37)
nmod:poss(eyes-39, his-38)
nmod:about(closed-36, eyes-39)
nsubj(bore-42, I-41)
parataxis(lay-20, bore-42)
nmod:poss(King-44, my-43)
dobj(bore-42, King-44)
advmod(bore-42, away-45)

(ROOT
  (S
    (NP
      (NP (DT THE) (NN BALLAD))
      (PP (IN OF)
        (NP (NNP BOH) (NNP DA) (NNP THONE))))
    (VP (VBD _)
      (SBAR
        (S
          (NP (DT This))
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN ballad))
              (PP (IN of)
                (NP
                  (NP (NNP Boh) (NNP Da) (NNP Thone))
                  (, ,)
                  (NP
                    (NP (NNP Erst) (DT a) (NNP Pretender))
                    (PP (TO to)
                      (NP
                        (NP
                          (NP (NNP Theebaw) (POS 's))
                          (NN throne))
                        (, ,)
                        (SBAR
                          (WHNP (WP Who))
                          (S
                            (VP (VBN harried)
                              (NP
                                (NP (DT the) (NN district))
                                (PP (IN of)
                                  (NP (NNP Alalone)))))))))))))
            (: :)
            (SBAR
              (WHADVP (WRB How))
              (S
                (NP (PRP he))
                (VP (VBD met)
                  (PP (IN with)
                    (NP
                      (NP (PRP$ his) (NN fate))
                      (CC and)
                      (NP (DT the) (NNP V.P.P.))))
                  (SBAR
                    (SBAR
                      (X (SYM *))
                      (S
                        (PP (IN At)
                          (NP
                            (NP (DT the) (NN hand))
                            (PP (IN of)
                              (NP
                                (NP (NNP Harendra) (NNP Mukerji))
                                (, ,)
                                (NP (NNP Senior) (NNP Gomashta))))))
                        (, ,)
                        (NP (NNP G.B.T.) (NNP _))
                        (VP (VBD _)
                          (SBAR
                            (FRAG
                              (X (SYM *))
                              (NP (NNP Value) (NNP Payable) (NNP Parcels) (NNP Post)))))))
                    (: :)
                    (SBAR
                      (WHPP (IN in)
                        (WHNP (WDT which)))
                      (S
                        (NP (DT the) (NN Government))
                        (VP (VBZ collects)
                          (NP
                            (NP (DT the) (NN money))
                            (PP (IN for)
                              (NP (DT the) (NN sender)))))))))))))))
    (. .)))

det(BALLAD-2, THE-1)
nsubj(_-7, BALLAD-2)
case(THONE-6, OF-3)
compound(THONE-6, BOH-4)
compound(THONE-6, DA-5)
nmod:of(BALLAD-2, THONE-6)
root(ROOT-0, _-7)
nsubj(ballad-11, This-8)
cop(ballad-11, is-9)
det(ballad-11, the-10)
ccomp(_-7, ballad-11)
case(Thone-15, of-12)
compound(Thone-15, Boh-13)
compound(Thone-15, Da-14)
nmod:of(ballad-11, Thone-15)
compound(Pretender-19, Erst-17)
det(Pretender-19, a-18)
appos(Thone-15, Pretender-19)
case(throne-23, to-20)
nmod:poss(throne-23, Theebaw-21)
case(Theebaw-21, 's-22)
nmod:to(Pretender-19, throne-23)
nsubj(harried-26, throne-23)
ref(throne-23, Who-25)
acl:relcl(throne-23, harried-26)
det(district-28, the-27)
dobj(harried-26, district-28)
case(Alalone-30, of-29)
nmod:of(district-28, Alalone-30)
advmod(met-34, How-32)
nsubj(met-34, he-33)
parataxis(ballad-11, met-34)
case(fate-37, with-35)
nmod:poss(fate-37, his-36)
nmod:with(met-34, fate-37)
cc(fate-37, and-38)
det(V.P.P.-40, the-39)
nmod:with(met-34, V.P.P.-40)
conj:and(fate-37, V.P.P.-40)
dep(_-54, *-41)
case(hand-44, At-42)
det(hand-44, the-43)
nmod:at(_-54, hand-44)
case(Mukerji-47, of-45)
compound(Mukerji-47, Harendra-46)
nmod:of(hand-44, Mukerji-47)
compound(Gomashta-50, Senior-49)
appos(Mukerji-47, Gomashta-50)
compound(_-53, G.B.T.-52)
nsubj(_-54, _-53)
dep(met-34, _-54)
dep(Post-59, *-55)
compound(Post-59, Value-56)
compound(Post-59, Payable-57)
compound(Post-59, Parcels-58)
dep(_-54, Post-59)
case(which-62, in-61)
nmod:in(collects-65, which-62)
det(Government-64, the-63)
nsubj(collects-65, Government-64)
dep(_-54, collects-65)
det(money-67, the-66)
dobj(collects-65, money-67)
case(sender-70, for-68)
det(sender-70, the-69)
nmod:for(money-67, sender-70)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP Boh) (NNP Da) (NNP Thone))
      (VP (VBD was)
        (ADJP
          (NP (DT a) (NN warrior))
          (JJ bold))))
    (: :)
    (S
      (S
        (NP
          (NP (PRP$ His) (NN sword))
          (CC and)
          (NP (PRP$ his) (NN Snider)))
        (VP (VBD were)
          (VP (VBN bossed)
            (PP (IN with)
              (NP (NN gold))))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP (DT the) (NNP Peacock) (NN Banner))
          (SBAR
            (S
              (NP (PRP$ his) (NN henchmen))
              (VP (VBD bore)))))
        (VP
          (VP (VBD Was)
            (ADJP (JJ stiff))
            (PP (IN with)
              (NP (NN bullion))))
          (, ,)
          (CC but)
          (VP (VBD stiffer)
            (PP (IN with)
              (NP (NNP gore)))))))
    (. .)))

compound(Thone-4, _-1)
compound(Thone-4, Boh-2)
compound(Thone-4, Da-3)
nsubj(bold-8, Thone-4)
cop(bold-8, was-5)
det(warrior-7, a-6)
nmod:npmod(bold-8, warrior-7)
root(ROOT-0, bold-8)
nmod:poss(sword-11, His-10)
nsubjpass(bossed-16, sword-11)
cc(sword-11, and-12)
nmod:poss(Snider-14, his-13)
conj:and(sword-11, Snider-14)
nsubjpass(bossed-16, Snider-14)
auxpass(bossed-16, were-15)
parataxis(bold-8, bossed-16)
case(gold-18, with-17)
nmod:with(bossed-16, gold-18)
cc(bossed-16, And-20)
det(Banner-23, the-21)
compound(Banner-23, Peacock-22)
nsubj(stiff-28, Banner-23)
nsubj(stiffer-33, Banner-23)
nmod:poss(henchmen-25, his-24)
nsubj(bore-26, henchmen-25)
acl:relcl(Banner-23, bore-26)
cop(stiff-28, Was-27)
parataxis(bold-8, stiff-28)
conj:and(bossed-16, stiff-28)
case(bullion-30, with-29)
nmod:with(stiff-28, bullion-30)
cc(stiff-28, but-32)
conj:and(bossed-16, stiffer-33)
conj:but(stiff-28, stiffer-33)
case(gore-35, with-34)
nmod:with(stiffer-33, gore-35)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD shot)
        (PP (IN at)
          (NP (DT the) (JJ strong)))))
    (CC and)
    (S
      (S
        (NP (PRP he))
        (VP (VBD slashed)
          (PP (IN at)
            (NP (DT the)
              (ADJP (JJ weak)
                (PP (IN From)
                  (NP (DT the) (NNP Salween))))
              (NN scrub)))
          (PP (TO to)
            (NP (DT the) (NNP Chindwin) (NN teak)))))
      (: :)
      (S
        (NP (PRP He))
        (VP (VBD crucified)
          (ADJP (JJ noble))))
      (, ,)
      (S
        (NP (PRP he))
        (VP (VBD sacrificed)
          (VP (VB mean))))
      (, ,)
      (S
        (NP (PRP He))
        (VP (VBD filled)
          (NP (JJ old) (NNS ladies))
          (PP (IN with)
            (NP (NN kerosene)))))
      (: :)
      (S
        (SBAR (IN While)
          (S
            (PP (IN over)
              (NP (DT the) (NN water)))
            (NP (DT the) (NNS papers))
            (VP (VBD cried))))
        (, ,) (`` ``)
        (NP (DT The) (NN patriot))
        (VP (VBZ fights)
          (PP (IN for)
            (NP (PRP$ his) (NN countryside))))))
    (. !) ('' '')))

nsubj(shot-2, He-1)
root(ROOT-0, shot-2)
case(strong-5, at-3)
det(strong-5, the-4)
nmod:at(shot-2, strong-5)
cc(shot-2, and-6)
nsubj(slashed-8, he-7)
conj:and(shot-2, slashed-8)
case(scrub-15, at-9)
det(scrub-15, the-10)
amod(scrub-15, weak-11)
case(Salween-14, From-12)
det(Salween-14, the-13)
nmod:from(weak-11, Salween-14)
nmod:at(slashed-8, scrub-15)
case(teak-19, to-16)
det(teak-19, the-17)
compound(teak-19, Chindwin-18)
nmod:to(slashed-8, teak-19)
nsubj(crucified-22, He-21)
parataxis(slashed-8, crucified-22)
xcomp(crucified-22, noble-23)
nsubj(sacrificed-26, he-25)
parataxis(slashed-8, sacrificed-26)
xcomp(sacrificed-26, mean-27)
nsubj(filled-30, He-29)
parataxis(slashed-8, filled-30)
amod(ladies-32, old-31)
dobj(filled-30, ladies-32)
case(kerosene-34, with-33)
nmod:with(filled-30, kerosene-34)
mark(cried-42, While-36)
case(water-39, over-37)
det(water-39, the-38)
nmod:over(cried-42, water-39)
det(papers-41, the-40)
nsubj(cried-42, papers-41)
advcl(fights-47, cried-42)
det(patriot-46, The-45)
nsubj(fights-47, patriot-46)
parataxis(slashed-8, fights-47)
case(countryside-50, for-48)
nmod:poss(countryside-50, his-49)
nmod:for(fights-47, countryside-50)

(ROOT
  (S (CC But)
    (ADVP (RB little))
    (NP (PRP they))
    (VP (VBD cared)
      (PP (IN for)
        (NP
          (NP (DT the) (JJ Native) (NNP Press))
          (, ,)
          (NP
            (NP (DT The)
              (ADJP (JJ worn) (JJ white))
              (NNS soldiers))
            (PP (IN in)
              (NP (NNP Khaki) (NN dress))))
          (, ,)
          (SBAR
            (WHNP (WP Who))
            (S
              (VP
                (VP (VBN tramped)
                  (PP (IN through)
                    (NP (DT the) (NN jungle))))
                (CC and)
                (VP (VBN camped)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN byre))
                      (, ,)
                      (SBAR
                        (WHNP (WP Who))
                        (S
                          (VP (VBD died)
                            (PP (IN in)
                              (NP (DT the) (NN swamp)))))))))
                (CC and)
                (VP (VBD were)
                  (VP (VBN tombed)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN mire))
                        (, ,)
                        (SBAR
                          (WHNP (WP Who))
                          (S
                            (VP (VBD gave)
                              (PRT (RP up))
                              (NP (PRP$ their) (NNS lives))
                              (, ,)
                              (PP (IN at)
                                (NP
                                  (NP (DT the) (NN Queen) (POS 's))
                                  (NN Command)))
                              (, ,)
                              (PP (IN For)
                                (NP
                                  (NP
                                    (NP (DT the) (NN Pride))
                                    (PP (IN of)
                                      (NP (PRP$ their) (NN Race))))
                                  (CC and)
                                  (NP
                                    (NP (DT the) (NN Peace))
                                    (PP (IN of)
                                      (NP (DT the) (NNP Land)))))))))))))))))))
    (. .)))

cc(cared-4, But-1)
advmod(cared-4, little-2)
nsubj(cared-4, they-3)
root(ROOT-0, cared-4)
case(Press-8, for-5)
det(Press-8, the-6)
amod(Press-8, Native-7)
nmod:for(cared-4, Press-8)
nsubj(tramped-19, Press-8)
nsubj(camped-24, Press-8)
nsubjpass(tombed-36, Press-8)
det(soldiers-13, The-10)
amod(white-12, worn-11)
amod(soldiers-13, white-12)
appos(Press-8, soldiers-13)
case(dress-16, in-14)
compound(dress-16, Khaki-15)
nmod:in(soldiers-13, dress-16)
ref(Press-8, Who-18)
acl:relcl(Press-8, tramped-19)
case(jungle-22, through-20)
det(jungle-22, the-21)
nmod:through(tramped-19, jungle-22)
cc(tramped-19, and-23)
acl:relcl(Press-8, camped-24)
conj:and(tramped-19, camped-24)
case(byre-27, in-25)
det(byre-27, the-26)
nmod:in(camped-24, byre-27)
nsubj(died-30, byre-27)
ref(byre-27, Who-29)
acl:relcl(byre-27, died-30)
case(swamp-33, in-31)
det(swamp-33, the-32)
nmod:in(died-30, swamp-33)
cc(tramped-19, and-34)
auxpass(tombed-36, were-35)
acl:relcl(Press-8, tombed-36)
conj:and(tramped-19, tombed-36)
case(mire-39, in-37)
det(mire-39, the-38)
nmod:in(tombed-36, mire-39)
nsubj(gave-42, mire-39)
ref(mire-39, Who-41)
acl:relcl(mire-39, gave-42)
compound:prt(gave-42, up-43)
nmod:poss(lives-45, their-44)
dobj(gave-42, lives-45)
case(Command-51, at-47)
det(Queen-49, the-48)
nmod:poss(Command-51, Queen-49)
case(Queen-49, 's-50)
nmod:at(gave-42, Command-51)
case(Pride-55, For-53)
det(Pride-55, the-54)
nmod:for(gave-42, Pride-55)
case(Race-58, of-56)
nmod:poss(Race-58, their-57)
nmod:of(Pride-55, Race-58)
cc(Pride-55, and-59)
det(Peace-61, the-60)
nmod:for(gave-42, Peace-61)
conj:and(Pride-55, Peace-61)
case(Land-64, of-62)
det(Land-64, the-63)
nmod:of(Peace-61, Land-64)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S
      (NP
        (NP (JJ first))
        (PP (IN of)
          (NP
            (NP (DT the) (NN foemen))
            (PP (IN of)
              (NP (NNP Boh) (NNP Da) (NNP Thone))))))
      (VP (VBD Was)
        (NP
          (NP (NNP Captain) (NNP O'Neil))
          (PP (IN of)
            (NP (DT the) (`` ``) (NNP Black) (NNP Tyrone) ('' ''))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP$ his))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN Company))
          (, ,)
          (ADJP (RB seventy) (JJ strong))
          (, ,)
          (SBAR
            (WHNP (WP Who))
            (S
              (VP (VBD hustled)
                (NP (DT that) (JJ dissolute) (NNP Chief))
                (ADVP (RB along))))))))
    (. .)))

advmod(O'Neil-13, Now-1)
nsubj(O'Neil-13, first-3)
case(foemen-6, of-4)
det(foemen-6, the-5)
nmod:of(first-3, foemen-6)
case(Thone-10, of-7)
compound(Thone-10, Boh-8)
compound(Thone-10, Da-9)
nmod:of(foemen-6, Thone-10)
cop(O'Neil-13, Was-11)
compound(O'Neil-13, Captain-12)
root(ROOT-0, O'Neil-13)
case(Tyrone-18, of-14)
det(Tyrone-18, the-15)
compound(Tyrone-18, Black-17)
nmod:of(O'Neil-13, Tyrone-18)
cc(O'Neil-13, And-21)
nsubj(Company-25, his-22)
cop(Company-25, was-23)
det(Company-25, a-24)
conj:and(O'Neil-13, Company-25)
nsubj(hustled-31, Company-25)
advmod(strong-28, seventy-27)
amod(Company-25, strong-28)
ref(Company-25, Who-30)
acl:relcl(Company-25, hustled-31)
det(Chief-34, that-32)
amod(Chief-34, dissolute-33)
dobj(hustled-31, Chief-34)
advmod(hustled-31, along-35)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD were)
        (NP
          (NP
            (NP (NNS lads))
            (PP (IN from)
              (NP (NNP Galway)
                (CC and)
                (NNP Louth))))
          (CC and)
          (NP
            (NP (NNP Meath))
            (SBAR
              (WHNP (WP Who))
              (S
                (VP (VBD went)
                  (PP (TO to)
                    (NP (PRP$ their) (NN death)))
                  (PP (IN with)
                    (NP
                      (NP (DT a) (NN joke))
                      (PP (IN in)
                        (NP (PRP$ their) (NNS teeth))))))))))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBN worshipped)
          (PP (IN with)
            (NP
              (NP (NN fluency))
              (, ,)
              (NP (NN fervour))
              (, ,)))))
      (CC and)
      (S
        (VP (VB zeal)
          (NP (DT The) (NN mud))
          (PP (IN on)
            (NP
              (NP (DT the) (NNS boot-heels))
              (PP (IN of)
                (NP (`` ``) (NNP Crook) ('' '') (NNP O'Neil))))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
nsubj(were-2, lads-3)
nsubj(worshipped-23, lads-3)
case(Galway-5, from-4)
nmod:from(lads-3, Galway-5)
cc(Galway-5, and-6)
nmod:from(lads-3, Louth-7)
conj:and(Galway-5, Louth-7)
cc(lads-3, and-8)
nsubj(were-2, Meath-9)
conj:and(lads-3, Meath-9)
nsubj(went-11, Meath-9)
ref(Meath-9, Who-10)
acl:relcl(Meath-9, went-11)
case(death-14, to-12)
nmod:poss(death-14, their-13)
nmod:to(went-11, death-14)
case(joke-17, with-15)
det(joke-17, a-16)
nmod:with(went-11, joke-17)
case(teeth-20, in-18)
nmod:poss(teeth-20, their-19)
nmod:in(joke-17, teeth-20)
cc(were-2, And-22)
conj:and(were-2, worshipped-23)
case(fluency-25, with-24)
nmod:with(worshipped-23, fluency-25)
appos(fluency-25, fervour-27)
cc(worshipped-23, and-29)
conj:and(were-2, zeal-30)
conj:and(worshipped-23, zeal-30)
det(mud-32, The-31)
dobj(zeal-30, mud-32)
case(boot-heels-35, on-33)
det(boot-heels-35, the-34)
nmod:on(zeal-30, boot-heels-35)
case(O'Neil-40, of-36)
compound(O'Neil-40, Crook-38)
nmod:of(boot-heels-35, O'Neil-40)

(ROOT
  (S
    (S
      (S (CC But)
        (NP
          (NP (RB ever) (DT a) (NN blight))
          (PP (IN on)
            (NP (PRP$ their) (NNS labours))))
        (VP (VBD lay)))
      (, ,)
      (CC And)
      (S
        (ADVP (RB ever))
        (NP (PRP$ their) (NN quarry))
        (VP (MD would)
          (VP (VB vanish)
            (PRT (RP away))
            (, ,)
            (PP (IN Till)
              (NP
                (NP (DT the) (JJ sun-dried) (NNS boys))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNP Black) (NNP Tyrone) (NNP Took))
                    (NP
                      (NP (DT a) (JJ brotherly) (NN interest))
                      (PP (IN in)
                        (NP (NNP Boh) (NNP Da) (NNP Thone))))))))))))
    (: :)
    (CC And)
    (, ,)
    (S
      (ADJP (JJ sooth)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP
          (NP (NN pursuit))
          (PP (IN in)
            (NP
              (NP (NN possession) (NNS ends))
              (, ,)
              (NP (DT The) (NN Boh))
              (CC and)
              (NP (PRP$ his) (NNS trackers)))))
        (VP (VBD were)
          (NP
            (NP (JJS best))
            (PP (IN of)
              (NP (NNS friends)))))))
    (. .)))

cc(lay-8, But-1)
advmod(blight-4, ever-2)
det(blight-4, a-3)
nsubj(lay-8, blight-4)
nsubj(sooth-37, blight-4)
case(labours-7, on-5)
nmod:poss(labours-7, their-6)
nmod:on(blight-4, labours-7)
root(ROOT-0, lay-8)
cc(lay-8, And-10)
advmod(vanish-15, ever-11)
nmod:poss(quarry-13, their-12)
nsubj(vanish-15, quarry-13)
aux(vanish-15, would-14)
conj:and(lay-8, vanish-15)
compound:prt(vanish-15, away-16)
case(boys-21, Till-18)
det(boys-21, the-19)
amod(boys-21, sun-dried-20)
nmod:till(vanish-15, boys-21)
case(Took-26, of-22)
det(Took-26, the-23)
compound(Took-26, Black-24)
compound(Took-26, Tyrone-25)
nmod:of(boys-21, Took-26)
det(interest-29, a-27)
amod(interest-29, brotherly-28)
dep(Took-26, interest-29)
case(Thone-33, in-30)
compound(Thone-33, Boh-31)
compound(Thone-33, Da-32)
nmod:in(interest-29, Thone-33)
cc(lay-8, And-35)
conj:and(lay-8, sooth-37)
mark(best-51, if-39)
nsubj(best-51, pursuit-40)
case(ends-43, in-41)
compound(ends-43, possession-42)
nmod:in(pursuit-40, ends-43)
det(Boh-46, The-45)
nmod:in(pursuit-40, Boh-46)
conj:and(ends-43, Boh-46)
cc(ends-43, and-47)
nmod:poss(trackers-49, his-48)
nmod:in(pursuit-40, trackers-49)
conj:and(ends-43, trackers-49)
cop(best-51, were-50)
conj:and(lay-8, best-51)
case(friends-53, of-52)
nmod:of(best-51, friends-53)

(ROOT
  (NP
    (NP
      (NP
        (NP (DT The) (NN word))
        (PP (IN of)
          (NP (DT a) (NN scout))))
      (: --)
      (NP
        (NP (DT a) (NN march))
        (PP (IN by)
          (NP (NN night))))
      (: --)
      (NP
        (NP (DT A) (NN rush))
        (PP (IN through)
          (NP (DT the) (NN mist))))
      (: --)
      (NP
        (NP (DT a) (NN scattering))
        (NP (NN fight)))
      (: --)
      (NP
        (NP (DT A) (NN volley))
        (PP (IN from)
          (NP (NN cover))))
      (: --)
      (NP
        (NP (DT a) (NN corpse))
        (PP (IN in)
          (NP (DT the) (NN clearing))))
      (: --)
      (NP
        (NP (DT The) (NN glimpse))
        (PP (IN of)
          (NP (DT a) (JJ loin-cloth)
            (CC and)
            (JJ heavy) (NN jade) (NN earring))))
      (: --)
      (NP
        (NP (DT The) (NN flare))
        (PP (IN of)
          (NP
            (NP (DT a) (NN village))
            (PRN (: --)
              (NP
                (NP (DT the) (NN tally))
                (PP (IN of)
                  (NP (NNP slain))))
              (: --))))))
    (SBAR
      (S
        (NP (CC And))
        (: ...)
        (NP (DT the) (NNP Boh))
        (VP (VBD was)
          (VP (VBN abroad) (`` ``)
            (PP (IN on)
              (NP (DT the) (NN raid)))
            ('' '')
            (ADVP (RB again))))))
    (. !)))

det(word-2, The-1)
root(ROOT-0, word-2)
case(scout-5, of-3)
det(scout-5, a-4)
nmod:of(word-2, scout-5)
det(march-8, a-7)
dep(word-2, march-8)
case(night-10, by-9)
nmod:by(march-8, night-10)
det(rush-13, A-12)
dep(word-2, rush-13)
case(mist-16, through-14)
det(mist-16, the-15)
nmod:through(rush-13, mist-16)
det(scattering-19, a-18)
dep(word-2, scattering-19)
dep(scattering-19, fight-20)
det(volley-23, A-22)
dep(word-2, volley-23)
case(cover-25, from-24)
nmod:from(volley-23, cover-25)
det(corpse-28, a-27)
dep(word-2, corpse-28)
case(clearing-31, in-29)
det(clearing-31, the-30)
nmod:in(corpse-28, clearing-31)
det(glimpse-34, The-33)
dep(word-2, glimpse-34)
case(loin-cloth-37, of-35)
det(loin-cloth-37, a-36)
nmod:of(glimpse-34, loin-cloth-37)
cc(loin-cloth-37, and-38)
amod(earring-41, heavy-39)
compound(earring-41, jade-40)
nmod:of(glimpse-34, earring-41)
conj:and(loin-cloth-37, earring-41)
det(flare-44, The-43)
dep(word-2, flare-44)
case(village-47, of-45)
det(village-47, a-46)
nmod:of(flare-44, village-47)
det(tally-50, the-49)
dep(village-47, tally-50)
case(slain-52, of-51)
nmod:of(tally-50, slain-52)
nsubjpass(abroad-59, And-54)
det(Boh-57, the-56)
nsubjpass(abroad-59, Boh-57)
auxpass(abroad-59, was-58)
acl:relcl(word-2, abroad-59)
case(raid-63, on-61)
det(raid-63, the-62)
nmod:on(abroad-59, raid-63)
advmod(abroad-59, again-65)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD cursed)
        (NP (PRP$ their) (NN luck))
        (, ,)
        (PP (IN as)
          (NP (DT the) (JJ Irish) (NN will)))))
    (, ,)
    (S
      (NP (PRP They))
      (VP (VBD gave)
        (NP (PRP him))
        (NP
          (NP (NN credit))
          (PP (IN for)
            (NP (NN cunning)
              (CC and)
              (NN skill))))))
    (, ,)
    (S
      (NP (PRP They))
      (VP (VBD buried)
        (NP (PRP$ their) (NN dead))))
    (, ,)
    (S
      (S
        (NP (PRP they))
        (VP (VBN bolted)
          (NP (PRP$ their) (NN beef))))
      (, ,)
      (CC And)
      (SQ
        (VP (VBD started)
          (ADVP (RB anew))
          (PP (IN on)
            (NP
              (NP (DT the) (NN track))
              (PP (IN of)
                (NP (DT the) (NN thief))))))
        (NP (NNP Till))
        (PRN (, ,)
          (S
            (PP (IN in)
              (NP
                (NP (NN place))
                (PP (IN of)
                  (NP (DT the) (`` ``) (NNP Kalends) (IN of) (NNP Greece) ('' '')))))
            (, ,)
            (NP (NNS men))
            (VP (VBD said)))
          (, ,))
        (`` ``)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP
              (NP (NNP Crook))
              (CC and)
              (NP (PRP$ his) (NNS darlings)))
            (VP (VBP come)
              (ADVP (RB back))
              (PP (IN with)
                (NP (DT the) (NN head))))))))
    (. .) ('' '')))

nsubj(cursed-2, They-1)
root(ROOT-0, cursed-2)
nmod:poss(luck-4, their-3)
dobj(cursed-2, luck-4)
case(will-9, as-6)
det(will-9, the-7)
amod(will-9, Irish-8)
nmod:as(cursed-2, will-9)
nsubj(gave-12, They-11)
parataxis(cursed-2, gave-12)
iobj(gave-12, him-13)
dobj(gave-12, credit-14)
case(cunning-16, for-15)
nmod:for(credit-14, cunning-16)
cc(cunning-16, and-17)
nmod:for(credit-14, skill-18)
conj:and(cunning-16, skill-18)
nsubj(buried-21, They-20)
parataxis(cursed-2, buried-21)
nmod:poss(dead-23, their-22)
dobj(buried-21, dead-23)
nsubj(bolted-26, they-25)
nsubj(started-31, they-25)
parataxis(cursed-2, bolted-26)
nmod:poss(beef-28, their-27)
dobj(bolted-26, beef-28)
cc(bolted-26, And-30)
parataxis(cursed-2, started-31)
conj:and(bolted-26, started-31)
advmod(started-31, anew-32)
case(track-35, on-33)
det(track-35, the-34)
nmod:on(started-31, track-35)
case(thief-38, of-36)
det(thief-38, the-37)
nmod:of(track-35, thief-38)
dep(started-31, Till-39)
case(Greece-48, in-41)
mwe(in-41, place-42)
mwe(in-41, of-43)
det(Greece-48, the-44)
compound(Greece-48, Kalends-46)
amod(Greece-48, of-47)
nmod:in_place_of(said-52, Greece-48)
nsubj(said-52, men-51)
parataxis(started-31, said-52)
advmod(come-60, When-55)
nsubj(come-60, Crook-56)
cc(Crook-56, and-57)
nmod:poss(darlings-59, his-58)
conj:and(Crook-56, darlings-59)
nsubj(come-60, darlings-59)
advcl(started-31, come-60)
advmod(come-60, back-61)
case(head-64, with-62)
det(head-64, the-63)
nmod:with(come-60, head-64)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD had)
        (VP (VBN hunted)
          (NP
            (NP (DT the) (NN Boh))
            (PP (IN from)
              (NP (DT the) (NNS hills))))
          (PP (TO to)
            (NP (DT the) (NN plain))))))
    (: --)
    (S
      (NP (PRP He))
      (VP
        (VP (VBD doubled))
        (CC and)
        (VP (VBD broke)
          (PP (IN for)
            (NP (DT the) (NNS hills)))
          (ADVP (RB again)))))
    (: :)
    (S
      (NP (PRP They))
      (VP (VBD had)
        (VP (VBN crippled)
          (NP (PRP$ his) (NN power))
          (PP (IN for)
            (NP (NN rapine)
              (CC and)
              (NN raid)))
          (PRN (, ,)
            (S
              (S
                (NP (PRP They))
                (VP (VBD had)
                  (VP (VBN routed)
                    (NP (PRP him))
                    (PRT (RP out))
                    (PP (IN of)
                      (NP (PRP$ his) (JJ pet) (NN stockade))))))
              (, ,)
              (CC And)
              (S
                (PP (IN at)
                  (NP (JJ last)))
                (, ,)
                (NP (PRP they))
                (VP (VBD came) (, ,)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (DT the) (NNP Day) (NNP Star))
                      (ADJP (VBN tired)))))))
            (, ,))
          (PP (TO To)
            (NP
              (NP (DT a) (NN camp))
              (VP (VBN deserted)))))))
    (: --)
    (S
      (NP (DT a) (NN village))
      (VP (VBD fired)))
    (. .)))

nsubj(hunted-3, They-1)
aux(hunted-3, had-2)
root(ROOT-0, hunted-3)
det(Boh-5, the-4)
dobj(hunted-3, Boh-5)
case(hills-8, from-6)
det(hills-8, the-7)
nmod:from(Boh-5, hills-8)
case(plain-11, to-9)
det(plain-11, the-10)
nmod:to(hunted-3, plain-11)
nsubj(doubled-14, He-13)
nsubj(broke-16, He-13)
parataxis(hunted-3, doubled-14)
cc(doubled-14, and-15)
parataxis(hunted-3, broke-16)
conj:and(doubled-14, broke-16)
case(hills-19, for-17)
det(hills-19, the-18)
nmod:for(broke-16, hills-19)
advmod(broke-16, again-20)
nsubj(crippled-24, They-22)
aux(crippled-24, had-23)
parataxis(hunted-3, crippled-24)
nmod:poss(power-26, his-25)
dobj(crippled-24, power-26)
case(rapine-28, for-27)
nmod:for(crippled-24, rapine-28)
cc(rapine-28, and-29)
nmod:for(crippled-24, raid-30)
conj:and(rapine-28, raid-30)
nsubj(routed-34, They-32)
aux(routed-34, had-33)
parataxis(crippled-24, routed-34)
dobj(routed-34, him-35)
compound:prt(routed-34, out-36)
case(stockade-40, of-37)
nmod:poss(stockade-40, his-38)
amod(stockade-40, pet-39)
nmod:of(routed-34, stockade-40)
cc(routed-34, And-42)
case(last-44, at-43)
nmod:at(came-47, last-44)
nsubj(came-47, they-46)
parataxis(crippled-24, came-47)
conj:and(routed-34, came-47)
advmod(tired-53, when-49)
det(Star-52, the-50)
compound(Star-52, Day-51)
dep(tired-53, Star-52)
advcl(came-47, tired-53)
case(camp-57, To-55)
det(camp-57, a-56)
nmod:to(crippled-24, camp-57)
acl(camp-57, deserted-58)
det(village-61, a-60)
nsubj(fired-62, village-61)
parataxis(hunted-3, fired-62)

(ROOT
  (S
    (S
      (NP (DT A) (JJ black) (NN cross))
      (VP (VBD blistered)
        (NP (DT the) (JJ Morning-gold))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT the) (NN body))
        (PP (IN upon)
          (NP (PRP it))))
      (VP (VBD was)
        (ADJP (JJ stark)
          (CC and)
          (JJ cold))))
    (. .)))

det(cross-3, A-1)
amod(cross-3, black-2)
nsubj(blistered-4, cross-3)
root(ROOT-0, blistered-4)
det(Morning-gold-6, the-5)
dobj(blistered-4, Morning-gold-6)
cc(blistered-4, And-8)
det(body-10, the-9)
nsubj(stark-14, body-10)
nsubj(cold-16, body-10)
case(it-12, upon-11)
nmod:upon(body-10, it-12)
cop(stark-14, was-13)
conj:and(blistered-4, stark-14)
cc(stark-14, and-15)
conj:and(blistered-4, cold-16)
conj:and(stark-14, cold-16)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN wind))
        (PP (IN of)
          (NP (DT the) (NN dawn))))
      (VP (VBD went)
        (ADVP (RB merrily))
        (ADVP (RB past))))
    (, ,)
    (NP (DT The) (JJ high) (NN grass))
    (VP (VBD bowed)
      (NP (PRP$ her) (NNS plumes))
      (PP (TO to)
        (NP (DT the) (NN blast))))
    (. .)))

det(wind-2, The-1)
nsubj(went-6, wind-2)
case(dawn-5, of-3)
det(dawn-5, the-4)
nmod:of(wind-2, dawn-5)
ccomp(bowed-13, went-6)
advmod(went-6, merrily-7)
advmod(went-6, past-8)
det(grass-12, The-10)
amod(grass-12, high-11)
nsubj(bowed-13, grass-12)
root(ROOT-0, bowed-13)
nmod:poss(plumes-15, her-14)
dobj(bowed-13, plumes-15)
case(blast-18, to-16)
det(blast-18, the-17)
nmod:to(bowed-13, blast-18)

(ROOT
  (S
    (S (CC And)
      (PP (RB out) (IN of)
        (NP (DT the) (NN grass)))
      (, ,)
      (PP (IN on)
        (NP (DT a) (JJ sudden)))
      (, ,)
      (VP (VBD broke)
        (NP
          (NP (DT A) (NN spirtle))
          (PP (IN of)
            (NP
              (NP (NN fire))
              (, ,)
              (NP
                (NP (DT a) (NN whorl))
                (PP (IN of)
                  (NP (NN smoke)))))))))
    (: --)
    (CC And)
    (S
      (NP
        (NP (NNP Captain) (NNP O'Neil))
        (PP (IN of)
          (NP (DT the) (NNP Black) (NNP Tyrone))))
      (VP (VBD Was)
        (VP (VBN blessed)
          (PP (IN with)
            (NP
              (NP
                (NP (DT a) (NN slug))
                (PP (IN in)
                  (NP (DT the) (NN ulnar-bone))))
              (: --)
              (NP
                (NP (DT The) (NN gift))
                (PP (IN of)
                  (NP (PRP$ his) (NN enemy) (NNP Boh) (NNP Da) (NNP Thone)))))))))
    (. .)))

cc(broke-11, And-1)
case(grass-5, out-2)
mwe(out-2, of-3)
det(grass-5, the-4)
nmod:out_of(broke-11, grass-5)
case(sudden-9, on-7)
det(sudden-9, a-8)
nmod:on(broke-11, sudden-9)
root(ROOT-0, broke-11)
det(spirtle-13, A-12)
dobj(broke-11, spirtle-13)
case(fire-15, of-14)
nmod:of(spirtle-13, fire-15)
det(whorl-18, a-17)
appos(fire-15, whorl-18)
case(smoke-20, of-19)
nmod:of(whorl-18, smoke-20)
cc(broke-11, And-22)
compound(O'Neil-24, Captain-23)
nsubjpass(blessed-30, O'Neil-24)
case(Tyrone-28, of-25)
det(Tyrone-28, the-26)
compound(Tyrone-28, Black-27)
nmod:of(O'Neil-24, Tyrone-28)
auxpass(blessed-30, Was-29)
conj:and(broke-11, blessed-30)
case(slug-33, with-31)
det(slug-33, a-32)
nmod:with(blessed-30, slug-33)
case(ulnar-bone-36, in-34)
det(ulnar-bone-36, the-35)
nmod:in(slug-33, ulnar-bone-36)
det(gift-39, The-38)
dep(slug-33, gift-39)
case(Thone-45, of-40)
nmod:poss(Thone-45, his-41)
compound(Thone-45, enemy-42)
compound(Thone-45, Boh-43)
compound(Thone-45, Da-44)
nmod:of(gift-39, Thone-45)

(ROOT
  (S (-LRB- -LRB-)
    (NP (RB Now) (DT a))
    (VP (VBD slug)
      (SBAR
        (S
          (NP (DT that))
          (VP (VBZ is)
            (VP (VBN hammered)
              (PP
                (PP (IN from)
                  (NP (JJ telegraph-wire) (NNS Is)))
                (PRN
                  (NP (DT a)
                    (NX
                      (NP (NN thorn))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN flesh))
                          (CC and)
                          (NP (DT a) (JJ rankling) (NN fire)))
                        (. .))))
                  (-RRB- -RRB-)))
              (. .)))
          (. .)))
      (. .))
    (. .) (. .)))

advmod(a-3, Now-2)
nsubj(slug-4, a-3)
root(ROOT-0, slug-4)
nsubjpass(hammered-7, that-5)
auxpass(hammered-7, is-6)
ccomp(slug-4, hammered-7)
case(Is-10, from-8)
amod(Is-10, telegraph-wire-9)
advcl(hammered-7, Is-10)
det(thorn-12, a-11)
dep(Is-10, thorn-12)
case(flesh-15, in-13)
det(flesh-15, the-14)
nmod:in(thorn-12, flesh-15)
cc(flesh-15, and-16)
det(fire-19, a-17)
amod(fire-19, rankling-18)
nmod:in(thorn-12, fire-19)
conj:and(flesh-15, fire-19)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ shot-wound) (NN festered))
      (PRN (: --)
        (SBAR (IN as)
          (S
            (NP (NNS shot-wounds))
            (VP (MD may))))))
    (PP (IN In)
      (NP (DT a) (NN steaming)))
    (VP (VBP barrack)
      (PP (IN at)
        (NP (NNP Mandalay))))
    (. .)))

det(festered-3, The-1)
amod(festered-3, shot-wound-2)
nsubj(barrack-11, festered-3)
mark(may-7, as-5)
nsubj(may-7, shot-wounds-6)
dep(festered-3, may-7)
case(steaming-10, In-8)
det(steaming-10, a-9)
nmod:in(barrack-11, steaming-10)
root(ROOT-0, barrack-11)
case(Mandalay-13, at-12)
nmod:at(barrack-11, Mandalay-13)

(ROOT
  (S
    (S
      (NP (DT The) (JJ left) (NN arm))
      (VP (VBD throbbed)))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNP Captain))
      (VP (VBD swore) (, ,) (`` ``)
        (S
          (NP (PRP I))
          (VP (MD 'd)
            (VP (VB like)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (PP (IN after)
                      (NP (DT the) (NNP Boh)))
                    (ADVP (RB once) (RBR more))))))))))
    (. !) ('' '')))

det(arm-3, The-1)
amod(arm-3, left-2)
nsubj(throbbed-4, arm-3)
root(ROOT-0, throbbed-4)
cc(throbbed-4, and-6)
det(Captain-8, the-7)
nsubj(swore-9, Captain-8)
conj:and(throbbed-4, swore-9)
nsubj(like-14, I-12)
nsubj:xsubj(Boh-19, I-12)
aux(like-14, 'd-13)
ccomp(swore-9, like-14)
mark(Boh-19, to-15)
cop(Boh-19, be-16)
case(Boh-19, after-17)
det(Boh-19, the-18)
xcomp(like-14, Boh-19)
advmod(more-21, once-20)
advmod(Boh-19, more-21)

(ROOT
  (S
    (S
      (NP (DT The) (NN fever))
      (VP (VBD held)
        (NP (PRP him))))
    (: --)
    (S
      (NP (DT the) (NNP Captain))
      (VP (VBD said) (, ,) (`` ``)
        (S
          (NP (PRP I))
          (VP (MD 'd)
            (VP (VB give)
              (S
                (NP (DT a) (CD hundred))
                (VP (TO to)
                  (VP (VB look)
                    (PP (IN at)
                      (NP (PRP$ his) (NN head)))))))))))
    (. !) ('' '')))

det(fever-2, The-1)
nsubj(held-3, fever-2)
root(ROOT-0, held-3)
dobj(held-3, him-4)
det(Captain-7, the-6)
nsubj(said-8, Captain-7)
parataxis(held-3, said-8)
nsubj(give-13, I-11)
aux(give-13, 'd-12)
ccomp(said-8, give-13)
det(hundred-15, a-14)
dobj(give-13, hundred-15)
nsubj:xsubj(look-17, hundred-15)
mark(look-17, to-16)
xcomp(give-13, look-17)
case(head-20, at-18)
nmod:poss(head-20, his-19)
nmod:at(look-17, head-20)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Hospital) (NNS punkahs))
      (VP
        (VP (VBD creaked))
        (CC and)
        (VP (VBD whirred))))
    (, ,)
    (CC But)
    (S
      (NP
        (NP (NNP Babu) (NNP Harendra))
        (PRN (-LRB- -LRB-)
          (NP (NNP Gomashta))
          (-RRB- -RRB-)))
      (VP (VBD heard)))
    (. .)))

det(punkahs-3, The-1)
compound(punkahs-3, Hospital-2)
nsubj(creaked-4, punkahs-3)
nsubj(whirred-6, punkahs-3)
root(ROOT-0, creaked-4)
cc(creaked-4, and-5)
conj:and(creaked-4, whirred-6)
cc(creaked-4, But-8)
compound(Harendra-10, Babu-9)
nsubj(heard-14, Harendra-10)
appos(Harendra-10, Gomashta-12)
conj:but(creaked-4, heard-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD thought)
        (PP (IN of)
          (NP (DT the) (NN cane-brake) (, ,) (NN green)
            (CC and)
            (NN dank)))))
    (, ,)
    (NP (DT That))
    (VP (VBD girdled)
      (NP (PRP$ his) (NN home))
      (PP (IN by)
        (NP (DT the) (NNP Dacca) (NN tank))))
    (. .)))

nsubj(thought-2, He-1)
ccomp(girdled-12, thought-2)
case(cane-brake-5, of-3)
det(cane-brake-5, the-4)
nmod:of(thought-2, cane-brake-5)
nmod:of(thought-2, green-7)
conj:and(cane-brake-5, green-7)
cc(cane-brake-5, and-8)
nmod:of(thought-2, dank-9)
conj:and(cane-brake-5, dank-9)
nsubj(girdled-12, That-11)
root(ROOT-0, girdled-12)
nmod:poss(home-14, his-13)
dobj(girdled-12, home-14)
case(tank-18, by-15)
det(tank-18, the-16)
compound(tank-18, Dacca-17)
nmod:by(girdled-12, tank-18)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD thought)
        (PP (IN of)
          (NP
            (NP (PRP$ his) (NN wife))
            (CC and)
            (NP (PRP$ his) (NNP High) (NNP School) (NN son))))))
    (, ,)
    (NP (PRP He))
    (VP
      (VP (VBD thought))
      (: --)
      (CC but)
      (VP (VBD abandoned)
        (NP
          (NP (DT the) (NN thought))
          (: --)
          (PP (IN of)
            (NP (DT a) (NN gun))))))
    (. .)))

nsubj(thought-2, He-1)
ccomp(thought-13, thought-2)
case(wife-5, of-3)
nmod:poss(wife-5, his-4)
nmod:of(thought-2, wife-5)
cc(wife-5, and-6)
nmod:poss(son-10, his-7)
compound(son-10, High-8)
compound(son-10, School-9)
nmod:of(thought-2, son-10)
conj:and(wife-5, son-10)
nsubj(thought-13, He-12)
nsubj(abandoned-16, He-12)
root(ROOT-0, thought-13)
cc(thought-13, but-15)
conj:but(thought-13, abandoned-16)
det(thought-18, the-17)
dobj(abandoned-16, thought-18)
case(gun-22, of-20)
det(gun-22, a-21)
nmod:of(thought-18, gun-22)

(ROOT
  (S
    (NP (PRP$ His) (NN sleep))
    (VP (VBD was)
      (VP (VBN broken)
        (PP (IN by)
          (NP (NNS visions) (NN dread)))
        (PP (IN Of)
          (NP
            (NP (DT a) (VBG shining) (NN Boh))
            (PP (IN with)
              (NP (DT a) (JJ silver) (NN head)))))))
    (. .)))

nmod:poss(sleep-2, His-1)
nsubjpass(broken-4, sleep-2)
auxpass(broken-4, was-3)
root(ROOT-0, broken-4)
case(dread-7, by-5)
compound(dread-7, visions-6)
nmod:by(broken-4, dread-7)
case(Boh-11, Of-8)
det(Boh-11, a-9)
amod(Boh-11, shining-10)
nmod:of(broken-4, Boh-11)
case(head-15, with-12)
det(head-15, a-13)
amod(head-15, silver-14)
nmod:with(Boh-11, head-15)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD kept)
        (NP (PRP$ his) (NN counsel)))
      (CC and)
      (VP (VBD went)
        (NP
          (NP (PRP$ his) (NN way))
          (, ,)
          (SBAR
            (FRAG (CC And)
              (ADVP (RB swindled))
              (NP
                (NP (DT the) (NN cartmen))
                (SBAR
                  (FRAG
                    (PP (IN of)
                      (NP
                        (NP (NN half))
                        (SBAR
                          (S
                            (NP (PRP$ their))
                            (VP (VBP pay))
                            (. .))))
                      (. .))
                    (. .)))
                (. .))
              (. .))))))
    (. .)))

nsubj(kept-2, He-1)
nsubj(went-6, He-1)
root(ROOT-0, kept-2)
nmod:poss(counsel-4, his-3)
dobj(kept-2, counsel-4)
cc(kept-2, and-5)
conj:and(kept-2, went-6)
nmod:poss(way-8, his-7)
dobj(went-6, way-8)
cc(cartmen-13, And-10)
dep(cartmen-13, swindled-11)
det(cartmen-13, the-12)
dep(way-8, cartmen-13)
case(half-15, of-14)
dep(cartmen-13, half-15)
nsubj(pay-17, their-16)
acl:relcl(half-15, pay-17)

(ROOT
  (S (CC And)
    (S
      (NP (DT the) (NNS months))
      (VP (VBD went)
        (PRT (RP on))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (DT the) (JJS worst))
            (VP (MD must)
              (VP (VB do)))))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NNP Boh))
      (VP (VBD returned)
        (PP (TO to)
          (NP (DT the) (NN raid)))
        (ADVP (RB anew))))
    (. .)))

cc(went-4, And-1)
det(months-3, the-2)
nsubj(went-4, months-3)
root(ROOT-0, went-4)
compound:prt(went-4, on-5)
mark(do-11, as-7)
det(worst-9, the-8)
nsubj(do-11, worst-9)
aux(do-11, must-10)
advcl(went-4, do-11)
cc(went-4, And-13)
det(Boh-15, the-14)
nsubj(returned-16, Boh-15)
conj:and(went-4, returned-16)
case(raid-19, to-17)
det(raid-19, the-18)
nmod:to(returned-16, raid-19)
advmod(returned-16, anew-20)

(ROOT
  (S (CC But)
    (S
      (NP (DT the) (NNP Captain))
      (VP (VBD had)
        (VP (VBN quitted)
          (NP (DT the) (JJ long-drawn) (NN strife)))))
    (, ,)
    (CC And)
    (S
      (ADVP (IN in) (RB far))
      (NP (NNP Simoorie))
      (VP (VBD had)
        (VP (VBN taken)
          (NP (DT a) (NN wife)))))
    (. .)))

cc(quitted-5, But-1)
det(Captain-3, the-2)
nsubj(quitted-5, Captain-3)
aux(quitted-5, had-4)
root(ROOT-0, quitted-5)
det(strife-8, the-6)
amod(strife-8, long-drawn-7)
dobj(quitted-5, strife-8)
cc(quitted-5, And-10)
case(far-12, in-11)
advmod(taken-15, far-12)
nsubj(taken-15, Simoorie-13)
aux(taken-15, had-14)
conj:and(quitted-5, taken-15)
det(wife-17, a-16)
dobj(taken-15, wife-17)

(ROOT
  (S (CC And)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN damsel))
          (PP (IN of)
            (NP (JJ delicate) (NN mould))))))
    (, ,)
    (S
      (PP (IN With)
        (NP
          (NP (NN hair))
          (PP (IN like)
            (NP
              (NP (DT the) (NN sunshine)
                (CC and)
                (NN heart))
              (PP (IN of)
                (NP (NN gold)))))))
      (, ,)
      (S (CC And)
        (ADVP (RB little))
        (NP (PRP she))
        (VP (VBD knew)
          (SBAR
            (S
              (NP
                (NP (DT the) (NNS arms))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD embraced)))))
              (VP (VBD Had)
                (VP (VBN cloven)
                  (NP
                    (NP (DT a) (NN man))
                    (PP (IN from)
                      (NP (DT the) (NN brow))))
                  (PP (TO to)
                    (NP (DT the) (NN waist)))))))))
      (: :)
      (CC And)
      (S
        (ADVP (RB little))
        (NP (PRP she))
        (VP (VBD knew)
          (SBAR (IN that)
            (S
              (NP (DT the) (VBG loving) (NNS lips))
              (VP (VBD Had)
                (VP (VBN ordered)
                  (NP
                    (NP (DT a) (VBG quivering) (NN life) (POS 's))
                    (NN eclipse)))))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT the) (NN eye))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD lit)
              (PP (IN at)
                (NP (PRP$ her) (JJS lightest) (NN breath)))))))
      (VP (VBD Had)
        (VP (VBN glared)
          (S
            (VP (VBN unawed)
              (PP (IN in)
                (NP
                  (NP (DT the) (NNP Gates))
                  (PP (IN of)
                    (NP (NNP Death))))))))))
    (. .)))

cc(damsel-5, And-1)
nsubj(damsel-5, she-2)
cop(damsel-5, was-3)
det(damsel-5, a-4)
root(ROOT-0, damsel-5)
case(mould-8, of-6)
amod(mould-8, delicate-7)
nmod:of(damsel-5, mould-8)
case(hair-11, With-10)
nmod:with(knew-23, hair-11)
case(sunshine-14, like-12)
det(sunshine-14, the-13)
nmod:like(hair-11, sunshine-14)
cc(sunshine-14, and-15)
nmod:like(hair-11, heart-16)
conj:and(sunshine-14, heart-16)
case(gold-18, of-17)
nmod:of(sunshine-14, gold-18)
cc(knew-23, And-20)
advmod(knew-23, little-21)
nsubj(knew-23, she-22)
ccomp(damsel-5, knew-23)
det(arms-25, the-24)
nsubj(embraced-27, arms-25)
nsubj(cloven-29, arms-25)
ref(arms-25, that-26)
acl:relcl(arms-25, embraced-27)
aux(cloven-29, Had-28)
ccomp(knew-23, cloven-29)
det(man-31, a-30)
dobj(cloven-29, man-31)
case(brow-34, from-32)
det(brow-34, the-33)
nmod:from(man-31, brow-34)
case(waist-37, to-35)
det(waist-37, the-36)
nmod:to(cloven-29, waist-37)
cc(knew-23, And-39)
advmod(knew-42, little-40)
nsubj(knew-42, she-41)
ccomp(damsel-5, knew-42)
conj:and(knew-23, knew-42)
mark(ordered-48, that-43)
det(lips-46, the-44)
amod(lips-46, loving-45)
nsubj(ordered-48, lips-46)
aux(ordered-48, Had-47)
ccomp(knew-42, ordered-48)
det(life-51, a-49)
amod(life-51, quivering-50)
nmod:poss(eclipse-53, life-51)
case(life-51, 's-52)
dobj(ordered-48, eclipse-53)
cc(damsel-5, And-55)
det(eye-57, the-56)
nsubj(lit-59, eye-57)
nsubj(glared-65, eye-57)
ref(eye-57, that-58)
acl:relcl(eye-57, lit-59)
case(breath-63, at-60)
nmod:poss(breath-63, her-61)
amod(breath-63, lightest-62)
nmod:at(lit-59, breath-63)
aux(glared-65, Had-64)
conj:and(damsel-5, glared-65)
dep(glared-65, unawed-66)
case(Gates-69, in-67)
det(Gates-69, the-68)
nmod:in(unawed-66, Gates-69)
case(Death-71, of-70)
nmod:of(Gates-69, Death-71)

(ROOT
  (PRN (-LRB- -LRB-)
    (FRAG
      (PP (IN For)
        (NP
          (NP (DT these))
          (VP (VB be)
            (NP
              (NP (NNS matters))
              (SBAR
                (S
                  (NP (DT a) (NN man))
                  (VP (MD would)
                    (VP (VB hide)))))))))
      (, ,)
      (PP (IN As)
        (NP (DT a) (JJ general) (NN rule)))
      (, ,)
      (PP (IN from)
        (NP (DT an) (JJ innocent) (NN Bride)))
      (. .))
    (-RRB- -RRB-)))

case(these-3, For-2)
root(ROOT-0, these-3)
cop(matters-5, be-4)
dep(these-3, matters-5)
det(man-7, a-6)
nsubj(hide-9, man-7)
aux(hide-9, would-8)
acl:relcl(matters-5, hide-9)
case(rule-14, As-11)
det(rule-14, a-12)
amod(rule-14, general-13)
nmod:as(these-3, rule-14)
case(Bride-19, from-16)
det(Bride-19, an-17)
amod(Bride-19, innocent-18)
nmod:from(these-3, Bride-19)

(ROOT
  (FRAG (CC And)
    (ADVP (RB little))
    (NP
      (NP (DT the) (JJ Captain) (NN thought))
      (SBAR
        (FRAG
          (PP (IN of)
            (NP
              (NP
                (NP (DT the) (NN past))
                (PRN (, ,)
                  (FRAG (CC And)
                    (, ,)
                    (ADVP (IN of) (DT all))
                    (NP (NNS men)))
                  (, ,)))
              (SBAR
                (S
                  (VP (VBD Babu)
                    (SBAR
                      (FRAG
                        (NP (NNP Harendra))
                        (ADVP (RB last) (. .))
                        (. .)))))))
            (. .))
          (. .)))
      (. .))
    (. .)))

cc(thought-5, And-1)
dep(thought-5, little-2)
det(thought-5, the-3)
amod(thought-5, Captain-4)
root(ROOT-0, thought-5)
case(past-8, of-6)
det(past-8, the-7)
dep(thought-5, past-8)
cc(men-14, And-10)
case(all-13, of-12)
dep(men-14, all-13)
dep(past-8, men-14)
acl:relcl(past-8, Babu-16)
dep(Babu-16, Harendra-17)
dep(Harendra-17, last-18)

(ROOT
  (S (CC But)
    (VP (VB slow) (, ,)
      (PP (IN in)
        (NP
          (NP (DT the) (NN sludge))
          (PP (IN of)
            (NP (DT the) (NNP Kathun) (NN road)))))
      (, ,)
      (NP
        (NP (DT The) (NNP Government) (NNP Bullock) (NNP Train))
        (VP (VBN toted)
          (NP (PRP$ its) (NN load)))))
    (. .)))

cc(slow-2, But-1)
root(ROOT-0, slow-2)
case(sludge-6, in-4)
det(sludge-6, the-5)
nmod:in(slow-2, sludge-6)
case(road-10, of-7)
det(road-10, the-8)
compound(road-10, Kathun-9)
nmod:of(sludge-6, road-10)
det(Train-15, The-12)
compound(Train-15, Government-13)
compound(Train-15, Bullock-14)
dobj(slow-2, Train-15)
acl(Train-15, toted-16)
nmod:poss(load-18, its-17)
dobj(toted-16, load-18)

(ROOT
  (S
    (NP
      (NP (NNS Speckless)
        (CC and)
        (NNS spotless))
      (CC and)
      (NP (VBG shining))
      (PP (IN with)
        (NP (JJ _) (NN ghee) (NNS _))))
    (, ,)
    (PP (IN In)
      (NP (DT the) (JJ rearmost) (NN cart)))
    (VP (VBD sat)
      (NP (DT the) (NN Babu-jee)))
    (. .)))

nsubj(sat-15, Speckless-1)
cc(Speckless-1, and-2)
conj:and(Speckless-1, spotless-3)
nsubj(sat-15, spotless-3)
cc(Speckless-1, and-4)
conj:and(Speckless-1, shining-5)
nsubj(sat-15, shining-5)
case(_-9, with-6)
amod(_-9, _-7)
compound(_-9, ghee-8)
nmod:with(Speckless-1, _-9)
case(cart-14, In-11)
det(cart-14, the-12)
amod(cart-14, rearmost-13)
nmod:in(sat-15, cart-14)
root(ROOT-0, sat-15)
det(Babu-jee-17, the-16)
dobj(sat-15, Babu-jee-17)

(ROOT
  (S (CC And)
    (NP
      (NP (RB ever) (DT a) (JJ phantom))
      (PP (IN before)
        (NP (PRP him))))
    (VP (VBD fled)
      (PP (IN Of)
        (NP
          (NP (DT a) (VBG scowling) (NN Boh))
          (PP (IN with)
            (NP (DT a) (JJ silver) (NN head))))))
    (. .)))

cc(fled-7, And-1)
advmod(phantom-4, ever-2)
det(phantom-4, a-3)
nsubj(fled-7, phantom-4)
case(him-6, before-5)
nmod:before(phantom-4, him-6)
root(ROOT-0, fled-7)
case(Boh-11, Of-8)
det(Boh-11, a-9)
amod(Boh-11, scowling-10)
nmod:of(fled-7, Boh-11)
case(head-15, with-12)
det(head-15, a-13)
amod(head-15, silver-14)
nmod:with(Boh-11, head-15)

(ROOT
  (FRAG
    (ADVP (RB Then))
    (NP
      (NP (DT the) (NN lead-cart))
      (VP (VBN stuck) (, ,)
        (SBAR (IN though)
          (S
            (S
              (S
                (NP (DT the) (NNS coolies))
                (VP (VBD slaved)))
              (, ,)
              (CC And)
              (S
                (NP (DT the) (NN cartmen))
                (VP (VBD flogged))))
            (CC and)
            (S
              (NP (DT the) (NN escort))
              (VP (VBD raved)))))
        (: ;)
        (FRAG (CC And)
          (ADVP (RB out))
          (PP (IN of)
            (NP (DT the) (NN jungle)))
          (, ,)
          (PP (IN with)
            (NP
              (NP (NNS yells)
                (CC and)
                (NNS squeals))
              (, ,)
              (NP (NNP Pranced) (NNP Boh) (NNP Da) (NNP Thone))
              (, ,)
              (CC and)
              (NP (PRP$ his) (NN gang))))
          (PP (IN at)
            (NP (PRP$ his) (NNS heels)))
          (. !))))))

dep(lead-cart-3, Then-1)
det(lead-cart-3, the-2)
root(ROOT-0, lead-cart-3)
acl(lead-cart-3, stuck-4)
mark(slaved-9, though-6)
det(coolies-8, the-7)
nsubj(slaved-9, coolies-8)
advcl(stuck-4, slaved-9)
cc(slaved-9, And-11)
det(cartmen-13, the-12)
nsubj(flogged-14, cartmen-13)
advcl(stuck-4, flogged-14)
conj:and(slaved-9, flogged-14)
cc(slaved-9, and-15)
det(escort-17, the-16)
nsubj(raved-18, escort-17)
advcl(stuck-4, raved-18)
conj:and(slaved-9, raved-18)
cc(jungle-24, And-20)
case(jungle-24, out-21)
mwe(out-21, of-22)
det(jungle-24, the-23)
nmod:out_of(stuck-4, jungle-24)
case(yells-27, with-26)
nmod:with(jungle-24, yells-27)
cc(yells-27, and-28)
nmod:with(jungle-24, squeals-29)
conj:and(yells-27, squeals-29)
compound(Thone-34, Pranced-31)
compound(Thone-34, Boh-32)
compound(Thone-34, Da-33)
nmod:with(jungle-24, Thone-34)
conj:and(yells-27, Thone-34)
cc(yells-27, and-36)
nmod:poss(gang-38, his-37)
nmod:with(jungle-24, gang-38)
conj:and(yells-27, gang-38)
case(heels-41, at-39)
nmod:poss(heels-41, his-40)
nmod:at(jungle-24, heels-41)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (NN belching) (NNS blunderbuss))
      (VP (VBD answered)
        (PRT (RP back))
        (NP
          (NP
            (NP (DT The) (NNP Snider) (POS 's))
            (NN snarl))
          (CC and)
          (NP
            (NP (DT the) (NN carbine) (POS 's))
            (NN crack)))))
    (, ,)
    (CC And)
    (S
      (S
        (S
          (NP (DT the) (JJ blithe) (NN revolver))
          (VP (VBD began)
            (S
              (VP (TO to)
                (VP (VB sing)
                  (PP (TO To)
                    (NP
                      (NP (DT the) (NN blade))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBN twanged)
                            (PP (IN on)
                              (NP (DT the) (NN locking-ring)))))))))))))
        (, ,)
        (CC And)
        (S
          (NP (DT the) (JJ brown) (NN flesh))
          (VP (VBD blued)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT the) (NN bay) (`` `) (NN net))
                (VP (VBD kissed))))))
        (, ,)
        (PP (IN As)
          (NP
            (NP (DT the) (NN steel))
            (VP (VBN shot)
              (PRT (RP back))
              (PP (IN with)
                (NP
                  (NP (DT a) (NN wrench))
                  (CC and)
                  (NP (DT a) (NN twist))))))))
      (, ,)
      (CC And)
      (S
        (S
          (NP
            (NP (DT the) (JJ great) (JJ white) (NNS bullocks))
            (PP (IN with)
              (NP (NN onyx) (NNS eyes))))
          (VP (VBD Watched)
            (NP
              (NP (DT the) (NNS souls))
              (PP (IN of)
                (NP (DT the) (JJ dead) (NN arise))))))
        (, ,)
        (CC And)
        (S
          (PP (IN over)
            (NP
              (NP (DT the) (NN smoke))
              (PP (IN of)
                (NP (DT the) (NN fusillade)))))
          (NP (DT The) (NNP Peacock) (NN Banner))
          (VP
            (VP (VBD staggered))
            (CC and)
            (VP (VBN swayed))))))
    (. .)))

advmod(answered-4, Then-1)
compound(blunderbuss-3, belching-2)
nsubj(answered-4, blunderbuss-3)
root(ROOT-0, answered-4)
compound:prt(answered-4, back-5)
det(Snider-7, The-6)
nmod:poss(snarl-9, Snider-7)
case(Snider-7, 's-8)
dobj(answered-4, snarl-9)
cc(snarl-9, and-10)
det(carbine-12, the-11)
nmod:poss(crack-14, carbine-12)
case(carbine-12, 's-13)
dobj(answered-4, crack-14)
conj:and(snarl-9, crack-14)
cc(answered-4, And-16)
det(revolver-19, the-17)
amod(revolver-19, blithe-18)
nsubj(began-20, revolver-19)
nsubj:xsubj(sing-22, revolver-19)
conj:and(answered-4, began-20)
mark(sing-22, to-21)
xcomp(began-20, sing-22)
case(blade-25, To-23)
det(blade-25, the-24)
nmod:to(sing-22, blade-25)
nsubj(twanged-27, blade-25)
ref(blade-25, that-26)
acl:relcl(blade-25, twanged-27)
case(locking-ring-30, on-28)
det(locking-ring-30, the-29)
nmod:on(twanged-27, locking-ring-30)
cc(began-20, And-32)
det(flesh-35, the-33)
amod(flesh-35, brown-34)
nsubj(blued-36, flesh-35)
conj:and(answered-4, blued-36)
conj:and(began-20, blued-36)
advmod(kissed-42, where-37)
det(net-41, the-38)
compound(net-41, bay-39)
nsubj(kissed-42, net-41)
advcl(blued-36, kissed-42)
case(steel-46, As-44)
det(steel-46, the-45)
conj:and(answered-4, steel-46)
conj:and(began-20, steel-46)
acl(steel-46, shot-47)
compound:prt(shot-47, back-48)
case(wrench-51, with-49)
det(wrench-51, a-50)
nmod:with(shot-47, wrench-51)
cc(wrench-51, and-52)
det(twist-54, a-53)
nmod:with(shot-47, twist-54)
conj:and(wrench-51, twist-54)
cc(began-20, And-56)
det(bullocks-60, the-57)
amod(bullocks-60, great-58)
amod(bullocks-60, white-59)
nsubj(Watched-64, bullocks-60)
case(eyes-63, with-61)
compound(eyes-63, onyx-62)
nmod:with(bullocks-60, eyes-63)
conj:and(answered-4, Watched-64)
conj:and(began-20, Watched-64)
det(souls-66, the-65)
dobj(Watched-64, souls-66)
case(arise-70, of-67)
det(arise-70, the-68)
amod(arise-70, dead-69)
nmod:of(souls-66, arise-70)
cc(Watched-64, And-72)
case(smoke-75, over-73)
det(smoke-75, the-74)
nmod:over(staggered-82, smoke-75)
case(fusillade-78, of-76)
det(fusillade-78, the-77)
nmod:of(smoke-75, fusillade-78)
det(Banner-81, The-79)
compound(Banner-81, Peacock-80)
nsubj(staggered-82, Banner-81)
nsubj(swayed-84, Banner-81)
conj:and(began-20, staggered-82)
conj:and(Watched-64, staggered-82)
cc(staggered-82, and-83)
conj:and(Watched-64, swayed-84)
conj:and(staggered-82, swayed-84)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (NP
      (NP (NN gayest))
      (PP (IN of)
        (NP (JJ scrimmages) (NN man))))
    (VP (MD may)
      (VP (VB see)
        (S
          (VP (NNP Is)
            (NP (DT a) (JJ well-worked) (NN rush))
            (PP (IN on)
              (NP (DT the) (NNP G.B.T.)))))))
    (. !)))

discourse(see-8, Oh-1)
nsubj(see-8, gayest-3)
case(man-6, of-4)
amod(man-6, scrimmages-5)
nmod:of(gayest-3, man-6)
aux(see-8, may-7)
root(ROOT-0, see-8)
dep(rush-12, Is-9)
det(rush-12, a-10)
amod(rush-12, well-worked-11)
ccomp(see-8, rush-12)
case(G.B.T.-15, on-13)
det(G.B.T.-15, the-14)
nmod:on(rush-12, G.B.T.-15)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Babu))
      (VP (VBD shook)
        (PP (IN at)
          (NP (DT the) (JJ horrible) (NN sight)))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBD girded)
          (SBAR
            (S
              (S
                (NP (PRP$ his) (NNS ponderous))
                (VP (VBZ loins)
                  (PP (IN for)
                    (NP (NN flight)))))
              (, ,)
              (CC But)
              (S
                (NP (NNP Fate))
                (VP (VBD had)
                  (VP (VBN ordained)
                    (UCP
                      (SBAR (IN that)
                        (S
                          (NP (DT the) (NNP Boh))
                          (VP (MD should)
                            (VP (VB start)
                              (PP (IN On)
                                (NP
                                  (NP (DT a) (JJ lone-hand) (NN raid))
                                  (PP (IN of)
                                    (NP (DT the) (JJ rearmost) (NN cart)))))))))
                      (, ,)
                      (CC And)
                      (ADVP (IN out)
                        (PP (IN of)
                          (NP (DT that) (NN cart)))))
                    (, ,)
                    (PP (IN with)
                      (NP
                        (NP (DT a) (NN bellow))
                        (PP (IN of)
                          (NP (NN woe))))))))))))
      (, ,)
      (NP (DT The) (NNP Babu))
      (VP (VBD fell)
        (PRN (: --)
          (ADVP (JJ flat))
          (PP (IN on)
            (NP
              (NP (DT the) (NN top))
              (PP (IN of)
                (NP (DT the) (NNP Boh))))))))
    (. !)))

det(Babu-2, The-1)
nsubj(shook-3, Babu-2)
root(ROOT-0, shook-3)
case(sight-7, at-4)
det(sight-7, the-5)
amod(sight-7, horrible-6)
nmod:at(shook-3, sight-7)
cc(shook-3, And-9)
ccomp(fell-49, girded-10)
nmod:poss(ponderous-12, his-11)
nsubj(loins-13, ponderous-12)
dep(girded-10, loins-13)
case(flight-15, for-14)
nmod:for(loins-13, flight-15)
cc(loins-13, But-17)
nsubj(ordained-20, Fate-18)
aux(ordained-20, had-19)
dep(girded-10, ordained-20)
conj:but(loins-13, ordained-20)
mark(start-25, that-21)
det(Boh-23, the-22)
nsubj(start-25, Boh-23)
aux(start-25, should-24)
dep(ordained-20, start-25)
case(raid-29, On-26)
det(raid-29, a-27)
amod(raid-29, lone-hand-28)
nmod:on(start-25, raid-29)
case(cart-33, of-30)
det(cart-33, the-31)
amod(cart-33, rearmost-32)
nmod:of(raid-29, cart-33)
cc(start-25, And-35)
case(cart-39, out-36)
mwe(out-36, of-37)
det(cart-39, that-38)
nmod:out_of(start-25, cart-39)
case(bellow-43, with-41)
det(bellow-43, a-42)
nmod:with(ordained-20, bellow-43)
case(woe-45, of-44)
nmod:of(bellow-43, woe-45)
det(Babu-48, The-47)
nsubj(fell-49, Babu-48)
conj:and(shook-3, fell-49)
dep(top-54, flat-51)
case(top-54, on-52)
det(top-54, the-53)
dep(fell-49, top-54)
case(Boh-57, of-55)
det(Boh-57, the-56)
nmod:of(top-54, Boh-57)

(ROOT
  (S (IN For)
    (NP (NNS years))
    (VP (VBD had)
      (NP
        (NP (NNP Harendra))
        (VP (VBN served)
          (NP (DT the) (NN State))))
      (, ,)
      (PP (TO To)
        (NP
          (NP
            (NP (DT the) (NN growth))
            (PP (IN of)
              (NP (PRP$ his) (NN purse))))
          (CC and)
          (NP
            (NP (DT the) (NN girth))
            (PP (IN of)
              (NP (PRP$ his) (JJ _) (NN p) (NNP -RSB-) (NNP ^)
                (CC et)
                (NNP _)))))))
    (. .)))

dep(had-3, For-1)
nsubj(had-3, years-2)
root(ROOT-0, had-3)
dobj(had-3, Harendra-4)
acl(Harendra-4, served-5)
det(State-7, the-6)
dobj(served-5, State-7)
case(growth-11, To-9)
det(growth-11, the-10)
nmod:to(had-3, growth-11)
case(purse-14, of-12)
nmod:poss(purse-14, his-13)
nmod:of(growth-11, purse-14)
cc(growth-11, and-15)
det(girth-17, the-16)
nmod:to(had-3, girth-17)
conj:and(growth-11, girth-17)
case(^-23, of-18)
nmod:poss(^-23, his-19)
amod(^-23, _-20)
compound(^-23, p-21)
compound(^-23, -RSB--22)
nmod:of(girth-17, ^-23)
cc(^-23, et-24)
nmod:of(girth-17, _-25)
conj:et(^-23, _-25)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (NP (CD twenty) (NN stone))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (DT the) (NN tally-man))
            (VP (VBZ knows)))))
      (, ,)
      (PP (IN On)
        (NP
          (NP (DT the) (JJ broad))
          (PP (IN of)
            (NP
              (NP (DT the) (NN chest))
              (PP (IN of)
                (NP
                  (NP (DT this) (JJS best))
                  (PP (IN of)
                    (NP (NNP Bohs))))))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
nummod(stone-4, twenty-3)
nsubj(were-2, stone-4)
mark(knows-9, as-6)
det(tally-man-8, the-7)
nsubj(knows-9, tally-man-8)
acl:relcl(stone-4, knows-9)
case(broad-13, On-11)
det(broad-13, the-12)
nmod:on(were-2, broad-13)
case(chest-16, of-14)
det(chest-16, the-15)
nmod:of(broad-13, chest-16)
case(best-19, of-17)
det(best-19, this-18)
nmod:of(chest-16, best-19)
case(Bohs-21, of-20)
nmod:of(best-19, Bohs-21)

(ROOT
  (S (CC And)
    (NP
      (NP (CD twenty) (NN stone))
      (PP (IN from)
        (NP
          (NP (DT a) (NN height))
          (VP (VBN discharged)))))
    (VP (VBP Are)
      (ADJP (JJ bad)
        (PP (IN for)
          (NP
            (NP (DT a) (NN Boh))
            (PP (IN with)
              (NP (DT a) (NN spleen) (NN enlarged)))))))
    (. .)))

cc(bad-9, And-1)
nummod(stone-3, twenty-2)
nsubj(bad-9, stone-3)
case(height-6, from-4)
det(height-6, a-5)
nmod:from(stone-3, height-6)
acl(height-6, discharged-7)
cop(bad-9, Are-8)
root(ROOT-0, bad-9)
case(Boh-12, for-10)
det(Boh-12, a-11)
nmod:for(bad-9, Boh-12)
case(enlarged-16, with-13)
det(enlarged-16, a-14)
compound(enlarged-16, spleen-15)
nmod:with(Boh-12, enlarged-16)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (ADJP (JJ short))
      (VP (VBD was)
        (NP (DT the) (NN struggle))))
    (: --)
    (S
      (NP (JJ severe))
      (VP (VBD was)
        (NP (DT the) (NN shock))))
    (: --)
    (S
      (NP (PRP He))
      (VP (VBD dropped)
        (PP (IN like)
          (NP (DT a) (NN bullock)))))
    (: --)
    (S
      (NP (PRP he))
      (VP (VBD lay)
        (PP (IN like)
          (NP (DT a) (NN block)))))
    (: ;)
    (CC And)
    (S
      (NP
        (NP (DT the) (NNP Babu))
        (PP (IN above)
          (NP
            (NP (PRP him))
            (, ,)
            (VP (VBN convulsed)
              (PP (IN with)
                (NP (NN fear))))
            (, ,)
            (VP (VBN Heard)
              (NP (DT the) (JJ labouring) (NN life-breath))))))
      (VP (VBD hissed)
        (PRT (RP out))
        (PP (IN in)
          (NP (PRP$ his) (NN ear)))))
    (. .)))

discourse(struggle-6, Oh-1)
dep(struggle-6, short-3)
cop(struggle-6, was-4)
det(struggle-6, the-5)
root(ROOT-0, struggle-6)
nsubj(shock-11, severe-8)
cop(shock-11, was-9)
det(shock-11, the-10)
conj:and(struggle-6, shock-11)
nsubj(dropped-14, He-13)
conj:and(struggle-6, dropped-14)
case(bullock-17, like-15)
det(bullock-17, a-16)
nmod:like(dropped-14, bullock-17)
nsubj(lay-20, he-19)
conj:and(struggle-6, lay-20)
case(block-23, like-21)
det(block-23, a-22)
nmod:like(lay-20, block-23)
cc(struggle-6, And-25)
det(Babu-27, the-26)
nsubj(hissed-39, Babu-27)
case(him-29, above-28)
nmod:above(Babu-27, him-29)
acl(him-29, convulsed-31)
case(fear-33, with-32)
nmod:with(convulsed-31, fear-33)
acl(him-29, Heard-35)
det(life-breath-38, the-36)
amod(life-breath-38, labouring-37)
dobj(Heard-35, life-breath-38)
conj:and(struggle-6, hissed-39)
compound:prt(hissed-39, out-40)
case(ear-43, in-41)
nmod:poss(ear-43, his-42)
nmod:in(hissed-39, ear-43)

(ROOT
  (SQ (CC And)
    (FRAG
      (ADVP (RB thus))
      (SBAR (IN in)
        (S
          (NP (DT a) (NN fashion))
          (VP (VBD undignified)
            (SBAR
              (S
                (NP
                  (NP (DT The) (JJ princely) (NN pest))
                  (PP (IN of)
                    (NP (DT the) (NNP Chindwin))))
                (VP (VBD died))
                (. .)))
            (. .))
          (. .))
        (. .))
      (. .))
    (. .)))

root(ROOT-0, And-1)
dep(And-1, thus-2)
mark(undignified-6, in-3)
det(fashion-5, a-4)
nsubj(undignified-6, fashion-5)
dep(thus-2, undignified-6)
det(pest-9, The-7)
amod(pest-9, princely-8)
nsubj(died-13, pest-9)
case(Chindwin-12, of-10)
det(Chindwin-12, the-11)
nmod:of(pest-9, Chindwin-12)
ccomp(undignified-6, died-13)

(ROOT
  (S
    (VP (VB Turn)
      (ADVP (RB now))
      (PP (TO to)
        (NP
          (NP (NNP Simoorie))
          (SBAR
            (WHADVP (WRB where))
            (PRN (, ,)
              (S
                (VP (VBN lapped)
                  (PP (IN in)
                    (NP (PRP$ his) (NN ease)))))
              (, ,))
            (S
              (NP (DT The) (NNP Captain))
              (VP (VBZ is)
                (VP (VBG petting)
                  (NP (DT the) (NN Bride))
                  (PP (IN on)
                    (NP (PRP$ his) (NNS knees)))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB Where))
                    (FRAG
                      (NP (DT the) (JJ _) (NN whit) (NNS _))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN bullet))
                          (, ,)
                          (UCP
                            (S
                              (NP
                                (NP (DT the) (JJ wounded) (NN man) (POS 's))
                                (NN scream))
                              (VP (VBP Are)
                                (ADJP (VBN mixed)
                                  (PP (IN as)
                                    (NP
                                      (NP (DT the) (NN mist))
                                      (PP (IN of)
                                        (NP (DT some) (JJ devilish) (NN dream))))))))
                            (: --)
                            (FRAG
                              (NP
                                (NP (NNP Forgotten))
                                (, ,)
                                (VP (VBN forgotten)
                                  (NP
                                    (NP (DT the) (NN sweat))
                                    (PP (IN of)
                                      (NP (DT the) (NN shambles))))
                                  (SBAR
                                    (WHADVP (WRB Where))
                                    (S
                                      (NP
                                        (NP (DT the) (JJ hill-daisy) (NNS blooms))
                                        (CC and)
                                        (NP (DT the) (JJ gray) (NN monkey)))
                                      (VP (VBZ gambols) (, ,)
                                        (SBAR
                                          (S
                                            (PP (IN From)
                                              (NP
                                                (NP (DT the) (NN sword-belt))
                                                (VP
                                                  (VP (VBN set)
                                                    (S
                                                      (ADJP (JJ free))))
                                                  (CC and)
                                                  (VP (VBN released)
                                                    (PP (IN from)
                                                      (NP (DT the) (NN steel)))))))
                                            (, ,)
                                            (NP
                                              (NP (DT The) (NN Peace))
                                              (PP (IN of)
                                                (NP (DT the) (NNP Lord))))
                                            (VP (VBZ is)
                                              (PP (IN with)
                                                (NP (NNP Captain) (NNP O'Neil)))))))
                                      (. .)))))
                              (. .))
                            (. .)))
                        (. .))
                      (. .))))))))))
    (. .)))

root(ROOT-0, Turn-1)
advmod(Turn-1, now-2)
case(Simoorie-4, to-3)
nmod:to(Turn-1, Simoorie-4)
advmod(petting-15, where-5)
dep(petting-15, lapped-7)
case(ease-10, in-8)
nmod:poss(ease-10, his-9)
nmod:in(lapped-7, ease-10)
det(Captain-13, The-12)
nsubj(petting-15, Captain-13)
aux(petting-15, is-14)
acl:relcl(Simoorie-4, petting-15)
det(Bride-17, the-16)
dobj(petting-15, Bride-17)
case(knees-20, on-18)
nmod:poss(knees-20, his-19)
nmod:on(petting-15, knees-20)
advmod(_-26, Where-22)
det(_-26, the-23)
amod(_-26, _-24)
compound(_-26, whit-25)
advcl(petting-15, _-26)
case(bullet-29, of-27)
det(bullet-29, the-28)
nmod:of(_-26, bullet-29)
det(man-33, the-31)
amod(man-33, wounded-32)
nmod:poss(scream-35, man-33)
case(man-33, 's-34)
nsubjpass(mixed-37, scream-35)
auxpass(mixed-37, Are-36)
dep(bullet-29, mixed-37)
case(mist-40, as-38)
det(mist-40, the-39)
nmod:as(mixed-37, mist-40)
case(dream-44, of-41)
det(dream-44, some-42)
amod(dream-44, devilish-43)
nmod:of(mist-40, dream-44)
dep(mixed-37, Forgotten-46)
acl(Forgotten-46, forgotten-48)
det(sweat-50, the-49)
dobj(forgotten-48, sweat-50)
case(shambles-53, of-51)
det(shambles-53, the-52)
nmod:of(sweat-50, shambles-53)
advmod(gambols-62, Where-54)
det(blooms-57, the-55)
amod(blooms-57, hill-daisy-56)
nsubj(gambols-62, blooms-57)
cc(blooms-57, and-58)
det(monkey-61, the-59)
amod(monkey-61, gray-60)
conj:and(blooms-57, monkey-61)
nsubj(gambols-62, monkey-61)
advcl(forgotten-48, gambols-62)
case(sword-belt-66, From-64)
det(sword-belt-66, the-65)
nmod:from(O'Neil-83, sword-belt-66)
dep(sword-belt-66, set-67)
xcomp(set-67, free-68)
cc(set-67, and-69)
dep(sword-belt-66, released-70)
conj:and(set-67, released-70)
case(steel-73, from-71)
det(steel-73, the-72)
nmod:from(released-70, steel-73)
det(Peace-76, The-75)
nsubj(O'Neil-83, Peace-76)
case(Lord-79, of-77)
det(Lord-79, the-78)
nmod:of(Peace-76, Lord-79)
cop(O'Neil-83, is-80)
case(O'Neil-83, with-81)
compound(O'Neil-83, Captain-82)
ccomp(gambols-62, O'Neil-83)

(ROOT
  (S
    (PP (IN Up)
      (NP
        (NP
          (NP (DT the) (NN hill))
          (PP (TO to)
            (NP (NNP Simoorie))))
        (: --)
        (UCP
          (ADJP (RBS most) (JJ patient)
            (PP (IN of)
              (NP (NNS drudges))))
          (: --)
          (NP
            (NP (DT The) (NNS bags))
            (PP (IN on)
              (NP (PRP$ his) (NN shoulder)))))))
    (, ,)
    (NP (DT the) (NN mail-runner))
    (VP (VBZ trudges))
    (. .)))

case(hill-3, Up-1)
det(hill-3, the-2)
nmod:up(trudges-20, hill-3)
case(Simoorie-5, to-4)
nmod:to(hill-3, Simoorie-5)
advmod(patient-8, most-7)
amod(hill-3, patient-8)
case(drudges-10, of-9)
nmod:of(patient-8, drudges-10)
det(bags-13, The-12)
dep(patient-8, bags-13)
case(shoulder-16, on-14)
nmod:poss(shoulder-16, his-15)
nmod:on(bags-13, shoulder-16)
det(mail-runner-19, the-18)
nsubj(trudges-20, mail-runner-19)
root(ROOT-0, trudges-20)

(ROOT
  (S (`` ``)
    (PP (IN For)
      (NP (NNP Captain) (NNP O'Neil)))
    (, ,)
    (NP (NNP _) (NNP Sahib))
    (VP (VBZ _))
    (. .)))

case(O'Neil-4, For-2)
compound(O'Neil-4, Captain-3)
nmod:for(_-8, O'Neil-4)
compound(Sahib-7, _-6)
nsubj(_-8, Sahib-7)
root(ROOT-0, _-8)

(ROOT
  (S
    (NP
      (NP (CD One) (CD hundred))
      (CC and)
      (NP (CD ten)))
    (VP (VBZ Rupees)
      (S
        (VP (TO to)
          (VP (VB collect)
            (PP (IN on)
              (NP (NN delivery)))))))
    (. .) ('' '')))

nummod(hundred-2, One-1)
nsubj(Rupees-5, hundred-2)
nsubj:xsubj(collect-7, hundred-2)
cc(hundred-2, and-3)
conj:and(hundred-2, ten-4)
nsubj(Rupees-5, ten-4)
nsubj:xsubj(collect-7, ten-4)
root(ROOT-0, Rupees-5)
mark(collect-7, to-6)
xcomp(Rupees-5, collect-7)
case(delivery-9, on-8)
nmod:on(collect-7, delivery-9)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (-LRB- -LRB-)
      (NP (PRP$ Their) (NN breakfast))
      (VP (VBD was)
        (VP (VBN stopped)
          (PP (IN while)
            (NP
              (NP (DT the)
                (ADJP (JJ screw-jack)
                  (CC and)
                  (JJ hammer))
                (NNP Tore) (NN waxcloth))
              (, ,)
              (VP (VBN split)
                (S
                  (ADJP (JJ teak-wood))))))))
      (, ,))
    (CC and)
    (S
      (VP (VBN chipped)
        (PRT (RP out))
        (NP
          (NP
            (NP
              (NP (DT the) (NN dammer))
              (NP (NNP ;-RRB-)))
            (ADJP (JJ Open-eyed) (, ,) (JJ open-mouthed))
            (, ,)
            (PP (IN on)
              (NP
                (NP (DT the) (NN napery) (POS 's))
                (NN snow)))
            (, ,)
            (PP (IN With)
              (NP
                (NP (DT a) (NN crash))
                (CC and)
                (NP (DT a) (NN thud))))
            (, ,)
            (VP (VBN rolled)))
          (: --)
          (NP
            (NP (DT the) (NNP Head))
            (PP (IN of)
              (NP (DT the) (NNP Boh)))))))
    (. !)))

advmod(stopped-6, Then-1)
nmod:poss(breakfast-4, Their-3)
nsubjpass(stopped-6, breakfast-4)
nsubjpass(chipped-19, breakfast-4)
auxpass(stopped-6, was-5)
root(ROOT-0, stopped-6)
case(waxcloth-13, while-7)
det(waxcloth-13, the-8)
amod(waxcloth-13, screw-jack-9)
cc(screw-jack-9, and-10)
conj:and(screw-jack-9, hammer-11)
amod(waxcloth-13, hammer-11)
compound(waxcloth-13, Tore-12)
nmod:while(stopped-6, waxcloth-13)
acl(waxcloth-13, split-15)
xcomp(split-15, teak-wood-16)
cc(stopped-6, and-18)
conj:and(stopped-6, chipped-19)
compound:prt(chipped-19, out-20)
det(dammer-22, the-21)
dobj(chipped-19, dammer-22)
appos(dammer-22, ;-RRB--23)
amod(open-mouthed-26, Open-eyed-24)
amod(dammer-22, open-mouthed-26)
case(snow-32, on-28)
det(napery-30, the-29)
nmod:poss(snow-32, napery-30)
case(napery-30, 's-31)
nmod:on(dammer-22, snow-32)
case(crash-36, With-34)
det(crash-36, a-35)
nmod:with(dammer-22, crash-36)
cc(crash-36, and-37)
det(thud-39, a-38)
nmod:with(dammer-22, thud-39)
conj:and(crash-36, thud-39)
acl(dammer-22, rolled-41)
det(Head-44, the-43)
dep(dammer-22, Head-44)
case(Boh-47, of-45)
det(Boh-47, the-46)
nmod:of(Head-44, Boh-47)

(ROOT
  (S (CC And)
    (S
      (NP
        (NP (JJ gummed))
        (PP (TO to)
          (NP (DT the) (NN scalp))))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN letter))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD ran)))))))
    (: :) (: --) (`` ``)
    (S
      (NP (NNP IN) (NNP FIELDING))
      (VP (VBP FORCE)
        (ADVP (RB SERVICE))))
    (. .)))

cc(letter-8, And-1)
nsubj(letter-8, gummed-2)
case(scalp-5, to-3)
det(scalp-5, the-4)
nmod:to(gummed-2, scalp-5)
cop(letter-8, was-6)
det(letter-8, a-7)
root(ROOT-0, letter-8)
nsubj(ran-10, letter-8)
ref(letter-8, which-9)
acl:relcl(letter-8, ran-10)
compound(FIELDING-15, IN-14)
nsubj(FORCE-16, FIELDING-15)
parataxis(letter-8, FORCE-16)
advmod(FORCE-16, SERVICE-17)

(ROOT
  (NP
    (NP (NNP _) (NNP Encampment) (NNP _))
    (, ,)
    (NP (JJ 10th) (NNP Jan.))
    (. .)))

compound(_-3, _-1)
compound(_-3, Encampment-2)
root(ROOT-0, _-3)
amod(Jan.-6, 10th-5)
appos(_-3, Jan.-6)

(ROOT
  (S
    (NP
      (NP (`` ``) (NNP Dear) (NNP Sir) (, ,))
      (PRN (: --)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (S
              (VP (VB honour)
                (S
                  (VP (TO to)
                    (VP (VB send) (, ,)
                      (ADVP (RB _))
                      (SBAR (IN as)
                        (S
                          (NP (PRP you))
                          (VP (VBD said)
                            (NP (NNS _)))
                          (, ,)
                          (PP (IN For)
                            (NP (JJ final) (NN approval)
                              (PRN (-LRB- -LRB-)
                                (S
                                  (VP (VB see)
                                    (PP (IN under))))
                                (-RRB- -RRB-))))))))))
              (NP
                (NP (NNP Boh) (POS 's))
                (NNP Head)))))
        (: ;))
      (`` ``))
    (VP (VBD Was)
      (VP (VBD took)
        (PP (IN by)
          (NP (PRP myself)))
        (PP (IN in)
          (NP
            (ADJP (RBS most) (JJ bloody))
            (NN affair)))))
    (. .)))

compound(Sir-3, Dear-2)
nsubjpass(took-31, Sir-3)
nsubj(have-7, I-6)
dep(Sir-3, have-7)
ccomp(have-7, honour-8)
mark(send-10, to-9)
xcomp(honour-8, send-10)
advmod(send-10, _-12)
mark(said-15, as-13)
nsubj(said-15, you-14)
advcl(send-10, said-15)
dobj(said-15, _-16)
case(approval-20, For-18)
amod(approval-20, final-19)
nmod:for(said-15, approval-20)
dep(approval-20, see-22)
nmod(see-22, under-23)
nmod:poss(Head-27, Boh-25)
case(Boh-25, 's-26)
dep(honour-8, Head-27)
auxpass(took-31, Was-30)
root(ROOT-0, took-31)
case(myself-33, by-32)
nmod:by(took-31, myself-33)
case(affair-37, in-34)
advmod(bloody-36, most-35)
amod(affair-37, bloody-36)
nmod:in(took-31, affair-37)

(ROOT
  (S
    (PP (IN By)
      (NP (NNP High)))
    (NP (NNP Education))
    (VP (VBD brought)
      (NP (NN pressure))
      (S
        (VP (TO to)
          (VP (VB bear)))))
    (. .)))

case(High-2, By-1)
nmod:by(brought-4, High-2)
nsubj(brought-4, Education-3)
root(ROOT-0, brought-4)
dobj(brought-4, pressure-5)
mark(bear-7, to-6)
advcl(brought-4, bear-7)

(ROOT
  (S (`` ``)
    (ADVP (RB Now))
    (VP (VB violate)
      (S
        (NP
          (NP (NNP Liberty))
          (, ,)
          (NP
            (NP (NN time))
            (VP (VBG being)
              (ADJP (JJ bad))))
          (, ,))
        (VP (TO To)
          (VP (VB mail)
            (S
              (NP
                (NP (NNP V.P.P.))
                (PRN (-LRB- -LRB-)
                  (NP
                    (QP (CD rupees) (CD hundred)))
                  (-RRB- -RRB-)))
              (VP (VB Please)
                (VP (VB add) (`` ``)
                  (SBAR
                    (WHNP (WDT Whatever))
                    (S
                      (NP (PRP$ Your) (NN Honour))
                      (VP (MD can)
                        (VP (VB pass))))))))))))
    (. .)))

advmod(violate-3, Now-2)
root(ROOT-0, violate-3)
dobj(violate-3, Liberty-4)
nsubj:xsubj(mail-11, Liberty-4)
appos(Liberty-4, time-6)
cop(bad-8, being-7)
acl(time-6, bad-8)
mark(mail-11, To-10)
xcomp(violate-3, mail-11)
nsubj(Please-17, V.P.P.-12)
compound(hundred-15, rupees-14)
dep(V.P.P.-12, hundred-15)
ccomp(mail-11, Please-17)
xcomp(Please-17, add-18)
dobj(pass-24, Whatever-20)
nmod:poss(Honour-22, Your-21)
nsubj(pass-24, Honour-22)
aux(pass-24, can-23)
ccomp(add-18, pass-24)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Price))
        (PP (IN of)
          (NP (NNP Blood))))
      (VP (VBZ Much)
        (ADJP (JJ cheap)
          (PP (IN at)
            (NP (CD one) (CD hundred))))))
    (, ,)
    (CC and)
    (S
      (NP (NNS children))
      (VP (VBP want)
        (NP (NN food))))
    (: ;) (`` ``) (RB So)
    (S
      (S
        (VP (VBG trusting)
          (NP (PRP$ Your) (NN Honour))))
      (VP (MD will)
        (ADVP (RB somewhat))
        (VP (VB retain)
          (NP
            (NP (NNP True) (NN love)
              (CC and)
              (NN affection))
            (PP (IN for)
              (NP (NNP Govt)))))))
    (. .)))

nsubj(Much-4, Price-1)
case(Blood-3, of-2)
nmod:of(Price-1, Blood-3)
root(ROOT-0, Much-4)
xcomp(Much-4, cheap-5)
case(hundred-8, at-6)
nummod(hundred-8, one-7)
nmod:at(cheap-5, hundred-8)
cc(Much-4, and-10)
nsubj(want-12, children-11)
conj:and(Much-4, want-12)
dobj(want-12, food-13)
advmod(Much-4, So-16)
csubj(retain-22, trusting-17)
nmod:poss(Honour-19, Your-18)
dobj(trusting-17, Honour-19)
aux(retain-22, will-20)
advmod(retain-22, somewhat-21)
dep(Much-4, retain-22)
compound(love-24, True-23)
dobj(retain-22, love-24)
cc(love-24, and-25)
dobj(retain-22, affection-26)
conj:and(love-24, affection-26)
case(Govt-28, for-27)
nmod:for(love-24, Govt-28)

(ROOT
  (S
    (NP (NNP Bullock))
    (VP (VBZ Train) (, ,) (`` ``)
      (FRAG (CC And)
        (VP (VB show)
          (NP
            (NP (JJ awful) (NN kindness))
            (FRAG
              (S
                (VP (TO to)
                  (VP (VB satisfy)
                    (NP (PRP me)))))
              (, ,)
              (NP
                (NP (PRP I))
                (SBAR
                  (S
                    (VP
                      (VP (VBP am))
                      (, ,)
                      (NP
                        (NP (NNP Graceful) (NNP Master))
                        (, ,)
                        (NP (PRP$ Your) (NNP H.) (NNP MUKERJI))
                        (. .) ('' '')))))
                (. .))
              (. .))))
        (. .)))
    (. .) (. .)))

nsubj(Train-2, Bullock-1)
root(ROOT-0, Train-2)
cc(show-6, And-5)
dep(Train-2, show-6)
amod(kindness-8, awful-7)
dobj(show-6, kindness-8)
mark(satisfy-10, to-9)
dep(I-13, satisfy-10)
dobj(satisfy-10, me-11)
dep(kindness-8, I-13)
acl:relcl(I-13, am-14)
compound(Master-17, Graceful-16)
dobj(am-14, Master-17)
nmod:poss(MUKERJI-21, Your-19)
compound(MUKERJI-21, H.-20)
appos(Master-17, MUKERJI-21)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (DT the) (NN rabbit))
        (VP (VBZ is)
          (VP (VBN drawn)
            (PP (TO to)
              (NP
                (NP (DT the) (NN rattlesnake) (POS 's))
                (NN power)))))))
    (, ,)
    (SBAR (IN As)
      (S
        (NP
          (NP (DT the) (NN smoker) (POS 's))
          (NN eye))
        (VP (VBZ fills)
          (PP (IN at)
            (NP (DT the) (NN opium) (NN hour))))))
    (, ,)
    (SBAR (IN As)
      (S
        (NP (DT a) (NN horse))
        (VP (VBZ reaches)
          (PRT (RP up))
          (PP (TO to)
            (NP (DT the) (NN manger)))
          (ADVP (RB above)))))
    (, ,)
    (SBAR (IN As)
      (S
        (NP (DT the) (VBG waiting) (NN ear))
        (VP (VBZ yearns)
          (PP (IN for)
            (NP
              (NP (DT the) (NN whisper))
              (PP (IN of)
                (NP (NN love)))))
          (, ,)
          (PP (IN From)
            (NP
              (NP (DT the) (NNS arms))
              (PP (IN of)
                (NP (DT the) (NNP Bride)))
              (, ,)
              (ADJP (JJ iron-visaged)
                (CC and)
                (JJ slow)))))))
    (, ,)
    (NP (DT The) (NNP Captain))
    (VP (VB bent)
      (PRT (RP down))
      (PP (TO to)
        (NP
          (NP (DT the) (NNP Head))
          (PP (IN of)
            (NP (DT the) (NNP Boh))))))
    (. .)))

mark(drawn-5, As-1)
det(rabbit-3, the-2)
nsubjpass(drawn-5, rabbit-3)
auxpass(drawn-5, is-4)
advcl(bent-57, drawn-5)
case(power-10, to-6)
det(rattlesnake-8, the-7)
nmod:poss(power-10, rattlesnake-8)
case(rattlesnake-8, 's-9)
nmod:to(drawn-5, power-10)
mark(fills-17, As-12)
det(smoker-14, the-13)
nmod:poss(eye-16, smoker-14)
case(smoker-14, 's-15)
nsubj(fills-17, eye-16)
advcl(bent-57, fills-17)
case(hour-21, at-18)
det(hour-21, the-19)
compound(hour-21, opium-20)
nmod:at(fills-17, hour-21)
mark(reaches-26, As-23)
det(horse-25, a-24)
nsubj(reaches-26, horse-25)
advcl(bent-57, reaches-26)
compound:prt(reaches-26, up-27)
case(manger-30, to-28)
det(manger-30, the-29)
nmod:to(reaches-26, manger-30)
advmod(reaches-26, above-31)
mark(yearns-37, As-33)
det(ear-36, the-34)
amod(ear-36, waiting-35)
nsubj(yearns-37, ear-36)
advcl(bent-57, yearns-37)
case(whisper-40, for-38)
det(whisper-40, the-39)
nmod:for(yearns-37, whisper-40)
case(love-42, of-41)
nmod:of(whisper-40, love-42)
case(arms-46, From-44)
det(arms-46, the-45)
nmod:from(yearns-37, arms-46)
case(Bride-49, of-47)
det(Bride-49, the-48)
nmod:of(arms-46, Bride-49)
amod(arms-46, iron-visaged-51)
cc(iron-visaged-51, and-52)
amod(arms-46, slow-53)
conj:and(iron-visaged-51, slow-53)
det(Captain-56, The-55)
nsubj(bent-57, Captain-56)
root(ROOT-0, bent-57)
compound:prt(bent-57, down-58)
case(Head-61, to-59)
det(Head-61, the-60)
nmod:to(bent-57, Head-61)
case(Boh-64, of-62)
det(Boh-64, the-63)
nmod:of(Head-61, Boh-64)

(ROOT
  (SINV (CC And)
    (VP (VBG e) (`` `)
      (ADVP (IN en))
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (VBD looked)
            (PP (IN on)
              (NP (DT the) (NN Thing)))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP It))
                (VP (VBD lay) (`` `)
                  (S
                    (NP (NNP Twixt))
                    (NP
                      (NP (DT the) (JJ winking) (JJ new) (NNS spoons))
                      (CC and)
                      (NP
                        (NP (DT the) (NNS napkins) (POS '))
                        (NN array)))
                    (, ,)
                    (S
                      (NP (DT The) (VBN freed) (NN mind)))))))))))
    (VP (VBD fled)
      (PRT (RP back))
      (PP (TO to)
        (NP (DT the) (NN long-ago))))
    (NP
      (NP (NNS days))
      (: --)
      (NP (DT The) (JJ hand-to-hand) (NN scuffle))
      (: --)
      (NP
        (NP
          (NP (DT the) (NN smoke))
          (CC and)
          (NP (DT the) (NN blaze)))
        (: --)
        (NP
          (NP
            (NP (DT The) (JJ forced) (NN march))
            (PP (IN at)
              (NP (NN night))))
          (CC and)
          (NP
            (NP (DT the) (JJ quick) (NN rush))
            (PP (IN at)
              (NP (NN dawn)))))
        (: --)
        (NP
          (NP (DT The) (NN banjo))
          (PP (IN at)
            (NP
              (NP (NN twilight))
              (, ,)
              (NP (DT the) (NN burial) (NN ere) (NN morn)))))
        (: --)
        (NP
          (NP (DT The) (NN stench))
          (PP (IN of)
            (NP (DT the) (NNS marshes))))
        (: --)
        (NP
          (NP (DT the) (JJ raw) (, ,) (JJ piercing) (NN smell))
          (SBAR
            (WHADVP (WRB When))
            (S
              (NP (DT the) (JJ overhand) (NN stabbing-cut))
              (VP (NNP silenced)
                (NP (DT the) (NN yell))))))
        (: --)
        (NP
          (NP (DT The) (NNS oaths))
          (PP (IN of)
            (NP (PRP$ his) (JJ Irish)))))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD surged)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBD stood)
                  (SBAR
                    (WHADVP (WRB Where))
                    (S
                      (NP (DT the) (JJ black) (NN crosses))
                      (VP (VBD hung)
                        (VP (VB o'er)
                          (NP (DT the) (NNP Kuttamow) (NN flood)))))))))))))
    (. .)))

cc(e-2, And-1)
root(ROOT-0, e-2)
advmod(e-2, en-4)
mark(looked-7, as-5)
nsubj(looked-7, he-6)
advcl(e-2, looked-7)
case(Thing-10, on-8)
det(Thing-10, the-9)
nmod:on(looked-7, Thing-10)
advmod(lay-13, where-11)
nsubj(lay-13, It-12)
advcl(looked-7, lay-13)
nsubj(mind-28, Twixt-15)
det(spoons-19, the-16)
amod(spoons-19, winking-17)
amod(spoons-19, new-18)
dep(mind-28, spoons-19)
cc(spoons-19, and-20)
det(napkins-22, the-21)
nmod:poss(array-24, napkins-22)
case(napkins-22, '-23)
conj:and(spoons-19, array-24)
dep(mind-28, array-24)
det(mind-28, The-26)
amod(mind-28, freed-27)
xcomp(lay-13, mind-28)
dep(e-2, fled-29)
compound:prt(fled-29, back-30)
case(long-ago-33, to-31)
det(long-ago-33, the-32)
nmod:to(fled-29, long-ago-33)
nsubj(e-2, days-34)
nsubj(surged-93, days-34)
det(scuffle-38, The-36)
amod(scuffle-38, hand-to-hand-37)
dep(days-34, scuffle-38)
det(smoke-41, the-40)
dep(days-34, smoke-41)
cc(smoke-41, and-42)
det(blaze-44, the-43)
dep(days-34, blaze-44)
conj:and(smoke-41, blaze-44)
det(march-48, The-46)
amod(march-48, forced-47)
dep(smoke-41, march-48)
case(night-50, at-49)
nmod:at(march-48, night-50)
cc(march-48, and-51)
det(rush-54, the-52)
amod(rush-54, quick-53)
dep(smoke-41, rush-54)
conj:and(march-48, rush-54)
case(dawn-56, at-55)
nmod:at(rush-54, dawn-56)
det(banjo-59, The-58)
dep(smoke-41, banjo-59)
case(twilight-61, at-60)
nmod:at(banjo-59, twilight-61)
det(morn-66, the-63)
compound(morn-66, burial-64)
compound(morn-66, ere-65)
appos(twilight-61, morn-66)
det(stench-69, The-68)
dep(smoke-41, stench-69)
case(marshes-72, of-70)
det(marshes-72, the-71)
nmod:of(stench-69, marshes-72)
det(smell-78, the-74)
amod(smell-78, raw-75)
amod(smell-78, piercing-77)
dep(smoke-41, smell-78)
advmod(yell-85, When-79)
det(stabbing-cut-82, the-80)
amod(stabbing-cut-82, overhand-81)
nsubj(yell-85, stabbing-cut-82)
dep(yell-85, silenced-83)
det(yell-85, the-84)
acl:relcl(smell-78, yell-85)
det(oaths-88, The-87)
dep(smoke-41, oaths-88)
case(Irish-91, of-89)
nmod:poss(Irish-91, his-90)
nmod:of(oaths-88, Irish-91)
ref(days-34, that-92)
acl:relcl(days-34, surged-93)
advmod(stood-96, when-94)
nsubj(stood-96, they-95)
advcl(surged-93, stood-96)
advmod(hung-101, Where-97)
det(crosses-100, the-98)
amod(crosses-100, black-99)
nsubj(hung-101, crosses-100)
advcl(stood-96, hung-101)
xcomp(hung-101, o'er-102)
det(flood-105, the-103)
compound(flood-105, Kuttamow-104)
dobj(o'er-102, flood-105)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (DT a) (NN derelict) (NN ship))
        (VP (VBZ drifts)
          (PRT (RP away))
          (PP (IN with)
            (NP (DT the) (NN tide))))))
    (NP (DT The) (NNP Captain))
    (VP (VBD went)
      (PRT (RP out))
      (PP (IN on)
        (NP
          (NP (DT the) (NNP Past))
          (PP (IN from)
            (NP (PRP$ his) (NN Bride))))
        (, ,)
        (ADVP (RB Back)))
      (, ,)
      (ADVP (RB back))
      (, ,)
      (PP (IN through)
        (NP
          (NP (DT the) (NNS springs))
          (PP (TO to)
            (NP
              (NP (DT the) (NN chill))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN year))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB When))
                    (S
                      (NP (PRP he))
                      (VP (VBN hunted)
                        (NP (DT the) (NN Boh))
                        (PP (IN from)
                          (NP (NNP Maloon)))
                        (PP (TO to)
                          (NP (NNP Tsaleer)))))))))))))
    (. .)))

mark(drifts-5, As-1)
det(ship-4, a-2)
compound(ship-4, derelict-3)
nsubj(drifts-5, ship-4)
advcl(went-12, drifts-5)
compound:prt(drifts-5, away-6)
case(tide-9, with-7)
det(tide-9, the-8)
nmod:with(drifts-5, tide-9)
det(Captain-11, The-10)
nsubj(went-12, Captain-11)
root(ROOT-0, went-12)
compound:prt(went-12, out-13)
case(Past-16, on-14)
det(Past-16, the-15)
nmod:on(went-12, Past-16)
case(Bride-19, from-17)
nmod:poss(Bride-19, his-18)
nmod:from(Past-16, Bride-19)
advmod(Past-16, Back-21)
advmod(went-12, back-23)
case(springs-27, through-25)
det(springs-27, the-26)
nmod:through(went-12, springs-27)
case(chill-30, to-28)
det(chill-30, the-29)
nmod:to(springs-27, chill-30)
case(year-33, of-31)
det(year-33, the-32)
nmod:of(chill-30, year-33)
advmod(hunted-37, When-35)
nsubj(hunted-37, he-36)
acl:relcl(year-33, hunted-37)
det(Boh-39, the-38)
dobj(hunted-37, Boh-39)
case(Maloon-41, from-40)
nmod:from(hunted-37, Maloon-41)
case(Tsaleer-43, to-42)
nmod:to(hunted-37, Tsaleer-43)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (NP
            (NP (DT the) (NN shape))
            (PP (IN of)
              (NP (DT a) (NN corpse))))
          (VP (VBZ dimmers)
            (PRT (RP up))
            (PP (IN through)
              (NP (JJ deep) (NN water)))
            (, ,)
            (PP (IN In)
              (NP (PRP$ his) (NN eye))))))
      (VP (VBD lit)
        (NP
          (NP (DT the) (JJ passionless) (NN passion))
          (PP (IN of)
            (NP (NN slaughter))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (NNS men))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD had)
              (VP (VBN fought)
                (PP (IN with)
                  (NP
                    (NP (NNP O'Neil))
                    (PP (IN for)
                      (NP (DT the) (NN life))))))))))
      (VP (VBD Had)
        (VP (VBN gazed)
          (PP (IN on)
            (NP (PRP$ his) (NN face)))
          (PP (IN with)
            (NP
              (NP (JJR less) (NN dread))
              (PP (IN than)
                (NP (PRP$ his) (NN wife))))))))
    (. .)))

mark(dimmers-7, As-1)
det(shape-3, the-2)
nsubj(dimmers-7, shape-3)
case(corpse-6, of-4)
det(corpse-6, a-5)
nmod:of(shape-3, corpse-6)
csubj(lit-16, dimmers-7)
compound:prt(dimmers-7, up-8)
case(water-11, through-9)
amod(water-11, deep-10)
nmod:through(dimmers-7, water-11)
case(eye-15, In-13)
nmod:poss(eye-15, his-14)
nmod:in(dimmers-7, eye-15)
root(ROOT-0, lit-16)
det(passion-19, the-17)
amod(passion-19, passionless-18)
dobj(lit-16, passion-19)
case(slaughter-21, of-20)
nmod:of(passion-19, slaughter-21)
cc(lit-16, And-23)
nsubj(fought-27, men-24)
nsubj(gazed-34, men-24)
ref(men-24, who-25)
aux(fought-27, had-26)
acl:relcl(men-24, fought-27)
case(O'Neil-29, with-28)
nmod:with(fought-27, O'Neil-29)
case(life-32, for-30)
det(life-32, the-31)
nmod:for(O'Neil-29, life-32)
aux(gazed-34, Had-33)
conj:and(lit-16, gazed-34)
case(face-37, on-35)
nmod:poss(face-37, his-36)
nmod:on(gazed-34, face-37)
case(dread-40, with-38)
amod(dread-40, less-39)
nmod:with(gazed-34, dread-40)
case(wife-43, than-41)
nmod:poss(wife-43, his-42)
nmod:than(dread-40, wife-43)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP
          (NP (PRP she))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD had)
                (VP (VBN held)))))))
      (NP (PRP him))
      (ADVP (RB so) (RB long))
      (VP (MD could) (RB not)
        (VP (VB hold)
          (NP (PRP him)))))
    (PRN (: --)
      (SBAR (IN Though)
        (S
          (NP (DT a) (JJ four-month) (NN Eternity))
          (VP (MD should)
            (VP (VB have)
              (VP (VBN controlled)
                (NP (PRP him)))))))
      (: --))
    (CC But)
    (S
      (S
        (VP (VBN watched)
          (NP
            (NP
              (NP (DT the) (JJ twin) (NN Terror))
              (: --)
              (NP
                (NP (DT the) (NN head))
                (VP (VBN turned)
                  (S
                    (VP (TO to)
                      (VP (VB head))))))
              (: --)
              (NP
                (NP (DT The) (NN scowling))
                (, ,)
                (NP (NNP scarred) (NNP Black))
                (, ,)
                (CC and)
                (NP (DT the) (JJ flushed) (JJ savage) (NNP Red))))
            (: --)
            (NP
              (NP (DT The) (NN spirit))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP
                    (VP (VBD changed)
                      (PP (IN from)
                        (NP (PRP$ her) (NN knowing))))
                    (CC and)
                    (VP (VBD flew)
                      (PP (TO to)
                        (NP (DT Some) (JJ grim) (JJ hidden) (NN Past)))))))))))
      (NP (PRP she))
      (VP (VBD had)
        (ADVP (RB never))
        (NP (DT a) (NN clue)
          (S
            (VP (TO to))))))
    (. .)))

case(she-2, For-1)
nsubj(held-5, she-2)
nmod:for(hold-11, she-2)
ref(she-2, who-3)
aux(held-5, had-4)
acl:relcl(she-2, held-5)
nsubj(hold-11, him-6)
advmod(long-8, so-7)
advmod(hold-11, long-8)
aux(hold-11, could-9)
neg(hold-11, not-10)
root(ROOT-0, hold-11)
dobj(hold-11, him-12)
mark(controlled-20, Though-14)
det(Eternity-17, a-15)
amod(Eternity-17, four-month-16)
nsubj(controlled-20, Eternity-17)
aux(controlled-20, should-18)
aux(controlled-20, have-19)
dep(hold-11, controlled-20)
dobj(controlled-20, him-21)
cc(hold-11, But-23)
dep(had-62, watched-24)
det(Terror-27, the-25)
amod(Terror-27, twin-26)
dobj(watched-24, Terror-27)
det(head-30, the-29)
dep(Terror-27, head-30)
acl(head-30, turned-31)
mark(head-33, to-32)
xcomp(turned-31, head-33)
det(scowling-36, The-35)
dep(Terror-27, scowling-36)
compound(Black-39, scarred-38)
dep(Terror-27, Black-39)
conj:and(scowling-36, Black-39)
cc(scowling-36, and-41)
det(Red-45, the-42)
amod(Red-45, flushed-43)
amod(Red-45, savage-44)
dep(Terror-27, Red-45)
conj:and(scowling-36, Red-45)
det(spirit-48, The-47)
dep(Terror-27, spirit-48)
nsubj(changed-50, spirit-48)
nsubj(flew-55, spirit-48)
ref(spirit-48, that-49)
acl:relcl(spirit-48, changed-50)
case(knowing-53, from-51)
nmod:poss(knowing-53, her-52)
nmod:from(changed-50, knowing-53)
cc(changed-50, and-54)
acl:relcl(spirit-48, flew-55)
conj:and(changed-50, flew-55)
case(Past-60, to-56)
det(Past-60, Some-57)
amod(Past-60, grim-58)
amod(Past-60, hidden-59)
nmod:to(flew-55, Past-60)
nsubj(had-62, she-61)
conj:but(hold-11, had-62)
neg(had-62, never-63)
det(clue-65, a-64)
dobj(had-62, clue-65)
acl(clue-65, to-66)

(ROOT
  (S
    (S (CC But)
      (NP (PRP It))
      (VP (VBD knew)
        (SBAR (IN as)
          (S
            (NP (PRP It))
            (VP (VBD grinned))))))
    (PRN (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP he))
          (VP (VBD touched)
            (NP (PRP it))
            (UCP
              (ADJP (JJ unfearing))
              (, ,)
              (CC And)
              (VP (VBN muttered)
                (ADVP (RB aloud)))))))
      (, ,))
    (`` ``)
    (CC So)
    (S
      (NP (PRP you))
      (VP (VBD kept)
        (NP (DT that) (JJ jade) (NN earring))))
    (. !) ('' '')))

cc(knew-3, But-1)
nsubj(knew-3, It-2)
root(ROOT-0, knew-3)
mark(grinned-6, as-4)
nsubj(grinned-6, It-5)
advcl(knew-3, grinned-6)
mark(touched-10, for-8)
nsubj(touched-10, he-9)
dep(knew-3, touched-10)
dobj(touched-10, it-11)
xcomp(touched-10, unfearing-12)
cc(unfearing-12, And-14)
xcomp(touched-10, muttered-15)
conj:and(unfearing-12, muttered-15)
advmod(muttered-15, aloud-16)
cc(knew-3, So-19)
nsubj(kept-21, you-20)
conj:so(knew-3, kept-21)
det(earring-24, that-22)
amod(earring-24, jade-23)
dobj(kept-21, earring-24)

(ROOT
  (S (RB Then)
    (VP (VB nodded)
      (PRN (, ,)
        (CC and)
        (ADVP (RB kindly))
        (, ,))
      (SBAR (IN as)
        (S
          (NP (NN friend))
          (VP (VBZ nods)
            (PP (TO to)
              (NP
                (NP (NN friend))
                (, ,) (`` ``)
                (NP
                  (NP (JJ Old) (NN man))
                  (, ,)
                  (UCP
                    (S
                      (NP (PRP you))
                      (VP (VBD fought)
                        (ADVP (RB well))))
                    (, ,)
                    (CC but)
                    (SINV
                      (NP (PRP you))
                      (VP (VBD lost)
                        (PRT (RP in))
                        (NP (DT the) (NN end) (. .) ('' '')))
                      (. .))
                    (. .))))))
          (. .))
        (. .)))
    (. .)))

advmod(nodded-2, Then-1)
root(ROOT-0, nodded-2)
cc(kindly-5, and-4)
dep(nodded-2, kindly-5)
mark(nods-9, as-7)
nsubj(nods-9, friend-8)
advcl(nodded-2, nods-9)
case(friend-11, to-10)
nmod:to(nods-9, friend-11)
amod(man-15, Old-14)
dep(friend-11, man-15)
nsubj(fought-18, you-17)
dep(man-15, fought-18)
advmod(fought-18, well-19)
cc(fought-18, but-21)
nsubj(lost-23, you-22)
dep(man-15, lost-23)
conj:but(fought-18, lost-23)
compound:prt(lost-23, in-24)
det(end-26, the-25)
dobj(lost-23, end-26)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNS visions))
        (VP (VBD departed)))
      (, ,)
      (CC and)
      (S
        (NP (NNP Shame))
        (VP (VBD followed)
          (NP (NNP Passion)))))
    (: :) (: --) (`` ``)
    (S
      (NP (PRP He))
      (VP (VBD took)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBD said)
              (PP (IN in)
                (NP (DT this) (JJ horrible) (NN fashion)))
              (, ,) ('' '')
              (S
                (VP (VBG _)
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (MD 'll)
                        (ADVP (RB _))
                        (VP (VB write)
                          (PP (TO to)
                            (NP (NNP Harendra))))))))))))))
    (. !) ('' '')))

det(visions-2, The-1)
nsubj(departed-3, visions-2)
root(ROOT-0, departed-3)
cc(departed-3, and-5)
nsubj(followed-7, Shame-6)
conj:and(departed-3, followed-7)
dobj(followed-7, Passion-8)
nsubj(took-13, He-12)
parataxis(departed-3, took-13)
dobj(_-23, what-14)
nsubj(said-16, I-15)
ccomp(took-13, said-16)
case(fashion-20, in-17)
det(fashion-20, this-18)
amod(fashion-20, horrible-19)
nmod:in(said-16, fashion-20)
xcomp(said-16, _-23)
nsubj(write-27, I-24)
aux(write-27, 'll-25)
advmod(write-27, _-26)
ccomp(_-23, write-27)
case(Harendra-29, to-28)
nmod:to(write-27, Harendra-29)

(ROOT
  (FRAG
    (SBAR (IN With)
      (S
        (NP (NN language))
        (VP (VBP unsainted)
          (FRAG
            (S
              (NP (DT The) (NNP Captain))
              (VP (VBD came)
                (ADVP (RB back))
                (PP (TO to)
                  (NP (DT the) (NNP Bride)))))
            (: ...)
            (FRAG
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD had)
                    (VP (VBN fainted))))
                (. .))
              (. .))
            (. .)))
        (. .))
      (. .))
    (. .)))

mark(unsainted-3, With-1)
nsubj(unsainted-3, language-2)
root(ROOT-0, unsainted-3)
det(Captain-5, The-4)
nsubj(came-6, Captain-5)
dep(fainted-14, came-6)
advmod(came-6, back-7)
case(Bride-10, to-8)
det(Bride-10, the-9)
nmod:to(came-6, Bride-10)
nsubj(fainted-14, who-12)
aux(fainted-14, had-13)
dep(unsainted-3, fainted-14)

(ROOT
  (S (CC And)
    (NP (DT this))
    (VP (VBZ is)
      (NP (DT a) (NN fiction)))
    (. ?)))

cc(fiction-5, And-1)
nsubj(fiction-5, this-2)
cop(fiction-5, is-3)
det(fiction-5, a-4)
root(ROOT-0, fiction-5)

(ROOT
  (INTJ (UH No) (. .)))

root(ROOT-0, No-1)

(ROOT
  (S
    (VP (VB Go)
      (S
        (VP (TO to)
          (VP (VB Simoorie)
            (S
              (S (CC And)
                (VP (VB look)
                  (PP (IN at)
                    (NP
                      (NP (PRP$ their) (NN baby))
                      (, ,)
                      (NP
                        (NP (DT a) (JJ twelve-month) (JJ old) (NNP Houri))
                        (, ,)
                        (NP (DT A) (JJ pert) (JJ little) (, ,) (JJ Irish-eyed) (NNP Kathleen) (NNP Mavournin))
                        (PRN (: --)
                          (S
                            (NP (PRP She))
                            (VP (VBZ 's)
                              (ADVP (RB always))
                              (PP (IN about) (IN on)
                                (NP
                                  (NP (DT the) (NN Mall))
                                  (PP (IN of)
                                    (NP (DT a) (NN mornin)))))
                              ('' ')))
                          (: --)))))))
              (CC And)
              (S
                (S
                  (NP (PRP you))
                  (VP (MD 'll)
                    (VP (VB see)
                      (PRN (, ,)
                        (SBAR (IN if)
                          (S
                            (NP (PRP$ her) (JJ right) (NN shoulder-strap))
                            (VP (VBZ is)
                              (VP (VBN displaced)))))
                        (, ,))
                      (NP (DT This) (: :) (NNP _) (NNP Gules) (NN _))
                      (PP (IN upon)
                        (NP
                          (NP (JJ _) (NN argent) (NNS _))
                          (, ,)
                          (NP
                            (NP (DT a) (NNP Boh) (POS 's))
                            (NNP Head)))))))
                (PRN (, ,)
                  (NP (NNP _))
                  (VP (VBD erased)))))))))
    (. !)))

root(ROOT-0, Go-1)
mark(Simoorie-3, to-2)
xcomp(Go-1, Simoorie-3)
cc(look-5, And-4)
xcomp(Simoorie-3, look-5)
case(baby-8, at-6)
nmod:poss(baby-8, their-7)
nmod:at(look-5, baby-8)
det(Houri-13, a-10)
amod(Houri-13, twelve-month-11)
amod(Houri-13, old-12)
appos(baby-8, Houri-13)
det(Mavournin-21, A-15)
amod(Mavournin-21, pert-16)
amod(Mavournin-21, little-17)
amod(Mavournin-21, Irish-eyed-19)
compound(Mavournin-21, Kathleen-20)
appos(Houri-13, Mavournin-21)
nsubj(Mall-29, She-23)
cop(Mall-29, 's-24)
advmod(Mall-29, always-25)
case(Mall-29, about-26)
case(Mall-29, on-27)
det(Mall-29, the-28)
dep(Houri-13, Mall-29)
case(mornin-32, of-30)
det(mornin-32, a-31)
nmod:of(Mall-29, mornin-32)
cc(look-5, And-35)
nsubj(see-38, you-36)
aux(see-38, 'll-37)
xcomp(Simoorie-3, see-38)
conj:and(look-5, see-38)
mark(displaced-45, if-40)
nmod:poss(shoulder-strap-43, her-41)
amod(shoulder-strap-43, right-42)
nsubjpass(displaced-45, shoulder-strap-43)
auxpass(displaced-45, is-44)
parataxis(see-38, displaced-45)
det(_-51, This-47)
compound(_-51, _-49)
compound(_-51, Gules-50)
dobj(see-38, _-51)
case(_-55, upon-52)
amod(_-55, _-53)
compound(_-55, argent-54)
nmod:upon(see-38, _-55)
det(Boh-58, a-57)
nmod:poss(Head-60, Boh-58)
case(Boh-58, 's-59)
appos(_-55, Head-60)
nsubj(erased-63, _-62)
dep(see-38, erased-63)

(ROOT
  (S
    (S
      (NP
        (NP (NNP _) (NNP THE) (NNP LAMENT))
        (PP (IN OF)
          (NP (DT THE) (NNP BORDER) (NNP CATTLE) (NNP THIEF) (NNP O) (NN woe))))
      (VP (VBZ is)
        (NP (PRP me))
        (PP (IN for)
          (NP
            (NP (DT the) (JJ merry) (NN life))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD led)
                  (PP (IN beyond)
                    (NP (DT the) (NNP Bar))))))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT a) (JJ treble) (NN woe))
        (PP (IN for)
          (NP (PRP$ my) (JJ winsome) (NN wife))))
      (NP (DT That))
      (VP (VBZ weeps)
        (PP (IN at)
          (NP (NNP Shalimar)))))
    (. .)))

compound(LAMENT-3, _-1)
compound(LAMENT-3, THE-2)
nsubj(me-12, LAMENT-3)
case(woe-10, OF-4)
det(woe-10, THE-5)
compound(woe-10, BORDER-6)
compound(woe-10, CATTLE-7)
compound(woe-10, THIEF-8)
compound(woe-10, O-9)
nmod:of(LAMENT-3, woe-10)
cop(me-12, is-11)
root(ROOT-0, me-12)
case(life-16, for-13)
det(life-16, the-14)
amod(life-16, merry-15)
nmod:for(me-12, life-16)
nsubj(led-18, I-17)
acl:relcl(life-16, led-18)
case(Bar-21, beyond-19)
det(Bar-21, the-20)
nmod:beyond(led-18, Bar-21)
cc(me-12, And-23)
det(woe-26, a-24)
amod(woe-26, treble-25)
nsubj(weeps-32, woe-26)
case(wife-30, for-27)
nmod:poss(wife-30, my-28)
amod(wife-30, winsome-29)
nmod:for(woe-26, wife-30)
nsubj(weeps-32, That-31)
conj:and(me-12, weeps-32)
case(Shalimar-34, at-33)
nmod:at(weeps-32, Shalimar-34)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP have)
        (VP (VBN taken)
          (PRT (RP away))
          (NP
            (NP (PRP$ my) (JJ long) (NN jezail))
            (, ,)
            (NP (PRP$ My) (NN shield))
            (CC and)
            (NP (JJ sabre) (NN fine))))))
    (, ,)
    (CC And)
    (S
      (VP (VBN heaved)
        (NP (PRP me))
        (PP (IN into)
          (NP (DT the) (NNP Central) (NN jail)))
        (PP (IN For)
          (NP
            (NP (NN lifting))
            (PP (IN of)
              (NP (DT the) (NN kine)))))))
    (. .)))

nsubj(taken-3, They-1)
nsubj(heaved-16, They-1)
aux(taken-3, have-2)
root(ROOT-0, taken-3)
compound:prt(taken-3, away-4)
nmod:poss(jezail-7, my-5)
amod(jezail-7, long-6)
dobj(taken-3, jezail-7)
nmod:poss(shield-10, My-9)
dobj(taken-3, shield-10)
conj:and(jezail-7, shield-10)
cc(jezail-7, and-11)
amod(fine-13, sabre-12)
dobj(taken-3, fine-13)
conj:and(jezail-7, fine-13)
cc(taken-3, And-15)
conj:and(taken-3, heaved-16)
dobj(heaved-16, me-17)
case(jail-21, into-18)
det(jail-21, the-19)
compound(jail-21, Central-20)
nmod:into(heaved-16, jail-21)
case(lifting-23, For-22)
nmod:for(heaved-16, lifting-23)
case(kine-26, of-24)
det(kine-26, the-25)
nmod:of(lifting-23, kine-26)

(ROOT
  (S
    (S
      (NP (DT The) (NN steer))
      (VP (MD may)
        (VP
          (ADJP (JJ low))
          (PP (IN within)
            (NP (DT the) (NN byre))))))
    (PRN (, ,)
      (S
        (NP (DT The) (NNP Jat))
        (VP (MD may)
          (VP (VB tend)
            (NP (PRP$ his) (NN grain)))))
      (, ,))
    (CC But)
    (S
      (NP (EX there))
      (VP (MD 'll)
        (VP (VB be)
          (NP (DT neither) (NN loot)
            (CC nor)
            (NN fire))
          (PP (IN Till)
            (NP
              (NP (PRP I))
              (VP (VBN come)
                (PRT (RP back))
                (ADVP (RB again))))))))
    (. .)))

det(steer-2, The-1)
nsubj(low-4, steer-2)
aux(low-4, may-3)
root(ROOT-0, low-4)
case(byre-7, within-5)
det(byre-7, the-6)
nmod:within(low-4, byre-7)
det(Jat-10, The-9)
nsubj(tend-12, Jat-10)
aux(tend-12, may-11)
dep(low-4, tend-12)
nmod:poss(grain-14, his-13)
dobj(tend-12, grain-14)
cc(low-4, But-16)
expl(loot-21, there-17)
aux(loot-21, 'll-18)
cop(loot-21, be-19)
cc:preconj(loot-21, neither-20)
conj:but(low-4, loot-21)
cc(loot-21, nor-22)
conj:but(low-4, fire-23)
conj:nor(loot-21, fire-23)
case(I-25, Till-24)
nmod:till(loot-21, I-25)
acl(I-25, come-26)
compound:prt(come-26, back-27)
advmod(come-26, again-28)

(ROOT
  (S (CC And)
    (NP (NNP God))
    (VP (VBP have)
      (NP
        (NP (NN mercy))
        (PP (IN on)
          (NP
            (NP (DT the) (NN Jat))
            (SBAR
              (WHADVP (WRB When))
              (S
                (S
                  (ADVP (RB once))
                  (NP (PRP$ my) (NNS fetters))
                  (VP (VBP fall)))
                (, ,)
                (CC And)
                (S
                  (NP (NNP Heaven))
                  (VP (VBP defend)
                    (NP
                      (NP (DT the) (NN farmer) (POS 's))
                      (NN hut)
                      (SBAR
                        (WHADVP (WRB When))
                        (S
                          (NP (PRP I))
                          (VP (VBP am)
                            (VP (VBN loosed)
                              (PP (IN from)
                                (NP (NN thrall))))))))))))))))
    (. .)))

cc(have-3, And-1)
nsubj(have-3, God-2)
root(ROOT-0, have-3)
dobj(have-3, mercy-4)
case(Jat-7, on-5)
det(Jat-7, the-6)
nmod:on(mercy-4, Jat-7)
advmod(fall-12, When-8)
advmod(fall-12, once-9)
nmod:poss(fetters-11, my-10)
nsubj(fall-12, fetters-11)
acl:relcl(Jat-7, fall-12)
cc(fall-12, And-14)
nsubj(defend-16, Heaven-15)
acl:relcl(Jat-7, defend-16)
conj:and(fall-12, defend-16)
det(farmer-18, the-17)
nmod:poss(hut-20, farmer-18)
case(farmer-18, 's-19)
dobj(defend-16, hut-20)
advmod(loosed-24, When-21)
nsubjpass(loosed-24, I-22)
auxpass(loosed-24, am-23)
ccomp(hut-20, loosed-24)
case(thrall-26, from-25)
nmod:from(loosed-24, thrall-26)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADJP (JJ woe)
          (S
            (VP (TO to)
              (VP (VB bend)
                (NP
                  (NP (DT the) (JJ stubborn) (NN back))
                  (SBAR
                    (S
                      (PP (IN Above)
                        (NP (DT the) (VBG grinching) (NN quern)))
                      (, ,)
                      (NP (PRP It))
                      (VP (VBZ 's)
                        (ADJP (JJ woe)
                          (S
                            (VP (TO to)
                              (VP (VB hear)
                                (NP (DT the) (JJ leg-bar) (NN clack))))))))))))))))
    (CC And)
    (S
      (VP (VB jingle)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBP turn))))))
    (. !)))

nsubj(woe-3, It-1)
nsubj:xsubj(bend-5, It-1)
nsubj(jingle-23, It-1)
cop(woe-3, 's-2)
root(ROOT-0, woe-3)
mark(bend-5, to-4)
xcomp(woe-3, bend-5)
det(back-8, the-6)
amod(back-8, stubborn-7)
dobj(bend-5, back-8)
case(quern-12, Above-9)
det(quern-12, the-10)
amod(quern-12, grinching-11)
nmod:above(woe-16, quern-12)
nsubj(woe-16, It-14)
nsubj:xsubj(hear-18, It-14)
cop(woe-16, 's-15)
acl:relcl(back-8, woe-16)
mark(hear-18, to-17)
xcomp(woe-16, hear-18)
det(clack-21, the-19)
amod(clack-21, leg-bar-20)
dobj(hear-18, clack-21)
cc(woe-3, And-22)
conj:and(woe-3, jingle-23)
advmod(turn-26, when-24)
nsubj(turn-26, I-25)
advcl(jingle-23, turn-26)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP
        (NP (DT the) (NN sorrow))
        (CC and)
        (NP
          (NP (DT the) (NN shame))
          (, ,)
          (NP
            (NP (DT The) (NN brand))
            (PP (IN on)
              (NP (PRP me))))
          (CC and)
          (NP (NN mine)))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB pay)
        (NP (PRP you))
        (ADVP (RB back))
        (PP (IN in)
          (S
            (VP (VBG leaping)
              (NP
                (NP (NN flame))
                (CC And)
                (NP
                  (NP (NN loss))
                  (PP (IN of)
                    (NP (DT the) (JJ butchered) (NN kine))))))))))
    (. .)))

cc(pay-18, But-1)
case(sorrow-4, for-2)
det(sorrow-4, the-3)
nmod:for(pay-18, sorrow-4)
cc(sorrow-4, and-5)
det(shame-7, the-6)
conj:and(sorrow-4, shame-7)
nmod:for(pay-18, shame-7)
det(brand-10, The-9)
conj:and(sorrow-4, brand-10)
conj:and(shame-7, brand-10)
case(me-12, on-11)
nmod:on(brand-10, me-12)
cc(shame-7, and-13)
conj:and(sorrow-4, mine-14)
conj:and(shame-7, mine-14)
nsubj(pay-18, I-16)
aux(pay-18, 'll-17)
root(ROOT-0, pay-18)
dobj(pay-18, you-19)
advmod(pay-18, back-20)
mark(leaping-22, in-21)
advcl(pay-18, leaping-22)
dobj(leaping-22, flame-23)
cc(flame-23, And-24)
dobj(leaping-22, loss-25)
conj:and(flame-23, loss-25)
case(kine-29, of-26)
det(kine-29, the-27)
amod(kine-29, butchered-28)
nmod:of(loss-25, kine-29)

(ROOT
  (S
    (PP (IN For)
      (NP (DT every) (NN cow)))
    (NP (PRP I))
    (VP (VBD spared)
      (SBAR (IN before)
        (S
          (PP (IN In)
            (NP
              (NP (NN charity))
              (VP (VBN set)
                (ADVP (JJ free))
                (, ,)
                (SBAR (IN If)
                  (S
                    (NP (PRP I))
                    (VP (MD may)
                      (VP (VB reach)
                        (NP (PRP$ my) (NN hold))
                        (ADVP (RB once) (RBR more)))))))))
          (NP (PRP I))
          (VP (MD 'll)
            (VP (VB reive)
              (NP (DT an) (JJ honest) (CD three)))))))
    (. .)))

case(cow-3, For-1)
det(cow-3, every-2)
nmod:for(spared-5, cow-3)
nsubj(spared-5, I-4)
root(ROOT-0, spared-5)
mark(reive-22, before-6)
case(charity-8, In-7)
nmod:in(reive-22, charity-8)
acl(charity-8, set-9)
advmod(set-9, free-10)
mark(reach-15, If-12)
nsubj(reach-15, I-13)
aux(reach-15, may-14)
advcl(set-9, reach-15)
nmod:poss(hold-17, my-16)
dobj(reach-15, hold-17)
advmod(more-19, once-18)
advmod(reach-15, more-19)
nsubj(reive-22, I-20)
aux(reive-22, 'll-21)
advcl(spared-5, reive-22)
det(three-25, an-23)
amod(three-25, honest-24)
dobj(reive-22, three-25)

(ROOT
  (S
    (PP (IN For)
      (NP (DT every) (NN time)))
    (NP (PRP I))
    (VP (VBD raised)
      (NP
        (NP (DT the) (NN low))
        (SBAR
          (S
            (NP (DT That))
            (VP (VBD scared)
              (NP
                (NP (DT the) (JJ dusty) (NN plain))
                (PRN (, ,)
                  (PP (IN By)
                    (NP (NN sword)
                      (CC and)
                      (NN cord)))
                  (, ,)))
              (PP (IN by)
                (NP
                  (NP (NN torch))
                  (CC and)
                  (NP (RB tow))))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD 'll)
                    (VP (VB light)
                      (NP (DT the) (NN land))
                      (PP (IN with)
                        (NP (NN twain))))))))))))
    (. !)))

case(time-3, For-1)
det(time-3, every-2)
nmod:for(raised-5, time-3)
nsubj(raised-5, I-4)
root(ROOT-0, raised-5)
det(low-7, the-6)
dobj(raised-5, low-7)
nsubj(scared-9, low-7)
ref(low-7, That-8)
acl:relcl(low-7, scared-9)
det(plain-12, the-10)
amod(plain-12, dusty-11)
dobj(scared-9, plain-12)
case(sword-15, By-14)
nmod:by(plain-12, sword-15)
cc(sword-15, and-16)
nmod:by(plain-12, cord-17)
conj:and(sword-15, cord-17)
case(torch-20, by-19)
nmod:by(scared-9, torch-20)
cc(torch-20, and-21)
nmod:by(scared-9, tow-22)
conj:and(torch-20, tow-22)
nsubj(light-25, I-23)
aux(light-25, 'll-24)
dep(scared-9, light-25)
det(land-27, the-26)
dobj(light-25, land-27)
case(twain-29, with-28)
nmod:with(light-25, twain-29)

(ROOT
  (SINV
    (FRAG
      (ADJP (RB Ride) (JJ hard)))
    (, ,)
    (VP (VBP ride)
      (ADVP (RB hard))
      (PP (TO to)
        (NP
          (NP
            (NP (NNP Abazai) (, ,) (NNP Young) (NNP _) (NNP Sahib) (NNP _))
            (PP (IN with)
              (NP (DT the) (JJ yellow) (NN hair))))
          (: --)
          (NP (NN Lie) (NN close))))
      (, ,) (VBP lie)
      (ADVP (RB close) (RB as)))
    (NP
      (NP (JJ khuttucks) (NN lie))
      (, ,)
      (NP
        (NP (NNP Fat) (NNS herds))
        (PP (IN below)
          (NP (NNP Bonair)))))
    (. !)))

advmod(hard-2, Ride-1)
dep(ride-4, hard-2)
root(ROOT-0, ride-4)
advmod(ride-4, hard-5)
case(_-12, to-6)
compound(_-12, Abazai-7)
appos(_-12, Young-9)
compound(_-12, _-10)
compound(_-12, Sahib-11)
nmod:to(ride-4, _-12)
case(hair-16, with-13)
det(hair-16, the-14)
amod(hair-16, yellow-15)
nmod:with(_-12, hair-16)
compound(close-19, Lie-18)
dep(_-12, close-19)
dep(ride-4, lie-21)
advmod(as-23, close-22)
advmod(ride-4, as-23)
amod(lie-25, khuttucks-24)
nsubj(ride-4, lie-25)
compound(herds-28, Fat-27)
appos(lie-25, herds-28)
case(Bonair-30, below-29)
nmod:below(herds-28, Bonair-30)

(ROOT
  (S
    (NP
      (NP (DT The) (NN one))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD 'll)
            (VP (VB shoot)
              (PP (IN at)
                (NP (NN twilight-tide))))))))
    (, ,)
    (S
      (PP (IN At)
        (NP (NN dawn)))
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB drive)
          (NP (DT the) (JJ other)))))
    (: ;)
    (S
      (NP (DT The) (JJ black))
      (VP (MD shall)
        (VP
          (VP (VB mourn)
            (PP (IN for)
              (NP (NN hoof))))
          (CC and)
          (VP (VB hide))
          (, ,)
          (NP
            (NP (DT The) (JJ white) (NN man))
            (PP (IN for)
              (NP (PRP$ his) (NN brother)))))))
    (. .)))

det(one-2, The-1)
dep(drive-13, one-2)
nsubj(shoot-5, I-3)
aux(shoot-5, 'll-4)
acl:relcl(one-2, shoot-5)
case(twilight-tide-7, at-6)
nmod:at(shoot-5, twilight-tide-7)
case(dawn-10, At-9)
nmod:at(drive-13, dawn-10)
nsubj(drive-13, I-11)
aux(drive-13, 'll-12)
root(ROOT-0, drive-13)
det(other-15, the-14)
dobj(drive-13, other-15)
det(black-18, The-17)
nsubj(mourn-20, black-18)
nsubj(hide-24, black-18)
aux(mourn-20, shall-19)
parataxis(drive-13, mourn-20)
case(hoof-22, for-21)
nmod:for(mourn-20, hoof-22)
cc(mourn-20, and-23)
parataxis(drive-13, hide-24)
conj:and(mourn-20, hide-24)
det(man-28, The-26)
amod(man-28, white-27)
dobj(mourn-20, man-28)
case(brother-31, for-29)
nmod:poss(brother-31, his-30)
nmod:for(man-28, brother-31)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBZ is)
        (NP
          (NP
            (NP (NN war))
            (, ,)
            (NP (JJ red) (NN war))
            (, ,))
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD 'll)
                (VP (VB give)
                  (NP (PRP you))
                  (ADVP (RB then))
                  (, ,)
                  (NP
                    (NP (NNP War))
                    (SBAR (IN till)
                      (S
                        (NP (PRP$ my) (NNS sinews))
                        (VP (VBP fail))))))))))))
    (: ;)
    (S
      (PP (IN For)
        (NP (DT the) (JJ wrong)))
      (NP (PRP you))
      (VP (VBP have)
        (VP (VBN done)
          (PP (TO to)
            (NP
              (NP
                (NP (DT a) (NN chief))
                (PP (IN of)
                  (NP (NNS men))))
              (, ,)
              (CC And)
              (NP
                (NP (DT a) (NN thief))
                (PP (IN of)
                  (NP (DT the) (NNP Zukka) (NNP Kheyl)))))))))
    (. .)))

nsubj(war-3, 'T-1)
cop(war-3, is-2)
root(ROOT-0, war-3)
amod(war-6, red-5)
appos(war-3, war-6)
nsubj(give-10, I-8)
aux(give-10, 'll-9)
acl:relcl(war-3, give-10)
dobj(give-10, you-11)
advmod(give-10, then-12)
dobj(give-10, War-14)
mark(fail-18, till-15)
nmod:poss(sinews-17, my-16)
nsubj(fail-18, sinews-17)
acl:relcl(War-14, fail-18)
case(wrong-22, For-20)
det(wrong-22, the-21)
nmod:for(done-25, wrong-22)
nsubj(done-25, you-23)
aux(done-25, have-24)
parataxis(war-3, done-25)
case(chief-28, to-26)
det(chief-28, a-27)
nmod:to(done-25, chief-28)
case(men-30, of-29)
nmod:of(chief-28, men-30)
cc(chief-28, And-32)
det(thief-34, a-33)
nmod:to(done-25, thief-34)
conj:and(chief-28, thief-34)
case(Kheyl-38, of-35)
det(Kheyl-38, the-36)
compound(Kheyl-38, Zukka-37)
nmod:of(thief-34, Kheyl-38)

(ROOT
  (S (CC And)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBP fall)
            (PP (TO to)
              (NP (PRP$ your) (NN hand) (NN afresh))))))
      (NP (PRP I))
      (VP (VBP give)
        (S
          (NP (PRP you))
          (VP (VB leave)
            (PP (IN for)
              (NP (DT the) (NN sin)))))
        (, ,)
        (SBAR (IN That)
          (S
            (NP (PRP you))
            (VP (VBP cram)
              (NP (PRP$ my) (NN throat))
              (PP (IN with)
                (NP
                  (NP (DT the) (JJ foul) (NN pig) (POS 's))
                  (NN flesh))))))))
    (, ,)
    (CC And)
    (S
      (VP (VB swing)
        (NP (PRP me))
        (PP (IN in)
          (NP (DT the) (NN skin)))))
    (. !)))

cc(give-10, And-1)
mark(fall-4, if-2)
nsubj(fall-4, I-3)
advcl(give-10, fall-4)
case(afresh-8, to-5)
nmod:poss(afresh-8, your-6)
compound(afresh-8, hand-7)
nmod:to(fall-4, afresh-8)
nsubj(give-10, I-9)
nsubj(swing-30, I-9)
root(ROOT-0, give-10)
nsubj(leave-12, you-11)
ccomp(give-10, leave-12)
case(sin-15, for-13)
det(sin-15, the-14)
nmod:for(leave-12, sin-15)
mark(cram-19, That-17)
nsubj(cram-19, you-18)
ccomp(give-10, cram-19)
nmod:poss(throat-21, my-20)
dobj(cram-19, throat-21)
case(flesh-27, with-22)
det(pig-25, the-23)
amod(pig-25, foul-24)
nmod:poss(flesh-27, pig-25)
case(pig-25, 's-26)
nmod:with(cram-19, flesh-27)
cc(give-10, And-29)
conj:and(give-10, swing-30)
dobj(swing-30, me-31)
case(skin-34, in-32)
det(skin-34, the-33)
nmod:in(swing-30, skin-34)

(ROOT
  (S
    (NP
      (NP (DT THE) (NN RHYME))
      (PP (IN OF)
        (NP (DT THE) (NNP THREE) (NNP CAPTAINS) (NNP _) (NNP This) (NNP ballad))))
    (VP (VBZ appears)
      (S
        (VP (TO to)
          (VP (VB refer)
            (PP (TO to)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNS exploits))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (JJ notorious) (NNP Paul) (NNP Jones))
                        (, ,)
                        (NP (DT the) (JJ American) (NN pirate))))))))))))
    (. .)))

det(RHYME-2, THE-1)
nsubj(appears-10, RHYME-2)
nsubj:xsubj(refer-12, RHYME-2)
case(ballad-9, OF-3)
det(ballad-9, THE-4)
compound(ballad-9, THREE-5)
compound(ballad-9, CAPTAINS-6)
compound(ballad-9, _-7)
compound(ballad-9, This-8)
nmod:of(RHYME-2, ballad-9)
root(ROOT-0, appears-10)
mark(refer-12, to-11)
xcomp(appears-10, refer-12)
case(one-14, to-13)
nmod:to(refer-12, one-14)
case(exploits-17, of-15)
det(exploits-17, the-16)
nmod:of(one-14, exploits-17)
case(Jones-22, of-18)
det(Jones-22, the-19)
amod(Jones-22, notorious-20)
compound(Jones-22, Paul-21)
nmod:of(exploits-17, Jones-22)
det(pirate-26, the-24)
amod(pirate-26, American-25)
appos(Jones-22, pirate-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (VP (VBN founded)
        (PP (IN on)
          (NP (NN fact)))))
    (. .)))

nsubjpass(founded-3, It-1)
auxpass(founded-3, is-2)
root(ROOT-0, founded-3)
case(fact-5, on-4)
nmod:on(founded-3, fact-5)

(ROOT
  (FRAG
    (NP (NNP _))
    (: ...)
    (S
      (S
        (PP (IN At)
          (NP
            (NP (DT the) (NN close))
            (PP (IN of)
              (NP (DT a) (NN winter) (NN day)))))
        (, ,)
        (S
          (NP (PRP$ Their) (NNS anchors))
          (ADVP (RB down))
          (, ,)
          (PP (IN by)
            (NP (NNP London) (NN town)))
          (, ,)
          (NP (DT the) (NNP Three) (NNP Great) (NNP Captains))
          (VP (VBD lay)))
        (: ;)
        (CC And)
        (S
          (NP (PRP one))
          (VP (VBD was)
            (NP
              (NP (NN Admiral))
              (PP (IN of)
                (NP (DT the) (NNP North))))
            (PP (IN from)
              (NP
                (NP (NNP Solway) (NNP Firth))
                (PP (TO to)
                  (NP (NNP Skye))))))))
      (, ,)
      (CC And)
      (S
        (S
          (NP (PRP one))
          (VP (VBD was)
            (NP
              (NP (NNP Lord))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNP Wessex) (NN coast))
                  (CC and)
                  (NP (PDT all) (DT the) (NNS lands)))))
            (ADVP (RB thereby))))
        (, ,)
        (CC And)
        (S
          (S
            (NP (PRP one))
            (VP (VBD was)
              (NP
                (NP (NNP Master))
                (PP (IN of)
                  (NP (DT the) (NNPS Thames))))
              (PP (IN from)
                (NP (NNP Limehouse)))
              (PP (TO to)
                (NP (NNP Blackwall)))))
          (, ,)
          (CC And)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (NP
                (NP
                  (NP (NNP Captain))
                  (PP (IN of)
                    (NP (DT the) (NNP Fleet))))
                (: --)
                (NP
                  (NP (DT the) (JJS bravest))
                  (PP (IN of)
                    (NP (PRP them) (DT all))))))))))
    (. .)))

root(ROOT-0, _-1)
case(close-5, At-3)
det(close-5, the-4)
nmod:at(lay-23, close-5)
case(day-9, of-6)
det(day-9, a-7)
compound(day-9, winter-8)
nmod:of(close-5, day-9)
nmod:poss(anchors-12, Their-11)
nsubj(lay-23, anchors-12)
advmod(lay-23, down-13)
case(town-17, by-15)
compound(town-17, London-16)
nmod:by(lay-23, town-17)
det(Captains-22, the-19)
compound(Captains-22, Three-20)
compound(Captains-22, Great-21)
nsubj(lay-23, Captains-22)
parataxis(_-1, lay-23)
cc(lay-23, And-25)
nsubj(Admiral-28, one-26)
cop(Admiral-28, was-27)
parataxis(_-1, Admiral-28)
conj:and(lay-23, Admiral-28)
case(North-31, of-29)
det(North-31, the-30)
nmod:of(Admiral-28, North-31)
case(Firth-34, from-32)
compound(Firth-34, Solway-33)
nmod:from(Admiral-28, Firth-34)
case(Skye-36, to-35)
nmod:to(Firth-34, Skye-36)
cc(lay-23, And-38)
nsubj(Lord-41, one-39)
cop(Lord-41, was-40)
parataxis(_-1, Lord-41)
conj:and(lay-23, Lord-41)
case(coast-45, of-42)
det(coast-45, the-43)
compound(coast-45, Wessex-44)
nmod:of(Lord-41, coast-45)
cc(coast-45, and-46)
det:predet(lands-49, all-47)
det(lands-49, the-48)
nmod:of(Lord-41, lands-49)
conj:and(coast-45, lands-49)
advmod(Lord-41, thereby-50)
cc(Lord-41, And-52)
nsubj(Master-55, one-53)
cop(Master-55, was-54)
conj:and(lay-23, Master-55)
conj:and(Lord-41, Master-55)
case(Thames-58, of-56)
det(Thames-58, the-57)
nmod:of(Master-55, Thames-58)
case(Limehouse-60, from-59)
nmod:from(Master-55, Limehouse-60)
case(Blackwall-62, to-61)
nmod:to(Master-55, Blackwall-62)
cc(Master-55, And-64)
nsubj(Captain-67, he-65)
cop(Captain-67, was-66)
conj:and(Lord-41, Captain-67)
conj:and(Master-55, Captain-67)
case(Fleet-70, of-68)
det(Fleet-70, the-69)
nmod:of(Captain-67, Fleet-70)
det(bravest-73, the-72)
dep(Captain-67, bravest-73)
case(them-75, of-74)
nmod:of(bravest-73, them-75)
det(them-75, all-76)

(ROOT
  (S
    (NP (PRP$ Their) (JJ good) (NNS guns))
    (VP (VBN guarded)
      (NP
        (NP (PRP$ their) (JJ great) (JJ gray) (NNS sides))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD were)
              (NP
                (NP (CD thirty) (NN foot))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN sheer))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB When))
                      (S
                        (NP (EX there))
                        (VP (VBD came)
                          (NP (DT a) (JJ certain) (NN trading-brig))
                          (PP (IN with)
                            (NP
                              (NP (NN news))
                              (PP (IN of)
                                (NP (DT a) (NN privateer))))))))))))))))
    (. .)))

nmod:poss(guns-3, Their-1)
amod(guns-3, good-2)
nsubj(guarded-4, guns-3)
root(ROOT-0, guarded-4)
nmod:poss(sides-8, their-5)
amod(sides-8, great-6)
amod(sides-8, gray-7)
dobj(guarded-4, sides-8)
nsubj(foot-12, sides-8)
ref(sides-8, that-9)
cop(foot-12, were-10)
nummod(foot-12, thirty-11)
acl:relcl(sides-8, foot-12)
case(sheer-15, in-13)
det(sheer-15, the-14)
nmod:in(foot-12, sheer-15)
advmod(came-19, When-17)
expl(came-19, there-18)
acl:relcl(sheer-15, came-19)
det(trading-brig-22, a-20)
amod(trading-brig-22, certain-21)
dobj(came-19, trading-brig-22)
case(news-24, with-23)
nmod:with(came-19, news-24)
case(privateer-27, of-25)
det(privateer-27, a-26)
nmod:of(news-24, privateer-27)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN rigging))
      (VP (VBD was)
        (ADJP (JJ rough)
          (PP (IN with)
            (NP
              (NP (DT the) (JJ clotted) (NN drift))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ drives)
                    (PP (IN in)
                      (NP (DT a) (JJ Northern) (NN breeze)))))))))))
    (, ,)
    (NP (PRP$ Her) (NNS sides))
    (VP (VBD were)
      (VP (VBN clogged)
        (PP (IN with)
          (NP
            (NP (DT the) (JJ lazy) (NN weed))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ spawns)
                  (PP (IN in)
                    (NP (DT the) (NNP Eastern) (NNS seas))))))))))
    (. .)))

nmod:poss(rigging-2, Her-1)
nsubj(rough-4, rigging-2)
cop(rough-4, was-3)
ccomp(clogged-19, rough-4)
case(drift-8, with-5)
det(drift-8, the-6)
amod(drift-8, clotted-7)
nmod:with(rough-4, drift-8)
nsubj(drives-10, drift-8)
ref(drift-8, that-9)
acl:relcl(drift-8, drives-10)
case(breeze-14, in-11)
det(breeze-14, a-12)
amod(breeze-14, Northern-13)
nmod:in(drives-10, breeze-14)
nmod:poss(sides-17, Her-16)
nsubjpass(clogged-19, sides-17)
auxpass(clogged-19, were-18)
root(ROOT-0, clogged-19)
case(weed-23, with-20)
det(weed-23, the-21)
amod(weed-23, lazy-22)
nmod:with(clogged-19, weed-23)
nsubj(spawns-25, weed-23)
ref(weed-23, that-24)
acl:relcl(weed-23, spawns-25)
case(seas-29, in-26)
det(seas-29, the-27)
compound(seas-29, Eastern-28)
nmod:in(spawns-25, seas-29)

(ROOT
  (S
    (S
      (SBAR (IN Light)
        (S
          (NP (PRP she))
          (VP (VBD rode)
            (PP (IN in)
              (NP (DT the) (JJ rude) (NN tide-rip)))
            (, ,)
            (PP (TO to)
              (NP (NN left)
                (CC and)
                (NN right))))))
      (NP (PRP she))
      (VP (VBD rolled)))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NN skipper))
      (VP
        (VP (VBD sat)
          (PP (IN on)
            (NP (DT the) (NN scuttle-butt))))
        (CC and)
        (VP (VBD stared)
          (PP (IN at)
            (NP (DT an) (JJ empty) (NN hold))))))
    (. .)))

mark(rode-3, Light-1)
nsubj(rode-3, she-2)
advcl(rolled-14, rode-3)
case(tide-rip-7, in-4)
det(tide-rip-7, the-5)
amod(tide-rip-7, rude-6)
nmod:in(rode-3, tide-rip-7)
case(left-10, to-9)
nmod:to(rode-3, left-10)
cc(left-10, and-11)
nmod:to(rode-3, right-12)
conj:and(left-10, right-12)
nsubj(rolled-14, she-13)
root(ROOT-0, rolled-14)
cc(rolled-14, And-16)
det(skipper-18, the-17)
nsubj(sat-19, skipper-18)
nsubj(stared-24, skipper-18)
conj:and(rolled-14, sat-19)
case(scuttle-butt-22, on-20)
det(scuttle-butt-22, the-21)
nmod:on(sat-19, scuttle-butt-22)
cc(sat-19, and-23)
conj:and(rolled-14, stared-24)
conj:and(sat-19, stared-24)
case(hold-28, at-25)
det(hold-28, an-26)
amod(hold-28, empty-27)
nmod:at(stared-24, hold-28)

(ROOT
  (S
    (S (`` ``)
      (S
        (NP (PRP I))
        (VP (VBP ha)))
      ('' ')
      (VP (VBD paid)
        (NP (NNP Port) (NNS dues))
        (PP (IN for)
          (NP (PRP$ your) (NN Law)))))
    (, ,) ('' '')
    (PRN
      (S
        (VP (VB quoth)
          (NP (PRP he)))))
    (, ,) (`` ``)
    (CC and)
    (S
      (SBAR
        (WHADVP (WRB where))
        (S
          (VP (VBZ is)
            (NP (DT the) (NN Law)))))
      (NP (PRP ye))
      (VP (VBZ boast)
        (SBAR (IN If)
          (S
            (NP (PRP I))
            (VP (VBP sail)
              (ADJP (JJ unscathed)
                (PP (IN from)
                  (NP (DT a) (JJ heathen) (NN port)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN robbed)
                            (PP (IN on)
                              (NP (DT a) (JJ Christian) (NN coast)))))))))))))))
    (. ?)))

nsubj(ha-3, I-2)
ccomp(paid-5, ha-3)
root(ROOT-0, paid-5)
compound(dues-7, Port-6)
dobj(paid-5, dues-7)
case(Law-10, for-8)
nmod:poss(Law-10, your-9)
nmod:for(paid-5, Law-10)
dep(paid-5, quoth-13)
dobj(quoth-13, he-14)
cc(paid-5, and-17)
advmod(Law-21, where-18)
cop(Law-21, is-19)
det(Law-21, the-20)
advcl(boast-23, Law-21)
nsubj(boast-23, ye-22)
conj:and(paid-5, boast-23)
mark(sail-26, If-24)
nsubj(sail-26, I-25)
advcl(boast-23, sail-26)
xcomp(sail-26, unscathed-27)
case(port-31, from-28)
det(port-31, a-29)
amod(port-31, heathen-30)
nmod:from(unscathed-27, port-31)
mark(robbed-34, to-32)
auxpass(robbed-34, be-33)
acl(port-31, robbed-34)
case(coast-38, on-35)
det(coast-38, a-36)
amod(coast-38, Christian-37)
nmod:on(robbed-34, coast-38)

(ROOT
  (S
    (S
      (S
        (NP (PRP Ye))
        (VP (VBP have)
          (VP (VBN smoked)
            (NP
              (NP (DT the) (NNS hives))
              (PP (IN of)
                (NP (DT the) (NNPS Laccadives))))
            (SBAR (IN as)
              (S
                (NP (PRP we))
                (VP (VBP burn)
                  (NP
                    (NP (DT the) (NN lice))
                    (PP (IN in)
                      (NP (DT a) (NN bunk))))))))))
      (, ,)
      (NP (PRP We))
      (VP (VB tack) (RB not)
        (ADVP (RB now))
        (PP (TO to)
          (NP
            (NP (DT a) (VBG Gallang) (NN prow))
            (CC or)
            (NP (DT a) (VBG plunging) (JJ Pei-ho) (NN junk))))))
    (: ;)
    (S
      (S
        (NP (PRP I))
        (VP (VBD had)
          (NP (DT no) (NN fear))))
      (CC but)
      (S
        (NP (DT the) (NNS seas))
        (VP (VBD were)
          (ADJP (JJ clear))
          (SBAR
            (ADVP (RB as) (RB far))
            (IN as)
            (S
              (NP (DT a) (NN sail))
              (VP (MD might)
                (VP (VB fare)
                  (PP (IN Till)
                    (NP
                      (NP (PRP I))
                      (VP (VBN met)
                        (PP (IN with)
                          (NP
                            (NP (DT a) (JJ lime-washed) (NNP Yankee) (NN brig))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBD rode)
                                  (PP (IN off)
                                    (NP (NNP Finisterre))))))))))))))))))
    (. .)))

nsubj(smoked-3, Ye-1)
aux(smoked-3, have-2)
ccomp(tack-19, smoked-3)
det(hives-5, the-4)
dobj(smoked-3, hives-5)
case(Laccadives-8, of-6)
det(Laccadives-8, the-7)
nmod:of(hives-5, Laccadives-8)
mark(burn-11, as-9)
nsubj(burn-11, we-10)
advcl(smoked-3, burn-11)
det(lice-13, the-12)
dobj(burn-11, lice-13)
case(bunk-16, in-14)
det(bunk-16, a-15)
nmod:in(lice-13, bunk-16)
nsubj(tack-19, We-18)
root(ROOT-0, tack-19)
neg(tack-19, not-20)
advmod(tack-19, now-21)
case(prow-25, to-22)
det(prow-25, a-23)
amod(prow-25, Gallang-24)
nmod:to(tack-19, prow-25)
cc(prow-25, or-26)
det(junk-30, a-27)
amod(junk-30, plunging-28)
amod(junk-30, Pei-ho-29)
nmod:to(tack-19, junk-30)
conj:or(prow-25, junk-30)
nsubj(had-33, I-32)
parataxis(tack-19, had-33)
neg(fear-35, no-34)
dobj(had-33, fear-35)
cc(had-33, but-36)
det(seas-38, the-37)
nsubj(clear-40, seas-38)
cop(clear-40, were-39)
parataxis(tack-19, clear-40)
conj:but(had-33, clear-40)
advmod(far-42, as-41)
advmod(fare-47, far-42)
mark(fare-47, as-43)
det(sail-45, a-44)
nsubj(fare-47, sail-45)
aux(fare-47, might-46)
advcl(clear-40, fare-47)
case(I-49, Till-48)
nmod:till(fare-47, I-49)
acl(I-49, met-50)
case(brig-55, with-51)
det(brig-55, a-52)
amod(brig-55, lime-washed-53)
compound(brig-55, Yankee-54)
nmod:with(met-50, brig-55)
nsubj(rode-57, brig-55)
ref(brig-55, that-56)
acl:relcl(brig-55, rode-57)
case(Finisterre-59, off-58)
nmod:off(rode-57, Finisterre-59)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD were)
        (NP
          (NP (NN canvas) (NNS blinds))
          (PP (TO to)
            (NP (PRP$ his) (JJ bow-gun) (NNS ports)))
          (S
            (VP (TO to)
              (VP (VB screen)
                (NP
                  (NP (DT the) (NN weight))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD bore)))))))))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NNS signals))
      (VP (VBD ran)
        (PP (IN for)
          (NP
            (NP (DT a) (NN merchantman))
            (PP (IN from)
              (NP (NNP Sandy) (NNP Hook)))))
        (PP (TO to)
          (NP (DT the) (NNP Nore)))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
compound(blinds-4, canvas-3)
nsubj(were-2, blinds-4)
case(ports-8, to-5)
nmod:poss(ports-8, his-6)
amod(ports-8, bow-gun-7)
nmod:to(blinds-4, ports-8)
mark(screen-10, to-9)
acl(blinds-4, screen-10)
det(weight-12, the-11)
dobj(screen-10, weight-12)
nsubj(bore-14, he-13)
acl:relcl(weight-12, bore-14)
cc(were-2, And-16)
det(signals-18, the-17)
nsubj(ran-19, signals-18)
conj:and(were-2, ran-19)
case(merchantman-22, for-20)
det(merchantman-22, a-21)
nmod:for(ran-19, merchantman-22)
case(Hook-25, from-23)
compound(Hook-25, Sandy-24)
nmod:from(merchantman-22, Hook-25)
case(Nore-28, to-26)
det(Nore-28, the-27)
nmod:to(ran-19, Nore-28)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD would) (RB not)
        (VP (VB fly)
          (NP
            (NP
              (NP (DT the) (NNPS Rovers) (POS '))
              (NN flag))
            (: --)
            (NP
              (NP (DT the) (JJ bloody))
              (CC or)
              (NP (DT the) (JJ black)))))))
    (, ,)
    (CC But)
    (S
      (S
        (ADVP (RB now))
        (NP (PRP he))
        (VP (VBD floated)
          (NP (DT the) (NNP Gridiron))))
      (CC and)
      (S
        (ADVP (RB now))
        (NP (PRP he))
        (VP (VBD flaunted)
          (NP (DT the) (NNP Jack)))))
    (. .)))

nsubj(fly-4, He-1)
aux(fly-4, would-2)
neg(fly-4, not-3)
root(ROOT-0, fly-4)
det(Rovers-6, the-5)
nmod:poss(flag-8, Rovers-6)
case(Rovers-6, '-7)
dobj(fly-4, flag-8)
det(bloody-11, the-10)
dep(flag-8, bloody-11)
cc(bloody-11, or-12)
det(black-14, the-13)
dep(flag-8, black-14)
conj:or(bloody-11, black-14)
cc(fly-4, But-16)
advmod(floated-19, now-17)
nsubj(floated-19, he-18)
conj:but(fly-4, floated-19)
det(Gridiron-21, the-20)
dobj(floated-19, Gridiron-21)
cc(floated-19, and-22)
advmod(flaunted-25, now-23)
nsubj(flaunted-25, he-24)
conj:but(fly-4, flaunted-25)
conj:and(floated-19, flaunted-25)
det(Jack-27, the-26)
dobj(flaunted-25, Jack-27)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD spoke)
        (PP (IN of)
          (NP (DT the) (NN Law)))
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBZ crimped)
              (NP (PRP$ my) (NN crew)))))))
    (: --)
    (S
      (NP (PRP he))
      (VP (VBD swore)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADVP (RB only))
              (NP (DT a) (NN loan)))))))
    (: ;)
    (CC But)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (MD would)
            (VP (VB ask)
              (PP (IN for)
                (NP (PRP$ my) (JJ own)))
              (ADVP (RB again))))))
      (, ,)
      (NP (PRP he))
      (VP (VBD swore)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP (NN none))
                (PP (IN of)
                  (NP (PRP$ my) (JJ own)))))))))
    (. .)))

nsubj(spoke-2, He-1)
root(ROOT-0, spoke-2)
case(Law-5, of-3)
det(Law-5, the-4)
nmod:of(spoke-2, Law-5)
mark(crimped-8, as-6)
nsubj(crimped-8, he-7)
advcl(spoke-2, crimped-8)
nmod:poss(crew-10, my-9)
dobj(crimped-8, crew-10)
nsubj(swore-13, he-12)
conj:but(spoke-2, swore-13)
nsubj(loan-18, it-14)
cop(loan-18, was-15)
advmod(loan-18, only-16)
det(loan-18, a-17)
ccomp(swore-13, loan-18)
cc(spoke-2, But-20)
advmod(ask-24, when-21)
nsubj(ask-24, I-22)
aux(ask-24, would-23)
advcl(swore-31, ask-24)
case(own-27, for-25)
nmod:poss(own-27, my-26)
nmod:for(ask-24, own-27)
advmod(ask-24, again-28)
nsubj(swore-31, he-30)
conj:but(spoke-2, swore-31)
nsubj(none-34, it-32)
cop(none-34, was-33)
ccomp(swore-31, none-34)
case(own-37, of-35)
nmod:poss(own-37, my-36)
nmod:of(none-34, own-37)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (VP (VBN taken)
        (NP (PRP$ my) (JJ little) (NNS parrakeets))
        (SBAR
          (SBAR (IN that)
            (S
              (PP (VBG nest)
                (PP (IN beneath)
                  (NP (DT the) (NNP Line))))
              (, ,)
              (S
                (NP (PRP He))
                (VP (VBZ has)
                  (VP (VBN stripped)
                    (NP
                      (NP (PRP$ my) (NNS rails))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NNS shaddock-frails))
                          (CC and)
                          (NP (DT the) (JJ green) (JJ unripened) (NN pine))))))))
              (: ;)
              (S
                (NP (PRP He))
                (VP (VBZ has)
                  (VP (VBN taken)
                    (NP
                      (NP (PRP$ my) (NN bale))
                      (PP (IN of)
                        (NP (NN dammer)
                          (CC and)
                          (NN spice)))
                      (SBAR
                        (S
                          (NP (PRP I))
                          (VP (VBD won)
                            (PP (IN beyond)
                              (NP (DT the) (NNS seas))))))))))
              (, ,)
              (S
                (NP (PRP He))
                (VP (VBZ has)
                  (VP (VBN taken)
                    (NP (PRP$ my) (VBG grinning) (NN heathen) (NNS gods)))))))
          (: --)
          (CC and)
          (SBAR
            (WHNP (WP what))
            (SINV (MD should)
              (NP (PRP he))
              (VP (VB want)
                (NP
                  (NP (NNP o) (POS '))
                  (NP (DT these)))))))))
    (. ?)))

nsubj(taken-3, He-1)
aux(taken-3, has-2)
root(ROOT-0, taken-3)
nmod:poss(parrakeets-6, my-4)
amod(parrakeets-6, little-5)
dobj(taken-3, parrakeets-6)
mark(stripped-15, that-7)
case(Line-11, nest-8)
case(Line-11, beneath-9)
det(Line-11, the-10)
advcl(stripped-15, Line-11)
nsubj(stripped-15, He-13)
aux(stripped-15, has-14)
ccomp(taken-3, stripped-15)
nmod:poss(rails-17, my-16)
dobj(stripped-15, rails-17)
case(shaddock-frails-20, of-18)
det(shaddock-frails-20, the-19)
nmod:of(rails-17, shaddock-frails-20)
cc(shaddock-frails-20, and-21)
det(pine-25, the-22)
amod(pine-25, green-23)
amod(pine-25, unripened-24)
nmod:of(rails-17, pine-25)
conj:and(shaddock-frails-20, pine-25)
nsubj(taken-29, He-27)
aux(taken-29, has-28)
parataxis(stripped-15, taken-29)
nmod:poss(bale-31, my-30)
dobj(taken-29, bale-31)
case(dammer-33, of-32)
nmod:of(bale-31, dammer-33)
cc(dammer-33, and-34)
nmod:of(bale-31, spice-35)
conj:and(dammer-33, spice-35)
nsubj(won-37, I-36)
acl:relcl(bale-31, won-37)
case(seas-40, beyond-38)
det(seas-40, the-39)
nmod:beyond(won-37, seas-40)
nsubj(taken-44, He-42)
aux(taken-44, has-43)
parataxis(stripped-15, taken-44)
nmod:poss(gods-48, my-45)
amod(gods-48, grinning-46)
compound(gods-48, heathen-47)
dobj(taken-44, gods-48)
cc(stripped-15, and-50)
dep(want-54, what-51)
aux(want-54, should-52)
nsubj(want-54, he-53)
ccomp(taken-3, want-54)
conj:and(stripped-15, want-54)
dobj(want-54, o-55)
case(o-55, '-56)
dep(o-55, these-57)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NN foremast))
      (VP (MD would) (RB not)
        (VP (VB mend)
          (NP
            (NP (PRP$ his) (NN boom))
            (, ,)
            (NP
              (NP (PRP$ my) (JJ deckhouse) (NN patch))
              (NP (PRP$ his) (NNS boats)))))))
    (: ;)
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN whittled)
          (S
            (NP
              (NP (DT the) (CD two))
              (, ,)
              (NP (DT this) (NNP Yank) (NNP Yahoo))
              (, ,))
            (VP (TO to)
              (VP (VB peddle)
                (PP (IN for)
                  (NP (JJ shoe-peg) (NNS oats)))))))))
    (. .)))

nmod:poss(foremast-2, My-1)
nsubj(mend-5, foremast-2)
aux(mend-5, would-3)
neg(mend-5, not-4)
root(ROOT-0, mend-5)
nmod:poss(boom-7, his-6)
dobj(mend-5, boom-7)
nmod:poss(patch-11, my-9)
amod(patch-11, deckhouse-10)
appos(boom-7, patch-11)
nmod:poss(boats-13, his-12)
dep(patch-11, boats-13)
nsubj(whittled-17, He-15)
aux(whittled-17, has-16)
parataxis(mend-5, whittled-17)
det(two-19, the-18)
dobj(whittled-17, two-19)
nsubj:xsubj(peddle-26, two-19)
det(Yahoo-23, this-21)
compound(Yahoo-23, Yank-22)
appos(two-19, Yahoo-23)
mark(peddle-26, to-25)
xcomp(whittled-17, peddle-26)
case(oats-29, for-27)
amod(oats-29, shoe-peg-28)
nmod:for(peddle-26, oats-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could) (RB not)
        (VP (VB fight)
          (PP (IN for)
            (NP
              (NP (DT the) (VBG failing) (NN light))
              (CC and)
              (NP (DT a) (JJ rough) (JJ beam-sea) (NN beside)))))))
    (, ,)
    (CC But)
    (S
      (NP (PRP I))
      (VP (VBD hulled)
        (NP (PRP him))
        (ADVP (RB once))
        (PP (IN for)
          (NP (DT a) (JJ clumsy) (NN crimp)
            (CC and)
            (RB twice)))
        (SBAR (IN because)
          (S
            (NP (PRP he))
            (VP (VBD lied))))))
    (. .)))

nsubj(fight-4, I-1)
aux(fight-4, could-2)
neg(fight-4, not-3)
root(ROOT-0, fight-4)
case(light-8, for-5)
det(light-8, the-6)
amod(light-8, failing-7)
nmod:for(fight-4, light-8)
cc(light-8, and-9)
det(beside-13, a-10)
amod(beside-13, rough-11)
amod(beside-13, beam-sea-12)
nmod:for(fight-4, beside-13)
conj:and(light-8, beside-13)
cc(fight-4, But-15)
nsubj(hulled-17, I-16)
conj:but(fight-4, hulled-17)
dobj(hulled-17, him-18)
advmod(hulled-17, once-19)
case(crimp-23, for-20)
det(crimp-23, a-21)
amod(crimp-23, clumsy-22)
nmod:for(hulled-17, crimp-23)
cc(crimp-23, and-24)
advmod(crimp-23, twice-25)
mark(lied-28, because-26)
nsubj(lied-28, he-27)
advcl(hulled-17, lied-28)

(ROOT
  (S
    (S
      (SBAR
        (SINV (VBD Had)
          (NP (PRP I))
          (VP (VBD had)
            (S
              (NP
                (NP (NNS guns))
                (PRN (-LRB- -LRB-)
                  (SBAR (IN as)
                    (S
                      (NP (PRP I))
                      (VP (VBD had)
                        (NP (NNS goods)))))
                  (-RRB- -RRB-)))
              (VP (TO to)
                (VP (VB work)
                  (NP (PRP$ my) (JJ Christian) (NN harm))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBD had)
        (VP (VBN run)
          (NP (PRP him))
          (ADVP (RB up)
            (PP (IN from)
              (NP (PRP$ his) (NN quarter-deck)
                (S
                  (VP (TO to)
                    (VP (VB trade)
                      (PP (IN with)
                        (NP (PRP$ his) (JJ own) (NN yard-arm))))))))))))
    (: ;)
    (S
      (S
        (NP (PRP I))
        (VP
          (VP (VBD had)
            (VP (VBN nailed)
              (NP (PRP$ his) (NNS ears))
              (PP (TO to)
                (NP (PRP$ my) (JJ capstan-head)))))
          (, ,)
          (CC and)
          (VP (VBD ripped)
            (NP (PRP them))
            (PRT (RP off))
            (PP (IN with)
              (NP (DT a) (NN saw))))))
      (, ,)
      (CC And)
      (S
        (S
          (VP
            (VP (VBD soused)
              (NP (PRP them))
              (PP (IN in)
                (NP (DT the) (NN bilgewater))))
            (, ,)
            (CC and)
            (VP (VBD served)
              (NP (PRP them))
              (PP (TO to)
                (NP (PRP him))))))
        (VP (VBZ raw))))
    (: ;)
    (S
      (S
        (NP (PRP I))
        (VP (VBD had)
          (S
            (VP (VBG flung)
              (S
                (NP (PRP him))
                (ADJP (JJ blind)
                  (PP (IN in)
                    (NP (DT a) (JJ rudderless) (NN boat)))
                  (PP (TO to)
                    (NP
                      (NP (NN rot))
                      (PP (IN in)
                        (NP (DT the) (JJ rocking) (NN dark)))))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBD had)
        (VP (VBN towed)
          (S
            (NP (PRP him))
            (NP
              (NP (JJ aft))
              (PP (IN of)
                (NP
                  (NP (PRP$ his) (JJ own) (NN craft))
                  (, ,)
                  (NP
                    (NP (DT a) (NN bait))
                    (PP (IN for)
                      (NP (PRP$ his) (NN brother) (NN shark)))))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (VP
          (VP (VBN lapped)
            (S
              (NP (PRP him))
              (VP (VB round)
                (PP (IN with)
                  (NP (NN cocoa) (NN husk))))))
          (, ,)
          (CC and)
          (VP (VBN drenched)
            (NP (PRP him))
            (PP (IN with)
              (NP (DT the) (NN oil))))
          (, ,)
          (FRAG (CC And)
            (S
              (VP (VBD lashed)
                (NP (PRP him))
                (ADVP (RB fast)
                  (PP (TO to)
                    (NP (PRP$ his) (JJ own) (NN mast))))
                (PP (TO to)
                  (NP
                    (NP (NN blaze))
                    (PP (IN above)
                      (NP (PRP$ my) (NN spoil)))))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBD had)
        (VP
          (VP (VBN stripped)
            (NP (PRP$ his) (NN hide))
            (PP (IN for)
              (NP (PRP$ my) (NN hammock-side))))
          (, ,)
          (CC and)
          (VP (VBN tasselled)
            (UCP
              (NP
                (NP (PRP$ his) (JJ beard) (NNS i) ('' '))
                (NP (DT the) (NN mesh)))
              (, ,)
              (CC And)
              (VP (VBN spitted)
                (NP (PRP$ his) (NN crew))
                (PP (IN on)
                  (NP
                    (NP (DT the) (JJ live) (NN bamboo))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ grows)
                          (PP (IN through)
                            (NP (DT the) (JJ gangrened) (NN flesh))))))))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP
        (VP (VBD had)
          (S
            (VP (VB hove)
              (NP (PRP him))))
          (ADVP (RB down))
          (PP (IN by)
            (NP
              (NP (DT the) (JJ mangroves) (NN brown))
              (, ,)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (DT the) (NN mud-reef))
                  (VP
                    (VP (VBZ sucks))
                    (CC and)
                    (VP (VBZ draws))))))))
        (, ,)
        (VP (VBN Moored)
          (PP (IN by)
            (NP (DT the) (NN heel)))
          (PP (TO to)
            (NP (PRP$ his) (JJ own) (NN keel))))
        (S
          (VP (TO to)
            (VP (VB wait)
              (PP (IN for)
                (NP
                  (NP (DT the) (NN land-crab) (POS 's))
                  (NNS claws))))))))
    (. !)))

aux(had-3, Had-1)
nsubj(had-3, I-2)
advcl(run-19, had-3)
dobj(had-3, guns-4)
mark(had-8, as-6)
nsubj(had-8, I-7)
dep(guns-4, had-8)
dobj(had-8, goods-9)
mark(work-12, to-11)
ccomp(had-3, work-12)
nmod:poss(harm-15, my-13)
amod(harm-15, Christian-14)
dobj(work-12, harm-15)
nsubj(run-19, I-17)
aux(run-19, had-18)
root(ROOT-0, run-19)
dobj(run-19, him-20)
advmod(run-19, up-21)
case(quarter-deck-24, from-22)
nmod:poss(quarter-deck-24, his-23)
nmod:from(up-21, quarter-deck-24)
mark(trade-26, to-25)
acl(quarter-deck-24, trade-26)
case(yard-arm-30, with-27)
nmod:poss(yard-arm-30, his-28)
amod(yard-arm-30, own-29)
nmod:with(trade-26, yard-arm-30)
nsubj(nailed-34, I-32)
nsubj(ripped-42, I-32)
aux(nailed-34, had-33)
parataxis(run-19, nailed-34)
nmod:poss(ears-36, his-35)
dobj(nailed-34, ears-36)
case(capstan-head-39, to-37)
nmod:poss(capstan-head-39, my-38)
nmod:to(nailed-34, capstan-head-39)
cc(nailed-34, and-41)
parataxis(run-19, ripped-42)
conj:and(nailed-34, ripped-42)
dobj(ripped-42, them-43)
compound:prt(ripped-42, off-44)
case(saw-47, with-45)
det(saw-47, a-46)
nmod:with(ripped-42, saw-47)
cc(nailed-34, And-49)
csubj(raw-61, soused-50)
dobj(soused-50, them-51)
case(bilgewater-54, in-52)
det(bilgewater-54, the-53)
nmod:in(soused-50, bilgewater-54)
cc(soused-50, and-56)
conj:and(soused-50, served-57)
csubj(raw-61, served-57)
dobj(served-57, them-58)
case(him-60, to-59)
nmod:to(served-57, him-60)
parataxis(run-19, raw-61)
conj:and(nailed-34, raw-61)
nsubj(had-64, I-63)
ccomp(towed-81, had-64)
xcomp(had-64, flung-65)
nsubj(blind-67, him-66)
xcomp(flung-65, blind-67)
case(boat-71, in-68)
det(boat-71, a-69)
amod(boat-71, rudderless-70)
nmod:in(blind-67, boat-71)
case(rot-73, to-72)
nmod:to(blind-67, rot-73)
case(dark-77, in-74)
det(dark-77, the-75)
amod(dark-77, rocking-76)
nmod:in(rot-73, dark-77)
nsubj(towed-81, I-79)
aux(towed-81, had-80)
parataxis(run-19, towed-81)
nsubj(aft-83, him-82)
xcomp(towed-81, aft-83)
case(craft-87, of-84)
nmod:poss(craft-87, his-85)
amod(craft-87, own-86)
nmod:of(aft-83, craft-87)
det(bait-90, a-89)
appos(craft-87, bait-90)
case(shark-94, for-91)
nmod:poss(shark-94, his-92)
compound(shark-94, brother-93)
nmod:for(bait-90, shark-94)
nsubj(lapped-98, I-96)
nsubj(drenched-106, I-96)
aux(lapped-98, had-97)
parataxis(run-19, lapped-98)
nsubj(round-100, him-99)
ccomp(lapped-98, round-100)
case(husk-103, with-101)
compound(husk-103, cocoa-102)
nmod:with(round-100, husk-103)
cc(lapped-98, and-105)
parataxis(run-19, drenched-106)
conj:and(lapped-98, drenched-106)
dobj(drenched-106, him-107)
case(oil-110, with-108)
det(oil-110, the-109)
nmod:with(drenched-106, oil-110)
cc(lashed-113, And-112)
dep(lapped-98, lashed-113)
dobj(lashed-113, him-114)
advmod(lashed-113, fast-115)
case(mast-119, to-116)
nmod:poss(mast-119, his-117)
amod(mast-119, own-118)
nmod:to(fast-115, mast-119)
case(blaze-121, to-120)
nmod:to(lashed-113, blaze-121)
case(spoil-124, above-122)
nmod:poss(spoil-124, my-123)
nmod:above(blaze-121, spoil-124)
nsubj(stripped-128, I-126)
nsubj(tasselled-136, I-126)
aux(stripped-128, had-127)
parataxis(run-19, stripped-128)
nmod:poss(hide-130, his-129)
dobj(stripped-128, hide-130)
case(hammock-side-133, for-131)
nmod:poss(hammock-side-133, my-132)
nmod:for(stripped-128, hammock-side-133)
cc(stripped-128, and-135)
parataxis(run-19, tasselled-136)
conj:and(stripped-128, tasselled-136)
nmod:poss(i-139, his-137)
amod(i-139, beard-138)
dobj(tasselled-136, i-139)
det(mesh-142, the-141)
dep(i-139, mesh-142)
cc(i-139, And-144)
acl(i-139, spitted-145)
nmod:poss(crew-147, his-146)
dobj(spitted-145, crew-147)
case(bamboo-151, on-148)
det(bamboo-151, the-149)
amod(bamboo-151, live-150)
nmod:on(spitted-145, bamboo-151)
nsubj(grows-153, bamboo-151)
ref(bamboo-151, that-152)
acl:relcl(bamboo-151, grows-153)
case(flesh-157, through-154)
det(flesh-157, the-155)
amod(flesh-157, gangrened-156)
nmod:through(grows-153, flesh-157)
nsubj(had-160, I-159)
nsubj:xsubj(wait-185, I-159)
parataxis(run-19, had-160)
ccomp(had-160, hove-161)
dobj(hove-161, him-162)
advmod(had-160, down-163)
case(brown-167, by-164)
det(brown-167, the-165)
amod(brown-167, mangroves-166)
nmod:by(had-160, brown-167)
advmod(sucks-172, where-169)
det(mud-reef-171, the-170)
nsubj(sucks-172, mud-reef-171)
nsubj(draws-174, mud-reef-171)
acl:relcl(brown-167, sucks-172)
cc(sucks-172, and-173)
acl:relcl(brown-167, draws-174)
conj:and(sucks-172, draws-174)
dep(had-160, Moored-176)
case(heel-179, by-177)
det(heel-179, the-178)
nmod:by(Moored-176, heel-179)
case(keel-183, to-180)
nmod:poss(keel-183, his-181)
amod(keel-183, own-182)
nmod:to(Moored-176, keel-183)
mark(wait-185, to-184)
xcomp(had-160, wait-185)
case(claws-190, for-186)
det(land-crab-188, the-187)
nmod:poss(claws-190, land-crab-188)
case(land-crab-188, 's-189)
nmod:for(wait-185, claws-190)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (ADJP
          (ADJP (JJ lazar)
            (PP (IN within)))
          (CC and)
          (ADJP (JJ lime)
            (PP (IN without))))))
    (PRN (, ,)
      (S
        (NP (PRP ye))
        (VP (MD can)
          (VP (VB nose)
            (S
              (NP (PRP him))
              (ADJP (RB far) (JJ enow))))))
      (, ,))
    (IN For)
    (S
      (NP (PRP he))
      (VP (VBZ carries)
        (NP
          (NP
            (NP (DT the) (NN taint))
            (PP (IN of)
              (NP (DT a) (JJ musky) (NN ship))))
          (: --)
          (NP
            (NP (DT the) (NN reek))
            (PP (IN of)
              (NP
                (NP (DT the) (NN slaver) (POS 's))
                (NN dhow)))))))
    (. !) ('' '')))

nsubj(lazar-3, He-1)
nsubj(lime-6, He-1)
cop(lazar-3, is-2)
root(ROOT-0, lazar-3)
nmod(lazar-3, within-4)
cc(lazar-3, and-5)
conj:and(lazar-3, lime-6)
nmod(lime-6, without-7)
nsubj(nose-11, ye-9)
aux(nose-11, can-10)
dep(lazar-3, nose-11)
nsubj(enow-14, him-12)
advmod(enow-14, far-13)
xcomp(nose-11, enow-14)
dep(lazar-3, For-16)
nsubj(carries-18, he-17)
parataxis(lazar-3, carries-18)
det(taint-20, the-19)
dobj(carries-18, taint-20)
case(ship-24, of-21)
det(ship-24, a-22)
amod(ship-24, musky-23)
nmod:of(taint-20, ship-24)
det(reek-27, the-26)
dep(taint-20, reek-27)
case(dhow-32, of-28)
det(slaver-30, the-29)
nmod:poss(dhow-32, slaver-30)
case(slaver-30, 's-31)
nmod:of(reek-27, dhow-32)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN skipper))
        (VP (VBD looked)
          (PP (IN at)
            (NP
              (NP (DT the) (VBG tiering) (NNS guns))
              (CC and)
              (NP
                (NP (DT the) (NNS bulwarks))
                (ADJP (JJ tall)
                  (CC and)
                  (JJ cold)))))))
      (, ,)
      (CC And)
      (S
        (S
          (NP (DT the) (NNP Captains) (NNP Three) (JJ full) (NN courteously))
          (VP (VBD peered)
            (PRT (RP down))
            (PP (IN at)
              (NP (DT the) (JJ gutted) (NN hold)))))
        (, ,)
        (CC And)
        (S
          (NP (DT the) (NNP Captains) (NNP Three))
          (VP (VBD called)
            (ADVP (RB courteously))
            (PP (IN from)
              (NP (NN deck)))
            (PP (TO to)
              (NP (NN scuttle-butt)))))))
    (: :) (: --) (`` ``)
    (S
      (INTJ (JJ Good) (NN Sir))
      (, ,)
      (S
        (NP (PRP we))
        (VP (VBP ha)
          (SBAR
            (S
              (NP (POS '))
              (VP (VBN dealt)
                (PP (IN with)
                  (NP (DT that) (NN merchantman))))))))
      (CC or)
      (S
        (ADVP (RB ever))
        (NP (PRP$ your) (NNS teeth))
        (VP (VBD were)
          (VP (VBN cut)))))
    (. .)))

det(skipper-2, The-1)
nsubj(looked-3, skipper-2)
root(ROOT-0, looked-3)
case(guns-7, at-4)
det(guns-7, the-5)
amod(guns-7, tiering-6)
nmod:at(looked-3, guns-7)
cc(guns-7, and-8)
det(bulwarks-10, the-9)
nmod:at(looked-3, bulwarks-10)
conj:and(guns-7, bulwarks-10)
amod(bulwarks-10, tall-11)
cc(tall-11, and-12)
amod(bulwarks-10, cold-13)
conj:and(tall-11, cold-13)
cc(looked-3, And-15)
det(courteously-20, the-16)
compound(courteously-20, Captains-17)
compound(courteously-20, Three-18)
amod(courteously-20, full-19)
nsubj(peered-21, courteously-20)
conj:and(looked-3, peered-21)
compound:prt(peered-21, down-22)
case(hold-26, at-23)
det(hold-26, the-24)
amod(hold-26, gutted-25)
nmod:at(peered-21, hold-26)
cc(peered-21, And-28)
det(Three-31, the-29)
compound(Three-31, Captains-30)
nsubj(called-32, Three-31)
conj:and(looked-3, called-32)
conj:and(peered-21, called-32)
advmod(called-32, courteously-33)
case(deck-35, from-34)
nmod:from(called-32, deck-35)
case(scuttle-butt-37, to-36)
nmod:to(called-32, scuttle-butt-37)
amod(Sir-42, Good-41)
discourse(ha-45, Sir-42)
nsubj(ha-45, we-44)
parataxis(looked-3, ha-45)
nsubj(dealt-47, '-46)
ccomp(ha-45, dealt-47)
case(merchantman-50, with-48)
det(merchantman-50, that-49)
nmod:with(dealt-47, merchantman-50)
cc(ha-45, or-51)
advmod(cut-56, ever-52)
nmod:poss(teeth-54, your-53)
nsubjpass(cut-56, teeth-54)
auxpass(cut-56, were-55)
parataxis(looked-3, cut-56)
conj:or(ha-45, cut-56)

(ROOT
  (S
    (S
      (NP (PRP$ Your) (NNS words))
      (VP (VB be)
        (NP
          (NP
            (NP (NNS words))
            (PP (IN of)
              (NP (DT a) (JJ lawless) (NN race))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NN Law))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBP standeth)
                  (ADVP (RB thus)))))))))
    (: :)
    (S
      (S
        (NP (PRP He))
        (VP (VBZ comes)
          (PP (IN of)
            (NP
              (NP (DT a) (NN race))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP have)
                    (ADVP (RB never)
                      (NP (DT a) (NN Law))))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (ADVP (RB never))
        (VP (VBZ has)
          (VP (VBN boarded)
            (NP (PRP us))))))
    (. .)))

nmod:poss(words-2, Your-1)
nsubj(words-4, words-2)
cop(words-4, be-3)
root(ROOT-0, words-4)
case(race-8, of-5)
det(race-8, a-6)
amod(race-8, lawless-7)
nmod:of(words-4, race-8)
cc(words-4, and-10)
det(Law-12, the-11)
conj:and(words-4, Law-12)
nsubj(standeth-14, it-13)
acl:relcl(Law-12, standeth-14)
advmod(standeth-14, thus-15)
nsubj(comes-18, He-17)
parataxis(words-4, comes-18)
case(race-21, of-19)
det(race-21, a-20)
nmod:of(comes-18, race-21)
nsubj(have-23, race-21)
ref(race-21, that-22)
acl:relcl(race-21, have-23)
neg(have-23, never-24)
det(Law-26, a-25)
nmod:npmod(never-24, Law-26)
cc(comes-18, and-28)
nsubj(boarded-32, he-29)
neg(boarded-32, never-30)
aux(boarded-32, has-31)
parataxis(words-4, boarded-32)
conj:and(comes-18, boarded-32)
dobj(boarded-32, us-33)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP ha)
        (SBAR
          (S
            (NP (POS '))
            (VP (VBN sold)
              (S
                (NP (PRP him))
                (NP
                  (NP (NN canvas))
                  (CC and)
                  (NP (NN rope)
                    (CC and)
                    (NN spar)))))))))
    (: --)
    (S
      (S
        (NP (PRP we))
        (VP (VBP know)
          (SBAR (IN that)
            (S
              (NP (PRP$ his) (NN price))
              (VP (VBZ is)
                (ADJP (JJ fair)))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP we))
        (VP (VBP know)
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (VBZ weeps)
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN lack))
                    (PP (IN of)
                      (NP (DT a) (NN Law)))))
                (SBAR (IN as)
                  (S
                    (NP (PRP he))
                    (VP (VBZ rides)
                      (PP (IN off)
                        (NP (NNP Finisterre))))))))))))
    (. .)))

nsubj(ha-2, We-1)
root(ROOT-0, ha-2)
nsubj(sold-4, '-3)
ccomp(ha-2, sold-4)
nsubj(canvas-6, him-5)
xcomp(sold-4, canvas-6)
cc(canvas-6, and-7)
xcomp(sold-4, rope-8)
conj:and(canvas-6, rope-8)
cc(rope-8, and-9)
conj:and(canvas-6, spar-10)
conj:and(rope-8, spar-10)
nsubj(know-13, we-12)
parataxis(ha-2, know-13)
mark(fair-18, that-14)
nmod:poss(price-16, his-15)
nsubj(fair-18, price-16)
cop(fair-18, is-17)
ccomp(know-13, fair-18)
cc(know-13, And-20)
nsubj(know-22, we-21)
parataxis(ha-2, know-22)
conj:and(know-13, know-22)
mark(weeps-25, that-23)
nsubj(weeps-25, he-24)
ccomp(know-22, weeps-25)
case(lack-28, for-26)
det(lack-28, the-27)
nmod:for(weeps-25, lack-28)
case(Law-31, of-29)
det(Law-31, a-30)
nmod:of(lack-28, Law-31)
mark(rides-34, as-32)
nsubj(rides-34, he-33)
advcl(weeps-25, rides-34)
case(Finisterre-36, off-35)
nmod:off(rides-34, Finisterre-36)

(ROOT
  (S (CC And)
    (SBAR (IN since)
      (S
        (NP (PRP he))
        (VP (VBZ is)
          (ADJP (RB damned)
            (PP (IN for)
              (NP
                (NP (DT a)
                  (ADJP
                    (ADJP (JJ gallows-thief)
                      (PP (IN by)
                        (NP (PRP you))))
                    (CC and)
                    (ADJP (JJR better))))
                (PP (IN than)
                  (NP (PRP you)))))))))
    (, ,)
    (NP (PRP We))
    (VP (VBP hold)
      (S
        (NP (PRP it))
        (VP (VB meet)
          (SBAR (IN that)
            (S
              (NP (DT the) (JJ English) (NN fleet))
              (VP (MD should)
                (VP (VB know)
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP (VBP hold)
                        (S
                          (NP (PRP him))
                          (ADJP (JJ true)))))))))))))
    (. .) ('' '')))

cc(hold-17, And-1)
mark(damned-5, since-2)
nsubj(damned-5, he-3)
cop(damned-5, is-4)
advcl(hold-17, damned-5)
case(gallows-thief-8, for-6)
det(gallows-thief-8, a-7)
nmod:for(damned-5, gallows-thief-8)
case(you-10, by-9)
nmod:by(gallows-thief-8, you-10)
cc(gallows-thief-8, and-11)
nmod:for(damned-5, better-12)
conj:and(gallows-thief-8, better-12)
case(you-14, than-13)
nmod:than(gallows-thief-8, you-14)
nsubj(hold-17, We-16)
root(ROOT-0, hold-17)
nsubj(meet-19, it-18)
ccomp(hold-17, meet-19)
mark(know-25, that-20)
det(fleet-23, the-21)
amod(fleet-23, English-22)
nsubj(know-25, fleet-23)
aux(know-25, should-24)
ccomp(meet-19, know-25)
mark(hold-28, that-26)
nsubj(hold-28, we-27)
ccomp(know-25, hold-28)
nsubj(true-30, him-29)
xcomp(hold-28, true-30)

(ROOT
  (S
    (S
      (NP (DT The) (NN skipper))
      (VP (VBD called)
        (PP (TO to)
          (NP (DT the) (JJ tall) (NN taffrail)))))
    (: :) (: --) (`` ``)
    (CC And)
    (S
      (NP (WDT what))
      (VP (VBZ is)
        (NP
          (NP (DT that))
          (PP (TO to)
            (NP (PRP me))))))
    (. ?)))

det(skipper-2, The-1)
nsubj(called-3, skipper-2)
root(ROOT-0, called-3)
case(taffrail-7, to-4)
det(taffrail-7, the-5)
amod(taffrail-7, tall-6)
nmod:to(called-3, taffrail-7)
cc(called-3, And-11)
nsubj(that-14, what-12)
cop(that-14, is-13)
conj:and(called-3, that-14)
case(me-16, to-15)
nmod:to(that-14, me-16)

(ROOT
  (SQ (VBD Did)
    (NP
      (NP (RB ever))
      (NP (PRP you)))
    (VP (VB hear)
      (PP (IN of)
        (NP
          (NP (DT a) (NNP Yankee) (NN brig))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD rifled)
                (NP (DT a) (NN Seventy-three))))))))
    (. ?)))

aux(hear-4, Did-1)
nsubj(hear-4, ever-2)
dep(ever-2, you-3)
root(ROOT-0, hear-4)
case(brig-8, of-5)
det(brig-8, a-6)
compound(brig-8, Yankee-7)
nmod:of(hear-4, brig-8)
nsubj(rifled-10, brig-8)
ref(brig-8, that-9)
acl:relcl(brig-8, rifled-10)
det(Seventy-three-12, a-11)
dobj(rifled-10, Seventy-three-12)

(ROOT
  (SQ (VBP Do)
    (NP (PRP I))
    (VP (VB loom)
      (ADJP (RB so) (JJ large)
        (PP (IN from)
          (NP (PRP$ your) (NN quarter-deck))))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP lift)
            (PP (IN like)
              (NP
                (NP (DT a) (NN ship) (NN o) (POS '))
                (DT the) (NN Line)))))))
    (. ?)))

aux(loom-3, Do-1)
nsubj(loom-3, I-2)
root(ROOT-0, loom-3)
advmod(large-5, so-4)
xcomp(loom-3, large-5)
case(quarter-deck-8, from-6)
nmod:poss(quarter-deck-8, your-7)
nmod:from(large-5, quarter-deck-8)
mark(lift-11, that-9)
nsubj(lift-11, I-10)
ccomp(loom-3, lift-11)
case(Line-18, like-12)
det(o-15, a-13)
compound(o-15, ship-14)
nmod:poss(Line-18, o-15)
case(o-15, '-16)
det(Line-18, the-17)
nmod:like(lift-11, Line-18)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (VP (VBN learned)
        (S
          (VP (TO to)
            (VP (VB run)
              (PP (IN from)
                (NP
                  (NP (DT a) (JJ shotted) (NN gun))
                  (CC and)
                  (NP (JJ harry) (JJ such) (NN craft))))
              (PP (IN as)
                (NP (NN mine))))))))
    (. .)))

nsubj(learned-3, He-1)
nsubj:xsubj(run-5, He-1)
aux(learned-3, has-2)
root(ROOT-0, learned-3)
mark(run-5, to-4)
xcomp(learned-3, run-5)
case(gun-9, from-6)
det(gun-9, a-7)
amod(gun-9, shotted-8)
nmod:from(run-5, gun-9)
cc(gun-9, and-10)
amod(craft-13, harry-11)
amod(craft-13, such-12)
nmod:from(run-5, craft-13)
conj:and(gun-9, craft-13)
case(mine-15, as-14)
nmod:as(run-5, mine-15)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADVP (RB never))
        (NP
          (NP (DT a) (NN Law))
          (PP (IN on)
            (NP (DT the) (NNP Cocos) (NNP Keys))))
        (S
          (VP (TO to)
            (VP (VB hold)
              (NP (DT a) (JJ white) (NN man))
              (PP (IN in)))))))
    (, ,)
    (CC But)
    (S
      (NP (PRP we))
      (VP (VBP do) (RB not)
        (VP (VB steal)
          (NP
            (NP
              (NP (DT the) (NNS niggers) (POS '))
              (NN meal))
            (, ,)
            (PP (IN for)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (NN nigger) (POS 's))
                      (NN sin))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(is-2, never-3)
det(Law-5, a-4)
nsubj(is-2, Law-5)
case(Keys-9, on-6)
det(Keys-9, the-7)
compound(Keys-9, Cocos-8)
nmod:on(Law-5, Keys-9)
mark(hold-11, to-10)
advcl(is-2, hold-11)
det(man-14, a-12)
amod(man-14, white-13)
dobj(hold-11, man-14)
nmod(hold-11, in-15)
cc(is-2, But-17)
nsubj(steal-21, we-18)
aux(steal-21, do-19)
neg(steal-21, not-20)
conj:but(is-2, steal-21)
det(niggers-23, the-22)
nmod:poss(meal-25, niggers-23)
case(niggers-23, '-24)
dobj(steal-21, meal-25)
mark(sin-33, for-27)
nsubj(sin-33, that-28)
cop(sin-33, is-29)
det(nigger-31, a-30)
nmod:poss(sin-33, nigger-31)
case(nigger-31, 's-32)
acl(meal-25, sin-33)

(ROOT
  (SQ (MD Must)
    (NP (PRP he))
    (VP (VB have)
      (UCP
        (NP
          (NP (PRP$ his) (NN Law))
          (PP (IN as)
            (NP
              (NP (DT a) (NN quid))
              (PP (TO to)
                (NP (NN chaw))))))
        (, ,)
        (CC or)
        (VP (VBN laid)
          (PP (IN in)
            (NP
              (NP (NN brass))
              (PP (IN on)
                (NP (PRP$ his) (NN wheel))))))))
    (. ?)))

aux(have-3, Must-1)
nsubj(have-3, he-2)
root(ROOT-0, have-3)
nmod:poss(Law-5, his-4)
dobj(have-3, Law-5)
case(quid-8, as-6)
det(quid-8, a-7)
nmod:as(Law-5, quid-8)
case(chaw-10, to-9)
nmod:to(quid-8, chaw-10)
cc(Law-5, or-12)
acl(Law-5, laid-13)
case(brass-15, in-14)
nmod:in(laid-13, brass-15)
case(wheel-18, on-16)
nmod:poss(wheel-18, his-17)
nmod:on(brass-15, wheel-18)

(ROOT
  (SQ (NNP Does)
    (NP (PRP he))
    (VP (VB steal)
      (PP (IN with)
        (NP (NNS tears)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBZ buccaneers)))))
    (. ?)))

dep(steal-3, Does-1)
nsubj(steal-3, he-2)
root(ROOT-0, steal-3)
case(tears-5, with-4)
nmod:with(steal-3, tears-5)
advmod(buccaneers-8, when-6)
nsubj(buccaneers-8, he-7)
advcl(steal-3, buccaneers-8)

(ROOT
  (S (`` `)
    (NP (NNP Fore))
    (VP (VBD Gad) (, ,)
      (ADVP (RB then))
      (, ,)
      (SBAR
        (WHADVP (WRB why))
        (S
          (VP (VBZ does)
            (S
              (NP (PRP he))
              (VP (VB steal)))))))
    (. ?) ('' '')))

nsubj(Gad-3, Fore-2)
root(ROOT-0, Gad-3)
advmod(Gad-3, then-5)
advmod(does-8, why-7)
advcl(Gad-3, does-8)
nsubj(steal-10, he-9)
ccomp(does-8, steal-10)

(ROOT
  (S
    (S
      (NP (DT The) (NN skipper))
      (VP (VBD bit)
        (PP (IN on)
          (NP (DT a) (JJ deep-sea) (NN word)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN word))
        (SBAR
          (S
            (S
              (NP (PRP it))
              (VP (VBD was) (RB not)
                (ADJP (JJ sweet))))
            (, ,) (IN For)
            (S
              (NP (PRP he))
              (VP (MD could)
                (VP (VB see)
                  (NP (DT the) (NNP Captains) (CD Three))))))))
      (VP (VBD had)
        (VP (VBN signalled)
          (PP (TO to)
            (NP (DT the) (NNP Fleet))))))
    (. .)))

det(skipper-2, The-1)
nsubj(bit-3, skipper-2)
root(ROOT-0, bit-3)
case(word-7, on-4)
det(word-7, a-5)
amod(word-7, deep-sea-6)
nmod:on(bit-3, word-7)
cc(bit-3, and-9)
det(word-11, the-10)
nsubj(signalled-25, word-11)
nsubj(sweet-15, it-12)
cop(sweet-15, was-13)
neg(sweet-15, not-14)
acl:relcl(word-11, sweet-15)
dep(sweet-15, For-17)
nsubj(see-20, he-18)
aux(see-20, could-19)
parataxis(sweet-15, see-20)
det(Captains-22, the-21)
dobj(see-20, Captains-22)
nummod(Captains-22, Three-23)
aux(signalled-25, had-24)
conj:and(bit-3, signalled-25)
case(Fleet-28, to-26)
det(Fleet-28, the-27)
nmod:to(signalled-25, Fleet-28)

(ROOT
  (S (CC But)
    (S
      (NP (CD three)
        (CC and)
        (CD two))
      (, ,)
      (PP (IN in)
        (ADJP (JJ white)
          (CC and)
          (JJ blue)))
      (, ,)
      (NP (DT the) (VBG whimpering) (NNS flags))
      (VP (VBD began)))
    (: :) (: --) (`` ``)
    (S
      (S
        (NP (PRP We))
        (VP (VBP have)
          (VP (VBN heard)
            (NP
              (NP (DT a) (NN tale))
              (PP (IN of)
                (NP (DT a)
                  (PRN (: --)
                    (NP (JJ foreign) (NN sail)))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP he))
        (VP (VBZ is)
          (NP (DT a) (NN merchantman)))))
    (. .) ('' '')))

cc(began-14, But-1)
nsubj(began-14, three-2)
cc(three-2, and-3)
conj:and(three-2, two-4)
nsubj(began-14, two-4)
case(white-7, in-6)
advcl(began-14, white-7)
cc(white-7, and-8)
conj:and(white-7, blue-9)
advcl(began-14, blue-9)
det(flags-13, the-11)
amod(flags-13, whimpering-12)
nsubj(began-14, flags-13)
root(ROOT-0, began-14)
nsubj(heard-20, We-18)
aux(heard-20, have-19)
parataxis(began-14, heard-20)
det(tale-22, a-21)
dobj(heard-20, tale-22)
case(sail-27, of-23)
det(sail-27, a-24)
amod(sail-27, foreign-26)
nmod:of(tale-22, sail-27)
cc(heard-20, but-29)
nsubj(merchantman-33, he-30)
cop(merchantman-33, is-31)
det(merchantman-33, a-32)
parataxis(began-14, merchantman-33)
conj:but(heard-20, merchantman-33)

(ROOT
  (S
    (S
      (NP (DT The) (NN skipper))
      (VP
        (VP (VBD peered)
          (PP (IN beneath)
            (NP (PRP$ his) (NN palm))))
        (CC and)
        (VP (VBD swore)
          (PP (IN by)
            (NP
              (NP (DT the) (NNP Great) (NNP Horn) (NNP Spoon))
              (: :))))))
    (: --) ('' '')
    (S
      (NP (`` `)
        (NP (NNP Fore) (NNP Gad))
        (, ,)
        (NP
          (NP (DT the) (NNP Chaplain))
          (PP (IN of)
            (NP (DT the) (NNP Fleet)))))
      (VP (MD would)
        (VP (VB bless)
          (NP (PRP$ my) (NN picaroon)))))
    (. !) ('' '')))

det(skipper-2, The-1)
nsubj(peered-3, skipper-2)
nsubj(swore-8, skipper-2)
root(ROOT-0, peered-3)
case(palm-6, beneath-4)
nmod:poss(palm-6, his-5)
nmod:beneath(peered-3, palm-6)
cc(peered-3, and-7)
conj:and(peered-3, swore-8)
case(Spoon-13, by-9)
det(Spoon-13, the-10)
compound(Spoon-13, Great-11)
compound(Spoon-13, Horn-12)
nmod:by(swore-8, Spoon-13)
compound(Gad-19, Fore-18)
nsubj(bless-27, Gad-19)
det(Chaplain-22, the-21)
appos(Gad-19, Chaplain-22)
case(Fleet-25, of-23)
det(Fleet-25, the-24)
nmod:of(Chaplain-22, Fleet-25)
aux(bless-27, would-26)
parataxis(peered-3, bless-27)
nmod:poss(picaroon-29, my-28)
dobj(bless-27, picaroon-29)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP (CD two)
          (CC and)
          (CD three)))
      (NP (DT the) (NNS flags))
      (VP (VBD blew)
        (ADJP (JJ free)
          (S
            (VP (TO to)
              (VP (VB lash)
                (NP (DT the) (NN laughing) (NN air))))))))
    (: :) (: --) (`` ``)
    (S
      (S
        (NP (PRP We))
        (VP (VBP have)
          (VP (VBN sold)
            (NP (PRP$ our) (NNS spars))
            (PP (TO to)
              (NP (DT the) (NN merchantman))))))
      (: --)
      (S
        (NP (PRP we))
        (VP (VBP know)
          (SBAR (IN that)
            (S
              (NP (PRP$ his) (NN price))
              (VP (VBZ is)
                (ADJP (JJ fair))))))))
    (. .) ('' '')))

case(two-2, By-1)
nmod:by(blew-7, two-2)
cc(two-2, and-3)
conj:and(two-2, three-4)
nmod:by(blew-7, three-4)
det(flags-6, the-5)
nsubj(blew-7, flags-6)
root(ROOT-0, blew-7)
xcomp(blew-7, free-8)
mark(lash-10, to-9)
xcomp(free-8, lash-10)
det(air-13, the-11)
compound(air-13, laughing-12)
dobj(lash-10, air-13)
nsubj(sold-19, We-17)
aux(sold-19, have-18)
parataxis(blew-7, sold-19)
nmod:poss(spars-21, our-20)
dobj(sold-19, spars-21)
case(merchantman-24, to-22)
det(merchantman-24, the-23)
nmod:to(sold-19, merchantman-24)
nsubj(know-27, we-26)
parataxis(sold-19, know-27)
mark(fair-32, that-28)
nmod:poss(price-30, his-29)
nsubj(fair-32, price-30)
cop(fair-32, is-31)
ccomp(know-27, fair-32)

(ROOT
  (S
    (S
      (NP (DT The) (NN skipper))
      (VP
        (VP (VBD winked)
          (NP (PRP$ his) (JJ Western) (NN eye)))
        (, ,)
        (CC and)
        (VP (VBD swore)
          (PP (IN by)
            (NP (DT a) (NNP China) (NN storm))))))
    (: :) (: --) (`` ``)
    (S
      (NP (PRP They))
      (VP (VBP ha)
        (SBAR
          (S
            (NP (POS '))
            (VP (VBD rigged)
              (S
                (NP (PRP him))
                (NP
                  (NP (DT a) (NNP Joseph) (POS 's))
                  (NN jury-coat)
                  (S
                    (VP (TO to)
                      (VP (VB keep)
                        (S
                          (NP (PRP$ his) (NN honour))
                          (ADJP (JJ warm)))))))))))))
    (. .) ('' '')))

det(skipper-2, The-1)
nsubj(winked-3, skipper-2)
nsubj(swore-9, skipper-2)
root(ROOT-0, winked-3)
nmod:poss(eye-6, his-4)
amod(eye-6, Western-5)
dobj(winked-3, eye-6)
cc(winked-3, and-8)
conj:and(winked-3, swore-9)
case(storm-13, by-10)
det(storm-13, a-11)
compound(storm-13, China-12)
nmod:by(swore-9, storm-13)
nsubj(ha-18, They-17)
parataxis(winked-3, ha-18)
nsubj(rigged-20, '-19)
ccomp(ha-18, rigged-20)
nsubj(jury-coat-25, him-21)
det(Joseph-23, a-22)
nmod:poss(jury-coat-25, Joseph-23)
case(Joseph-23, 's-24)
xcomp(rigged-20, jury-coat-25)
mark(keep-27, to-26)
acl(jury-coat-25, keep-27)
nmod:poss(honour-29, his-28)
nsubj(warm-30, honour-29)
xcomp(keep-27, warm-30)

(ROOT
  (S
    (S
      (NP (DT The) (NNS halliards))
      (VP (VBD twanged)
        (PP (IN against)
          (NP (DT the) (NNS tops)))))
    (, ,)
    (NP (DT the) (NN bunting))
    (VP
      (VP (VBD bellied)
        (NP
          (NP (JJ broad))
          (, ,)
          (NP
            (NP (DT The) (NN skipper) (NN spat))
            (PP (IN in)
              (NP (DT the) (JJ empty) (NN hold))))))
      (CC and)
      (VP (VBD mourned)
        (PP (IN for)
          (NP (DT a) (JJ wasted) (NN cord)))))
    (. .)))

det(halliards-2, The-1)
nsubj(twanged-3, halliards-2)
ccomp(bellied-10, twanged-3)
case(tops-6, against-4)
det(tops-6, the-5)
nmod:against(twanged-3, tops-6)
det(bunting-9, the-8)
nsubj(bellied-10, bunting-9)
nsubj(mourned-21, bunting-9)
root(ROOT-0, bellied-10)
dobj(bellied-10, broad-11)
det(spat-15, The-13)
compound(spat-15, skipper-14)
appos(broad-11, spat-15)
case(hold-19, in-16)
det(hold-19, the-17)
amod(hold-19, empty-18)
nmod:in(spat-15, hold-19)
cc(bellied-10, and-20)
conj:and(bellied-10, mourned-21)
case(cord-25, for-22)
det(cord-25, a-23)
amod(cord-25, wasted-24)
nmod:for(mourned-21, cord-25)

(ROOT
  (NP
    (NP (NNP Masthead))
    (: --)
    (NP
      (NP (NN masthead))
      (, ,)
      (NP
        (NP (DT the) (NN signal))
        (VP (VBN sped)
          (PP (IN by)
            (NP (DT the) (NN line) (NN o) ('' ')))
          (NP
            (NP (DT the) (JJ British) (NN craft))
            (: ;)
            (NP
              (NP (DT The) (NN skipper))
              (VP
                (VP (VBN called)
                  (PP (TO to)
                    (NP (PRP$ his) (NNP Lascar) (NN crew))))
                (, ,)
                (CC and)
                (VP (VBN put)
                  (S
                    (NP (PRP her))
                    (ADJP (IN about))))
                (CC and)
                (VP (VBN laughed))))
            (: :)))))
    (: --) (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP
            (NP (JJ mainsail) (NN haul))
            (, ,)
            (NP
              (NP (PRP$ my) (NN bully) (NNS boys))
              (NP (DT all)))
            (PRN (: --)
              (S
                (NP (PRP we))
                (VP (MD 'll)
                  (VP
                    (PP (IN out)
                      (PP (TO to)
                        (NP (DT the) (NNS seas))))
                    (ADVP (RB again)))))
              (: --)))
          (VP (VBN Ere)
            (S
              (NP (PRP they))
              (VP (VB set)
                (S
                  (NP (PRP us))
                  (VP (TO to)
                    (VP (VB paint)
                      (NP (PRP$ their) (JJ pirate) (NN saint))))))))
          (, ,)
          (CC or)
          (NP
            (NP (NN scrub))
            (PP (IN at)
              (NP (PRP$ his) (NN grapnel-chain)))))))
    (. .)))

root(ROOT-0, Masthead-1)
dep(Masthead-1, masthead-3)
det(signal-6, the-5)
appos(masthead-3, signal-6)
acl(signal-6, sped-7)
case(o-11, by-8)
det(o-11, the-9)
compound(o-11, line-10)
nmod:by(sped-7, o-11)
det(craft-15, the-13)
amod(craft-15, British-14)
dobj(sped-7, craft-15)
det(skipper-18, The-17)
dep(craft-15, skipper-18)
dep(skipper-18, called-19)
case(crew-23, to-20)
nmod:poss(crew-23, his-21)
compound(crew-23, Lascar-22)
nmod:to(called-19, crew-23)
cc(called-19, and-25)
dep(skipper-18, put-26)
conj:and(called-19, put-26)
nsubj(about-28, her-27)
xcomp(put-26, about-28)
cc(called-19, and-29)
dep(skipper-18, laughed-30)
conj:and(called-19, laughed-30)
nsubj(haul-37, It-34)
cop(haul-37, 's-35)
amod(haul-37, mainsail-36)
dep(Masthead-1, haul-37)
nmod:poss(boys-41, my-39)
compound(boys-41, bully-40)
appos(haul-37, boys-41)
dep(boys-41, all-42)
nsubj(seas-49, we-44)
aux(seas-49, 'll-45)
case(seas-49, out-46)
case(seas-49, to-47)
det(seas-49, the-48)
dep(haul-37, seas-49)
advmod(seas-49, again-50)
acl(haul-37, Ere-52)
nsubj(set-54, they-53)
ccomp(Ere-52, set-54)
dobj(set-54, us-55)
nsubj:xsubj(paint-57, us-55)
mark(paint-57, to-56)
xcomp(set-54, paint-57)
nmod:poss(saint-60, their-58)
amod(saint-60, pirate-59)
dobj(paint-57, saint-60)
cc(haul-37, or-62)
dep(Masthead-1, scrub-63)
conj:or(haul-37, scrub-63)
case(grapnel-chain-66, at-64)
nmod:poss(grapnel-chain-66, his-65)
nmod:at(scrub-63, grapnel-chain-66)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (NN fore-sheet))
        (S
          (S
            (VP (VB free) (, ,)
              (PP (IN with)
                (NP (PRP$ her) (NN head)))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN sea))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (DT the) (NN swing))
                    (PP (IN of)
                      (NP (DT the) (JJ unbought) (NN brine))))))))
          (: --)
          (S
            (NP (PRP We))
            (VP (MD 'll)
              (VP (VB make)
                (NP (DT no) (NN sport))
                (PP (IN in)
                  (NP (DT an) (JJ English) (NN court)))
                (SBAR (IN till)
                  (S
                    (NP (PRP we))
                    (VP (VBP come)
                      (PP (IN as)
                        (NP
                          (NP (DT a) (NN ship) (NN o) (POS '))
                          (DT the) (NN Line)))))))))
          (: :)
          (S
            (VP (VBG Till)
              (S
                (NP (PRP we))
                (VP (VB come)
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN ship) (NN o) (POS '))
                      (NP
                        (NP
                          (NP (DT the) (NN Line))
                          (, ,)
                          (NP (PRP$ my) (NNS lads))
                          (, ,))
                        (PP (IN of)
                          (NP
                            (NP (CD thirty) (NN foot))
                            (PP (IN in)
                              (NP (DT the) (NN sheer))))))))))))
          (, ,)
          (S
            (VP (VBG Lifting)
              (ADVP (RB again))
              (PP (IN from)
                (NP
                  (NP (DT the) (JJ outer) (NN main))
                  (PP (IN with)
                    (NP
                      (NP (NN news))
                      (PP (IN of)
                        (NP (DT a) (NN privateer)))))))))
          (: ;)
          (S
            (VP (VBG Flying)
              (NP (PRP$ his) (NN pluck))
              (PP (IN at)
                (NP
                  (NP (PRP$ our) (NN mizzen-truck))
                  (PP (IN for)
                    (NP
                      (NP (NN weft))
                      (PP (IN of)
                        (NP (NNP Admiralty)))))))))
          (, ,)
          (S
            (VP (VBG Heaving)
              (NP (PRP$ his) (NN head))
              (PP (IN for)
                (NP (PRP$ our) (JJ dipsey-lead)))
              (PP (IN in)
                (NP (NN sign)))))))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP keep)
            (NP (DT the) (NN sea))))))
    (. .)))

nsubj(fore-sheet-3, It-1)
cop(fore-sheet-3, 's-2)
root(ROOT-0, fore-sheet-3)
dep(fore-sheet-3, free-4)
case(head-8, with-6)
nmod:poss(head-8, her-7)
nmod:with(free-4, head-8)
case(sea-11, to-9)
det(sea-11, the-10)
nmod:to(free-4, sea-11)
cc(sea-11, and-13)
det(swing-15, the-14)
nmod:to(free-4, swing-15)
conj:and(sea-11, swing-15)
case(brine-19, of-16)
det(brine-19, the-17)
amod(brine-19, unbought-18)
nmod:of(swing-15, brine-19)
nsubj(make-23, We-21)
aux(make-23, 'll-22)
parataxis(free-4, make-23)
neg(sport-25, no-24)
dobj(make-23, sport-25)
case(court-29, in-26)
det(court-29, an-27)
amod(court-29, English-28)
nmod:in(make-23, court-29)
mark(come-32, till-30)
nsubj(come-32, we-31)
advcl(make-23, come-32)
case(Line-39, as-33)
det(o-36, a-34)
compound(o-36, ship-35)
nmod:poss(Line-39, o-36)
case(o-36, '-37)
det(Line-39, the-38)
nmod:as(come-32, Line-39)
parataxis(free-4, Till-41)
nsubj(come-43, we-42)
ccomp(Till-41, come-43)
case(o-47, as-44)
det(o-47, a-45)
compound(o-47, ship-46)
nmod:as(come-43, o-47)
case(o-47, '-48)
det(Line-50, the-49)
dep(o-47, Line-50)
nmod:poss(lads-53, my-52)
appos(Line-50, lads-53)
case(foot-57, of-55)
nummod(foot-57, thirty-56)
nmod:of(Line-50, foot-57)
case(sheer-60, in-58)
det(sheer-60, the-59)
nmod:in(foot-57, sheer-60)
dep(free-4, Lifting-62)
advmod(Lifting-62, again-63)
case(main-67, from-64)
det(main-67, the-65)
amod(main-67, outer-66)
nmod:from(Lifting-62, main-67)
case(news-69, with-68)
nmod:with(main-67, news-69)
case(privateer-72, of-70)
det(privateer-72, a-71)
nmod:of(news-69, privateer-72)
parataxis(free-4, Flying-74)
nmod:poss(pluck-76, his-75)
dobj(Flying-74, pluck-76)
case(mizzen-truck-79, at-77)
nmod:poss(mizzen-truck-79, our-78)
nmod:at(Flying-74, mizzen-truck-79)
case(weft-81, for-80)
nmod:for(mizzen-truck-79, weft-81)
case(Admiralty-83, of-82)
nmod:of(weft-81, Admiralty-83)
parataxis(free-4, Heaving-85)
nmod:poss(head-87, his-86)
dobj(Heaving-85, head-87)
case(dipsey-lead-90, for-88)
nmod:poss(dipsey-lead-90, our-89)
nmod:for(Heaving-85, dipsey-lead-90)
case(sign-92, in-91)
nmod:in(Heaving-85, sign-92)
mark(keep-95, that-93)
nsubj(keep-95, we-94)
ccomp(fore-sheet-3, keep-95)
det(sea-97, the-96)
dobj(keep-95, sea-97)

(ROOT
  (S
    (S (RB Then)
      (SBAR
        (NP (JJ fore-sheet) (NN home))
        (IN as)
        (S
          (NP (PRP she))
          (VP (VBZ lifts)
            (PP (TO to)
              (NP (DT the) (NN foam)))
            (: --)
            (S
              (NP (PRP we))
              (VP (VB stand)
                (PP (IN on)
                  (NP (DT the) (JJ outward) (NN tack))))))))
      (, ,)
      (NP (PRP We))
      (VP (VBP are)
        (VP (VBN paid)
          (PP (IN in)
            (NP
              (NP (DT the) (NN coin))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ white) (NN man) (POS 's))
                  (NN trade))))))))
    (: --)
    (S
      (NP (DT the) (NN bezant))
      (VP (VBZ is)
        (ADJP
          (ADJP (JJ hard))
          (, ,)
          (ADJP (JJ ay))
          (, ,)
          (CC and)
          (ADJP (JJ black)))))
    (. .)))

advmod(paid-20, Then-1)
amod(home-3, fore-sheet-2)
dep(lifts-6, home-3)
mark(lifts-6, as-4)
nsubj(lifts-6, she-5)
advcl(paid-20, lifts-6)
case(foam-9, to-7)
det(foam-9, the-8)
nmod:to(lifts-6, foam-9)
nsubj(stand-12, we-11)
ccomp(lifts-6, stand-12)
case(tack-16, on-13)
det(tack-16, the-14)
amod(tack-16, outward-15)
nmod:on(stand-12, tack-16)
nsubjpass(paid-20, We-18)
auxpass(paid-20, are-19)
root(ROOT-0, paid-20)
case(coin-23, in-21)
det(coin-23, the-22)
nmod:in(paid-20, coin-23)
case(trade-29, of-24)
det(man-27, the-25)
amod(man-27, white-26)
nmod:poss(trade-29, man-27)
case(man-27, 's-28)
nmod:of(coin-23, trade-29)
det(bezant-32, the-31)
nsubj(hard-34, bezant-32)
nsubj(ay-36, bezant-32)
nsubj(black-39, bezant-32)
cop(hard-34, is-33)
parataxis(paid-20, hard-34)
parataxis(paid-20, ay-36)
conj:and(hard-34, ay-36)
cc(hard-34, and-38)
parataxis(paid-20, black-39)
conj:and(hard-34, black-39)

(ROOT
  (S
    (NP (DT The) (NN frigate-bird))
    (VP (MD shall)
      (VP (VB carry)
        (NP (PRP$ my) (NN word))
        (PP (TO to)
          (NP
            (NP (DT the) (NN Kling))
            (CC and)
            (NP (DT the) (NN Orang-Laut))))
        (SBAR
          (WHADVP (WRB How))
          (S
            (NP (DT a) (NN man))
            (VP (MD may)
              (VP (VB sail)
                (PP (IN from)
                  (NP (DT a) (NN heathen) (NN coast)))
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN robbed)
                        (PP (IN in)
                          (NP (DT a) (JJ Christian) (NN port)))))))))
            (: ;)
            (SBAR
              (WHADVP (WRB How))
              (S
                (NP (DT a) (NN man))
                (VP (MD may)
                  (VP (VB be)
                    (VP (VBN robbed)
                      (PP (IN in)
                        (NP (JJ Christian) (NN port)))
                      (SBAR (IN while)
                        (S
                          (NP (NNP Three) (NNP Great))
                          (VP (VBZ Captains)
                            (S
                              (NP (EX there))
                              (NP (NNP Shall))
                              (S
                                (VP (VB dip)
                                  (NP (PRP$ their) (NN flag))
                                  (PP (TO to)
                                    (NP
                                      (NP (DT a) (NN slaver) (POS 's))
                                      (NN rag))))))
                            (: --)
                            (S
                              (VP (TO to)
                                (VP (VB show)
                                  (SBAR (IN that)
                                    (S
                                      (NP (PRP$ his) (NN trade))
                                      (VP (VBZ is)
                                        (ADJP (JJ fair))))))))))))))))))))
    (. !) ('' '')))

det(frigate-bird-2, The-1)
nsubj(carry-4, frigate-bird-2)
aux(carry-4, shall-3)
root(ROOT-0, carry-4)
nmod:poss(word-6, my-5)
dobj(carry-4, word-6)
case(Kling-9, to-7)
det(Kling-9, the-8)
nmod:to(carry-4, Kling-9)
cc(Kling-9, and-10)
det(Orang-Laut-12, the-11)
nmod:to(carry-4, Orang-Laut-12)
conj:and(Kling-9, Orang-Laut-12)
advmod(sail-17, How-13)
det(man-15, a-14)
nsubj(sail-17, man-15)
nsubjpass:xsubj(robbed-24, man-15)
aux(sail-17, may-16)
dep(carry-4, sail-17)
case(coast-21, from-18)
det(coast-21, a-19)
compound(coast-21, heathen-20)
nmod:from(sail-17, coast-21)
mark(robbed-24, to-22)
auxpass(robbed-24, be-23)
xcomp(sail-17, robbed-24)
case(port-28, in-25)
det(port-28, a-26)
amod(port-28, Christian-27)
nmod:in(robbed-24, port-28)
advmod(robbed-35, How-30)
det(man-32, a-31)
nsubjpass(robbed-35, man-32)
aux(robbed-35, may-33)
auxpass(robbed-35, be-34)
parataxis(sail-17, robbed-35)
case(port-38, in-36)
amod(port-38, Christian-37)
nmod:in(robbed-35, port-38)
mark(Captains-42, while-39)
compound(Great-41, Three-40)
nsubj(Captains-42, Great-41)
advcl(robbed-35, Captains-42)
expl(dip-45, there-43)
dep(dip-45, Shall-44)
xcomp(Captains-42, dip-45)
nmod:poss(flag-47, their-46)
dobj(dip-45, flag-47)
case(rag-52, to-48)
det(slaver-50, a-49)
nmod:poss(rag-52, slaver-50)
case(slaver-50, 's-51)
nmod:to(dip-45, rag-52)
mark(show-55, to-54)
parataxis(Captains-42, show-55)
mark(fair-60, that-56)
nmod:poss(trade-58, his-57)
nsubj(fair-60, trade-58)
cop(fair-60, is-59)
ccomp(show-55, fair-60)

(ROOT
  (S
    (NP
      (NP (DT THE) (NN BALLAD))
      (PP (IN OF)
        (NP (DT THE) (`` ``) (NNP CLAMPHERDOWN) ('' ''))))
    (PRN
      (S
        (NP (PRP It))
        (VP (VBD was)
          (NP
            (NP (PRP$ our) (JJ war-ship) (NN _))
            (SBAR
              (S
                (NP (NNP Clampherdown) (NNP _))
                (VP (MD Would)
                  (VP (VB sweep)
                    (S
                      (NP (DT the) (NNP Channel))
                      (ADJP (JJ clean))))))))))
      (, ,))
    (VP (VBP Wherefore)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD kept)
            (S
              (NP (PRP$ her) (NNS hatches))
              (ADJP (JJ close))
              (SBAR
                (WHADVP (WRB When))
                (S
                  (NP (DT the) (JJ merry) (NNP Channel) (NNS chops))
                  (VP (VBD arose) (, ,)
                    (S
                      (VP (TO To)
                        (VP (VB save)
                          (NP (DT the) (JJ bleached) (NN marine)))))))))))))
    (. .)))

det(BALLAD-2, THE-1)
nsubj(Wherefore-21, BALLAD-2)
case(CLAMPHERDOWN-6, OF-3)
det(CLAMPHERDOWN-6, THE-4)
nmod:of(BALLAD-2, CLAMPHERDOWN-6)
nsubj(_-12, It-8)
cop(_-12, was-9)
nmod:poss(_-12, our-10)
amod(_-12, war-ship-11)
parataxis(Wherefore-21, _-12)
compound(_-14, Clampherdown-13)
nsubj(sweep-16, _-14)
aux(sweep-16, Would-15)
acl:relcl(_-12, sweep-16)
det(Channel-18, the-17)
nsubj(clean-19, Channel-18)
xcomp(sweep-16, clean-19)
root(ROOT-0, Wherefore-21)
nsubj(kept-23, she-22)
ccomp(Wherefore-21, kept-23)
nmod:poss(hatches-25, her-24)
nsubj(arose-32, hatches-25)
nsubj:xsubj(save-35, hatches-25)
dep(arose-32, close-26)
advmod(arose-32, When-27)
det(chops-31, the-28)
amod(chops-31, merry-29)
compound(chops-31, Channel-30)
nsubj(arose-32, chops-31)
nsubj:xsubj(save-35, chops-31)
xcomp(kept-23, arose-32)
mark(save-35, To-34)
xcomp(arose-32, save-35)
det(marine-38, the-36)
amod(marine-38, bleached-37)
dobj(save-35, marine-38)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD had)
        (NP
          (NP (CD one) (NN bow-gun))
          (PP (IN of)
            (NP (DT a) (CD hundred) (NN ton))))))
    (, ,)
    (CC And)
    (S
      (NP (DT a) (JJ great) (NN stern-gun))
      (VP (VBZ beside)))
    (: ;)
    (S
      (NP (PRP They))
      (VP (VBD dipped)
        (NP (PRP$ their) (NNS noses))
        (ADVP (RB deep))
        (PP (IN in)
          (NP (DT the) (NN sea)))))
    (, ,)
    (S
      (NP (PRP They))
      (VP (VBD racked)
        (S
          (NP (PRP$ their) (NNS stays)
            (CC and)
            (NNS stanchions))
          (ADJP (JJ free))
          (PP (IN In)
            (NP
              (NP (DT the) (NN wash))
              (PP (IN of)
                (NP (DT the) (JJ wind-whipped) (NN tide))))))))
    (. .)))

nsubj(had-2, She-1)
root(ROOT-0, had-2)
nummod(bow-gun-4, one-3)
dobj(had-2, bow-gun-4)
case(ton-8, of-5)
det(ton-8, a-6)
nummod(ton-8, hundred-7)
nmod:of(bow-gun-4, ton-8)
cc(had-2, And-10)
det(stern-gun-13, a-11)
amod(stern-gun-13, great-12)
nsubj(beside-14, stern-gun-13)
conj:and(had-2, beside-14)
nsubj(dipped-17, They-16)
conj:and(had-2, dipped-17)
nmod:poss(noses-19, their-18)
dobj(dipped-17, noses-19)
advmod(dipped-17, deep-20)
case(sea-23, in-21)
det(sea-23, the-22)
nmod:in(dipped-17, sea-23)
nsubj(racked-26, They-25)
conj:and(had-2, racked-26)
nmod:poss(stays-28, their-27)
nsubj(free-31, stays-28)
cc(stays-28, and-29)
conj:and(stays-28, stanchions-30)
nsubj(free-31, stanchions-30)
xcomp(racked-26, free-31)
case(wash-34, In-32)
det(wash-34, the-33)
dep(free-31, wash-34)
case(tide-38, of-35)
det(tide-38, the-36)
amod(tide-38, wind-whipped-37)
nmod:of(wash-34, tide-38)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (PRP$ our) (JJ war-ship) (NNP _) (NNP Clampherdown) (NN _))
        (, ,)
        (PP
          (NP (NNP Fell))
          (IN in)
          (PP (IN with)
            (NP
              (NP (DT a) (NN cruiser) (NN light))
              (SBAR
                (S
                  (NP (DT That))
                  (VP (VBD carried)
                    (NP (DT the) (JJ dainty) (NNP Hotchkiss) (NN gun))))))))))
    (CC And)
    (S
      (NP
        (NP (DT a) (NN pair) (NN o) (POS '))
        (NNS heels))
      (VP (VBP wherewith)
        (S
          (VP (TO to)
            (VP (VB run)
              (PP (IN From)
                (NP
                  (NP (DT the) (NN grip))
                  (PP (IN of)
                    (NP (DT a) (JJ close-fought) (NN fight))))))))))
    (. .)))

nsubj(_-7, It-1)
cop(_-7, was-2)
nmod:poss(_-7, our-3)
amod(_-7, war-ship-4)
compound(_-7, _-5)
compound(_-7, Clampherdown-6)
root(ROOT-0, _-7)
nmod:in(_-7, Fell-9)
case(Fell-9, in-10)
case(light-14, with-11)
det(light-14, a-12)
compound(light-14, cruiser-13)
dep(Fell-9, light-14)
nsubj(carried-16, light-14)
ref(light-14, That-15)
acl:relcl(light-14, carried-16)
det(gun-20, the-17)
amod(gun-20, dainty-18)
compound(gun-20, Hotchkiss-19)
dobj(carried-16, gun-20)
cc(_-7, And-21)
det(o-24, a-22)
compound(o-24, pair-23)
nmod:poss(heels-26, o-24)
case(o-24, '-25)
nsubj(wherewith-27, heels-26)
nsubj:xsubj(run-29, heels-26)
conj:and(_-7, wherewith-27)
mark(run-29, to-28)
xcomp(wherewith-27, run-29)
case(grip-32, From-30)
det(grip-32, the-31)
nmod:from(run-29, grip-32)
case(fight-36, of-33)
det(fight-36, a-34)
amod(fight-36, close-fought-35)
nmod:of(grip-32, fight-36)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD opened)
        (NP (NN fire))
        (PP (IN at)
          (NP (CD seven) (NNS miles)))))
    (PRN (: --)
      (SBAR (IN As)
        (S
          (NP (PRP ye))
          (VP (VBP shoot)
            (PP (IN at)
              (NP (DT a) (VBG bobbing) (NN cork))))))
      (: --))
    (CC And)
    (S
      (SBAR (IN once)
        (S
          (S
            (NP (PRP she))
            (VP (VBD fired)))
          (CC and)
          (S
            (ADVP (RB twice))
            (NP (PRP she))
            (VP (VBD fired) (, ,)
              (PP (IN Till)
                (NP
                  (NP (DT the) (NN bow-gun))
                  (VP (VBN drooped)
                    (PP (IN like)
                      (NP
                        (NP (DT a) (NN lily))
                        (ADJP (JJ tired)))))))))))
      (NP (DT That))
      (VP (VBZ lolls)
        (PP (IN upon)
          (NP (DT the) (NN stalk)))))
    (. .)))

nsubj(opened-2, She-1)
root(ROOT-0, opened-2)
dobj(opened-2, fire-3)
case(miles-6, at-4)
nummod(miles-6, seven-5)
nmod:at(opened-2, miles-6)
mark(shoot-10, As-8)
nsubj(shoot-10, ye-9)
dep(opened-2, shoot-10)
case(cork-14, at-11)
det(cork-14, a-12)
amod(cork-14, bobbing-13)
nmod:at(shoot-10, cork-14)
cc(opened-2, And-16)
mark(fired-19, once-17)
nsubj(fired-19, she-18)
advcl(lolls-34, fired-19)
cc(fired-19, and-20)
advmod(fired-23, twice-21)
nsubj(fired-23, she-22)
conj:and(fired-19, fired-23)
advcl(lolls-34, fired-23)
case(bow-gun-27, Till-25)
det(bow-gun-27, the-26)
nmod:till(fired-23, bow-gun-27)
acl(bow-gun-27, drooped-28)
case(lily-31, like-29)
det(lily-31, a-30)
nmod:like(drooped-28, lily-31)
amod(lily-31, tired-32)
nsubj(lolls-34, That-33)
conj:and(opened-2, lolls-34)
case(stalk-37, upon-35)
det(stalk-37, the-36)
nmod:upon(lolls-34, stalk-37)

(ROOT
  (S (`` ``)
    (ADVP (RB Captain))
    (, ,)
    (S
      (NP (DT the) (NN bow-gun))
      (VP (VBZ melts)
        (ADJP (JJ apace))
        (, ,)
        (S
          (NP (DT The) (NNS deck-beams))
          (VP (NN break)
            (ADVP (RB below))))
        (, ,) (`` `)
        (S
          (NP (NNP Twere))
          (ADVP (RB well))
          (VP (TO to)
            (VP (VB rest)
              (PP (IN for)
                (NP (DT an) (NN hour)
                  (CC or)
                  (NN twain))))))))
    (, ,)
    (CC And)
    (S
      (VP (VB botch)
        (NP (DT the) (JJ shattered) (NNS plates))
        (ADVP (RB again))))
    (. .) ('' '')))

advmod(melts-6, Captain-2)
det(bow-gun-5, the-4)
nsubj(melts-6, bow-gun-5)
nsubj(botch-26, bow-gun-5)
root(ROOT-0, melts-6)
xcomp(melts-6, apace-7)
det(deck-beams-10, The-9)
nsubj(break-11, deck-beams-10)
ccomp(melts-6, break-11)
advmod(break-11, below-12)
dobj(melts-6, Twere-15)
nsubj:xsubj(rest-18, Twere-15)
advmod(rest-18, well-16)
mark(rest-18, to-17)
xcomp(melts-6, rest-18)
case(hour-21, for-19)
det(hour-21, an-20)
nmod:for(rest-18, hour-21)
cc(hour-21, or-22)
nmod:for(rest-18, twain-23)
conj:or(hour-21, twain-23)
cc(melts-6, And-25)
conj:and(melts-6, botch-26)
det(plates-29, the-27)
amod(plates-29, shattered-28)
dobj(botch-26, plates-29)
advmod(botch-26, again-30)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD answered) (, ,)
      (S (`` ``)
        (NP
          (S
            (VP (NNP Make)
              (S
                (NP (PRP it))
                (ADJP (RB so))))))))
    (. .) ('' '')))

cc(answered-3, And-1)
nsubj(answered-3, he-2)
root(ROOT-0, answered-3)
xcomp(answered-3, Make-6)
nsubj(so-8, it-7)
xcomp(Make-6, so-8)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD opened)
        (NP (NN fire))
        (PP (IN within)
          (NP (DT the) (NN mile)))))
    (PRN (: --)
      (SBAR (IN As)
        (S
          (NP (PRP ye))
          (VP (VBP shoot)
            (PP (IN at)
              (NP (DT the) (VBG flying) (NN duck))))))
      (: --))
    (CC And)
    (S
      (S
        (NP (DT the) (JJ great) (NN stern-gun))
        (VP (VBD shot)
          (ADJP (JJ fair)
            (CC and)
            (JJ true))
          (, ,)
          (PP (IN With)
            (NP
              (NP (DT the) (NN heave))
              (PP (IN of)
                (NP (DT the) (NN ship)))))
          (, ,)
          (PP (TO to)
            (NP (DT the) (JJ stainless) (NN blue)))))
      (, ,)
      (CC And)
      (S
        (NP (DT the) (JJ great) (NN stern-turret))
        (VP (VBD stuck))))
    (. .)))

nsubj(opened-2, She-1)
root(ROOT-0, opened-2)
dobj(opened-2, fire-3)
case(mile-6, within-4)
det(mile-6, the-5)
nmod:within(opened-2, mile-6)
mark(shoot-10, As-8)
nsubj(shoot-10, ye-9)
dep(opened-2, shoot-10)
case(duck-14, at-11)
det(duck-14, the-12)
amod(duck-14, flying-13)
nmod:at(shoot-10, duck-14)
cc(opened-2, And-16)
det(stern-gun-19, the-17)
amod(stern-gun-19, great-18)
nsubj(shot-20, stern-gun-19)
conj:and(opened-2, shot-20)
xcomp(shot-20, fair-21)
cc(fair-21, and-22)
xcomp(shot-20, true-23)
conj:and(fair-21, true-23)
case(heave-27, With-25)
det(heave-27, the-26)
nmod:with(shot-20, heave-27)
case(ship-30, of-28)
det(ship-30, the-29)
nmod:of(heave-27, ship-30)
case(blue-35, to-32)
det(blue-35, the-33)
amod(blue-35, stainless-34)
nmod:to(shot-20, blue-35)
cc(shot-20, And-37)
det(stern-turret-40, the-38)
amod(stern-turret-40, great-39)
nsubj(stuck-41, stern-turret-40)
conj:and(opened-2, stuck-41)
conj:and(shot-20, stuck-41)

(ROOT
  (S (`` ``)
    (ADVP (RB Captain))
    (, ,)
    (S
      (NP (DT the) (NN turret))
      (VP (VBZ fills)
        (PP (IN with)
          (NP
            (NP (NN steam))
            (, ,)
            (NP (DT The) (JJ feed-pipes) (NN burst))))
        (ADVP (RB below))))
    (: --)
    (S
      (S
        (NP (PRP You))
        (VP (MD can)
          (VP (VB hear)
            (NP
              (NP (DT the) (NNS hiss))
              (PP (IN of)
                (NP (DT the) (JJ helpless) (NN ram)))))))
      (, ,)
      (NP (PRP You))
      (VP (MD can)
        (VP (VB hear)
          (NP (DT the) (JJ twisted) (NNS runners) (NN jam)))))
    (. .) ('' '')))

advmod(fills-6, Captain-2)
det(turret-5, the-4)
nsubj(fills-6, turret-5)
root(ROOT-0, fills-6)
case(steam-8, with-7)
nmod:with(fills-6, steam-8)
det(burst-12, The-10)
amod(burst-12, feed-pipes-11)
appos(steam-8, burst-12)
advmod(fills-6, below-13)
nsubj(hear-17, You-15)
aux(hear-17, can-16)
ccomp(hear-27, hear-17)
det(hiss-19, the-18)
dobj(hear-17, hiss-19)
case(ram-23, of-20)
det(ram-23, the-21)
amod(ram-23, helpless-22)
nmod:of(hiss-19, ram-23)
nsubj(hear-27, You-25)
aux(hear-27, can-26)
parataxis(fills-6, hear-27)
det(jam-31, the-28)
amod(jam-31, twisted-29)
compound(jam-31, runners-30)
dobj(hear-27, jam-31)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD answered) (, ,) (`` ``)
      (S
        (VP (VB Turn)
          (CC and)
          (VB go))))
    (. !) ('' '')))

cc(answered-3, And-1)
nsubj(answered-3, he-2)
root(ROOT-0, answered-3)
ccomp(answered-3, Turn-6)
cc(Turn-6, and-7)
ccomp(answered-3, go-8)
conj:and(Turn-6, go-8)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD was)
          (NP (PRP$ our) (JJ war-ship) (NNP _) (NNP Clampherdown) (NN _))))
      (, ,)
      (CC And)
      (S
        (NP (NNP grimly))
        (VP (VBD did)
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBP roll)))))))
    (: ;)
    (S
      (NP (NNP Swung))
      (VP (VBP round)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP
                (NP (DT the) (NN cruiser) (POS 's))
                (NN fire))
              (SBAR (IN As)
                (S
                  (NP (DT the) (NNP White) (NNP Whale))
                  (VP (VBZ faces)
                    (NP
                      (NP (DT the) (NNP Thresher) (POS 's))
                      (NN ire)
                      (SBAR
                        (WHADVP (WRB When))
                        (S
                          (NP (PRP they))
                          (VP (VBZ war)
                            (PP (IN by)
                              (NP (DT the) (VBN frozen) (NNP Pole)))))))))))))))
    (. .)))

nsubj(_-7, It-1)
cop(_-7, was-2)
nmod:poss(_-7, our-3)
amod(_-7, war-ship-4)
compound(_-7, _-5)
compound(_-7, Clampherdown-6)
root(ROOT-0, _-7)
cc(_-7, And-9)
nsubj(did-11, grimly-10)
conj:and(_-7, did-11)
nsubj(roll-13, she-12)
ccomp(did-11, roll-13)
nsubj(round-16, Swung-15)
nsubj:xsubj(take-18, Swung-15)
parataxis(_-7, round-16)
mark(take-18, to-17)
xcomp(round-16, take-18)
det(cruiser-20, the-19)
nmod:poss(fire-22, cruiser-20)
case(cruiser-20, 's-21)
dobj(take-18, fire-22)
mark(faces-27, As-23)
det(Whale-26, the-24)
compound(Whale-26, White-25)
nsubj(faces-27, Whale-26)
advcl(take-18, faces-27)
det(Thresher-29, the-28)
nmod:poss(ire-31, Thresher-29)
case(Thresher-29, 's-30)
dobj(faces-27, ire-31)
advmod(war-34, When-32)
nsubj(war-34, they-33)
ccomp(ire-31, war-34)
case(Pole-38, by-35)
det(Pole-38, the-36)
amod(Pole-38, frozen-37)
nmod:by(war-34, Pole-38)

(ROOT
  (S (`` ``)
    (ADVP (RB Captain))
    (, ,)
    (S
      (NP (DT the) (NNS shells))
      (VP (VBP are)
        (VP (VBG falling)
          (ADVP (RB fast)))))
    (, ,)
    (CC And)
    (S
      (NP (JJR faster))
      (ADVP (RB still))
      (VP (VBP fall)
        (NP (PRP we))))
    (: ;)
    (CC And)
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (VP (VB meet)
          (PP (IN for)
            (NP (JJ English) (NN stock)))
          (S
            (VP (TO To)
              (VP (VB bide)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN heart))
                    (PP (IN of)
                      (NP (DT an) (JJ eight-day) (NN clock)))))
                (NP
                  (NP (DT The) (NN death))
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (MD can) (RB not)
                        (VP (VB see))))))))))))
    (. .) ('' '')))

advmod(falling-7, Captain-2)
det(shells-5, the-4)
nsubj(falling-7, shells-5)
aux(falling-7, are-6)
root(ROOT-0, falling-7)
advmod(falling-7, fast-8)
cc(falling-7, And-10)
nsubj(fall-13, faster-11)
advmod(fall-13, still-12)
conj:and(falling-7, fall-13)
dobj(fall-13, we-14)
cc(falling-7, And-16)
nsubj(meet-20, it-17)
nsubj:xsubj(bide-25, it-17)
aux(meet-20, is-18)
neg(meet-20, not-19)
conj:and(falling-7, meet-20)
case(stock-23, for-21)
amod(stock-23, English-22)
nmod:for(meet-20, stock-23)
mark(bide-25, To-24)
xcomp(meet-20, bide-25)
case(heart-28, in-26)
det(heart-28, the-27)
nmod:in(bide-25, heart-28)
case(clock-32, of-29)
det(clock-32, an-30)
amod(clock-32, eight-day-31)
nmod:of(heart-28, clock-32)
det(death-34, The-33)
dobj(bide-25, death-34)
nsubj(see-38, they-35)
aux(see-38, can-36)
neg(see-38, not-37)
acl:relcl(death-34, see-38)

(ROOT
  (S (`` ``)
    (ADVP (RB Lie) (RB down))
    (, ,)
    (S
      (S
        (VP (VB lie)
          (ADVP (RB down))
          (, ,)
          (NP (PRP$ my) (JJ bold) (NN A.B.))))
      (, ,)
      (NP (PRP We))
      (VP (VBZ drift)
        (PP (IN upon)
          (NP (PRP$ her) (NN beam)))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (MD dare) (RB not)
        (VP (VB ram) (, ,)
          (SBAR (IN for)
            (S
              (NP (PRP she))
              (VP (MD can)
                (VP (VB run))))))))
    (: ;)
    (CC And)
    (S
      (S
        (VP (VB dare)
          (S
            (NP (PRP ye))
            (VP (VB fire)
              (NP (DT another) (NN gun))))))
      (, ,)
      (NP (CC And))
      (VP (VBP die)
        (PP (IN in)
          (NP (DT the) (VBG peeling) (NN steam)))))
    (. ?) ('' '')))

advmod(down-3, Lie-2)
advmod(drift-13, down-3)
ccomp(drift-13, lie-5)
advmod(lie-5, down-6)
nmod:poss(A.B.-10, my-8)
amod(A.B.-10, bold-9)
dobj(lie-5, A.B.-10)
nsubj(drift-13, We-12)
root(ROOT-0, drift-13)
case(beam-16, upon-14)
nmod:poss(beam-16, her-15)
nmod:upon(drift-13, beam-16)
nsubj(ram-21, We-18)
aux(ram-21, dare-19)
neg(ram-21, not-20)
conj:and(drift-13, ram-21)
mark(run-26, for-23)
nsubj(run-26, she-24)
aux(run-26, can-25)
advcl(ram-21, run-26)
cc(drift-13, And-28)
ccomp(die-36, dare-29)
nsubj(fire-31, ye-30)
ccomp(dare-29, fire-31)
det(gun-33, another-32)
dobj(fire-31, gun-33)
nsubj(die-36, And-35)
conj:and(drift-13, die-36)
case(steam-40, in-37)
det(steam-40, the-38)
amod(steam-40, peeling-39)
nmod:in(die-36, steam-40)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (PRP$ our) (NN war-ship))
        (SBAR
          (S
            (NP (NNP _) (NNP Clampherdown))
            (VP
              (VP (VBD _)
                (S
                  (S
                    (NP (DT That))
                    (VP (VBD carried)
                      (NP (DT an) (NN armour-belt))))
                  (: ;)
                  (CC But)
                  (FRAG
                    (ADJP
                      (ADJP (RB fifty) (NNS feet))
                      (PP (IN at)
                        (ADJP (JJ stern)))))))
              (CC and)
              (VP (VBP bow)
                (S
                  (NP (NNP Lay))
                  (ADJP (JJ bare)
                    (PP
                      (PP (IN as)
                        (NP
                          (NP (DT the) (NN paunch))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN purser) (POS 's))
                              (NN sow)))))
                      (, ,)
                      (PP (TO To)
                        (NP
                          (NP (DT the) (NN hail))
                          (PP (IN of)
                            (NP (DT the) (NNP _) (NNP Nordenfeldt) (NNP _))))))))))))))
    (. .)))

nsubj(war-ship-4, It-1)
cop(war-ship-4, was-2)
nmod:poss(war-ship-4, our-3)
root(ROOT-0, war-ship-4)
nsubj(carried-9, war-ship-4)
compound(Clampherdown-6, _-5)
nsubj(_-7, Clampherdown-6)
nsubj(bow-19, Clampherdown-6)
acl:relcl(war-ship-4, _-7)
ref(war-ship-4, That-8)
xcomp(_-7, carried-9)
det(armour-belt-11, an-10)
dobj(carried-9, armour-belt-11)
cc(carried-9, But-13)
advmod(feet-15, fifty-14)
xcomp(_-7, feet-15)
conj:but(carried-9, feet-15)
case(stern-17, at-16)
advcl(feet-15, stern-17)
cc(_-7, and-18)
acl:relcl(war-ship-4, bow-19)
conj:and(_-7, bow-19)
nsubj(bare-21, Lay-20)
xcomp(bow-19, bare-21)
case(paunch-24, as-22)
det(paunch-24, the-23)
advcl(bare-21, paunch-24)
case(sow-29, of-25)
det(purser-27, the-26)
nmod:poss(sow-29, purser-27)
case(purser-27, 's-28)
nmod:of(paunch-24, sow-29)
case(hail-33, To-31)
det(hail-33, the-32)
nmod:to(paunch-24, hail-33)
case(_-38, of-34)
det(_-38, the-35)
compound(_-38, _-36)
compound(_-38, Nordenfeldt-37)
nmod:of(hail-33, _-38)

(ROOT
  (S (`` ``)
    (ADVP (RB Captain))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VB hack)
        (NP (PRP us))
        (ADVP (IN through)
          (CC and)
          (IN through))))
    (: ;)
    (S
      (NP (DT The) (JJ chilled) (NN steel) (NNS bolts))
      (VP (VBP are)
        (ADJP (JJ swift))))
    (. !)))

advmod(hack-5, Captain-2)
nsubj(hack-5, they-4)
root(ROOT-0, hack-5)
dobj(hack-5, us-6)
case(and-8, through-7)
advmod(hack-5, and-8)
case(and-8, through-9)
det(bolts-14, The-11)
amod(bolts-14, chilled-12)
compound(bolts-14, steel-13)
nsubj(swift-16, bolts-14)
cop(swift-16, are-15)
parataxis(hack-5, swift-16)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (VP (VBN emptied)
        (NP (DT the) (NNS bunkers))
        (PP (IN in)
          (NP
            (NP (JJ open) (NN sea))
            (, ,)
            (NP
              (NP (PRP$ Their) (JJ shrapnel) (NNS bursts))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP$ our) (NN coal))
                  (VP (MD should)
                    (VP (VB be))))))))))
    (. .) ('' '')))

nsubj(emptied-3, We-1)
aux(emptied-3, have-2)
root(ROOT-0, emptied-3)
det(bunkers-5, the-4)
dobj(emptied-3, bunkers-5)
case(sea-8, in-6)
amod(sea-8, open-7)
nmod:in(emptied-3, sea-8)
nmod:poss(bursts-12, Their-10)
amod(bursts-12, shrapnel-11)
appos(sea-8, bursts-12)
advmod(be-17, where-13)
nmod:poss(coal-15, our-14)
nsubj(be-17, coal-15)
aux(be-17, should-16)
acl:relcl(bursts-12, be-17)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD answered) (, ,)
      (S (`` ``)
        (NP
          (S
            (VP (NNP Let)
              (NP (PRP$ her) (NN drift)))))))
    (. .) ('' '')))

cc(answered-3, And-1)
nsubj(answered-3, he-2)
root(ROOT-0, answered-3)
dep(drift-8, Let-6)
nmod:poss(drift-8, her-7)
xcomp(answered-3, drift-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (PRP$ our) (JJ war-ship) (NNP _) (NNP Clampherdown) (NN _))
        (, ,)
        (S
          (VP (VBG Swung)
            (NP (NN round))
            (PP (IN upon)
              (NP
                (NP (DT the) (NN tide))
                (, ,)
                (NP
                  (NP (PRP$ Her) (CD two) (JJ dumb) (NNS guns))
                  (VP (VBN glared)
                    (ADVP (RB south)
                      (CC and)
                      (RB north))))))))))
    (, ,)
    (CC And)
    (S
      (S
        (NP
          (NP (DT the) (NN blood))
          (CC and)
          (NP (DT the) (JJ bubbling) (NN steam)))
        (VP (VBD ran)
          (ADVP (RB forth))))
      (, ,)
      (CC And)
      (S
        (NP (PRP she))
        (VP (VBD ground)
          (NP
            (NP (DT the) (NN cruiser) (POS 's))
            (NN side)))))
    (. .)))

nsubj(_-7, It-1)
cop(_-7, was-2)
nmod:poss(_-7, our-3)
amod(_-7, war-ship-4)
compound(_-7, _-5)
compound(_-7, Clampherdown-6)
root(ROOT-0, _-7)
advcl(_-7, Swung-9)
dobj(Swung-9, round-10)
case(tide-13, upon-11)
det(tide-13, the-12)
nmod:upon(Swung-9, tide-13)
nmod:poss(guns-18, Her-15)
nummod(guns-18, two-16)
amod(guns-18, dumb-17)
appos(tide-13, guns-18)
acl(guns-18, glared-19)
advmod(glared-19, south-20)
cc(south-20, and-21)
advmod(glared-19, north-22)
conj:and(south-20, north-22)
cc(_-7, And-24)
det(blood-26, the-25)
nsubj(ran-31, blood-26)
cc(blood-26, and-27)
det(steam-30, the-28)
amod(steam-30, bubbling-29)
conj:and(blood-26, steam-30)
nsubj(ran-31, steam-30)
conj:and(_-7, ran-31)
advmod(ran-31, forth-32)
cc(ran-31, And-34)
nsubj(ground-36, she-35)
conj:and(_-7, ground-36)
conj:and(ran-31, ground-36)
det(cruiser-38, the-37)
nmod:poss(side-40, cruiser-38)
case(cruiser-38, 's-39)
dobj(ground-36, side-40)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Captain))
      (, ,)
      (NP (PRP they))
      (VP (VB cry)))
    (PRN (, ,)
      (S
        (NP (DT the) (NN fight))
        (VP (VBZ is)
          (VP (VBN done))))
      (, ,))
    (S
      (NP (PRP They))
      (VP (VBD bid)
        (S
          (NP (PRP you))
          (VP (VB send)
            (NP (PRP$ your) (NN sword))))))
    (. .) ('' '')))

advmod(cry-5, Captain-2)
nsubj(cry-5, they-4)
root(ROOT-0, cry-5)
det(fight-8, the-7)
nsubjpass(done-10, fight-8)
auxpass(done-10, is-9)
dep(cry-5, done-10)
nsubj(bid-13, They-12)
parataxis(cry-5, bid-13)
nsubj(send-15, you-14)
ccomp(bid-13, send-15)
nmod:poss(sword-17, your-16)
dobj(send-15, sword-17)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD answered) (, ,) (`` ``)
      (S
        (S
          (VP (VB Grapple)
            (S
              (NP (PRP her))
              (ADJP (JJ stern)))))
        (CC and)
        (S
          (VP (VB bow)))))
    (. .)))

cc(answered-3, And-1)
nsubj(answered-3, he-2)
root(ROOT-0, answered-3)
xcomp(answered-3, Grapple-6)
nsubj(stern-8, her-7)
xcomp(Grapple-6, stern-8)
cc(Grapple-6, and-9)
xcomp(answered-3, bow-10)
conj:and(Grapple-6, bow-10)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP have)
      (VP (VBN asked)
        (PP (IN for)
          (NP (DT the) (NN steel)))))
    (. .)))

nsubj(asked-3, They-1)
aux(asked-3, have-2)
root(ROOT-0, asked-3)
case(steel-6, for-4)
det(steel-6, the-5)
nmod:for(asked-3, steel-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD shall)
      (VP (VB have)
        (NP
          (NP (PRP it))
          (ADVP (RB now))
          (: ;)
          (NP (IN Out) (NNS cutlasses))
          (CC and)
          (NP (NN board)))))
    (. !) ('' '')))

nsubj(have-3, They-1)
aux(have-3, shall-2)
root(ROOT-0, have-3)
dobj(have-3, it-4)
advmod(it-4, now-5)
amod(cutlasses-8, Out-7)
dobj(have-3, cutlasses-8)
conj:and(it-4, cutlasses-8)
cc(it-4, and-9)
dobj(have-3, board-10)
conj:and(it-4, board-10)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP
          (NP (PRP$ our) (JJ war-ship) (NNP _) (NNP Clampherdown) (NNP _) (NNP Spewed))
          (PP (IN up)
            (NP
              (QP (CD four) (CD hundred))
              (NNS men))))))
    (: ;)
    (CC And)
    (S
      (NP (DT the) (JJ scalded) (JJ stokers) (JJ yelped) (NN delight))
      (, ,)
      (SBAR (IN As)
        (S
          (NP (PRP they))
          (VP
            (VP (VBD rolled)
              (PP (IN in)
                (NP (DT the) (NN waist))))
            (CC and)
            (VP (VBD heard)
              (NP (DT the) (NN fight))))))
      (NP (NNP Stamp))
      (VP (VBP o'er)
        (NP (PRP$ their) (JJ steel-walled) (NN pen))))
    (. .)))

nsubj(Spewed-8, It-1)
cop(Spewed-8, was-2)
nmod:poss(Spewed-8, our-3)
amod(Spewed-8, war-ship-4)
compound(Spewed-8, _-5)
compound(Spewed-8, Clampherdown-6)
compound(Spewed-8, _-7)
root(ROOT-0, Spewed-8)
case(men-12, up-9)
compound(hundred-11, four-10)
nummod(men-12, hundred-11)
nmod:up(Spewed-8, men-12)
cc(Spewed-8, And-14)
det(delight-19, the-15)
amod(delight-19, scalded-16)
amod(delight-19, stokers-17)
amod(delight-19, yelped-18)
nsubj(o'er-32, delight-19)
mark(rolled-23, As-21)
nsubj(rolled-23, they-22)
nsubj(heard-28, they-22)
advcl(o'er-32, rolled-23)
case(waist-26, in-24)
det(waist-26, the-25)
nmod:in(rolled-23, waist-26)
cc(rolled-23, and-27)
conj:and(rolled-23, heard-28)
advcl(o'er-32, heard-28)
det(fight-30, the-29)
dobj(heard-28, fight-30)
nsubj(o'er-32, Stamp-31)
conj:and(Spewed-8, o'er-32)
nmod:poss(pen-35, their-33)
amod(pen-35, steel-walled-34)
dobj(o'er-32, pen-35)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD cleared)
      (NP (DT the) (NN cruiser) (NN end))
      (PP (TO to)
        (NP (NN end)))
      (, ,)
      (PP (IN From)
        (NP (NN conning-tower)
          (S
            (VP (TO to)
              (VP (VB hold)))))))
    (. .)))

nsubj(cleared-2, They-1)
root(ROOT-0, cleared-2)
det(end-5, the-3)
compound(end-5, cruiser-4)
dobj(cleared-2, end-5)
case(end-7, to-6)
nmod:to(cleared-2, end-7)
case(conning-tower-10, From-9)
nmod:from(cleared-2, conning-tower-10)
mark(hold-12, to-11)
acl(conning-tower-10, hold-12)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD fought)
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP (VBD fought)
              (PP (IN in)
                (NP
                  (NP (NNP Nelson) (POS 's))
                  (NN fleet))))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (VBD were)
        (VP (VBN stripped)
          (PP (TO to)
            (NP (DT the) (NN waist)))))
      (PRN (, ,)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (ADJP (JJ bare)
              (PP (TO to)
                (NP (DT the) (NNS feet))))))
        (, ,))
      (SBAR (IN As)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (PP (IN in)
              (NP
                (NP (DT the) (NNS days))
                (PP (IN of)
                  (ADJP (JJ old)))))))))
    (. .)))

nsubj(fought-2, They-1)
root(ROOT-0, fought-2)
mark(fought-5, as-3)
nsubj(fought-5, they-4)
advcl(fought-2, fought-5)
case(fleet-9, in-6)
nmod:poss(fleet-9, Nelson-7)
case(Nelson-7, 's-8)
nmod:in(fought-5, fleet-9)
nsubjpass(stripped-13, They-11)
auxpass(stripped-13, were-12)
parataxis(fought-2, stripped-13)
case(waist-16, to-14)
det(waist-16, the-15)
nmod:to(stripped-13, waist-16)
nsubj(bare-20, they-18)
cop(bare-20, were-19)
parataxis(stripped-13, bare-20)
case(feet-23, to-21)
det(feet-23, the-22)
nmod:to(bare-20, feet-23)
mark(days-30, As-25)
nsubj(days-30, it-26)
cop(days-30, was-27)
case(days-30, in-28)
det(days-30, the-29)
dep(stripped-13, days-30)
case(old-32, of-31)
acl(days-30, old-32)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT the) (VBG sinking) (JJ _) (NNP Clampherdown) (NNP _) (NNP Heaved))
        (PP (IN up)
          (NP (PRP$ her) (JJ battered) (NN side)))))
    (: --)
    (CC And)
    (SINV
      (VP (VBD carried)
        (NP
          (QP (DT a) (CD million))
          (NNS pounds))
        (PP (IN in)))
      (NP
        (NP (NN steel))
        (, ,)
        (UCP
          (PP (TO To)
            (NP
              (NP (DT the) (NN cod))
              (CC and)
              (NP (DT the) (JJ corpse-fed) (NN conger-eel))))
          (, ,)
          (CC And)
          (NP
            (NP (DT the) (NN scour))
            (PP (IN of)
              (NP (DT the) (NNP Channel) (NN tide)))))))
    (. .)))

nsubj(Heaved-8, It-1)
cop(Heaved-8, was-2)
det(Heaved-8, the-3)
amod(Heaved-8, sinking-4)
amod(Heaved-8, _-5)
compound(Heaved-8, Clampherdown-6)
compound(Heaved-8, _-7)
root(ROOT-0, Heaved-8)
case(side-12, up-9)
nmod:poss(side-12, her-10)
amod(side-12, battered-11)
nmod:up(Heaved-8, side-12)
cc(Heaved-8, And-14)
conj:and(Heaved-8, carried-15)
advmod(million-17, a-16)
nummod(pounds-18, million-17)
dobj(carried-15, pounds-18)
nmod(carried-15, in-19)
nsubj(carried-15, steel-20)
case(cod-24, To-22)
det(cod-24, the-23)
nmod:to(steel-20, cod-24)
cc(cod-24, and-25)
det(conger-eel-28, the-26)
amod(conger-eel-28, corpse-fed-27)
nmod:to(steel-20, conger-eel-28)
conj:and(cod-24, conger-eel-28)
cc(cod-24, And-30)
det(scour-32, the-31)
nmod:to(steel-20, scour-32)
conj:and(cod-24, scour-32)
case(tide-36, of-33)
det(tide-36, the-34)
compound(tide-36, Channel-35)
nmod:of(scour-32, tide-36)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN crew))
        (PP (IN of)
          (NP (DT the) (NNP _) (NNP Clampherdown) (NNP _) (NNP Stood)))
        (ADVP (IN out)
          (PP (TO to)
            (NP (NN sweep))))
        (NP (DT the) (NN sea)))
      (, ,)
      (PP (IN On)
        (NP
          (NP (DT a) (NN cruiser))
          (VP (VBN won)
            (PP (IN from)
              (NP (DT an) (JJ ancient) (NN foe))))))
      (, ,)
      (SBAR
        (SBAR (IN As)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS days))
                  (PP (IN of)
                    (ADVP (RB long) (RB ago))))))))
        (, ,)
        (CC And)
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (ADVP (RB still))
            (VP (MD shall)
              (VP (VB be)))))))
    (. .)))

nsubj(crew-4, It-1)
cop(crew-4, was-2)
det(crew-4, the-3)
root(ROOT-0, crew-4)
case(Stood-10, of-5)
det(Stood-10, the-6)
compound(Stood-10, _-7)
compound(Stood-10, Clampherdown-8)
compound(Stood-10, _-9)
nmod:of(crew-4, Stood-10)
advmod(crew-4, out-11)
case(sweep-13, to-12)
nmod:to(out-11, sweep-13)
det(sea-15, the-14)
dep(crew-4, sea-15)
case(cruiser-19, On-17)
det(cruiser-19, a-18)
nmod:on(crew-4, cruiser-19)
acl(cruiser-19, won-20)
case(foe-24, from-21)
det(foe-24, an-22)
amod(foe-24, ancient-23)
nmod:from(won-20, foe-24)
mark(days-31, As-26)
nsubj(days-31, it-27)
cop(days-31, was-28)
case(days-31, in-29)
det(days-31, the-30)
advcl(crew-4, days-31)
case(ago-34, of-32)
advmod(ago-34, long-33)
acl(days-31, ago-34)
cc(days-31, And-36)
mark(be-41, as-37)
nsubj(be-41, it-38)
advmod(be-41, still-39)
aux(be-41, shall-40)
advcl(crew-4, be-41)
conj:and(days-31, be-41)

(ROOT
  (S
    (NP
      (NP (DT THE) (NN BALLAD))
      (PP (IN OF)
        (NP
          (NP (DT THE) (`` ``) (NN BOLIVAR) ('' ''))
          (NP
            (NP (CD Seven) (NNS men))
            (PP (IN from)
              (NP
                (NP
                  (NP (PDT all) (DT the) (NN world))
                  (PRN (, ,)
                    (ADVP (RB back)
                      (PP (TO to)
                        (NP (NNP Docks))))
                    (ADVP (RB again))
                    (, ,)))
                (VP (VBG Rolling)
                  (PRT (RP down))
                  (NP (DT the) (NNP Ratcliffe) (NNP Road))
                  (UCP
                    (ADJP (JJ drunk))
                    (CC and)
                    (VP (VBG raising)
                      (NP (NNP Cain))))))))
          (: :))))
    (VP
      (VP (VB Give)
        (NP (DT the) (NNS girls))
        (NP
          (NP (DT another) (NN drink))
          (`` `)
          (NP
            (NP (NN fore))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VB sign)
                  (PRT (RP away))))))))
      (: --)
      (NP
        (NP (PRP We))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD took)
              (NP (DT the) (NNP _) (NNP Bolivar) (NNP _))
              (PRT (RP out))
              (PP (IN across)
                (NP (DT the) (NNP Bay))))))))
    (. !)))

det(BALLAD-2, THE-1)
nsubj(Give-30, BALLAD-2)
case(BOLIVAR-6, OF-3)
det(BOLIVAR-6, THE-4)
nmod:of(BALLAD-2, BOLIVAR-6)
nummod(men-9, Seven-8)
dep(BOLIVAR-6, men-9)
case(world-13, from-10)
det:predet(world-13, all-11)
det(world-13, the-12)
nmod:from(men-9, world-13)
dep(world-13, back-15)
case(Docks-17, to-16)
nmod:to(back-15, Docks-17)
dep(back-15, again-18)
acl(world-13, Rolling-20)
compound:prt(Rolling-20, down-21)
det(Road-24, the-22)
compound(Road-24, Ratcliffe-23)
dobj(Rolling-20, Road-24)
xcomp(Rolling-20, drunk-25)
cc(drunk-25, and-26)
xcomp(Rolling-20, raising-27)
conj:and(drunk-25, raising-27)
dobj(raising-27, Cain-28)
root(ROOT-0, Give-30)
det(girls-32, the-31)
iobj(Give-30, girls-32)
det(drink-34, another-33)
dobj(Give-30, drink-34)
dep(drink-34, fore-36)
nsubj(sign-38, we-37)
acl:relcl(fore-36, sign-38)
compound:prt(sign-38, away-39)
dobj(Give-30, We-41)
nsubj(took-43, We-41)
ref(We-41, that-42)
acl:relcl(We-41, took-43)
det(_-47, the-44)
compound(_-47, _-45)
compound(_-47, Bolivar-46)
dobj(took-43, _-47)
compound:prt(took-43, out-48)
case(Bay-51, across-49)
det(Bay-51, the-50)
nmod:across(took-43, Bay-51)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD put)
        (PRT (RP out))
        (PP (IN from)
          (NP
            (NP (NNP Sunderland))
            (VP (VBN loaded)
              (PRT (RP down))
              (PP (IN with)
                (NP (NNS rails))))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBD put)
        (PRT (RP back))
        (S
          (VP (TO to)
            (VP (VB Sunderland)
              (NP
                (NP (NN 'cause))
                (SBAR
                  (S
                    (NP (PRP$ our) (NN cargo))
                    (VP (VBD shifted))))))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBD put)
        (PRT (RP out))
        (PP (IN from)
          (NP
            (NP
              (NP (NNP Sunderland))
              (PRN (: --)
                (VP (VBN met)
                  (NP (DT the) (NN winter) (NNS gales)))
                (: --)))
            (NP (CD Seven) (NNS days))))))
    (CC and)
    (S
      (NP
        (NP (CD seven) (NNS nights))
        (PP (TO to)
          (NP (DT the) (NNP Start))))
      (NP (PRP we))
      (VP (VBD drifted)))
    (. .)))

nsubj(put-2, We-1)
root(ROOT-0, put-2)
compound:prt(put-2, out-3)
case(Sunderland-5, from-4)
nmod:from(put-2, Sunderland-5)
acl(Sunderland-5, loaded-6)
compound:prt(loaded-6, down-7)
case(rails-9, with-8)
nmod:with(loaded-6, rails-9)
nsubj(put-12, We-11)
nsubj:xsubj(Sunderland-15, We-11)
conj:and(put-2, put-12)
compound:prt(put-12, back-13)
mark(Sunderland-15, to-14)
xcomp(put-12, Sunderland-15)
dobj(Sunderland-15, 'cause-16)
nmod:poss(cargo-18, our-17)
nsubj(shifted-19, cargo-18)
acl:relcl('cause-16, shifted-19)
nsubj(put-22, We-21)
conj:and(put-2, put-22)
compound:prt(put-22, out-23)
case(Sunderland-25, from-24)
nmod:from(put-22, Sunderland-25)
dep(Sunderland-25, met-27)
det(gales-30, the-28)
compound(gales-30, winter-29)
dobj(met-27, gales-30)
nummod(days-33, Seven-32)
dep(Sunderland-25, days-33)
cc(put-2, and-34)
nummod(nights-36, seven-35)
nsubj(drifted-41, nights-36)
case(Start-39, to-37)
det(Start-39, the-38)
nmod:to(nights-36, Start-39)
nsubj(drifted-41, we-40)
conj:and(put-2, drifted-41)

(ROOT
  (S
    (S
      (VP (VBG Racketing)
        (NP
          (NP (PRP$ her) (NNS rivets))
          (UCP
            (ADJP (JJ loose) (, ,) (JJ smoke-stack) (JJ white))))
        (PP (IN as)
          (NP (NN snow)))))
    (, ,)
    (NP
      (NP
        (NP (PDT All) (DT the) (NNS coals))
        (NP (JJ adrift) (NN adeck))
        (, ,)
        (ADVP
          (NP (PDT half) (DT the) (NN rails))
          (IN below)))
      (, ,)
      (NP
        (NP (NNP Leaking))
        (PP (IN like)
          (NP (DT a) (NN lobster-pot))))
      (, ,)
      (NP
        (NP (NN steering))
        (PP (IN like)
          (NP (DT a) (NN dray))))
      (: --))
    (PP (IN Out)
      (NP (PRP we)))
    (VP (VBD took)
      (NP (DT the) (NNP _) (NNP Bolivar) (NNP _))
      (, ,)
      (ADVP (IN out)
        (PP (IN across)
          (NP (DT the) (NNP Bay)))))
    (. !)))

advcl(took-34, Racketing-1)
nmod:poss(rivets-3, her-2)
dobj(Racketing-1, rivets-3)
amod(white-7, loose-4)
amod(white-7, smoke-stack-6)
amod(rivets-3, white-7)
case(snow-9, as-8)
nmod:as(Racketing-1, snow-9)
det:predet(coals-13, All-11)
det(coals-13, the-12)
nsubj(took-34, coals-13)
amod(adeck-15, adrift-14)
dep(coals-13, adeck-15)
det:predet(rails-19, half-17)
det(rails-19, the-18)
advmod(coals-13, rails-19)
case(rails-19, below-20)
appos(coals-13, Leaking-22)
case(lobster-pot-25, like-23)
det(lobster-pot-25, a-24)
nmod:like(Leaking-22, lobster-pot-25)
appos(coals-13, steering-27)
case(dray-30, like-28)
det(dray-30, a-29)
nmod:like(steering-27, dray-30)
case(we-33, Out-32)
nmod:out(took-34, we-33)
root(ROOT-0, took-34)
det(_-38, the-35)
compound(_-38, _-36)
compound(_-38, Bolivar-37)
dobj(took-34, _-38)
advmod(took-34, out-40)
case(Bay-43, across-41)
det(Bay-43, the-42)
nmod:across(out-40, Bay-43)

(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN by)
        (NP
          (NP (CD one))
          (SBAR
            (S
              (NP (DT the) (NNS Lights))
              (VP
                (VP (VBD came)
                  (PRT (RP up)))
                (, ,)
                (VP (VBD winked)
                  (CC and)
                  (VBD let)
                  (NP (PRP us))
                  (PP (IN by)
                    (NP
                      (NP (: ;)
                        (NP (NNP Mile))
                        (PP (IN by)
                          (NP
                            (NP (NN mile))
                            (SBAR
                              (S
                                (NP (PRP we))
                                (VP (VBD waddled)
                                  (PRT (RP on))))))))
                      (, ,)
                      (NP (NN coal)))))
                (CC and)
                (VP (VBP fo)
                  (S
                    (NP (`` `) (NN c) (`` `) (NN sle))
                    (ADJP (JJ short))))
                (: ;)
                (VP (NNP Met)
                  (NP (DT a) (NN blow)))
                (SBAR (IN that)
                  (S
                    (VP (VBD laid)
                      (NP (PRP us))
                      (PRT (RP down))))))))))
      (, ,)
      (VP (VBN heard)
        (NP (DT a) (JJ bulkhead) (NN fly)))
      (: ;))
    (VP (VBD Left)
      (NP (DT the) (NNP _) (NNP Wolf) (NNP _))
      (PP (IN behind)
        (NP (PRP us)))
      (PP (IN with)
        (NP
          (NP (DT a)
            (ADJP (JJ two-foot))
            (NN list))
          (PP (TO to)
            (NP (NN port))))))
    (. .)))

nsubj(Left-44, One-1)
case(one-3, by-2)
nmod:by(One-1, one-3)
mark(laid-35, one-3)
det(Lights-5, the-4)
nsubj(came-6, Lights-5)
nsubj(winked-9, Lights-5)
nsubj(fo-24, Lights-5)
acl:relcl(one-3, came-6)
compound:prt(came-6, up-7)
acl:relcl(one-3, winked-9)
conj:and(came-6, winked-9)
cc(winked-9, and-10)
conj:and(came-6, let-11)
conj:and(winked-9, let-11)
dobj(winked-9, us-12)
case(Mile-15, by-13)
nmod:by(winked-9, Mile-15)
case(mile-17, by-16)
nmod:by(Mile-15, mile-17)
nsubj(waddled-19, we-18)
acl:relcl(mile-17, waddled-19)
compound:prt(waddled-19, on-20)
appos(Mile-15, coal-22)
cc(came-6, and-23)
acl:relcl(one-3, fo-24)
conj:and(came-6, fo-24)
compound(sle-28, c-26)
nsubj(short-29, sle-28)
xcomp(fo-24, short-29)
dep(blow-33, Met-31)
det(blow-33, a-32)
acl:relcl(one-3, blow-33)
conj:and(came-6, blow-33)
ref(one-3, that-34)
ccomp(came-6, laid-35)
dobj(laid-35, us-36)
compound:prt(laid-35, down-37)
acl(One-1, heard-39)
det(fly-42, a-40)
amod(fly-42, bulkhead-41)
dobj(heard-39, fly-42)
root(ROOT-0, Left-44)
det(_-48, the-45)
compound(_-48, _-46)
compound(_-48, Wolf-47)
dobj(Left-44, _-48)
case(us-50, behind-49)
nmod:behind(Left-44, us-50)
case(list-54, with-51)
det(list-54, a-52)
amod(list-54, two-foot-53)
nmod:with(Left-44, list-54)
case(port-56, to-55)
nmod:to(list-54, port-56)

(ROOT
  (S
    (S
      (S
        (VP (VBG Trailing)
          (PP (IN like)
            (NP (DT a) (VBN wounded) (NN duck)))))
      (, ,)
      (S
        (VP (VBG working)
          (PRT (RP out))
          (NP (PRP$ her) (NN soul)))))
    (: ;)
    (S
      (NP (NNP Clanging))
      (VP (VBP like)
        (NP (DT a) (NN smithy-shop))
        (PP (IN after)
          (NP (DT every) (NN roll)))))
    (: ;)
    (S
      (NP (RB Just)
        (NP (DT a) (NN funnel))
        (CC and)
        (NP (DT a) (NN mast)))
      (VP (VBZ lurching)
        (PP (IN through)
          (NP (DT the) (NN spray)))))
    (: --)
    (CC So)
    (S
      (NP (PRP we))
      (VP (VBD threshed)
        (NP (DT the) (NNP _) (NNP Bolivar) (NNP _))
        (PRT (RP out))
        (PP (IN across)
          (NP (DT the) (NNP Bay)))))
    (. !)))

root(ROOT-0, Trailing-1)
case(duck-5, like-2)
det(duck-5, a-3)
amod(duck-5, wounded-4)
nmod:like(Trailing-1, duck-5)
parataxis(Trailing-1, working-7)
compound:prt(working-7, out-8)
nmod:poss(soul-10, her-9)
dobj(working-7, soul-10)
nsubj(like-13, Clanging-12)
conj:so(Trailing-1, like-13)
det(smithy-shop-15, a-14)
dobj(like-13, smithy-shop-15)
case(roll-18, after-16)
det(roll-18, every-17)
nmod:after(like-13, roll-18)
advmod(funnel-22, Just-20)
det(funnel-22, a-21)
nsubj(lurching-26, funnel-22)
cc(funnel-22, and-23)
det(mast-25, a-24)
conj:and(funnel-22, mast-25)
nsubj(lurching-26, mast-25)
conj:so(Trailing-1, lurching-26)
case(spray-29, through-27)
det(spray-29, the-28)
nmod:through(lurching-26, spray-29)
cc(Trailing-1, So-31)
nsubj(threshed-33, we-32)
conj:so(Trailing-1, threshed-33)
det(_-37, the-34)
compound(_-37, _-35)
compound(_-37, Bolivar-36)
dobj(threshed-33, _-37)
compound:prt(threshed-33, out-38)
case(Bay-41, across-39)
det(Bay-41, the-40)
nmod:across(threshed-33, Bay-41)

(ROOT
  (S
    (S (`` `)
      (S
        (VP
          (VP (VB Felt)
            (NP (PRP$ her) (NN hog)))
          (CC and)
          (VP (VBD felt)
            (NP (PRP$ her) (NN sag)))))
      (, ,)
      (VP (VBD betted)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP she))
            (VP (MD 'd)
              (VP (VB break)))))))
    (: ;)
    (S
      (NP (NNP Wondered))
      (NP (DT every) (NN time))
      (NP (PRP she))
      (VP (VBD raced)
        (SBAR
          (S
            (SBAR (IN if)
              (S
                (NP (PRP she))
                (VP (MD 'd)
                  (VP (VB stand)
                    (NP (DT the) (NN shock))))))
            (: ;)
            (S
              (VP (VBN Heard)
                (NP (DT the) (NNS seas))
                (PP (IN like)
                  (NP
                    (NP (NN drunken) (NNS men))
                    (VP (VBN pounding)
                      (PP (IN at)
                        (NP (PRP$ her) (NN strake))))))))
            (: ;)
            (VP (VBP Hoped)
              (S
                (NP (DT the) (NN Lord) (`` `) (NN ud))
                (VP (VB keep)
                  (NP (PRP$ his) (NN thumb))
                  (PP (IN on)
                    (NP (DT the) (NN plummer-block))))))))))
    (. .)))

ccomp(betted-10, Felt-2)
nmod:poss(hog-4, her-3)
dobj(Felt-2, hog-4)
cc(Felt-2, and-5)
conj:and(Felt-2, felt-6)
ccomp(betted-10, felt-6)
nmod:poss(sag-8, her-7)
dobj(felt-6, sag-8)
root(ROOT-0, betted-10)
advmod(break-14, when-11)
nsubj(break-14, she-12)
aux(break-14, 'd-13)
advcl(betted-10, break-14)
nsubj(raced-20, Wondered-16)
det(time-18, every-17)
nsubj(raced-20, time-18)
nsubj(raced-20, she-19)
parataxis(betted-10, raced-20)
mark(stand-24, if-21)
nsubj(stand-24, she-22)
aux(stand-24, 'd-23)
advcl(Hoped-39, stand-24)
det(shock-26, the-25)
dobj(stand-24, shock-26)
csubj(Hoped-39, Heard-28)
det(seas-30, the-29)
dobj(Heard-28, seas-30)
case(men-33, like-31)
compound(men-33, drunken-32)
nmod:like(Heard-28, men-33)
acl(men-33, pounding-34)
case(strake-37, at-35)
nmod:poss(strake-37, her-36)
nmod:at(pounding-34, strake-37)
ccomp(raced-20, Hoped-39)
det(ud-43, the-40)
compound(ud-43, Lord-41)
nsubj(keep-44, ud-43)
ccomp(Hoped-39, keep-44)
nmod:poss(thumb-46, his-45)
dobj(keep-44, thumb-46)
case(plummer-block-49, on-47)
det(plummer-block-49, the-48)
nmod:on(keep-44, plummer-block-49)

(ROOT
  (S
    (S
      (VP (VBN Banged)
        (PP (IN against)
          (NP (DT the) (NN iron) (NNS decks)))))
    (, ,)
    (NP (NNS bilges))
    (VP (VBD choked)
      (PP (IN with)
        (NP
          (NP (NN coal))
          (: ;)
          (NP
            (NP (NNP Flayed))
            (CC and)
            (NP (VBN frozen) (NN foot)
              (CC and)
              (NN hand)))))
      (, ,)
      (S
        (NP
          (NP
            (NP (JJ sick))
            (PP (IN of)
              (NP (NN heart)
                (CC and)
                (NN soul))))
          (PRN (: ;)
            (NP
              (NP (JJ Last))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBD prayed)
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (MD 'd)
                          (VP (VB buck)
                            (NP (PRP herself))
                            (PP (IN into)
                              (NP (NN judgment) (NN Day)))))))))))
            (: --))
          (NP (NNP Hi)))))
    (. !)))

advcl(choked-8, Banged-1)
case(decks-5, against-2)
det(decks-5, the-3)
compound(decks-5, iron-4)
nmod:against(Banged-1, decks-5)
nsubj(choked-8, bilges-7)
root(ROOT-0, choked-8)
case(coal-10, with-9)
nmod:with(choked-8, coal-10)
dep(coal-10, Flayed-12)
cc(Flayed-12, and-13)
amod(foot-15, frozen-14)
dep(coal-10, foot-15)
conj:and(Flayed-12, foot-15)
cc(foot-15, and-16)
conj:and(Flayed-12, hand-17)
conj:and(foot-15, hand-17)
xcomp(choked-8, sick-19)
case(heart-21, of-20)
nmod:of(sick-19, heart-21)
cc(heart-21, and-22)
nmod:of(sick-19, soul-23)
conj:and(heart-21, soul-23)
dep(sick-19, Last-25)
nsubj(prayed-27, we-26)
acl:relcl(Last-25, prayed-27)
nsubj(buck-30, she-28)
aux(buck-30, 'd-29)
ccomp(prayed-27, buck-30)
dobj(buck-30, herself-31)
case(Day-34, into-32)
compound(Day-34, judgment-33)
nmod:into(buck-30, Day-34)
dep(sick-19, Hi-36)

(ROOT
  (S
    (NP (PRP we))
    (VP (VBD cursed)
      (NP
        (NP (DT the) (NNP _) (NNP Bolivar) (NNP _))
        (VP (VBG knocking)
          (ADVP (RB round)
            (NP (DT the) (NN Bay))))))
    (. !)))

nsubj(cursed-2, we-1)
root(ROOT-0, cursed-2)
det(_-6, the-3)
compound(_-6, _-4)
compound(_-6, Bolivar-5)
dobj(cursed-2, _-6)
acl(_-6, knocking-7)
advmod(knocking-7, round-8)
det(Bay-10, the-9)
nmod:npmod(round-8, Bay-10)

(ROOT
  (S
    (S
      (S
        (NP (NNP O))
        (VP
          (NP
            (NP
              (NP (PRP$ her) (NN nose))
              (VP (VBG flung)
                (PRT (RP up))
                (PP (TO to)
                  (NP (NN sky)))
                (, ,)
                (S
                  (VP (VBG groaning)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADVP (RB still)))))))))
            (PRN (: --)
              (SBAR
                (UCP
                  (PP (IN Up))
                  (CC and)
                  (ADVP (RB down)
                    (CC and)
                    (RB back)))
                (S
                  (NP (PRP we))
                  (VP (VBD went))))))
          (PRN (, ,)
            (ADVP (RB never))
            (NP
              (NP (NN time))
              (PP (IN for)
                (NP (NN breath)))))))
      (: ;) (RB Then)
      (S
        (NP
          (NP (DT the) (NN money))
          (VP (VBN paid)
            (PP (IN at)
              (NP (NNP Lloyd) (POS 's)))))
        (VP (VBD caught)
          (NP (PRP her))
          (PP (IN by)
            (NP (DT the) (NN heel))))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NNS stars))
      (VP (VBD ran)
        (NP (NN round)
          (CC and)
          (NN round) (NN dancin) ('' '))
        (PP (IN at)
          (NP (PRP$ our) (NN death)))))
    (. .)))

nsubj(nose-3, O-1)
nmod:poss(nose-3, her-2)
root(ROOT-0, nose-3)
acl(nose-3, flung-4)
compound:prt(flung-4, up-5)
case(sky-7, to-6)
nmod:to(flung-4, sky-7)
advcl(flung-4, groaning-9)
mark(be-11, to-10)
xcomp(groaning-9, be-11)
advmod(be-11, still-12)
dep(went-20, Up-14)
cc(Up-14, and-15)
conj:and(Up-14, down-16)
dep(went-20, down-16)
cc(down-16, and-17)
conj:and(Up-14, back-18)
conj:and(down-16, back-18)
nsubj(went-20, we-19)
dep(nose-3, went-20)
dep(time-23, never-22)
dep(nose-3, time-23)
case(breath-25, for-24)
nmod:for(time-23, breath-25)
advmod(nose-3, Then-27)
det(money-29, the-28)
nsubj(caught-34, money-29)
acl(money-29, paid-30)
case(Lloyd-32, at-31)
nmod:at(paid-30, Lloyd-32)
case(Lloyd-32, 's-33)
dep(nose-3, caught-34)
dobj(caught-34, her-35)
case(heel-38, by-36)
det(heel-38, the-37)
nmod:by(caught-34, heel-38)
cc(nose-3, And-40)
det(stars-42, the-41)
nsubj(ran-43, stars-42)
conj:and(nose-3, ran-43)
compound(dancin-47, round-44)
cc(round-44, and-45)
conj:and(round-44, round-46)
compound(dancin-47, round-46)
dobj(ran-43, dancin-47)
case(death-51, at-49)
nmod:poss(death-51, our-50)
nmod:at(ran-43, death-51)

(ROOT
  (S
    (S
      (S
        (VP (VBG Aching)
          (PP (IN for)
            (NP
              (NP (DT an) (NN hour) (POS 's))
              (NN sleep)))))
      (, ,)
      (S
        (VP (VBG dozing)
          (PRT (RP off))
          (NP
            (NP (IN between))
            (: ;) (`` `)
            (S
              (S
                (VP (VBN Heard)
                  (S
                    (NP (DT the) (JJ rotten) (NNS rivets))
                    (VP (VB draw)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP she))
                          (VP (VBD took)
                            (S
                              (NP (PRP it))
                              (ADJP (JJ green))))))))))
              (: ;)
              (S
                (VP (`` `) (VB Watched)
                  (S
                    (NP (DT the) (NNS compass))
                    (VP (VB chase)
                      (NP (PRP$ its) (NN tail))
                      (PP (IN like)
                        (NP
                          (NP (DT a) (NN cat))
                          (PP (IN at)
                            (NP (NN play))))))))))))))
    (: --)
    (S
      (NP (DT That))
      (VP (VBD was)
        (PP (IN on)
          (NP (DT the) (NNP _) (NNP Bolivar) (NNP _)))
        (, ,)
        (ADVP (RB south)
          (PP (IN across)
            (NP (DT the) (NNP Bay))))))
    (. .)))

root(ROOT-0, Aching-1)
case(sleep-6, for-2)
det(hour-4, an-3)
nmod:poss(sleep-6, hour-4)
case(hour-4, 's-5)
nmod:for(Aching-1, sleep-6)
parataxis(Aching-1, dozing-8)
compound:prt(dozing-8, off-9)
dobj(dozing-8, between-10)
dep(between-10, Heard-13)
det(rivets-16, the-14)
amod(rivets-16, rotten-15)
nsubj(draw-17, rivets-16)
ccomp(Heard-13, draw-17)
advmod(took-20, when-18)
nsubj(took-20, she-19)
advcl(draw-17, took-20)
nsubj(green-22, it-21)
xcomp(took-20, green-22)
parataxis(Heard-13, Watched-25)
det(compass-27, the-26)
nsubj(chase-28, compass-27)
ccomp(Watched-25, chase-28)
nmod:poss(tail-30, its-29)
dobj(chase-28, tail-30)
case(cat-33, like-31)
det(cat-33, a-32)
nmod:like(chase-28, cat-33)
case(play-35, at-34)
nmod:at(cat-33, play-35)
nsubj(_-43, That-37)
cop(_-43, was-38)
case(_-43, on-39)
det(_-43, the-40)
compound(_-43, _-41)
compound(_-43, Bolivar-42)
parataxis(Aching-1, _-43)
advmod(_-43, south-45)
case(Bay-48, across-46)
det(Bay-48, the-47)
nmod:across(south-45, Bay-48)

(ROOT
  (S
    (SBAR (IN Once)
      (S
        (NP (PRP we))
        (VP (VBD saw)
          (PP (IN between)
            (NP (DT the) (NNS squalls))))))
    (, ,)
    (NP
      (NP (NN lyin) (POS '))
      (NN head)
      (S
        (VP (TO to)
          (VP (VB swell)
            (PRN (: --)
              (NP (NNP Mad))
              (PP (IN with)
                (NP
                  (NP (NN work)
                    (CC and)
                    (NN weariness) (, ,) (NN wishin))
                  ('' ')
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBD was)
                        (NP (PRP we)))))))
              (: --))
            (SBAR
              (S
                (NP
                  (NP (DT Some) (NNP damned) (NNP Liner) (POS 's))
                  (NNS lights))
                (VP (VBP go)
                  (PP (IN by)
                    (PP (IN like)
                      (NP
                        (NP (DT a) (JJ long) (NN hotel))
                        (: ;)))))))))))
    (VP (VBD Cheered)
      (NP (PRP her))
      (PP (IN from)
        (NP
          (NP (DT the) (NNP _) (NNP Bolivar) (NNP _) (NN swampin))
          ('' ')
          (PP (IN in)
            (NP (DT the) (NN sea))))))
    (. .)))

mark(saw-3, Once-1)
nsubj(saw-3, we-2)
advcl(Cheered-38, saw-3)
case(squalls-6, between-4)
det(squalls-6, the-5)
nmod:between(saw-3, squalls-6)
nmod:poss(head-10, lyin-8)
case(lyin-8, '-9)
nsubj(Cheered-38, head-10)
mark(swell-12, to-11)
acl(head-10, swell-12)
dep(swell-12, Mad-14)
case(wishin-20, with-15)
compound(wishin-20, work-16)
cc(work-16, and-17)
conj:and(work-16, weariness-18)
compound(wishin-20, weariness-18)
nmod:with(Mad-14, wishin-20)
nsubj(we-24, they-22)
cop(we-24, was-23)
acl:relcl(wishin-20, we-24)
det(Liner-28, Some-26)
compound(Liner-28, damned-27)
nmod:poss(lights-30, Liner-28)
case(Liner-28, 's-29)
nsubj(go-31, lights-30)
ccomp(swell-12, go-31)
case(hotel-36, by-32)
case(hotel-36, like-33)
det(hotel-36, a-34)
amod(hotel-36, long-35)
nmod:like(go-31, hotel-36)
root(ROOT-0, Cheered-38)
dobj(Cheered-38, her-39)
case(swampin-45, from-40)
det(swampin-45, the-41)
compound(swampin-45, _-42)
compound(swampin-45, Bolivar-43)
compound(swampin-45, _-44)
nmod:from(Cheered-38, swampin-45)
case(sea-49, in-47)
det(sea-49, the-48)
nmod:in(swampin-45, sea-49)

(ROOT
  (S (RB Then)
    (S
      (S
        (NP (DT a) (NN grayback))
        (VP (VBD cleared)
          (NP (PRP us))
          (PRT (RP out))))
      (, ,) (RB then)
      (S
        (NP (DT the) (NN skipper))
        (VP (VBD laughed))))
    (: ;) (`` ``)
    (S
      (ADVP (RB Boys))
      (, ,)
      (NP (DT the) (NN wheel))
      (VP (VBZ has)
        (VP (VBN gone)
          (PP (TO to)
            (NP
              (NP (NNP Hell))
              (: --)
              (NP
                (NP (NN rig))
                (NP (DT the) (JJ winches) (NN aft))))))))
    (. !)))

advmod(cleared-4, Then-1)
det(grayback-3, a-2)
nsubj(cleared-4, grayback-3)
root(ROOT-0, cleared-4)
dobj(cleared-4, us-5)
compound:prt(cleared-4, out-6)
advmod(laughed-11, then-8)
det(skipper-10, the-9)
nsubj(laughed-11, skipper-10)
parataxis(cleared-4, laughed-11)
advmod(gone-19, Boys-14)
det(wheel-17, the-16)
nsubj(gone-19, wheel-17)
aux(gone-19, has-18)
dep(cleared-4, gone-19)
case(Hell-21, to-20)
nmod:to(gone-19, Hell-21)
dep(Hell-21, rig-23)
det(aft-26, the-24)
amod(aft-26, winches-25)
dep(rig-23, aft-26)

(ROOT
  (S
    (VP (VB Yoke)
      (NP
        (NP (DT the) (JJ kicking) (NN rudder-head))
        (: --)
        (VP (VB get)
          (NP (PRP her))
          (PP (IN under)
            (NP (NN way))))))
    (. !) ('' '')))

root(ROOT-0, Yoke-1)
det(rudder-head-4, the-2)
amod(rudder-head-4, kicking-3)
dobj(Yoke-1, rudder-head-4)
dep(rudder-head-4, get-6)
dobj(get-6, her-7)
case(way-9, under-8)
nmod:under(get-6, way-9)

(ROOT
  (S (IN So)
    (NP (PRP we))
    (VP (VBD steered)
      (NP (PRP her))
      (, ,)
      (ADVP (RB pulley-haul))
      (, ,)
      (PP (RB out) (IN across)
        (NP (DT the) (NNP Bay))))
    (. !)))

dep(steered-3, So-1)
nsubj(steered-3, we-2)
root(ROOT-0, steered-3)
dobj(steered-3, her-4)
advmod(steered-3, pulley-haul-6)
advmod(Bay-11, out-8)
case(Bay-11, across-9)
det(Bay-11, the-10)
nmod:across(steered-3, Bay-11)

(ROOT
  (S
    (SBAR (RB Just)
      (S
        (NP
          (NP (DT a) (NN pack) (NN o) (POS '))
          (JJ rotten) (NNS plates))
        (VP (VBD puttied)
          (PRT (RP up))
          (PP (IN with)
            (NP (NN tar))))))
    (, ,)
    (SBAR (IN In)
      (S
        (NP (PRP we))
        (VP (VBD came) (, ,)
          (S
            (NP
              (NP (DT an))
              ('' ') (NN time) (NN enough))))))
    (, ,)
    (VP (`` `) (VBP cross)
      (NP (NNP Bilbao) (NNP Bar)))
    (. .)))

advmod(puttied-8, Just-1)
det(o-4, a-2)
compound(o-4, pack-3)
nmod:poss(plates-7, o-4)
case(o-4, '-5)
amod(plates-7, rotten-6)
nsubj(puttied-8, plates-7)
dep(cross-23, puttied-8)
compound:prt(puttied-8, up-9)
case(tar-11, with-10)
nmod:with(puttied-8, tar-11)
mark(came-15, In-13)
nsubj(came-15, we-14)
dep(cross-23, came-15)
compound(enough-20, an-17)
compound(enough-20, time-19)
xcomp(came-15, enough-20)
root(ROOT-0, cross-23)
compound(Bar-25, Bilbao-24)
dobj(cross-23, Bar-25)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Overloaded))
        (, ,)
        (VP (VBN undermanned))
        (, ,))
      (VP (VBD meant)
        (PP (TO to)
          (NP (NN founder)))))
    (, ,)
    (NP (PRP we))
    (VP (VBD Euchred)
      (NP
        (NP
          (NP (NNP God) (NNP Almighty) (POS 's))
          (NN storm))
        (, ,)
        (VP (VBN bluffed)
          (NP (DT the) (NNP Eternal) (NNP Sea)))))
    (. !)))

nsubj(meant-5, Overloaded-1)
acl(Overloaded-1, undermanned-3)
ccomp(Euchred-10, meant-5)
case(founder-7, to-6)
nmod:to(meant-5, founder-7)
nsubj(Euchred-10, we-9)
root(ROOT-0, Euchred-10)
compound(Almighty-12, God-11)
nmod:poss(storm-14, Almighty-12)
case(Almighty-12, 's-13)
dobj(Euchred-10, storm-14)
acl(storm-14, bluffed-16)
det(Sea-19, the-17)
compound(Sea-19, Eternal-18)
dobj(bluffed-16, Sea-19)

(ROOT
  (NP
    (NP
      (NP (CD Seven) (NNS men))
      (PP (IN from)
        (NP
          (NP
            (NP (PDT all) (DT the) (NN world))
            (, ,)
            (ADVP (RB back)
              (PP (TO to)
                (NP
                  (NP (NN town))
                  (ADVP (RB again))))))
          (, ,)
          (NP
            (NP (NNP Rollin) (POS '))
            (PP (IN down)
              (NP (DT the) (NNP Ratcliffe) (NNP Road))))))
      (UCP
        (ADJP (JJ drunk))
        (CC and)
        (VP (VBG raising)
          (NP (NNP Cain)))))
    (: :)
    (NP
      (NP (CD Seven) (NNS men))
      (PP (IN from)
        (NP
          (NP (NN out))
          (PP (IN of)
            (NP (NNP Hell))))))
    (. .)))

nummod(men-2, Seven-1)
root(ROOT-0, men-2)
case(world-6, from-3)
det:predet(world-6, all-4)
det(world-6, the-5)
nmod:from(men-2, world-6)
advmod(world-6, back-8)
case(town-10, to-9)
nmod:to(back-8, town-10)
advmod(town-10, again-11)
appos(world-6, Rollin-13)
case(Rollin-13, '-14)
case(Road-18, down-15)
det(Road-18, the-16)
compound(Road-18, Ratcliffe-17)
nmod:down(Rollin-13, Road-18)
amod(men-2, drunk-19)
cc(drunk-19, and-20)
amod(men-2, raising-21)
conj:and(drunk-19, raising-21)
dobj(raising-21, Cain-22)
nummod(men-25, Seven-24)
dep(men-2, men-25)
case(Hell-29, from-26)
case(Hell-29, out-27)
mwe(out-27, of-28)
nmod:out_of(men-25, Hell-29)

(ROOT
  (S
    (S
      (VP (VB Ai) (RB n't)))
    (PRN
      (S
        (NP (DT the) (NNS owners))
        (VP (VBZ gay)))
      (, ,))
    (VP (VBP 'Cause)
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBD took)
            (S
              (NP (DT the) (`` ``) (NNP Bolivar) ('' ''))
              (ADJP (JJ safe)
                (PP (IN across)
                  (NP (DT the) (NNP Bay)))))))))
    (. ?)))

csubj('Cause-7, Ai-1)
neg(Ai-1, n't-2)
det(owners-4, the-3)
nsubj(gay-5, owners-4)
parataxis('Cause-7, gay-5)
root(ROOT-0, 'Cause-7)
nsubj(took-9, we-8)
ccomp('Cause-7, took-9)
det(Bolivar-12, the-10)
nsubj(safe-14, Bolivar-12)
xcomp(took-9, safe-14)
case(Bay-17, across-15)
det(Bay-17, the-16)
nmod:across(safe-14, Bay-17)

(ROOT
  (S
    (S
      (NP
        (NP (DT THE) (NN SACRIFICE))
        (PP (IN OF)
          (NP (NNP ER-HEB))))
      (VP (VBD Er-Heb)
        (PP (IN beyond)
          (NP (DT the)
            (NAC (NNPS Hills)
              (PP (IN of)
                (NP (NNP Ao-Safai) (NNPS Bears))))
            (NN witness)))
        (PP (TO to)
          (NP (DT the) (NN truth)))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Ao-Safai) (NNP Hath))
      (VP (VBD told)
        (NP
          (NP (DT the) (NNS men))
          (PP (IN of)
            (NP (NNP Gorukh))))))
    (. .)))

det(SACRIFICE-2, THE-1)
nsubj(Er-Heb-5, SACRIFICE-2)
case(ER-HEB-4, OF-3)
nmod:of(SACRIFICE-2, ER-HEB-4)
root(ROOT-0, Er-Heb-5)
case(witness-12, beyond-6)
det(witness-12, the-7)
dep(witness-12, Hills-8)
case(Bears-11, of-9)
compound(Bears-11, Ao-Safai-10)
nmod:of(Hills-8, Bears-11)
nmod:beyond(Er-Heb-5, witness-12)
case(truth-15, to-13)
det(truth-15, the-14)
nmod:to(Er-Heb-5, truth-15)
cc(Er-Heb-5, and-17)
compound(Hath-19, Ao-Safai-18)
nsubj(told-20, Hath-19)
conj:and(Er-Heb-5, told-20)
det(men-22, the-21)
dobj(told-20, men-22)
case(Gorukh-24, of-23)
nmod:of(men-22, Gorukh-24)

(ROOT
  (S
    (ADVP (RB Thence))
    (NP (DT the) (NN tale))
    (VP (VBZ Comes)
      (ADVP (RB westward))
      (VP (VB o'er)
        (NP (DT the) (NNS peaks))
        (PP (TO to)
          (NP (NNP India)))))
    (. .)))

advmod(Comes-4, Thence-1)
det(tale-3, the-2)
nsubj(Comes-4, tale-3)
root(ROOT-0, Comes-4)
advmod(Comes-4, westward-5)
dep(Comes-4, o'er-6)
det(peaks-8, the-7)
dobj(o'er-6, peaks-8)
case(India-10, to-9)
nmod:to(o'er-6, India-10)

(ROOT
  (NP
    (NP
      (NP (DT The) (NN story))
      (PP (IN of)
        (NP
          (NP (NNP Bisesa))
          (, ,)
          (NP
            (NP (NNP Armod) (POS 's))
            (NN child))
          (, ,))))
    (: --)
    (NP
      (NP (DT A) (NN maiden))
      (VP (VBN plighted)
        (PP (TO to)
          (NP (DT the) (NNP Chief)))
        (PP (IN in)
          (NP (NNP War)))))
    (, ,)
    (S
      (NP
        (NP (DT The) (NN Man))
        (PP (IN of)
          (NP
            (NP (CD Sixty) (NNS Spears))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD held)
                  (NP
                    (NP (DT the) (NN Pass))
                    (SBAR
                      (S
                        (NP (DT That))
                        (VP
                          (VP (VBZ leads)
                            (PP (TO to)
                              (NP (NNP Thibet))))
                          (, ,)
                          (CC but)
                          (ADVP (RB to-day))
                          (VP (VBZ is)
                            (VP (VBN gone)
                              (S
                                (VP (TO To)
                                  (VP (VB seek)
                                    (NP
                                      (NP (PRP$ his) (NN comfort))
                                      (PP (IN of)
                                        (NP (DT the) (NNP God)))))))))))))))))))
      (VP (VBD called)
        (NP
          (NP (NNP Budh) (NNP The) (NNP Silent))
          (: --)
          (S
            (VP (VBG showing)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (DT the) (NNPS Sickness))
                  (VP (VBD ceased)
                    (NP
                      (NP (NNP Because))
                      (PP (IN of)
                        (NP (PRP her)))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBD died)
                            (S
                              (VP (TO to)
                                (VP (VB save)
                                  (NP (DT the) (NN tribe)))))))))))))))))
    (. .)))

det(story-2, The-1)
root(ROOT-0, story-2)
case(Bisesa-4, of-3)
nmod:of(story-2, Bisesa-4)
nmod:poss(child-8, Armod-6)
case(Armod-6, 's-7)
appos(Bisesa-4, child-8)
det(maiden-12, A-11)
dep(story-2, maiden-12)
acl(maiden-12, plighted-13)
case(Chief-16, to-14)
det(Chief-16, the-15)
nmod:to(plighted-13, Chief-16)
case(War-18, in-17)
nmod:in(plighted-13, War-18)
det(Man-21, The-20)
nsubj(called-46, Man-21)
case(Spears-24, of-22)
nummod(Spears-24, Sixty-23)
nmod:of(Man-21, Spears-24)
nsubj(held-27, Spears-24)
ref(Spears-24, who-26)
acl:relcl(Spears-24, held-27)
det(Pass-29, the-28)
dobj(held-27, Pass-29)
nsubj(leads-31, Pass-29)
nsubjpass(gone-38, Pass-29)
nsubj:xsubj(seek-40, Pass-29)
ref(Pass-29, That-30)
acl:relcl(Pass-29, leads-31)
case(Thibet-33, to-32)
nmod:to(leads-31, Thibet-33)
cc(leads-31, but-35)
advmod(gone-38, to-day-36)
auxpass(gone-38, is-37)
acl:relcl(Pass-29, gone-38)
conj:but(leads-31, gone-38)
mark(seek-40, To-39)
xcomp(gone-38, seek-40)
nmod:poss(comfort-42, his-41)
dobj(seek-40, comfort-42)
case(God-45, of-43)
det(God-45, the-44)
nmod:of(comfort-42, God-45)
dep(story-2, called-46)
compound(Silent-49, Budh-47)
compound(Silent-49, The-48)
dobj(called-46, Silent-49)
parataxis(Silent-49, showing-51)
advmod(ceased-55, how-52)
det(Sickness-54, the-53)
nsubj(ceased-55, Sickness-54)
ccomp(showing-51, ceased-55)
dobj(ceased-55, Because-56)
nsubj(died-60, Because-56)
nsubj:xsubj(save-62, Because-56)
case(her-58, of-57)
nmod:of(Because-56, her-58)
ref(Because-56, who-59)
acl:relcl(Because-56, died-60)
mark(save-62, to-61)
xcomp(died-60, save-62)
det(tribe-64, the-63)
dobj(save-62, tribe-64)

(ROOT
  (S
    (S
      (NP (NNP Taman))
      (VP (VBZ is)
        (UCP
          (NP (CD One))
          (CC and)
          (ADJP (JJR greater)
            (PP (IN than)
              (NP (PRP us)))))))
    (RB all) (, ,)
    (S
      (NP (NNP Taman))
      (VP (VBZ is)
        (NP
          (NP (CD One))
          (CC and)
          (NP
            (QP (JJR greater) (IN than) (DT all))
            (NNS Gods)))))
    (: :)
    (S
      (NP (NNP Taman))
      (VP
        (VP (VBZ is)
          (NP
            (NP (CD Two))
            (PP (IN in)
              (NP (CD One)))))
        (CC and)
        (VP (VBD rides)
          (NP
            (NP (DT the) (NN sky))
            (, ,)
            (NP
              (NP (NNP Curved))
              (PP (IN like)
                (NP
                  (NP (DT a) (NN stallion) (POS 's))
                  (NN croup))))
            (, ,))
          (PP (IN from)
            (NP (NN dusk)))
          (PP (TO to)
            (NP (NN dawn))))))
    (, ,)
    (CC And)
    (S
      (NP (NNS drums))
      (VP (VBD upon)
        (NP (PRP it))
        (PP (IN with)
          (NP (PRP$ his) (NNS heels)))
        (, ,)
        (SBAR
          (WHADVP (WRB whereby))
          (S
            (VP (VBZ Is)
              (VP (VBN bred)
                (NP
                  (NP (DT the) (VBG neighing) (NN thunder))
                  (PP (IN in)
                    (NP (DT the) (NNS hills))))))))))
    (. .)))

nsubj(One-3, Taman-1)
nsubj(greater-5, Taman-1)
cop(One-3, is-2)
root(ROOT-0, One-3)
cc(One-3, and-4)
conj:and(One-3, greater-5)
case(us-7, than-6)
nmod:than(greater-5, us-7)
advmod(One-3, all-8)
nsubj(One-12, Taman-10)
cop(One-12, is-11)
conj:and(One-3, One-12)
cc(One-12, and-13)
advmod(all-16, greater-14)
advmod(all-16, than-15)
nummod(Gods-17, all-16)
conj:and(One-3, Gods-17)
conj:and(One-12, Gods-17)
nsubj(Two-21, Taman-19)
nsubj(rides-25, Taman-19)
cop(Two-21, is-20)
conj:and(One-3, Two-21)
case(One-23, in-22)
nmod:in(Two-21, One-23)
cc(Two-21, and-24)
conj:and(One-3, rides-25)
conj:and(Two-21, rides-25)
det(sky-27, the-26)
dobj(rides-25, sky-27)
appos(sky-27, Curved-29)
case(croup-34, like-30)
det(stallion-32, a-31)
nmod:poss(croup-34, stallion-32)
case(stallion-32, 's-33)
nmod:like(Curved-29, croup-34)
case(dusk-37, from-36)
nmod:from(rides-25, dusk-37)
case(dawn-39, to-38)
nmod:to(rides-25, dawn-39)
cc(One-3, And-41)
nsubj(upon-43, drums-42)
conj:and(One-3, upon-43)
dobj(upon-43, it-44)
case(heels-47, with-45)
nmod:poss(heels-47, his-46)
nmod:with(upon-43, heels-47)
advmod(bred-51, whereby-49)
auxpass(bred-51, Is-50)
advcl(upon-43, bred-51)
det(thunder-54, the-52)
amod(thunder-54, neighing-53)
dobj(bred-51, thunder-54)
case(hills-57, in-55)
det(hills-57, the-56)
nmod:in(thunder-54, hills-57)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (NNP Taman))
          (, ,)
          (NP
            (NP (DT the) (NNP God))
            (PP (IN of)
              (NP (DT all) (NN Er-Heb))))
          (, ,)
          (SBAR
            (WHNP (WP Who))
            (S
              (VP
                (VP (VBD was)
                  (PP (IN before)
                    (NP (DT all) (NNS Gods))))
                (, ,)
                (CC and)
                (VP (VBD made)
                  (NP (DT all) (NNS Gods)))))))))
    (, ,)
    (CC And)
    (S
      (S
        (ADVP (RB presently))
        (VP (MD will)
          (VP (VB break)
            (NP (DT the) (NNS Gods))))
        (NP
          (NP (PRP he))
          (VP (VBN made))))
      (, ,)
      (CC And)
      (S
        (S
          (NP
            (NP (NN step))
            (PP (IN upon)
              (NP (DT the) (NN Earth))))
          (VP (TO to)
            (VP
              (VP (VB govern)
                (NP
                  (NP (NNS men))
                  (SBAR
                    (WHNP (WP Who))
                    (S
                      (VP (VBP give)
                        (NP (PRP him))
                        (NP (JJ milk-dry) (NNS ewes)))))))
              (CC and)
              (VP (VB cheat)
                (NP (PRP$ his) (NNS Priests))))))
        (, ,)
        (CC Or)
        (S
          (S
            (S
              (VP (VB leave)
                (NP (PRP$ his) (NN shrine))
                (ADVP (RB unlighted))
                (: --)
                (PP (IN as)
                  (NP (NNP Er-Heb)))))
            (VP (VBD Left)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD unlighted)
                    (CC and)
                    (VBD forgot)
                    (NP
                      (NP (NNP Taman))
                      (, ,)
                      (SBAR
                        (WHADVP (WRB When))
                        (S
                          (NP (PDT all) (DT the) (NNP Valley))
                          (VP (VBD followed)
                            (PP (IN after)
                              (NP (NNP Kysh)
                                (CC And)
                                (NNP Yabosh)))
                            (, ,)
                            (ADJP
                              (ADJP (RB little) (JJ Gods))
                              (CC but)
                              (ADJP (RB very) (JJ wise))))))))))))
          (, ,)
          (CC And)
          (S
            (PP (IN from)
              (NP (DT the) (NN sky)))
            (NP (NNP Taman))
            (VP (VBD beheld)
              (NP (PRP$ their) (NN sin)))))))
    (. .)))

nsubj(Taman-3, This-1)
nsubj(break-25, This-1)
cop(Taman-3, is-2)
root(ROOT-0, Taman-3)
nsubj(Gods-15, Taman-3)
nsubj(made-18, Taman-3)
det(God-6, the-5)
appos(Taman-3, God-6)
case(Er-Heb-9, of-7)
det(Er-Heb-9, all-8)
nmod:of(God-6, Er-Heb-9)
ref(Taman-3, Who-11)
cop(Gods-15, was-12)
case(Gods-15, before-13)
det(Gods-15, all-14)
acl:relcl(Taman-3, Gods-15)
cc(Gods-15, and-17)
acl:relcl(Taman-3, made-18)
conj:and(Gods-15, made-18)
det(Gods-20, all-19)
dobj(made-18, Gods-20)
cc(Taman-3, And-22)
advmod(break-25, presently-23)
aux(break-25, will-24)
conj:and(Taman-3, break-25)
nsubj(Gods-15, break-25)
det(Gods-27, the-26)
dobj(break-25, Gods-27)
dep(break-25, he-28)
acl(he-28, made-29)
cc(break-25, And-31)
nsubj(govern-37, step-32)
nsubj(cheat-45, step-32)
case(Earth-35, upon-33)
det(Earth-35, the-34)
nmod:upon(step-32, Earth-35)
mark(govern-37, to-36)
conj:and(Taman-3, govern-37)
conj:and(break-25, govern-37)
dobj(govern-37, men-38)
nsubj(give-40, men-38)
ref(men-38, Who-39)
acl:relcl(men-38, give-40)
iobj(give-40, him-41)
amod(ewes-43, milk-dry-42)
dobj(give-40, ewes-43)
cc(govern-37, and-44)
conj:and(break-25, cheat-45)
conj:and(govern-37, cheat-45)
nmod:poss(Priests-47, his-46)
dobj(cheat-45, Priests-47)
cc(govern-37, Or-49)
csubj(Left-57, leave-50)
nmod:poss(shrine-52, his-51)
dobj(leave-50, shrine-52)
advmod(leave-50, unlighted-53)
case(Er-Heb-56, as-55)
nmod:as(leave-50, Er-Heb-56)
conj:and(break-25, Left-57)
conj:and(govern-37, Left-57)
nsubj(unlighted-59, it-58)
nsubj(forgot-61, it-58)
ccomp(Left-57, unlighted-59)
cc(unlighted-59, and-60)
ccomp(Left-57, forgot-61)
conj:and(unlighted-59, forgot-61)
dobj(unlighted-59, Taman-62)
advmod(followed-68, When-64)
det:predet(Valley-67, all-65)
det(Valley-67, the-66)
nsubj(followed-68, Valley-67)
acl:relcl(Taman-62, followed-68)
case(Kysh-70, after-69)
nmod:after(followed-68, Kysh-70)
cc(Kysh-70, And-71)
nmod:after(followed-68, Yabosh-72)
conj:and(Kysh-70, Yabosh-72)
advmod(Gods-75, little-74)
xcomp(followed-68, Gods-75)
cc(Gods-75, but-76)
advmod(wise-78, very-77)
xcomp(followed-68, wise-78)
conj:but(Gods-75, wise-78)
cc(Left-57, And-80)
case(sky-83, from-81)
det(sky-83, the-82)
nmod:from(beheld-85, sky-83)
nsubj(beheld-85, Taman-84)
conj:and(govern-37, beheld-85)
conj:and(Left-57, beheld-85)
nmod:poss(sin-87, their-86)
dobj(beheld-85, sin-87)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD sent)
      (NP (DT the) (NNPS Sickness))
      (PRT (RP out))
      (PP (IN upon)
        (NP
          (NP (DT the) (NNS hills))
          (, ,)
          (NP
            (NP (DT The) (NNP Red) (NNP Horse) (NNP Sickness))
            (PP (IN with)
              (NP (DT the) (NN iron) (NNS hooves))))))
      (, ,)
      (S
        (VP (TO To)
          (VP (VB turn)
            (NP (DT the) (NNP Valley))
            (PP (TO to)
              (NP (NNP Taman)))
            (ADVP (RB again))))))
    (. .)))

nsubj(sent-2, He-1)
root(ROOT-0, sent-2)
det(Sickness-4, the-3)
dobj(sent-2, Sickness-4)
compound:prt(sent-2, out-5)
case(hills-8, upon-6)
det(hills-8, the-7)
nmod:upon(sent-2, hills-8)
det(Sickness-13, The-10)
compound(Sickness-13, Red-11)
compound(Sickness-13, Horse-12)
appos(hills-8, Sickness-13)
case(hooves-17, with-14)
det(hooves-17, the-15)
compound(hooves-17, iron-16)
nmod:with(Sickness-13, hooves-17)
mark(turn-20, To-19)
advcl(sent-2, turn-20)
det(Valley-22, the-21)
dobj(turn-20, Valley-22)
case(Taman-24, to-23)
nmod:to(turn-20, Taman-24)
advmod(turn-20, again-25)

(ROOT
  (S (CC And)
    (S
      (NP (DT the) (NNP Red) (NNP Horse))
      (VP (VBD snuffed)
        (NP (NN thrice))
        (PP (IN into)
          (NP
            (NP (DT the) (NN wind))
            (, ,)
            (NP
              (NP (DT The) (JJ naked) (NN wind))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD had)
                    (NP
                      (NP (DT no) (NN fear))
                      (PP (IN of)
                        (NP (PRP him))))))))))))
    (: ;)
    (S (CC And)
      (NP (DT the) (NNP Red) (NNP Horse))
      (VP (VBD stamped)
        (NP (NN thrice))
        (PP (IN upon)
          (NP
            (NP (DT the) (NN snow))
            (, ,)
            (NP
              (NP (DT The) (JJ naked) (NN snow))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD had)
                    (NP
                      (NP (DT no) (NN fear))
                      (PP (IN of)
                        (NP (PRP him))))))))))))
    (: ;)
    (S (CC And)
      (NP (DT the) (NNP Red) (NNP Horse))
      (VP (VBD went)
        (PRT (RP out))
        (PP (IN across)
          (NP
            (NP (DT the) (NNS rocks))
            (, ,)
            (NP
              (NP (DT The) (VBG ringing) (NNS rocks))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD had)
                    (NP
                      (NP (DT no) (NN fear))
                      (PP (IN of)
                        (NP (PRP him))))))))))))
    (: ;)
    (CC And)
    (S
      (ADVP (RB downward))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (JJ lean) (NN birch))
          (VP (VBZ meets)
            (NP
              (NP
                (NP (DT the) (NN snow))
                (, ,)
                (CC And)
                (RB downward) (, ,)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (S
                      (NP (DT the) (JJ gray) (NN pine))
                      (VP (VBZ meets)
                        (NP (DT the) (NN birch))))
                    (, ,)
                    (CC And)
                    (S
                      (ADVP (RB downward))
                      (, ,)
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (DT the) (NN dwarf) (NN oak))
                          (VP (VBZ meets)
                            (NP (DT the) (NN pine)))))
                      (, ,)
                      (VP (VBZ Till))))))
              (PP (IN at)
                (NP (PRP$ his) (NNS feet)))))))
      (NP (PRP$ our) (JJ cup-like) (NNS pastures))
      (VP (VBD lay)))
    (. .)))

cc(snuffed-5, And-1)
det(Horse-4, the-2)
compound(Horse-4, Red-3)
nsubj(snuffed-5, Horse-4)
root(ROOT-0, snuffed-5)
dobj(snuffed-5, thrice-6)
case(wind-9, into-7)
det(wind-9, the-8)
nmod:into(snuffed-5, wind-9)
det(wind-13, The-11)
amod(wind-13, naked-12)
appos(wind-9, wind-13)
nsubj(had-15, wind-13)
ref(wind-13, that-14)
acl:relcl(wind-13, had-15)
neg(fear-17, no-16)
dobj(had-15, fear-17)
case(him-19, of-18)
nmod:of(fear-17, him-19)
cc(stamped-25, And-21)
det(Horse-24, the-22)
compound(Horse-24, Red-23)
nsubj(stamped-25, Horse-24)
dep(snuffed-5, stamped-25)
dobj(stamped-25, thrice-26)
case(snow-29, upon-27)
det(snow-29, the-28)
nmod:upon(stamped-25, snow-29)
det(snow-33, The-31)
amod(snow-33, naked-32)
appos(snow-29, snow-33)
nsubj(had-35, snow-33)
ref(snow-33, that-34)
acl:relcl(snow-33, had-35)
neg(fear-37, no-36)
dobj(had-35, fear-37)
case(him-39, of-38)
nmod:of(fear-37, him-39)
cc(went-45, And-41)
det(Horse-44, the-42)
compound(Horse-44, Red-43)
nsubj(went-45, Horse-44)
dep(snuffed-5, went-45)
compound:prt(went-45, out-46)
case(rocks-49, across-47)
det(rocks-49, the-48)
nmod:across(went-45, rocks-49)
det(rocks-53, The-51)
amod(rocks-53, ringing-52)
appos(rocks-49, rocks-53)
nsubj(had-55, rocks-53)
ref(rocks-53, that-54)
acl:relcl(rocks-53, had-55)
neg(fear-57, no-56)
dobj(had-55, fear-57)
case(him-59, of-58)
nmod:of(fear-57, him-59)
cc(snuffed-5, And-61)
advmod(lay-101, downward-62)
advmod(meets-68, where-64)
det(birch-67, the-65)
amod(birch-67, lean-66)
nsubj(meets-68, birch-67)
advcl(lay-101, meets-68)
det(snow-70, the-69)
dobj(meets-68, snow-70)
cc(snow-70, And-72)
dobj(meets-68, downward-73)
conj:and(snow-70, downward-73)
advmod(meets-79, where-75)
det(pine-78, the-76)
amod(pine-78, gray-77)
nsubj(meets-79, pine-78)
nsubj(Till-94, pine-78)
dep(downward-73, meets-79)
det(birch-81, the-80)
dobj(meets-79, birch-81)
cc(meets-79, And-83)
advmod(Till-94, downward-84)
advmod(meets-90, where-86)
det(oak-89, the-87)
compound(oak-89, dwarf-88)
nsubj(meets-90, oak-89)
advcl(Till-94, meets-90)
det(pine-92, the-91)
dobj(meets-90, pine-92)
dep(downward-73, Till-94)
conj:and(meets-79, Till-94)
case(feet-97, at-95)
nmod:poss(feet-97, his-96)
nmod:at(snow-70, feet-97)
nmod:poss(pastures-100, our-98)
amod(pastures-100, cup-like-99)
nsubj(lay-101, pastures-100)
conj:and(snuffed-5, lay-101)

(ROOT
  (S
    (S
      (NP (DT That) (NN night))
      (, ,)
      (NP
        (NP (DT the) (JJ slow) (NNS mists))
        (PP (IN of)
          (NP (DT the) (NN evening))))
      (VP (VBD dropped) (, ,)
        (S
          (VP (VBN Dropped)
            (PP (IN as)
              (NP (DT a) (NN cloth)))
            (PP (IN upon)
              (NP
                (NP (DT a) (JJ dead) (NN man) (POS 's))
                (NN face)))))))
    (, ,)
    (CC And)
    (S
      (S
        (S
          (VP (VBN weltered)
            (PP (IN in)
              (NP
                (NP
                  (NP (DT the)
                    (ADJP (NNP Valley) (, ,) (JJ bluish-white))
                    (JJ Like) (NN water))
                  (ADJP (RB very) (JJ silent)))
                (PRN (: --)
                  (VP (VBN spread)
                    (ADVP (RB abroad))
                    (, ,)
                    (PP (IN Like)
                      (NP
                        (NP (NN water))
                        (ADJP (RB very) (JJ silent))
                        (, ,)
                        (PP (IN from)
                          (NP
                            (NP (DT the) (NNP Shrine) (NNP Unlighted))
                            (PP (IN of)
                              (NP
                                (NP (NNP Taman))
                                (PP (TO to)
                                  (SBAR
                                    (WHADVP (WRB where))
                                    (S
                                      (NP (DT the) (NN stream))
                                      (VP (VBZ Is)
                                        (VP (VBN dammed)
                                          (S
                                            (VP (TO to)
                                              (VP (VB fill)
                                                (NP (PRP$ our) (NNS cattle-troughs)))))))))))))))))
                  (: --))))))
        (VP (VBD sent)
          (PRT (RP up))
          (NP
            (NP (NNP White) (NNS waves))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP
                  (VP (VBD rocked))
                  (CC and)
                  (VP (VBD heaved))))))))
      (CC and)
      (S
        (NP (RB then))
        (VP (VBD were)
          (ADVP (RB still))
          (, ,)
          (PP (IN Till)
            (NP
              (NP (PDT all) (DT the) (NN Valley))
              (VP (VBN glittered)
                (PP (IN like)
                  (NP (DT a) (NN marsh))))))))
      (, ,)
      (PP (IN Beneath)
        (NP
          (NP (DT the) (NN moonlight))
          (, ,)
          (VP (VBN filled)
            (PP (IN with)
              (NP (JJ sluggish) (NN mist) (NN Knee-deep)))
            (, ,)
            (SBAR (RB so) (IN that)
              (S
                (NP (NNS men))
                (VP (VBD waded)
                  (SBAR (IN as)
                    (S
                      (NP (PRP they))
                      (VP (VBD walked)))))))))))
    (. .)))

det(night-2, That-1)
nmod:tmod(dropped-10, night-2)
det(mists-6, the-4)
amod(mists-6, slow-5)
nsubj(dropped-10, mists-6)
case(evening-9, of-7)
det(evening-9, the-8)
nmod:of(mists-6, evening-9)
root(ROOT-0, dropped-10)
dep(dropped-10, Dropped-12)
case(cloth-15, as-13)
det(cloth-15, a-14)
nmod:as(Dropped-12, cloth-15)
case(face-21, upon-16)
det(man-19, a-17)
amod(man-19, dead-18)
nmod:poss(face-21, man-19)
case(man-19, 's-20)
nmod:upon(Dropped-12, face-21)
cc(dropped-10, And-23)
csubj(sent-60, weltered-24)
case(water-31, in-25)
det(water-31, the-26)
amod(bluish-white-29, Valley-27)
amod(water-31, bluish-white-29)
amod(water-31, Like-30)
nmod:in(weltered-24, water-31)
advmod(silent-33, very-32)
amod(water-31, silent-33)
dep(water-31, spread-35)
advmod(spread-35, abroad-36)
case(water-39, Like-38)
nmod:like(spread-35, water-39)
advmod(silent-41, very-40)
amod(water-39, silent-41)
case(Unlighted-46, from-43)
det(Unlighted-46, the-44)
compound(Unlighted-46, Shrine-45)
nmod:from(water-39, Unlighted-46)
case(Taman-48, of-47)
nmod:of(Unlighted-46, Taman-48)
mark(dammed-54, to-49)
advmod(dammed-54, where-50)
det(stream-52, the-51)
nsubjpass(dammed-54, stream-52)
nsubj:xsubj(fill-56, stream-52)
auxpass(dammed-54, Is-53)
acl(Taman-48, dammed-54)
mark(fill-56, to-55)
xcomp(dammed-54, fill-56)
nmod:poss(cattle-troughs-58, our-57)
dobj(fill-56, cattle-troughs-58)
conj:and(dropped-10, sent-60)
compound:prt(sent-60, up-61)
compound(waves-63, White-62)
dobj(sent-60, waves-63)
nsubj(rocked-65, waves-63)
nsubj(heaved-67, waves-63)
ref(waves-63, that-64)
acl:relcl(waves-63, rocked-65)
cc(rocked-65, and-66)
acl:relcl(waves-63, heaved-67)
conj:and(rocked-65, heaved-67)
cc(sent-60, and-68)
nsubj(Valley-76, then-69)
cop(Valley-76, were-70)
advmod(Valley-76, still-71)
case(Valley-76, Till-73)
det:predet(Valley-76, all-74)
det(Valley-76, the-75)
conj:and(dropped-10, Valley-76)
conj:and(sent-60, Valley-76)
acl(Valley-76, glittered-77)
case(marsh-80, like-78)
det(marsh-80, a-79)
nmod:like(glittered-77, marsh-80)
case(moonlight-84, Beneath-82)
det(moonlight-84, the-83)
nmod:beneath(sent-60, moonlight-84)
acl(moonlight-84, filled-86)
case(Knee-deep-90, with-87)
amod(Knee-deep-90, sluggish-88)
compound(Knee-deep-90, mist-89)
nmod:with(filled-86, Knee-deep-90)
mark(waded-95, so-92)
mwe(so-92, that-93)
nsubj(waded-95, men-94)
advcl(filled-86, waded-95)
mark(walked-98, as-96)
nsubj(walked-98, they-97)
advcl(waded-95, walked-98)

(ROOT
  (S
    (NP (DT That) (NN night))
    (, ,)
    (NP (DT the) (NNP Red) (NNP Horse))
    (VP (VBD grazed)
      (PP (IN above)
        (NP (DT the) (NN Dam)))
      (, ,)
      (PP (NNP Beyond)
        (NP (DT the) (NNS cattle-troughs))))
    (. .)))

det(night-2, That-1)
nmod:tmod(grazed-7, night-2)
det(Horse-6, the-4)
compound(Horse-6, Red-5)
nsubj(grazed-7, Horse-6)
root(ROOT-0, grazed-7)
case(Dam-10, above-8)
det(Dam-10, the-9)
nmod:above(grazed-7, Dam-10)
dep(cattle-troughs-14, Beyond-12)
det(cattle-troughs-14, the-13)
nmod(grazed-7, cattle-troughs-14)

(ROOT
  (S
    (S
      (NP (NNS Men))
      (VP (VBD heard)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBP feed))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD heard)
              (NP (PRP him))))))
      (VP (VBD sickened)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP they))
            (VP (VBD lay))))))
    (. .)))

nsubj(heard-2, Men-1)
root(ROOT-0, heard-2)
nsubj(feed-4, him-3)
ccomp(heard-2, feed-4)
cc(heard-2, And-6)
nsubj(heard-9, those-7)
nsubj(sickened-11, those-7)
ref(those-7, that-8)
acl:relcl(those-7, heard-9)
dobj(heard-9, him-10)
conj:and(heard-2, sickened-11)
advmod(lay-14, where-12)
nsubj(lay-14, they-13)
advcl(sickened-11, lay-14)

(ROOT
  (S
    (SINV
      (ADVP (RB Thus))
      (VP (VBD came)
        (NP (DT the) (NNPS Sickness))
        (PP
          (PP (TO to)
            (NP
              (NP
                (UCP
                  (ADJP (JJ Er-Heb))
                  (, ,)
                  (CC and)
                  (NP (NN slew) (CD Ten)))
                (NNS men))
              (, ,)
              (NP (JJ strong) (NNS men))
              (, ,)))
          (CC and)
          (PP (IN of)
            (NP (DT the) (NNS women)))))
      (NP (CD four)))
    (: ;)
    (S (CC And)
      (NP (DT the) (NNP Red) (NNP Horse))
      (VP (VBD went)
        (VP (VBN hillward)
          (PP (IN with)
            (NP (DT the) (NN dawn))))))
    (, ,)
    (CC But)
    (S
      (PP (IN near)
        (NP (DT the) (NNS cattle-troughs)))
      (NP (PRP$ his) (NNS hoof-prints))
      (VP (VBD lay)))
    (. .)))

advmod(came-2, Thus-1)
conj:and(came-2, came-2')
dep(went-26, came-2)
dep(went-26, came-2')
det(Sickness-4, the-3)
dobj(came-2, Sickness-4)
case(men-11, to-5)
amod(men-11, Er-Heb-6)
cc(Er-Heb-6, and-8)
conj:and(Er-Heb-6, slew-9)
amod(men-11, slew-9)
nummod(slew-9, Ten-10)
nmod:to(came-2, men-11)
amod(men-14, strong-13)
appos(men-11, men-14)
cc(came-2, and-16)
case(women-19, of-17)
det(women-19, the-18)
nmod:of(came-2', women-19)
nsubj(came-2, four-20)
nsubj(came-2', four-20)
cc(went-26, And-22)
det(Horse-25, the-23)
compound(Horse-25, Red-24)
nsubj(went-26, Horse-25)
root(ROOT-0, went-26)
dep(went-26, hillward-27)
case(dawn-30, with-28)
det(dawn-30, the-29)
nmod:with(hillward-27, dawn-30)
cc(went-26, But-32)
case(cattle-troughs-35, near-33)
det(cattle-troughs-35, the-34)
nmod:near(lay-38, cattle-troughs-35)
nmod:poss(hoof-prints-37, his-36)
nsubj(lay-38, hoof-prints-37)
conj:and(went-26, lay-38)

(ROOT
  (S
    (NP (DT That) (NN night))
    (, ,)
    (NP
      (NP (DT the) (JJ slow) (NNS mists))
      (PP (IN of)
        (NP (DT the) (NN evening))))
    (VP
      (VP (VBD dropped))
      (, ,)
      (VP (VBD Dropped)
        (PP (IN as)
          (NP (DT a) (NN cloth)))
        (PP (IN upon)
          (NP (DT the) (NN dead))))
      (, ,)
      (CC but)
      (VP (VBD rose)
        (ADJP
          (NP (DT A) (RB little))
          (JJR higher))
        (, ,)
        (PP (TO to)
          (NP
            (NP (DT a) (JJ young) (NN girl) (POS 's))
            (NN height))))
      (: ;)
      (PP (IN Till)
        (NP
          (NP (PDT all) (DT the) (NN Valley))
          (VP (VBN glittered)
            (PP (IN like)
              (NP (DT a) (NN lake)))))))
    (, ,)
    (PP (IN Beneath)
      (NP
        (NP (DT the) (NN moonlight))
        (, ,)
        (VP (VBN filled)
          (PP (IN with)
            (NP (JJ sluggish) (NN mist))))))
    (. .)))

det(night-2, That-1)
nmod:tmod(dropped-10, night-2)
det(mists-6, the-4)
amod(mists-6, slow-5)
nsubj(dropped-10, mists-6)
nsubj(Dropped-12, mists-6)
nsubj(rose-21, mists-6)
case(evening-9, of-7)
det(evening-9, the-8)
nmod:of(mists-6, evening-9)
root(ROOT-0, dropped-10)
conj:but(dropped-10, Dropped-12)
case(cloth-15, as-13)
det(cloth-15, a-14)
nmod:as(Dropped-12, cloth-15)
case(dead-18, upon-16)
det(dead-18, the-17)
nmod:upon(Dropped-12, dead-18)
cc(dropped-10, but-20)
conj:but(dropped-10, rose-21)
det(little-23, A-22)
nmod:npmod(higher-24, little-23)
xcomp(rose-21, higher-24)
case(height-31, to-26)
det(girl-29, a-27)
amod(girl-29, young-28)
nmod:poss(height-31, girl-29)
case(girl-29, 's-30)
nmod:to(rose-21, height-31)
case(Valley-36, Till-33)
det:predet(Valley-36, all-34)
det(Valley-36, the-35)
conj:but(dropped-10, Valley-36)
acl(Valley-36, glittered-37)
case(lake-40, like-38)
det(lake-40, a-39)
nmod:like(glittered-37, lake-40)
case(moonlight-44, Beneath-42)
det(moonlight-44, the-43)
nmod:beneath(dropped-10, moonlight-44)
acl(moonlight-44, filled-46)
case(mist-49, with-47)
amod(mist-49, sluggish-48)
nmod:with(filled-46, mist-49)

(ROOT
  (S
    (S
      (NP (DT That) (NN night))
      (, ,)
      (NP (DT the) (NNP Red) (NNP Horse))
      (VP (VBD grazed)
        (PP (IN beyond)
          (NP (DT the) (NN Dam)))))
    (, ,)
    (NP (DT A) (NN stone))
    (VP (VBZ 's) (: -)
      (S
        (VP (VB throw)
          (PP (IN from)
            (NP (DT the) (NNS troughs))))))
    (. .)))

det(night-2, That-1)
nmod:tmod(grazed-7, night-2)
det(Horse-6, the-4)
compound(Horse-6, Red-5)
nsubj(grazed-7, Horse-6)
ccomp('s-14, grazed-7)
case(Dam-10, beyond-8)
det(Dam-10, the-9)
nmod:beyond(grazed-7, Dam-10)
det(stone-13, A-12)
nsubj('s-14, stone-13)
root(ROOT-0, 's-14)
ccomp('s-14, throw-16)
case(troughs-19, from-17)
det(troughs-19, the-18)
nmod:from(throw-16, troughs-19)

(ROOT
  (S
    (S
      (NP (NNS Men))
      (VP (VBD heard)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBP feed))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD heard)
              (NP (PRP him))))))
      (VP (VBD sickened)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP they))
            (VP (VBD lay))))))
    (. .)))

nsubj(heard-2, Men-1)
root(ROOT-0, heard-2)
nsubj(feed-4, him-3)
ccomp(heard-2, feed-4)
cc(heard-2, And-6)
nsubj(heard-9, those-7)
nsubj(sickened-11, those-7)
ref(those-7, that-8)
acl:relcl(those-7, heard-9)
dobj(heard-9, him-10)
conj:and(heard-2, sickened-11)
advmod(lay-14, where-12)
nsubj(lay-14, they-13)
advcl(sickened-11, lay-14)

(ROOT
  (S
    (S
      (NP
        (ADVP (RB Thus)))
      (VP (VBD came)
        (NP (DT the) (NNPS Sickness))
        (PP
          (PP (TO to)
            (NP
              (NP (NNP Er-Heb))
              (, ,)
              (CC and)
              (NP
                (NP
                  (NP (NN slew))
                  (PP (IN Of)
                    (NP (NNS men))))
                (NP (DT a) (NN score)))
              (, ,)))
          (CC and)
          (PP (IN of)
            (NP (DT the) (NNS women)))
          (NP (CD eight)))))
    (, ,)
    (CC And)
    (FRAG
      (PP (IN of)
        (NP (DT the) (NNS children)))
      (NP (CD two)))
    (. .)))

nsubj(came-2, Thus-1)
root(ROOT-0, came-2)
det(Sickness-4, the-3)
dobj(came-2, Sickness-4)
case(Er-Heb-6, to-5)
nmod:to(eight-19, Er-Heb-6)
cc(Er-Heb-6, and-8)
conj:and(Er-Heb-6, slew-9)
nmod:to(eight-19, slew-9)
case(men-11, Of-10)
nmod:of(slew-9, men-11)
det(score-13, a-12)
dep(slew-9, score-13)
cc(eight-19, and-15)
case(women-18, of-16)
det(women-18, the-17)
nmod(came-2, women-18)
conj:and(eight-19, women-18)
nmod(came-2, eight-19)
cc(came-2, And-21)
case(children-24, of-22)
det(children-24, the-23)
nmod:of(two-25, children-24)
conj:and(came-2, two-25)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (S
          (NP
            (NP (DT the) (NN road))
            (PP (TO To)
              (NP (NNP Gorukh))))
          (VP (VBD was)
            (NP
              (NP (DT a) (NN road))
              (PP (IN of)
                (NP (NNS enemies))))))
        (, ,)
        (CC And)
        (S
          (NP (NNP Ao-Safai))
          (VP (VBD was)
            (VP (VBN blocked)
              (PP (IN with)
                (NP (JJ early) (NN snow))))))))
    (, ,)
    (NP (PRP We))
    (VP (MD could) (RB not)
      (VP (VB flee)
        (PP (IN from)
          (PP (IN out)
            (NP (DT the) (NNP Valley))))))
    (. .)))

mark(road-8, Because-1)
det(road-3, the-2)
nsubj(road-8, road-3)
case(Gorukh-5, To-4)
nmod:to(road-3, Gorukh-5)
cop(road-8, was-6)
det(road-8, a-7)
advcl(flee-23, road-8)
case(enemies-10, of-9)
nmod:of(road-8, enemies-10)
cc(road-8, And-12)
nsubjpass(blocked-15, Ao-Safai-13)
auxpass(blocked-15, was-14)
conj:and(road-8, blocked-15)
advcl(flee-23, blocked-15)
case(snow-18, with-16)
amod(snow-18, early-17)
nmod:with(blocked-15, snow-18)
nsubj(flee-23, We-20)
aux(flee-23, could-21)
neg(flee-23, not-22)
root(ROOT-0, flee-23)
case(Valley-27, from-24)
case(Valley-27, out-25)
det(Valley-27, the-26)
nmod:out(flee-23, Valley-27)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (NNP Death) (NNP Smote))
          (PP (IN at)
            (NP
              (NP
                (NP (PRP us))
                (PP (IN in)
                  (NP (DT a) (NN slaughter-pen))))
              (, ,)
              (CC and)
              (NP (NNP Kysh)))))
        (VP (VBD Was)
          (ADJP (JJ mute))
          (PP (IN as)
            (NP (NNP Yabosh)))
          (, ,)
          (SBAR (IN though)
            (S
              (NP (DT the) (NNS goats))
              (VP (VBD were)
                (VP (VBN slain)))))))
      (: ;)
      (CC And)
      (S
        (NP (DT the) (NNP Red) (NNP Horse))
        (VP (VBD grazed)
          (ADVP (RB nightly))
          (PP (IN by)
            (NP (DT the) (NN stream))))))
    (, ,)
    (CC And)
    (S
      (ADVP (RB later))
      (, ,)
      (S
        (VP (VB outward) (, ,)
          (PP (IN towards)
            (NP (DT the) (NNP Unlighted) (NNP Shrine)))
          (, ,)
          (FRAG (CC And)
            (NP (DT those)))))
      (NP (DT that))
      (VP (VBD heard)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBD sickened)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP they))
                  (VP (VBD lay)))))))))
    (. .)))

compound(Smote-2, Death-1)
nsubj(mute-12, Smote-2)
case(us-4, at-3)
nmod:at(Smote-2, us-4)
case(slaughter-pen-7, in-5)
det(slaughter-pen-7, a-6)
nmod:in(us-4, slaughter-pen-7)
cc(us-4, and-9)
nmod:at(Smote-2, Kysh-10)
conj:and(us-4, Kysh-10)
cop(mute-12, Was-11)
root(ROOT-0, mute-12)
case(Yabosh-14, as-13)
nmod:as(mute-12, Yabosh-14)
mark(slain-20, though-16)
det(goats-18, the-17)
nsubjpass(slain-20, goats-18)
auxpass(slain-20, were-19)
advcl(mute-12, slain-20)
cc(mute-12, And-22)
det(Horse-25, the-23)
compound(Horse-25, Red-24)
nsubj(grazed-26, Horse-25)
conj:and(mute-12, grazed-26)
advmod(grazed-26, nightly-27)
case(stream-30, by-28)
det(stream-30, the-29)
nmod:by(grazed-26, stream-30)
cc(mute-12, And-32)
advmod(heard-45, later-33)
dep(heard-45, outward-35)
case(Shrine-40, towards-37)
det(Shrine-40, the-38)
compound(Shrine-40, Unlighted-39)
nmod:towards(outward-35, Shrine-40)
cc(those-43, And-42)
dep(outward-35, those-43)
nsubj(heard-45, that-44)
conj:and(mute-12, heard-45)
nsubj(sickened-47, him-46)
ccomp(heard-45, sickened-47)
advmod(lay-50, where-48)
nsubj(lay-50, they-49)
advcl(sickened-47, lay-50)

(ROOT
  (SINV (RB Then)
    (VP (VBD said))
    (NP
      (NP (NNP Bisesa))
      (PP (TO to)
        (NP
          (NP (DT the) (NNPS Priests))
          (PP (IN at)
            (NP (NN dusk)))))
      (, ,)
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (DT the) (JJ white) (NN mist))
          (VP
            (VP (VBD rose)
              (PRT (RP up))
              (NP (NN breast-high)))
            (, ,)
            (CC and)
            (VP (VBD choked)
              (NP (DT The) (NNS voices))
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS houses))
                  (PP (IN of)
                    (FRAG
                      (NP
                        (NP (DT the) (NN dead))
                        (: :) (: --)
                        (S (`` ``)
                          (NP (NNP Yabosh)
                            (CC and)
                            (NNP Kysh))
                          (VP (VBZ avail) (RB not)))
                        (. .)))))))))))))

advmod(said-2, Then-1)
root(ROOT-0, said-2)
nsubj(said-2, Bisesa-3)
case(Priests-6, to-4)
det(Priests-6, the-5)
nmod:to(Bisesa-3, Priests-6)
case(dusk-8, at-7)
nmod:at(Priests-6, dusk-8)
advmod(rose-14, When-10)
det(mist-13, the-11)
amod(mist-13, white-12)
nsubj(rose-14, mist-13)
nsubj(choked-19, mist-13)
acl:relcl(Bisesa-3, rose-14)
compound:prt(rose-14, up-15)
dobj(rose-14, breast-high-16)
cc(rose-14, and-18)
acl:relcl(Bisesa-3, choked-19)
conj:and(rose-14, choked-19)
det(voices-21, The-20)
dobj(choked-19, voices-21)
case(houses-24, in-22)
det(houses-24, the-23)
nmod:in(choked-19, houses-24)
case(dead-27, of-25)
det(dead-27, the-26)
acl(houses-24, dead-27)
nsubj(avail-34, Yabosh-31)
cc(Yabosh-31, and-32)
conj:and(Yabosh-31, Kysh-33)
nsubj(avail-34, Kysh-33)
dep(dead-27, avail-34)
neg(avail-34, not-35)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN Horse))
        (VP (VBZ Reach)
          (NP (DT the) (NNP Unlighted) (NNP Shrine)))))
    (NP (PRP we))
    (ADVP (RB surely))
    (VP (VBP die))
    (. .)))

mark(Reach-4, If-1)
det(Horse-3, the-2)
nsubj(Reach-4, Horse-3)
advcl(die-10, Reach-4)
det(Shrine-7, the-5)
compound(Shrine-7, Unlighted-6)
dobj(Reach-4, Shrine-7)
nsubj(die-10, we-8)
advmod(die-10, surely-9)
root(ROOT-0, die-10)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (VBP have)
      (VP (VBN forgotten)
        (PP (IN of)
          (NP
            (NP (DT all) (NNS Gods))
            (NP (DT the) (NNP Chief) (, ,) (NNP Taman))))))
    (. !) ('' '')))

nsubj(forgotten-3, Ye-1)
aux(forgotten-3, have-2)
root(ROOT-0, forgotten-3)
case(Gods-6, of-4)
det(Gods-6, all-5)
nmod:of(forgotten-3, Gods-6)
det(Taman-10, the-7)
compound(Taman-10, Chief-8)
dep(Gods-6, Taman-10)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP (VBD rolled)
        (NP (DT the) (NN thunder))
        (PP (IN through)
          (NP (DT the) (NNPS Hills)))))
    (CC And)
    (S
      (NP (NNP Yabosh))
      (VP (VBD shook)
        (PP (IN upon)
          (NP (PRP$ his) (NN pedestal)))))
    (. .)))

nsubj(rolled-2, Here-1)
root(ROOT-0, rolled-2)
det(thunder-4, the-3)
dobj(rolled-2, thunder-4)
case(Hills-7, through-5)
det(Hills-7, the-6)
nmod:through(rolled-2, Hills-7)
cc(rolled-2, And-8)
nsubj(shook-10, Yabosh-9)
conj:and(rolled-2, shook-10)
case(pedestal-13, upon-11)
nmod:poss(pedestal-13, his-12)
nmod:upon(shook-10, pedestal-13)

(ROOT
  (S (`` ``)
    (NP (PRP Ye))
    (VP (VBP have)
      (VP (VBN forgotten)
        (PP (IN of)
          (S (RB all)
            (VP (VBG Gods)
              (NP (DT the) (NNP Chief))
              (ADVP (RB Too) (RB long)))))))
    (. .) ('' '')))

nsubj(forgotten-4, Ye-2)
aux(forgotten-4, have-3)
root(ROOT-0, forgotten-4)
mark(Gods-7, of-5)
advmod(Gods-7, all-6)
advcl(forgotten-4, Gods-7)
det(Chief-9, the-8)
dobj(Gods-7, Chief-9)
advmod(long-11, Too-10)
advmod(Gods-7, long-11)

(ROOT
  (S (CC And)
    (NP (DT all))
    (VP (VBD were)
      (NP
        (NP (JJ dumb))
        (PP (IN save)
          (S
            (S
              (NP
                (NP (CD one))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (ADJP (JJ cried))
                    (PP (IN On)
                      (NP (NNP Yabosh)))
                    (SBAR (IN with)
                      (S
                        (NP (DT the) (NNP Sapphire))
                        (VP (`` `) (VBP twixt)
                          (NP (PRP$ His) (NNS knees)))))))
                (, ,))
              (ADVP (CC But))
              (VP (VBD found)
                (NP (DT no) (NN answer))
                (PP (IN in)
                  (NP (DT the) (JJ smoky) (NN roof)))))
            (, ,)
            (S (CC And)
              (, ,)
              (S
                (VP (VBG being)
                  (VP (VBN smitten)
                    (PP (IN of)
                      (NP (DT the) (NNPS Sickness))))))
              (, ,)
              (VP (VBD died)))
            (PP (IN Before)
              (NP
                (NP (DT the) (NN altar))
                (PP (IN of)
                  (NP (DT the) (NNP Sapphire) (NNP Shrine)))))))))
    (. .)))

cc(dumb-4, And-1)
nsubj(dumb-4, all-2)
cop(dumb-4, were-3)
root(ROOT-0, dumb-4)
mark(found-21, save-5)
dep(twixt-16, one-6)
nsubj(found-21, one-6)
ref(one-6, who-8)
dep(twixt-16, cried-9)
case(Yabosh-11, On-10)
dep(twixt-16, Yabosh-11)
mark(twixt-16, with-12)
det(Sapphire-14, the-13)
nsubj(twixt-16, Sapphire-14)
acl:relcl(one-6, twixt-16)
nmod:poss(knees-18, His-17)
dobj(twixt-16, knees-18)
advmod(found-21, But-20)
acl(dumb-4, found-21)
neg(answer-23, no-22)
dobj(found-21, answer-23)
case(roof-27, in-24)
det(roof-27, the-25)
amod(roof-27, smoky-26)
nmod:in(found-21, roof-27)
cc(died-37, And-29)
auxpass(smitten-32, being-31)
dep(died-37, smitten-32)
case(Sickness-35, of-33)
det(Sickness-35, the-34)
nmod:of(smitten-32, Sickness-35)
parataxis(found-21, died-37)
case(altar-40, Before-38)
det(altar-40, the-39)
nmod:before(found-21, altar-40)
case(Shrine-44, of-41)
det(Shrine-44, the-42)
compound(Shrine-44, Sapphire-43)
nmod:of(altar-40, Shrine-44)

(ROOT
  (S
    (SINV
      (ADVP (RB Then))
      (VP (VBD said))
      (NP (NNP Bisesa))
      (: :))
    (: --)
    (S (`` ``)
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ near)
          (PP (TO to)
            (NP (NNP Death))))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VB have)
          (S
            (NP
              (NP (DT the) (NNP Wisdom))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN Grave))
                  (PP (IN for)
                    (NP (NN gift))))))
            (VP (TO To)
              (VP (VB bear)
                (NP (PRP me))
                (PP (IN on)
                  (NP (DT the) (NN path))))))))
      (NP (PRP$ my) (NNS feet))
      (VP (MD must)
        (VP (VB tread))))
    (. .)))

advmod(said-2, Then-1)
dep(Death-11, said-2)
nsubj(said-2, Bisesa-3)
nsubj(Death-11, I-7)
cop(Death-11, am-8)
case(Death-11, near-9)
mwe(near-9, to-10)
root(ROOT-0, Death-11)
cc(Death-11, And-13)
dep(tread-31, have-14)
det(Wisdom-16, the-15)
dobj(have-14, Wisdom-16)
case(Grave-19, of-17)
det(Grave-19, the-18)
nmod:of(Wisdom-16, Grave-19)
case(gift-21, for-20)
nmod:for(Grave-19, gift-21)
mark(bear-23, To-22)
ccomp(have-14, bear-23)
dobj(bear-23, me-24)
case(path-27, on-25)
det(path-27, the-26)
nmod:on(bear-23, path-27)
nmod:poss(feet-29, my-28)
nsubj(tread-31, feet-29)
aux(tread-31, must-30)
conj:and(Death-11, tread-31)

(ROOT
  (S
    (S
      (S
        (SBAR (IN If)
          (S
            (NP (EX there))
            (VP (VB be)
              (NP
                (NP (NN wealth))
                (PP (IN on)
                  (NP (NN earth)))))))
        (, ,)
        (ADVP (RB then))
        (NP (PRP I))
        (VP (VBP am)
          (ADJP (JJ rich))))
      (, ,) (IN For)
      (S
        (NP (NNP Armod))
        (VP (VBZ is)
          (NP
            (NP (DT the) (JJ first))
            (PP (IN of)
              (NP (DT all) (NN Er-Heb)))))))
    (: ;)
    (S
      (SBAR (IN If)
        (S
          (NP (EX there))
          (VP (VB be)
            (NP
              (NP (NN beauty))
              (PP (IN on)
                (NP (DT the) (NN earth) (, ,) ('' '')))))))
      (PRN (: --)
        (S
          (NP (PRP$ her) (NNS eyes))
          (VP (VBD Dropped)
            (PP (IN for)
              (NP (DT a) (NN moment)))
            (PP (TO to)
              (NP (DT the) (NN temple) (NN floor))))
          (, ,))
        (: --))
      (`` ``)
      (NP (PRP Ye))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP am)
              (ADJP (JJ fair)))))))
    (. .)))

mark(be-3, If-1)
expl(be-3, there-2)
advcl(am-10, be-3)
nsubj(be-3, wealth-4)
case(earth-6, on-5)
nmod:on(wealth-4, earth-6)
advmod(I-9, then-8)
nsubj(am-10, I-9)
root(ROOT-0, am-10)
xcomp(am-10, rich-11)
dep(am-10, For-13)
nsubj(first-17, Armod-14)
cop(first-17, is-15)
det(first-17, the-16)
parataxis(am-10, first-17)
case(Er-Heb-20, of-18)
det(Er-Heb-20, all-19)
nmod:of(first-17, Er-Heb-20)
mark(be-24, If-22)
expl(be-24, there-23)
advcl(know-46, be-24)
nsubj(be-24, beauty-25)
case(earth-28, on-26)
det(earth-28, the-27)
nmod:on(beauty-25, earth-28)
nmod:poss(eyes-33, her-32)
nsubj(Dropped-34, eyes-33)
parataxis(know-46, Dropped-34)
case(moment-37, for-35)
det(moment-37, a-36)
nmod:for(Dropped-34, moment-37)
case(floor-41, to-38)
det(floor-41, the-39)
compound(floor-41, temple-40)
nmod:to(Dropped-34, floor-41)
nsubj(know-46, Ye-45)
parataxis(am-10, know-46)
mark(fair-50, that-47)
nsubj(fair-50, I-48)
cop(fair-50, am-49)
ccomp(know-46, fair-50)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VB be)
          (NP (NN love)))))
    (, ,)
    (NP (PRP Ye))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (NN love))
          (VP (VBZ is)
            (NP (NN mine))))))
    (. .) ('' '')))

mark(be-3, If-1)
expl(be-3, there-2)
advcl(know-7, be-3)
nsubj(be-3, love-4)
nsubj(know-7, Ye-6)
root(ROOT-0, know-7)
mark(mine-11, that-8)
nsubj(mine-11, love-9)
cop(mine-11, is-10)
ccomp(know-7, mine-11)

(ROOT
  (S
    (S
      (S
        (S
          (NP
            (NP
              (NP (DT The) (NNP Chief))
              (PP (IN in)
                (NP (NNP War))))
            (, ,)
            (NP
              (NP (DT The) (NN Man))
              (PP (IN of)
                (NP (CD Sixty) (NNS Spears))))
            (, ,))
          (VP (VBD broke)
            (PP (IN from)
              (NP (DT the) (NN press)))))
        (, ,)
        (CC And)
        (SQ (MD would)
          (VP (VB have)
            (VP (VBN clasped)
              (NP (PRP her))))))
      (, ,)
      (CC but)
      (S
        (NP (DT the) (NNPS Priests))
        (VP (VBD withstood) (, ,)
          (S
            (VP (VBG Saying))))))
    (: :) (: --) (`` ``)
    (S
      (NP (PRP She))
      (VP (VBZ has)
        (NP
          (NP (DT a) (NN message))
          (PP (IN from)
            (NP (NNP Taman))))))
    (. .) ('' '')))

det(Chief-2, The-1)
nsubj(broke-12, Chief-2)
nsubj(clasped-20, Chief-2)
case(War-4, in-3)
nmod:in(Chief-2, War-4)
det(Man-7, The-6)
appos(Chief-2, Man-7)
case(Spears-10, of-8)
nummod(Spears-10, Sixty-9)
nmod:of(Man-7, Spears-10)
root(ROOT-0, broke-12)
case(press-15, from-13)
det(press-15, the-14)
nmod:from(broke-12, press-15)
cc(broke-12, And-17)
aux(clasped-20, would-18)
aux(clasped-20, have-19)
conj:and(broke-12, clasped-20)
dobj(clasped-20, her-21)
cc(broke-12, but-23)
det(Priests-25, the-24)
nsubj(withstood-26, Priests-25)
conj:but(broke-12, withstood-26)
xcomp(withstood-26, Saying-28)
nsubj(has-33, She-32)
parataxis(broke-12, has-33)
det(message-35, a-34)
dobj(has-33, message-35)
case(Taman-37, from-36)
nmod:from(message-35, Taman-37)

(ROOT
  (S
    (S
      (VP
        (ADVP (RB Then))
        (VBD said)
        (NP (NNP Bisesa))))
    (: :) (: --)
    (S (`` ``)
      (PP (IN By)
        (NP
          (NP (PRP$ my) (NN wealth)
            (CC and)
            (NN love))
          (CC And)
          (NP (NN beauty))))
      (, ,)
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBN chosen)
          (PP (IN of)
            (NP (DT the) (NNP God) (NNP Taman))))))
    (. .) ('' '')))

advmod(said-2, Then-1)
root(ROOT-0, said-2)
dobj(said-2, Bisesa-3)
case(wealth-9, By-7)
nmod:poss(wealth-9, my-8)
nmod:by(chosen-17, wealth-9)
cc(wealth-9, and-10)
conj:and(wealth-9, love-11)
nmod:by(chosen-17, love-11)
cc(wealth-9, And-12)
conj:and(wealth-9, beauty-13)
nmod:by(chosen-17, beauty-13)
nsubjpass(chosen-17, I-15)
auxpass(chosen-17, am-16)
parataxis(said-2, chosen-17)
case(Taman-21, of-18)
det(Taman-21, the-19)
compound(Taman-21, God-20)
nmod:of(chosen-17, Taman-21)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP (VBD rolled)
        (NP (DT the) (NN thunder))
        (PP (IN through)
          (NP (DT the) (NNPS Hills)))))
    (CC And)
    (S
      (NP (NNP Kysh))
      (VP (VBD fell)
        (ADVP (RB forward))
        (PP (IN on)
          (NP
            (NP (DT the) (NNP Mound))
            (PP (IN of)
              (NP (NNP Skulls)))))))
    (. .)))

nsubj(rolled-2, Here-1)
root(ROOT-0, rolled-2)
det(thunder-4, the-3)
dobj(rolled-2, thunder-4)
case(Hills-7, through-5)
det(Hills-7, the-6)
nmod:through(rolled-2, Hills-7)
cc(rolled-2, And-8)
nsubj(fell-10, Kysh-9)
conj:and(rolled-2, fell-10)
advmod(fell-10, forward-11)
case(Mound-14, on-12)
det(Mound-14, the-13)
nmod:on(fell-10, Mound-14)
case(Skulls-16, of-15)
nmod:of(Mound-14, Skulls-16)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS darkness))
        (, ,)
        (CC and)
        (RB before)
        (NP (PRP$ our) (NNS Priests))))
    (, ,)
    (S
      (NP (DT the) (NN maid))
      (PP (IN Between)
        (NP (DT the) (NNS altars)))
      (VP (VBD cast)
        (NP (PRP$ her) (NNS bracelets))
        (PRT (RP down))
        (, ,)
        (S
          (VP (VBG Therewith)
            (NP
              (NP (DT the) (JJ heavy) (NNS earrings))
              (SBAR
                (S
                  (NP (NNP Armod))
                  (VP (VBD made)))))))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP he))
            (VP (VBD was)
              (ADJP (JJ young))
              (, ,)
              (PP (RB out) (IN of)
                (NP
                  (NP
                    (NP (DT the) (NN water-gold))
                    (PP (IN Of)
                      (NP (NNP Gorukh))))
                  (PRN (: --)
                    (VP (VBD threw)
                      (S
                        (NP (DT the) (NN breast-plate))
                        (ADJP (JJ thick)
                          (PP (IN with)
                            (NP (NN jade))))
                        (PP (IN Upon)
                          (NP (DT the) (NN turquoise) (NNS anklets)))))
                    (: --))
                  (VP (VBN put)
                    (PRT (RP aside))
                    (NP
                      (NP (DT The) (NNS bands))
                      (PP (IN of)
                        (NP (NN silver))))
                    (PP (IN on)
                      (NP (PRP$ her) (NN brow)
                        (CC and)
                        (NN neck)))))))))))
    (: ;)
    (S (CC And)
      (SBAR (IN as)
        (S
          (NP (DT the) (NNS trinkets))
          (VP (VBD tinkled)
            (PP (IN on)
              (NP (DT the) (NNS stones))))))
      (, ,)
      (NP
        (NP (DT The) (NN thunder))
        (PP (IN of)
          (NP (NNP Taman))))
      (VP (VBD lowed)
        (PP (IN like)
          (NP (DT a) (NN bull)))))
    (. .)))

case(darkness-2, In-1)
nmod:in(cast-14, darkness-2)
cc(darkness-2, and-4)
advmod(darkness-2, before-5)
nmod:poss(Priests-7, our-6)
dep(darkness-2, Priests-7)
det(maid-10, the-9)
nsubj(cast-14, maid-10)
case(altars-13, Between-11)
det(altars-13, the-12)
nmod:between(cast-14, altars-13)
root(ROOT-0, cast-14)
nmod:poss(bracelets-16, her-15)
dobj(cast-14, bracelets-16)
compound:prt(cast-14, down-17)
xcomp(cast-14, Therewith-19)
det(earrings-22, the-20)
amod(earrings-22, heavy-21)
dobj(Therewith-19, earrings-22)
nsubj(made-24, Armod-23)
acl:relcl(earrings-22, made-24)
advmod(young-29, When-26)
nsubj(young-29, he-27)
cop(young-29, was-28)
advcl(cast-14, young-29)
case(water-gold-34, out-31)
mwe(out-31, of-32)
det(water-gold-34, the-33)
nmod:out_of(young-29, water-gold-34)
case(Gorukh-36, Of-35)
nmod:of(water-gold-34, Gorukh-36)
dep(water-gold-34, threw-38)
det(breast-plate-40, the-39)
nsubj(thick-41, breast-plate-40)
xcomp(threw-38, thick-41)
case(jade-43, with-42)
nmod:with(thick-41, jade-43)
case(anklets-47, Upon-44)
det(anklets-47, the-45)
compound(anklets-47, turquoise-46)
dep(thick-41, anklets-47)
acl(water-gold-34, put-49)
compound:prt(put-49, aside-50)
det(bands-52, The-51)
dobj(put-49, bands-52)
case(silver-54, of-53)
nmod:of(bands-52, silver-54)
case(brow-57, on-55)
nmod:poss(brow-57, her-56)
nmod:on(put-49, brow-57)
cc(brow-57, and-58)
nmod:on(put-49, neck-59)
conj:and(brow-57, neck-59)
cc(lowed-74, And-61)
mark(tinkled-65, as-62)
det(trinkets-64, the-63)
nsubj(tinkled-65, trinkets-64)
advcl(lowed-74, tinkled-65)
case(stones-68, on-66)
det(stones-68, the-67)
nmod:on(tinkled-65, stones-68)
det(thunder-71, The-70)
nsubj(lowed-74, thunder-71)
case(Taman-73, of-72)
nmod:of(thunder-71, Taman-73)
parataxis(cast-14, lowed-74)
case(bull-77, like-75)
det(bull-77, a-76)
nmod:like(lowed-74, bull-77)

(ROOT
  (SINV
    (ADVP (RB Then))
    (VP (VBD said))
    (NP (NNP Bisesa))
    (, ,)
    (S
      (VP (VBG stretching)
        (PRT (RP out))
        (NP (PRP$ her) (NNS hands))
        (, ,)
        (SBAR (IN As)
          (X
            (NP (CD one))
            (PP (IN in)
              (S
                (NP (NNS darkness))
                (VP (VBG fearing)
                  (NP (NNS Devils)))))
            (: :)))
        (: --)
        (S (`` ``)
          (VP (VB Help)))))
    (. !)))

advmod(said-2, Then-1)
root(ROOT-0, said-2)
nsubj(said-2, Bisesa-3)
advcl(said-2, stretching-5)
compound:prt(stretching-5, out-6)
nmod:poss(hands-8, her-7)
dobj(stretching-5, hands-8)
advcl(stretching-5, As-10)
dep(As-10, one-11)
mark(fearing-14, in-12)
nsubj(fearing-14, darkness-13)
dep(one-11, fearing-14)
dobj(fearing-14, Devils-15)
parataxis(stretching-5, Help-19)

(ROOT
  (FRAG
    (NP
      (NP (NNP O) (NNP Priests))
      (, ,)
      (SBAR
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP am)
              (NP
                (NP (DT a) (NN woman))
                (ADJP (RB very) (JJ weak))))))
        (, ,)
        (CC And)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP am)
              (S
                (NP (PRP I))
                (VP (TO to)
                  (VP (VB know)
                    (NP
                      (NP (DT the) (NN will))
                      (PP (IN of)
                        (NP (NNS Gods))))))))))))
    (. ?)))

compound(Priests-2, O-1)
root(ROOT-0, Priests-2)
nsubj(am-13, Priests-2)
nsubj(woman-7, I-4)
cop(woman-7, am-5)
det(woman-7, a-6)
acl:relcl(Priests-2, woman-7)
advmod(weak-9, very-8)
amod(woman-7, weak-9)
cc(woman-7, And-11)
ref(Priests-2, who-12)
acl:relcl(Priests-2, am-13)
conj:and(woman-7, am-13)
dobj(am-13, I-14)
nsubj:xsubj(know-16, I-14)
mark(know-16, to-15)
xcomp(am-13, know-16)
det(will-18, the-17)
dobj(know-16, will-18)
case(Gods-20, of-19)
nmod:of(will-18, Gods-20)

(ROOT
  (S
    (S
      (NP (NNP Taman) (NNP hath))
      (VP (VBD called)
        (NP (PRP me))))
    (: --)
    (S
      (NP (NN whither))
      (VP (VBD shall)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP go))))))
    (. ?) ('' '')))

compound(hath-2, Taman-1)
nsubj(called-3, hath-2)
root(ROOT-0, called-3)
dobj(called-3, me-4)
nsubj(shall-7, whither-6)
parataxis(called-3, shall-7)
nsubj(go-9, I-8)
ccomp(shall-7, go-9)

(ROOT
  (S
    (S
      (NP
        (NP (DT The)
          (NAC (NNP Chief)
            (PP (IN in)
              (NP
                (NP (NNP War))
                (, ,)
                (NP
                  (NP (DT the) (NN Man))
                  (PP (IN of)
                    (NP (CD Sixty) (NNS Spears))))
                (, ,))))
          (NN Howled))
        (PP (IN in)
          (NP (PRP$ his) (NN torment)))
        (, ,)
        (VP (VBN fettered)
          (PP (IN by)
            (NP (DT the) (NNPS Priests))))
        (, ,))
      (ADVP (CC But))
      (VP (VBD dared) (RB not)
        (VP (VB come)
          (PP (TO to)
            (NP (PRP her)))
          (S
            (VP (TO to)
              (VP (VB drag)
                (NP (PRP her))
                (ADVP (RB forth))))))))
    (, ,)
    (CC And)
    (S
      (VP (VBD dared) (RB not)
        (VP (VB lift)
          (NP (PRP$ his) (NN spear))
          (PP (IN against)
            (NP (DT the) (NNPS Priests))))))
    (. .)))

det(Howled-12, The-1)
dep(Howled-12, Chief-2)
case(War-4, in-3)
nmod:in(Chief-2, War-4)
det(Man-7, the-6)
appos(War-4, Man-7)
case(Spears-10, of-8)
nummod(Spears-10, Sixty-9)
nmod:of(Man-7, Spears-10)
nsubj(dared-23, Howled-12)
nsubj(dared-34, Howled-12)
case(torment-15, in-13)
nmod:poss(torment-15, his-14)
nmod:in(Howled-12, torment-15)
acl(Howled-12, fettered-17)
case(Priests-20, by-18)
det(Priests-20, the-19)
nmod:by(fettered-17, Priests-20)
advmod(dared-23, But-22)
root(ROOT-0, dared-23)
neg(dared-23, not-24)
dep(dared-23, come-25)
case(her-27, to-26)
nmod:to(come-25, her-27)
mark(drag-29, to-28)
xcomp(come-25, drag-29)
dobj(drag-29, her-30)
advmod(drag-29, forth-31)
cc(dared-23, And-33)
conj:and(dared-23, dared-34)
neg(dared-34, not-35)
dep(dared-34, lift-36)
nmod:poss(spear-38, his-37)
dobj(lift-36, spear-38)
case(Priests-41, against-39)
det(Priests-41, the-40)
nmod:against(lift-36, Priests-41)

(ROOT
  (S (RB Then)
    (NP (DT all) (NNS men))
    (VP (VBD wept))
    (. .)))

advmod(wept-4, Then-1)
det(men-3, all-2)
nsubj(wept-4, men-3)
root(ROOT-0, wept-4)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN Priest))
          (PP (IN of)
            (NP
              (NP (NNP Kysh) (NNP Bent))
              (PP (IN with)
                (NP (DT a) (CD hundred) (NNS winters)))))
          (, ,)
          (ADJP (JJ hairless) (, ,) (JJ blind)))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBN taloned)
          (PP (IN as)
            (NP (DT the) (JJ great) (NN Snow-Eagle)))))
      (VP (VBZ is)))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(Priest-4, a-3)
nsubj(was-2, Priest-4)
case(Bent-7, of-5)
compound(Bent-7, Kysh-6)
nmod:of(Priest-4, Bent-7)
case(winters-11, with-8)
det(winters-11, a-9)
nummod(winters-11, hundred-10)
nmod:with(Bent-7, winters-11)
amod(blind-15, hairless-13)
amod(Priest-4, blind-15)
cc(was-2, And-17)
csubj(is-23, taloned-18)
case(Snow-Eagle-22, as-19)
det(Snow-Eagle-22, the-20)
amod(Snow-Eagle-22, great-21)
nmod:as(taloned-18, Snow-Eagle-22)
conj:and(was-2, is-23)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN seat))
      (VP (VBD was)
        (NP
          (NP (JJS nearest))
          (PP (TO to)
            (NP (DT the) (NNS altar-fires))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (VP (VBN counted)
          (ADJP (JJ dumb))
          (PP (IN among)
            (NP (DT the) (NNPS Priests))))))
    (. .)))

nmod:poss(seat-2, His-1)
nsubj(nearest-4, seat-2)
cop(nearest-4, was-3)
root(ROOT-0, nearest-4)
case(altar-fires-7, to-5)
det(altar-fires-7, the-6)
nmod:to(nearest-4, altar-fires-7)
cc(nearest-4, And-9)
nsubjpass(counted-12, he-10)
auxpass(counted-12, was-11)
conj:and(nearest-4, counted-12)
xcomp(counted-12, dumb-13)
case(Priests-16, among-14)
det(Priests-16, the-15)
nmod:among(counted-12, Priests-16)

(ROOT
  (S (CC But)
    (, ,)
    (SBAR (IN whether)
      (S
        (NP (NNP Kysh))
        (VP (VBZ decreed)
          (PRN (, ,)
            (CC or)
            (PP (IN from)
              (NP (NNP Taman))))
          (NP
            (NP (DT The) (JJ impotent) (NN tongue))
            (VP (VBN found)
              (S
                (ADJP (JJ utterance))))))))
    (NP (PRP we))
    (VP (VBP know)
      (ADVP (RB As) (JJ little)
        (PP (IN as)
          (NP (DT the) (NNS bats))))
      (PP (IN beneath)
        (NP (DT the) (NNS eaves))))
    (. .)))

cc(know-16, But-1)
mark(decreed-5, whether-3)
nsubj(decreed-5, Kysh-4)
advcl(know-16, decreed-5)
cc(Taman-9, or-7)
case(Taman-9, from-8)
dep(decreed-5, Taman-9)
det(tongue-12, The-10)
amod(tongue-12, impotent-11)
dobj(decreed-5, tongue-12)
acl(tongue-12, found-13)
xcomp(found-13, utterance-14)
nsubj(know-16, we-15)
root(ROOT-0, know-16)
advmod(little-18, As-17)
advmod(know-16, little-18)
case(bats-21, as-19)
det(bats-21, the-20)
nmod:as(little-18, bats-21)
case(eaves-24, beneath-22)
det(eaves-24, the-23)
nmod:beneath(know-16, eaves-24)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ cried)
      (SBAR (RB so) (IN that)
        (S
          (NP (PRP they))
          (VP (VBD heard)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD stood)
                  (PP (IN without)))
                (: :))))))
      (: --) (`` ``)
      (PP (TO To)
        (NP (DT the) (NNP Unlighted) (NNP Shrine))))
    (. !) ('' '')))

nsubj(cried-2, He-1)
root(ROOT-0, cried-2)
mark(heard-6, so-3)
mwe(so-3, that-4)
nsubj(heard-6, they-5)
advcl(cried-2, heard-6)
nsubj(stood-8, who-7)
ccomp(heard-6, stood-8)
nmod(stood-8, without-9)
case(Shrine-16, To-13)
det(Shrine-16, the-14)
compound(Shrine-16, Unlighted-15)
nmod:to(cried-2, Shrine-16)

(ROOT
  (S (CC and)
    (S
      (VP (VBN crept)
        (PP (RP aside)
          (PP (NNP Into)
            (NP
              (NP (DT the) (NN shadow))
              (PP (IN of)
                (NP (PRP$ his) (JJ fallen) (NNP God)
                  (CC And)
                  (NNP whimpered))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Bisesa))
      (VP (VBD went)
        (NP (PRP$ her) (NN way))))
    (. .)))

cc(crept-2, and-1)
root(ROOT-0, crept-2)
dep(shadow-6, aside-3)
dep(shadow-6, Into-4)
det(shadow-6, the-5)
advcl(crept-2, shadow-6)
case(God-10, of-7)
nmod:poss(God-10, his-8)
amod(God-10, fallen-9)
nmod:of(shadow-6, God-10)
cc(God-10, And-11)
nmod:of(shadow-6, whimpered-12)
conj:and(God-10, whimpered-12)
cc(crept-2, and-14)
nsubj(went-16, Bisesa-15)
conj:and(crept-2, went-16)
nmod:poss(way-18, her-17)
dobj(went-16, way-18)

(ROOT
  (S
    (S
      (NP (DT That) (NN night))
      (, ,)
      (NP
        (NP (DT the) (JJ slow) (NNS mists))
        (PP (IN of)
          (NP (DT the) (NN evening))))
      (VP
        (VP (VBD dropped))
        (, ,)
        (VP (VBD Dropped)
          (PP (IN as)
            (NP (DT a) (NN cloth)))
          (PP (IN upon)
            (NP (DT the) (NN dead))))
        (, ,)
        (CC and)
        (VP (VBD rose)
          (S
            (VP
              (VP (VBG Above)
                (NP (DT the) (NNS roofs)))
              (, ,)
              (CC and)
              (VP
                (PP (IN by)
                  (NP (DT the) (NNP Unlighted) (NNP Shrine) (NNP Lay)))
                (PP (IN as)
                  (NP
                    (NP (DT the) (JJ slimy) (NN water))
                    (PP (IN of)
                      (NP (DT the) (NNS troughs))))))))
          (SBAR
            (WHADVP (WRB When))
            (S
              (NP (NN murrain))
              (VP (VBZ thins)
                (NP
                  (NP (DT the) (NNS cattle))
                  (PP (IN of)
                    (NP (NNP Er-Heb))))))))))
    (: :)
    (S (CC And)
      (ADVP (RB through))
      (NP (DT the) (NN mist) (NNS men))
      (VP (VBD heard)
        (NP (DT the) (NNP Red) (NNP Horse) (NN feed))))
    (. .)))

det(night-2, That-1)
nmod:tmod(dropped-10, night-2)
det(mists-6, the-4)
amod(mists-6, slow-5)
nsubj(dropped-10, mists-6)
nsubj(Dropped-12, mists-6)
nsubj(rose-21, mists-6)
case(evening-9, of-7)
det(evening-9, the-8)
nmod:of(mists-6, evening-9)
root(ROOT-0, dropped-10)
conj:and(dropped-10, Dropped-12)
case(cloth-15, as-13)
det(cloth-15, a-14)
nmod:as(Dropped-12, cloth-15)
case(dead-18, upon-16)
det(dead-18, the-17)
nmod:upon(Dropped-12, dead-18)
cc(dropped-10, and-20)
conj:and(dropped-10, rose-21)
ccomp(rose-21, Above-22)
det(roofs-24, the-23)
dobj(Above-22, roofs-24)
cc(Above-22, and-26)
case(Lay-31, by-27)
det(Lay-31, the-28)
compound(Lay-31, Unlighted-29)
compound(Lay-31, Shrine-30)
ccomp(rose-21, Lay-31)
conj:and(Above-22, Lay-31)
case(water-35, as-32)
det(water-35, the-33)
amod(water-35, slimy-34)
nmod:as(Lay-31, water-35)
case(troughs-38, of-36)
det(troughs-38, the-37)
nmod:of(water-35, troughs-38)
advmod(thins-41, When-39)
nsubj(thins-41, murrain-40)
advcl(rose-21, thins-41)
det(cattle-43, the-42)
dobj(thins-41, cattle-43)
case(Er-Heb-45, of-44)
nmod:of(cattle-43, Er-Heb-45)
cc(heard-52, And-47)
advmod(heard-52, through-48)
det(men-51, the-49)
compound(men-51, mist-50)
nsubj(heard-52, men-51)
parataxis(dropped-10, heard-52)
det(feed-56, the-53)
compound(feed-56, Red-54)
compound(feed-56, Horse-55)
dobj(heard-52, feed-56)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP
          (NP (NNP Armod) (POS 's))
          (NN house)))
      (NP (PRP they))
      (VP (VBD burned)
        (NP
          (NP
            (NP (NNP Bisesa) (POS 's))
            (NN dower))
          (, ,)
          (SBAR (CC And)
            (S
              (VP
                (VP (VBD killed)
                  (NP (PRP$ her) (JJ black) (NN bull) (NN Tor)))
                (, ,)
                (CC and)
                (VP (VBD broke)
                  (NP (PRP$ her) (NN wheel)))))))))
    (, ,)
    (CC And)
    (S
      (VP (VBN loosed)
        (NP (PRP$ her) (NN hair))
        (, ,)
        (PP (IN as) (IN for)
          (NP
            (NP (DT the) (NN marriage-feast))
            (, ,)
            (SBAR (IN With)
              (S
                (VP (VBZ cries)
                  (ADJP (RBR more) (JJ loud)
                    (PP (IN than)
                      (NP
                        (NP (VBG mourning))
                        (PP (IN for)
                          (NP (DT the) (NN dead)))))))))))))
    (. .)))

case(house-4, In-1)
nmod:poss(house-4, Armod-2)
case(Armod-2, 's-3)
nmod:in(burned-6, house-4)
nsubj(burned-6, they-5)
nsubj(loosed-24, they-5)
root(ROOT-0, burned-6)
nmod:poss(dower-9, Bisesa-7)
case(Bisesa-7, 's-8)
dobj(burned-6, dower-9)
cc(killed-12, And-11)
dep(dower-9, killed-12)
nmod:poss(Tor-16, her-13)
amod(Tor-16, black-14)
compound(Tor-16, bull-15)
dobj(killed-12, Tor-16)
cc(killed-12, and-18)
dep(dower-9, broke-19)
conj:and(killed-12, broke-19)
nmod:poss(wheel-21, her-20)
dobj(broke-19, wheel-21)
cc(burned-6, And-23)
conj:and(burned-6, loosed-24)
nmod:poss(hair-26, her-25)
dobj(loosed-24, hair-26)
case(marriage-feast-31, as-28)
mwe(as-28, for-29)
det(marriage-feast-31, the-30)
nmod:as_for(loosed-24, marriage-feast-31)
mark(cries-34, With-33)
dep(marriage-feast-31, cries-34)
advmod(loud-36, more-35)
xcomp(cries-34, loud-36)
case(mourning-38, than-37)
nmod:than(loud-36, mourning-38)
case(dead-41, for-39)
det(dead-41, the-40)
nmod:for(mourning-38, dead-41)

(ROOT
  (S
    (PP (IN Across)
      (NP (DT the) (NNS fields)))
    (, ,)
    (S
      (PP (IN from)
        (NP
          (NP (NNP Armod) (POS 's))
          (NN dwelling-place)))
      (, ,)
      (NP (PRP We))
      (VP (VBD heard)
        (NP
          (NP
            (NP (NNP Bisesa) (NNP weeping))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP she))
                (VP (VBD passed)
                  (S
                    (VP (TO To)
                      (VP (VB seek)
                        (NP (DT the) (NNP Unlighted) (NNP Shrine)))))))))
          (: ;)
          (NP
            (NP (DT the) (NNP Red) (NNP Horse))
            (UCP
              (ADJP (JJ neighed))
              (CC And)
              (VP (VBN followed)
                (NP (PRP her))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN on)
        (NP (DT the) (NN river-mint)))
      (NP (PRP$ His) (NNS hooves))
      (VP (VBD struck)
        (ADJP (JJ dead)
          (CC and)
          (JJ heavy))
        (PP (IN in)
          (NP (PRP$ our) (NNS ears)))))
    (. .)))

case(fields-3, Across-1)
det(fields-3, the-2)
nmod:across(heard-11, fields-3)
case(dwelling-place-8, from-5)
nmod:poss(dwelling-place-8, Armod-6)
case(Armod-6, 's-7)
nmod:from(heard-11, dwelling-place-8)
nsubj(heard-11, We-10)
root(ROOT-0, heard-11)
compound(weeping-13, Bisesa-12)
dobj(heard-11, weeping-13)
advmod(passed-16, where-14)
nsubj(passed-16, she-15)
nsubj:xsubj(seek-18, she-15)
acl:relcl(weeping-13, passed-16)
mark(seek-18, To-17)
xcomp(passed-16, seek-18)
det(Shrine-21, the-19)
compound(Shrine-21, Unlighted-20)
dobj(seek-18, Shrine-21)
det(Horse-25, the-23)
compound(Horse-25, Red-24)
dep(weeping-13, Horse-25)
amod(Horse-25, neighed-26)
cc(neighed-26, And-27)
amod(Horse-25, followed-28)
conj:and(neighed-26, followed-28)
dobj(followed-28, her-29)
cc(heard-11, and-31)
case(river-mint-34, on-32)
det(river-mint-34, the-33)
nmod:on(struck-37, river-mint-34)
nmod:poss(hooves-36, His-35)
nsubj(struck-37, hooves-36)
conj:and(heard-11, struck-37)
xcomp(struck-37, dead-38)
cc(dead-38, and-39)
xcomp(struck-37, heavy-40)
conj:and(dead-38, heavy-40)
case(ears-43, in-41)
nmod:poss(ears-43, our-42)
nmod:in(struck-37, ears-43)

(ROOT
  (S
    (PP (IN Out)
      (PP (IN of)
        (NP
          (NP (DT the) (NNS mists))
          (PP (IN of)
            (NP (NN evening))))))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (DT the) (NN star))
        (PP (IN Of)
          (NP (NNP Ao-Safai)))
        (VP (VBZ climbs)
          (PP (IN through)
            (NP (DT the) (JJ black) (NN snow-blur)))
          (S
            (VP (TO To)
              (VP (VB show)
                (SBAR
                  (S
                    (NP (DT the) (NN Pass))
                    (VP (VBZ is)
                      (ADJP (JJ clear)))))))))))
    (, ,)
    (NP (NNP Bisesa))
    (VP (VBD stepped)
      (S
        (PP (IN Upon)
          (NP
            (NP (DT the) (JJ great) (JJ gray) (NN slope))
            (PP (IN of)
              (NP
                (NP (JJ mortised) (NN stone))
                (, ,)
                (NP
                  (NP (DT The) (NN Causeway))
                  (PP (IN of)
                    (NP (NNP Taman))))))))))
    (. .)))

case(mists-4, Out-1)
mwe(Out-1, of-2)
det(mists-4, the-3)
nmod:out_of(stepped-26, mists-4)
case(evening-6, of-5)
nmod:of(mists-4, evening-6)
mark(climbs-13, as-8)
det(star-10, the-9)
nsubj(climbs-13, star-10)
nsubj:xsubj(show-19, star-10)
case(Ao-Safai-12, Of-11)
nmod:of(climbs-13, Ao-Safai-12)
advcl(stepped-26, climbs-13)
case(snow-blur-17, through-14)
det(snow-blur-17, the-15)
amod(snow-blur-17, black-16)
nmod:through(climbs-13, snow-blur-17)
mark(show-19, To-18)
xcomp(climbs-13, show-19)
det(Pass-21, the-20)
nsubj(clear-23, Pass-21)
cop(clear-23, is-22)
ccomp(show-19, clear-23)
nsubj(stepped-26, Bisesa-25)
root(ROOT-0, stepped-26)
case(slope-31, Upon-27)
det(slope-31, the-28)
amod(slope-31, great-29)
amod(slope-31, gray-30)
nmod:upon(stepped-26, slope-31)
case(stone-34, of-32)
amod(stone-34, mortised-33)
nmod:of(slope-31, stone-34)
det(Causeway-37, The-36)
appos(stone-34, Causeway-37)
case(Taman-39, of-38)
nmod:of(Causeway-37, Taman-39)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Red) (NNP Horse))
      (VP (VBD neighed)
        (S
          (PP (IN Behind)
            (NP (PRP her))))
        (PP (TO to)
          (NP (DT the) (NNP Unlighted) (NNP Shrine)))))
    (: --)
    (S
      (NP (RB then))
      (VP (VBD fled)
        (ADJP (JJ North)
          (PP (TO to)
            (NP (DT the) (NNP Mountain))))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP$ his) (NN stable))
            (VP (VBZ lies))))))
    (. .)))

det(Horse-3, The-1)
compound(Horse-3, Red-2)
nsubj(neighed-4, Horse-3)
root(ROOT-0, neighed-4)
case(her-6, Behind-5)
nmod:behind(neighed-4, her-6)
case(Shrine-10, to-7)
det(Shrine-10, the-8)
compound(Shrine-10, Unlighted-9)
nmod:to(neighed-4, Shrine-10)
nsubj(fled-13, then-12)
parataxis(neighed-4, fled-13)
xcomp(fled-13, North-14)
case(Mountain-17, to-15)
det(Mountain-17, the-16)
nmod:to(North-14, Mountain-17)
advmod(lies-21, where-18)
nmod:poss(stable-20, his-19)
nsubj(lies-21, stable-20)
advcl(fled-13, lies-21)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP know)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD dared)
              (NP
                (NP (DT the) (NN anger))
                (PP (IN of)
                  (NP (NNP Taman)))))))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBN watched)
          (NP (DT that) (NN night))
          (PP (IN above)
            (NP (DT the) (JJ clinging) (NNS mists)))
          (, ,)
          (ADVP (RB Far) (IN up)
            (NP (DT the) (NN hill)))))
      (, ,)
      (NP (NNP Bisesa))
      (VP (VBZ 's)
        (VP (VBG passing)
          (PRT (RP in)))))
    (. .)))

nsubj(know-2, They-1)
root(ROOT-0, know-2)
nsubj(dared-4, who-3)
ccomp(know-2, dared-4)
det(anger-6, the-5)
dobj(dared-4, anger-6)
case(Taman-8, of-7)
nmod:of(anger-6, Taman-8)
cc(know-2, And-10)
advcl(passing-26, watched-11)
det(night-13, that-12)
nmod:tmod(watched-11, night-13)
case(mists-17, above-14)
det(mists-17, the-15)
amod(mists-17, clinging-16)
nmod:above(watched-11, mists-17)
advmod(watched-11, Far-19)
case(Far-19, up-20)
det(hill-22, the-21)
nmod:npmod(Far-19, hill-22)
nsubj(passing-26, Bisesa-24)
aux(passing-26, 's-25)
conj:and(know-2, passing-26)
compound:prt(passing-26, in-27)

(ROOT
  (S
    (S
      (S
        (NP (PRP She))
        (VP (VBD set)
          (NP (PRP$ her) (NN hand))
          (PP (IN upon)
            (NP
              (NP (DT the) (NN carven) (NN door))
              (, ,)
              (VP (VBN Fouled)
                (PP (IN by)
                  (NP (DT a) (JJ myriad) (NNS bats))))
              (, ,)))))
      (CC and)
      (S
        (S
          (ADJP (JJ black)
            (PP (IN with)
              (NP (NN time)))))
        (, ,)
        (NP (NNP Whereon))
        (VP (VBZ is)
          (VP (VBN graved)
            (NP
              (NP (DT the) (NN Glory))
              (PP (IN of)
                (NP (NNP Taman)))))))
      (PP (IN In)
        (NP
          (NP (NNS letters))
          (ADJP (JJR older)
            (PP (IN than)
              (NP (DT the) (NNP Ao-Safai)))))))
    (: ;)
    (S (CC And)
      (ADVP (RB twice))
      (NP (PRP she))
      (VP (VBD turned)
        (PRT (RP aside))
        (NP
          (NP
            (NP
              (QP (CC and)
                (RB twice)))
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBD wept) (, ,)
                  (S
                    (VP (VBN Cast)
                      (PRT (RP down))
                      (PP (IN upon)
                        (NP (DT the) (NN threshold)))
                      (, ,)
                      (S
                        (VP (VBG clamouring)
                          (SBAR
                            (S
                              (PP (IN For)
                                (NP (PRP him)))
                              (NP (PRP she))
                              (VP (VBD loved))))))))))))
          (: --)
          (NP
            (NP (DT the) (NN Man))
            (PP (IN of)
              (NP
                (NP (CD Sixty) (NNS Spears))
                (PRN (, ,)
                  (FRAG (CC And)
                    (PP (IN for)
                      (NP (PRP$ her) (NN father))))
                  (, ,)))))
          (: --)
          (CC and)
          (NP
            (NP (DT the) (JJ black) (NN bull) (NN Tor))
            (, ,)
            (NP (JJ Hers))
            (CC and)
            (NP (PRP$ her) (NN pride))))))
    (. .)))

nsubj(set-2, She-1)
root(ROOT-0, set-2)
nmod:poss(hand-4, her-3)
dobj(set-2, hand-4)
case(door-8, upon-5)
det(door-8, the-6)
compound(door-8, carven-7)
nmod:upon(set-2, door-8)
acl(door-8, Fouled-10)
case(bats-14, by-11)
det(bats-14, a-12)
amod(bats-14, myriad-13)
nmod:by(Fouled-10, bats-14)
cc(set-2, and-16)
ccomp(graved-23, black-17)
case(time-19, with-18)
nmod:with(black-17, time-19)
nsubjpass(graved-23, Whereon-21)
auxpass(graved-23, is-22)
conj:and(set-2, graved-23)
det(Glory-25, the-24)
dobj(graved-23, Glory-25)
case(Taman-27, of-26)
nmod:of(Glory-25, Taman-27)
case(letters-29, In-28)
nmod:in(set-2, letters-29)
amod(letters-29, older-30)
case(Ao-Safai-33, than-31)
det(Ao-Safai-33, the-32)
nmod:than(older-30, Ao-Safai-33)
cc(turned-38, And-35)
advmod(turned-38, twice-36)
nsubj(turned-38, she-37)
parataxis(set-2, turned-38)
compound:prt(turned-38, aside-39)
cc(twice-41, and-40)
dobj(turned-38, twice-41)
nsubj(wept-43, she-42)
acl:relcl(twice-41, wept-43)
dep(wept-43, Cast-45)
compound:prt(Cast-45, down-46)
case(threshold-49, upon-47)
det(threshold-49, the-48)
nmod:upon(Cast-45, threshold-49)
xcomp(Cast-45, clamouring-51)
case(him-53, For-52)
nmod:for(loved-55, him-53)
nsubj(loved-55, she-54)
ccomp(clamouring-51, loved-55)
det(Man-58, the-57)
dobj(turned-38, Man-58)
conj:and(twice-41, Man-58)
case(Spears-61, of-59)
nummod(Spears-61, Sixty-60)
nmod:of(Man-58, Spears-61)
dep(Spears-61, And-63)
case(father-66, for-64)
nmod:poss(father-66, her-65)
nmod:for(And-63, father-66)
cc(twice-41, and-69)
det(Tor-73, the-70)
amod(Tor-73, black-71)
compound(Tor-73, bull-72)
dobj(turned-38, Tor-73)
conj:and(twice-41, Tor-73)
conj:and(twice-41, Hers-75)
conj:and(Tor-73, Hers-75)
cc(Tor-73, and-76)
nmod:poss(pride-78, her-77)
conj:and(twice-41, pride-78)
conj:and(Tor-73, pride-78)

(ROOT
  (S
    (S
      (NP (NNP Yea))
      (, ,)
      (ADVP (RB twice))
      (NP (PRP she))
      (VP (VBD turned)
        (PRT (RP away))
        (X
          (PP (IN Before)
            (NP
              (NP (DT the) (JJ awful) (NNS darkness))
              (PP (IN of)
                (NP (DT the) (NN door))))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT the) (JJ great) (NN horror))
        (PP (IN of)
          (NP
            (NP (DT the) (NNP Wall))
            (PP (IN of)
              (NP (NN Man)))))
        (SBAR
          (WHADVP (WRB Where))
          (S
            (NP (NNP Man))
            (VP (VBZ is)
              (VP (VBN made)
                (NP
                  (NP (DT the) (NN plaything))
                  (PP (IN of)
                    (NP (NNP Taman)))))))))
      (, ,)
      (NP (DT An) (NNPS Eyeless))
      (VP (VBP Face)
        (SBAR (IN that)
          (S
            (VP
              (VP (VBZ waits)
                (ADVP (RB above)))
              (CC and)
              (VP (VBZ laughs)))))))
    (. .)))

nsubj(turned-5, Yea-1)
advmod(she-4, twice-3)
nsubj(turned-5, she-4)
root(ROOT-0, turned-5)
compound:prt(turned-5, away-6)
case(darkness-10, Before-7)
det(darkness-10, the-8)
amod(darkness-10, awful-9)
dep(turned-5, darkness-10)
case(door-13, of-11)
det(door-13, the-12)
nmod:of(darkness-10, door-13)
cc(turned-5, And-15)
det(horror-18, the-16)
amod(horror-18, great-17)
nsubj(Face-35, horror-18)
case(Wall-21, of-19)
det(Wall-21, the-20)
nmod:of(horror-18, Wall-21)
case(Man-23, of-22)
nmod:of(Wall-21, Man-23)
advmod(made-27, Where-24)
nsubjpass(made-27, Man-25)
auxpass(made-27, is-26)
acl:relcl(horror-18, made-27)
det(plaything-29, the-28)
dobj(made-27, plaything-29)
case(Taman-31, of-30)
nmod:of(plaything-29, Taman-31)
det(Eyeless-34, An-33)
nsubj(Face-35, Eyeless-34)
conj:and(turned-5, Face-35)
mark(waits-37, that-36)
ccomp(Face-35, waits-37)
advmod(waits-37, above-38)
cc(waits-37, and-39)
ccomp(Face-35, laughs-40)
conj:and(waits-37, laughs-40)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (JJ third) (NN time))
      (SBAR
        (S
          (NP (PRP she))
          (VP
            (VP (VBD cried))
            (CC and)
            (VP (VBD put)
              (NP (PRP$ her) (NNS palms))
              (PP (IN Against)
                (NP (DT the) (JJ hewn) (NN stone))))))))
    (VP
      (VP (VBZ leaves))
      (, ,)
      (CC and)
      (VP (VBD prayed)
        (S
          (NP (NNP Taman))
          (VP (TO To)
            (VP
              (VP (VB spare)
                (NP (NNS Er-Heb)))
              (CC and)
              (VP (VB take)
                (NP (PRP$ her) (NN life))
                (PP (IN for)
                  (NP (NN price)))))))))
    (. .)))

cc(leaves-15, But-1)
det(time-4, the-2)
amod(time-4, third-3)
nsubj(leaves-15, time-4)
nsubj(prayed-18, time-4)
nsubj(cried-6, she-5)
nsubj(put-8, she-5)
acl:relcl(time-4, cried-6)
cc(cried-6, and-7)
acl:relcl(time-4, put-8)
conj:and(cried-6, put-8)
nmod:poss(palms-10, her-9)
dobj(put-8, palms-10)
case(stone-14, Against-11)
det(stone-14, the-12)
amod(stone-14, hewn-13)
nmod:against(put-8, stone-14)
root(ROOT-0, leaves-15)
cc(leaves-15, and-17)
conj:and(leaves-15, prayed-18)
dobj(prayed-18, Taman-19)
nsubj:xsubj(spare-21, Taman-19)
nsubj:xsubj(take-24, Taman-19)
mark(spare-21, To-20)
xcomp(prayed-18, spare-21)
dobj(spare-21, Er-Heb-22)
cc(spare-21, and-23)
xcomp(prayed-18, take-24)
conj:and(spare-21, take-24)
nmod:poss(life-26, her-25)
dobj(take-24, life-26)
case(price-28, for-27)
nmod:for(take-24, price-28)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP know)
        (SBAR
          (S
            (S
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD watched))))
              (, ,)
              (NP (DT the) (NNS doors))
              (VP (VBD were)
                (NP (NN rent))
                (ADVP (RB apart))))
            (CC And)
            (S
              (S
                (VP (VBN closed)
                  (PP (IN upon)
                    (NP (NNP Bisesa)))))
              (, ,)
              (CC and)
              (S
                (NP (DT the) (NN rain) (NN Broke))
                (PP (IN like)
                  (NP
                    (NP (DT a) (NN flood))
                    (PP (IN across)
                      (NP (DT the) (NNP Valley)))))))))))
    (, ,)
    (VP (VBD washed)
      (NP (DT The) (NN mist))
      (ADVP (RB away)))
    (: ;)
    (CC but)
    (ADVP
      (ADVP (RBR louder))
      (PP (IN than)
        (NP (DT the) (NN rain))))
    (S
      (NP
        (NP (DT The) (NN thunder))
        (PP (IN of)
          (NP (NNP Taman))))
      (VP (VBD filled)
        (NP (NNS men))
        (PP (IN with)
          (NP (NN fear)))))
    (. .)))

nsubj(know-2, They-1)
ccomp(washed-27, know-2)
nsubj(watched-4, who-3)
advcl(rent-9, watched-4)
det(doors-7, the-6)
nsubj(rent-9, doors-7)
nsubj(closed-12, doors-7)
cop(rent-9, were-8)
dep(know-2, rent-9)
advmod(rent-9, apart-10)
cc(rent-9, And-11)
dep(know-2, closed-12)
conj:and(rent-9, closed-12)
case(Bisesa-14, upon-13)
nmod:upon(closed-12, Bisesa-14)
cc(closed-12, and-16)
det(Broke-19, the-17)
compound(Broke-19, rain-18)
conj:and(rent-9, Broke-19)
conj:and(closed-12, Broke-19)
case(flood-22, like-20)
det(flood-22, a-21)
dep(Broke-19, flood-22)
case(Valley-25, across-23)
det(Valley-25, the-24)
nmod:across(flood-22, Valley-25)
root(ROOT-0, washed-27)
det(mist-29, The-28)
dobj(washed-27, mist-29)
advmod(washed-27, away-30)
cc(washed-27, but-32)
advmod(washed-27, louder-33)
case(rain-36, than-34)
det(rain-36, the-35)
nmod:than(louder-33, rain-36)
det(thunder-38, The-37)
nsubj(filled-41, thunder-38)
case(Taman-40, of-39)
nmod:of(thunder-38, Taman-40)
ccomp(washed-27, filled-41)
dobj(filled-41, men-42)
case(fear-44, with-43)
nmod:with(filled-41, fear-44)

(ROOT
  (S
    (NP (DT Some))
    (VP (VBP say)
      (SBAR (IN that)
        (S
          (PP (IN from)
            (NP (DT the) (NNP Unlighted) (NNP Shrine)))
          (NP (PRP she))
          (VP (VBD cried)
            (PP (IN For)
              (NP
                (NP
                  (ADJP (JJ succour) (, ,) (RB very) (JJ pitifully) (, ,))
                  (NN thrice))
                (, ,)
                (CC And)
                (NP
                  (NP (NNS others))
                  (SBAR (IN that)
                    (S
                      (NP (PRP she))
                      (VP
                        (VP (VBD sang))
                        (CC and)
                        (VP (VBD had)
                          (NP (DT no) (NN fear)))))))))))))
    (. .)))

nsubj(say-2, Some-1)
root(ROOT-0, say-2)
mark(cried-9, that-3)
case(Shrine-7, from-4)
det(Shrine-7, the-5)
compound(Shrine-7, Unlighted-6)
nmod:from(cried-9, Shrine-7)
nsubj(cried-9, she-8)
ccomp(say-2, cried-9)
case(thrice-16, For-10)
amod(pitifully-14, succour-11)
advmod(pitifully-14, very-13)
amod(thrice-16, pitifully-14)
nmod:for(cried-9, thrice-16)
cc(thrice-16, And-18)
nmod:for(cried-9, others-19)
conj:and(thrice-16, others-19)
mark(sang-22, that-20)
nsubj(sang-22, she-21)
nsubj(had-24, she-21)
dep(others-19, sang-22)
cc(sang-22, and-23)
dep(others-19, had-24)
conj:and(sang-22, had-24)
neg(fear-26, no-25)
dobj(had-24, fear-26)

(ROOT
  (FRAG (CC And)
    (NP
      (NP (DT some))
      (SBAR (IN that)
        (S
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP (DT neither) (NN song)
                (CC nor)
                (NN cry))))
          (, ,)
          (CC But)
          (S
            (NP
              (NP (JJ only) (NN thunder))
              (CC and)
              (NP (DT the) (NN lashing)))
            (VP (VB rain))))))
    (. .)))

cc(some-2, And-1)
root(ROOT-0, some-2)
mark(was-5, that-3)
expl(was-5, there-4)
dep(some-2, was-5)
cc:preconj(song-7, neither-6)
nsubj(was-5, song-7)
cc(song-7, nor-8)
nsubj(was-5, cry-9)
conj:nor(song-7, cry-9)
cc(was-5, But-11)
amod(thunder-13, only-12)
nsubj(rain-17, thunder-13)
cc(thunder-13, and-14)
det(lashing-16, the-15)
conj:and(thunder-13, lashing-16)
nsubj(rain-17, lashing-16)
dep(some-2, rain-17)
conj:but(was-5, rain-17)

(ROOT
  (S
    (NP
      (NP (NNP Howbeit))
      (, ,)
      (SBAR (IN in)
        (S
          (NP (DT the) (NN morning) (NNS men))
          (VP (VBD rose)
            (PRT (RP up)))))
      (, ,))
    (VP (VBD Perplexed)
      (PP (IN with)
        (NP (NN horror)))
      (, ,)
      (S
        (VP (VBG crowding)
          (PP (TO to)
            (NP (DT the) (NNP Shrine))))))
    (. .)))

nsubj(Perplexed-10, Howbeit-1)
mark(rose-7, in-3)
det(men-6, the-4)
compound(men-6, morning-5)
nsubj(rose-7, men-6)
acl:relcl(Howbeit-1, rose-7)
compound:prt(rose-7, up-8)
root(ROOT-0, Perplexed-10)
case(horror-12, with-11)
nmod:with(Perplexed-10, horror-12)
xcomp(Perplexed-10, crowding-14)
case(Shrine-17, to-15)
det(Shrine-17, the-16)
nmod:to(crowding-14, Shrine-17)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (NNP Er-Heb))
        (VP (VBD was)
          (VP (VBN gathered)
            (PP (IN at)
              (NP (DT the) (NNS doors)))))))
    (NP (DT The) (NNPS Priests))
    (VP (VBD made)
      (SBAR
        (S
          (S
            (VP (VBN lamentation)
              (CC and)
              (VBN passed)
              (PP (IN in)
                (PP (TO To)
                  (NP
                    (NP (DT a) (JJ strange) (NNP Temple))
                    (CC and)
                    (NP
                      (NP (DT a) (NNP God))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBD feared))))))))))
          (CC But)
          (S
            (VP (VBD knew) (RB not))))))
    (. .)))

cc(made-11, And-1)
advmod(gathered-5, when-2)
nsubjpass(gathered-5, Er-Heb-3)
auxpass(gathered-5, was-4)
advcl(made-11, gathered-5)
case(doors-8, at-6)
det(doors-8, the-7)
nmod:at(gathered-5, doors-8)
det(Priests-10, The-9)
nsubj(made-11, Priests-10)
root(ROOT-0, made-11)
dep(made-11, lamentation-12)
cc(lamentation-12, and-13)
dep(made-11, passed-14)
conj:and(lamentation-12, passed-14)
case(Temple-19, in-15)
case(Temple-19, To-16)
det(Temple-19, a-17)
amod(Temple-19, strange-18)
nmod:in(lamentation-12, Temple-19)
cc(Temple-19, and-20)
det(God-22, a-21)
nmod:in(lamentation-12, God-22)
conj:and(Temple-19, God-22)
nsubj(feared-24, they-23)
acl:relcl(God-22, feared-24)
cc(lamentation-12, But-25)
dep(made-11, knew-26)
conj:and(lamentation-12, knew-26)
neg(knew-26, not-27)

(ROOT
  (S
    (S
      (PP (IN From)
        (NP (DT the) (NNS crevices)))
      (NP (DT the) (NN grass))
      (VP (VBD Had)
        (VP (VBN thrust)
          (NP (DT the) (NNS altar-slabs))
          (ADVP (RB apart)))))
    (, ,)
    (S
      (NP (DT the) (NNS walls))
      (VP (VBD Were)
        (ADJP (JJ gray)
          (PP (IN with)
            (NP (NNP stains) (NNP unclean))))))
    (, ,)
    (S
      (NP (DT the) (NNS roof-beams))
      (VP (VBD swelled)
        (PP (IN With)
          (NP
            (NP (JJ many-coloured) (NN growth))
            (PP (IN of)
              (NP (NNS rottenness)))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (NN lichen))
        (ADJP (VBN veiled)
          (NP
            (NP (DT the) (NN Image))
            (PP (IN of)
              (NP (NNP Taman))))))
      (PP (IN In)
        (NP (NNP leprosy))))
    (. .)))

case(crevices-3, From-1)
det(crevices-3, the-2)
nmod:from(thrust-7, crevices-3)
det(grass-5, the-4)
nsubj(thrust-7, grass-5)
aux(thrust-7, Had-6)
root(ROOT-0, thrust-7)
det(altar-slabs-9, the-8)
dobj(thrust-7, altar-slabs-9)
advmod(thrust-7, apart-10)
det(walls-13, the-12)
nsubj(gray-15, walls-13)
cop(gray-15, Were-14)
ccomp(thrust-7, gray-15)
case(unclean-18, with-16)
compound(unclean-18, stains-17)
nmod:with(gray-15, unclean-18)
det(roof-beams-21, the-20)
nsubj(swelled-22, roof-beams-21)
ccomp(thrust-7, swelled-22)
case(growth-25, With-23)
amod(growth-25, many-coloured-24)
nmod:with(swelled-22, growth-25)
case(rottenness-27, of-26)
nmod:of(growth-25, rottenness-27)
cc(thrust-7, And-29)
conj:and(thrust-7, lichen-30)
amod(lichen-30, veiled-31)
det(Image-33, the-32)
dep(veiled-31, Image-33)
case(Taman-35, of-34)
nmod:of(Image-33, Taman-35)
case(leprosy-37, In-36)
dep(lichen-30, leprosy-37)

(ROOT
  (SINV
    (S
      (NP
        (NP (DT The) (NNP Basin))
        (PP (IN of)
          (NP (DT the) (NN Blood))))
      (PP (IN Above)
        (NP (DT the) (NN altar)))
      (VP (VBD held)
        (NP
          (NP (DT the) (NN morning) (NN sun))
          (: :)
          (NP
            (NP (DT A) (JJ winking) (NN ruby))
            (PP (IN on)
              (NP (PRP$ its) (NN heart))))
          (: :))
        (ADVP (RB below))))
    (, ,)
    (VP (VBP Face)
      (NP (NN hid))
      (PP (IN in)
        (NP
          (NP (NNS hands))
          (, ,)
          (NP (DT the) (NN maid)))))
    (NP (NNP Bisesa) (NNP lay))
    (. .)))

det(Basin-2, The-1)
nsubj(held-9, Basin-2)
case(Blood-5, of-3)
det(Blood-5, the-4)
nmod:of(Basin-2, Blood-5)
case(altar-8, Above-6)
det(altar-8, the-7)
nmod:above(held-9, altar-8)
ccomp(Face-23, held-9)
det(sun-12, the-10)
compound(sun-12, morning-11)
dobj(held-9, sun-12)
det(ruby-16, A-14)
amod(ruby-16, winking-15)
dep(sun-12, ruby-16)
case(heart-19, on-17)
nmod:poss(heart-19, its-18)
nmod:on(ruby-16, heart-19)
advmod(held-9, below-21)
root(ROOT-0, Face-23)
dobj(Face-23, hid-24)
case(hands-26, in-25)
nmod:in(Face-23, hands-26)
det(maid-29, the-28)
appos(hands-26, maid-29)
compound(lay-31, Bisesa-30)
nsubj(Face-23, lay-31)

(ROOT
  (S
    (S
      (VP (VBG Er-Heb)
        (PP (IN beyond)
          (NP
            (NP (DT the)
              (NAC (NNPS Hills)
                (PP (IN of)
                  (NP (NNP Ao-Safai) (NNPS Bears))))
              (NN witness))
            (PP (TO to)
              (NP (DT the) (NN truth)))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Ao-Safai) (NNP Hath))
      (VP (VBD told)
        (NP
          (NP (DT the) (NNS men))
          (PP (IN of)
            (NP (NNP Gorukh))))))
    (. .)))

root(ROOT-0, Er-Heb-1)
case(witness-8, beyond-2)
det(witness-8, the-3)
dep(witness-8, Hills-4)
case(Bears-7, of-5)
compound(Bears-7, Ao-Safai-6)
nmod:of(Hills-4, Bears-7)
nmod:beyond(Er-Heb-1, witness-8)
case(truth-11, to-9)
det(truth-11, the-10)
nmod:to(witness-8, truth-11)
cc(Er-Heb-1, and-13)
compound(Hath-15, Ao-Safai-14)
nsubj(told-16, Hath-15)
conj:and(Er-Heb-1, told-16)
det(men-18, the-17)
dobj(told-16, men-18)
case(Gorukh-20, of-19)
nmod:of(men-18, Gorukh-20)

(ROOT
  (S
    (ADVP (RB Thence))
    (NP (DT the) (NN tale))
    (VP (VBZ Comes)
      (ADVP (RB westward))
      (VP (VB o'er)
        (NP (DT the) (NNS peaks))
        (PP (TO to)
          (NP (NNP India)))))
    (. .)))

advmod(Comes-4, Thence-1)
det(tale-3, the-2)
nsubj(Comes-4, tale-3)
root(ROOT-0, Comes-4)
advmod(Comes-4, westward-5)
dep(Comes-4, o'er-6)
det(peaks-8, the-7)
dobj(o'er-6, peaks-8)
case(India-10, to-9)
nmod:to(o'er-6, India-10)

(ROOT
  (S
    (NP (DT THE) (NN EXPLANATION) (NN Love)
      (CC and)
      (NN Death))
    (ADVP (RB once))
    (VP (VBD ceased)
      (NP (PRP$ their) (NN strife))
      (PP (IN At)
        (NP
          (NP (DT the) (NNP Tavern))
          (PP (IN of)
            (NP
              (NP (NNP Man) (POS 's))
              (NN Life))))))
    (. .)))

det(Love-3, THE-1)
compound(Love-3, EXPLANATION-2)
nsubj(ceased-7, Love-3)
cc(Love-3, and-4)
conj:and(Love-3, Death-5)
nsubj(ceased-7, Death-5)
advmod(ceased-7, once-6)
root(ROOT-0, ceased-7)
nmod:poss(strife-9, their-8)
dobj(ceased-7, strife-9)
case(Tavern-12, At-10)
det(Tavern-12, the-11)
nmod:at(ceased-7, Tavern-12)
case(Life-16, of-13)
nmod:poss(Life-16, Man-14)
case(Man-14, 's-15)
nmod:of(Tavern-12, Life-16)

(ROOT
  (S
    (VP
      (VP (VBN Called)
        (PP (IN for)
          (NP (NN wine))))
      (, ,)
      (CC and)
      (VP (VBD threw) (: --)
        (VP (VBN alas))))
    (. !)))

root(ROOT-0, Called-1)
case(wine-3, for-2)
nmod:for(Called-1, wine-3)
cc(Called-1, and-5)
conj:and(Called-1, threw-6)
dep(threw-6, alas-8)

(ROOT
  (NP (: --)
    (NP
      (NP (DT Each))
      (NP (PRP$ his) (NN quiver)))
    (PP (IN on)
      (NP (DT the) (NN grass)))
    (. .)))

root(ROOT-0, Each-2)
nmod:poss(quiver-4, his-3)
dep(Each-2, quiver-4)
case(grass-7, on-5)
det(grass-7, the-6)
nmod:on(Each-2, grass-7)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN bout))
        (VP (VBD was)
          (ADJP (JJ o'er)))))
    (NP (PRP they))
    (VP (VBD found)
      (SBAR
        (S
          (NP (NNP Mingled) (NNS arrows))
          (VP (VBD strewed)
            (NP (DT the) (NN ground))))))
    (. .)))

advmod(o'er-5, When-1)
det(bout-3, the-2)
nsubj(o'er-5, bout-3)
cop(o'er-5, was-4)
advcl(found-7, o'er-5)
nsubj(found-7, they-6)
root(ROOT-0, found-7)
compound(arrows-9, Mingled-8)
nsubj(strewed-10, arrows-9)
ccomp(found-7, strewed-10)
det(ground-12, the-11)
dobj(strewed-10, ground-12)

(ROOT
  (S
    (ADVP (RB Hastily))
    (NP (PRP they))
    (VP (VBD gathered)
      (ADVP (RB then))
      (SBAR
        (S
          (NP (DT Each) (DT the))
          (VP (VBZ loves)
            (CC and)
            (VBZ lives)
            (PP (IN of)
              (NP (NNS men)))))))
    (. .)))

advmod(gathered-3, Hastily-1)
nsubj(gathered-3, they-2)
root(ROOT-0, gathered-3)
advmod(gathered-3, then-4)
dep(the-6, Each-5)
nsubj(loves-7, the-6)
nsubj(lives-9, the-6)
ccomp(gathered-3, loves-7)
cc(loves-7, and-8)
ccomp(gathered-3, lives-9)
conj:and(loves-7, lives-9)
case(men-11, of-10)
nmod:of(loves-7, men-11)

(ROOT
  (FRAG
    (INTJ (UH Ah))
    (, ,)
    (NP (DT the) (JJ fateful) (NN dawn) (NNS deceived))
    (. !)))

discourse(deceived-6, Ah-1)
det(deceived-6, the-3)
amod(deceived-6, fateful-4)
compound(deceived-6, dawn-5)
root(ROOT-0, deceived-6)

(ROOT
  (S
    (S
      (NP (NNP Mingled))
      (VP (VBZ arrows)
        (SBAR
          (S
            (NP (DT each) (NN one))
            (VP (VBD sheaved))))))
    (: ;)
    (S
      (NP
        (NP (NNP Death) (POS 's))
        (NN dread))
      (ADVP (RB armoury))
      (VP (VBD was)
        (VP (VBN stored)
          (PP (IN With)
            (NP (DT the) (NNS shafts)))
          (NP
            (NP
              (NP (PRP he))
              (ADJP (RBS most) (JJ abhorred)))
            (: ;)
            (NP
              (NP
                (NP (NNP Love) (POS 's))
                (JJ light) (NN quiver))
              (VP (VBN groaned)
                (PP (IN beneath)
                  (NP
                    (NP (JJ Venom-headed) (NN darts))
                    (PP (IN of)
                      (NP (NNP Death)))))))))))
    (. .)))

nsubj(arrows-2, Mingled-1)
root(ROOT-0, arrows-2)
det(one-4, each-3)
nsubj(sheaved-5, one-4)
ccomp(arrows-2, sheaved-5)
nmod:poss(dread-9, Death-7)
case(Death-7, 's-8)
nsubjpass(stored-12, dread-9)
advmod(stored-12, armoury-10)
auxpass(stored-12, was-11)
parataxis(arrows-2, stored-12)
case(shafts-15, With-13)
det(shafts-15, the-14)
nmod:with(stored-12, shafts-15)
dobj(stored-12, he-16)
advmod(abhorred-18, most-17)
amod(he-16, abhorred-18)
nmod:poss(quiver-23, Love-20)
case(Love-20, 's-21)
amod(quiver-23, light-22)
dep(he-16, quiver-23)
acl(quiver-23, groaned-24)
case(darts-27, beneath-25)
amod(darts-27, Venom-headed-26)
nmod:beneath(groaned-24, darts-27)
case(Death-29, of-28)
nmod:of(darts-27, Death-29)

(ROOT
  (S
    (ADVP (RB Thus))
    (NP (PRP it))
    (VP (VBD was)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBD wrought)
            (NP (PRP$ our) (NN woe))
            (PP (IN At)
              (NP (DT the) (NNP Tavern)))
            (ADVP (RB long) (RB ago))))))
    (. .)))

advmod(was-3, Thus-1)
nsubj(was-3, it-2)
root(ROOT-0, was-3)
nsubj(wrought-5, they-4)
ccomp(was-3, wrought-5)
nmod:poss(woe-7, our-6)
dobj(wrought-5, woe-7)
case(Tavern-10, At-8)
det(Tavern-10, the-9)
nmod:at(wrought-5, Tavern-10)
advmod(ago-12, long-11)
advmod(wrought-5, ago-12)

(ROOT
  (SQ
    (PP (IN Tell)
      (NP (PRP me)))
    (, ,) (VBP do)
    (NP (PRP$ our) (NNS masters))
    (VP (VB know) (, ,)
      (S
        (VP (VBG Loosing)
          (S
            (ADVP (RB blindly)
              (SBAR (IN as)
                (S
                  (NP (PRP they))
                  (VP (VBP fly)))))
            (, ,)
            (NP (JJ Old) (NNS men))
            (VP (VBP love)
              (SBAR (IN while)
                (S
                  (NP (JJ young) (NNS men))
                  (VP (VBP die)))))))))
    (. ?)))

case(me-2, Tell-1)
nmod:tell(know-7, me-2)
aux(know-7, do-4)
nmod:poss(masters-6, our-5)
nsubj(know-7, masters-6)
root(ROOT-0, know-7)
xcomp(know-7, Loosing-9)
advmod(love-17, blindly-10)
mark(fly-13, as-11)
nsubj(fly-13, they-12)
ccomp(blindly-10, fly-13)
amod(men-16, Old-15)
nsubj(love-17, men-16)
ccomp(Loosing-9, love-17)
mark(die-21, while-18)
amod(men-20, young-19)
nsubj(die-21, men-20)
advcl(love-17, die-21)

(ROOT
  (S
    (S
      (NP
        (NP (DT THE) (NN GIFT))
        (PP (IN OF)
          (NP (DT THE) (NNP SEA) (NNP The) (JJ dead) (NN child))))
      (VP (VBD lay)
        (PP (IN in)
          (NP (DT the) (NN shroud)))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NN widow))
      (VP (VBD watched)
        (PP (IN beside))))
    (: ;)
    (CC And)
    (S
      (S
        (NP (PRP$ her) (NN mother))
        (VP (VBD slept)))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NNP Channel))
        (VP (VBD swept)
          (NP (DT The) (NN gale))
          (PP (IN in)
            (NP
              (NP (DT the) (NNS teeth))
              (PP (IN of)
                (NP (DT the) (NN tide))))))))
    (. .)))

det(GIFT-2, THE-1)
nsubj(lay-9, GIFT-2)
case(child-8, OF-3)
det(child-8, THE-4)
compound(child-8, SEA-5)
compound(child-8, The-6)
amod(child-8, dead-7)
nmod:of(GIFT-2, child-8)
root(ROOT-0, lay-9)
case(shroud-12, in-10)
det(shroud-12, the-11)
nmod:in(lay-9, shroud-12)
cc(lay-9, And-14)
det(widow-16, the-15)
nsubj(watched-17, widow-16)
conj:and(lay-9, watched-17)
nmod(watched-17, beside-18)
cc(lay-9, And-20)
nmod:poss(mother-22, her-21)
nsubj(slept-23, mother-22)
conj:and(lay-9, slept-23)
cc(slept-23, and-25)
det(Channel-27, the-26)
nsubj(swept-28, Channel-27)
conj:and(lay-9, swept-28)
conj:and(slept-23, swept-28)
det(gale-30, The-29)
dobj(swept-28, gale-30)
case(teeth-33, in-31)
det(teeth-33, the-32)
nmod:in(swept-28, teeth-33)
case(tide-36, of-34)
det(tide-36, the-35)
nmod:of(teeth-33, tide-36)

(ROOT
  (S (CC But)
    (NP (DT the) (NN mother))
    (VP (VBD laughed)
      (ADVP (IN at) (DT all)))
    (. .)))

cc(laughed-4, But-1)
det(mother-3, the-2)
nsubj(laughed-4, mother-3)
root(ROOT-0, laughed-4)
case(all-6, at-5)
nmod:at(laughed-4, all-6)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN lost)
          (NP (PRP$ my) (NN man))
          (PP (IN in)
            (NP (DT the) (NN sea))))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NN child))
      (VP (VBZ is)
        (ADJP (JJ dead))))
    (. .)))

nsubj(lost-4, I-2)
aux(lost-4, have-3)
root(ROOT-0, lost-4)
nmod:poss(man-6, my-5)
dobj(lost-4, man-6)
case(sea-9, in-7)
det(sea-9, the-8)
nmod:in(lost-4, sea-9)
cc(lost-4, And-11)
det(child-13, the-12)
nsubj(dead-15, child-13)
cop(dead-15, is-14)
conj:and(lost-4, dead-15)

(ROOT
  (VP (VB Be)
    (ADVP
      (ADVP (RB still))
      (PRN (, ,) ('' '')
        (S
          (NP (PRP she))
          (VP (VBD said) (, ,) (`` ``)
            (SBARQ
              (WHNP (WP What) (JJR more))
              (SQ (MD can)
                (NP (PRP ye))
                (VP (VB do)
                  (PP (TO to)
                    (NP (PRP me)))))
              (. ?))
            ('' '')))))))

root(ROOT-0, Be-1)
advmod(Be-1, still-2)
nsubj(said-6, she-5)
dep(still-2, said-6)
det(more-10, What-9)
dobj(do-13, more-10)
aux(do-13, can-11)
nsubj(do-13, ye-12)
ccomp(said-6, do-13)
case(me-15, to-14)
nmod:to(do-13, me-15)

(ROOT
  (S
    (S
      (NP (DT The) (NN widow))
      (VP (VBD watched)
        (NP (DT the) (NN dead))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (DT the) (NN candle))
        (VP (VBD guttered)
          (ADJP (JJ low))))
      (, ,)
      (CC And)
      (S
        (NP (PRP she))
        (VP (VBD tried)
          (S
            (VP (TO to)
              (VP (VB sing)
                (NP
                  (NP (DT the) (NNP Passing) (NN Song))
                  (SBAR
                    (S
                      (NP (DT That))
                      (VP (VBZ bids)
                        (SBAR
                          (S
                            (NP (DT the) (JJ poor) (NN soul))
                            (VP (VBP go))))))))))))))
    (. .)))

det(widow-2, The-1)
nsubj(watched-3, widow-2)
root(ROOT-0, watched-3)
det(dead-5, the-4)
dobj(watched-3, dead-5)
cc(watched-3, And-7)
det(candle-9, the-8)
nsubj(guttered-10, candle-9)
conj:and(watched-3, guttered-10)
xcomp(guttered-10, low-11)
cc(guttered-10, And-13)
nsubj(tried-15, she-14)
nsubj:xsubj(sing-17, she-14)
conj:and(watched-3, tried-15)
conj:and(guttered-10, tried-15)
mark(sing-17, to-16)
xcomp(tried-15, sing-17)
det(Song-20, the-18)
compound(Song-20, Passing-19)
dobj(sing-17, Song-20)
nsubj(bids-22, Song-20)
ref(Song-20, That-21)
acl:relcl(Song-20, bids-22)
det(soul-25, the-23)
amod(soul-25, poor-24)
nsubj(go-26, soul-25)
ccomp(bids-22, go-26)

(ROOT
  (S (CC And)
    (`` ``)
    (S
      (NP (NNP Mary))
      (VP (VBP take)
        (NP (PRP you))
        (ADVP (RB now))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP she))
        (VP (VBD sang))))
    (, ,) (`` ``)
    (NP (DT That))
    (VP (VBD lay)
      (PP (IN against)
        (NP (PRP$ my) (NN heart))))
    (. .) ('' '')))

cc(lay-14, And-1)
nsubj(take-4, Mary-3)
ccomp(lay-14, take-4)
dobj(take-4, you-5)
advmod(take-4, now-6)
nsubj(sang-10, she-9)
parataxis(lay-14, sang-10)
nsubj(lay-14, That-13)
root(ROOT-0, lay-14)
case(heart-17, against-15)
nmod:poss(heart-17, my-16)
nmod:against(lay-14, heart-17)

(ROOT
  (S (CC And)
    (S (`` ``)
      (S
        (NP (NNP Mary))
        (VP (VB smooth)
          (NP (PRP$ your) (NN crib) (NN to-night))))
      (, ,) ('' ''))
    (CC But)
    (S
      (NP (PRP she))
      (VP (MD could) (RB not)
        (VP (VB say) (`` ``)
          (NP (NNP Depart)))))
    (. .) ('' '')))

cc(smooth-4, And-1)
nsubj(smooth-4, Mary-3)
root(ROOT-0, smooth-4)
nmod:poss(to-night-7, your-5)
compound(to-night-7, crib-6)
dobj(smooth-4, to-night-7)
cc(smooth-4, But-10)
nsubj(say-14, she-11)
aux(say-14, could-12)
neg(say-14, not-13)
conj:but(smooth-4, say-14)
dobj(say-14, Depart-16)

(ROOT
  (S
    (SINV
      (ADVP (RB Then))
      (VP (VBD came))
      (NP
        (NP (DT a) (NN cry))
        (PP (IN from)
          (NP (DT the) (NN sea)))))
    (, ,)
    (CC But)
    (S
      (S
        (NP (DT the) (NN sea-rime))
        (VP (VBD blinded)
          (NP (DT the) (NN glass))))
      (, ,)
      (CC And)
      (`` ``)
      (S
        (NP (NNP Heard))
        (VP (VBZ ye)
          (NP
            (NP (NN nothing))
            (, ,)
            (NP (NN mother))))))
    (. ?) ('' '')))

advmod(came-2, Then-1)
root(ROOT-0, came-2)
det(cry-4, a-3)
nsubj(came-2, cry-4)
case(sea-7, from-5)
det(sea-7, the-6)
nmod:from(cry-4, sea-7)
cc(came-2, But-9)
det(sea-rime-11, the-10)
nsubj(blinded-12, sea-rime-11)
conj:but(came-2, blinded-12)
det(glass-14, the-13)
dobj(blinded-12, glass-14)
cc(blinded-12, And-16)
nsubj(ye-19, Heard-18)
conj:but(came-2, ye-19)
conj:And(blinded-12, ye-19)
dobj(ye-19, nothing-20)
appos(nothing-20, mother-22)

(ROOT
  (S
    (S
      (NP (PRP she))
      (VP (VBD said)))
    (, ,) ('' '')
    (NP (PRP 'T))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN child))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ waits)
              (S
                (VP (TO to)
                  (VP (VB pass)))))))))
    (. .) ('' '')))

nsubj(said-2, she-1)
ccomp(child-8, said-2)
nsubj(child-8, 'T-5)
cop(child-8, is-6)
det(child-8, the-7)
root(ROOT-0, child-8)
nsubj(waits-10, child-8)
nsubj:xsubj(pass-12, child-8)
ref(child-8, that-9)
acl:relcl(child-8, waits-10)
mark(pass-12, to-11)
xcomp(waits-10, pass-12)

(ROOT
  (S (CC And)
    (NP (DT the) (JJ nodding) (NN mother))
    (VP (VBD sighed))
    (. .) ('' '')))

cc(sighed-5, And-1)
det(mother-4, the-2)
amod(mother-4, nodding-3)
nsubj(sighed-5, mother-4)
root(ROOT-0, sighed-5)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBZ is)
        (NP
          (NP (DT a) (VBG lambing) (NN ewe))
          (PP (IN in)
            (NP (DT the) (NN whin))))))
    (, ,) (IN For)
    (S
      (SBAR
        (WHADVP (WRB why))
        (S
          (VP (MD should)
            (NP (DT the) (JJ christened) (NN soul))
            (S
              (VP (VB cry)
                (PRT (RP out)))))))
      (NP (DT That))
      (ADVP (RB never))
      (VP (VBD knew)
        (PP (IN of)
          (NP (NN sin)))))
    (. ?) ('' '')))

nsubj(ewe-5, 'T-1)
cop(ewe-5, is-2)
det(ewe-5, a-3)
amod(ewe-5, lambing-4)
root(ROOT-0, ewe-5)
case(whin-8, in-6)
det(whin-8, the-7)
nmod:in(ewe-5, whin-8)
dep(ewe-5, For-10)
advmod(should-12, why-11)
advcl(knew-20, should-12)
det(soul-15, the-13)
amod(soul-15, christened-14)
dobj(should-12, soul-15)
dep(should-12, cry-16)
compound:prt(cry-16, out-17)
nsubj(knew-20, That-18)
neg(knew-20, never-19)
parataxis(ewe-5, knew-20)
case(sin-22, of-21)
nmod:of(knew-20, sin-22)

(ROOT
  (SBARQ (`` ``)
    (SBAR
      (X
        (ADVP (RB O))
        (NP (NNS feet)))
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN held)
            (PP (IN in)
              (NP
                (NP (PRP$ my) (NN hand))
                (, ,)
                (NP
                  (NP (NNP O) (NNS hands))
                  (PP (IN at)
                    (NP (PRP$ my) (NN heart)
                      (S
                        (VP (TO to)
                          (VP (VB catch)))))))))))))
    (, ,)
    (WHADVP (WRB How))
    (SQ (MD should)
      (NP (PRP they))
      (VP (VB know)
        (NP (DT the) (NN road)
          (S
            (VP (TO to)
              (VP (VB go) (, ,)
                (SBARQ (CC And)
                  (WHADVP (WRB how))
                  (SQ (MD should)
                    (NP (PRP they))
                    (VP (VB lift)
                      (NP (DT the) (NN latch))))
                  (. ?) ('' ''))))))))))

dep(feet-3, O-2)
dep(held-6, feet-3)
nsubj(held-6, I-4)
aux(held-6, have-5)
dep(know-22, held-6)
case(hand-9, in-7)
nmod:poss(hand-9, my-8)
nmod:in(held-6, hand-9)
compound(hands-12, O-11)
appos(hand-9, hands-12)
case(heart-15, at-13)
nmod:poss(heart-15, my-14)
nmod:at(hands-12, heart-15)
mark(catch-17, to-16)
acl(heart-15, catch-17)
advmod(know-22, How-19)
aux(know-22, should-20)
nsubj(know-22, they-21)
root(ROOT-0, know-22)
det(road-24, the-23)
dobj(know-22, road-24)
mark(go-26, to-25)
acl(road-24, go-26)
cc(lift-32, And-28)
advmod(lift-32, how-29)
aux(lift-32, should-30)
nsubj(lift-32, they-31)
ccomp(go-26, lift-32)
det(latch-34, the-33)
dobj(lift-32, latch-34)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD laid)
        (NP (DT a) (NN sheet))
        (PP (TO to)
          (NP (DT the) (NN door)))
        (PRN (, ,)
          (PP (IN With)
            (NP (DT the) (JJ little) (NN quilt) (NN atop)))
          (, ,))
        (SBAR (IN That)
          (S
            (NP (PRP it))
            (VP (MD might) (RB not)
              (VP (VB hurt)
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN cold))
                    (CC or)
                    (NP (DT the) (NN dirt))))))))))
    (, ,)
    (CC But)
    (S
      (NP (DT the) (NN crying))
      (VP (MD would) (RB not)
        (VP (VB stop))))
    (. .)))

nsubj(laid-2, They-1)
root(ROOT-0, laid-2)
det(sheet-4, a-3)
dobj(laid-2, sheet-4)
case(door-7, to-5)
det(door-7, the-6)
nmod:to(laid-2, door-7)
case(atop-13, With-9)
det(atop-13, the-10)
amod(atop-13, little-11)
compound(atop-13, quilt-12)
dep(laid-2, atop-13)
mark(hurt-19, That-15)
nsubj(hurt-19, it-16)
aux(hurt-19, might-17)
neg(hurt-19, not-18)
ccomp(laid-2, hurt-19)
case(cold-22, from-20)
det(cold-22, the-21)
nmod:from(hurt-19, cold-22)
cc(cold-22, or-23)
det(dirt-25, the-24)
nmod:from(hurt-19, dirt-25)
conj:or(cold-22, dirt-25)
cc(laid-2, But-27)
det(crying-29, the-28)
nsubj(stop-32, crying-29)
aux(stop-32, would-30)
neg(stop-32, not-31)
conj:but(laid-2, stop-32)

(ROOT
  (S
    (S
      (NP (DT The) (NN widow))
      (VP (VBN lifted)
        (UCP
          (NP (DT the) (NN latch))
          (CC And)
          (VP (VBN strained)
            (NP (PRP$ her) (NNS eyes))
            (S
              (VP (TO to)
                (VP (VB see))))))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBD opened)
          (NP (DT the) (NN door))
          (PP (IN on)
            (NP (DT the) (JJ bitter) (NN shore)))
          (S
            (VP (TO To)
              (VP (VB let)
                (NP (DT the) (NN soul)))))))
      (VP (VBP go)
        (ADJP (JJ free))))
    (. .)))

det(widow-2, The-1)
nsubj(lifted-3, widow-2)
root(ROOT-0, lifted-3)
det(latch-5, the-4)
dobj(lifted-3, latch-5)
cc(latch-5, And-6)
acl(latch-5, strained-7)
nmod:poss(eyes-9, her-8)
dobj(strained-7, eyes-9)
mark(see-11, to-10)
advcl(strained-7, see-11)
cc(lifted-3, And-13)
csubj(go-25, opened-14)
det(door-16, the-15)
dobj(opened-14, door-16)
case(shore-20, on-17)
det(shore-20, the-18)
amod(shore-20, bitter-19)
nmod:on(opened-14, shore-20)
mark(let-22, To-21)
advcl(opened-14, let-22)
det(soul-24, the-23)
dobj(let-22, soul-24)
conj:and(lifted-3, go-25)
xcomp(go-25, free-26)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP (DT neither) (NN glimmer)
          (CC nor)
          (NN ghost))))
    (PRN (, ,)
      (S
        (NP (EX There))
        (VP (VBD was)
          (ADJP (DT neither) (JJ spirit)
            (CC nor)
            (JJ spark))))
      (, ,))
    (CC And)
    (`` ``)
    (S
      (NP (NNP Heard))
      (VP (VBZ ye)
        (NP
          (NP (NN nothing))
          (, ,)
          (NP (NN mother)))))
    (. ?) ('' '')))

expl(was-2, There-1)
root(ROOT-0, was-2)
cc:preconj(glimmer-4, neither-3)
nsubj(was-2, glimmer-4)
cc(glimmer-4, nor-5)
nsubj(was-2, ghost-6)
conj:nor(glimmer-4, ghost-6)
expl(was-9, There-8)
dep(was-2, was-9)
cc:preconj(spirit-11, neither-10)
xcomp(was-9, spirit-11)
cc(spirit-11, nor-12)
xcomp(was-9, spark-13)
conj:nor(spirit-11, spark-13)
cc(was-2, And-15)
nsubj(ye-18, Heard-17)
ccomp(was-2, ye-18)
dobj(ye-18, nothing-19)
appos(nothing-19, mother-21)

(ROOT
  (S
    (S
      (NP (PRP she))
      (VP (VBD said)))
    (, ,) ('' '')
    (NP (PRP 'T))
    (VP (VBZ is)
      (VP (VBG crying)
        (PP (IN for)
          (NP (PRP me)))
        (PP (IN in)
          (NP (DT the) (NN dark)))))
    (. .) ('' '')))

nsubj(said-2, she-1)
ccomp(crying-7, said-2)
nsubj(crying-7, 'T-5)
aux(crying-7, is-6)
root(ROOT-0, crying-7)
case(me-9, for-8)
nmod:for(crying-7, me-9)
case(dark-12, in-10)
det(dark-12, the-11)
nmod:in(crying-7, dark-12)

(ROOT
  (S (CC And)
    (S
      (NP (DT the) (VBG nodding) (NN mother))
      (VP (VBD sighed)))
    (: :) ('' '')
    (S
      (NP (PRP 'T))
      (VP (VBZ is)
        (NP
          (NP (NN sorrow))
          (SBAR
            (S
              (VP (VBZ makes)
                (S
                  (NP (PRP ye))
                  (ADJP (JJ dull)))))))
        (: ;)
        (FRAG
          (VP (VB Have)
            (NP (PRP ye))
            (ADVP (RB yet))
            (S
              (VP (TO to)
                (VP (VB learn)
                  (NP
                    (NP
                      (NP (DT the) (NN cry))
                      (PP (IN of)
                        (NP (DT the) (NN tern))))
                    (, ,)
                    (CC Or)
                    (NP
                      (NP (DT the) (NN wail))
                      (PP (IN of)
                        (NP (DT the) (JJ wind-blown) (NN gull))))))))))))
    (. ?) ('' '')))

cc(sighed-5, And-1)
det(mother-4, the-2)
amod(mother-4, nodding-3)
nsubj(sighed-5, mother-4)
root(ROOT-0, sighed-5)
nsubj(sorrow-10, 'T-8)
cop(sorrow-10, is-9)
parataxis(sighed-5, sorrow-10)
acl:relcl(sorrow-10, makes-11)
nsubj(dull-13, ye-12)
xcomp(makes-11, dull-13)
dep(sorrow-10, Have-15)
dobj(Have-15, ye-16)
advmod(Have-15, yet-17)
mark(learn-19, to-18)
advcl(Have-15, learn-19)
det(cry-21, the-20)
dobj(learn-19, cry-21)
case(tern-24, of-22)
det(tern-24, the-23)
nmod:of(cry-21, tern-24)
cc(cry-21, Or-26)
det(wail-28, the-27)
dobj(learn-19, wail-28)
conj:or(cry-21, wail-28)
case(gull-32, of-29)
det(gull-32, the-30)
amod(gull-32, wind-blown-31)
nmod:of(wail-28, gull-32)

(ROOT
  (S (`` ``)
    (S
      (NP (DT The) (NNS terns))
      (VP (VBP are)
        (VP (VBN blown)
          (S
            (ADJP (JJ inland))))))
    (, ,)
    (NP (DT The) (JJ gray) (NN gull))
    (VP (VBZ follows)
      (NP (DT the) (NN plough)))
    (. .)))

det(terns-3, The-2)
nsubjpass(blown-5, terns-3)
auxpass(blown-5, are-4)
ccomp(follows-11, blown-5)
xcomp(blown-5, inland-6)
det(gull-10, The-8)
amod(gull-10, gray-9)
nsubj(follows-11, gull-10)
root(ROOT-0, follows-11)
det(plough-13, the-12)
dobj(follows-11, plough-13)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (ADVP (RB never))
        (NP
          (NP (DT a) (NN bird))
          (, ,)
          (NP
            (NP
              (NP (DT the) (NN voice))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD heard)))))
            (, ,)
            (NP (NNP O) (NN mother))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP hear)
      (NP (PRP it))
      (ADVP (RB now)))
    (. !) ('' '')))

nsubj(bird-5, 'T-1)
cop(bird-5, was-2)
neg(bird-5, never-3)
det(bird-5, a-4)
ccomp(hear-16, bird-5)
det(voice-8, the-7)
appos(bird-5, voice-8)
nsubj(heard-10, I-9)
acl:relcl(voice-8, heard-10)
compound(mother-13, O-12)
appos(voice-8, mother-13)
nsubj(hear-16, I-15)
root(ROOT-0, hear-16)
dobj(hear-16, it-17)
advmod(hear-16, now-18)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NN Lie) (RB still))
        (, ,)
        (NP
          (ADJP (RB dear))
          (NN lamb))
        (, ,))
      (VP (VBP lie)
        (ADVP (RB still))))
    (: ;)
    (S
      (S
        (S
          (NP (DT The) (NN child))
          (VP (VBZ is)
            (VP (VBN passed)
              (PP (IN from)
                (NP (NN harm))))))
        (PRN (, ,)
          (S
            (NP (PRP 'T))
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN ache))
                (PP (IN in)
                  (NP (PRP$ your) (NN breast)))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD broke)
                      (NP (PRP$ your) (NN rest))))))))
          (, ,)))
      (CC And)
      (S
        (NP (DT the) (NN feel))
        (PP (IN of)
          (NP (DT an) (JJ empty) (NN arm)))))
    (. .) ('' '')))

nsubj(lie-8, Lie-2)
advmod(Lie-2, still-3)
amod(lamb-6, dear-5)
appos(Lie-2, lamb-6)
root(ROOT-0, lie-8)
advmod(lie-8, still-9)
det(child-12, The-11)
nsubjpass(passed-14, child-12)
auxpass(passed-14, is-13)
parataxis(lie-8, passed-14)
case(harm-16, from-15)
nmod:from(passed-14, harm-16)
nsubj(ache-21, 'T-18)
cop(ache-21, is-19)
det(ache-21, the-20)
dep(passed-14, ache-21)
nsubj(broke-26, ache-21)
case(breast-24, in-22)
nmod:poss(breast-24, your-23)
nmod:in(ache-21, breast-24)
ref(ache-21, that-25)
acl:relcl(ache-21, broke-26)
nmod:poss(rest-28, your-27)
dobj(broke-26, rest-28)
cc(passed-14, And-30)
det(feel-32, the-31)
parataxis(lie-8, feel-32)
conj:and(passed-14, feel-32)
case(arm-36, of-33)
det(arm-36, an-34)
amod(arm-36, empty-35)
dep(feel-32, arm-36)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD put)
      (NP (PRP$ her) (NN mother))
      (PRT (RP aside))
      (, ,) (`` ``)
      (PP (IN In)
        (NP
          (NP (NNP Mary) (POS 's))
          (NN name)))
      (VP (VB let)
        (VP (VB be))))
    (. !)))

nsubj(put-2, She-1)
root(ROOT-0, put-2)
nmod:poss(mother-4, her-3)
dobj(put-2, mother-4)
compound:prt(put-2, aside-5)
case(name-11, In-8)
nmod:poss(name-11, Mary-9)
case(Mary-9, 's-10)
nmod:in(put-2, name-11)
dep(put-2, let-12)
xcomp(let-12, be-13)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP
          (NP (DT the) (NN peace))
          (PP (IN of)
            (NP (PRP$ my) (NN soul)))))
      (NP (PRP I))
      (VP (MD must)
        (VP (VB go))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP she))
        (VP (VBD said)))
      (, ,))
    (CC And)
    (S
      (NP (PRP she))
      (VP (VBD went)
        (PP (TO to)
          (NP (DT the) (NN calling) (NN sea)))))
    (. .)))

case(peace-3, For-1)
det(peace-3, the-2)
nmod:for(go-9, peace-3)
case(soul-6, of-4)
nmod:poss(soul-6, my-5)
nmod:of(peace-3, soul-6)
nsubj(go-9, I-7)
aux(go-9, must-8)
root(ROOT-0, go-9)
nsubj(said-13, she-12)
dep(go-9, said-13)
cc(go-9, And-15)
nsubj(went-17, she-16)
conj:and(go-9, went-17)
case(sea-21, to-18)
det(sea-21, the-19)
compound(sea-21, calling-20)
nmod:to(went-17, sea-21)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN heel))
        (PP (IN of)
          (NP (DT the) (JJ wind-bit) (NN pier)))))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB Where))
        (S
          (NP (DT the) (JJ twisted) (NN weed))
          (VP (VBD was)
            (VP (VBN piled)))))
      (, ,)
      (NP (PRP She))
      (VP (VBD came)
        (PP (TO to)
          (NP (DT the) (NN life)))
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBD had)
              (VP (VBN missed)
                (PP (IN by)
                  (NP (DT an) (NN hour)))))))))
    (, ,) (IN For)
    (S
      (NP (PRP she))
      (VP (VBD came)
        (PP (TO to)
          (NP (DT a) (JJ little) (NN child)))))
    (. .)))

case(heel-3, In-1)
det(heel-3, the-2)
nmod:in(came-17, heel-3)
case(pier-7, of-4)
det(pier-7, the-5)
amod(pier-7, wind-bit-6)
nmod:of(heel-3, pier-7)
advmod(piled-14, Where-9)
det(weed-12, the-10)
amod(weed-12, twisted-11)
nsubjpass(piled-14, weed-12)
auxpass(piled-14, was-13)
advcl(came-17, piled-14)
nsubj(came-17, She-16)
root(ROOT-0, came-17)
case(life-20, to-18)
det(life-20, the-19)
nmod:to(came-17, life-20)
nsubj(missed-23, she-21)
aux(missed-23, had-22)
ccomp(came-17, missed-23)
case(hour-26, by-24)
det(hour-26, an-25)
nmod:by(missed-23, hour-26)
dep(came-17, For-28)
nsubj(came-30, she-29)
parataxis(came-17, came-30)
case(child-34, to-31)
det(child-34, a-32)
amod(child-34, little-33)
nmod:to(came-30, child-34)

(ROOT
  (S
    (S
      (S
        (NP (PRP She))
        (VP (VBD laid)
          (NP (PRP it))
          (PP (IN into)
            (NP (PRP$ her) (NN breast)))))
      (, ,)
      (CC And)
      (S
        (S
          (ADVP (RB back)
            (PP (TO to)
              (NP (PRP$ her) (NN mother))))
          (NP (PRP she))
          (VP (VBD came)))
        (, ,)
        (CC But)
        (S
          (NP (PRP it))
          (VP (MD would) (RB not)
            (VP (VB feed))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD would) (RB not)
        (VP (VB heed))))
    (, ,)
    (SBAR (IN Though)
      (S
        (NP (PRP she))
        (VP (VBD gave)
          (NP (PRP it))
          (NP
            (NP (PRP$ her) (JJ own) (NN child) (POS 's))
            (NN name)))))
    (. .)))

nsubj(laid-2, She-1)
root(ROOT-0, laid-2)
dobj(laid-2, it-3)
case(breast-6, into-4)
nmod:poss(breast-6, her-5)
nmod:into(laid-2, breast-6)
cc(laid-2, And-8)
advmod(came-14, back-9)
case(mother-12, to-10)
nmod:poss(mother-12, her-11)
nmod:to(back-9, mother-12)
nsubj(came-14, she-13)
conj:and(laid-2, came-14)
cc(came-14, But-16)
nsubj(feed-20, it-17)
aux(feed-20, would-18)
neg(feed-20, not-19)
conj:and(laid-2, feed-20)
conj:but(came-14, feed-20)
cc(laid-2, and-21)
nsubj(heed-25, it-22)
aux(heed-25, would-23)
neg(heed-25, not-24)
conj:and(laid-2, heed-25)
mark(gave-29, Though-27)
nsubj(gave-29, she-28)
dep(laid-2, gave-29)
iobj(gave-29, it-30)
nmod:poss(child-33, her-31)
amod(child-33, own-32)
nmod:poss(name-35, child-33)
case(child-33, 's-34)
dobj(gave-29, name-35)

(ROOT
  (S
    (S (CC And)
      (NP (DT the) (JJ dead) (NN child))
      (VP (VBD dripped)
        (PP (IN on)
          (NP (PRP$ her) (NN breast)))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (PRP$ her) (JJ own))
        (PP (IN in)
          (NP (DT the) (NN shroud))))
      (VP (VBD lay)
        (ADJP (JJ stark))))
    (: ;)
    (CC And)
    (S (`` ``)
      (S
        (NP (NNP God))
        (VP (VB forgive)
          (NP (PRP us))
          (, ,)
          (NP (NN mother))))
      (, ,) ('' '')
      (NP (PRP she))
      (VP (VBD said) (, ,) (`` ``)
        (S
          (NP (PRP We))
          (VP (VB let)
            (S
              (NP (PRP it))
              (VP (VB die)
                (PP (IN in)
                  (NP (DT the) (NN dark)))))))))
    (. !) ('' '')))

cc(dripped-5, And-1)
det(child-4, the-2)
amod(child-4, dead-3)
nsubj(dripped-5, child-4)
root(ROOT-0, dripped-5)
case(breast-8, on-6)
nmod:poss(breast-8, her-7)
nmod:on(dripped-5, breast-8)
cc(dripped-5, And-10)
nmod:poss(own-12, her-11)
nsubj(lay-16, own-12)
case(shroud-15, in-13)
det(shroud-15, the-14)
nmod:in(own-12, shroud-15)
conj:and(dripped-5, lay-16)
xcomp(lay-16, stark-17)
cc(dripped-5, And-19)
nsubj(forgive-22, God-21)
ccomp(said-29, forgive-22)
dobj(forgive-22, us-23)
dobj(forgive-22, mother-25)
nsubj(said-29, she-28)
conj:and(dripped-5, said-29)
nsubj(let-33, We-32)
ccomp(said-29, let-33)
nsubj(die-35, it-34)
ccomp(let-33, die-35)
case(dark-38, in-36)
det(dark-38, the-37)
nmod:in(die-35, dark-38)

(ROOT
  (S
    (S
      (NP (NNP EVARRA)
        (CC AND)
        (NNP HIS))
      (VP (VBZ GODS)
        (NP (NNP _) (NNP Read))
        (ADVP (RB here))))
    (: :)
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN story))
          (PP (IN of)
            (NP (NNP Evarra)
              (PRN (: --)
                (NP (NN man))
                (: --))
              (NNP Maker)))
          (PP (IN of)
            (NP
              (NP (NNS Gods))
              (PP (IN in)
                (NP
                  (NP (NNS lands))
                  (PP (IN beyond)
                    (NP (DT the) (NN sea))))))))))
    (. .)))

nsubj(GODS-4, EVARRA-1)
cc(EVARRA-1, AND-2)
conj:and(EVARRA-1, HIS-3)
nsubj(GODS-4, HIS-3)
root(ROOT-0, GODS-4)
compound(Read-6, _-5)
dobj(GODS-4, Read-6)
advmod(GODS-4, here-7)
nsubj(story-12, This-9)
cop(story-12, is-10)
det(story-12, the-11)
parataxis(GODS-4, story-12)
case(Maker-18, of-13)
compound(Maker-18, Evarra-14)
dep(Maker-18, man-16)
nmod:of(story-12, Maker-18)
case(Gods-20, of-19)
nmod:of(story-12, Gods-20)
case(lands-22, in-21)
nmod:in(Gods-20, lands-22)
case(sea-25, beyond-23)
det(sea-25, the-24)
nmod:beyond(lands-22, sea-25)

(ROOT
  (S
    (SBAR
      (ADVP (RB _))
      (IN Because)
      (S
        (NP (DT the) (NN city))
        (VP (VBD gave)
          (NP (PRP him))
          (PP (IN of)
            (NP (PRP$ her) (NN gold))))))
    (, ,)
    (SBAR (IN Because)
      (S
        (NP (DT the) (NNS caravans))
        (VP (VBD brought)
          (NP (NNS turquoises)))))
    (, ,)
    (SBAR (IN Because)
      (S
        (NP (PRP$ his) (NN life))
        (VP (VBD was)
          (VP (VBN sheltered)
            (PP (IN by)
              (NP (DT the) (NNP King)))))))
    (, ,)
    (S
      (S
        (S
          (ADVP (RB So)
            (SBAR (IN that)
              (S
                (NP (DT no) (NN man))
                (VP (MD should)
                  (VP (VB maim)
                    (NP (PRP him)))))))
          (, ,)
          (NP (NN none))
          (VP (MD should)
            (VP (VB steal))))
        (, ,)
        (CC Or)
        (S
          (S
            (VP (VB break)
              (NP (PRP$ his) (NN rest))
              (PP (IN with)
                (NP
                  (NP (NN babble))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NNS streets))
                      (SBAR
                        (WHADVP (WRB When))
                        (S
                          (NP (PRP he))
                          (VP (VBD was)
                            (ADJP (JJ weary)))))))))
              (SBAR (IN after)
                (S
                  (VP (VBP toil))))))
          (, ,)
          (NP (PRP he))
          (VP (VBD made)
            (NP
              (NP (DT An) (NN image))
              (PP (IN of)
                (NP (PRP$ his) (NN God))))
            (PP (IN in)
              (NP (NN gold)
                (CC and)
                (NN pearl)))))
        (, ,)
        (PP (IN With)
          (NP
            (NP (NN turquoise) (NN diadem))
            (CC and)
            (NP (JJ human) (NNS eyes))
            (, ,)
            (NP
              (NP (DT A) (NN wonder))
              (PP (IN in)
                (NP (DT the) (NN sunshine))))
            (, ,)
            (VP (VBN known)
              (UCP
                (ADJP (JJ afar))
                (, ,)
                (CC And)
                (VP (VBN worshipped)
                  (PP (IN by)
                    (NP (DT the) (NNP King)))))))))
      (: ;)
      (S (CC but)
        (, ,)
        (PP
          (ADVP (NN drunk))
          (IN with)
          (NP (NN pride)))
        (, ,)
        (SBAR (IN Because)
          (S
            (NP (DT the) (NN city))
            (VP (VBD bowed)
              (PP (TO to)
                (NP (PRP him)))
              (PP (IN for)
                (NP (NNP God))))))
        (, ,)
        (NP (PRP He))
        (VP (VBD wrote)
          (PP (IN above)
            (NP (DT the) (NN shrine))))))
    (: :) ('' '')
    (S
      (S
        (ADVP (RB _))
        (ADVP (RB Thus))
        (NP (NNS Gods))
        (VP (VBP are)
          (VP (VBN made))))
      (, ,)
      (CC And)
      (S
        (NP (NN whoso))
        (VP (VBZ makes)
          (SBAR
            (S
              (NP (PRP them))
              (ADVP (RB otherwise))
              (VP (MD shall)
                (VP (VB die))))))))
    (. .)))

advmod(gave-5, _-1)
mark(gave-5, Because-2)
det(city-4, the-3)
nsubj(gave-5, city-4)
dep(steal-36, gave-5)
dobj(gave-5, him-6)
case(gold-9, of-7)
nmod:poss(gold-9, her-8)
nmod:of(gave-5, gold-9)
mark(brought-14, Because-11)
det(caravans-13, the-12)
nsubj(brought-14, caravans-13)
dep(steal-36, brought-14)
dobj(brought-14, turquoises-15)
mark(sheltered-21, Because-17)
nmod:poss(life-19, his-18)
nsubjpass(sheltered-21, life-19)
auxpass(sheltered-21, was-20)
dep(steal-36, sheltered-21)
case(King-24, by-22)
det(King-24, the-23)
nmod:by(sheltered-21, King-24)
advmod(steal-36, So-26)
mark(maim-31, that-27)
neg(man-29, no-28)
nsubj(maim-31, man-29)
aux(maim-31, should-30)
ccomp(So-26, maim-31)
dobj(maim-31, him-32)
nsubj(steal-36, none-34)
aux(steal-36, should-35)
root(ROOT-0, steal-36)
cc(steal-36, Or-38)
ccomp(made-55, break-39)
nmod:poss(rest-41, his-40)
dobj(break-39, rest-41)
case(babble-43, with-42)
nmod:with(break-39, babble-43)
case(streets-46, in-44)
det(streets-46, the-45)
nmod:in(babble-43, streets-46)
advmod(weary-50, When-47)
nsubj(weary-50, he-48)
cop(weary-50, was-49)
acl:relcl(streets-46, weary-50)
mark(toil-52, after-51)
advcl(break-39, toil-52)
nsubj(made-55, he-54)
conj:or(steal-36, made-55)
det(image-57, An-56)
dobj(made-55, image-57)
case(God-60, of-58)
nmod:poss(God-60, his-59)
nmod:of(image-57, God-60)
case(gold-62, in-61)
nmod:in(made-55, gold-62)
cc(gold-62, and-63)
nmod:in(made-55, pearl-64)
conj:and(gold-62, pearl-64)
case(diadem-68, With-66)
compound(diadem-68, turquoise-67)
conj:or(steal-36, diadem-68)
cc(diadem-68, and-69)
amod(eyes-71, human-70)
conj:or(steal-36, eyes-71)
conj:and(diadem-68, eyes-71)
det(wonder-74, A-73)
conj:or(steal-36, wonder-74)
conj:and(diadem-68, wonder-74)
case(sunshine-77, in-75)
det(sunshine-77, the-76)
nmod:in(wonder-74, sunshine-77)
acl(diadem-68, known-79)
xcomp(known-79, afar-80)
cc(afar-80, And-82)
xcomp(known-79, worshipped-83)
conj:and(afar-80, worshipped-83)
case(King-86, by-84)
det(King-86, the-85)
nmod:by(worshipped-83, King-86)
cc(wrote-104, but-88)
advmod(pride-92, drunk-90)
case(pride-92, with-91)
nmod:with(wrote-104, pride-92)
mark(bowed-97, Because-94)
det(city-96, the-95)
nsubj(bowed-97, city-96)
advcl(wrote-104, bowed-97)
case(him-99, to-98)
nmod:to(bowed-97, him-99)
case(God-101, for-100)
nmod:for(bowed-97, God-101)
nsubj(wrote-104, He-103)
parataxis(steal-36, wrote-104)
case(shrine-107, above-105)
det(shrine-107, the-106)
nmod:above(wrote-104, shrine-107)
advmod(made-114, _-110)
advmod(made-114, Thus-111)
nsubjpass(made-114, Gods-112)
auxpass(made-114, are-113)
parataxis(steal-36, made-114)
cc(made-114, And-116)
nsubj(makes-118, whoso-117)
parataxis(steal-36, makes-118)
conj:and(made-114, makes-118)
nsubj(die-122, them-119)
advmod(die-122, otherwise-120)
aux(die-122, shall-121)
ccomp(makes-118, die-122)

(ROOT
  (S
    (NP
      (NP (NN _) ('' ''))
      (CC And)
      (NP (PDT all) (DT the) (NN city)))
    (VP (VBD praised)
      (NP (PRP him)))
    (: ...) (. .)))

nsubj(praised-7, _-1)
cc(_-1, And-3)
det:predet(city-6, all-4)
det(city-6, the-5)
conj:and(_-1, city-6)
nsubj(praised-7, city-6)
root(ROOT-0, praised-7)
dobj(praised-7, him-8)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD died))
    (. .)))

advmod(died-3, Then-1)
nsubj(died-3, he-2)
root(ROOT-0, died-3)

(ROOT
  (NP
    (NP
      (NP (NNP _) (NNP Read))
      (RRC
        (ADVP (RB here))
        (NP
          (NP (DT the) (NN story))
          (PP (IN of)
            (NP (NNP Evarra))))))
    (: --)
    (NP
      (NP (NN man))
      (: --)
      (NP
        (NP (NNP Maker))
        (PP (IN of)
          (NP
            (NP (NNS Gods))
            (PP (IN in)
              (NP
                (NP (NNS lands))
                (PP (IN beyond)
                  (NP (DT the) (NN sea)))))))))
    (. .)))

compound(Read-2, _-1)
root(ROOT-0, Read-2)
advmod(story-5, here-3)
det(story-5, the-4)
acl:relcl(Read-2, story-5)
case(Evarra-7, of-6)
nmod:of(story-5, Evarra-7)
dep(Read-2, man-9)
dep(man-9, Maker-11)
case(Gods-13, of-12)
nmod:of(Maker-11, Gods-13)
case(lands-15, in-14)
nmod:in(Gods-13, lands-15)
case(sea-18, beyond-16)
det(sea-18, the-17)
nmod:beyond(lands-15, sea-18)

(ROOT
  (S
    (SBAR
      (ADVP (RB _))
      (IN Because)
      (S
        (NP (DT the) (NN city))
        (VP (VBD had)
          (NP (DT no) (NN wealth)
            (S
              (VP (TO to)
                (VP (VB give))))))))
    (, ,)
    (SBAR (IN Because)
      (S
        (NP (DT the) (NNS caravans))
        (VP (VBD were)
          (NP (JJ spoiled) (NN afar)))))
    (, ,)
    (SBAR (IN Because)
      (S
        (NP (PRP$ his) (NN life))
        (VP (VBD was)
          (VP (VBN threatened)
            (PP (IN by)
              (NP (DT the) (NNP King)))))))
    (, ,)
    (S
      (S
        (ADVP (RB So)
          (SBAR (IN that)
            (S
              (NP (DT all) (NNS men))
              (VP (VBN despised)
                (NP (PRP him))
                (PP (IN in)
                  (NP (DT the) (NNS streets)))))))
        (, ,)
        (NP (PRP He))
        (VP (VBD hewed)
          (NP (DT the) (NN living) (NN rock))
          (, ,)
          (PP (IN with)
            (NP (NN sweat)
              (CC and)
              (NNS tears)))))
      (, ,)
      (CC And)
      (S
        (S
          (VP (VBN reared)
            (NP (DT a) (NNP God))
            (PP (IN against)
              (NP
                (NP (DT the) (NN morning-gold))
                (, ,)
                (NP (DT A) (NN terror))))
            (PP (IN in)
              (NP (DT the) (NN sunshine)))))
        (, ,)
        (S
          (VP (VBN seen)
            (UCP
              (ADJP (JJ afar))
              (, ,)
              (CC And)
              (VP (VBN worshipped)
                (PP (IN by)
                  (NP (DT the) (NNP King))))))))
      (: ;)
      (S (CC but)
        (, ,)
        (PP
          (ADVP (NN drunk))
          (IN with)
          (NP (NN pride)))
        (, ,)
        (SBAR (IN Because)
          (S
            (NP (DT the) (NN city))
            (VP (VBD fawned)
              (S
                (VP (TO to)
                  (VP (VB bring)
                    (NP (PRP him))
                    (ADVP (RB back))))))))
        (, ,)
        (NP (PRP He))
        (VP (VBD carved)
          (PP (IN upon)
            (NP (DT the) (NN plinth))))))
    (: :) ('' '')
    (S
      (S
        (ADVP (RB _))
        (ADVP (RB Thus))
        (NP (NNS Gods))
        (VP (VBP are)
          (VP (VBN made))))
      (, ,)
      (CC And)
      (S
        (NP (NN whoso))
        (VP (VBZ makes)
          (SBAR
            (S
              (NP (PRP them))
              (ADVP (RB otherwise))
              (VP (MD shall)
                (VP (VB die))))))))
    (. .)))

advmod(had-5, _-1)
mark(had-5, Because-2)
det(city-4, the-3)
nsubj(had-5, city-4)
dep(hewed-38, had-5)
neg(wealth-7, no-6)
dobj(had-5, wealth-7)
mark(give-9, to-8)
acl(wealth-7, give-9)
mark(afar-16, Because-11)
det(caravans-13, the-12)
nsubj(afar-16, caravans-13)
cop(afar-16, were-14)
amod(afar-16, spoiled-15)
dep(hewed-38, afar-16)
mark(threatened-22, Because-18)
nmod:poss(life-20, his-19)
nsubjpass(threatened-22, life-20)
auxpass(threatened-22, was-21)
dep(hewed-38, threatened-22)
case(King-25, by-23)
det(King-25, the-24)
nmod:by(threatened-22, King-25)
advmod(hewed-38, So-27)
mark(despised-31, that-28)
det(men-30, all-29)
nsubj(despised-31, men-30)
ccomp(So-27, despised-31)
dobj(despised-31, him-32)
case(streets-35, in-33)
det(streets-35, the-34)
nmod:in(despised-31, streets-35)
nsubj(hewed-38, He-37)
nsubj(reared-49, He-37)
root(ROOT-0, hewed-38)
det(rock-41, the-39)
compound(rock-41, living-40)
dobj(hewed-38, rock-41)
case(sweat-44, with-43)
nmod:with(hewed-38, sweat-44)
cc(sweat-44, and-45)
nmod:with(hewed-38, tears-46)
conj:and(sweat-44, tears-46)
cc(hewed-38, And-48)
conj:and(hewed-38, reared-49)
det(God-51, a-50)
dobj(reared-49, God-51)
case(morning-gold-54, against-52)
det(morning-gold-54, the-53)
nmod:against(reared-49, morning-gold-54)
det(terror-57, A-56)
appos(morning-gold-54, terror-57)
case(sunshine-60, in-58)
det(sunshine-60, the-59)
nmod:in(reared-49, sunshine-60)
parataxis(reared-49, seen-62)
xcomp(seen-62, afar-63)
cc(afar-63, And-65)
xcomp(seen-62, worshipped-66)
conj:and(afar-63, worshipped-66)
case(King-69, by-67)
det(King-69, the-68)
nmod:by(worshipped-66, King-69)
cc(carved-87, but-71)
advmod(pride-75, drunk-73)
case(pride-75, with-74)
nmod:with(carved-87, pride-75)
mark(fawned-80, Because-77)
det(city-79, the-78)
nsubj(fawned-80, city-79)
nsubj:xsubj(bring-82, city-79)
advcl(carved-87, fawned-80)
mark(bring-82, to-81)
xcomp(fawned-80, bring-82)
dobj(bring-82, him-83)
advmod(bring-82, back-84)
nsubj(carved-87, He-86)
conj:and(hewed-38, carved-87)
case(plinth-90, upon-88)
det(plinth-90, the-89)
nmod:upon(carved-87, plinth-90)
advmod(made-97, _-93)
advmod(made-97, Thus-94)
nsubjpass(made-97, Gods-95)
auxpass(made-97, are-96)
parataxis(hewed-38, made-97)
cc(made-97, And-99)
nsubj(makes-101, whoso-100)
parataxis(hewed-38, makes-101)
conj:and(made-97, makes-101)
nsubj(die-105, them-102)
advmod(die-105, otherwise-103)
aux(die-105, shall-104)
ccomp(makes-101, die-105)

(ROOT
  (S
    (NP
      (NP (NN _) ('' ''))
      (CC And)
      (NP (PDT all) (DT the) (NNS people)))
    (VP (VBD praised)
      (NP (PRP him)))
    (: ...) (. .)))

nsubj(praised-7, _-1)
cc(_-1, And-3)
det:predet(people-6, all-4)
det(people-6, the-5)
conj:and(_-1, people-6)
nsubj(praised-7, people-6)
root(ROOT-0, praised-7)
dobj(praised-7, him-8)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD died))
    (. .)))

advmod(died-3, Then-1)
nsubj(died-3, he-2)
root(ROOT-0, died-3)

(ROOT
  (NP
    (NP
      (NP (NNP _) (NNP Read))
      (RRC
        (ADVP (RB here))
        (NP
          (NP (DT the) (NN story))
          (PP (IN of)
            (NP (NNP Evarra))))))
    (: --)
    (NP
      (NP (NN man))
      (: --)
      (NP
        (NP (NNP Maker))
        (PP (IN of)
          (NP
            (NP (NNS Gods))
            (PP (IN in)
              (NP
                (NP (NNS lands))
                (PP (IN beyond)
                  (NP (DT the) (NN sea)))))))))
    (. .)))

compound(Read-2, _-1)
root(ROOT-0, Read-2)
advmod(story-5, here-3)
det(story-5, the-4)
acl:relcl(Read-2, story-5)
case(Evarra-7, of-6)
nmod:of(story-5, Evarra-7)
dep(Read-2, man-9)
dep(man-9, Maker-11)
case(Gods-13, of-12)
nmod:of(Maker-11, Gods-13)
case(lands-15, in-14)
nmod:in(Gods-13, lands-15)
case(sea-18, beyond-16)
det(sea-18, the-17)
nmod:beyond(lands-15, sea-18)

(ROOT
  (S
    (SBAR
      (ADVP (RB _))
      (IN Because)
      (S
        (NP (PRP he))
        (VP (VBD lived)
          (PP (IN among)
            (NP (DT a) (JJ simple) (NN folk))))))
    (, ,)
    (SBAR (IN Because)
      (S
        (NP (PRP$ his) (NN village))
        (VP (VBD was)
          (PP (IN between)
            (NP (DT the) (NNS hills))))))
    (, ,)
    (SBAR (IN Because)
      (S
        (NP (PRP he))
        (VP (VBD smeared)
          (NP (PRP$ his) (NNS cheeks))
          (PP (IN with)
            (NP
              (NP (NN blood))
              (PP (IN of)
                (NP (NNS ewes))))))))
    (, ,)
    (NP (PRP He))
    (VP
      (VP (VBD cut)
        (NP (DT an)
          (ADJP (JJ idol)
            (PP (IN from)
              (NP
                (NP (DT a) (JJ fallen) (NN pine))
                (, ,)
                (NP (NNP Smeared)))))
          (NN blood))
        (PP (IN upon)
          (NP (PRP$ its) (NNS cheeks))))
      (, ,)
      (CC and)
      (VP (VBD wedged)
        (S
          (NP (DT a) (NN shell))
          (PP (IN Above)
            (NP
              (NP (PRP$ its) (NNS brows))
              (PP (IN for)
                (NP (NNS eyes)))))))
      (, ,)
      (CC and)
      (VP (VBD gave)
        (NP (PRP it))
        (NP
          (NP (NN hair))
          (PP (IN Of)
            (NP (JJ trailing) (NNS moss)))))
      (, ,)
      (CC and)
      (VP (VBD plaited)
        (NP (NN straw))
        (PP (IN for)
          (NP (NN crown)))))
    (. .)))

advmod(lived-4, _-1)
mark(lived-4, Because-2)
nsubj(lived-4, he-3)
advcl(cut-29, lived-4)
case(folk-8, among-5)
det(folk-8, a-6)
amod(folk-8, simple-7)
nmod:among(lived-4, folk-8)
mark(hills-16, Because-10)
nmod:poss(village-12, his-11)
nsubj(hills-16, village-12)
cop(hills-16, was-13)
case(hills-16, between-14)
det(hills-16, the-15)
advcl(cut-29, hills-16)
mark(smeared-20, Because-18)
nsubj(smeared-20, he-19)
advcl(cut-29, smeared-20)
nmod:poss(cheeks-22, his-21)
dobj(smeared-20, cheeks-22)
case(blood-24, with-23)
nmod:with(smeared-20, blood-24)
case(ewes-26, of-25)
nmod:of(blood-24, ewes-26)
nsubj(cut-29, He-28)
nsubj(wedged-44, He-28)
nsubj(gave-54, He-28)
nsubj(plaited-62, He-28)
root(ROOT-0, cut-29)
det(blood-38, an-30)
amod(blood-38, idol-31)
case(pine-35, from-32)
det(pine-35, a-33)
amod(pine-35, fallen-34)
nmod:from(idol-31, pine-35)
appos(pine-35, Smeared-37)
dobj(cut-29, blood-38)
case(cheeks-41, upon-39)
nmod:poss(cheeks-41, its-40)
nmod:upon(cut-29, cheeks-41)
cc(cut-29, and-43)
conj:and(cut-29, wedged-44)
det(shell-46, a-45)
xcomp(wedged-44, shell-46)
case(brows-49, Above-47)
nmod:poss(brows-49, its-48)
dep(shell-46, brows-49)
case(eyes-51, for-50)
nmod:for(brows-49, eyes-51)
cc(cut-29, and-53)
conj:and(cut-29, gave-54)
iobj(gave-54, it-55)
dobj(gave-54, hair-56)
case(moss-59, Of-57)
amod(moss-59, trailing-58)
nmod:of(hair-56, moss-59)
cc(cut-29, and-61)
conj:and(cut-29, plaited-62)
dobj(plaited-62, straw-63)
case(crown-65, for-64)
nmod:for(plaited-62, crown-65)

(ROOT
  (S (CC And)
    (S
      (NP (PDT all) (DT the) (NN village))
      (VP (VBD praised)
        (NP (PRP him))
        (PP (IN for)
          (NP (DT this) (NN craft)))))
    (, ,)
    (CC And)
    (SINV
      (VP (VBD brought)
        (NP (PRP him)))
      (NP
        (NP (NN butter))
        (, ,)
        (NP
          (NP (NN honey))
          (, ,)
          (NP (NN milk))
          (, ,)
          (CC and)
          (NP (NNS curds)))))
    (. .)))

cc(praised-5, And-1)
det:predet(village-4, all-2)
det(village-4, the-3)
nsubj(praised-5, village-4)
root(ROOT-0, praised-5)
dobj(praised-5, him-6)
case(craft-9, for-7)
det(craft-9, this-8)
nmod:for(praised-5, craft-9)
cc(praised-5, And-11)
conj:and(praised-5, brought-12)
dobj(brought-12, him-13)
nsubj(brought-12, butter-14)
appos(butter-14, honey-16)
appos(butter-14, milk-18)
conj:and(honey-16, milk-18)
cc(honey-16, and-20)
appos(butter-14, curds-21)
conj:and(honey-16, curds-21)

(ROOT
  (S
    (ADVP (RB Wherefore))
    (, ,)
    (S
      (SBAR (IN because)
        (S
          (NP (DT the) (NNS shoutings))
          (VP (VBD drove)
            (S
              (NP (PRP him))
              (ADJP (JJ mad))))))
      (, ,)
      (NP (PRP He))
      (VP (VBZ scratched)
        (PP (IN upon)
          (NP (DT that) (NN log)))))
    (: :) ('' '')
    (S
      (S
        (ADVP (RB _))
        (ADVP (RB Thus))
        (NP (NNS Gods))
        (VP (VBP are)
          (VP (VBN made))))
      (, ,)
      (CC And)
      (S
        (NP (NN whoso))
        (VP (VBZ makes)
          (SBAR
            (S
              (NP (PRP them))
              (ADVP (RB otherwise))
              (VP (MD shall)
                (VP (VB die))))))))
    (. .)))

advmod(scratched-11, Wherefore-1)
mark(drove-6, because-3)
det(shoutings-5, the-4)
nsubj(drove-6, shoutings-5)
advcl(scratched-11, drove-6)
nsubj(mad-8, him-7)
xcomp(drove-6, mad-8)
nsubj(scratched-11, He-10)
root(ROOT-0, scratched-11)
case(log-14, upon-12)
det(log-14, that-13)
nmod:upon(scratched-11, log-14)
advmod(made-21, _-17)
advmod(made-21, Thus-18)
nsubjpass(made-21, Gods-19)
auxpass(made-21, are-20)
parataxis(scratched-11, made-21)
cc(made-21, And-23)
nsubj(makes-25, whoso-24)
parataxis(scratched-11, makes-25)
conj:and(made-21, makes-25)
nsubj(die-29, them-26)
advmod(die-29, otherwise-27)
aux(die-29, shall-28)
ccomp(makes-25, die-29)

(ROOT
  (S
    (NP
      (NP (NN _) ('' ''))
      (CC And)
      (NP (PDT all) (DT the) (NNS people)))
    (VP (VBD praised)
      (NP (PRP him)))
    (: ...) (. .)))

nsubj(praised-7, _-1)
cc(_-1, And-3)
det:predet(people-6, all-4)
det(people-6, the-5)
conj:and(_-1, people-6)
nsubj(praised-7, people-6)
root(ROOT-0, praised-7)
dobj(praised-7, him-8)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD died))
    (. .)))

advmod(died-3, Then-1)
nsubj(died-3, he-2)
root(ROOT-0, died-3)

(ROOT
  (NP
    (NP
      (NP (NNP _) (NNP Read))
      (RRC
        (ADVP (RB here))
        (NP
          (NP (DT the) (NN story))
          (PP (IN of)
            (NP (NNP Evarra))))))
    (: --)
    (NP
      (NP (NN man))
      (: --)
      (NP
        (NP (NNP Maker))
        (PP (IN of)
          (NP
            (NP (NNS Gods))
            (PP (IN in)
              (NP
                (NP (NNS lands))
                (PP (IN beyond)
                  (NP (DT the) (NN sea)))))))))
    (. .)))

compound(Read-2, _-1)
root(ROOT-0, Read-2)
advmod(story-5, here-3)
det(story-5, the-4)
acl:relcl(Read-2, story-5)
case(Evarra-7, of-6)
nmod:of(story-5, Evarra-7)
dep(Read-2, man-9)
dep(man-9, Maker-11)
case(Gods-13, of-12)
nmod:of(Maker-11, Gods-13)
case(lands-15, in-14)
nmod:in(Gods-13, lands-15)
case(sea-18, beyond-16)
det(sea-18, the-17)
nmod:beyond(lands-15, sea-18)

(ROOT
  (S
    (S
      (S
        (NP (NNP _))
        (PP (IN Because)
          (NP
            (NP (PRP$ his) (NNP God) (CD decreed) (NN one) (NN clot))
            (PP (IN of)
              (NP (NN blood)))))
        (VP (MD Should)
          (VP (VB swerve)
            (NP
              (NP (CD one) (NN hair) (POS 's))
              (JJ -) (NN breadth))
            (PP (IN from)
              (NP
                (NP (DT the) (NN pulse) (POS 's))
                (NN path))))))
      (, ,)
      (CC And)
      (S
        (S
          (VP (VBG chafe)
            (NP (PRP$ his) (NN brain))))
        (, ,)
        (NP (NNP Evarra))
        (VP (VBD mowed)
          (ADVP (RB alone))
          (, ,)
          (S
            (ADJP (JJ Rag-wrapped)))))
      (, ,)
      (PP (IN among)
        (S
          (NP
            (NP (DT the) (NNS cattle))
            (PP (IN in)
              (NP (DT the) (NNS fields))))
          (, ,)
          (PP (VBG Counting)
            (NP (PRP$ his) (NNS fingers)))
          (, ,)
          (VP (VBG jesting)
            (PP (IN with)
              (NP (DT the) (NNS trees)))))))
    (, ,)
    (CC And)
    (S
      (VP (VBG mocking)
        (PP (IN at)
          (NP
            (NP (DT the) (NN mist))
            (, ,)
            (SBAR (IN until)
              (S
                (NP (PRP$ his) (NN God))
                (VP (VBP Drove)
                  (NP (PRP him))
                  (PP (TO to)
                    (NP (NN labour))))))))))
    (. .)))

nsubj(swerve-11, _-1)
nsubj(mocking-51, _-1)
case(clot-7, Because-2)
nmod:poss(clot-7, his-3)
compound(clot-7, God-4)
nummod(clot-7, decreed-5)
compound(clot-7, one-6)
nmod:because(swerve-11, clot-7)
case(blood-9, of-8)
nmod:of(clot-7, blood-9)
aux(swerve-11, Should-10)
root(ROOT-0, swerve-11)
nummod(hair-13, one-12)
nmod:poss(breadth-16, hair-13)
case(hair-13, 's-14)
amod(breadth-16, --15)
dobj(swerve-11, breadth-16)
case(path-21, from-17)
det(pulse-19, the-18)
nmod:poss(path-21, pulse-19)
case(pulse-19, 's-20)
nmod:from(swerve-11, path-21)
cc(swerve-11, And-23)
advcl(mowed-29, chafe-24)
nmod:poss(brain-26, his-25)
dobj(chafe-24, brain-26)
nsubj(mowed-29, Evarra-28)
conj:and(swerve-11, mowed-29)
advmod(mowed-29, alone-30)
xcomp(mowed-29, Rag-wrapped-32)
mark(jesting-45, among-34)
det(cattle-36, the-35)
nsubj(jesting-45, cattle-36)
case(fields-39, in-37)
det(fields-39, the-38)
nmod:in(cattle-36, fields-39)
case(fingers-43, Counting-41)
nmod:poss(fingers-43, his-42)
nmod:counting(jesting-45, fingers-43)
advcl(swerve-11, jesting-45)
case(trees-48, with-46)
det(trees-48, the-47)
nmod:with(jesting-45, trees-48)
cc(swerve-11, And-50)
conj:and(swerve-11, mocking-51)
case(mist-54, at-52)
det(mist-54, the-53)
nmod:at(mocking-51, mist-54)
mark(Drove-59, until-56)
nmod:poss(God-58, his-57)
nsubj(Drove-59, God-58)
acl(mist-54, Drove-59)
dobj(Drove-59, him-60)
case(labour-62, to-61)
nmod:to(Drove-59, labour-62)

(ROOT
  (S
    (PP (IN Out)
      (NP
        (NP
          (PP (IN of)
            (NP (NN dung)
              (CC and)
              (NNS horns)))
          (NP (NNP Dropped))
          (PP (IN in)
            (NP
              (NP (DT the) (NN mire))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD made)
                    (SBAR
                      (S
                        (NP
                          (NP (DT a) (JJ monstrous) (NN God))
                          (, ,)
                          (NP (NNP Abhorrent))
                          (, ,))
                        (VP (VBZ shapeless))))))))))
        (, ,)
        (VP (VBN crowned)
          (PP (IN with)
            (NP (NN plantain) (NNS tufts))))))
    (, ,)
    (S (CC And)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NNS cattle))
          (VP (VBD lowed)
            (PP (IN at)
              (NP (NN twilight-time))))))
      (, ,)
      (NP (PRP He))
      (VP (VBD dreamed)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (UCP
                (NP
                  (NP (DT the) (NN clamour))
                  (PP (IN of)
                    (NP (JJ lost) (NNS crowds))))
                (, ,)
                (CC And)
                (VP (VBN howled)
                  (PP (IN among)
                    (NP (DT the) (NNS beasts))))))))))
    (: :) ('' '')
    (S
      (S
        (ADVP (RB _))
        (ADVP (RB Thus))
        (NP (NNS Gods))
        (VP (VBP are)
          (VP (VBN made))))
      (, ,)
      (CC And)
      (S
        (NP (NN whoso))
        (VP (VBZ makes)
          (SBAR
            (S
              (NP (PRP them))
              (ADVP (RB otherwise))
              (VP (MD shall)
                (VP (VB die))))))))
    (. .)))

case(Dropped-6, Out-1)
case(dung-3, of-2)
nmod:of(Dropped-6, dung-3)
cc(dung-3, and-4)
conj:and(dung-3, horns-5)
nmod:of(Dropped-6, horns-5)
nmod:out(dreamed-34, Dropped-6)
case(mire-9, in-7)
det(mire-9, the-8)
nmod:in(Dropped-6, mire-9)
nsubj(made-11, he-10)
acl:relcl(mire-9, made-11)
det(God-14, a-12)
amod(God-14, monstrous-13)
nsubj(shapeless-18, God-14)
appos(God-14, Abhorrent-16)
ccomp(made-11, shapeless-18)
acl(Dropped-6, crowned-20)
case(tufts-23, with-21)
compound(tufts-23, plantain-22)
nmod:with(crowned-20, tufts-23)
cc(dreamed-34, And-25)
advmod(lowed-29, when-26)
det(cattle-28, the-27)
nsubj(lowed-29, cattle-28)
advcl(dreamed-34, lowed-29)
case(twilight-time-31, at-30)
nmod:at(lowed-29, twilight-time-31)
nsubj(dreamed-34, He-33)
root(ROOT-0, dreamed-34)
nsubj(clamour-38, it-35)
cop(clamour-38, was-36)
det(clamour-38, the-37)
ccomp(dreamed-34, clamour-38)
case(crowds-41, of-39)
amod(crowds-41, lost-40)
nmod:of(clamour-38, crowds-41)
cc(clamour-38, And-43)
acl(clamour-38, howled-44)
case(beasts-47, among-45)
det(beasts-47, the-46)
nmod:among(howled-44, beasts-47)
advmod(made-54, _-50)
advmod(made-54, Thus-51)
nsubjpass(made-54, Gods-52)
auxpass(made-54, are-53)
parataxis(dreamed-34, made-54)
cc(made-54, And-56)
nsubj(makes-58, whoso-57)
parataxis(dreamed-34, makes-58)
conj:and(made-54, makes-58)
nsubj(die-62, them-59)
advmod(die-62, otherwise-60)
aux(die-62, shall-61)
ccomp(makes-58, die-62)

(ROOT
  (S
    (NP
      (NP (NNP _) ('' '') (NNP Thereat))
      (NP (DT the) (NNS cattle)))
    (VP (VBD bellowed))
    (: ...) (. .)))

compound(Thereat-3, _-1)
nsubj(bellowed-6, Thereat-3)
det(cattle-5, the-4)
dep(Thereat-3, cattle-5)
root(ROOT-0, bellowed-6)

(ROOT
  (S (RB Then)
    (NP (PRP he))
    (VP (VBD died))
    (. .)))

advmod(died-3, Then-1)
nsubj(died-3, he-2)
root(ROOT-0, died-3)

(ROOT
  (S (CC Yet)
    (PP (IN at)
      (NP (DT the) (JJ last)))
    (S
      (NP (PRP he))
      (VP (VBD came)
        (PP (TO to)
          (NP (NNP Paradise)))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBD found)
          (NP
            (NP (PRP$ his) (JJ own) (CD four) (NNS Gods))
            (, ,)
            (CC and)
            (NP (DT that)))
          (S
            (S
              (NP (PRP he))
              (VP (VBD wrote)))
            (: ;)
            (CC And)
            (FRAG
              (ADJP (JJ marvelled))))
          (, ,)
          (S
            (VP (VBG being)
              (ADJP (RB very) (JJ near)
                (PP (TO to)
                  (NP
                    (NP (NNP God))
                    (, ,)
                    (SBAR
                      (WHNP (WP What))
                      (S
                        (NP
                          (NP (NN oaf))
                          (PP (IN on)
                            (NP (NN earth))))
                        (VP (VBD had)
                          (VP (VBN made)
                            (NP (PRP$ his) (JJ toil)
                              (NP (NNP God) (POS 's))
                              (NN law)))))))))))))
      (, ,)
      (NP (NNP Till) (NNP God))
      (VP (VBD said)
        (S
          (VP (VBG mocking) (: :) (`` ``)
            (NP (NN Mock) (RB not))))))
    (. .)))

cc(came-6, Yet-1)
case(last-4, at-2)
det(last-4, the-3)
nmod:at(came-6, last-4)
nsubj(came-6, he-5)
root(ROOT-0, came-6)
case(Paradise-8, to-7)
nmod:to(came-6, Paradise-8)
cc(came-6, And-10)
ccomp(said-45, found-11)
nmod:poss(Gods-15, his-12)
amod(Gods-15, own-13)
nummod(Gods-15, four-14)
dobj(found-11, Gods-15)
cc(Gods-15, and-17)
dobj(found-11, that-18)
conj:and(Gods-15, that-18)
nsubj(wrote-20, he-19)
nsubj(marvelled-23, he-19)
xcomp(found-11, wrote-20)
cc(wrote-20, And-22)
xcomp(found-11, marvelled-23)
conj:and(wrote-20, marvelled-23)
cop(God-29, being-25)
advmod(God-29, very-26)
case(God-29, near-27)
mwe(near-27, to-28)
xcomp(found-11, God-29)
dobj(made-36, God-29)
ref(God-29, What-31)
nsubj(made-36, oaf-32)
case(earth-34, on-33)
nmod:on(oaf-32, earth-34)
aux(made-36, had-35)
acl:relcl(God-29, made-36)
nmod:poss(law-41, his-37)
amod(law-41, toil-38)
nmod:poss(law-41, God-39)
case(God-39, 's-40)
dobj(made-36, law-41)
compound(God-44, Till-43)
nsubj(said-45, God-44)
conj:and(came-6, said-45)
xcomp(said-45, mocking-46)
dobj(mocking-46, Mock-49)
neg(Mock-49, not-50)

(ROOT
  (S
    (NP (DT These))
    (VP (VB be)
      (VP (VBN thine)))
    (. .) ('' '')))

nsubjpass(thine-3, These-1)
auxpass(thine-3, be-2)
root(ROOT-0, thine-3)

(ROOT
  (SINV
    (VP
      (ADVP (RB Then))
      (VBD cried))
    (NP (NNP Evarra))
    (: :) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN sinned))))
    (. !) ('' '')))

advmod(cried-2, Then-1)
root(ROOT-0, cried-2)
nsubj(cried-2, Evarra-3)
nsubj(sinned-8, I-6)
aux(sinned-8, have-7)
ccomp(cried-2, sinned-8)

(ROOT
  (S
    (LST (: --))
    (VP (`` ``) (VB Not)
      (ADVP (RB so)))
    (. .)))

root(ROOT-0, Not-3)
advmod(Not-3, so-4)

(ROOT
  (S
    (S
      (S
        (SBAR (IN If)
          (S
            (NP (PRP thou))
            (VP (VBP hadst)
              (VP (VBN written)
                (ADVP (RB otherwise))))))
        (, ,)
        (NP (PRP$ thy) (NNS Gods))
        (VP (VBD Had)
          (VP (VBN rested)
            (PP (IN in)
              (NP
                (NP (DT the) (NN mountain))
                (CC and)
                (NP (DT the) (NN mine)))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP I))
        (VP (VBD were)
          (ADJP (JJR poorer))
          (PP (IN by)
            (NP (CD four) (JJ wondrous) (NNS Gods))))))
    (, ,)
    (CC And)
    (SINV
      (VP (VBZ thy))
      (NP
        (NP (JJR more) (JJ wondrous) (NN law))
        (, ,)
        (NP (NNP Evarra))))
    (. .)))

mark(hadst-3, If-1)
nsubj(hadst-3, thou-2)
advcl(rested-10, hadst-3)
dep(hadst-3, written-4)
advmod(written-4, otherwise-5)
nmod:poss(Gods-8, thy-7)
nsubj(rested-10, Gods-8)
aux(rested-10, Had-9)
root(ROOT-0, rested-10)
case(mountain-13, in-11)
det(mountain-13, the-12)
nmod:in(rested-10, mountain-13)
cc(mountain-13, and-14)
det(mine-16, the-15)
nmod:in(rested-10, mine-16)
conj:and(mountain-13, mine-16)
cc(rested-10, And-18)
nsubj(poorer-21, I-19)
cop(poorer-21, were-20)
conj:and(rested-10, poorer-21)
case(Gods-25, by-22)
nummod(Gods-25, four-23)
amod(Gods-25, wondrous-24)
nmod:by(poorer-21, Gods-25)
cc(rested-10, And-27)
conj:and(rested-10, thy-28)
amod(law-31, more-29)
amod(law-31, wondrous-30)
nsubj(thy-28, law-31)
appos(law-31, Evarra-33)

(ROOT
  (NP
    (NP (NNP Thine) (, ,) (NNP Servant))
    (PP (IN of)
      (S
        (VP
          (VP (VBG shouting)
            (NP (NNS crowds)))
          (CC and)
          (VP (VBG lowing)
            (NP (NN kine))))))
    (. .) ('' '')))

compound(Servant-3, Thine-1)
root(ROOT-0, Servant-3)
mark(shouting-5, of-4)
acl(Servant-3, shouting-5)
dobj(shouting-5, crowds-6)
cc(shouting-5, and-7)
acl(Servant-3, lowing-8)
conj:and(shouting-5, lowing-8)
dobj(lowing-8, kine-9)

(ROOT
  (S
    (NP (NNP Thereat))
    (, ,)
    (PP (IN with)
      (S
        (VP (VBG laughing)
          (NP
            (NP (NN mouth))
            (, ,)
            (CC but)
            (NP (JJ tear-wet) (NNS eyes))))))
    (, ,)
    (NP (NNP Evarra))
    (VP (VBD cast)
      (NP (PRP$ his) (NNS Gods))
      (PP (IN from)
        (NP (NNP Paradise))))
    (. .)))

nsubj(cast-12, Thereat-1)
mark(laughing-4, with-3)
advcl(cast-12, laughing-4)
dobj(laughing-4, mouth-5)
cc(mouth-5, but-7)
amod(eyes-9, tear-wet-8)
dobj(laughing-4, eyes-9)
conj:but(mouth-5, eyes-9)
nsubj(cast-12, Evarra-11)
root(ROOT-0, cast-12)
nmod:poss(Gods-14, his-13)
dobj(cast-12, Gods-14)
case(Paradise-16, from-15)
nmod:from(cast-12, Paradise-16)

(ROOT
  (S
    (ADVP (RB _))
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN story))
        (PP (IN of)
          (NP (NNP Evarra)
            (PRN (: --)
              (NP (NN man))
              (: --))
            (NNP Maker)))
        (PP (IN of)
          (NP
            (NP (NNS Gods))
            (PP (IN in)
              (NP
                (NP (NNS lands))
                (PP (IN beyond)
                  (NP (DT the) (NN sea)))))))))
    (. .)))

advmod(story-5, _-1)
nsubj(story-5, This-2)
cop(story-5, is-3)
det(story-5, the-4)
root(ROOT-0, story-5)
case(Maker-11, of-6)
compound(Maker-11, Evarra-7)
dep(Maker-11, man-9)
nmod:of(story-5, Maker-11)
case(Gods-13, of-12)
nmod:of(story-5, Gods-13)
case(lands-15, in-14)
nmod:in(Gods-13, lands-15)
case(sea-18, beyond-16)
det(sea-18, the-17)
nmod:beyond(lands-15, sea-18)

(ROOT
  (SINV
    (VP (VBZ _))
    (NP
      (NP (DT THE) (NNP CONUNDRUM))
      (PP (IN OF)
        (NP
          (NP (DT THE) (NNS WORKSHOPS))
          (SBAR
            (WHADVP (WRB When))
            (S
              (NP
                (NP (DT the) (NN flush))
                (PP (IN of)
                  (NP (DT a) (JJ new-born) (NN sun))))
              (VP (VBD fell)
                (ADVP (RB first))
                (PP (IN on)
                  (NP
                    (NP (NNP Eden) (POS 's))
                    (NN green)
                    (CC and)
                    (NN gold)))
                (, ,)
                (S
                  (S
                    (NP (PRP$ Our) (NN father) (NNP Adam))
                    (VP (VBD sat)
                      (PP (IN under)
                        (NP (DT the) (NNP Tree)
                          (CC and)
                          (NNP scratched)))
                      (PP (IN with)
                        (NP
                          (NP (DT a) (NN stick))
                          (PP (IN in)
                            (NP (DT the) (NN mould)))))))
                  (: ;)
                  (CC And)
                  (S
                    (NP
                      (NP (DT the) (JJ first) (JJ rude) (NN sketch))
                      (SBAR (IN that)
                        (S
                          (NP (DT the) (NN world))
                          (VP (VBD had)
                            (VP (VBN seen))))))
                    (VP (VBD was)
                      (ADJP (JJ joy)
                        (PP (TO to)
                          (NP (PRP$ his) (JJ mighty) (NN heart))))
                      (, ,)
                      (PP (IN Till)
                        (NP
                          (NP (DT the) (NNP Devil))
                          (VP (VBN whispered)
                            (PP (IN behind)
                              (NP (DT the) (NNS leaves)))))))))))))))
    (, ,) (`` ``)
    (S
      (S
        (NP (PRP It))
        (VP (VBZ 's)
          (ADJP (JJ pretty))))
      (, ,)
      (CC but)
      (SINV
        (VP (VBZ is)
          (NP (PRP it)))
        (NP (NNP Art))))
    (. ?) ('' '')))

root(ROOT-0, _-1)
det(CONUNDRUM-3, THE-2)
nsubj(_-1, CONUNDRUM-3)
case(WORKSHOPS-6, OF-4)
det(WORKSHOPS-6, THE-5)
nmod:of(CONUNDRUM-3, WORKSHOPS-6)
advmod(fell-14, When-7)
det(flush-9, the-8)
nsubj(fell-14, flush-9)
case(sun-13, of-10)
det(sun-13, a-11)
amod(sun-13, new-born-12)
nmod:of(flush-9, sun-13)
acl:relcl(WORKSHOPS-6, fell-14)
advmod(fell-14, first-15)
case(green-19, on-16)
nmod:poss(green-19, Eden-17)
case(Eden-17, 's-18)
nmod:on(fell-14, green-19)
cc(green-19, and-20)
nmod:on(fell-14, gold-21)
conj:and(green-19, gold-21)
nmod:poss(Adam-25, Our-23)
compound(Adam-25, father-24)
nsubj(sat-26, Adam-25)
xcomp(fell-14, sat-26)
case(Tree-29, under-27)
det(Tree-29, the-28)
nmod:under(sat-26, Tree-29)
cc(Tree-29, and-30)
nmod:under(sat-26, scratched-31)
conj:and(Tree-29, scratched-31)
case(stick-34, with-32)
det(stick-34, a-33)
nmod:with(sat-26, stick-34)
case(mould-37, in-35)
det(mould-37, the-36)
nmod:in(stick-34, mould-37)
cc(sat-26, And-39)
det(sketch-43, the-40)
amod(sketch-43, first-41)
amod(sketch-43, rude-42)
nsubj(joy-50, sketch-43)
mark(seen-48, that-44)
det(world-46, the-45)
nsubj(seen-48, world-46)
aux(seen-48, had-47)
dep(sketch-43, seen-48)
cop(joy-50, was-49)
xcomp(fell-14, joy-50)
conj:and(sat-26, joy-50)
case(heart-54, to-51)
nmod:poss(heart-54, his-52)
amod(heart-54, mighty-53)
nmod:to(joy-50, heart-54)
case(Devil-58, Till-56)
det(Devil-58, the-57)
nmod:till(joy-50, Devil-58)
acl(Devil-58, whispered-59)
case(leaves-62, behind-60)
det(leaves-62, the-61)
nmod:behind(whispered-59, leaves-62)
nsubj(pretty-67, It-65)
cop(pretty-67, 's-66)
ccomp(_-1, pretty-67)
cc(pretty-67, but-69)
cop(it-71, is-70)
ccomp(_-1, it-71)
conj:but(pretty-67, it-71)
nsubj(it-71, Art-72)

(ROOT
  (S
    (VP (VB Wherefore)
      (SBAR
        (S
          (NP (PRP he))
          (VP
            (VP (VBD called)
              (PP (TO to)
                (NP (PRP$ his) (NN wife))))
            (, ,)
            (CC and)
            (VP (VBD fled)
              (S
                (VP (TO to)
                  (VP (VB fashion)
                    (NP (PRP$ his) (NN work))
                    (ADVP (RB anew))
                    (PRN (: --)
                      (NP
                        (NP (DT The) (JJ first))
                        (PP (IN of)
                          (NP
                            (NP (PRP$ his) (NN race))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBD cared)
                                  (NP
                                    (NP (DT a) (NN fig))
                                    (PP (IN for)
                                      (NP
                                        (NP (DT the) (JJ first) (, ,)
                                          (ADJP (RBS most) (JJ dread))
                                          (NN review))
                                        (: ;)
                                        (S
                                          (S (CC And)
                                            (NP (PRP he))
                                            (VP (VBD left)
                                              (NP (PRP$ his) (NN lore))
                                              (PP (TO to)
                                                (NP
                                                  (NP (DT the) (NN use))
                                                  (PP (IN of)
                                                    (NP (PRP$ his) (NNS sons)))))))
                                          (: --)
                                          (S (CC and)
                                            (NP (DT that))
                                            (VP (VBD was)
                                              (NP
                                                (NP (DT a) (JJ glorious) (NN gain))
                                                (SBAR
                                                  (WHADVP (WRB When))
                                                  (S
                                                    (NP (DT the) (NNP Devil))
                                                    (VP (VBD chuckled))))))))))))))))))
                    (`` ``)
                    (SQ (VBZ Is)
                      (NP (PRP it))
                      (NP (NNP Art))
                      (. ?))
                    ('' '')))))))))))

root(ROOT-0, Wherefore-1)
nsubj(called-3, he-2)
nsubj(fled-9, he-2)
nsubj:xsubj(fashion-11, he-2)
ccomp(Wherefore-1, called-3)
case(wife-6, to-4)
nmod:poss(wife-6, his-5)
nmod:to(called-3, wife-6)
cc(called-3, and-8)
ccomp(Wherefore-1, fled-9)
conj:and(called-3, fled-9)
mark(fashion-11, to-10)
xcomp(fled-9, fashion-11)
nmod:poss(work-13, his-12)
dobj(fashion-11, work-13)
advmod(fashion-11, anew-14)
det(first-17, The-16)
dep(fashion-11, first-17)
case(race-20, of-18)
nmod:poss(race-20, his-19)
nmod:of(first-17, race-20)
nsubj(cared-22, race-20)
ref(race-20, who-21)
acl:relcl(race-20, cared-22)
det(fig-24, a-23)
dobj(cared-22, fig-24)
case(review-31, for-25)
det(review-31, the-26)
amod(review-31, first-27)
advmod(dread-30, most-29)
amod(review-31, dread-30)
nmod:for(fig-24, review-31)
cc(left-35, And-33)
nsubj(left-35, he-34)
dep(review-31, left-35)
nmod:poss(lore-37, his-36)
dobj(left-35, lore-37)
case(use-40, to-38)
det(use-40, the-39)
nmod:to(left-35, use-40)
case(sons-43, of-41)
nmod:poss(sons-43, his-42)
nmod:of(use-40, sons-43)
cc(gain-50, and-45)
nsubj(gain-50, that-46)
cop(gain-50, was-47)
det(gain-50, a-48)
amod(gain-50, glorious-49)
parataxis(left-35, gain-50)
advmod(chuckled-54, When-51)
det(Devil-53, the-52)
nsubj(chuckled-54, Devil-53)
acl:relcl(gain-50, chuckled-54)
cop(Art-58, Is-56)
nsubj(Art-58, it-57)
dep(fashion-11, Art-58)

(ROOT
  (FRAG
    (PP (IN in)
      (NP
        (NP (DT the) (NN ear))
        (PP (IN of)
          (NP (DT the) (JJ branded) (NN Cain)))))
    (. .)))

case(ear-3, in-1)
det(ear-3, the-2)
root(ROOT-0, ear-3)
case(Cain-7, of-4)
det(Cain-7, the-5)
amod(Cain-7, branded-6)
nmod:of(ear-3, Cain-7)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD fought)))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD talked)
        (PP (IN in)
          (NP
            (NP (DT the) (NNP North))
            (CC and)
            (NP (DT the) (NNP South))))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBD talked)))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBD fought)
        (PP (IN in)
          (NP (DT the) (NNP West)))
        (, ,)
        (PP (IN Till)
          (S
            (S
              (NP (DT the) (NNS waters))
              (VP (VBD rose)
                (PP (IN on)
                  (NP (DT the) (JJ pitiful) (NN land)))))
            (, ,)
            (CC and)
            (S
              (NP (DT the) (JJ poor) (NNP Red) (NNP Clay))
              (VP
                (VP (VBD had)
                  (NP (NN rest)))
                (: --)
                (VP (VBD Had)
                  (NP (NN rest))
                  (PP (IN till)
                    (NP (DT that) (NN dank) (NNS blank-canvas) (NN dawn)))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (S
                        (NP (DT the) (NN dove))
                        (VP (VBD was)
                          (VP (VBN preened)
                            (S
                              (VP (TO to)
                                (VP (VB start)))))))
                      (, ,)
                      (CC And)
                      (S
                        (NP (DT the) (NNP Devil))
                        (VP (VBD bubbled)
                          (PP (IN below)
                            (NP (DT the) (NN keel)))
                          (: :) (`` ``)
                          (S
                            (NP (PRP It))
                            (VP (VBZ 's)
                              (ADJP (JJ human)))))))))
                (, ,)
                (CC but)
                (VP (VBZ is)
                  (NP (PRP it) (NN Art)))))))))
    (. ?) ('' '')))

nsubj(fought-2, They-1)
root(ROOT-0, fought-2)
cc(fought-2, and-3)
nsubj(talked-5, they-4)
conj:and(fought-2, talked-5)
case(North-8, in-6)
det(North-8, the-7)
nmod:in(talked-5, North-8)
cc(North-8, and-9)
det(South-11, the-10)
nmod:in(talked-5, South-11)
conj:and(North-8, South-11)
nsubj(talked-14, they-13)
dep(fought-2, talked-14)
cc(fought-2, and-15)
nsubj(fought-17, they-16)
conj:and(fought-2, fought-17)
case(West-20, in-18)
det(West-20, the-19)
nmod:in(fought-17, West-20)
mark(rose-25, Till-22)
det(waters-24, the-23)
nsubj(rose-25, waters-24)
advcl(fought-17, rose-25)
case(land-29, on-26)
det(land-29, the-27)
amod(land-29, pitiful-28)
nmod:on(rose-25, land-29)
cc(rose-25, and-31)
det(Clay-35, the-32)
amod(Clay-35, poor-33)
compound(Clay-35, Red-34)
nsubj(had-36, Clay-35)
nsubj(Had-39, Clay-35)
advcl(fought-17, had-36)
conj:and(rose-25, had-36)
dobj(had-36, rest-37)
conj:and(rose-25, Had-39)
conj:but(had-36, Had-39)
dobj(Had-39, rest-40)
case(dawn-45, till-41)
det(dawn-45, that-42)
compound(dawn-45, dank-43)
compound(dawn-45, blank-canvas-44)
nmod:till(Had-39, dawn-45)
advmod(preened-50, when-46)
det(dove-48, the-47)
nsubjpass(preened-50, dove-48)
nsubj:xsubj(start-52, dove-48)
auxpass(preened-50, was-49)
advcl(Had-39, preened-50)
mark(start-52, to-51)
xcomp(preened-50, start-52)
cc(preened-50, And-54)
det(Devil-56, the-55)
nsubj(bubbled-57, Devil-56)
advcl(Had-39, bubbled-57)
conj:and(preened-50, bubbled-57)
case(keel-60, below-58)
det(keel-60, the-59)
nmod:below(bubbled-57, keel-60)
nsubj(human-65, It-63)
cop(human-65, 's-64)
ccomp(bubbled-57, human-65)
cc(had-36, but-67)
cop(Art-70, is-68)
dep(Art-70, it-69)
conj:and(rose-25, Art-70)
conj:but(had-36, Art-70)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD builded)
        (NP (DT a) (NN tower)
          (S
            (VP (TO to)
              (VP
                (VP (VB shiver)
                  (NP (DT the) (NN sky)))
                (CC and)
                (VP (VB wrench)
                  (NP (DT the) (NNS stars))
                  (ADVP (RB apart)))))))
        (, ,)
        (PP (IN Till)
          (NP
            (NP (DT the) (NNP Devil))
            (VP (VBN grunted)
              (PP (IN behind)
                (NP (DT the) (NNS bricks))))))))
    (: :) (`` ``)
    (S
      (S
        (NP (PRP It))
        (VP (VBZ 's)
          (ADJP (JJ striking))))
      (, ,)
      (CC but)
      (SQ (VBZ is)
        (NP (PRP it))
        (ADJP (JJ Art))))
    (. ?) ('' '')))

nsubj(builded-2, They-1)
root(ROOT-0, builded-2)
det(tower-4, a-3)
dobj(builded-2, tower-4)
mark(shiver-6, to-5)
acl(tower-4, shiver-6)
det(sky-8, the-7)
dobj(shiver-6, sky-8)
cc(shiver-6, and-9)
acl(tower-4, wrench-10)
conj:and(shiver-6, wrench-10)
det(stars-12, the-11)
dobj(wrench-10, stars-12)
advmod(wrench-10, apart-13)
case(Devil-17, Till-15)
det(Devil-17, the-16)
nmod:till(builded-2, Devil-17)
acl(Devil-17, grunted-18)
case(bricks-21, behind-19)
det(bricks-21, the-20)
nmod:behind(grunted-18, bricks-21)
nsubj(striking-26, It-24)
cop(striking-26, 's-25)
parataxis(builded-2, striking-26)
cc(striking-26, but-28)
cop(Art-31, is-29)
nsubj(Art-31, it-30)
parataxis(builded-2, Art-31)
conj:but(striking-26, Art-31)

(ROOT
  (S
    (S
      (NP (DT The) (NN stone))
      (VP (VBD was)
        (VP (VBN dropped)
          (PP (IN at)
            (NP (DT the) (NN quarry-side))))))
    (CC and)
    (S
      (NP (DT the) (JJ idle) (NN derrick))
      (VP (VBD swung)))
    (, ,)
    (SBAR (IN While)
      (S
        (NP (DT each) (NN man))
        (VP (VBD talked)
          (PP (IN of)
            (NP
              (NP
                (NP (DT the) (NNS aims))
                (PP (IN of)
                  (NP (NNP Art))))
              (, ,)
              (CC and)
              (NP
                (NP (DT each))
                (PP (IN in)
                  (NP (DT an) (JJ alien) (NN tongue)))))))))
    (. .)))

det(stone-2, The-1)
nsubjpass(dropped-4, stone-2)
auxpass(dropped-4, was-3)
root(ROOT-0, dropped-4)
case(quarry-side-7, at-5)
det(quarry-side-7, the-6)
nmod:at(dropped-4, quarry-side-7)
cc(dropped-4, and-8)
det(derrick-11, the-9)
amod(derrick-11, idle-10)
nsubj(swung-12, derrick-11)
conj:and(dropped-4, swung-12)
mark(talked-17, While-14)
det(man-16, each-15)
nsubj(talked-17, man-16)
dep(dropped-4, talked-17)
case(aims-20, of-18)
det(aims-20, the-19)
nmod:of(talked-17, aims-20)
case(Art-22, of-21)
nmod:of(aims-20, Art-22)
cc(aims-20, and-24)
nmod:of(talked-17, each-25)
conj:and(aims-20, each-25)
case(tongue-29, in-26)
det(tongue-29, an-27)
amod(tongue-29, alien-28)
nmod:in(each-25, tongue-29)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN tale))
        (VP (VBZ is)
          (ADJP (RB as) (JJ old)
            (PP (IN as)
              (NP (DT the) (NNP Eden) (NNP Tree))))
          (PRN (: --)
            (CC and)
            (ADJP (JJ new)
              (PP (IN as)
                (NP (DT the) (JJ new-cut) (NN tooth))))
            (: --))))
      (IN For)
      (S
        (NP (DT each) (NN man))
        (VP (VBZ knows)
          (NP
            (NP (NN ere))
            (SBAR
              (S
                (NP (PRP$ his) (NN lip-thatch))
                (VP (VBZ grows)
                  (S
                    (S
                      (NP (PRP he))
                      (VP (VBZ is)
                        (NP
                          (NP (NN master))
                          (PP (IN of)
                            (NP (NNP Art)
                              (CC and)
                              (NNP Truth))))))
                    (: ;)
                    (CC And)
                    (S
                      (NP (DT each) (NN man))
                      (VP (VBZ hears)
                        (SBAR (IN as)
                          (S
                            (NP (DT the) (NN twilight))
                            (VP (VBZ nears)))))))))))
          (, ,)
          (PP (TO to)
            (NP
              (NP (DT the) (NN beat))
              (PP (IN of)
                (NP (PRP$ his) (VBG dying) (NN heart)))))))
      (, ,)
      (S
        (NP (DT The) (NNP Devil))
        (VP (VB drum)
          (PP (IN on)
            (NP (DT the) (JJ darkened) (NN pane))))))
    (: :) (`` ``)
    (S
      (S
        (NP (PRP You))
        (VP (VBD did)
          (NP (PRP it))))
      (, ,)
      (CC but)
      (SQ (VBD was)
        (NP (PRP it))
        (NP (NNP Art))))
    (. ?) ('' '')))

det(tale-2, The-1)
nsubj(old-5, tale-2)
cop(old-5, is-3)
advmod(old-5, as-4)
root(ROOT-0, old-5)
case(Tree-9, as-6)
det(Tree-9, the-7)
compound(Tree-9, Eden-8)
nmod:as(old-5, Tree-9)
cc(new-12, and-11)
dep(old-5, new-12)
case(tooth-16, as-13)
det(tooth-16, the-14)
amod(tooth-16, new-cut-15)
nmod:as(new-12, tooth-16)
dep(old-5, For-18)
det(man-20, each-19)
nsubj(knows-21, man-20)
parataxis(old-5, knows-21)
dobj(knows-21, ere-22)
nmod:poss(lip-thatch-24, his-23)
nsubj(grows-25, lip-thatch-24)
acl:relcl(ere-22, grows-25)
nsubj(master-28, he-26)
cop(master-28, is-27)
xcomp(grows-25, master-28)
case(Art-30, of-29)
nmod:of(master-28, Art-30)
cc(Art-30, and-31)
nmod:of(master-28, Truth-32)
conj:and(Art-30, Truth-32)
cc(master-28, And-34)
det(man-36, each-35)
nsubj(hears-37, man-36)
xcomp(grows-25, hears-37)
conj:and(master-28, hears-37)
mark(nears-41, as-38)
det(twilight-40, the-39)
nsubj(nears-41, twilight-40)
advcl(hears-37, nears-41)
case(beat-45, to-43)
det(beat-45, the-44)
nmod:to(knows-21, beat-45)
case(heart-49, of-46)
nmod:poss(heart-49, his-47)
amod(heart-49, dying-48)
nmod:of(beat-45, heart-49)
det(Devil-52, The-51)
nsubj(drum-53, Devil-52)
parataxis(old-5, drum-53)
case(pane-57, on-54)
det(pane-57, the-55)
amod(pane-57, darkened-56)
nmod:on(drum-53, pane-57)
nsubj(did-61, You-60)
parataxis(old-5, did-61)
dobj(did-61, it-62)
cc(did-61, but-64)
cop(Art-67, was-65)
nsubj(Art-67, it-66)
parataxis(old-5, Art-67)
conj:but(did-61, Art-67)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP have)
        (VP (VBN learned)
          (S
            (VP (TO to)
              (VP (VB whittle)
                (NP (DT the) (NNP Eden) (NNP Tree))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN shape))
                    (PP (IN of)
                      (NP (DT a) (NN surplice-peg)))))))))))
    (, ,)
    (S
      (NP (PRP We))
      (VP (VBP have)
        (VP (VBN learned)
          (S
            (VP (TO to)
              (VP (VB bottle)
                (NP (PRP$ our) (NNS parents) (NN twain))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN yelk))
                    (PP (IN of)
                      (NP (DT an) (JJ addled) (NN egg)))))))))))
    (, ,)
    (S
      (NP (PRP We))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN tail))
            (VP (MD must)
              (VP (VB wag)
                (NP (DT the) (NN dog))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (DT the) (NN horse))
                    (VP (VBZ is)
                      (VP (VBN drawn)
                        (PP (IN by)
                          (NP (DT the) (NN cart)))))))))))))
    (: ;)
    (S (CC But)
      (NP (DT the) (NNP Devil))
      (VP (VBZ whoops) (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBD whooped)
              (PP (IN of)
                (ADJP (JJ old))))))))
    (: :) (`` ``)
    (S
      (S
        (NP (PRP It))
        (VP (VBZ 's)
          (ADJP (JJ clever))))
      (, ,)
      (CC but)
      (SQ (VBZ is)
        (NP (PRP it))
        (ADJP (JJ Art))))
    (. ?) ('' '')))

nsubj(learned-3, We-1)
nsubj:xsubj(whittle-5, We-1)
aux(learned-3, have-2)
root(ROOT-0, learned-3)
mark(whittle-5, to-4)
xcomp(learned-3, whittle-5)
det(Tree-8, the-6)
compound(Tree-8, Eden-7)
dobj(whittle-5, Tree-8)
case(shape-11, to-9)
det(shape-11, the-10)
nmod:to(whittle-5, shape-11)
case(surplice-peg-14, of-12)
det(surplice-peg-14, a-13)
nmod:of(shape-11, surplice-peg-14)
nsubj(learned-18, We-16)
nsubj:xsubj(bottle-20, We-16)
aux(learned-18, have-17)
dep(learned-3, learned-18)
mark(bottle-20, to-19)
xcomp(learned-18, bottle-20)
nmod:poss(twain-23, our-21)
compound(twain-23, parents-22)
dobj(bottle-20, twain-23)
case(yelk-26, in-24)
det(yelk-26, the-25)
nmod:in(bottle-20, yelk-26)
case(egg-30, of-27)
det(egg-30, an-28)
amod(egg-30, addled-29)
nmod:of(yelk-26, egg-30)
nsubj(know-33, We-32)
dep(learned-3, know-33)
mark(wag-38, that-34)
det(tail-36, the-35)
nsubj(wag-38, tail-36)
aux(wag-38, must-37)
ccomp(know-33, wag-38)
det(dog-40, the-39)
dobj(wag-38, dog-40)
mark(drawn-46, for-42)
det(horse-44, the-43)
nsubjpass(drawn-46, horse-44)
auxpass(drawn-46, is-45)
advcl(wag-38, drawn-46)
case(cart-49, by-47)
det(cart-49, the-48)
nmod:by(drawn-46, cart-49)
cc(whoops-54, But-51)
det(Devil-53, the-52)
nsubj(whoops-54, Devil-53)
parataxis(learned-3, whoops-54)
mark(whooped-58, as-56)
nsubj(whooped-58, he-57)
advcl(whoops-54, whooped-58)
case(old-60, of-59)
advcl(whooped-58, old-60)
nsubj(clever-65, It-63)
cop(clever-65, 's-64)
parataxis(learned-3, clever-65)
cc(clever-65, but-67)
cop(Art-70, is-68)
nsubj(Art-70, it-69)
parataxis(learned-3, Art-70)
conj:but(clever-65, Art-70)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP
            (NP (DT the) (NN flicker))
            (PP (IN of)
              (NP (NNP London) (NN sun))))
          (VP (VBZ falls)
            (ADJP (JJ faint)
              (PP (IN on)
                (NP
                  (NP (DT the) (NNP Club-room) (POS 's))
                  (NN green)
                  (CC and)
                  (NN gold)))))))
      (, ,)
      (NP
        (NP (DT The) (NNS sons))
        (PP (IN of)
          (NP (NNP Adam))))
      (VP
        (VP (VBP sit)
          (NP (PRP them))
          (PRT (RP down)))
        (CC and)
        (VP (VBP scratch)
          (PP (IN with)
            (NP (PRP$ their) (NNS pens)))
          (PP (IN in)
            (NP
              (NP (DT the) (NN mould))
              (: --)
              (S
                (S
                  (NP (PRP They))
                  (VP (VBP scratch)
                    (PP (IN with)
                      (NP (PRP$ their) (NNS pens)))
                    (PP (IN in)
                      (NP
                        (NP
                          (NP (DT the) (NN mould))
                          (PP (IN of)
                            (NP (PRP$ their) (NNS graves))))
                        (, ,)
                        (CC and)
                        (NP
                          (NP (DT the) (NN ink))
                          (CC and)
                          (NP (DT the) (NN anguish) (NN start)))))))
                (, ,) (IN For)
                (S
                  (NP (DT the) (NNP Devil))
                  (VP (VBZ mutters)
                    (PP (IN behind)
                      (NP (DT the) (NNS leaves)))))))))))
    (: :) (`` ``)
    (S
      (S
        (NP (PRP It))
        (VP (VBZ 's)
          (ADJP (JJ pretty))))
      (, ,)
      (CC but)
      (SQ (VBZ is)
        (NP (PRP it))
        (ADJP (JJ Art))))
    (. ?) ('' '')))

advmod(falls-7, When-1)
det(flicker-3, the-2)
nsubj(falls-7, flicker-3)
case(sun-6, of-4)
compound(sun-6, London-5)
nmod:of(flicker-3, sun-6)
advcl(sit-21, falls-7)
xcomp(falls-7, faint-8)
case(green-13, on-9)
det(Club-room-11, the-10)
nmod:poss(green-13, Club-room-11)
case(Club-room-11, 's-12)
nmod:on(faint-8, green-13)
cc(green-13, and-14)
nmod:on(faint-8, gold-15)
conj:and(green-13, gold-15)
det(sons-18, The-17)
nsubj(sit-21, sons-18)
nsubj(scratch-25, sons-18)
case(Adam-20, of-19)
nmod:of(sons-18, Adam-20)
root(ROOT-0, sit-21)
dobj(sit-21, them-22)
compound:prt(sit-21, down-23)
cc(sit-21, and-24)
conj:and(sit-21, scratch-25)
case(pens-28, with-26)
nmod:poss(pens-28, their-27)
nmod:with(scratch-25, pens-28)
case(mould-31, in-29)
det(mould-31, the-30)
nmod:in(scratch-25, mould-31)
nsubj(scratch-34, They-33)
dep(mould-31, scratch-34)
case(pens-37, with-35)
nmod:poss(pens-37, their-36)
nmod:with(scratch-34, pens-37)
case(mould-40, in-38)
det(mould-40, the-39)
nmod:in(scratch-34, mould-40)
case(graves-43, of-41)
nmod:poss(graves-43, their-42)
nmod:of(mould-40, graves-43)
cc(mould-40, and-45)
det(ink-47, the-46)
nmod:in(scratch-34, ink-47)
conj:and(mould-40, ink-47)
cc(ink-47, and-48)
det(start-51, the-49)
compound(start-51, anguish-50)
conj:and(mould-40, start-51)
conj:and(ink-47, start-51)
dep(scratch-34, For-53)
det(Devil-55, the-54)
nsubj(mutters-56, Devil-55)
parataxis(scratch-34, mutters-56)
case(leaves-59, behind-57)
det(leaves-59, the-58)
nmod:behind(mutters-56, leaves-59)
nsubj(pretty-64, It-62)
cop(pretty-64, 's-63)
parataxis(sit-21, pretty-64)
cc(pretty-64, but-66)
cop(Art-69, is-67)
nsubj(Art-69, it-68)
parataxis(sit-21, Art-69)
conj:but(pretty-64, Art-69)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (VP (MD could)
          (VP (VB win)
            (PP (TO to)
              (NP (DT the) (NNP Eden) (NNP Tree)))
            (SBAR
              (WHADVP (WRB where))
              (S
                (S
                  (NP (DT the) (NNP Four) (NNP Great) (NNP Rivers))
                  (VP (VBP flow)))
                (, ,)
                (CC And)
                (S
                  (NP
                    (NP (DT the) (NNP Wreath))
                    (PP (IN of)
                      (NP (NNP Eve))))
                  (VP (VBZ is)
                    (ADJP (JJ red)
                      (PP (IN on)
                        (NP (DT the) (NN turf))))
                    (SBAR
                      (SBAR (IN as)
                        (S
                          (NP (PRP she))
                          (VP (VBD left)
                            (NP (PRP it))
                            (ADVP (RB long) (RB ago)))))
                      (, ,)
                      (CC And)
                      (SBAR (IN if)
                        (S
                          (NP (PRP we))
                          (VP (MD could)
                            (VP
                              (VP (VB come)
                                (SBAR
                                  (WHADVP (WRB when))
                                  (S
                                    (NP (DT the) (NN sentry))
                                    (VP (VBD slept)))))
                              (CC and)
                              (VP
                                (ADVP (RB softly))
                                (VB scurry)
                                (PRT (RP through))))))))))))))))
    (, ,)
    (S
      (PP (IN By)
        (NP
          (NP (DT the) (NN favour))
          (PP (IN of)
            (NP (NNP God)))))
      (NP (PRP we))
      (VP (MD might)
        (VP (VB know)
          (ADVP (RB as) (RB much)))))
    (: --)
    (S
      (PP (IN as)
        (NP (PRP$ our) (NN father)))
      (NP (NNP Adam))
      (VP (VBD knew)))
    (. !)))

advmod(know-56, Now-1)
mark(win-6, if-3)
nsubj(win-6, we-4)
aux(win-6, could-5)
dep(know-56, win-6)
case(Tree-10, to-7)
det(Tree-10, the-8)
compound(Tree-10, Eden-9)
nmod:to(win-6, Tree-10)
advmod(flow-16, where-11)
det(Rivers-15, the-12)
compound(Rivers-15, Four-13)
compound(Rivers-15, Great-14)
nsubj(flow-16, Rivers-15)
advcl(win-6, flow-16)
cc(flow-16, And-18)
det(Wreath-20, the-19)
nsubj(red-24, Wreath-20)
case(Eve-22, of-21)
nmod:of(Wreath-20, Eve-22)
cop(red-24, is-23)
advcl(win-6, red-24)
conj:and(flow-16, red-24)
case(turf-27, on-25)
det(turf-27, the-26)
nmod:on(red-24, turf-27)
mark(left-30, as-28)
nsubj(left-30, she-29)
advcl(red-24, left-30)
dobj(left-30, it-31)
advmod(ago-33, long-32)
advmod(left-30, ago-33)
cc(left-30, And-35)
mark(come-39, if-36)
nsubj(come-39, we-37)
nsubj(scurry-46, we-37)
aux(come-39, could-38)
advcl(red-24, come-39)
conj:and(left-30, come-39)
advmod(slept-43, when-40)
det(sentry-42, the-41)
nsubj(slept-43, sentry-42)
advcl(come-39, slept-43)
cc(come-39, and-44)
advmod(scurry-46, softly-45)
conj:and(left-30, scurry-46)
conj:and(come-39, scurry-46)
compound:prt(scurry-46, through-47)
case(favour-51, By-49)
det(favour-51, the-50)
nmod:by(know-56, favour-51)
case(God-53, of-52)
nmod:of(favour-51, God-53)
nsubj(know-56, we-54)
aux(know-56, might-55)
root(ROOT-0, know-56)
advmod(much-58, as-57)
advmod(know-56, much-58)
case(father-62, as-60)
nmod:poss(father-62, our-61)
nmod:as(knew-64, father-62)
nsubj(knew-64, Adam-63)
parataxis(know-56, knew-64)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (DT THE) (NN LEGEND))
          (PP (IN OF)
            (NP (NNP EVIL) (NNP I) (NNP This))))
        (VP (VBZ is)
          (NP
            (NP (DT the) (JJ sorrowful) (NN story) (NN Told))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (DT the) (NN twilight))
                (VP (VBZ fails)))))))
      (CC And)
      (S
        (NP (DT the) (NNS monkeys))
        (VP (VBP walk)
          (S
            (VP
              (ADVP (RB together))
              (VBG Holding)
              (NP
                (NP (PRP$ their) (NNS neighbours) (POS '))
                (NNS tails)))))))
    (: :) (: --) (`` ``)
    (S
      (NP (PRP$ Our) (NNS fathers))
      (VP (VBD lived)
        (PP (IN in)
          (NP (DT the) (NN forest)))))
    (, ,)
    (S
      (NP (NNP Foolish) (NNS people))
      (VP (VBD were)
        (NP (PRP they))))
    (, ,)
    (S
      (NP (PRP They))
      (VP (VBD went)
        (PRT (RP down))
        (PP (TO to)
          (NP (DT the) (NN cornland)))
        (S
          (VP (TO To)
            (VP (VB teach)
              (S
                (NP (DT the) (NNS farmers))
                (VP (TO to)
                  (VP (VB play)))))))))
    (. .)))

det(LEGEND-2, THE-1)
nsubj(Told-11, LEGEND-2)
case(This-6, OF-3)
compound(This-6, EVIL-4)
compound(This-6, I-5)
nmod:of(LEGEND-2, This-6)
cop(Told-11, is-7)
det(Told-11, the-8)
amod(Told-11, sorrowful-9)
compound(Told-11, story-10)
root(ROOT-0, Told-11)
advmod(fails-15, when-12)
det(twilight-14, the-13)
nsubj(fails-15, twilight-14)
acl:relcl(Told-11, fails-15)
cc(Told-11, And-16)
det(monkeys-18, the-17)
nsubj(walk-19, monkeys-18)
conj:and(Told-11, walk-19)
advmod(Holding-21, together-20)
ccomp(walk-19, Holding-21)
nmod:poss(neighbours-23, their-22)
nmod:poss(tails-25, neighbours-23)
case(neighbours-23, '-24)
dobj(Holding-21, tails-25)
nmod:poss(fathers-30, Our-29)
nsubj(lived-31, fathers-30)
parataxis(Told-11, lived-31)
case(forest-34, in-32)
det(forest-34, the-33)
nmod:in(lived-31, forest-34)
compound(people-37, Foolish-36)
nsubj(they-39, people-37)
cop(they-39, were-38)
parataxis(Told-11, they-39)
nsubj(went-42, They-41)
nsubj:xsubj(teach-48, They-41)
parataxis(Told-11, went-42)
compound:prt(went-42, down-43)
case(cornland-46, to-44)
det(cornland-46, the-45)
nmod:to(went-42, cornland-46)
mark(teach-48, To-47)
xcomp(went-42, teach-48)
det(farmers-50, the-49)
dobj(teach-48, farmers-50)
nsubj:xsubj(play-52, farmers-50)
mark(play-52, to-51)
xcomp(teach-48, play-52)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ Our) (NNS fathers))
      (VP (VBD frisked)
        (PP (IN in)
          (NP (DT the) (NN millet)))))
    (, ,)
    (NP (PRP$ Our) (NNS fathers))
    (VP (VBD skipped)
      (PP (IN in)
        (NP
          (NP (DT the) (NN wheat))
          (, ,)
          (NP
            (NP (PRP$ Our) (NNS fathers))
            (VP (VBN hung)
              (PP (IN from)
                (NP
                  (NP (DT the) (NNS branches))
                  (, ,)
                  (NP
                    (NP (PRP$ Our) (NNS fathers))
                    (VP (VBN danced)
                      (PP (IN in)
                        (NP (DT the) (NN street))))))))))))
    (. .)))

nmod:poss(fathers-3, Our-2)
nsubj(frisked-4, fathers-3)
ccomp(skipped-11, frisked-4)
case(millet-7, in-5)
det(millet-7, the-6)
nmod:in(frisked-4, millet-7)
nmod:poss(fathers-10, Our-9)
nsubj(skipped-11, fathers-10)
root(ROOT-0, skipped-11)
case(wheat-14, in-12)
det(wheat-14, the-13)
nmod:in(skipped-11, wheat-14)
nmod:poss(fathers-17, Our-16)
appos(wheat-14, fathers-17)
acl(fathers-17, hung-18)
case(branches-21, from-19)
det(branches-21, the-20)
nmod:from(hung-18, branches-21)
nmod:poss(fathers-24, Our-23)
appos(branches-21, fathers-24)
acl(fathers-24, danced-25)
case(street-28, in-26)
det(street-28, the-27)
nmod:in(danced-25, street-28)

(ROOT
  (S (`` ``) (RB Then)
    (VP (VBD came)
      (NP
        (NP (DT the) (JJ terrible) (NNS farmers) (, ,) (NN Nothing))
        (PP (IN of)
          (NP (NN play)))
        (SBAR
          (S
            (S
              (NP (PRP they))
              (VP (VBD knew) (, ,)
                (ADVP (RB Only))
                (: ...)
                (S
                  (NP (PRP they))
                  (VP (VBN caught)
                    (NP (PRP$ our) (NNS fathers))))))
            (S (CC And)
              (VP (VB set)
                (NP (PRP them))
                (PP (TO to)
                  (NP (NN labour) (RB too)))))))))
    (. !)))

advmod(came-3, Then-2)
root(ROOT-0, came-3)
det(Nothing-8, the-4)
amod(Nothing-8, terrible-5)
compound(Nothing-8, farmers-6)
dobj(came-3, Nothing-8)
case(play-10, of-9)
nmod:of(Nothing-8, play-10)
nsubj(knew-12, they-11)
acl:relcl(Nothing-8, knew-12)
advmod(knew-12, Only-14)
nsubj(caught-17, they-16)
parataxis(knew-12, caught-17)
nmod:poss(fathers-19, our-18)
dobj(caught-17, fathers-19)
cc(set-21, And-20)
parataxis(knew-12, set-21)
dobj(set-21, them-22)
case(labour-24, to-23)
nmod:to(set-21, labour-24)
advmod(labour-24, too-25)

(ROOT
  (S (`` ``)
    (S
      (VP (VB Set)
        (S
          (NP (PRP them))
          (VP (TO to)
            (VP (VB work)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN cornland))
                  (PP (IN With)
                    (NP
                      (NP (NNS ploughs))
                      (CC and)
                      (NP (NNS sickles)
                        (CC and)
                        (NNS flails)))))))))))
    (, ,)
    (VP (VBD Put)
      (NP (PRP them))
      (PP (IN in)
        (NP
          (NP (JJ mud-walled) (NNS prisons))
          (CC And)
          (NP
            (LST (: --))
            (NP (NN cut))
            (PP (IN off)
              (NP (PRP$ their) (JJ beautiful) (NNS tails)))))))
    (. !)))

ccomp(Put-16, Set-2)
dobj(Set-2, them-3)
nsubj:xsubj(work-5, them-3)
mark(work-5, to-4)
xcomp(Set-2, work-5)
case(cornland-8, in-6)
det(cornland-8, the-7)
nmod:in(work-5, cornland-8)
case(ploughs-10, With-9)
nmod:with(cornland-8, ploughs-10)
cc(ploughs-10, and-11)
nmod:with(cornland-8, sickles-12)
conj:and(ploughs-10, sickles-12)
cc(sickles-12, and-13)
conj:and(ploughs-10, flails-14)
conj:and(sickles-12, flails-14)
root(ROOT-0, Put-16)
dobj(Put-16, them-17)
case(prisons-20, in-18)
amod(prisons-20, mud-walled-19)
nmod:in(Put-16, prisons-20)
cc(prisons-20, And-21)
nmod:in(Put-16, cut-23)
conj:And(prisons-20, cut-23)
case(tails-27, off-24)
nmod:poss(tails-27, their-25)
amod(tails-27, beautiful-26)
nmod:off(cut-23, tails-27)

(ROOT
  (S (`` ``)
    (ADVP (RB Now))
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (VP (VB watch)
        (S
          (NP
            (NP (PRP$ our) (NNS fathers))
            (, ,)
            (UCP
              (NP (NNP Sullen))
              (CC and)
              (ADJP (JJ bowed)
                (CC and)
                (JJ old)))
            (, ,))
          (VP
            (VP (VBG Stooping)
              (PP (IN over)
                (NP (DT the) (NN millet))))
            (, ,)
            (VP (VBG Sharing)
              (NP (DT the) (JJ silly) (NN mould)))
            (, ,)
            (VP (`` ``) (VBG Driving)
              (NP (DT a) (JJ foolish) (NN furrow)))
            (, ,)
            (VP (VBG Mending)
              (NP (DT a) (JJ muddy) (NN yoke)))
            (, ,)
            (VP (VBG Sleeping)
              (PP (IN in)
                (NP (JJ mud-walled) (NNS prisons))))
            (, ,)
            (VP (VBG Steeping)
              (NP (PRP$ their) (NN food)))
            (PP (IN in)
              (NP (NN smoke)))))))
    (. .)))

advmod(watch-6, Now-2)
nsubj(watch-6, we-4)
aux(watch-6, can-5)
root(ROOT-0, watch-6)
nmod:poss(fathers-8, our-7)
nsubj(Stooping-16, fathers-8)
appos(fathers-8, Sullen-10)
cc(Sullen-10, and-11)
appos(fathers-8, bowed-12)
conj:and(Sullen-10, bowed-12)
cc(bowed-12, and-13)
conj:and(Sullen-10, old-14)
conj:and(bowed-12, old-14)
ccomp(watch-6, Stooping-16)
case(millet-19, over-17)
det(millet-19, the-18)
nmod:over(Stooping-16, millet-19)
dep(Stooping-16, Sharing-21)
det(mould-24, the-22)
amod(mould-24, silly-23)
dobj(Sharing-21, mould-24)
dep(Stooping-16, Driving-27)
det(furrow-30, a-28)
amod(furrow-30, foolish-29)
dobj(Driving-27, furrow-30)
dep(Stooping-16, Mending-32)
det(yoke-35, a-33)
amod(yoke-35, muddy-34)
dobj(Mending-32, yoke-35)
dep(Stooping-16, Sleeping-37)
case(prisons-40, in-38)
amod(prisons-40, mud-walled-39)
nmod:in(Sleeping-37, prisons-40)
dep(Stooping-16, Steeping-42)
nmod:poss(food-44, their-43)
dobj(Steeping-42, food-44)
case(smoke-46, in-45)
nmod:in(Stooping-16, smoke-46)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (MD may) (RB not)
        (VP (VB speak)
          (PP (TO to)
            (NP (PRP$ our) (NNS fathers))))))
    (, ,) (IN For)
    (S
      (SBAR (IN if)
        (S
          (NP (DT the) (NNS farmers))
          (VP (VBD knew))))
      (NP (PRP They))
      (VP (MD would)
        (VP (VB come)
          (PRT (RP up))
          (PP (TO to)
            (UCP
              (NP (DT the) (NN forest))
              (CC And)
              (VP (VBN set)
                (NP (PRP us))
                (PP (TO to)
                  (NP (NN labour)))
                (ADVP (RB too))))))))
    (. .) ('' '')))

nsubj(speak-5, We-2)
aux(speak-5, may-3)
neg(speak-5, not-4)
root(ROOT-0, speak-5)
case(fathers-8, to-6)
nmod:poss(fathers-8, our-7)
nmod:to(speak-5, fathers-8)
dep(speak-5, For-10)
mark(knew-14, if-11)
det(farmers-13, the-12)
nsubj(knew-14, farmers-13)
advcl(come-17, knew-14)
nsubj(come-17, They-15)
aux(come-17, would-16)
parataxis(speak-5, come-17)
compound:prt(come-17, up-18)
case(forest-21, to-19)
det(forest-21, the-20)
nmod:to(come-17, forest-21)
cc(forest-21, And-22)
acl(forest-21, set-23)
dobj(set-23, us-24)
case(labour-26, to-25)
nmod:to(set-23, labour-26)
advmod(set-23, too-27)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP (DT the) (JJ horrible) (NN story) (NN Told))
        (SBAR (IN as)
          (S
            (NP (DT the) (NN twilight))
            (VP (VBZ fails))))))
    (CC And)
    (S
      (NP (DT the) (NNS monkeys))
      (VP (VBP walk)
        (S
          (VP
            (ADVP (RB together))
            (VBG Holding)
            (NP
              (NP (PRP$ their) (NN kinsmen) (POS 's))
              (NNS tails))))))
    (. .)))

nsubj(Told-6, This-1)
cop(Told-6, is-2)
det(Told-6, the-3)
amod(Told-6, horrible-4)
compound(Told-6, story-5)
root(ROOT-0, Told-6)
mark(fails-10, as-7)
det(twilight-9, the-8)
nsubj(fails-10, twilight-9)
advcl(Told-6, fails-10)
cc(Told-6, And-11)
det(monkeys-13, the-12)
nsubj(walk-14, monkeys-13)
conj:and(Told-6, walk-14)
advmod(Holding-16, together-15)
ccomp(walk-14, Holding-16)
nmod:poss(kinsmen-18, their-17)
nmod:poss(tails-20, kinsmen-18)
case(kinsmen-18, 's-19)
dobj(Holding-16, tails-20)

(ROOT
  (S
    (S
      (NP (NNP II) (NNP 'T))
      (VP (VBD was)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN rain))
            (VP (VBD fell)
              (NP
                (NP (JJ steady) (DT an))
                ('' ')
                (SBAR
                  (S
                    (NP (DT the) (NNP Ark))
                    (VP (VBD was)
                      (VP (VBN pitched)))))
                (, an) ('' ')
                (ADVP
                  (ADVP (RB ready))
                  (, ,)
                  (SBAR (IN That)
                    (S
                      (S
                        (NP (NNP Noah))
                        (VP (VBD got)
                          (NP (PRP$ his) (NNS orders))
                          (PP (IN for))
                          (S
                            (VP (TO to)
                              (VP (VB take)
                                (NP (DT the) (NNS bastes))
                                (ADVP (RB below)))))))
                      (: ;)
                      (S
                        (NP (PRP He))
                        (VP (VBD dragged)
                          (NP (PRP them))
                          (ADVP (DT all) (RB together))
                          (PP (IN by)
                            (NP (DT the) (NN horn))))))))
                (, an) ('' ')
                (S
                  (VP (VB hide)
                    (NP
                      (NP (DT an))
                      (POS ') (NN feather))))))))))
    (, ,)
    (NP (NNP An) (POS '))
    (ADVP (DT all))
    (VP (VBP excipt)
      (SBAR
        (S
          (NP (DT the) (NNP Donkey))
          (VP (VBD was)
            (ADJP (JJ agreeable)
              (S
                (VP (TO to)
                  (VP (VB go)))))))))
    (. .)))

compound('T-2, II-1)
nsubj(was-3, 'T-2)
ccomp(excipt-49, was-3)
advmod(fell-7, when-4)
det(rain-6, the-5)
nsubj(fell-7, rain-6)
advcl(was-3, fell-7)
dobj(fell-7, steady-8)
dep(steady-8, an-9)
det(Ark-12, the-11)
nsubjpass(pitched-14, Ark-12)
auxpass(pitched-14, was-13)
acl:relcl(steady-8, pitched-14)
advmod(steady-8, ready-17)
mark(got-21, That-19)
nsubj(got-21, Noah-20)
advcl(ready-17, got-21)
nmod:poss(orders-23, his-22)
dobj(got-21, orders-23)
nmod(got-21, for-24)
mark(take-26, to-25)
advcl(got-21, take-26)
det(bastes-28, the-27)
dobj(take-26, bastes-28)
advmod(take-26, below-29)
nsubj(dragged-32, He-31)
parataxis(got-21, dragged-32)
dobj(dragged-32, them-33)
dep(together-35, all-34)
advmod(dragged-32, together-35)
case(horn-38, by-36)
det(horn-38, the-37)
nmod:by(dragged-32, horn-38)
dep(steady-8, hide-41)
nmod:poss(feather-44, an-42)
case(feather-44, '-43)
dobj(hide-41, feather-44)
nsubj(excipt-49, An-46)
case(An-46, '-47)
advmod(excipt-49, all-48)
root(ROOT-0, excipt-49)
det(Donkey-51, the-50)
nsubj(agreeable-53, Donkey-51)
nsubj:xsubj(go-55, Donkey-51)
cop(agreeable-53, was-52)
ccomp(excipt-49, agreeable-53)
mark(go-55, to-54)
xcomp(agreeable-53, go-55)

(ROOT
  (S
    (S
      (NP (NNP Thin) (NNP Noah))
      (VP (VBD spoke)
        (NP (PRP him))
        (ADVP (RB fairly))))
    (PRN (, ,)
      (SINV
        (ADVP (RB thin))
        (VP (VBD talked)
          (PP (TO to)
            (NP (PRP him))))
        (NP
          (NP (NN sevarely))
          (, ,)
          (NP
            (NP
              (NP (NNP An) (POS '))
              (ADJP (JJ thin)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD cursed)
                      (NP (PRP him))
                      (ADVP (RB squarely))
                      (PP (TO to)
                        (NP (DT the) (NN glory)))))))
              (NN av))
            (PRN
              (NP (DT the) (NNP Lord)))))
        (: :)))
    (: --) (`` ``)
    (S
      (NP (NNP Divil))
      (VP (VBP take)
        (NP
          (NP
            (NP (DT the) (NN ass))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD bred)
                  (NP (PRP you))))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (JJR greater) (NN ass))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD fed)
                  (NP (PRP you))
                  (: --)
                  (S
                    (NP (NNP Divil))
                    (VP (VB go)
                      (S
                        (S
                          (NP (NN wid))
                          (NP (PRP you)))
                        (, ,)
                        (S
                          (NP (PRP ye))
                          (ADJP (JJ spalpeen)))))))))))))
    (. !) ('' '')))

compound(Noah-2, Thin-1)
nsubj(spoke-3, Noah-2)
root(ROOT-0, spoke-3)
dobj(spoke-3, him-4)
advmod(spoke-3, fairly-5)
advmod(talked-8, thin-7)
dep(spoke-3, talked-8)
case(him-10, to-9)
nmod:to(talked-8, him-10)
nsubj(talked-8, sevarely-11)
nmod:poss(av-23, An-13)
case(An-13, '-14)
amod(av-23, thin-15)
nsubj(cursed-17, he-16)
ccomp(thin-15, cursed-17)
dobj(cursed-17, him-18)
advmod(cursed-17, squarely-19)
case(glory-22, to-20)
det(glory-22, the-21)
nmod:to(cursed-17, glory-22)
appos(sevarely-11, av-23)
det(Lord-25, the-24)
dep(av-23, Lord-25)
nsubj(take-30, Divil-29)
parataxis(spoke-3, take-30)
det(ass-32, the-31)
dobj(take-30, ass-32)
nsubj(bred-34, ass-32)
ref(ass-32, that-33)
acl:relcl(ass-32, bred-34)
dobj(bred-34, you-35)
cc(ass-32, and-37)
det(ass-40, the-38)
amod(ass-40, greater-39)
conj:and(ass-32, ass-40)
nsubj(fed-42, ass-40)
ref(ass-40, that-41)
acl:relcl(ass-40, fed-42)
dobj(fed-42, you-43)
nsubj(go-46, Divil-45)
parataxis(fed-42, go-46)
dep(you-48, wid-47)
xcomp(go-46, you-48)
dep(spalpeen-51, ye-50)
parataxis(you-48, spalpeen-51)

(ROOT
  (S
    (FRAG
      (NP (DT an)))
    ('' ')
    (NP (DT the) (NNP Donkey))
    (VP (VBD went)
      (ADVP (RB aboard)))
    (. .)))

dep(went-5, an-1)
det(Donkey-4, the-3)
nsubj(went-5, Donkey-4)
root(ROOT-0, went-5)
advmod(went-5, aboard-6)

(ROOT
  (S
    (S (CC But)
      (S
        (NP (DT the) (NN wind))
        (VP (VBD was)
          (ADVP (RB always))
          (VP (VBN failin) ('' '))))
      (, ,)
      (S
        (NP (DT an)
          (S
            (NP (POS '))
            (VP (VBP 't))))
        (VP (VBD was)
          (ADVP (RBS most))
          (ADVP (RB onaisy))
          (ADJP (JJ sailin))
          ('' ')))
      (, ,)
      (S
        (NP
          (NP (NNP An) (POS '))
          (NP (DT the) (NNS ladies))
          (PP (IN in)
            (NP (DT the) (NN cabin))))
        (VP (MD could) (RB n't)
          (VP (VB stand)
            (NP
              (NP (DT the) (JJ stable) (NN air))
              (: ;)
              (NP
                (NP (NNP An) (POS '))
                (NP
                  (NP (DT the) (JJ bastes) (NN betwuxt))
                  (NP (DT the) (NNS hatches))))))))
      (, ,)
      (S
        (NP (PRP they))
        (VP (VBP tuk)
          (SBAR
            (S
              (NP (DT an)
                (S
                  (NP (POS '))
                  (VP (VBD died)
                    (PP (IN in)
                      (NP (NNS batches)))
                    (, ,)
                    (PP (IN Till)
                      (NP (NNP Noah))))))
              (VP (VBD said)))))))
    (: :) (: --) (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (NN wan))
          (VP (VBN av)
            (NP (PRP us)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ has) (RB n't)
                (VP (VBN paid)
                  (NP (PRP$ his) (NN fare)))))))))
    (. !) ('' '')))

cc(failin-6, But-1)
det(wind-3, the-2)
nsubjpass(failin-6, wind-3)
auxpass(failin-6, was-4)
advmod(failin-6, always-5)
root(ROOT-0, failin-6)
nsubj(sailin-15, an-9)
nsubj('t-11, '-10)
dep(an-9, 't-11)
cop(sailin-15, was-12)
advmod(sailin-15, most-13)
advmod(sailin-15, onaisy-14)
parataxis(failin-6, sailin-15)
nsubj(stand-27, An-18)
case(An-18, '-19)
det(ladies-21, the-20)
dep(An-18, ladies-21)
case(cabin-24, in-22)
det(cabin-24, the-23)
nmod:in(An-18, cabin-24)
aux(stand-27, could-25)
neg(stand-27, n't-26)
parataxis(failin-6, stand-27)
det(air-30, the-28)
amod(air-30, stable-29)
dobj(stand-27, air-30)
dep(air-30, An-32)
case(An-32, '-33)
det(betwuxt-36, the-34)
amod(betwuxt-36, bastes-35)
dep(An-32, betwuxt-36)
det(hatches-38, the-37)
dep(betwuxt-36, hatches-38)
nsubj(tuk-41, they-40)
parataxis(failin-6, tuk-41)
nsubj(said-50, an-42)
nsubj(died-44, '-43)
dep(an-42, died-44)
case(batches-46, in-45)
nmod:in(died-44, batches-46)
case(Noah-49, Till-48)
nmod:till(died-44, Noah-49)
ccomp(tuk-41, said-50)
expl('s-55, There-54)
parataxis(failin-6, 's-55)
nsubj('s-55, wan-56)
nsubj(paid-62, wan-56)
acl(wan-56, av-57)
dobj(av-57, us-58)
ref(wan-56, that-59)
aux(paid-62, has-60)
neg(paid-62, n't-61)
acl:relcl(wan-56, paid-62)
nmod:poss(fare-64, his-63)
dobj(paid-62, fare-64)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (NP (PRP he))
        (VP (VBD heard)
          (SBAR
            (S
              (NP (DT a) (NN flusteration))
              (`` `)
              (VP (VBD mid)
                (SBAR
                  (S
                    (NP (DT the) (NNS bastes))
                    (VP (VBP av)
                      (NP (PDT all)
                        (NP
                          (NP (NN creation))
                          (: --)
                          (NP
                            (NP (DT The) (NN trumpetin) (POS '))
                            (NN av) (NNS elephints)))
                        (, an) ('' ')
                        (NP
                          (NP
                            (NP (NN bellowin) (POS '))
                            (NN av) (NNS whales))
                          (, ;)
                          (NP (NNP An) (POS ')))))))))))))
    (NP (PRP he))
    (VP (VBD saw)
      (ADJP (JJ forninst))
      (NP
        (NP
          (NP (DT the) (JJ windy) (NN whin))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBP wint)
                (S
                  (VP (TO to)
                    (VP (VB stop)
                      (NP
                        (NP (DT the) (NN shindy))
                        (SBAR
                          (S
                            (NP (DT The) (NNP Divil))
                            (VP (VBP wid)
                              (NP (DT a) (JJ stable-fork) (NN bedivillin) (POS ')))))))))))))
        (NP (PRP$ their) (NNS tails))))
    (. .)))

mark(heard-3, For-1)
nsubj(heard-3, he-2)
advcl(saw-29, heard-3)
det(flusteration-5, a-4)
nsubj(mid-7, flusteration-5)
ccomp(heard-3, mid-7)
det(bastes-9, the-8)
nsubj(av-10, bastes-9)
ccomp(mid-7, av-10)
dep(creation-12, all-11)
dobj(av-10, creation-12)
det(trumpetin-15, The-14)
nmod:poss(elephints-18, trumpetin-15)
case(trumpetin-15, '-16)
compound(elephints-18, av-17)
dep(creation-12, elephints-18)
nmod:poss(whales-24, bellowin-21)
case(bellowin-21, '-22)
compound(whales-24, av-23)
dep(creation-12, whales-24)
appos(whales-24, An-26)
case(An-26, '-27)
nsubj(saw-29, he-28)
root(ROOT-0, saw-29)
xcomp(saw-29, forninst-30)
det(whin-33, the-31)
amod(whin-33, windy-32)
dobj(saw-29, whin-33)
nsubj(wint-35, he-34)
nsubj:xsubj(stop-37, he-34)
acl:relcl(whin-33, wint-35)
mark(stop-37, to-36)
xcomp(wint-35, stop-37)
det(shindy-39, the-38)
dobj(stop-37, shindy-39)
det(Divil-41, The-40)
nsubj(wid-42, Divil-41)
acl:relcl(shindy-39, wid-42)
det(bedivillin-45, a-43)
amod(bedivillin-45, stable-fork-44)
dobj(wid-42, bedivillin-45)
case(bedivillin-45, '-46)
nmod:poss(tails-48, their-47)
dep(whin-33, tails-48)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNP Divil))
        (VP (VBD cursed)
          (ADJP (JJ outrageous))))
      (, ,)
      (CC but)
      (S
        (NP (NNP Noah))
        (VP (VBD said)
          (SBAR
            (FRAG
              (ADJP (JJ umbrageous))
              (: :))))))
    (: --) (`` ``)
    (SBARQ
      (WHPP (TO To)
        (WHNP (WP what)))
      (SQ (VBP am)
        (NP (PRP I))
        (ADJP (JJ indebted)
          (PP (IN for)
            (NP (DT this) (JJ tenant-right) (NN invasion))))))
    (. ?) ('' '')))

det(Divil-2, The-1)
nsubj(cursed-3, Divil-2)
root(ROOT-0, cursed-3)
xcomp(cursed-3, outrageous-4)
cc(cursed-3, but-6)
nsubj(said-8, Noah-7)
conj:but(cursed-3, said-8)
dep(said-8, umbrageous-9)
case(what-14, To-13)
nmod:to(indebted-17, what-14)
cop(indebted-17, am-15)
nsubj(indebted-17, I-16)
parataxis(cursed-3, indebted-17)
case(invasion-21, for-18)
det(invasion-21, this-19)
amod(invasion-21, tenant-right-20)
nmod:for(indebted-17, invasion-21)

(ROOT
  (S
    (NP (NNP An) (POS ') (DT the) (NNP Divil))
    (VP (VBD gave)
      (PP (IN for)
        (NP
          (NP (NN answer))
          (: :)))
      (: --) (`` ``)
      (S
        (NP (NNP Evict))
        (NP (PRP me))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (MD can) (, ,)
              (ADVP (RB sir))
              (, ,)
              (SBAR (IN For)
                (S
                  (NP (PRP I))
                  (VP (VBD came)
                    (PP (IN in)
                      (NP (NN wid)))
                    (NP
                      (NP (DT the) (NN Donkey))
                      (: --)
                      (PP (IN on)
                        (NP
                          (NP (PRP$ Your) (NN Honour) (POS 's))
                          (NN invitation))))))))))))
    (. .) ('' '')))

nmod:poss(Divil-4, An-1)
case(Divil-4, '-2)
det(Divil-4, the-3)
nsubj(gave-5, Divil-4)
root(ROOT-0, gave-5)
case(answer-7, for-6)
nmod:for(gave-5, answer-7)
nsubj(can-15, Evict-11)
dep(can-15, me-12)
mark(can-15, if-13)
nsubj(can-15, you-14)
xcomp(gave-5, can-15)
advmod(can-15, sir-17)
mark(came-21, For-19)
nsubj(came-21, I-20)
advcl(can-15, came-21)
case(wid-23, in-22)
nmod:in(came-21, wid-23)
det(Donkey-25, the-24)
dobj(came-21, Donkey-25)
case(invitation-31, on-27)
nmod:poss(Honour-29, Your-28)
nmod:poss(invitation-31, Honour-29)
case(Honour-29, 's-30)
nmod:on(Donkey-25, invitation-31)

(ROOT
  (S
    (NP (DT THE) (NNP ENGLISH) (NNP FLAG) (NNP _))
    (PP (IN Above)
      (NP (DT the) (NN portico)))
    (NP
      (NP (DT a) (NN flag-staff))
      (, ,)
      (VP (VBG bearing)
        (NP (DT the) (NNP Union) (NNP Jack)))
      (, ,))
    (VP
      (VP (VBD remained)
        (S
          (VP (VBG fluttering)
            (PP (IN in)
              (NP
                (NP (DT the) (NNS flames))
                (PP (IN for)
                  (NP (DT some) (NN time))))))))
      (, ,)
      (CC but)
      (ADVP (RB ultimately))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP
            (VP (VBD fell)
              (S
                (NP (DT the) (NNS crowds))
                (VP (VB rent)
                  (NP (DT the) (NN air))
                  (PP (IN with)
                    (NP (NNS shouts))))))
            (, ,)
            (CC and)
            (VP (VBD seemed)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP (NN significance))
                    (PP (IN in)
                      (NP (DT the) (NN incident)))))))))))
    (. .)))

det(_-4, THE-1)
compound(_-4, ENGLISH-2)
compound(_-4, FLAG-3)
nsubj(remained-16, _-4)
case(portico-7, Above-5)
det(portico-7, the-6)
nmod:above(remained-16, portico-7)
det(flag-staff-9, a-8)
nsubj(remained-16, flag-staff-9)
acl(flag-staff-9, bearing-11)
det(Jack-14, the-12)
compound(Jack-14, Union-13)
dobj(bearing-11, Jack-14)
root(ROOT-0, remained-16)
xcomp(remained-16, fluttering-17)
case(flames-20, in-18)
det(flames-20, the-19)
nmod:in(fluttering-17, flames-20)
case(time-23, for-21)
det(time-23, some-22)
nmod:for(flames-20, time-23)
cc(remained-16, but-25)
advmod(fell-29, ultimately-26)
advmod(fell-29, when-27)
nsubj(fell-29, it-28)
nsubj(seemed-39, it-28)
nsubj:xsubj(see-41, it-28)
advcl(remained-16, fell-29)
det(crowds-31, the-30)
nsubj(rent-32, crowds-31)
ccomp(fell-29, rent-32)
det(air-34, the-33)
dobj(rent-32, air-34)
case(shouts-36, with-35)
nmod:with(rent-32, shouts-36)
cc(fell-29, and-38)
advcl(remained-16, seemed-39)
conj:and(fell-29, seemed-39)
mark(see-41, to-40)
xcomp(seemed-39, see-41)
dobj(see-41, significance-42)
case(incident-45, in-43)
det(incident-45, the-44)
nmod:in(see-41, incident-45)

(ROOT
  (NP (: --) (NNP DAILY) (NNP PAPERS) (NNP _) (. .)))

compound(_-4, DAILY-2)
compound(_-4, PAPERS-3)
root(ROOT-0, _-4)

(ROOT
  (S
    (NP
      (NP (NNS Winds))
      (PP (IN of)
        (NP (DT the) (NNP World))))
    (, ,)
    (VP (VBP give)
      (NP (NN answer)))
    (. !)))

nsubj(give-6, Winds-1)
case(World-4, of-2)
det(World-4, the-3)
nmod:of(Winds-1, World-4)
root(ROOT-0, give-6)
dobj(give-6, answer-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (VP (VBG whimpering)
        (ADVP (TO to)
          (CC and)
          (RB fro))
        (: --)
        (FRAG (CC And)
          (SBAR
            (WHNP (WP what))
            (SINV (MD should)
              (NP (PRP they))
              (VP (VB know)
                (PP (IN of)
                  (NP (NNP England)))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (NP (RB only) (NNP England))
                    (VP (VBP know)))))))
          (. ?))))))

nsubj(whimpering-3, They-1)
aux(whimpering-3, are-2)
root(ROOT-0, whimpering-3)
advmod(whimpering-3, to-4)
cc(to-4, and-5)
advmod(whimpering-3, fro-6)
conj:and(to-4, fro-6)
cc(know-12, And-8)
dep(know-12, what-9)
aux(know-12, should-10)
nsubj(know-12, they-11)
dep(whimpering-3, know-12)
case(England-14, of-13)
nmod:of(know-12, England-14)
dobj(know-18, who-15)
advmod(England-17, only-16)
nsubj(know-18, England-17)
ccomp(know-12, know-18)

(ROOT
  (NP (: --)
    (NP (DT The) (JJ poor) (JJ little) (JJ street-bred) (NNS people))
    (SBAR (IN that)
      (S
        (UCP
          (NP (NN vapour))
          (CC and)
          (S
            (VP (VB fume)
              (CC and)
              (VB brag))))
        (, ,)
        (NP (PRP They))
        (VP (VBP are)
          (VP (VBG lifting)
            (NP (PRP$ their) (NNS heads))
            (PP (IN in)
              (NP (DT the) (NNS stillness)))
            (S
              (VP (TO to)
                (VP (VB yelp)
                  (PP (IN at)
                    (NP (DT the) (NNP English) (NNP Flag))))))))))
    (. !)))

det(people-6, The-2)
amod(people-6, poor-3)
amod(people-6, little-4)
amod(people-6, street-bred-5)
root(ROOT-0, people-6)
mark(lifting-16, that-7)
nsubj(lifting-16, vapour-8)
cc(vapour-8, and-9)
conj:and(vapour-8, fume-10)
nsubj(lifting-16, fume-10)
cc(fume-10, and-11)
conj:and(vapour-8, brag-12)
conj:and(fume-10, brag-12)
nsubj(lifting-16, They-14)
aux(lifting-16, are-15)
dep(people-6, lifting-16)
nmod:poss(heads-18, their-17)
dobj(lifting-16, heads-18)
case(stillness-21, in-19)
det(stillness-21, the-20)
nmod:in(lifting-16, stillness-21)
mark(yelp-23, to-22)
advcl(lifting-16, yelp-23)
case(Flag-27, at-24)
det(Flag-27, the-25)
compound(Flag-27, English-26)
nmod:at(yelp-23, Flag-27)

(ROOT
  (SQ (MD Must)
    (NP (PRP we))
    (VP (VB borrow)
      (NP (DT a) (NN clout))
      (PP (IN from)
        (NP (DT the) (NNP Boer)))
      (: --)
      (S
        (VP (TO to)
          (VP (VB plaster)
            (ADVP (RB anew))
            (PP (IN with)
              (NP (NN dirt)))))))
    (. ?)))

aux(borrow-3, Must-1)
nsubj(borrow-3, we-2)
root(ROOT-0, borrow-3)
det(clout-5, a-4)
dobj(borrow-3, clout-5)
case(Boer-8, from-6)
det(Boer-8, the-7)
nmod:from(borrow-3, Boer-8)
mark(plaster-11, to-10)
advcl(borrow-3, plaster-11)
advmod(plaster-11, anew-12)
case(dirt-14, with-13)
nmod:with(plaster-11, dirt-14)

(ROOT
  (S
    (NP (DT An) (JJ Irish) (NN liar))
    (VP (VBZ 's)
      (NP
        (NP (NN bandage))
        (, ,)
        (CC or)
        (NP
          (NP (DT an) (JJ English) (NN coward) (POS 's))
          (NN shirt))))
    (. ?)))

det(liar-3, An-1)
amod(liar-3, Irish-2)
nsubj(bandage-5, liar-3)
cop(bandage-5, 's-4)
root(ROOT-0, bandage-5)
cc(bandage-5, or-7)
det(coward-10, an-8)
amod(coward-10, English-9)
nmod:poss(shirt-12, coward-10)
case(coward-10, 's-11)
conj:or(bandage-5, shirt-12)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD may) (RB not)
        (VP (VB speak)
          (PP (IN of)
            (NP (NNP England))))))
    (: ;)
    (S
      (NP (PRP$ her) (NN Flag))
      (VP (VBZ 's)
        (S
          (VP (TO to)
            (VP (VB sell)
              (CC or)
              (VB share))))))
    (. .)))

nsubj(speak-4, We-1)
aux(speak-4, may-2)
neg(speak-4, not-3)
root(ROOT-0, speak-4)
case(England-6, of-5)
nmod:of(speak-4, England-6)
nmod:poss(Flag-9, her-8)
nsubj('s-10, Flag-9)
nsubj:xsubj(sell-12, Flag-9)
nsubj:xsubj(share-14, Flag-9)
parataxis(speak-4, 's-10)
mark(sell-12, to-11)
xcomp('s-10, sell-12)
cc(sell-12, or-13)
xcomp('s-10, share-14)
conj:or(sell-12, share-14)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN Flag))
        (PP (IN of)
          (NP (NNP England)))))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, is-2)
det(Flag-4, the-3)
nsubj(What-1, Flag-4)
case(England-6, of-5)
nmod:of(Flag-4, England-6)

(ROOT
  (S
    (NP
      (NP (NNS Winds))
      (PP (IN of)
        (NP (DT the) (NNP World))))
    (, ,)
    (VP (VBP declare))
    (. !)))

nsubj(declare-6, Winds-1)
case(World-4, of-2)
det(World-4, the-3)
nmod:of(Winds-1, World-4)
root(ROOT-0, declare-6)

(ROOT
  (S
    (S
      (NP (DT The) (NNP North) (NN Wind))
      (VP (VBD blew)))
    (: :) (: --) (`` ``)
    (S
      (PP (IN From)
        (NP (NNP Bergen)))
      (NP (PRP$ my) (JJ steel-shod) (NNS vanguards))
      (VP (VBP go)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VB chase)
        (NP (PRP$ your) (JJ lazy) (NNS whalers) (NN home))
        (PP (IN from)
          (NP (DT the) (NNP Disko) (NN floe)))))
    (: ;)
    (S
      (S
        (PP (IN By)
          (NP
            (NP (DT the) (JJ great) (NNP North) (NNS Lights))
            (PP (IN above)
              (NP (PRP me)))))
        (NP (PRP I))
        (VP (VBP work)
          (NP
            (NP (DT the) (NN will))
            (PP (IN of)
              (NP (NNP God))))))
      (, ,)
      (CC And)
      (S
        (NP (DT the) (NN liner))
        (VP (VBZ splits)
          (PP (IN on)
            (NP (DT the) (NN ice-field))))))
    (CC or)
    (S
      (NP (DT the) (NNP Dogger))
      (VP (VBZ fills)
        (PP (IN with)
          (NP (NN cod)))))
    (. .)))

det(Wind-3, The-1)
compound(Wind-3, North-2)
nsubj(blew-4, Wind-3)
root(ROOT-0, blew-4)
case(Bergen-9, From-8)
nmod:from(go-13, Bergen-9)
nmod:poss(vanguards-12, my-10)
amod(vanguards-12, steel-shod-11)
nsubj(go-13, vanguards-12)
conj:or(blew-4, go-13)
nsubj(chase-16, I-15)
conj:or(blew-4, chase-16)
nmod:poss(home-20, your-17)
amod(home-20, lazy-18)
compound(home-20, whalers-19)
dobj(chase-16, home-20)
case(floe-24, from-21)
det(floe-24, the-22)
compound(floe-24, Disko-23)
nmod:from(chase-16, floe-24)
case(Lights-30, By-26)
det(Lights-30, the-27)
amod(Lights-30, great-28)
compound(Lights-30, North-29)
nmod:by(work-34, Lights-30)
case(me-32, above-31)
nmod:above(Lights-30, me-32)
nsubj(work-34, I-33)
conj:or(blew-4, work-34)
det(will-36, the-35)
dobj(work-34, will-36)
case(God-38, of-37)
nmod:of(will-36, God-38)
cc(work-34, And-40)
det(liner-42, the-41)
nsubj(splits-43, liner-42)
conj:or(blew-4, splits-43)
conj:and(work-34, splits-43)
case(ice-field-46, on-44)
det(ice-field-46, the-45)
nmod:on(splits-43, ice-field-46)
cc(blew-4, or-47)
det(Dogger-49, the-48)
nsubj(fills-50, Dogger-49)
conj:or(blew-4, fills-50)
case(cod-52, with-51)
nmod:with(fills-50, cod-52)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD barred)
        (NP (PRP$ my) (NNS gates))
        (PP (IN with)
          (NP (NN iron)))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBD shuttered)
        (NP (PRP$ my) (NNS doors))
        (PP (IN with)
          (NP (NN flame)))))
    (, ,)
    (S
      (SBAR (IN Because)
        (S
          (VP (TO to)
            (VP (VB force)
              (NP (PRP$ my) (NNS ramparts))))))
      (NP (PRP$ your) (NN nutshell) (NNS navies))
      (VP (VBD came)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBD took)
        (NP (DT the) (NN sun))
        (PP (IN from)
          (NP (PRP$ their) (NN presence)))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBD cut)
        (NP (PRP them))
        (PRT (RP down))
        (PP (IN with)
          (NP (PRP$ my) (NN blast)))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (PRP they))
        (VP (VBD died)))
      (, ,)
      (CC but)
      (S
        (NP
          (NP (DT the) (NN Flag))
          (PP (IN of)
            (NP (NNP England))))
        (VP (VBD blew)
          (NP
            (NP (JJ free) (NN ere))
            (SBAR
              (S
                (NP (DT the) (NN spirit))
                (VP (VBD passed))))))))
    (. .)))

nsubj(barred-3, I-2)
root(ROOT-0, barred-3)
nmod:poss(gates-5, my-4)
dobj(barred-3, gates-5)
case(iron-7, with-6)
nmod:with(barred-3, iron-7)
nsubj(shuttered-10, I-9)
ccomp(barred-3, shuttered-10)
nmod:poss(doors-12, my-11)
dobj(shuttered-10, doors-12)
case(flame-14, with-13)
nmod:with(shuttered-10, flame-14)
mark(force-18, Because-16)
mark(force-18, to-17)
advcl(came-24, force-18)
nmod:poss(ramparts-20, my-19)
dobj(force-18, ramparts-20)
nmod:poss(navies-23, your-21)
compound(navies-23, nutshell-22)
nsubj(came-24, navies-23)
conj:and(barred-3, came-24)
nsubj(took-27, I-26)
conj:and(barred-3, took-27)
det(sun-29, the-28)
dobj(took-27, sun-29)
case(presence-32, from-30)
nmod:poss(presence-32, their-31)
nmod:from(took-27, presence-32)
nsubj(cut-35, I-34)
ccomp(barred-3, cut-35)
dobj(cut-35, them-36)
compound:prt(cut-35, down-37)
case(blast-40, with-38)
nmod:poss(blast-40, my-39)
nmod:with(cut-35, blast-40)
cc(barred-3, And-42)
nsubj(died-44, they-43)
conj:and(barred-3, died-44)
cc(died-44, but-46)
det(Flag-48, the-47)
nsubj(blew-51, Flag-48)
case(England-50, of-49)
nmod:of(Flag-48, England-50)
conj:and(barred-3, blew-51)
conj:but(died-44, blew-51)
amod(ere-53, free-52)
dobj(blew-51, ere-53)
det(spirit-55, the-54)
nsubj(passed-56, spirit-55)
acl:relcl(ere-53, passed-56)

(ROOT
  (FRAG
    (NP (`` ``) (DT The) (JJ lean) (JJ white) (NN bear))
    (: hath)
    (S
      (S
        (VP (VBN seen)
          (NP (PRP it))
          (PP (IN in)
            (NP (DT the) (JJ long) (, ,) (JJ long) (NNP Arctic) (NN night)))))
      (, ,)
      (NP (DT The) (JJ musk-ox))
      (VP (VBZ knows)
        (NP
          (NP (DT the) (NN standard))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ flouts)
                (NP
                  (NP (DT the) (JJ Northern) (NN Light))
                  (: :)
                  (SBARQ
                    (WHNP (WP What))
                    (SQ (VBZ is)
                      (NP
                        (NP (DT the) (NN Flag))
                        (PP (IN of)
                          (NP (NNP England)))))
                    (. ?)))))))))))

det(bear-5, The-2)
amod(bear-5, lean-3)
amod(bear-5, white-4)
root(ROOT-0, bear-5)
advcl(knows-19, seen-7)
dobj(seen-7, it-8)
case(night-15, in-9)
det(night-15, the-10)
amod(night-15, long-11)
amod(night-15, long-13)
compound(night-15, Arctic-14)
nmod:in(seen-7, night-15)
det(musk-ox-18, The-17)
nsubj(knows-19, musk-ox-18)
parataxis(bear-5, knows-19)
det(standard-21, the-20)
dobj(knows-19, standard-21)
nsubj(flouts-23, standard-21)
ref(standard-21, that-22)
acl:relcl(standard-21, flouts-23)
det(Light-26, the-24)
amod(Light-26, Northern-25)
dobj(flouts-23, Light-26)
dep(Light-26, What-28)
cop(What-28, is-29)
det(Flag-31, the-30)
nsubj(What-28, Flag-31)
case(England-33, of-32)
nmod:of(Flag-31, England-33)

(ROOT
  (S
    (S
      (NP (PRP Ye))
      (VP (VBP have)
        (PP (CC but)
          (NP (PRP$ my) (NNS bergs)))
        (S
          (VP (TO to)
            (VP (VB dare))))))
    (, ,)
    (NP (PRP Ye))
    (VP (VBP have)
      (PP (CC but)
        (NP (PRP$ my) (NNS drifts)))
      (S
        (VP (TO to)
          (VP (VB conquer)))))
    (. .)))

nsubj(have-2, Ye-1)
nsubj:xsubj(dare-7, Ye-1)
ccomp(have-10, have-2)
case(bergs-5, but-3)
nmod:poss(bergs-5, my-4)
nmod:but(have-2, bergs-5)
mark(dare-7, to-6)
xcomp(have-2, dare-7)
nsubj(have-10, Ye-9)
nsubj:xsubj(conquer-15, Ye-9)
root(ROOT-0, have-10)
case(drifts-13, but-11)
nmod:poss(drifts-13, my-12)
nmod:but(have-10, drifts-13)
mark(conquer-15, to-14)
xcomp(have-10, conquer-15)

(ROOT
  (S
    (VP (VB Go)
      (ADVP (RB forth))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADVP (RB there))))))
    (. !) ('' '')))

root(ROOT-0, Go-1)
advmod(Go-1, forth-2)
mark(is-6, for-4)
nsubj(is-6, it-5)
advcl(Go-1, is-6)
advmod(is-6, there-7)

(ROOT
  (S
    (S
      (NP (DT The) (NNP South) (NN Wind))
      (VP (VBD sighed)))
    (: :) (: --) (`` ``)
    (S
      (PP (IN From)
        (NP (DT the) (NNPS Virgins)))
      (NP (PRP$ my) (JJ mid-sea) (NN course))
      (VP (VBD was)
        (NP
          (NP (NN ta'en))
          (PP (NNP Over)
            (NP (DT a) (CD thousand) (NNS islands)))
          (VP (VBN lost)
            (PP (IN in)
              (NP
                (NP (DT an) (JJ idle) (NN main))
                (, ,)
                (SBAR
                  (WHADVP (WRB Where))
                  (S
                    (NP
                      (NP (DT the) (JJ sea-egg) (NNS flames))
                      (PP (IN on)
                        (NP
                          (NP (DT the) (NN coral))
                          (CC and)
                          (NP (DT the) (JJ long-backed) (NNS breakers)))))
                    (VP (VBP croon)
                      (NP (PRP$ Their) (JJ endless) (NN ocean) (NNS legends))
                      (PP (TO to)
                        (NP (DT the)
                          (ADJP (JJ lazy) (, ,) (VBN locked))
                          (NN lagoon))))))))))))
    (. .)))

det(Wind-3, The-1)
compound(Wind-3, South-2)
nsubj(sighed-4, Wind-3)
root(ROOT-0, sighed-4)
case(Virgins-10, From-8)
det(Virgins-10, the-9)
nmod:from(ta'en-15, Virgins-10)
nmod:poss(course-13, my-11)
amod(course-13, mid-sea-12)
nsubj(ta'en-15, course-13)
cop(ta'en-15, was-14)
parataxis(sighed-4, ta'en-15)
dep(islands-19, Over-16)
det(islands-19, a-17)
nummod(islands-19, thousand-18)
nmod(ta'en-15, islands-19)
acl(ta'en-15, lost-20)
case(main-24, in-21)
det(main-24, an-22)
amod(main-24, idle-23)
nmod:in(lost-20, main-24)
advmod(croon-37, Where-26)
det(flames-29, the-27)
amod(flames-29, sea-egg-28)
nsubj(croon-37, flames-29)
case(coral-32, on-30)
det(coral-32, the-31)
nmod:on(flames-29, coral-32)
cc(coral-32, and-33)
det(breakers-36, the-34)
amod(breakers-36, long-backed-35)
nmod:on(flames-29, breakers-36)
conj:and(coral-32, breakers-36)
acl:relcl(main-24, croon-37)
nmod:poss(legends-41, Their-38)
amod(legends-41, endless-39)
compound(legends-41, ocean-40)
dobj(croon-37, legends-41)
case(lagoon-47, to-42)
det(lagoon-47, the-43)
dep(locked-46, lazy-44)
amod(lagoon-47, locked-46)
nmod:to(croon-37, lagoon-47)

(ROOT
  (S
    (S (`` ``)
      (S
        (S
          (VP (VBN Strayed)
            (PP (IN amid)
              (NP
                (NP (JJ lonely) (NNS islets))
                (, ,)
                (VP (VBN mazed)
                  (PP (IN amid)
                    (NP (JJ outer) (NNS keys))))))))
        (, ,)
        (NP (PRP I))
        (VP (VBD waked)
          (SBAR
            (S
              (NP
                (NP
                  (NP (DT the) (NNS palms))
                  (PP (TO to)
                    (NP (NN laughter))))
                (PRN (: --)
                  (S
                    (NP (PRP I))
                    (VP (VBD tossed)
                      (NP (DT the) (NN scud))
                      (PP (IN in)
                        (NP (DT the) (NN breeze)))))
                  (: --)))
              (ADVP (RB Never))
              (VP (VBD was)
                (ADJP (JJ isle)))))))
      (IN so)
      (S
        (ADVP (RB little))
        (, ,)
        (ADVP (RB never))
        (VP (VBD was)
          (NP
            (NP (NN sea))
            (ADJP (RB so) (VBN lone))))))
    (, ,)
    (CC But)
    (S
      (PP (IN over)
        (NP
          (NP (DT the) (NN scud))
          (CC and)
          (NP (DT the) (NNS palm-trees))))
      (NP (DT an) (JJ English) (NN flag))
      (VP (VBD was)
        (VP (VBN flown))))
    (. .)))

advcl(waked-13, Strayed-2)
case(islets-5, amid-3)
amod(islets-5, lonely-4)
nmod:amid(Strayed-2, islets-5)
acl(islets-5, mazed-7)
case(keys-10, amid-8)
amod(keys-10, outer-9)
nmod:amid(mazed-7, keys-10)
nsubj(waked-13, I-12)
root(ROOT-0, waked-13)
det(palms-15, the-14)
nsubj(isle-29, palms-15)
case(laughter-17, to-16)
nmod:to(palms-15, laughter-17)
nsubj(tossed-20, I-19)
dep(palms-15, tossed-20)
det(scud-22, the-21)
dobj(tossed-20, scud-22)
case(breeze-25, in-23)
det(breeze-25, the-24)
nmod:in(tossed-20, breeze-25)
neg(isle-29, Never-27)
cop(isle-29, was-28)
ccomp(waked-13, isle-29)
dep(waked-13, so-30)
advmod(sea-35, little-31)
neg(sea-35, never-33)
cop(sea-35, was-34)
parataxis(waked-13, sea-35)
advmod(lone-37, so-36)
amod(sea-35, lone-37)
cc(waked-13, But-39)
case(scud-42, over-40)
det(scud-42, the-41)
nmod:over(flown-50, scud-42)
cc(scud-42, and-43)
det(palm-trees-45, the-44)
conj:and(scud-42, palm-trees-45)
nmod:over(flown-50, palm-trees-45)
det(flag-48, an-46)
amod(flag-48, English-47)
nsubjpass(flown-50, flag-48)
auxpass(flown-50, was-49)
conj:but(waked-13, flown-50)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN wrenched)
          (S
            (NP (PRP it))
            (ADJP (JJ free)
              (PP (IN from)
                (NP (DT the) (NN halliard)
                  (S
                    (VP (TO to)
                      (VP (VB hang)
                        (PP (IN for)
                          (NP
                            (NP (DT a) (NN wisp))
                            (PP (IN on)
                              (NP (DT the) (NNP Horn)))))))))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN chased)
          (S
            (NP (PRP it)))
          (ADVP (RB north)
            (PP (TO to)
              (NP
                (NP (DT the) (NNP Lizard))
                (: --))))
          (VBN ribboned)
          (CC and)
          (VBN rolled)
          (CC and)
          (VBN torn))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN spread)
          (NP (PRP$ its) (JJ fold) (NN o'er))
          (S
            (NP
              (NP (DT the) (VBG dying))
              (, ,)
              (VP (VBN adrift)
                (PP (IN in)
                  (NP (DT a) (JJ hopeless) (NN sea)))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN hurled)
          (S
            (NP (PRP it))
            (ADJP (JJ swift)
              (PP (IN on)
                (NP (DT the) (NN slaver))))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBN seen)))
      (NP (DT the) (NN slave))
      (VP (VBD set)
        (ADJP (JJ free))))
    (. .)))

nsubj(wrenched-4, I-2)
aux(wrenched-4, have-3)
root(ROOT-0, wrenched-4)
nsubj(free-6, it-5)
xcomp(wrenched-4, free-6)
case(halliard-9, from-7)
det(halliard-9, the-8)
nmod:from(free-6, halliard-9)
mark(hang-11, to-10)
acl(halliard-9, hang-11)
case(wisp-14, for-12)
det(wisp-14, a-13)
nmod:for(hang-11, wisp-14)
case(Horn-17, on-15)
det(Horn-17, the-16)
nmod:on(wisp-14, Horn-17)
nsubj(chased-21, I-19)
nsubj(rolled-30, I-19)
nsubj(torn-32, I-19)
aux(chased-21, have-20)
conj:and(wrenched-4, chased-21)
xcomp(chased-21, it-22)
advmod(chased-21, north-23)
case(Lizard-26, to-24)
det(Lizard-26, the-25)
nmod:to(north-23, Lizard-26)
dep(chased-21, ribboned-28)
cc(chased-21, and-29)
conj:and(wrenched-4, rolled-30)
conj:and(chased-21, rolled-30)
cc(chased-21, and-31)
conj:and(wrenched-4, torn-32)
conj:and(chased-21, torn-32)
nsubj(spread-36, I-34)
aux(spread-36, have-35)
conj:and(wrenched-4, spread-36)
nmod:poss(o'er-39, its-37)
amod(o'er-39, fold-38)
dobj(spread-36, o'er-39)
xcomp(spread-36, the-40)
amod(the-40, dying-41)
acl(the-40, adrift-43)
case(sea-47, in-44)
det(sea-47, a-45)
amod(sea-47, hopeless-46)
nmod:in(adrift-43, sea-47)
nsubj(hurled-51, I-49)
aux(hurled-51, have-50)
conj:and(wrenched-4, hurled-51)
nsubj(swift-53, it-52)
xcomp(hurled-51, swift-53)
case(slaver-56, on-54)
det(slaver-56, the-55)
nmod:on(swift-53, slaver-56)
cc(wrenched-4, and-58)
dep(set-62, seen-59)
det(slave-61, the-60)
nsubj(set-62, slave-61)
conj:and(wrenched-4, set-62)
xcomp(set-62, free-63)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My) (JJ basking) (NN sunfish))
      (VP (VBP know)
        (NP (PRP it))))
    (, ,)
    (CC and)
    (S
      (NP (NN wheeling))
      (VP (VBZ albatross) (, ,)
        (SBAR
          (WHADVP (WRB Where))
          (S
            (NP (DT the) (JJ lone) (NN wave))
            (VP (VBZ fills)
              (PP (IN with)
                (NP (NN fire)))
              (PP (IN beneath)
                (NP (DT the) (NNP Southern) (NNP Cross))))))))
    (. .)))

nmod:poss(sunfish-4, My-2)
amod(sunfish-4, basking-3)
nsubj(know-5, sunfish-4)
root(ROOT-0, know-5)
dobj(know-5, it-6)
cc(know-5, and-8)
nsubj(albatross-10, wheeling-9)
conj:and(know-5, albatross-10)
advmod(fills-16, Where-12)
det(wave-15, the-13)
amod(wave-15, lone-14)
nsubj(fills-16, wave-15)
advcl(albatross-10, fills-16)
case(fire-18, with-17)
nmod:with(fills-16, fire-18)
case(Cross-22, beneath-19)
det(Cross-22, the-20)
compound(Cross-22, Southern-21)
nmod:beneath(fills-16, Cross-22)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN Flag))
        (PP (IN of)
          (NP (NNP England)))))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, is-2)
det(Flag-4, the-3)
nsubj(What-1, Flag-4)
case(England-6, of-5)
nmod:of(Flag-4, England-6)

(ROOT
  (S
    (S
      (NP (PRP Ye))
      (VP (VBP have)
        (PP (CC but)
          (NP (PRP$ my) (NNS reefs)))
        (S
          (VP (TO to)
            (VP (VB dare))))))
    (, ,)
    (NP (PRP Ye))
    (VP (VBP have)
      (PP (CC but)
        (NP (PRP$ my) (NNS seas)))
      (S
        (VP (TO to)
          (VP (VB furrow)))))
    (. .)))

nsubj(have-2, Ye-1)
nsubj:xsubj(dare-7, Ye-1)
ccomp(have-10, have-2)
case(reefs-5, but-3)
nmod:poss(reefs-5, my-4)
nmod:but(have-2, reefs-5)
mark(dare-7, to-6)
xcomp(have-2, dare-7)
nsubj(have-10, Ye-9)
nsubj:xsubj(furrow-15, Ye-9)
root(ROOT-0, have-10)
case(seas-13, but-11)
nmod:poss(seas-13, my-12)
nmod:but(have-10, seas-13)
mark(furrow-15, to-14)
xcomp(have-10, furrow-15)

(ROOT
  (S
    (VP (VB Go)
      (ADVP (RB forth))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADVP (RB there))))))
    (. !) ('' '')))

root(ROOT-0, Go-1)
advmod(Go-1, forth-2)
mark(is-6, for-4)
nsubj(is-6, it-5)
advcl(Go-1, is-6)
advmod(is-6, there-7)

(ROOT
  (S
    (S
      (NP (DT The) (NNP East) (NN Wind))
      (VP (VBP roared) (: :) (: --)
        (S (`` ``)
          (PP (IN From)
            (NP (DT the) (NNPS Kuriles)))
          (, ,)
          (NP (DT the) (NNP Bitter) (NNS Seas))
          (, ,)
          (NP (PRP I))
          (VP (VBP come)))))
    (, ,)
    (CC And)
    (S
      (NP (PRP me) (NNS men))
      (VP (VBP call)
        (NP (DT the) (JJ Home-Wind))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP I))
            (VP (VBP bring)
              (NP (DT the) (JJ English) (NN home)))))))
    (. .)))

det(Wind-3, The-1)
compound(Wind-3, East-2)
nsubj(roared-4, Wind-3)
root(ROOT-0, roared-4)
case(Kuriles-10, From-8)
det(Kuriles-10, the-9)
nmod:from(come-17, Kuriles-10)
det(Seas-14, the-12)
compound(Seas-14, Bitter-13)
nsubj(come-17, Seas-14)
nsubj(come-17, I-16)
ccomp(roared-4, come-17)
cc(roared-4, And-19)
dep(men-21, me-20)
nsubj(call-22, men-21)
conj:and(roared-4, call-22)
det(Home-Wind-24, the-23)
dobj(call-22, Home-Wind-24)
mark(bring-28, for-26)
nsubj(bring-28, I-27)
advcl(call-22, bring-28)
det(home-31, the-29)
amod(home-31, English-30)
dobj(bring-28, home-31)

(ROOT
  (FRAG
    (X (SYM Look))
    (: --)
    (VP (VBP look)
      (ADVP (RB well))
      (PP (TO to)
        (NP (PRP$ your) (NN shipping))))
    (. !)))

dep(look-3, Look-1)
root(ROOT-0, look-3)
advmod(look-3, well-4)
case(shipping-7, to-5)
nmod:poss(shipping-7, your-6)
nmod:to(look-3, shipping-7)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (DT the) (NN breath))
        (PP (IN of)
          (NP (PRP$ my) (JJ mad) (NN typhoon)))))
    (NP (PRP I))
    (VP
      (VP (VBD swept)
        (NP (PRP$ your) (JJ close-packed) (NN Praya)))
      (CC and)
      (VP (VBD beached)
        (NP (PRP$ your) (JJS best))
        (PP (IN at)
          (NP (NNP Kowloon)))))
    (. !)))

case(breath-3, By-1)
det(breath-3, the-2)
nmod:by(swept-9, breath-3)
case(typhoon-7, of-4)
nmod:poss(typhoon-7, my-5)
amod(typhoon-7, mad-6)
nmod:of(breath-3, typhoon-7)
nsubj(swept-9, I-8)
nsubj(beached-14, I-8)
root(ROOT-0, swept-9)
nmod:poss(Praya-12, your-10)
amod(Praya-12, close-packed-11)
dobj(swept-9, Praya-12)
cc(swept-9, and-13)
conj:and(swept-9, beached-14)
nmod:poss(best-16, your-15)
dobj(beached-14, best-16)
case(Kowloon-18, at-17)
nmod:at(beached-14, Kowloon-18)

(ROOT
  (S (`` ``)
    (S
      (NP (DT The) (NN reeling))
      (VP (VBZ junks)
        (PP (IN behind)
          (NP
            (NP (PRP me))
            (CC and)
            (NP (DT the) (NN racing) (NNS seas))))
        (SBAR (IN before) (, ,)
          (S
            (NP (PRP I))
            (VP (VBD raped)
              (NP (PRP$ your) (JJS richest) (NN roadstead)))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBD plundered)
        (NP (NNP Singapore))))
    (. !)))

det(reeling-3, The-2)
nsubj(junks-4, reeling-3)
root(ROOT-0, junks-4)
case(me-6, behind-5)
nmod:behind(junks-4, me-6)
cc(me-6, and-7)
det(seas-10, the-8)
compound(seas-10, racing-9)
nmod:behind(junks-4, seas-10)
conj:and(me-6, seas-10)
mark(raped-14, before-11)
nsubj(raped-14, I-13)
advcl(junks-4, raped-14)
nmod:poss(roadstead-17, your-15)
amod(roadstead-17, richest-16)
dobj(raped-14, roadstead-17)
nsubj(plundered-20, I-19)
parataxis(junks-4, plundered-20)
dobj(plundered-20, Singapore-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD set)
        (NP (PRP$ my) (NN hand))
        (PP (IN on)
          (NP (DT the) (NNP Hoogli)))))
    (: ;)
    (S
      (S
        (PP (IN as)
          (NP (DT a) (JJ hooded) (NN snake)))
        (NP (PRP she))
        (VP (VBD rose)))
      (, ,)
      (CC And)
      (S
        (NP (PRP I))
        (VP (VBG flung)
          (NP (PRP$ your) (NN stoutest) (NNS steamers))
          (S
            (VP (TO to)
              (VP (VB roost)
                (PP (IN with)
                  (NP (DT the) (JJ startled) (NNS crows)))))))))
    (. .)))

nsubj(set-2, I-1)
root(ROOT-0, set-2)
nmod:poss(hand-4, my-3)
dobj(set-2, hand-4)
case(Hoogli-7, on-5)
det(Hoogli-7, the-6)
nmod:on(set-2, Hoogli-7)
case(snake-12, as-9)
det(snake-12, a-10)
amod(snake-12, hooded-11)
nmod:as(rose-14, snake-12)
nsubj(rose-14, she-13)
parataxis(set-2, rose-14)
cc(rose-14, And-16)
nsubj(flung-18, I-17)
parataxis(set-2, flung-18)
conj:and(rose-14, flung-18)
nmod:poss(steamers-21, your-19)
compound(steamers-21, stoutest-20)
dobj(flung-18, steamers-21)
mark(roost-23, to-22)
advcl(flung-18, roost-23)
case(crows-27, with-24)
det(crows-27, the-25)
amod(crows-27, startled-26)
nmod:with(roost-23, crows-27)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Never))
      (NP (DT the) (NNS lotus))
      (VP
        (VP (VBZ closes))
        (, ,)
        (VP
          (ADVP (RB never))
          (NP (DT the) (JJ wild-fowl) (NN wake)))))
    (, ,)
    (CC But)
    (S
      (NP (DT a) (NN soul))
      (VP (VBZ goes)
        (PRT (RP out))
        (PP (IN on)
          (NP
            (NP (DT the) (JJ East) (NN Wind))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD died)
                  (PP (IN for)
                    (NP
                      (NP
                        (NP (NNP England) (POS 's))
                        (NN sake))
                      (PRN (: --)
                        (NP
                          (NP (NN Man)
                            (CC or)
                            (NN woman))
                          (CC or)
                          (NP (NN suckling) (, ,) (NN mother)
                            (CC or)
                            (NN bride)
                            (CC or)
                            (NN maid)))
                        (: --))))
                  (SBAR (IN Because)
                    (S
                      (PP (IN on)
                        (NP
                          (NP (DT the) (NNS bones))
                          (PP (IN of)
                            (NP (DT the) (NNP English)))))
                      (NP (DT the) (NNP English) (NNP Flag))
                      (VP (VBZ is)
                        (VP (VBN stayed))))))))))))
    (. .)))

neg(closes-5, Never-2)
det(lotus-4, the-3)
nsubj(closes-5, lotus-4)
root(ROOT-0, closes-5)
neg(wake-10, never-7)
det(wake-10, the-8)
amod(wake-10, wild-fowl-9)
dep(closes-5, wake-10)
cc(closes-5, But-12)
det(soul-14, a-13)
nsubj(goes-15, soul-14)
conj:but(closes-5, goes-15)
compound:prt(goes-15, out-16)
case(Wind-20, on-17)
det(Wind-20, the-18)
amod(Wind-20, East-19)
nmod:on(goes-15, Wind-20)
nsubj(died-22, Wind-20)
ref(Wind-20, that-21)
acl:relcl(Wind-20, died-22)
case(sake-26, for-23)
nmod:poss(sake-26, England-24)
case(England-24, 's-25)
nmod:for(died-22, sake-26)
dep(sake-26, Man-28)
cc(Man-28, or-29)
dep(sake-26, woman-30)
conj:or(Man-28, woman-30)
cc(Man-28, or-31)
dep(sake-26, suckling-32)
conj:or(Man-28, suckling-32)
conj:or(Man-28, mother-34)
conj:or(suckling-32, mother-34)
cc(suckling-32, or-35)
conj:or(Man-28, bride-36)
conj:or(suckling-32, bride-36)
cc(suckling-32, or-37)
conj:or(Man-28, maid-38)
conj:or(suckling-32, maid-38)
mark(stayed-51, Because-40)
case(bones-43, on-41)
det(bones-43, the-42)
nmod:on(stayed-51, bones-43)
case(English-46, of-44)
det(English-46, the-45)
nmod:of(bones-43, English-46)
det(Flag-49, the-47)
compound(Flag-49, English-48)
nsubjpass(stayed-51, Flag-49)
auxpass(stayed-51, is-50)
advcl(died-22, stayed-51)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (DT The) (JJ desert-dust) (NN hath))
        (VP (VBN dimmed)
          (NP (PRP it))))
      (, ,)
      (NP (DT the) (VBG flying) (NNS wild-ass))
      (VP (VBZ knows)))
    (, ,)
    (NP (DT The) (JJ scared) (JJ white) (NN leopard))
    (VP (VBD winds)
      (NP (PRP it))
      (PP (IN across)
        (NP (DT the) (JJ taintless) (NNS snows))))
    (. .)))

det(hath-4, The-2)
amod(hath-4, desert-dust-3)
nsubj(knows-11, hath-4)
acl(hath-4, dimmed-5)
dobj(dimmed-5, it-6)
det(wild-ass-10, the-8)
amod(wild-ass-10, flying-9)
nsubj(knows-11, wild-ass-10)
ccomp(winds-17, knows-11)
det(leopard-16, The-13)
amod(leopard-16, scared-14)
amod(leopard-16, white-15)
nsubj(winds-17, leopard-16)
root(ROOT-0, winds-17)
dobj(winds-17, it-18)
case(snows-22, across-19)
det(snows-22, the-20)
amod(snows-22, taintless-21)
nmod:across(winds-17, snows-22)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN Flag))
        (PP (IN of)
          (NP (NNP England)))))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, is-2)
det(Flag-4, the-3)
nsubj(What-1, Flag-4)
case(England-6, of-5)
nmod:of(Flag-4, England-6)

(ROOT
  (S
    (S
      (NP (PRP Ye))
      (VP (VBP have)
        (PP (CC but)
          (NP (PRP$ my) (NN sun)))
        (S
          (VP (TO to)
            (VP (VB dare))))))
    (, ,)
    (NP (PRP Ye))
    (VP (VBP have)
      (PP (CC but)
        (NP (PRP$ my) (NNS sands)))
      (S
        (VP (TO to)
          (VP (VB travel)))))
    (. .)))

nsubj(have-2, Ye-1)
nsubj:xsubj(dare-7, Ye-1)
ccomp(have-10, have-2)
case(sun-5, but-3)
nmod:poss(sun-5, my-4)
nmod:but(have-2, sun-5)
mark(dare-7, to-6)
xcomp(have-2, dare-7)
nsubj(have-10, Ye-9)
nsubj:xsubj(travel-15, Ye-9)
root(ROOT-0, have-10)
case(sands-13, but-11)
nmod:poss(sands-13, my-12)
nmod:but(have-10, sands-13)
mark(travel-15, to-14)
xcomp(have-10, travel-15)

(ROOT
  (S
    (VP (VB Go)
      (ADVP (RB forth))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADVP (RB there))))))
    (. !) ('' '')))

root(ROOT-0, Go-1)
advmod(Go-1, forth-2)
mark(is-6, for-4)
nsubj(is-6, it-5)
advcl(Go-1, is-6)
advmod(is-6, there-7)

(ROOT
  (S
    (S
      (NP (DT The) (NNP West) (NN Wind))
      (VP (VBD called)))
    (: :) (: --) (`` ``)
    (S
      (PP (IN In)
        (NP (NNS squadrons)))
      (NP (DT the) (JJ thoughtless) (NNS galleons))
      (VP (VBP fly)
        (S
          (NP (DT That))
          (VP (VB bear)
            (NP (DT the) (NN wheat)
              (CC and)
              (NNS cattle))
            (SBAR (IN lest)
              (S
                (NP (JJ street-bred) (NNS people))
                (VP (VBP die))))))))
    (. .)))

det(Wind-3, The-1)
compound(Wind-3, West-2)
nsubj(called-4, Wind-3)
root(ROOT-0, called-4)
case(squadrons-9, In-8)
nmod:in(fly-13, squadrons-9)
det(galleons-12, the-10)
amod(galleons-12, thoughtless-11)
nsubj(fly-13, galleons-12)
parataxis(called-4, fly-13)
nsubj(bear-15, That-14)
ccomp(fly-13, bear-15)
det(wheat-17, the-16)
dobj(bear-15, wheat-17)
cc(wheat-17, and-18)
dobj(bear-15, cattle-19)
conj:and(wheat-17, cattle-19)
mark(die-23, lest-20)
amod(people-22, street-bred-21)
nsubj(die-23, people-22)
advcl(bear-15, die-23)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP make)
      (S
        (NP (PRP$ my) (NN might))
        (NP (PRP$ their) (NN porter)))
      (, ,)
      (S
        (NP (PRP they))
        (VP
          (VP (VB make)
            (NP (PRP$ my) (NN house))
            (NP (PRP$ their) (NN path))
            (, ,)
            (PP (IN Till)
              (S
                (NP (PRP I))
                (VP (VBG loose)
                  (NP (PRP$ my) (NN neck))
                  (PP (IN from)
                    (NP (PRP$ their) (NN rudder)))))))
          (CC and)
          (VP (VB whelm)
            (NP (PRP them))
            (PP (DT all) (IN in)
              (NP (PRP$ my) (NN wrath)))))))
    (. .)))

nsubj(make-2, They-1)
root(ROOT-0, make-2)
nmod:poss(might-4, my-3)
nsubj(porter-6, might-4)
nmod:poss(porter-6, their-5)
xcomp(make-2, porter-6)
nsubj(make-9, they-8)
nsubj(whelm-24, they-8)
ccomp(make-2, make-9)
nmod:poss(house-11, my-10)
dep(make-9, house-11)
nmod:poss(path-13, their-12)
dobj(make-9, path-13)
mark(loose-17, Till-15)
nsubj(loose-17, I-16)
advcl(make-9, loose-17)
nmod:poss(neck-19, my-18)
dobj(loose-17, neck-19)
case(rudder-22, from-20)
nmod:poss(rudder-22, their-21)
nmod:from(loose-17, rudder-22)
cc(make-9, and-23)
ccomp(make-2, whelm-24)
conj:and(make-9, whelm-24)
dobj(whelm-24, them-25)
dep(wrath-29, all-26)
case(wrath-29, in-27)
nmod:poss(wrath-29, my-28)
nmod:in(whelm-24, wrath-29)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP draw)
        (NP (DT the) (JJ gliding) (NN fog-bank))
        (SBAR (IN as)
          (S
            (NP (DT a) (NN snake))
            (VP (VBZ is)
              (VP (VBN drawn)
                (PP (IN from)
                  (NP (DT the) (NN hole)))))))
        (, ,)
        (S
          (NP (PRP They))
          (VP (VB bellow)
            (NP (CD one))
            (PP (TO to)
              (NP
                (NP (DT the) (JJ other))
                (, ,)
                (NP (DT the) (JJ frighted) (JJ ship-bells) (NN toll))))))))
    (, ,) (IN For)
    (S
      (S
        (NP (NN day))
        (VP (VBZ is)
          (NP (DT a) (JJ drifting) (NN terror))
          (SBAR (IN till)
            (S
              (NP (PRP I))
              (VP (VB raise)
                (NP (DT the) (NN shroud))
                (PP (IN with)
                  (NP (PRP$ my) (NN breath))))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP they))
        (VP (VBP see)
          (NP
            (NP (JJ strange) (NNS bows))
            (PP (IN above)
              (NP (PRP them)))))))
    (CC and)
    (S
      (NP (DT the) (CD two))
      (VP (VBP go)
        (ADJP (VBN locked)
          (PP (TO to)
            (NP (NN death))))))
    (. .)))

nsubj(draw-3, I-2)
root(ROOT-0, draw-3)
det(fog-bank-6, the-4)
amod(fog-bank-6, gliding-5)
dobj(draw-3, fog-bank-6)
mark(drawn-11, as-7)
det(snake-9, a-8)
nsubjpass(drawn-11, snake-9)
auxpass(drawn-11, is-10)
advcl(draw-3, drawn-11)
case(hole-14, from-12)
det(hole-14, the-13)
nmod:from(drawn-11, hole-14)
nsubj(bellow-17, They-16)
dep(draw-3, bellow-17)
dobj(bellow-17, one-18)
case(other-21, to-19)
det(other-21, the-20)
nmod:to(bellow-17, other-21)
det(toll-26, the-23)
amod(toll-26, frighted-24)
amod(toll-26, ship-bells-25)
appos(other-21, toll-26)
dep(draw-3, For-28)
nsubj(terror-33, day-29)
cop(terror-33, is-30)
det(terror-33, a-31)
amod(terror-33, drifting-32)
dep(draw-3, terror-33)
mark(raise-36, till-34)
nsubj(raise-36, I-35)
advcl(terror-33, raise-36)
det(shroud-38, the-37)
dobj(raise-36, shroud-38)
case(breath-41, with-39)
nmod:poss(breath-41, my-40)
nmod:with(raise-36, breath-41)
cc(terror-33, And-43)
nsubj(see-45, they-44)
dep(draw-3, see-45)
conj:and(terror-33, see-45)
amod(bows-47, strange-46)
dobj(see-45, bows-47)
case(them-49, above-48)
nmod:above(bows-47, them-49)
cc(draw-3, and-50)
det(two-52, the-51)
nsubj(go-53, two-52)
conj:and(draw-3, go-53)
xcomp(go-53, locked-54)
case(death-56, to-55)
nmod:to(locked-54, death-56)

(ROOT
  (S (`` ``)
    (CC But)
    (SBAR (IN whether)
      (S
        (PP (IN in)
          (NP (NN calm)
            (CC or)
            (NN wrack-wreath)))
        (, ,)
        (SBAR (IN whether)
          (FRAG
            (PP (IN by)
              (NP (NN dark)
                (CC or)
                (NN day)))))
        (, ,)
        (NP (PRP I))
        (VP
          (VP (VBP heave)
            (S
              (NP (PRP them))
              (ADJP (JJ whole)
                (PP (TO to)
                  (NP (DT the) (NN conger))))))
          (CC or)
          (VP (VBP rip)
            (NP (PRP$ their) (NNS plates))
            (PRT (RP away))))))
    (, ,)
    (NP
      (NP (NNP First))
      (PP (IN of)
        (NP (DT the) (JJ scattered) (NNS legions))))
    (, ,)
    (PP (IN under)
      (NP
        (NP (DT a) (VBG shrieking) (NN sky))
        (, ,)
        (VP (VBG Dipping)
          (PP (IN between)
            (NP (DT the) (NNS rollers))))))
    (, ,)
    (NP (DT the) (NNP English) (NNP Flag))
    (VP (VBZ goes)
      (PP (IN by)))
    (. .)))

cc(goes-47, But-2)
mark(heave-16, whether-3)
case(calm-5, in-4)
nmod:in(heave-16, calm-5)
cc(calm-5, or-6)
conj:or(calm-5, wrack-wreath-7)
nmod:in(heave-16, wrack-wreath-7)
mark(dark-11, whether-9)
case(dark-11, by-10)
advcl(heave-16, dark-11)
cc(dark-11, or-12)
conj:or(dark-11, day-13)
advcl(heave-16, day-13)
nsubj(heave-16, I-15)
nsubj(rip-23, I-15)
advcl(goes-47, heave-16)
nsubj(whole-18, them-17)
xcomp(heave-16, whole-18)
case(conger-21, to-19)
det(conger-21, the-20)
nmod:to(whole-18, conger-21)
cc(heave-16, or-22)
conj:or(heave-16, rip-23)
advcl(goes-47, rip-23)
nmod:poss(plates-25, their-24)
dobj(rip-23, plates-25)
compound:prt(rip-23, away-26)
nsubj(goes-47, First-28)
case(legions-32, of-29)
det(legions-32, the-30)
amod(legions-32, scattered-31)
nmod:of(First-28, legions-32)
case(sky-37, under-34)
det(sky-37, a-35)
amod(sky-37, shrieking-36)
nmod:under(goes-47, sky-37)
acl(sky-37, Dipping-39)
case(rollers-42, between-40)
det(rollers-42, the-41)
nmod:between(Dipping-39, rollers-42)
det(Flag-46, the-44)
compound(Flag-46, English-45)
nsubj(goes-47, Flag-46)
root(ROOT-0, goes-47)
case(sky-37, by-48)

(ROOT
  (SINV
    (S (`` ``)
      (NP (DT The) (JJ dead) (JJ dumb) (NN fog))
      (VP (VBD hath)))
    (VP (VBD wrapped)
      (SBAR
        (S
          (NP (PRP it))
          (PRN (: --)
            (S
              (NP (DT the) (JJ frozen) (NNS dews))
              (VP (VBP have)
                (VP (VBN kissed))))
            (: --))
          (NP (DT The) (JJ naked) (NNS stars))
          (VP (VBP have)
            (VP (VBN seen))))))
    (NP
      (NP (PRP it))
      (, ,)
      (NP
        (NP (DT a) (NN fellow-star))
        (PP (IN in)
          (NP (DT the) (NN mist)))))
    (. .)))

det(fog-5, The-2)
amod(fog-5, dead-3)
amod(fog-5, dumb-4)
nsubj(hath-6, fog-5)
dep(wrapped-7, hath-6)
root(ROOT-0, wrapped-7)
nsubj(seen-20, it-8)
det(dews-12, the-10)
amod(dews-12, frozen-11)
nsubj(kissed-14, dews-12)
aux(kissed-14, have-13)
parataxis(seen-20, kissed-14)
det(stars-18, The-16)
amod(stars-18, naked-17)
nsubj(seen-20, stars-18)
aux(seen-20, have-19)
ccomp(wrapped-7, seen-20)
nsubj(wrapped-7, it-21)
det(fellow-star-24, a-23)
appos(it-21, fellow-star-24)
case(mist-27, in-25)
det(mist-27, the-26)
nmod:in(fellow-star-24, mist-27)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN Flag))
        (PP (IN of)
          (NP (NNP England)))))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, is-2)
det(Flag-4, the-3)
nsubj(What-1, Flag-4)
case(England-6, of-5)
nmod:of(Flag-4, England-6)

(ROOT
  (S
    (S
      (NP (PRP Ye))
      (VP (VBP have)
        (PP (CC but)
          (NP (PRP$ my) (NN breath)))
        (S
          (VP (TO to)
            (VP (VB dare))))))
    (, ,)
    (NP (PRP Ye))
    (VP (VBP have)
      (PP (CC but)
        (NP (PRP$ my) (NNS waves)))
      (S
        (VP (TO to)
          (VP (VB conquer)))))
    (. .)))

nsubj(have-2, Ye-1)
nsubj:xsubj(dare-7, Ye-1)
ccomp(have-10, have-2)
case(breath-5, but-3)
nmod:poss(breath-5, my-4)
nmod:but(have-2, breath-5)
mark(dare-7, to-6)
xcomp(have-2, dare-7)
nsubj(have-10, Ye-9)
nsubj:xsubj(conquer-15, Ye-9)
root(ROOT-0, have-10)
case(waves-13, but-11)
nmod:poss(waves-13, my-12)
nmod:but(have-10, waves-13)
mark(conquer-15, to-14)
xcomp(have-10, conquer-15)

(ROOT
  (S
    (VP (VB Go)
      (ADVP (RB forth))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADVP (RB there))))))
    (. !) ('' '')))

root(ROOT-0, Go-1)
advmod(Go-1, forth-2)
mark(is-6, for-4)
nsubj(is-6, it-5)
advcl(Go-1, is-6)
advmod(is-6, there-7)

(ROOT
  (NP
    (NP
      (NP (`` ``)
        (NP (NNP CLEARED))
        ('' '')
        (PRN (-LRB- -LRB-)
          (PP (IN In)
            (NP
              (NP (NN Memory))
              (PP (IN of)
                (NP (DT a) (NNP Commission)))))
          (-RRB- -RRB-)))
      (NN Help))
    (PP (IN for)
      (NP (DT a) (NN patriot)))
    (ADJP (JJ distressed))
    (, ,)
    (NP (DT a) (JJ spotless) (NN spirit) (NN hurt))
    (, ,)
    (VP (VBN Help)
      (PP (IN for)
        (NP
          (NP (DT an) (JJ honourable) (NN clan) (NN sore))
          (VP (VBN trampled)
            (PP (IN in)
              (NP (DT the) (NN dirt)))))))
    (. !)))

compound(Help-11, CLEARED-2)
case(Memory-6, In-5)
nmod:in(CLEARED-2, Memory-6)
case(Commission-9, of-7)
det(Commission-9, a-8)
nmod:of(Memory-6, Commission-9)
root(ROOT-0, Help-11)
case(patriot-14, for-12)
det(patriot-14, a-13)
nmod:for(Help-11, patriot-14)
amod(Help-11, distressed-15)
det(hurt-20, a-17)
amod(hurt-20, spotless-18)
compound(hurt-20, spirit-19)
appos(Help-11, hurt-20)
acl(Help-11, Help-22)
case(sore-27, for-23)
det(sore-27, an-24)
amod(sore-27, honourable-25)
compound(sore-27, clan-26)
nmod:for(Help-22, sore-27)
acl(sore-27, trampled-28)
case(dirt-31, in-29)
det(dirt-31, the-30)
nmod:in(trampled-28, dirt-31)

(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (NNP Queenstown) (NNP Bay))
        (PP (TO to)
          (NP (NNP Donegal)))))
    (PRN (, ,)
      (S
        (NP (NNP O))
        (VP (VBP listen)
          (PP (TO to)
            (NP (PRP$ my) (NN song)))))
      (, ,))
    (NP (DT The) (JJ honourable) (NNS gentlemen))
    (VP (VBP have)
      (VP (VBN suffered)
        (S
          (ADJP (RB grievous) (JJ wrong)))))
    (. .)))

case(Bay-3, From-1)
compound(Bay-3, Queenstown-2)
nmod:from(suffered-17, Bay-3)
case(Donegal-5, to-4)
nmod:to(Bay-3, Donegal-5)
nsubj(listen-8, O-7)
parataxis(suffered-17, listen-8)
case(song-11, to-9)
nmod:poss(song-11, my-10)
nmod:to(listen-8, song-11)
det(gentlemen-15, The-13)
amod(gentlemen-15, honourable-14)
nsubj(suffered-17, gentlemen-15)
aux(suffered-17, have-16)
root(ROOT-0, suffered-17)
advmod(wrong-19, grievous-18)
xcomp(suffered-17, wrong-19)

(ROOT
  (S
    (NP (PRP$ Their) (JJ noble) (NNS names))
    (VP (VBD were)
      (VP (VBN mentioned) (: --)
        (NP
          (NP (NNP O))
          (NP (DT the) (VBG burning) (JJ black) (NN disgrace)))))
    (. !)))

nmod:poss(names-3, Their-1)
amod(names-3, noble-2)
nsubjpass(mentioned-5, names-3)
auxpass(mentioned-5, were-4)
root(ROOT-0, mentioned-5)
dobj(mentioned-5, O-7)
det(disgrace-11, the-8)
amod(disgrace-11, burning-9)
amod(disgrace-11, black-10)
dep(O-7, disgrace-11)

(ROOT
  (S
    (S
      (SBAR
        (PRN (: --)
          (PP (IN By)
            (NP
              (NP (DT a) (JJ brutal) (NNP Saxon) (NN paper))
              (PP (IN in)
                (NP (DT an) (JJ Irish) (NN shooting-case)))))
          (: ;))
        (S
          (NP (PRP They))
          (VP (VBD sat)
            (PP (IN upon)
              (NP (PRP it)))
            (PP (IN for)
              (NP (DT a) (NN year))))))
      (, ,)
      (NP (RB then))
      (VP (VBD steeled)
        (NP (PRP$ their) (NN heart)
          (S
            (VP (TO to)
              (VP (VB brave)
                (NP (PRP it))))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (`` ``) (NN coruscating) (NN innocence) ('' ''))
        (NP (DT the) (NNP learned) (NNPS Judges)))
      (VP (VBD gave)
        (NP (PRP it))))
    (. .)))

case(paper-6, By-2)
det(paper-6, a-3)
amod(paper-6, brutal-4)
compound(paper-6, Saxon-5)
dep(sat-13, paper-6)
case(shooting-case-10, in-7)
det(shooting-case-10, an-8)
amod(shooting-case-10, Irish-9)
nmod:in(paper-6, shooting-case-10)
nsubj(sat-13, They-12)
advcl(steeled-21, sat-13)
case(it-15, upon-14)
nmod:upon(sat-13, it-15)
case(year-18, for-16)
det(year-18, a-17)
nmod:for(sat-13, year-18)
nsubj(steeled-21, then-20)
root(ROOT-0, steeled-21)
nmod:poss(heart-23, their-22)
dobj(steeled-21, heart-23)
mark(brave-25, to-24)
acl(heart-23, brave-25)
dobj(brave-25, it-26)
cc(steeled-21, And-28)
compound(innocence-31, coruscating-30)
nsubj(gave-36, innocence-31)
det(Judges-35, the-33)
compound(Judges-35, learned-34)
dep(innocence-31, Judges-35)
conj:And(steeled-21, gave-36)
dobj(gave-36, it-37)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Bear) (NN witness))
        (, ,)
        (NP (NNP Heaven))
        (, ,))
      (PP (IN of)
        (NP
          (NP (DT that) (JJ grim) (NN crime))
          (PP (IN beneath)
            (NP
              (NP
                (NP (DT the) (NN surgeon) (POS 's))
                (NN knife))
              (, ,)
              (NP (DT The) (JJ honourable) (NNS gentlemen)))))))
    (VP (VBD deplored)
      (NP
        (NP (DT the) (NN loss))
        (PP (IN of)
          (NP (NN life)))))
    (. !)))

compound(witness-2, Bear-1)
nsubj(deplored-19, witness-2)
appos(witness-2, Heaven-4)
case(crime-9, of-6)
det(crime-9, that-7)
amod(crime-9, grim-8)
nmod:of(witness-2, crime-9)
case(knife-14, beneath-10)
det(surgeon-12, the-11)
nmod:poss(knife-14, surgeon-12)
case(surgeon-12, 's-13)
nmod:beneath(crime-9, knife-14)
det(gentlemen-18, The-16)
amod(gentlemen-18, honourable-17)
appos(knife-14, gentlemen-18)
root(ROOT-0, deplored-19)
det(loss-21, the-20)
dobj(deplored-19, loss-21)
case(life-23, of-22)
nmod:of(loss-21, life-23)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Bear) (NN witness))
        (PP (IN of)
          (NP (DT those) (NN chanting))))
      (VP (VBZ choirs)
        (NP
          (NP (DT that) (NN burk))
          (CC and)
          (NP (NN shirk)
            (CC and)
            (NN snigger)))))
    (, ,)
    (NP (DT No) (NN man))
    (VP (VBD laid)
      (NP (NN hand))
      (PP (IN upon)
        (NP (DT the) (NN knife)
          (CC or)
          (NN finger)))
      (PP (TO to)
        (NP (DT the) (NN trigger))))
    (. !)))

compound(witness-2, Bear-1)
nsubj(choirs-6, witness-2)
case(chanting-5, of-3)
det(chanting-5, those-4)
nmod:of(witness-2, chanting-5)
ccomp(laid-16, choirs-6)
det(burk-8, that-7)
dobj(choirs-6, burk-8)
cc(burk-8, and-9)
dobj(choirs-6, shirk-10)
conj:and(burk-8, shirk-10)
cc(shirk-10, and-11)
conj:and(burk-8, snigger-12)
conj:and(shirk-10, snigger-12)
neg(man-15, No-14)
nsubj(laid-16, man-15)
root(ROOT-0, laid-16)
dobj(laid-16, hand-17)
case(knife-20, upon-18)
det(knife-20, the-19)
nmod:upon(laid-16, knife-20)
cc(knife-20, or-21)
nmod:upon(laid-16, finger-22)
conj:or(knife-20, finger-22)
case(trigger-25, to-23)
det(trigger-25, the-24)
nmod:to(laid-16, trigger-25)

(ROOT
  (S
    (S
      (VP (VBN Cleared)
        (PP (IN in)
          (NP
            (NP (DT the) (NN face))
            (PP (IN of)
              (NP (DT all) (NN mankind)))))
        (PP (IN beneath)
          (NP (DT the) (JJ winking) (NNS skies)))
        (, ,)
        (S
          (PP (IN Like)
            (NP (NN ph)))
          (VP (VBG -RSB-)
            (NP (NNS oenixes))
            (PP (IN from)
              (NP (NNP Ph) (NNP -RSB-) (NNP oenix) (NNP Park)))))))
    (PRN (-LRB- -LRB-)
      (CC and)
      (S
        (NP (WDT what))
        (VP (VBD lay)
          (ADVP (RB there))))
      (-RRB- -RRB-))
    (NP (PRP they))
    (VP (VBP rise))
    (. !)))

dep(rise-29, Cleared-1)
case(face-4, in-2)
det(face-4, the-3)
nmod:in(Cleared-1, face-4)
case(mankind-7, of-5)
det(mankind-7, all-6)
nmod:of(face-4, mankind-7)
case(skies-11, beneath-8)
det(skies-11, the-9)
amod(skies-11, winking-10)
nmod:beneath(Cleared-1, skies-11)
case(ph-14, Like-13)
nmod:like(-RSB--15, ph-14)
xcomp(Cleared-1, -RSB--15)
dobj(-RSB--15, oenixes-16)
case(Park-21, from-17)
compound(Park-21, Ph-18)
compound(Park-21, -RSB--19)
compound(Park-21, oenix-20)
nmod:from(-RSB--15, Park-21)
cc(lay-25, and-23)
nsubj(lay-25, what-24)
parataxis(rise-29, lay-25)
advmod(lay-25, there-26)
nsubj(rise-29, they-28)
root(ROOT-0, rise-29)

(ROOT
  (S
    (S
      (NP (NNP Go))
      (VP (VBP shout)
        (NP (PRP it))
        (PP (TO to)
          (NP (DT the) (JJ emerald) (NNS seas)))))
    (PRN (: --)
      (S
        (VP (VB give)
          (NP (NN word))
          (S
            (VP (TO to)
              (VP (VB Erin)
                (S
                  (ADVP (RB now))
                  (, ,)
                  (NP (PRP$ Her) (JJ honourable) (NNS gentlemen))
                  (VP (VBP are)
                    (VP (VBN cleared)))))))))
      (: --))
    (CC and)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (NP (WRB how))
        (: :)
        (S (: --)
          (S
            (NP (PRP They))
            (VP
              (ADVP (RB only))
              (VBD paid)
              (NP (DT the) (NN Moonlighter))
              (NP (PRP$ his) (JJ cattle-hocking) (NN price))))
          (, ,)
          (S
            (NP (PRP They))
            (ADVP (RB only))
            (VP (VBD helped)
              (NP (DT the) (NN murderer))
              (PP (IN with)
                (NP
                  (NP (NN counsel) (POS 's))
                  (JJS best) (NN advice)))
              (, ,)
              (ADVP (CC But)))))))
    (: --)
    (S
      (ADVP (RB sure))
      (NP (PRP it))
      (VP (VBZ keeps)
        (S
          (NP (PRP$ their) (NN honour))
          (ADJP (JJ white)))))
    (: --)
    (S
      (NP (DT the) (NNP learned) (NNP Court))
      (VP (VBZ believes)
        (SBAR
          (S
            (NP (PRP They))
            (ADVP (RB never))
            (VP (VBD gave)
              (NP
                (NP (DT a) (NN piece))
                (PP (IN of)
                  (NP (NN plate))))
              (PP (TO to)
                (NP (NNS murderers)
                  (CC and)
                  (NNS thieves))))))))
    (. .)))

nsubj(shout-2, Go-1)
root(ROOT-0, shout-2)
dobj(shout-2, it-3)
case(seas-7, to-4)
det(seas-7, the-5)
amod(seas-7, emerald-6)
nmod:to(shout-2, seas-7)
dep(shout-2, give-9)
dobj(give-9, word-10)
mark(Erin-12, to-11)
advcl(give-9, Erin-12)
advmod(cleared-19, now-13)
nmod:poss(gentlemen-17, Her-15)
amod(gentlemen-17, honourable-16)
nsubjpass(cleared-19, gentlemen-17)
auxpass(cleared-19, are-18)
ccomp(Erin-12, cleared-19)
cc(shout-2, and-21)
nsubj(how-24, this-22)
cop(how-24, is-23)
conj:and(shout-2, how-24)
nsubj(paid-29, They-27)
advmod(paid-29, only-28)
parataxis(how-24, paid-29)
det(Moonlighter-31, the-30)
iobj(paid-29, Moonlighter-31)
nmod:poss(price-34, his-32)
amod(price-34, cattle-hocking-33)
dobj(paid-29, price-34)
nsubj(helped-38, They-36)
advmod(helped-38, only-37)
parataxis(paid-29, helped-38)
det(murderer-40, the-39)
dobj(helped-38, murderer-40)
case(advice-45, with-41)
nmod:poss(advice-45, counsel-42)
case(counsel-42, 's-43)
amod(advice-45, best-44)
nmod:with(helped-38, advice-45)
advmod(helped-38, But-47)
advmod(keeps-51, sure-49)
nsubj(keeps-51, it-50)
parataxis(shout-2, keeps-51)
nmod:poss(honour-53, their-52)
nsubj(white-54, honour-53)
xcomp(keeps-51, white-54)
det(Court-58, the-56)
compound(Court-58, learned-57)
nsubj(believes-59, Court-58)
parataxis(shout-2, believes-59)
nsubj(gave-62, They-60)
neg(gave-62, never-61)
ccomp(believes-59, gave-62)
det(piece-64, a-63)
dobj(gave-62, piece-64)
case(plate-66, of-65)
nmod:of(piece-64, plate-66)
case(murderers-68, to-67)
nmod:to(gave-62, murderers-68)
cc(murderers-68, and-69)
nmod:to(gave-62, thieves-70)
conj:and(murderers-68, thieves-70)

(ROOT
  (S
    (S
      (NP (PRP They))
      (ADVP (RB never))
      (VP (VBD told)
        (NP (DT the) (JJ ramping) (NN crowd))
        (S
          (VP (TO to)
            (VP (VB card)
              (NP
                (NP (DT a) (NN woman) (POS 's))
                (NN hide)))))))
    (, ,)
    (NP (PRP They))
    (ADVP (RB never))
    (VP (VBD marked)
      (NP
        (NP
          (NP (DT a) (NN man))
          (PP (IN for)
            (NP (NN death))))
        (: --)
        (NP
          (NP (WP what) (NN fault))
          (PP (IN of)
            (NP (PRP theirs)))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD died)))))))
    (. ?)))

nsubj(told-3, They-1)
neg(told-3, never-2)
ccomp(marked-16, told-3)
det(crowd-6, the-4)
amod(crowd-6, ramping-5)
dobj(told-3, crowd-6)
nsubj:xsubj(card-8, crowd-6)
mark(card-8, to-7)
xcomp(told-3, card-8)
det(woman-10, a-9)
nmod:poss(hide-12, woman-10)
case(woman-10, 's-11)
dobj(card-8, hide-12)
nsubj(marked-16, They-14)
neg(marked-16, never-15)
root(ROOT-0, marked-16)
det(man-18, a-17)
dobj(marked-16, man-18)
case(death-20, for-19)
nmod:for(man-18, death-20)
det(fault-23, what-22)
dep(man-18, fault-23)
case(theirs-25, of-24)
nmod:of(fault-23, theirs-25)
nsubj(died-27, he-26)
acl:relcl(fault-23, died-27)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP They))
      (VP
        (VP
          (ADVP (RB only))
          (VP (VBD said) (`` ``)
            (NP (NNS intimidate))
            ('' ''))
          (, ,)
          (CC and)
          (VP (VBD talked)))
        (CC and)
        (VP (VBD went)
          (PRT (RP away)))))
    (: --)
    (S
      (PP (IN By)
        (NP (NNP God)))
      (, ,)
      (NP
        (NP (DT the) (NNS boys))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD did)
              (NP (DT the) (NN work))))))
      (VP (VBD were)
        (NP
          (NP (NN braver) (NNS men))
          (PP (IN than)
            (NP (PRP they))))))
    (. !)))

nsubj(said-4, They-2)
nsubj(talked-10, They-2)
nsubj(went-12, They-2)
advmod(said-4, only-3)
root(ROOT-0, said-4)
dobj(said-4, intimidate-6)
cc(said-4, and-9)
conj:and(said-4, talked-10)
cc(said-4, and-11)
conj:and(said-4, went-12)
compound:prt(went-12, away-13)
case(God-16, By-15)
nmod:by(men-26, God-16)
det(boys-19, the-18)
nsubj(did-21, boys-19)
nsubj(men-26, boys-19)
ref(boys-19, that-20)
acl:relcl(boys-19, did-21)
det(work-23, the-22)
dobj(did-21, work-23)
cop(men-26, were-24)
compound(men-26, braver-25)
parataxis(said-4, men-26)
case(they-28, than-27)
nmod:than(men-26, they-28)

(ROOT
  (S
    (NP
      (NP (PRP$ Their) (NN sin))
      (SBAR
        (S
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP
                (NP
                  (NP (DT that))
                  (VP (VBN fed)
                    (NP (DT the) (NN fire))))
                (: --)
                (NP
                  (NP (JJ small) (NN blame))
                  (PP (TO to)
                    (NP (PRP them)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD heard) (: --)
                        (S
                          (NP (DT The) (`` ``) (NNS bhoys) ('' ''))
                          (VP (VB get)
                            (ADVP (NN drunk))
                            (PP (IN on)
                              (NP (NN rhetoric)))))))))
                (, ,)
                (CC and)
                (NP
                  (NP (NN madden))
                  (PP (IN at)
                    (NP (DT a) (NN word)))))))
          (: --)
          (S
            (NP (PRP They))
            (VP (VBD knew)
              (SBAR
                (WHNP (WP whom))
                (S
                  (NP (PRP they))
                  (VP (VBD were)
                    (VP (VBG talking)
                      (PP (IN at)))))))))))
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (NP
              (NP (JJ Irish) (RB too))
              (, ,)
              (NP
                (NP (DT The) (NNS gentlemen))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD lied)
                      (PP (IN in)
                        (NP (NNP Court)))))))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD knew)))
    (, ,)
    (CC and)
    (S
      (ADVP (RB well))
      (NP (PRP they))
      (VP (VBD knew)))
    (. .)))

nmod:poss(sin-2, Their-1)
nsubj(heard-15, sin-2)
dep(knew-54, sin-2)
nsubj(that-5, it-3)
cop(that-5, was-4)
acl:relcl(sin-2, that-5)
acl(that-5, fed-6)
det(fire-8, the-7)
dobj(fed-6, fire-8)
amod(blame-11, small-10)
acl:relcl(sin-2, blame-11)
conj:and(that-5, blame-11)
nsubj(heard-15, blame-11)
case(them-13, to-12)
nmod:to(blame-11, them-13)
ref(sin-2, that-14)
ref(blame-11, that-14)
acl:relcl(blame-11, heard-15)
det(bhoys-19, The-17)
nsubj(get-21, bhoys-19)
ccomp(heard-15, get-21)
advmod(get-21, drunk-22)
case(rhetoric-24, on-23)
nmod:on(get-21, rhetoric-24)
cc(that-5, and-26)
acl:relcl(sin-2, madden-27)
conj:and(that-5, madden-27)
case(word-30, at-28)
det(word-30, a-29)
nmod:at(madden-27, word-30)
nsubj(knew-33, They-32)
parataxis(that-5, knew-33)
nmod:at(talking-37, whom-34)
nsubj(talking-37, they-35)
aux(talking-37, were-36)
ccomp(knew-33, talking-37)
case(whom-34, at-38)
mark(Irish-43, if-40)
nsubj(Irish-43, they-41)
cop(Irish-43, were-42)
advcl(knew-54, Irish-43)
advmod(Irish-43, too-44)
det(gentlemen-47, The-46)
appos(Irish-43, gentlemen-47)
nsubj(lied-49, gentlemen-47)
ref(gentlemen-47, that-48)
acl:relcl(gentlemen-47, lied-49)
case(Court-51, in-50)
nmod:in(lied-49, Court-51)
nsubj(knew-54, they-53)
root(ROOT-0, knew-54)
cc(knew-54, and-56)
advmod(knew-59, well-57)
nsubj(knew-59, they-58)
conj:and(knew-54, knew-59)

(ROOT
  (S
    (S
      (NP (PRP They))
      (ADVP (RB only))
      (VP (VBD took)
        (NP (DT the) (JJ Judas-gold))
        (PP (IN from)
          (NP
            (NP (NNP Fenians))
            (PP (RB out) (IN of)
              (NP (NN jail)))))))
    (, ,)
    (NP (PRP They))
    (ADVP (RB only))
    (VP (VBD fawned)
      (PP (IN for)
        (NP (NNS dollars)))
      (PP (IN on)
        (NP (DT the) (JJ blood-dyed) (NN Clanna-Gael))))
    (. .)))

nsubj(took-3, They-1)
advmod(took-3, only-2)
ccomp(fawned-14, took-3)
det(Judas-gold-5, the-4)
dobj(took-3, Judas-gold-5)
case(Fenians-7, from-6)
nmod:from(took-3, Fenians-7)
case(jail-10, out-8)
mwe(out-8, of-9)
nmod:out_of(Fenians-7, jail-10)
nsubj(fawned-14, They-12)
advmod(fawned-14, only-13)
root(ROOT-0, fawned-14)
case(dollars-16, for-15)
nmod:for(fawned-14, dollars-16)
case(Clanna-Gael-20, on-17)
det(Clanna-Gael-20, the-18)
amod(Clanna-Gael-20, blood-dyed-19)
nmod:on(fawned-14, Clanna-Gael-20)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (JJ black))
          (VP (VBZ is)
            (ADJP (JJ black)
              (CC or)
              (JJ white)))))
      (VP (VBZ is)
        (ADJP (JJ white))
        (, ,)
        (PP (IN in)
          (ADJP
            (ADJP (JJ black)
              (CC and)
              (JJ white))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADJP (RP down)))))))))
    (, ,)
    (NP (PRP They))
    (VP (VBP 're)
      (ADVP (RB only))
      (ADJP (JJ traitors)
        (PP (TO to)
          (NP
            (NP (DT the) (NN Queen))
            (CC and)
            (NP (NNS rebels)))))
      (PP (TO to)
        (NP (DT the) (NNP Crown))))
    (. .)))

mark(black-4, If-1)
nsubj(black-4, black-2)
nsubj(white-6, black-2)
cop(black-4, is-3)
csubj(white-8, black-4)
cc(black-4, or-5)
conj:or(black-4, white-6)
csubj(white-8, white-6)
cop(white-8, is-7)
ccomp(traitors-21, white-8)
case(black-11, in-10)
advcl(white-8, black-11)
cc(black-11, and-12)
advcl(white-8, white-13)
conj:and(black-11, white-13)
nsubj(down-16, it-14)
cop(down-16, 's-15)
ccomp(black-11, down-16)
nsubj(traitors-21, They-18)
cop(traitors-21, 're-19)
advmod(traitors-21, only-20)
root(ROOT-0, traitors-21)
case(Queen-24, to-22)
det(Queen-24, the-23)
nmod:to(traitors-21, Queen-24)
cc(Queen-24, and-25)
nmod:to(traitors-21, rebels-26)
conj:and(Queen-24, rebels-26)
case(Crown-29, to-27)
det(Crown-29, the-28)
nmod:to(traitors-21, Crown-29)

(ROOT
  (FRAG
    (ADJP (`` ``) (JJ Cleared) ('' ''))
    (, ,)
    (NP (JJ honourable) (NNS gentlemen))
    (. !)))

dep(gentlemen-6, Cleared-2)
amod(gentlemen-6, honourable-5)
root(ROOT-0, gentlemen-6)

(ROOT
  (S
    (VP (VB Be)
      (ADJP (JJ thankful)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADVP (DT no) (RBR more))
              (: :)
              (S (: --)
                (S
                  (NP
                    (NP (DT The) (NN widow) (POS 's))
                    (NN curse))
                  (VP (VBZ is)
                    (PP (IN on)
                      (NP (PRP$ your) (NN house)))))
                (, ,)
                (S
                  (NP (DT the) (NN dead))
                  (VP (VBP are)
                    (PP (IN at)
                      (NP (PRP$ your) (NN door)))))))))))
    (. .)))

cop(thankful-2, Be-1)
root(ROOT-0, thankful-2)
nsubj('s-4, it-3)
ccomp(thankful-2, 's-4)
neg(more-6, no-5)
advmod('s-4, more-6)
det(widow-10, The-9)
nmod:poss(curse-12, widow-10)
case(widow-10, 's-11)
nsubj(house-16, curse-12)
cop(house-16, is-13)
case(house-16, on-14)
nmod:poss(house-16, your-15)
parataxis('s-4, house-16)
det(dead-19, the-18)
nsubj(door-23, dead-19)
cop(door-23, are-20)
case(door-23, at-21)
nmod:poss(door-23, your-22)
parataxis(house-16, door-23)

(ROOT
  (S
    (PP (IN On)
      (NP (PRP you)))
    (NP
      (NP (DT the) (NN shame))
      (PP (IN of)
        (NP
          (NP (JJ open) (NN shame))
          (, ,)
          (PP (IN on)
            (NP
              (NP (PRP you))
              (PP (IN from)
                (NP
                  (NP
                    (ADJP (JJ North) (TO to) (JJ South))
                    (DT The) (NN hand))
                  (PP (IN of)
                    (NP (DT every) (JJ honest) (NN man))))))))))
    (VP (VBD flat-heeled)
      (PP (IN across)
        (NP (PRP$ your) (NN mouth))))
    (. .)))

case(you-2, On-1)
nmod:on(flat-heeled-21, you-2)
det(shame-4, the-3)
nsubj(flat-heeled-21, shame-4)
case(shame-7, of-5)
amod(shame-7, open-6)
nmod:of(shame-4, shame-7)
case(you-10, on-9)
nmod:on(shame-7, you-10)
case(hand-16, from-11)
amod(South-14, North-12)
dep(South-14, to-13)
amod(hand-16, South-14)
det(hand-16, The-15)
nmod:from(you-10, hand-16)
case(man-20, of-17)
det(man-20, every-18)
amod(man-20, honest-19)
nmod:of(hand-16, man-20)
root(ROOT-0, flat-heeled-21)
case(mouth-24, across-22)
nmod:poss(mouth-24, your-23)
nmod:across(flat-heeled-21, mouth-24)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Less))
      (ADJP (JJ black)
        (PP (IN than)
          (NP (PRP we)))))
    (VP (VBD were)
      (VP (VBN painted)))
    ('' '') (. ?)))

nsubjpass(painted-7, Less-2)
amod(Less-2, black-3)
case(we-5, than-4)
nmod:than(black-3, we-5)
auxpass(painted-7, were-6)
root(ROOT-0, painted-7)

(ROOT
  (S (: --)
    (S
      (NP
        (NP (NNP Faith))
        (, ,)
        (NP
          (NP (DT no) (NN word))
          (PP (IN of)
            (NP (JJ black)))))
      (VP (VBD was)
        (VP (VBN said))))
    (: ;)
    (S
      (NP (DT The) (JJS lightest) (NN touch))
      (VP (VBD was)
        (NP (JJ human) (NN blood))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (PRN (, ,)
        (S
          (NP (PRP you))
          (VP (VBP know)))
        (, ,))
      (VP (VBZ runs)
        (ADJP (JJ red))))
    (. .)))

nsubjpass(said-9, Faith-2)
neg(word-5, no-4)
appos(Faith-2, word-5)
case(black-7, of-6)
nmod:of(word-5, black-7)
auxpass(said-9, was-8)
root(ROOT-0, said-9)
det(touch-13, The-11)
amod(touch-13, lightest-12)
nsubj(blood-16, touch-13)
cop(blood-16, was-14)
amod(blood-16, human-15)
conj:and(said-9, blood-16)
cc(said-9, and-18)
nsubj(runs-24, that-19)
nsubj(know-22, you-21)
parataxis(runs-24, know-22)
conj:and(said-9, runs-24)
xcomp(runs-24, red-25)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP
        (VP (VBZ 's)
          (VP (VBG sticking)
            (PP (TO to)
              (NP
                (NP (PRP$ your) (NN fist) (NN to-day))
                (PP (IN for)
                  (NP (PDT all) (PRP$ your) (NN sneer)))))))
        (CC and)
        (VP (VBP scoff))))
    (, ,)
    (CC And)
    (S
      (PP (IN by)
        (NP
          (NP (DT the) (NNP Judge) (POS 's))
          (JJ well-weighed) (NN word)))
      (NP (PRP you))
      (VP (MD can) (RB not)
        (VP (VB wipe)
          (NP (PRP it))
          (PRT (RP off)))))
    (. .)))

nsubj(sticking-3, It-1)
nsubj(scoff-13, It-1)
aux(sticking-3, 's-2)
root(ROOT-0, sticking-3)
case(to-day-7, to-4)
nmod:poss(to-day-7, your-5)
compound(to-day-7, fist-6)
nmod:to(sticking-3, to-day-7)
case(sneer-11, for-8)
det:predet(sneer-11, all-9)
nmod:poss(sneer-11, your-10)
nmod:for(to-day-7, sneer-11)
cc(sticking-3, and-12)
conj:and(sticking-3, scoff-13)
cc(sticking-3, And-15)
case(word-21, by-16)
det(Judge-18, the-17)
nmod:poss(word-21, Judge-18)
case(Judge-18, 's-19)
amod(word-21, well-weighed-20)
nmod:by(wipe-25, word-21)
nsubj(wipe-25, you-22)
aux(wipe-25, can-23)
neg(wipe-25, not-24)
conj:and(sticking-3, wipe-25)
dobj(wipe-25, it-26)
compound:prt(wipe-25, off-27)

(ROOT
  (S
    (S
      (S
        (VP (VB Hold)
          (PRT (RP up))
          (NP
            (NP (DT those) (NNS hands))
            (PP (IN of)
              (NP (NN innocence)))))
        (: --))
      (VP (VBP go)
        (PRN (, ,)
          (S
            (VP (VB scare)
              (NP (PRP$ your) (NN sheep))
              (ADVP (RB together))))
          (, ,))
        (NP (DT The) (NN blundering))
        (, ,)
        (S
          (VP (VBG tripping)
            (NP
              (NP (NNS tups))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP bleat)
                    (PP (IN behind)
                      (NP (DT the) (JJ old) (NN bell-wether)))))))))))
    (: ;)
    (S (CC And)
      (SBAR (IN if)
        (S
          (NP (PRP they))
          (VP
            (VP
              (VP (VB snuff)
                (NP (DT the) (NN taint)))
              (CC and)
              (VP (VB break)
                (S
                  (VP (TO to)
                    (VP (VB find)
                      (NP (DT another) (NN pen)))))))
            (, ,)
            (VP (VB Tell)
              (NP (PRP them))
              (NP
                (NP (PRP it) (POS 's))
                (NN tar)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ glistens)
                      (ADVP (RB so)))))))
            (, ,)
            (CC and)
            (VP (VB daub)
              (NP (PRP them))))))
      (VP (VBZ yours)
        (ADVP (RB again))))
    (. !)))

csubj(go-8, Hold-1)
compound:prt(Hold-1, up-2)
det(hands-4, those-3)
dobj(Hold-1, hands-4)
case(innocence-6, of-5)
nmod:of(hands-4, innocence-6)
root(ROOT-0, go-8)
parataxis(go-8, scare-10)
nmod:poss(sheep-12, your-11)
dobj(scare-10, sheep-12)
advmod(scare-10, together-13)
det(blundering-16, The-15)
dobj(go-8, blundering-16)
advcl(go-8, tripping-18)
dobj(tripping-18, tups-19)
nsubj(bleat-21, tups-19)
ref(tups-19, that-20)
acl:relcl(tups-19, bleat-21)
case(bell-wether-25, behind-22)
det(bell-wether-25, the-23)
amod(bell-wether-25, old-24)
nmod:behind(bleat-21, bell-wether-25)
cc(yours-52, And-27)
mark(snuff-30, if-28)
nsubj(snuff-30, they-29)
nsubj(break-34, they-29)
nsubj:xsubj(find-36, they-29)
nsubj(Tell-40, they-29)
nsubj(daub-50, they-29)
csubj(yours-52, snuff-30)
det(taint-32, the-31)
dobj(snuff-30, taint-32)
cc(snuff-30, and-33)
conj:and(snuff-30, break-34)
csubj(yours-52, break-34)
mark(find-36, to-35)
xcomp(break-34, find-36)
det(pen-38, another-37)
dobj(find-36, pen-38)
conj:and(snuff-30, Tell-40)
csubj(yours-52, Tell-40)
iobj(Tell-40, them-41)
nmod:poss(tar-44, it-42)
case(it-42, 's-43)
dobj(Tell-40, tar-44)
nsubj(glistens-46, that-45)
ccomp(tar-44, glistens-46)
advmod(glistens-46, so-47)
cc(snuff-30, and-49)
conj:and(snuff-30, daub-50)
csubj(yours-52, daub-50)
dobj(daub-50, them-51)
parataxis(go-8, yours-52)
advmod(yours-52, again-53)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN charge))
    (VP (VBZ is)
      (ADJP (JJ old)))
    ('' '') (. ?)))

det(charge-3, The-2)
nsubj(old-5, charge-3)
cop(old-5, is-4)
root(ROOT-0, old-5)

(ROOT
  (S
    (SBAR
      (PRN (: --)
        (SBAR (IN As)
          (FRAG
            (ADJP (JJ old)
              (PP (IN as)
                (NP (NNP Cain))))))
        (: --))
      (S
        (NP
          (NP
            (NP (RB as) (JJ fresh))
            (PP (IN as)
              (NP (RB yesterday))))
          (: ;)
          (NP
            (NP (NNP Old))
            (PP (IN as)
              (NP (DT the) (CD Ten) (NNS Commandments))))
          (: --))
        (VP (VBP have)
          (NP (PRP ye)))))
    (VP (VBD talked)
      (NP (DT those) (NNS laws))
      (ADVP (RB away)))
    (. ?)))

mark(old-3, As-2)
dep(have-18, old-3)
case(Cain-5, as-4)
nmod:as(old-3, Cain-5)
advmod(fresh-8, as-7)
nsubj(have-18, fresh-8)
case(yesterday-10, as-9)
nmod:as(fresh-8, yesterday-10)
dep(fresh-8, Old-12)
case(Commandments-16, as-13)
det(Commandments-16, the-14)
nummod(Commandments-16, Ten-15)
nmod:as(Old-12, Commandments-16)
csubj(talked-20, have-18)
dobj(have-18, ye-19)
root(ROOT-0, talked-20)
det(laws-22, those-21)
dobj(talked-20, laws-22)
advmod(talked-20, away-23)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (S
          (NP (NNS words))
          (VP (VBP are)
            (NP (NNS words))))
        (, ,)
        (CC or)
        (S
          (S
            (NP (NN death))
            (VP (VBZ is)
              (NP (NN death))))
          (, ,)
          (CC or)
          (S
            (NP (NN powder))
            (VP (VBZ sends)
              (NP (DT the) (NN ball)))))))
    (, ,)
    (NP (PRP You))
    (VP (VBD spoke)
      (NP
        (NP (DT the) (NNS words))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD sped)
              (NP
                (NP (DT the) (NN shot))
                (: --)
                (NP (DT the) (NN curse)))))))
      (VP (VB be)
        (PP (IN on)
          (NP (PRP you)))
        (ADVP (DT all))))
    (. .)))

mark(words-4, If-1)
nsubj(words-4, words-2)
cop(words-4, are-3)
advcl(spoke-18, words-4)
cc(words-4, or-6)
nsubj(death-9, death-7)
cop(death-9, is-8)
conj:or(words-4, death-9)
advcl(spoke-18, death-9)
cc(death-9, or-11)
nsubj(sends-13, powder-12)
conj:or(words-4, sends-13)
conj:or(death-9, sends-13)
det(ball-15, the-14)
dobj(sends-13, ball-15)
nsubj(spoke-18, You-17)
root(ROOT-0, spoke-18)
det(words-20, the-19)
dobj(spoke-18, words-20)
nsubj(sped-22, words-20)
ref(words-20, that-21)
acl:relcl(words-20, sped-22)
det(shot-24, the-23)
dobj(sped-22, shot-24)
det(curse-27, the-26)
dep(shot-24, curse-27)
cop(you-30, be-28)
case(you-30, on-29)
dep(spoke-18, you-30)
advmod(you-30, all-31)

(ROOT
  (S (`` ``)
    (NP (PRP$ Our) (NNS friends))
    (VP (VBP believe))
    ('' '') (. ?)))

nmod:poss(friends-3, Our-2)
nsubj(believe-4, friends-3)
root(ROOT-0, believe-4)

(ROOT
  (S (: --)
    (S
      (PP (IN Of)
        (NP (NN course)))
      (NP (PRP they))
      (VP (VBP do) (: --)
        (SBAR (IN as)
          (S
            (NP (JJ sheltered) (NNS women))
            (VP (MD may))))))
    (: ;)
    (S (CC But)
      (VP (VB have)
        (S
          (NP (PRP they))
          (VP (VBN seen)
            (NP
              (NP (DT the) (VBG shrieking) (NN soul))
              (VP (VBN ripped)
                (PP (IN from)
                  (NP (DT the) (VBG quivering) (NN clay)))))))))
    (. ?)))

case(course-3, Of-2)
nmod:of(do-5, course-3)
nsubj(do-5, they-4)
root(ROOT-0, do-5)
mark(may-10, as-7)
amod(women-9, sheltered-8)
nsubj(may-10, women-9)
advcl(do-5, may-10)
cc(have-13, But-12)
parataxis(do-5, have-13)
nsubj(seen-15, they-14)
ccomp(have-13, seen-15)
det(soul-18, the-16)
amod(soul-18, shrieking-17)
dobj(seen-15, soul-18)
acl(soul-18, ripped-19)
case(clay-23, from-20)
det(clay-23, the-21)
amod(clay-23, quivering-22)
nmod:from(ripped-19, clay-23)

(ROOT
  (FRAG
    (NP (PRP They))
    (. !)))

root(ROOT-0, They-1)

(ROOT
  (S (: --)
    (SBAR (IN If)
      (S
        (NP (PRP$ their) (JJ own) (NN front) (NN door))
        (VP (VBZ is)
          (VP (VBN shut)))))
    (, ,)
    (NP (PRP they))
    (VP (MD 'll)
      (VP (VB swear)
        (NP
          (NP (DT the) (JJ whole) (NN world))
          (SBAR
            (S
              (VP (VBZ 's)
                (ADJP (JJ warm))))))
        (: ;)
        (SBARQ
          (WHNP (WP What))
          (SQ (VBP do)
            (NP (PRP they))
            (VP (VB know)
              (PP (IN of)
                (NP
                  (NP (NN dread))
                  (PP (IN of)
                    (NP
                      (NP (NN death)
                        (CC or)
                        (NN hanging) (NN fear))
                      (PP (IN of)
                        (NP (NN harm)))))))))
          (. ?))))))

mark(shut-8, If-2)
nmod:poss(door-6, their-3)
amod(door-6, own-4)
compound(door-6, front-5)
nsubjpass(shut-8, door-6)
auxpass(shut-8, is-7)
advcl(swear-12, shut-8)
nsubj(swear-12, they-10)
aux(swear-12, 'll-11)
root(ROOT-0, swear-12)
det(world-15, the-13)
amod(world-15, whole-14)
dobj(swear-12, world-15)
cop(warm-17, 's-16)
acl:relcl(world-15, warm-17)
dobj(know-22, What-19)
aux(know-22, do-20)
nsubj(know-22, they-21)
ccomp(swear-12, know-22)
case(dread-24, of-23)
nmod:of(know-22, dread-24)
case(fear-29, of-25)
compound(fear-29, death-26)
cc(death-26, or-27)
conj:or(death-26, hanging-28)
compound(fear-29, hanging-28)
nmod:of(dread-24, fear-29)
case(harm-31, of-30)
nmod:of(fear-29, harm-31)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ secret) (NN half))
        (NP (DT a) (NN county)))
      (VP
        (VP (VBZ keeps))
        (, ,)
        (NP
          (NP (DT the) (NN whisper))
          (PP (IN in)
            (NP
              (NP (DT the) (NN lane))
              (, ,)
              (NP
                (NP (DT The) (NN shriek))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ tells)
                      (SBAR
                        (S
                          (NP (DT the) (NN shot))
                          (VP (VBD went)
                            (NP (NN home))
                            (PP (IN behind)
                              (NP
                                (NP (DT the) (JJ broken) (NN pane))
                                (, ,)
                                (NP
                                  (NP (DT The) (JJ dry) (NN blood))
                                  (VP (VBG crisping)
                                    (PP (IN in)
                                      (NP
                                        (NP (DT the) (NN sun))
                                        (SBAR
                                          (WHNP (WDT that))
                                          (S
                                            (VP (VBZ scares)
                                              (NP (DT the) (JJ honest) (NNS bees)))))))))))))))))))))))
    (, ,)
    (CC And)
    (SQ
      (VP (VBZ shows))
      (NP (DT the) (`` ``) (NN bhoys) ('' ''))
      (VP (VB have)
        (VP (VBN heard)
          (NP
            (NP (PRP$ your) (NN talk))
            (: --)
            (SBARQ
              (WHNP (WP what))
              (SQ (VBP do)
                (NP (PRP they))
                (VP (VB know)
                  (PP (IN of)
                    (NP (DT these)))))
              (. ?))))))))

det(half-3, The-1)
amod(half-3, secret-2)
nsubj(keeps-6, half-3)
det(county-5, a-4)
dep(half-3, county-5)
root(ROOT-0, keeps-6)
det(whisper-9, the-8)
dobj(keeps-6, whisper-9)
case(lane-12, in-10)
det(lane-12, the-11)
nmod:in(whisper-9, lane-12)
det(shriek-15, The-14)
appos(lane-12, shriek-15)
nsubj(tells-17, shriek-15)
ref(shriek-15, that-16)
acl:relcl(shriek-15, tells-17)
det(shot-19, the-18)
nsubj(went-20, shot-19)
ccomp(tells-17, went-20)
dobj(went-20, home-21)
case(pane-25, behind-22)
det(pane-25, the-23)
amod(pane-25, broken-24)
nmod:behind(went-20, pane-25)
det(blood-29, The-27)
amod(blood-29, dry-28)
appos(pane-25, blood-29)
acl(blood-29, crisping-30)
case(sun-33, in-31)
det(sun-33, the-32)
nmod:in(crisping-30, sun-33)
nsubj(scares-35, sun-33)
ref(sun-33, that-34)
acl:relcl(sun-33, scares-35)
det(bees-38, the-36)
amod(bees-38, honest-37)
dobj(scares-35, bees-38)
cc(keeps-6, And-40)
conj:and(keeps-6, shows-41)
det(bhoys-44, the-42)
nsubj(shows-41, bhoys-44)
aux(heard-47, have-46)
dep(shows-41, heard-47)
nmod:poss(talk-49, your-48)
dobj(heard-47, talk-49)
dobj(know-54, what-51)
aux(know-54, do-52)
nsubj(know-54, they-53)
dep(talk-49, know-54)
case(these-56, of-55)
nmod:of(know-54, these-56)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (PRN (: --)
      (S
        (NP (PRP you))
        (VP (VBP know)))
      (: --))
    (VP (VBP ay) (, ,)
      (NP
        (NP
          (NP
            (QP (CD ten) (NNS times) (RBR more)))
          (: ;)
          (NP
            (NP (DT the) (NNS secrets))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ dead) (, ,) (JJ Black) (NN terror))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN country-side))
                    (PP (IN by)
                      (NP (NN word)
                        (CC and)
                        (NN whisper) (NNS bred)))))))))
        (, ,)
        (NP
          (NP
            (NP (DT The) (JJ mangled) (NN stallion) (POS 's))
            (NN scream))
          (PP (IN at)
            (NP (NN night))))
        (, ,)
        (NP
          (NP (DT the) (JJ tail-cropped) (NN heifer) (POS 's))
          (NN low))))
    (. .)))

cc(ay-7, But-1)
nsubj(ay-7, you-2)
nsubj(know-5, you-4)
parataxis(ay-7, know-5)
root(ROOT-0, ay-7)
compound(times-10, ten-9)
dobj(ay-7, times-10)
advmod(times-10, more-11)
det(secrets-14, the-13)
dep(times-10, secrets-14)
case(terror-20, of-15)
det(terror-20, the-16)
amod(terror-20, dead-17)
amod(terror-20, Black-19)
nmod:of(secrets-14, terror-20)
case(country-side-23, on-21)
det(country-side-23, the-22)
nmod:on(terror-20, country-side-23)
case(bred-28, by-24)
compound(bred-28, word-25)
cc(word-25, and-26)
conj:and(word-25, whisper-27)
compound(bred-28, whisper-27)
nmod:by(country-side-23, bred-28)
det(stallion-32, The-30)
amod(stallion-32, mangled-31)
nmod:poss(scream-34, stallion-32)
case(stallion-32, 's-33)
appos(times-10, scream-34)
case(night-36, at-35)
nmod:at(scream-34, night-36)
det(heifer-40, the-38)
amod(heifer-40, tail-cropped-39)
nmod:poss(low-42, heifer-40)
case(heifer-40, 's-41)
appos(times-10, low-42)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBD set)
        (NP
          (NP (DT the) (NN whisper))
          (VP (VBG going)
            (ADVP (RB first))))))
    (. ?)))

nsubj(set-2, Who-1)
root(ROOT-0, set-2)
det(whisper-4, the-3)
dobj(set-2, whisper-4)
acl(whisper-4, going-5)
advmod(going-5, first-6)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP know)))
    (, ,)
    (CC and)
    (S
      (ADVP (RB well))
      (NP (PRP you))
      (VP (VBP know)))
    (. !)))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
cc(know-2, and-4)
advmod(know-7, well-5)
nsubj(know-7, you-6)
conj:and(know-2, know-7)

(ROOT
  (FRAG
    (NP (PRP$ My) (NN soul))
    (. !)))

nmod:poss(soul-2, My-1)
root(ROOT-0, soul-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (ADVP (RBR sooner))
      (VP (VB lie)
        (PP (IN in)
          (NP (NN jail)))
        (PP (IN for)
          (NP
            (NP (NN murder))
            (ADJP (JJ plain)
              (CC and)
              (JJ straight))))
        (, ,)
        (NP
          (NP (JJ Pure) (NN crime))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD 'd)
                (VP (VBN done)
                  (PP (IN with)
                    (NP (PRP$ my) (JJ own) (NN hand))))))))
        (PP (IN for)
          (NP
            (NP (NN money) (, ,) (NN lust) (, ,)
              (CC or)
              (NN hate) (, ,))
            (PP (IN Than)
              (S
                (S
                  (VP (VB take)
                    (NP
                      (NP (DT a) (NN seat))
                      (PP (IN in)
                        (NP (NNP Parliament))))
                    (PP (IN by)
                      (NP
                        (NP (NNS fellow-felons))
                        (VP (VBN cheered))))))
                (, ,)
                (SBAR (IN While)
                  (S
                    (NP
                      (NP (CD one))
                      (PP (IN of)
                        (NP
                          (NP (DT those))
                          (`` ``)
                          (ADJP (RB not) (JJ provens))
                          ('' ''))))
                    (VP (VBD proved)
                      (SBAR
                        (S
                          (NP (PRP me))
                          (VP (VBD cleared)
                            (SBAR (IN as)
                              (S
                                (NP (PRP you))
                                (VP (VBP are)
                                  (VP (VBN cleared)))))))))))))))))
    (. .)))

nsubj(lie-4, I-1)
aux(lie-4, 'd-2)
advmod(lie-4, sooner-3)
root(ROOT-0, lie-4)
case(jail-6, in-5)
nmod:in(lie-4, jail-6)
case(murder-8, for-7)
nmod:for(lie-4, murder-8)
amod(murder-8, plain-9)
cc(plain-9, and-10)
amod(murder-8, straight-11)
conj:and(plain-9, straight-11)
amod(crime-14, Pure-13)
dobj(lie-4, crime-14)
nsubj(done-17, I-15)
aux(done-17, 'd-16)
acl:relcl(crime-14, done-17)
case(hand-21, with-18)
nmod:poss(hand-21, my-19)
amod(hand-21, own-20)
nmod:with(done-17, hand-21)
case(lust-25, for-22)
compound(lust-25, money-23)
nmod:for(lie-4, lust-25)
cc(lust-25, or-27)
nmod:for(lie-4, hate-28)
conj:or(lust-25, hate-28)
mark(take-31, Than-30)
acl(lust-25, take-31)
det(seat-33, a-32)
dobj(take-31, seat-33)
case(Parliament-35, in-34)
nmod:in(seat-33, Parliament-35)
case(fellow-felons-37, by-36)
nmod:by(take-31, fellow-felons-37)
acl(fellow-felons-37, cheered-38)
mark(proved-48, While-40)
nsubj(proved-48, one-41)
case(those-43, of-42)
nmod:of(one-41, those-43)
neg(provens-46, not-45)
amod(those-43, provens-46)
dep(take-31, proved-48)
nsubj(cleared-50, me-49)
ccomp(proved-48, cleared-50)
mark(cleared-54, as-51)
nsubjpass(cleared-54, you-52)
auxpass(cleared-54, are-53)
advcl(cleared-50, cleared-54)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Cleared))
        (PRN (: --)
          (NP
            (NP (PRP you))
            (SBAR (IN that)
              (S (`` ``)
                (S
                  (VP (VBN lost)))
                ('' '')
                (NP (DT the) (NNP League))
                (VP (VBZ accounts)))))
          (: --)))
      (VP
        (VP (VB go))
        (, ,)
        (VP (VB guard)
          (NP (PRP$ our) (NN honour))
          (ADVP (RB still)))
        (, ,)
        (VP
          (VP (VB Go))
          (, ,)
          (VP (VB help)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP
                    (NP (PRP$ our) (NN country) (POS 's))
                    (NNS laws)
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD broke)
                          (NP
                            (NP (NNP God) (POS 's))
                            (NN law))
                          (PP (IN at)
                            (NP (NN will)))))))))))
          (: --)
          (NP
            (NP (CD One) (NN hand))
            (VP (VBN stuck)
              (PRT (RP out))
              (PP (IN behind)
                (NP (DT the) (NN back)))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB signal)
                    (S
                      (VP (`` ``) (VB strike)
                        (ADVP (RB again))
                        ('' '')))))))))))
    (: ;)
    (S
      (NP
        (NP (DT The) (JJ other))
        (PP (IN on)
          (NP (PRP$ your) (NN dress-shirt-front)
            (S
              (VP (TO to)
                (VP (VB show)
                  (NP (PRP$ your) (NN heart))))))))
      (VP (VBZ is)
        (ADJP (JJ clane))))
    (. .)))

nsubj(go-12, Cleared-1)
dep(Cleared-1, you-3)
mark(accounts-10, that-4)
dep(accounts-10, lost-6)
det(League-9, the-8)
nsubj(accounts-10, League-9)
dep(you-3, accounts-10)
root(ROOT-0, go-12)
dep(go-12, guard-14)
nmod:poss(honour-16, our-15)
dobj(guard-14, honour-16)
advmod(guard-14, still-17)
dep(go-12, Go-19)
dep(Go-19, help-21)
mark(make-23, to-22)
xcomp(help-21, make-23)
nmod:poss(country-25, our-24)
nmod:poss(laws-27, country-25)
case(country-25, 's-26)
dobj(make-23, laws-27)
nsubj(broke-29, that-28)
ccomp(laws-27, broke-29)
nmod:poss(law-32, God-30)
case(God-30, 's-31)
dobj(broke-29, law-32)
case(will-34, at-33)
nmod:at(broke-29, will-34)
nummod(hand-37, One-36)
dobj(Go-19, hand-37)
acl(hand-37, stuck-38)
compound:prt(stuck-38, out-39)
case(back-42, behind-40)
det(back-42, the-41)
nmod:behind(stuck-38, back-42)
mark(signal-45, to-44)
xcomp(stuck-38, signal-45)
ccomp(signal-45, strike-47)
advmod(strike-47, again-48)
det(other-52, The-51)
nsubj(clane-61, other-52)
case(dress-shirt-front-55, on-53)
nmod:poss(dress-shirt-front-55, your-54)
nmod:on(other-52, dress-shirt-front-55)
mark(show-57, to-56)
acl(dress-shirt-front-55, show-57)
nmod:poss(heart-59, your-58)
dobj(show-57, heart-59)
cop(clane-61, is-60)
parataxis(go-12, clane-61)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (JJ black))
          (VP (VBZ is)
            (ADJP (JJ black)
              (CC or)
              (JJ white)))))
      (VP (VBZ is)
        (ADJP (JJ white))
        (, ,)
        (PP (IN in)
          (ADJP
            (ADJP (JJ black)
              (CC and)
              (JJ white))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADJP (RP down)))))))))
    (, ,)
    (NP (PRP You))
    (VP (VBP 're)
      (ADVP (RB only))
      (ADJP (JJ traitors)
        (PP (TO to)
          (NP
            (NP (DT the) (NN Queen))
            (CC and)
            (NP (NNS rebels)))))
      (PP (TO to)
        (NP (DT the) (NNP Crown))))
    (. .)))

mark(black-4, If-1)
nsubj(black-4, black-2)
nsubj(white-6, black-2)
cop(black-4, is-3)
csubj(white-8, black-4)
cc(black-4, or-5)
conj:or(black-4, white-6)
csubj(white-8, white-6)
cop(white-8, is-7)
ccomp(traitors-21, white-8)
case(black-11, in-10)
advcl(white-8, black-11)
cc(black-11, and-12)
advcl(white-8, white-13)
conj:and(black-11, white-13)
nsubj(down-16, it-14)
cop(down-16, 's-15)
ccomp(black-11, down-16)
nsubj(traitors-21, You-18)
cop(traitors-21, 're-19)
advmod(traitors-21, only-20)
root(ROOT-0, traitors-21)
case(Queen-24, to-22)
det(Queen-24, the-23)
nmod:to(traitors-21, Queen-24)
cc(Queen-24, and-25)
nmod:to(traitors-21, rebels-26)
conj:and(Queen-24, rebels-26)
case(Crown-29, to-27)
det(Crown-29, the-28)
nmod:to(traitors-21, Crown-29)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN print))
        (VP (VBZ is)
          (NP (NN print)
            (CC or)
            (NNS words)))))
    (VP (VBP are)
      (VP
        (NP
          (NP
            (NP (NNS words))
            (, ,)
            (NP (DT the) (NNP learned) (NNP Court) (NNS perpends))
            (: :))
          (PRN (: --)
            (S
              (NP (PRP We))
              (VP (VBP are) (RB not)
                (VP
                  (VP (VBN ruled)
                    (PP (IN by)
                      (NP (NNS murderers))))
                  (, ,)
                  (CC but)
                  (VP
                    (ADVP (RB only))))))
            (: --)))
        (PP (IN by)
          (NP (PRP$ their) (NNS friends)))))
    (. .)))

mark(print-4, If-1)
nsubj(print-4, print-2)
cop(print-4, is-3)
csubj(words-8, print-4)
cc(print-4, or-5)
conj:or(print-4, words-6)
csubj(words-8, words-6)
aux(words-8, are-7)
root(ROOT-0, words-8)
det(perpends-13, the-10)
compound(perpends-13, learned-11)
compound(perpends-13, Court-12)
appos(words-8, perpends-13)
nsubjpass(ruled-19, We-16)
auxpass(ruled-19, are-17)
neg(ruled-19, not-18)
dep(words-8, ruled-19)
case(murderers-21, by-20)
nmod:by(ruled-19, murderers-21)
cc(ruled-19, but-23)
dep(words-8, only-24)
conj:but(ruled-19, only-24)
case(friends-28, by-26)
nmod:poss(friends-28, their-27)
nmod:by(words-8, friends-28)

(ROOT
  (S
    (NP (DT AN) (NNP IMPERIAL))
    (VP (VBP RESCRIPT)
      (SBAR
        (S
          (S
            (ADVP (RB Now))
            (NP (DT this))
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN tale))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNP Council) (NNP the) (NNP German) (NNP Kaiser))
                    (VP (VBN decreed) (, ,)
                      (S
                        (VP (TO To)
                          (VP (VB ease)
                            (NP
                              (NP (DT the) (JJ strong))
                              (PP (IN of)
                                (NP (PRP$ their) (NN burden)))))))
                      (, ,)
                      (S
                        (VP (TO to)
                          (VP
                            (VP (VB help)
                              (NP (DT the) (JJ weak))
                              (PP (IN in)
                                (NP (PRP$ their) (NN need))))
                            (PRN (, ,)
                              (S
                                (NP (PRP He))
                                (VP (VBD sent)
                                  (NP (DT a) (NN word))
                                  (PP (TO to)
                                    (NP
                                      (NP (DT the) (NNS peoples))
                                      (, ,)
                                      (SBAR
                                        (WHNP (WP who))
                                        (S
                                          (VP (VB struggle))))))))
                              (, ,))
                            (CC and)
                            (VP (VB pant))
                            (, ,)
                            (CC and)
                            (VP (VB sweat))))
                        (, ,)
                        (SBAR (IN That)
                          (S
                            (NP (DT the) (NN straw))
                            (VP (MD might)
                              (VP (VB be)
                                (VP (VBN counted)
                                  (ADVP (RB fairly))))))))))))))
          (CC and)
          (S
            (NP
              (NP (DT the) (NN tally))
              (PP (IN of)
                (NP (NNS bricks))))
            (VP (VB be)
              (VP (VBN set)))))))
    (. .)))

det(IMPERIAL-2, AN-1)
nsubj(RESCRIPT-3, IMPERIAL-2)
root(ROOT-0, RESCRIPT-3)
advmod(tale-8, Now-4)
nsubj(tale-8, this-5)
cop(tale-8, is-6)
det(tale-8, the-7)
dep(RESCRIPT-3, tale-8)
case(Kaiser-14, of-9)
det(Kaiser-14, the-10)
compound(Kaiser-14, Council-11)
compound(Kaiser-14, the-12)
compound(Kaiser-14, German-13)
nmod:of(tale-8, Kaiser-14)
acl(Kaiser-14, decreed-15)
mark(ease-18, To-17)
xcomp(decreed-15, ease-18)
det(strong-20, the-19)
dobj(ease-18, strong-20)
case(burden-23, of-21)
nmod:poss(burden-23, their-22)
nmod:of(strong-20, burden-23)
mark(help-26, to-25)
xcomp(decreed-15, help-26)
det(weak-28, the-27)
dobj(help-26, weak-28)
case(need-31, in-29)
nmod:poss(need-31, their-30)
nmod:in(help-26, need-31)
nsubj(sent-34, He-33)
parataxis(help-26, sent-34)
det(word-36, a-35)
dobj(sent-34, word-36)
case(peoples-39, to-37)
det(peoples-39, the-38)
nmod:to(sent-34, peoples-39)
nsubj(struggle-42, peoples-39)
ref(peoples-39, who-41)
acl:relcl(peoples-39, struggle-42)
cc(help-26, and-44)
xcomp(decreed-15, pant-45)
conj:and(help-26, pant-45)
cc(help-26, and-47)
xcomp(decreed-15, sweat-48)
conj:and(help-26, sweat-48)
mark(counted-55, That-50)
det(straw-52, the-51)
nsubjpass(counted-55, straw-52)
aux(counted-55, might-53)
auxpass(counted-55, be-54)
dep(help-26, counted-55)
advmod(counted-55, fairly-56)
cc(tale-8, and-57)
det(tally-59, the-58)
nsubjpass(set-63, tally-59)
case(bricks-61, of-60)
nmod:of(tally-59, bricks-61)
auxpass(set-63, be-62)
dep(RESCRIPT-3, set-63)
conj:and(tale-8, set-63)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNPS Lords))
        (PP (IN of)
          (NP (PRP$ Their) (NNS Hands))))
      (VP (VBD assembled)
        (SBAR
          (S (: ;)
            (PP (IN from)
              (NP
                (NP (DT the) (NNP East))
                (CC and)
                (NP (DT the) (NN West))))
            (NP (PRP they))
            (VP (VBD drew))))))
    (: --)
    (S
      (NP (NNP Baltimore) (, ,) (NNP Lille) (, ,)
        (CC and)
        (NNP Essen))
      (, ,)
      (NP (NNP Brummagem) (, ,) (NNP Clyde) (, ,)
        (CC and)
        (NNP Crewe)))
    (. .)))

det(Lords-2, The-1)
nsubj(assembled-6, Lords-2)
case(Hands-5, of-3)
nmod:poss(Hands-5, Their-4)
nmod:of(Lords-2, Hands-5)
root(ROOT-0, assembled-6)
case(East-10, from-8)
det(East-10, the-9)
nmod:from(drew-15, East-10)
cc(East-10, and-11)
det(West-13, the-12)
conj:and(East-10, West-13)
nmod:from(drew-15, West-13)
nsubj(drew-15, they-14)
ccomp(assembled-6, drew-15)
dep(Brummagem-24, Baltimore-17)
conj:and(Baltimore-17, Lille-19)
dep(Brummagem-24, Lille-19)
cc(Baltimore-17, and-21)
conj:and(Baltimore-17, Essen-22)
dep(Brummagem-24, Essen-22)
parataxis(assembled-6, Brummagem-24)
parataxis(assembled-6, Clyde-26)
conj:and(Brummagem-24, Clyde-26)
cc(Brummagem-24, and-28)
parataxis(assembled-6, Crewe-29)
conj:and(Brummagem-24, Crewe-29)

(ROOT
  (S (CC And)
    (S
      (S
        (NP (DT some))
        (VP (VBD were)
          (ADJP (JJ black)
            (PP (IN from)
              (NP (DT the) (NN furnace))))))
      (, ,)
      (CC and)
      (S
        (NP (DT some))
        (VP (VBD were)
          (VP (VBN brown)
            (PP (IN from)
              (NP (DT the) (NN soil)))))))
    (, ,)
    (CC And)
    (S
      (NP (DT some))
      (VP (VBD were)
        (ADJP (JJ blue)
          (PP (IN from)
            (NP (DT the) (NN dye-vat))))))
    (: ;)
    (CC but)
    (S
      (NP (DT all))
      (VP (VBD were)
        (VP (VBN wearied)
          (PP (IN of)
            (NP (NNP toil))))))
    (. .)))

cc(black-4, And-1)
nsubj(black-4, some-2)
cop(black-4, were-3)
root(ROOT-0, black-4)
case(furnace-7, from-5)
det(furnace-7, the-6)
nmod:from(black-4, furnace-7)
cc(black-4, and-9)
nsubjpass(brown-12, some-10)
auxpass(brown-12, were-11)
conj:and(black-4, brown-12)
case(soil-15, from-13)
det(soil-15, the-14)
nmod:from(brown-12, soil-15)
cc(black-4, And-17)
nsubj(blue-20, some-18)
cop(blue-20, were-19)
conj:and(black-4, blue-20)
case(dye-vat-23, from-21)
det(dye-vat-23, the-22)
nmod:from(blue-20, dye-vat-23)
cc(black-4, but-25)
nsubjpass(wearied-28, all-26)
auxpass(wearied-28, were-27)
conj:but(black-4, wearied-28)
case(toil-30, of-29)
nmod:of(wearied-28, toil-30)

(ROOT
  (S
    (S (CC And)
      (NP (DT the) (JJ young) (NN King))
      (VP (VBD said)))
    (: :) (: --) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN found)
          (S
            (NP (PRP it)))
          (, ,)
          (S
            (NP
              (NP (DT the) (NN road))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN rest))
                  (SBAR
                    (S
                      (S
                        (NP (PRP ye))
                        (VP (VBP seek)))
                      (: :)
                      (S
                        (NP (DT The) (JJ strong))
                        (VP (MD shall)
                          (VP (VB wait)
                            (PP (IN for)
                              (NP (DT the) (JJ weary))))))
                      (, ,)
                      (S
                        (NP (DT the) (NN hale))
                        (VP (MD shall)
                          (VP (VB halt)
                            (PP (IN for)
                              (NP (DT the) (JJ weak))))))
                      (: ;)
                      (S
                        (PP (IN With)
                          (NP
                            (NP (DT the) (JJ even) (NN tramp))
                            (PP (IN of)
                              (NP
                                (NP (DT an) (NN army))
                                (SBAR
                                  (WHADVP (WRB where))
                                  (S
                                    (NP (DT no) (NN man))
                                    (VP (VBZ breaks)
                                      (PP (IN from)
                                        (NP (DT the) (NN line))))))))))
                        (, ,)
                        (NP (PRP Ye))
                        (VP (MD shall)
                          (VP (VB march)
                            (PP (TO to)
                              (NP (NN peace)
                                (CC and)
                                (NN plenty)))
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NN bond))
                                (PP (IN of)
                                  (NP (NN brotherhood))))))))))
                  (: --)
                  (NP (NN sign)))))))))
    (. !) ('' '')))

cc(said-5, And-1)
det(King-4, the-2)
amod(King-4, young-3)
nsubj(said-5, King-4)
root(ROOT-0, said-5)
nsubj(found-11, I-9)
aux(found-11, have-10)
parataxis(said-5, found-11)
xcomp(found-11, it-12)
det(road-15, the-14)
xcomp(found-11, road-15)
case(rest-18, to-16)
det(rest-18, the-17)
nmod:to(road-15, rest-18)
nsubj(seek-20, ye-19)
acl:relcl(rest-18, seek-20)
det(strong-23, The-22)
nsubj(wait-25, strong-23)
aux(wait-25, shall-24)
parataxis(seek-20, wait-25)
case(weary-28, for-26)
det(weary-28, the-27)
nmod:for(wait-25, weary-28)
det(hale-31, the-30)
nsubj(halt-33, hale-31)
aux(halt-33, shall-32)
dep(seek-20, halt-33)
case(weak-36, for-34)
det(weak-36, the-35)
nmod:for(halt-33, weak-36)
case(tramp-41, With-38)
det(tramp-41, the-39)
amod(tramp-41, even-40)
nmod:with(march-55, tramp-41)
case(army-44, of-42)
det(army-44, an-43)
nmod:of(tramp-41, army-44)
advmod(breaks-48, where-45)
neg(man-47, no-46)
nsubj(breaks-48, man-47)
acl:relcl(army-44, breaks-48)
case(line-51, from-49)
det(line-51, the-50)
nmod:from(breaks-48, line-51)
nsubj(march-55, Ye-53)
aux(march-55, shall-54)
parataxis(seek-20, march-55)
case(peace-57, to-56)
nmod:to(march-55, peace-57)
cc(peace-57, and-58)
nmod:to(march-55, plenty-59)
conj:and(peace-57, plenty-59)
case(bond-62, in-60)
det(bond-62, the-61)
nmod:in(march-55, bond-62)
case(brotherhood-64, of-63)
nmod:of(bond-62, brotherhood-64)
dep(rest-18, sign-66)

(ROOT
  (S
    (S
      (NP (DT The) (NN paper))
      (VP (VBD lay)
        (SBAR
          (S
            (S
              (PP (IN on)
                (NP (DT the) (NN table)))
              (, ,)
              (NP (DT the) (JJ strong) (NNS heads))
              (VP (VBD bowed)
                (ADVP (RB thereby))))
            (, ,)
            (CC And)
            (S
              (NP (DT a) (NN wail))
              (VP (VBD went)
                (PRT (RP up))
                (PP (IN from)
                  (NP (DT the) (NNS peoples)))))))))
    (: :)
    (S
      (NP
        (PRN (: --)
          (NP
            (NP (`` ``) (NNP Ay))
            (, ,)
            (NP (NN sign)))
          (: --)))
      (VP (VBP give)
        (NP (NN rest))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP we))
            (VP (VBP die))))))
    (. !) ('' '')))

det(paper-2, The-1)
nsubj(lay-3, paper-2)
root(ROOT-0, lay-3)
case(table-6, on-4)
det(table-6, the-5)
nmod:on(bowed-11, table-6)
det(heads-10, the-8)
amod(heads-10, strong-9)
nsubj(bowed-11, heads-10)
dep(lay-3, bowed-11)
advmod(bowed-11, thereby-12)
cc(bowed-11, And-14)
det(wail-16, a-15)
nsubj(went-17, wail-16)
dep(lay-3, went-17)
conj:and(bowed-11, went-17)
compound:prt(went-17, up-18)
case(peoples-21, from-19)
det(peoples-21, the-20)
nmod:from(went-17, peoples-21)
nsubj(give-29, Ay-25)
appos(Ay-25, sign-27)
parataxis(lay-3, give-29)
dobj(give-29, rest-30)
mark(die-34, for-32)
nsubj(die-34, we-33)
advcl(give-29, die-34)

(ROOT
  (S
    (S
      (NP (DT A) (NN hand))
      (VP (VBD was)
        (VP (VBN stretched)
          (PP (TO to)
            (NP (DT the) (NN goose-quill))))))
    (, ,)
    (NP (DT a) (NN fist))
    (VP (VBD was)
      (VP (VBN cramped)
        (S
          (VP (TO to)
            (VP (VB scrawl))))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP
              (PRN (: --)
                (NP
                  (NP (DT the) (NN laugh))
                  (PP (IN of)
                    (NP (DT a) (JJ blue-eyed) (NN maiden))))))
            (VP (VBD ran)
              (ADJP (JJ clear))
              (PP (IN through)
                (NP (DT the) (NN council-hall))))))))
    (. .)))

det(hand-2, A-1)
nsubjpass(stretched-4, hand-2)
auxpass(stretched-4, was-3)
ccomp(cramped-12, stretched-4)
case(goose-quill-7, to-5)
det(goose-quill-7, the-6)
nmod:to(stretched-4, goose-quill-7)
det(fist-10, a-9)
nsubjpass(cramped-12, fist-10)
nsubj:xsubj(scrawl-14, fist-10)
auxpass(cramped-12, was-11)
root(ROOT-0, cramped-12)
mark(scrawl-14, to-13)
xcomp(cramped-12, scrawl-14)
advmod(ran-24, When-16)
det(laugh-19, the-18)
nsubj(ran-24, laugh-19)
case(maiden-23, of-20)
det(maiden-23, a-21)
amod(maiden-23, blue-eyed-22)
nmod:of(laugh-19, maiden-23)
advcl(cramped-12, ran-24)
xcomp(ran-24, clear-25)
case(council-hall-28, through-26)
det(council-hall-28, the-27)
nmod:through(ran-24, council-hall-28)

(ROOT
  (S (CC And)
    (NP (DT each) (NN one))
    (VP (VBD heard)
      (NP (PRP$ Her) (NN laughing))
      (SBAR (IN as)
        (S
          (NP (DT each) (NN one))
          (VP (VBD saw)
            (NP (PRP$ Her) (NN plain))
            (: --)
            (NP
              (NP (NNP Saidie))
              (, ,)
              (NP (NNP Mimi))
              (, ,)
              (CC or)
              (NP (NNP Olga) (, ,) (NNP Gretchen) (, ,)
                (CC or)
                (NNP Mary) (NNP Jane)))))))
    (. .)))

cc(heard-4, And-1)
det(one-3, each-2)
nsubj(heard-4, one-3)
root(ROOT-0, heard-4)
nmod:poss(laughing-6, Her-5)
dobj(heard-4, laughing-6)
mark(saw-10, as-7)
det(one-9, each-8)
nsubj(saw-10, one-9)
advcl(heard-4, saw-10)
nmod:poss(plain-12, Her-11)
dobj(saw-10, plain-12)
parataxis(saw-10, Saidie-14)
parataxis(saw-10, Mimi-16)
conj:or(Saidie-14, Mimi-16)
cc(Saidie-14, or-18)
compound(Gretchen-21, Olga-19)
parataxis(saw-10, Gretchen-21)
conj:or(Saidie-14, Gretchen-21)
cc(Gretchen-21, or-23)
compound(Jane-25, Mary-24)
conj:or(Saidie-14, Jane-25)
conj:or(Gretchen-21, Jane-25)

(ROOT
  (S
    (S
      (S (CC And)
        (NP
          (NP (DT the) (NN Spirit))
          (PP (IN of)
            (NP
              (NP (NN Man))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (PP (IN in)
                      (NP (PRP Him)))
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN light))
                        (PP (IN of)
                          (NP (DT the) (NN vision)))))))))))
        (VP (VBD woke)))
      (: ;)
      (CC And)
      (S
        (NP (DT the) (NNS men))
        (VP (VBD drew)
          (ADVP (RB back))
          (PP (IN from)
            (NP (DT the) (NN paper)))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (DT a) (NNP Yankee) (NN delegate))
              (VP (VBD spoke)))))))
    (: :) (: --) (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN girl))
          (PP (IN in)
            (NP
              (NP (NNP Jersey) (NNP City))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ works)
                    (PP (IN on)
                      (NP (DT the) (NN telephone)))))))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP
                (VP (VB hitch)
                  (NP (PRP$ our) (NNS horses)))
                (CC and)
                (VP (VB dig)
                  (PP (IN for)
                    (NP
                      (NP (DT a) (NN house))
                      (PP (IN of)
                        (NP (PRP$ our) (JJ own))))))
                (, ,)
                (PP (IN With)
                  (NP (NN gas)
                    (CC and)
                    (NN water) (NNS connections)))
                (, ,)
                (CC and)
                (VP (VB steam-heat)
                  (PRT (RP through))
                  (PP (TO to)
                    (NP (DT the) (NN top))))))))))
    (: ;)
    (CC And)
    (, ,)
    (S
      (NP (NNP W.) (NNP Hohenzollern)))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP guess)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD shall)
              (VP (VB work)
                (SBAR (IN till)
                  (S
                    (NP (PRP I))
                    (VP (VBP drop))))))))))
    (. .) ('' '')))

cc(woke-16, And-1)
det(Spirit-3, the-2)
nsubj(woke-16, Spirit-3)
case(Man-5, of-4)
nmod:of(Spirit-3, Man-5)
nsubj(Him-9, Man-5)
ref(Man-5, that-6)
cop(Him-9, is-7)
case(Him-9, in-8)
acl:relcl(Man-5, Him-9)
case(light-12, to-10)
det(light-12, the-11)
nmod:to(Him-9, light-12)
case(vision-15, of-13)
det(vision-15, the-14)
nmod:of(light-12, vision-15)
root(ROOT-0, woke-16)
cc(woke-16, And-18)
det(men-20, the-19)
nsubj(drew-21, men-20)
conj:and(woke-16, drew-21)
advmod(drew-21, back-22)
case(paper-25, from-23)
det(paper-25, the-24)
nmod:from(drew-21, paper-25)
mark(spoke-31, as-27)
det(delegate-30, a-28)
compound(delegate-30, Yankee-29)
nsubj(spoke-31, delegate-30)
advcl(drew-21, spoke-31)
expl('s-36, There-35)
conj:and(woke-16, 's-36)
det(girl-38, a-37)
nsubj('s-36, girl-38)
case(City-41, in-39)
compound(City-41, Jersey-40)
nmod:in(girl-38, City-41)
nsubj(works-43, City-41)
ref(City-41, who-42)
acl:relcl(City-41, works-43)
case(telephone-46, on-44)
det(telephone-46, the-45)
nmod:on(works-43, telephone-46)
nsubj(going-50, We-48)
nsubj:xsubj(hitch-52, We-48)
nsubj:xsubj(dig-56, We-48)
nsubj:xsubj(steam-heat-71, We-48)
aux(going-50, 're-49)
conj:and(woke-16, going-50)
mark(hitch-52, to-51)
xcomp(going-50, hitch-52)
nmod:poss(horses-54, our-53)
dobj(hitch-52, horses-54)
cc(hitch-52, and-55)
xcomp(going-50, dig-56)
conj:and(hitch-52, dig-56)
case(house-59, for-57)
det(house-59, a-58)
nmod:for(dig-56, house-59)
case(own-62, of-60)
nmod:poss(own-62, our-61)
nmod:of(house-59, own-62)
case(connections-68, With-64)
compound(connections-68, gas-65)
cc(gas-65, and-66)
conj:and(gas-65, water-67)
compound(connections-68, water-67)
nmod:with(hitch-52, connections-68)
cc(hitch-52, and-70)
xcomp(going-50, steam-heat-71)
conj:and(hitch-52, steam-heat-71)
compound:prt(steam-heat-71, through-72)
case(top-75, to-73)
det(top-75, the-74)
nmod:to(steam-heat-71, top-75)
cc(woke-16, And-77)
compound(Hohenzollern-80, W.-79)
conj:And(woke-16, Hohenzollern-80)
nsubj(guess-83, I-82)
conj:And(woke-16, guess-83)
nsubj(work-86, I-84)
aux(work-86, shall-85)
ccomp(guess-83, work-86)
mark(drop-89, till-87)
nsubj(drop-89, I-88)
advcl(work-86, drop-89)

(ROOT
  (S (CC And)
    (NP (DT an) (JJ English) (NN delegate))
    (VP (VBP thundered) (: :) (: --)
      (NP (`` ``)
        (NP (DT The) (JJ weak) (DT an))
        ('' ')
        (SBAR
          (S
            (NP (DT the) (NN lame))
            (VP (VB be)
              (VP (VBN blowed)))))))
    (. !)))

cc(thundered-5, And-1)
det(delegate-4, an-2)
amod(delegate-4, English-3)
nsubj(thundered-5, delegate-4)
root(ROOT-0, thundered-5)
det(weak-10, The-9)
dobj(thundered-5, weak-10)
dep(weak-10, an-11)
det(lame-14, the-13)
nsubjpass(blowed-16, lame-14)
auxpass(blowed-16, be-15)
acl:relcl(weak-10, blowed-16)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (NP (DT a) (NN berth))
        (PP (IN in)
          (NP (DT the) (NNP Sou) (POS ')))))
    (: -)
    (S
      (NP (NNP West))
      (VP
        (VP (VBZ workshops))
        (, ,)
        (NP
          (NP (DT a) (NN home))
          (PP (IN in)
            (NP (DT the) (NNP Wandsworth) (NNP Road))))))
    (: ;)
    (CC And)
    (S
      (PP (IN till)
        (NP (DT the) (`` `)
          (S
            (NP (NN sociation))
            (VP (VBZ has)
              (VP (VBN footed)
                (NP (PRP$ my) (NN buryin)))))
          ('' ') (NN bill)))
      (, ,)
      (NP (PRP I))
      (VP (VBP work)
        (PP (IN for)
          (NP
            (NP (DT the) (NNS kids))
            (, an) ('' ')
            (NP (DT the) (NNS missus))))))
    (. .)))

nsubj('ve-2, I-1)
root(ROOT-0, 've-2)
det(berth-4, a-3)
dobj('ve-2, berth-4)
case(Sou-7, in-5)
det(Sou-7, the-6)
nmod:'('ve-2, Sou-7)
case(Sou-7, '-8)
nsubj(workshops-11, West-10)
conj:and('ve-2, workshops-11)
det(home-14, a-13)
dobj(workshops-11, home-14)
case(Road-18, in-15)
det(Road-18, the-16)
compound(Road-18, Wandsworth-17)
nmod:in(home-14, Road-18)
cc('ve-2, And-20)
case(bill-30, till-21)
det(bill-30, the-22)
nsubj(footed-26, sociation-24)
aux(footed-26, has-25)
dep(bill-30, footed-26)
nmod:poss(buryin-28, my-27)
dobj(footed-26, buryin-28)
nmod:till(work-33, bill-30)
nsubj(work-33, I-32)
conj:and('ve-2, work-33)
case(kids-36, for-34)
det(kids-36, the-35)
nmod:for(work-33, kids-36)
det(missus-40, the-39)
dep(kids-36, missus-40)

(ROOT
  (SQ
    (VP (VB Pull)
      (PRT (RP up)))
    (. ?)))

root(ROOT-0, Pull-1)
compound:prt(Pull-1, up-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VB be)
      (VP (VBN damned)
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (MD will))))))
    (. !) ('' '')))

nsubjpass(damned-3, I-1)
auxpass(damned-3, be-2)
root(ROOT-0, damned-3)
mark(will-6, if-4)
nsubj(will-6, I-5)
advcl(damned-3, will-6)

(ROOT
  (S (CC And)
    (PP (IN over)
      (NP (DT the) (JJ German) (NNS benches)))
    (S
      (NP (DT the) (JJ bearded) (NN whisper))
      (VP (VBD ran)))
    (: :) (: --) (`` ``)
    (S
      (NP
        (NP (NNP Lager))
        (, ,)
        (NP
          (NP (NN der) (NNS girls))
          (NP (NN und) (NN der) (NNS dollars)))
        (, ,))
      (ADVP (RB dey))
      (VP
        (VP (VBZ makes))
        (CC or)
        (VP
          (ADVP (RB dey))
          (VBZ breaks)
          (NP (DT a) (NN man)))))
    (. .)))

cc(ran-9, And-1)
case(benches-5, over-2)
det(benches-5, the-3)
amod(benches-5, German-4)
nmod:over(ran-9, benches-5)
det(whisper-8, the-6)
amod(whisper-8, bearded-7)
nsubj(ran-9, whisper-8)
root(ROOT-0, ran-9)
nsubj(makes-22, Lager-13)
nsubj(breaks-25, Lager-13)
compound(girls-16, der-15)
appos(Lager-13, girls-16)
compound(dollars-19, und-17)
compound(dollars-19, der-18)
dep(girls-16, dollars-19)
advmod(makes-22, dey-21)
parataxis(ran-9, makes-22)
cc(makes-22, or-23)
advmod(breaks-25, dey-24)
parataxis(ran-9, breaks-25)
conj:or(makes-22, breaks-25)
det(man-27, a-26)
dobj(breaks-25, man-27)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (NNP Schmitt) (NNP haf))
          (VP (VBD collared)
            (NP (NN der) (NNS dollars)))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ collars)
        (NP (JJ der) (NN girl) (NN deremit))))
    (: ;)
    (S (CC But)
      (SBAR (IN if)
        (S
          (NP
            (NP (JJ Schmitt) (NN bust))
            (PP (IN in)
              (NP (NN der))))
          (VP (VBZ pizness))))
      (, ,)
      (NP (PRP we))
      (VP (VBD collars)
        (NP (NN der) (NN girl))
        (PP (IN from)
          (NP (NNP Schmitt)))))
    (. .) ('' '')))

mark(collared-4, If-1)
compound(haf-3, Schmitt-2)
nsubj(collared-4, haf-3)
advcl(collars-9, collared-4)
compound(dollars-6, der-5)
dobj(collared-4, dollars-6)
nsubj(collars-9, he-8)
root(ROOT-0, collars-9)
amod(deremit-12, der-10)
compound(deremit-12, girl-11)
dobj(collars-9, deremit-12)
cc(collars-23, But-14)
mark(pizness-20, if-15)
amod(bust-17, Schmitt-16)
nsubj(pizness-20, bust-17)
case(der-19, in-18)
nmod:in(bust-17, der-19)
advcl(collars-23, pizness-20)
nsubj(collars-23, we-22)
parataxis(collars-9, collars-23)
compound(girl-25, der-24)
dobj(collars-23, girl-25)
case(Schmitt-27, from-26)
nmod:from(collars-23, Schmitt-27)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD passed)
        (NP (CD one) (NN resolution))))
    (: :) (: --) (`` ``)
    (S
      (NP (PRP$ Your) (NN sub-committee))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (PRP You))
            (VP (MD can)
              (VP (VB lighten)
                (NP
                  (NP (DT the) (NN curse))
                  (PP (IN of)
                    (NP (NNP Adam))))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP you))
                    (VP (VBP 've)
                      (VP (VBD lightened)
                        (NP
                          (NP (DT the) (NN curse))
                          (PP (IN of)
                            (NP (NNP Eve))))))))))))))
    (. .)))

nsubj(passed-2, They-1)
root(ROOT-0, passed-2)
nummod(resolution-4, one-3)
dobj(passed-2, resolution-4)
nmod:poss(sub-committee-9, Your-8)
nsubj(believe-10, sub-committee-9)
parataxis(passed-2, believe-10)
nsubj(lighten-13, You-11)
aux(lighten-13, can-12)
ccomp(believe-10, lighten-13)
det(curse-15, the-14)
dobj(lighten-13, curse-15)
case(Adam-17, of-16)
nmod:of(curse-15, Adam-17)
advmod(lightened-21, when-18)
nsubj(lightened-21, you-19)
aux(lightened-21, 've-20)
advcl(lighten-13, lightened-21)
det(curse-23, the-22)
dobj(lightened-21, curse-23)
case(Eve-25, of-24)
nmod:of(curse-23, Eve-25)

(ROOT
  (S (CC But)
    (PP (IN till)
      (S
        (NP (PRP we))
        (VP (VBP are)
          (VP (VBN built)
            (PP (IN like)
              (NP (NNS angels)))
            (, ,)
            (PP (IN with)
              (NP
                (S
                  (VP (VB hammer)
                    (CC and)
                    (VB chisel)))
                (CC and)
                (NP (NN pen))))))))
    (, ,)
    (NP (PRP We))
    (VP (MD will)
      (VP (VB work)
        (PP (IN for)
          (NP
            (NP (NN ourself))
            (CC and)
            (NP (DT a) (NN woman))))
        (, ,)
        (PP (IN for)
          (NP (RB ever)
            (CC and)
            (RB ever)))
        (, ,)
        (ADJP (JJ amen))))
    (. .) ('' '')))

cc(work-18, But-1)
mark(built-5, till-2)
nsubjpass(built-5, we-3)
auxpass(built-5, are-4)
advcl(work-18, built-5)
case(angels-7, like-6)
nmod:like(built-5, angels-7)
case(hammer-10, with-9)
nmod:with(built-5, hammer-10)
cc(hammer-10, and-11)
nmod:with(built-5, chisel-12)
conj:and(hammer-10, chisel-12)
cc(hammer-10, and-13)
nmod:with(built-5, pen-14)
conj:and(hammer-10, pen-14)
nsubj(work-18, We-16)
aux(work-18, will-17)
root(ROOT-0, work-18)
case(ourself-20, for-19)
nmod:for(work-18, ourself-20)
cc(ourself-20, and-21)
det(woman-23, a-22)
nmod:for(work-18, woman-23)
conj:and(ourself-20, woman-23)
case(ever-26, for-25)
nmod:for(work-18, ever-26)
cc(ever-26, and-27)
advmod(ever-26, ever-28)
xcomp(work-18, amen-30)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN tale))
        (PP (IN of)
          (NP (DT the) (NNP Council))))
      (SBAR
        (SBAR
          (S
            (NP (DT the) (NNP German) (NNP Kaiser))
            (VP
              (VP (VBD held))
              (: --)
              (NP
                (NP (DT The) (NN day))
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (VBD razored)
                      (NP (DT the) (NN Grindstone)))))))))
        (, ,)
        (SBAR
          (NP (DT the) (NN day))
          (IN that)
          (S
            (NP (DT the) (NN Cat))
            (VP (VBD was)
              (VP
                (VP
                  (VP (VBN belled))
                  (, ,)
                  (NP
                    (NP (DT The) (NN day))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NNPS Figs))
                        (PP (IN from)
                          (NP (NNP Thistles)))))))
                (, ,)
                (NP
                  (NP (DT the) (NN day))
                  (PP (IN of)
                    (NP (DT the) (NNP Twisted) (NNPS Sands)))))))))
      (, ,)
      (NP
        (NP (DT The) (NN day))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN laugh))
              (PP (IN of)
                (NP (DT a) (NN maiden))))
            (VP (VBD made)
              (NP
                (NP (NN light))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNPS Lords))
                    (PP (IN of)
                      (NP (PRP$ Their) (NNS Hands)))))))))))
    (. .)))

advmod(tale-5, Now-1)
nsubj(tale-5, this-2)
cop(tale-5, is-3)
det(tale-5, the-4)
root(ROOT-0, tale-5)
case(Council-8, of-6)
det(Council-8, the-7)
nmod:of(tale-5, Council-8)
det(Kaiser-11, the-9)
compound(Kaiser-11, German-10)
nsubj(held-12, Kaiser-11)
dep(tale-5, held-12)
det(day-15, The-14)
dobj(held-12, day-15)
mark(razored-18, that-16)
nsubj(razored-18, they-17)
dep(day-15, razored-18)
det(Grindstone-20, the-19)
dobj(razored-18, Grindstone-20)
det(day-23, the-22)
dep(belled-28, day-23)
mark(belled-28, that-24)
det(Cat-26, the-25)
nsubj(belled-28, Cat-26)
aux(belled-28, was-27)
dep(held-12, belled-28)
det(day-31, The-30)
dobj(belled-28, day-31)
case(Figs-34, of-32)
det(Figs-34, the-33)
nmod:of(day-31, Figs-34)
case(Thistles-36, from-35)
nmod:from(Figs-34, Thistles-36)
det(day-39, the-38)
dobj(belled-28, day-39)
case(Sands-43, of-40)
det(Sands-43, the-41)
compound(Sands-43, Twisted-42)
nmod:of(day-39, Sands-43)
det(day-46, The-45)
dep(tale-5, day-46)
mark(made-53, that-47)
det(laugh-49, the-48)
nsubj(made-53, laugh-49)
case(maiden-52, of-50)
det(maiden-52, a-51)
nmod:of(laugh-49, maiden-52)
dep(day-46, made-53)
dobj(made-53, light-54)
case(Lords-57, of-55)
det(Lords-57, the-56)
nmod:of(light-54, Lords-57)
case(Hands-60, of-58)
nmod:poss(Hands-60, Their-59)
nmod:of(Lords-57, Hands-60)

(ROOT
  (S
    (S
      (NP (NNP TOMLINSON) (NNP Now) (NNP Tomlinson))
      (VP (VBD gave)
        (PRT (RP up))
        (NP
          (NP (DT the) (NN ghost))
          (PP (IN in)
            (NP (PRP$ his) (NN house))))
        (PP (IN in)
          (NP (NNP Berkeley) (NNP Square)))))
    (, ,)
    (CC And)
    (S
      (NP (DT a) (NN Spirit))
      (VP
        (VP (VBD came)
          (PP (TO to)
            (NP (PRP$ his) (NN bedside))))
        (CC and)
        (VP (VBD gripped)
          (NP (PRP him))
          (PP (IN by)
            (NP (DT the) (NN hair))))))
    (: --)
    (S
      (NP (DT A) (NN Spirit))
      (VP
        (VP (VBD gripped)
          (NP (PRP him))
          (PP (IN by)
            (NP (DT the) (NN hair))))
        (CC and)
        (VP (VBD carried)
          (NP (PRP him))
          (ADVP (RB far) (RB away))
          (, ,)
          (PP (IN Till)
            (NP
              (NP (PRP he))
              (VP (VBN heard)
                (PP (IN as)
                  (NP
                    (NP (DT the) (NN roar))
                    (PP (IN of)
                      (NP (DT a) (JJ rain-fed)
                        (NAC
                          (S
                            (VP (VBN ford)
                              (NP
                                (NP (DT the) (NN roar))
                                (PP (IN of)
                                  (NP (DT the) (NNP Milky))))))
                          (NN Way))))))))))))
    (: :)
    (S
      (ADVP (RB Till))
      (NP (PRP he))
      (VP (VBD heard)
        (SBAR
          (S
            (NP
              (NP (DT the) (NN roar))
              (PP (IN of)
                (NP (DT the) (NNP Milky) (NNP Way))))
            (VP
              (VP (VB die)
                (PRT (RP down)))
              (CC and)
              (VP (VB drone)
                (CC and)
                (VB cease)))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP they))
      (VP (VBD came)
        (PP (TO to)
          (NP
            (NP (DT the) (NN Gate))
            (PP (IN within)
              (NP (DT the) (NNP Wall)))))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NNP Peter))
            (VP (VBZ holds)
              (NP (DT the) (NNS keys)))))))
    (. .)))

compound(Tomlinson-3, TOMLINSON-1)
compound(Tomlinson-3, Now-2)
nsubj(gave-4, Tomlinson-3)
root(ROOT-0, gave-4)
compound:prt(gave-4, up-5)
det(ghost-7, the-6)
dobj(gave-4, ghost-7)
case(house-10, in-8)
nmod:poss(house-10, his-9)
nmod:in(ghost-7, house-10)
case(Square-13, in-11)
compound(Square-13, Berkeley-12)
nmod:in(gave-4, Square-13)
cc(gave-4, And-15)
det(Spirit-17, a-16)
nsubj(came-18, Spirit-17)
nsubj(gripped-23, Spirit-17)
conj:and(gave-4, came-18)
case(bedside-21, to-19)
nmod:poss(bedside-21, his-20)
nmod:to(came-18, bedside-21)
cc(came-18, and-22)
conj:and(gave-4, gripped-23)
conj:and(came-18, gripped-23)
dobj(gripped-23, him-24)
case(hair-27, by-25)
det(hair-27, the-26)
nmod:by(gripped-23, hair-27)
det(Spirit-30, A-29)
nsubj(gripped-31, Spirit-30)
nsubj(carried-37, Spirit-30)
conj:and(gave-4, gripped-31)
dobj(gripped-31, him-32)
case(hair-35, by-33)
det(hair-35, the-34)
nmod:by(gripped-31, hair-35)
cc(gripped-31, and-36)
conj:and(gave-4, carried-37)
conj:and(gripped-31, carried-37)
dobj(carried-37, him-38)
advmod(away-40, far-39)
advmod(carried-37, away-40)
case(he-43, Till-42)
nmod:till(carried-37, he-43)
acl(he-43, heard-44)
case(roar-47, as-45)
det(roar-47, the-46)
nmod:as(heard-44, roar-47)
case(rain-fed-50, of-48)
det(rain-fed-50, a-49)
nmod:of(roar-47, rain-fed-50)
dep(Way-57, ford-51)
det(roar-53, the-52)
dobj(ford-51, roar-53)
case(Milky-56, of-54)
det(Milky-56, the-55)
nmod:of(roar-53, Milky-56)
dep(rain-fed-50, Way-57)
advmod(heard-61, Till-59)
nsubj(heard-61, he-60)
conj:and(gave-4, heard-61)
det(roar-63, the-62)
nsubj(die-68, roar-63)
nsubj(drone-71, roar-63)
case(Way-67, of-64)
det(Way-67, the-65)
compound(Way-67, Milky-66)
nmod:of(roar-63, Way-67)
ccomp(heard-61, die-68)
compound:prt(die-68, down-69)
cc(die-68, and-70)
ccomp(heard-61, drone-71)
conj:and(die-68, drone-71)
cc(drone-71, and-72)
conj:and(die-68, cease-73)
conj:and(drone-71, cease-73)
cc(gave-4, And-75)
nsubj(came-77, they-76)
conj:and(gave-4, came-77)
case(Gate-80, to-78)
det(Gate-80, the-79)
nmod:to(came-77, Gate-80)
case(Wall-83, within-81)
det(Wall-83, the-82)
nmod:within(Gate-80, Wall-83)
advmod(holds-86, where-84)
nsubj(holds-86, Peter-85)
advcl(came-77, holds-86)
det(keys-88, the-87)
dobj(holds-86, keys-88)

(ROOT
  (S (`` ``)
    (VP
      (VP
        (VP (VB Stand)
          (PRT (RP up)))
        (, ,)
        (VP (VB stand)
          (PRT (RP up))
          (ADVP (RB now)))
        (, ,)
        (VP (VB Tomlinson))
        (, ,)
        (CC and)
        (VP (VB answer)
          (NP
            (ADJP (JJ loud)
              (CC and)
              (JJ high))
            (DT The) (NN good))
          (SBAR
            (SBAR (IN that)
              (S
                (NP (PRP ye))
                (VP (VBD did)
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN sake))
                      (PP (IN of)
                        (NP (NNS men))))))))
            (CC or)
            (SBAR
              (X (RB ever))
              (S
                (NP (PRP ye))
                (VP (VBD came)
                  (S
                    (VP (TO to)
                      (VP (VB die))))))))))
      (: --)
      (NP
        (NP (DT The) (NN good))
        (SBAR (IN that)
          (S
            (NP (PRP ye))
            (VP (VBD did)
              (PP (IN for)
                (NP
                  (NP (DT the) (NN sake))
                  (PP (IN of)
                    (NP (NNS men)))))
              (PP (IN in)
                (NP
                  (NP (JJ little) (NN earth))
                  (ADJP (RB so) (JJ lone)))))))))
    (. !) ('' '')))

root(ROOT-0, Stand-2)
compound:prt(Stand-2, up-3)
conj:and(Stand-2, stand-5)
compound:prt(stand-5, up-6)
advmod(stand-5, now-7)
conj:and(Stand-2, Tomlinson-9)
cc(Stand-2, and-11)
conj:and(Stand-2, answer-12)
amod(good-17, loud-13)
cc(loud-13, and-14)
conj:and(loud-13, high-15)
amod(good-17, high-15)
det(good-17, The-16)
dobj(answer-12, good-17)
mark(did-20, that-18)
nsubj(did-20, ye-19)
ccomp(answer-12, did-20)
case(sake-23, for-21)
det(sake-23, the-22)
nmod:for(did-20, sake-23)
case(men-25, of-24)
nmod:of(sake-23, men-25)
cc(did-20, or-26)
dep(came-29, ever-27)
nsubj(came-29, ye-28)
nsubj:xsubj(die-31, ye-28)
ccomp(answer-12, came-29)
conj:or(did-20, came-29)
mark(die-31, to-30)
xcomp(came-29, die-31)
det(good-34, The-33)
dobj(Stand-2, good-34)
mark(did-37, that-35)
nsubj(did-37, ye-36)
dep(good-34, did-37)
case(sake-40, for-38)
det(sake-40, the-39)
nmod:for(did-37, sake-40)
case(men-42, of-41)
nmod:of(sake-40, men-42)
case(earth-45, in-43)
amod(earth-45, little-44)
nmod:in(did-37, earth-45)
advmod(lone-47, so-46)
amod(earth-45, lone-47)

(ROOT
  (S (CC And)
    (NP
      (NP (DT the) (JJ naked) (NN soul))
      (PP (IN of)
        (NP (NNP Tomlinson))))
    (VP (VBD grew)
      (ADJP (JJ white))
      (PP (IN as)
        (NP (DT a) (JJ rain-washed) (NN bone))))
    (. .)))

cc(grew-7, And-1)
det(soul-4, the-2)
amod(soul-4, naked-3)
nsubj(grew-7, soul-4)
case(Tomlinson-6, of-5)
nmod:of(soul-4, Tomlinson-6)
root(ROOT-0, grew-7)
xcomp(grew-7, white-8)
case(bone-12, as-9)
det(bone-12, a-10)
amod(bone-12, rain-washed-11)
nmod:as(grew-7, bone-12)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB O))
      (NP (PRP I))
      (VP (VBP have)
        (NP
          (NP (DT a) (NN friend))
          (PP (IN on)
            (NP (NN earth))))
        (PRN (, ,) ('' '')
          (S
            (NP (PRP he))
            (VP (VBD said)))
          (, ,))
        (`` ``)
        (SBAR (IN that)
          (S
            (VP (VBD was)
              (NP (PRP$ my) (NN priest)
                (CC and)
                (NN guide)))))))
    (, ,)
    (CC And)
    (S
      (NP (NN well))
      (VP (MD would)
        (NP (PRP he))
        (S
          (VP (VB answer)
            (NP
              (NP (DT all))
              (PP (IN for)
                (NP (PRP me))))
            (SBAR (IN if)
              (S
                (NP (PRP he))
                (VP (VBD were)
                  (PP (IN by)
                    (NP (PRP$ my) (NN side))))))))))
    (. .) ('' '')))

advmod(have-4, O-2)
nsubj(have-4, I-3)
root(ROOT-0, have-4)
det(friend-6, a-5)
dobj(have-4, friend-6)
case(earth-8, on-7)
nmod:on(friend-6, earth-8)
nsubj(said-12, he-11)
parataxis(have-4, said-12)
mark(priest-18, that-15)
cop(priest-18, was-16)
nmod:poss(priest-18, my-17)
ccomp(have-4, priest-18)
cc(priest-18, and-19)
ccomp(have-4, guide-20)
conj:and(priest-18, guide-20)
cc(have-4, And-22)
nsubj(would-24, well-23)
conj:and(have-4, would-24)
dobj(would-24, he-25)
dep(would-24, answer-26)
dobj(answer-26, all-27)
case(me-29, for-28)
nmod:for(all-27, me-29)
mark(side-35, if-30)
nsubj(side-35, he-31)
cop(side-35, were-32)
case(side-35, by-33)
nmod:poss(side-35, my-34)
advcl(answer-26, side-35)

(ROOT
  (S (: --) (`` ``)
    (SBAR (IN For)
      (S
        (S
          (SBAR (IN that)
            (S
              (NP (PRP ye))
              (VP (VBD strove)
                (PP (IN in)
                  (NP (NN neighbour-love))))))
          (S
            (NP (PRP it))
            (VP (MD shall)
              (VP (VB be)
                (VP (VBN written)
                  (S
                    (ADJP (JJ fair)))))))
          (, ,)
          (CC But)
          (S
            (ADVP (RB now))
            (NP (PRP ye))
            (VP (VBP wait)
              (PP
                (PP (IN at)
                  (NP
                    (NP (NNP Heaven) (POS 's))
                    (NN Gate)))
                (CC and)
                (RB not)
                (PP (IN in)
                  (NP (NNP Berkeley) (NNP Square)))))))
        (: :)
        (S
          (SBAR (IN Though)
            (S
              (NP (PRP we))
              (VP (VBD called)
                (NP (PRP$ your) (NN friend))
                (PP (IN from)
                  (NP (PRP$ his) (NN bed)))
                (NP (DT this) (NN night)))))
          (, ,)
          (NP (PRP he))
          (VP (MD could) (RB not)
            (VP (VB speak)
              (PP (IN for)
                (NP (PRP you))))))
        (, ,)
        (PP (IN For)
          (NP (DT the) (NN race)))))
    (VP (VBZ is)
      (VP
        (VP (VBN run)
          (PP (IN by)
            (NP (CD one)
              (CC and)
              (CD one))))
        (CC and)
        (VP
          (ADVP (RB never))
          (PP (IN by)
            (NP (CD two)
              (CC and)
              (CD two))))))
    (. .) ('' '')))

mark(written-12, For-3)
mark(strove-6, that-4)
nsubj(strove-6, ye-5)
ccomp(written-12, strove-6)
case(neighbour-love-8, in-7)
nmod:in(strove-6, neighbour-love-8)
nsubjpass(written-12, it-9)
aux(written-12, shall-10)
auxpass(written-12, be-11)
csubjpass(run-51, written-12)
xcomp(written-12, fair-13)
cc(written-12, But-15)
advmod(wait-18, now-16)
nsubj(wait-18, ye-17)
nsubj(wait-18', ye-17)
conj:but(written-12, wait-18)
conj:but(written-12, wait-18')
conj:and(wait-18, wait-18')
csubjpass(run-51, wait-18)
case(Gate-22, at-19)
nmod:poss(Gate-22, Heaven-20)
case(Heaven-20, 's-21)
nmod:at(wait-18, Gate-22)
cc(wait-18, and-23)
neg(Square-27, not-24)
case(Square-27, in-25)
compound(Square-27, Berkeley-26)
nmod:in(wait-18', Square-27)
mark(called-31, Though-29)
nsubj(called-31, we-30)
advcl(speak-43, called-31)
nmod:poss(friend-33, your-32)
dobj(called-31, friend-33)
case(bed-36, from-34)
nmod:poss(bed-36, his-35)
nmod:from(called-31, bed-36)
det(night-38, this-37)
nmod:tmod(called-31, night-38)
nsubj(speak-43, he-40)
aux(speak-43, could-41)
neg(speak-43, not-42)
parataxis(written-12, speak-43)
case(you-45, for-44)
nmod:for(speak-43, you-45)
case(race-49, For-47)
det(race-49, the-48)
nmod:for(written-12, race-49)
auxpass(run-51, is-50)
root(ROOT-0, run-51)
case(one-53, by-52)
nmod:by(run-51, one-53)
cc(one-53, and-54)
nmod:by(run-51, one-55)
conj:and(one-53, one-55)
cc(run-51, and-56)
conj:and(run-51, never-57)
case(two-59, by-58)
nmod:by(never-57, two-59)
cc(two-59, and-60)
nmod:by(never-57, two-61)
conj:and(two-59, two-61)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Then))
        (NP (NNP Tomlinson))
        (VP (VBD looked)
          (ADVP (RB up)
            (CC and)
            (RB down))))
      (, ,)
      (CC and)
      (S
        (NP (JJ little) (NN gain))
        (VP (VBD was)
          (ADVP (RB there))))
      (, ,)
      (PP (IN For)
        (NP
          (NP (DT the) (JJ naked) (NNS stars))
          (VP (VBN grinned)
            (ADVP (RB overhead))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBD saw)
        (SBAR (IN that)
          (S
            (NP (PRP$ his) (NN soul))
            (VP (VBD was)
              (UCP
                (ADJP (JJ bare))
                (: :)
                (NP
                  (NP (DT The) (NN Wind))
                  (SBAR (IN that)
                    (S
                      (S
                        (S
                          (NP
                            (NP (NNS blows))
                            (PP (IN between)
                              (NP (DT the) (NNS worlds)))))
                        (, ,)
                        (NP (PRP it))
                        (VP (VBD cut)
                          (NP (PRP him))
                          (PP (IN like)
                            (NP (DT a) (NN knife)))))
                      (, ,)
                      (CC And)
                      (S
                        (NP (NNP Tomlinson))
                        (VP
                          (VP (VBD took)
                            (PRT (RP up))
                            (NP (PRP$ his) (NN tale)))
                          (CC and)
                          (VP (VBD spoke)
                            (PP (IN of)
                              (NP (PRP$ his) (JJ good)))
                            (PP (IN in)
                              (NP (NN life)))))))))))))))
    (. .)))

advmod(looked-3, Then-1)
nsubj(looked-3, Tomlinson-2)
root(ROOT-0, looked-3)
advmod(looked-3, up-4)
cc(up-4, and-5)
advmod(looked-3, down-6)
conj:and(up-4, down-6)
cc(looked-3, and-8)
amod(gain-10, little-9)
nsubj(was-11, gain-10)
conj:and(looked-3, was-11)
advmod(was-11, there-12)
case(stars-17, For-14)
det(stars-17, the-15)
amod(stars-17, naked-16)
conj:and(looked-3, stars-17)
acl(stars-17, grinned-18)
advmod(grinned-18, overhead-19)
cc(looked-3, and-21)
nsubj(saw-23, he-22)
conj:and(looked-3, saw-23)
mark(bare-28, that-24)
nmod:poss(soul-26, his-25)
nsubj(bare-28, soul-26)
cop(bare-28, was-27)
ccomp(saw-23, bare-28)
det(Wind-31, The-30)
dep(bare-28, Wind-31)
mark(cut-39, that-32)
ccomp(cut-39, blows-33)
case(worlds-36, between-34)
det(worlds-36, the-35)
nmod:between(blows-33, worlds-36)
nsubj(cut-39, it-38)
dep(Wind-31, cut-39)
dobj(cut-39, him-40)
case(knife-43, like-41)
det(knife-43, a-42)
nmod:like(cut-39, knife-43)
cc(cut-39, And-45)
nsubj(took-47, Tomlinson-46)
nsubj(spoke-52, Tomlinson-46)
dep(Wind-31, took-47)
conj:and(cut-39, took-47)
compound:prt(took-47, up-48)
nmod:poss(tale-50, his-49)
dobj(took-47, tale-50)
cc(took-47, and-51)
conj:and(cut-39, spoke-52)
conj:and(took-47, spoke-52)
case(good-55, of-53)
nmod:poss(good-55, his-54)
nmod:of(spoke-52, good-55)
case(life-57, in-56)
nmod:in(spoke-52, life-57)

(ROOT
  (S (`` ``)
    (S
      (NP (DT This) (NN I))
      (VP (VBP have)
        (VP (VBN read)
          (PP (IN in)
            (NP (DT a) (NN book))))))
    (PRN (, ,) ('' '')
      (S
        (NP (PRP he))
        (VP (VBD said)))
      (, ,) (`` ``))
    (CC and)
    (S
      (S
        (NP (DT that))
        (VP (VBD was)
          (VP (VBN told)
            (PP (TO to)
              (NP (PRP me))))))
      (, ,)
      (CC And)
      (S
        (NP (DT this) (NN I))
        (VP (VBP have)
          (VP (VBN thought)
            (SBAR (IN that)
              (S
                (NP (DT another) (NN man))
                (VP (VBD thought)
                  (PP (IN of)
                    (NP (DT a) (NNP Prince)))
                  (PP (IN in)
                    (NP (NNP Muscovy))))))))))
    (. .) ('' '')))

det(I-3, This-2)
nsubj(read-5, I-3)
aux(read-5, have-4)
root(ROOT-0, read-5)
case(book-8, in-6)
det(book-8, a-7)
nmod:in(read-5, book-8)
nsubj(said-12, he-11)
dep(read-5, said-12)
cc(read-5, and-15)
nsubjpass(told-18, that-16)
auxpass(told-18, was-17)
conj:and(read-5, told-18)
case(me-20, to-19)
nmod:to(told-18, me-20)
cc(told-18, And-22)
det(I-24, this-23)
nsubj(thought-26, I-24)
aux(thought-26, have-25)
conj:and(read-5, thought-26)
conj:and(told-18, thought-26)
mark(thought-30, that-27)
det(man-29, another-28)
nsubj(thought-30, man-29)
ccomp(thought-26, thought-30)
case(Prince-33, of-31)
det(Prince-33, a-32)
nmod:of(thought-30, Prince-33)
case(Muscovy-35, in-34)
nmod:in(thought-30, Muscovy-35)

(ROOT
  (S
    (S
      (NP (DT The) (JJ good) (NNS souls))
      (VP
        (VP (VBD flocked)
          (PP (IN like)
            (NP (VBG homing) (NNS doves))))
        (CC and)
        (VP (VBP bade)
          (S
            (NP (PRP him))
            (ADJP (JJ clear))))
        (NP (DT the) (NN path))))
    (, ,)
    (CC And)
    (S
      (NP (NNP Peter))
      (VP (VBD twirled)
        (NP
          (NP (DT the) (VBG jangling) (NNS keys))
          (PP (IN in)
            (NP (NN weariness)
              (CC and)
              (NN wrath))))))
    (. .)))

det(souls-3, The-1)
amod(souls-3, good-2)
nsubj(flocked-4, souls-3)
nsubj(bade-9, souls-3)
root(ROOT-0, flocked-4)
case(doves-7, like-5)
amod(doves-7, homing-6)
nmod:like(flocked-4, doves-7)
cc(flocked-4, and-8)
conj:and(flocked-4, bade-9)
nsubj(clear-11, him-10)
xcomp(bade-9, clear-11)
det(path-13, the-12)
dobj(flocked-4, path-13)
cc(flocked-4, And-15)
nsubj(twirled-17, Peter-16)
conj:and(flocked-4, twirled-17)
det(keys-20, the-18)
amod(keys-20, jangling-19)
dobj(twirled-17, keys-20)
case(weariness-22, in-21)
nmod:in(keys-20, weariness-22)
cc(weariness-22, and-23)
nmod:in(keys-20, wrath-24)
conj:and(weariness-22, wrath-24)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP Ye))
      (VP (VBP have)
        (VP (VBN read))))
    (, ,)
    (S
      (NP (PRP ye))
      (VP (VBP have)
        (VP (VBN heard))))
    (, ,)
    (S
      (NP (PRP ye))
      (VP (VBP have)
        (VP (VBN thought))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said))))
    (, ,) (`` ``)
    (CC and)
    (S
      (NP (DT the) (NN tale))
      (VP (VBZ is)
        (ADVP (RB yet))
        (S
          (VP (TO to)
            (VP (VB run)
              (PRN (: :)
                (PP (IN By)
                  (NP
                    (NP (DT the) (NN worth))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN body))
                        (SBAR (IN that)
                          (S
                            (SBAR (IN once)
                              (S
                                (NP (PRP ye))
                                (VP (VBD had))))
                            (, ,)
                            (VP (VB give)
                              (NP (NN answer)))))))))
                (: --))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP
                    (NP (NNP ha) (POS '))
                    (NN ye))
                  (VP (VBN done)))))))))
    (. ?) ('' '')))

nsubj(read-4, Ye-2)
aux(read-4, have-3)
root(ROOT-0, read-4)
nsubj(heard-8, ye-6)
aux(heard-8, have-7)
ccomp(read-4, heard-8)
nsubj(thought-12, ye-10)
aux(thought-12, have-11)
ccomp(read-4, thought-12)
nsubj(said-16, he-15)
dep(read-4, said-16)
cc(read-4, and-19)
det(tale-21, the-20)
nsubj(is-22, tale-21)
nsubj:xsubj(run-25, tale-21)
conj:and(read-4, is-22)
advmod(is-22, yet-23)
mark(run-25, to-24)
xcomp(is-22, run-25)
case(worth-29, By-27)
det(worth-29, the-28)
dep(run-25, worth-29)
case(body-32, of-30)
det(body-32, the-31)
nmod:of(worth-29, body-32)
mark(give-38, that-33)
mark(had-36, once-34)
nsubj(had-36, ye-35)
advcl(give-38, had-36)
dep(body-32, give-38)
dobj(give-38, answer-39)
dobj(done-45, what-41)
nmod:poss(ye-44, ha-42)
case(ha-42, '-43)
nsubj(done-45, ye-44)
ccomp(run-25, done-45)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Then))
        (NP (NNP Tomlinson))
        (VP (VBD looked)
          (ADVP (RB back)
            (CC and)
            (RB forth))))
      (, ,)
      (CC and)
      (S
        (S
          (S
            (ADJP (RB little) (JJ good)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD bore))))))
          (, ,)
          (SBAR (IN For)
            (S
              (NP (DT the) (NN Darkness))
              (VP (VBD stayed)
                (PP (IN at)
                  (NP
                    (NP (PRP$ his) (NN shoulder-blade))
                    (CC and)
                    (NP
                      (NP
                        (NP (NNP Heaven) (POS 's))
                        (NN Gate))
                      (ADVP (IN before)))
                    (: :)))
                (: --) (`` ``)
                (S
                  (NP (NNP O))
                  (UCP
                    (NP
                      (NP (DT this))
                      (SBAR
                        (S
                          (NP (PRP I))
                          (VP (VBP have)
                            (VP (VBN felt))))))
                    (, ,)
                    (CC and)
                    (FRAG
                      (NP (DT this))))))))
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBD guessed))))
        (, ,)
        (CC and)
        (S
          (NP (DT this) (NN I))
          (VP (VBP have)
            (VP (VBN heard)
              (SBAR
                (S
                  (NP (NNS men))
                  (VP (VBP say)))))))))
    (, ,)
    (CC And)
    (S
      (NP (DT this) (PRP they))
      (VP (VBD wrote)
        (SBAR (IN that)
          (S
            (NP (DT another) (NN man))
            (VP (VBD wrote)
              (PP (IN of)
                (NP (DT a) (NN carl)))
              (PP (IN in)
                (NP (NNP Norroway))))))))
    (. .) ('' '')))

advmod(looked-3, Then-1)
nsubj(looked-3, Tomlinson-2)
root(ROOT-0, looked-3)
advmod(looked-3, back-4)
cc(back-4, and-5)
advmod(looked-3, forth-6)
conj:and(back-4, forth-6)
cc(looked-3, and-8)
advmod(good-10, little-9)
ccomp(guessed-39, good-10)
nsubj(bore-12, it-11)
ccomp(good-10, bore-12)
mark(stayed-17, For-14)
det(Darkness-16, the-15)
nsubj(stayed-17, Darkness-16)
advcl(guessed-39, stayed-17)
case(shoulder-blade-20, at-18)
nmod:poss(shoulder-blade-20, his-19)
nmod:at(stayed-17, shoulder-blade-20)
cc(shoulder-blade-20, and-21)
nmod:poss(Gate-24, Heaven-22)
case(Heaven-22, 's-23)
nmod:at(stayed-17, Gate-24)
conj:and(shoulder-blade-20, Gate-24)
advmod(Gate-24, before-25)
nsubj(this-30, O-29)
xcomp(stayed-17, this-30)
nsubj(felt-33, I-31)
aux(felt-33, have-32)
acl:relcl(this-30, felt-33)
cc(this-30, and-35)
xcomp(stayed-17, this-36)
conj:and(this-30, this-36)
nsubj(guessed-39, I-37)
aux(guessed-39, have-38)
conj:and(looked-3, guessed-39)
cc(guessed-39, and-41)
det(I-43, this-42)
nsubj(heard-45, I-43)
aux(heard-45, have-44)
conj:and(looked-3, heard-45)
conj:and(guessed-39, heard-45)
nsubj(say-47, men-46)
ccomp(heard-45, say-47)
cc(looked-3, And-49)
det(they-51, this-50)
nsubj(wrote-52, they-51)
conj:and(looked-3, wrote-52)
mark(wrote-56, that-53)
det(man-55, another-54)
nsubj(wrote-56, man-55)
ccomp(wrote-52, wrote-56)
case(carl-59, of-57)
det(carl-59, a-58)
nmod:of(wrote-56, carl-59)
case(Norroway-61, in-60)
nmod:in(wrote-56, Norroway-61)

(ROOT
  (S (: --) (`` ``)
    (S
      (S
        (NP (PRP Ye))
        (VP (VBP have)
          (VP (VBN read))))
      (, ,)
      (NP (PRP ye))
      (VP (VBP have)
        (VP (VBN felt))))
    (, ,)
    (NP (PRP ye))
    (VP (VBP have)
      (VP (VBD guessed) (, ,)
        (NP (JJ good) (NN lack))))
    (. !)))

nsubj(read-5, Ye-3)
aux(read-5, have-4)
ccomp(felt-9, read-5)
nsubj(felt-9, ye-7)
aux(felt-9, have-8)
ccomp(guessed-13, felt-9)
nsubj(guessed-13, ye-11)
aux(guessed-13, have-12)
root(ROOT-0, guessed-13)
amod(lack-16, good-15)
dobj(guessed-13, lack-16)

(ROOT
  (S
    (S
      (NP (PRP Ye))
      (VP (VBP have)
        (VP (VBN hampered)
          (NP
            (NP (NNP Heaven) (POS 's))
            (NN Gate)))))
    (: ;)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (JJ little) (NN room))
          (PP (IN between)
            (NP
              (NP (DT the) (NNS stars))
              (PP (IN in)
                (NP (NNS idleness)
                  (S
                    (VP (TO to)
                      (VP (VB prate)))))))))))
    (. !)))

nsubj(hampered-3, Ye-1)
aux(hampered-3, have-2)
root(ROOT-0, hampered-3)
nmod:poss(Gate-6, Heaven-4)
case(Heaven-4, 's-5)
dobj(hampered-3, Gate-6)
expl('s-9, There-8)
parataxis(hampered-3, 's-9)
amod(room-11, little-10)
nsubj('s-9, room-11)
case(stars-14, between-12)
det(stars-14, the-13)
nmod:between(room-11, stars-14)
case(idleness-16, in-15)
nmod:in(stars-14, idleness-16)
mark(prate-18, to-17)
acl(idleness-16, prate-18)

(ROOT
  (S
    (NP (NNP O) (NN none))
    (VP (MD may)
      (VP (VB reach)
        (SBAR
          (SINV
            (PP (IN by))
            (VP (VBD hired))
            (NP
              (NP (NN speech))
              (PP (IN of)
                (NP (NN neighbour) (, ,) (NN priest) (, ,)
                  (CC and)
                  (NN kin) (NN Through)))
              (VP (VBN borrowed)
                (ADJP (JJ deed)
                  (PP (TO to)
                    (NP
                      (NP (NNP God) (POS 's))
                      (JJ good) (NN meed))))
                (SBAR (IN that)
                  (FRAG
                    (S
                      (VP (VBZ lies)
                        (ADJP (RB so) (JJ fair)
                          (PP (IN within)))))
                    (: ;)
                    (FRAG
                      (S
                        (VP (VBP Get)
                          (S
                            (ADVP (RB hence))
                            (, ,)
                            (VP (VB get)
                              (ADVP (RB hence))
                              (PP (TO to)
                                (NP
                                  (NP (DT the) (NN Lord))
                                  (PP (IN of)
                                    (ADJP (JJ Wrong)))
                                  (, ,)
                                  (SBAR (IN for)
                                    (S
                                      (NP (NN doom))
                                      (VP (VBZ has)
                                        (ADVP (RB yet))
                                        (S
                                          (VP (TO to)
                                            (VP (VB run)))))))))))
                          (, ,)
                          (S
                            (NP (CC And)))))
                      (: ...)
                      (FRAG
                        (NP
                          (NP (DT the) (NN faith))
                          (SBAR (IN that)
                            (S
                              (NP (PRP ye))
                              (VP (VBP share)
                                (PP (IN with)
                                  (NP (NNP Berkeley) (NNP Square) (NNP uphold)))
                                (NP
                                  (NP (PRP you))
                                  (, ,)
                                  (NP (NNP Tomlinson))
                                  (. !) ('' ''))))))
                        (. .))
                      (. .))
                    (. .)))))
            (. .)))))
    (. .)))

compound(none-2, O-1)
nsubj(reach-4, none-2)
aux(reach-4, may-3)
root(ROOT-0, reach-4)
nmod(hired-6, by-5)
dep(reach-4, hired-6)
nsubj(hired-6, speech-7)
case(priest-11, of-8)
compound(priest-11, neighbour-9)
nmod:of(speech-7, priest-11)
cc(priest-11, and-13)
compound(Through-15, kin-14)
nmod:of(speech-7, Through-15)
conj:and(priest-11, Through-15)
acl(speech-7, borrowed-16)
xcomp(borrowed-16, deed-17)
case(meed-22, to-18)
nmod:poss(meed-22, God-19)
case(God-19, 's-20)
amod(meed-22, good-21)
nmod:to(deed-17, meed-22)
mark(faith-50, that-23)
dep(faith-50, lies-24)
advmod(fair-26, so-25)
xcomp(lies-24, fair-26)
nmod(fair-26, within-27)
dep(faith-50, Get-29)
advmod(get-32, hence-30)
ccomp(Get-29, get-32)
advmod(get-32, hence-33)
case(Lord-36, to-34)
det(Lord-36, the-35)
nmod:to(get-32, Lord-36)
case(Wrong-38, of-37)
acl(Lord-36, Wrong-38)
mark(has-42, for-40)
nsubj(has-42, doom-41)
nsubj:xsubj(run-45, doom-41)
acl:relcl(Lord-36, has-42)
advmod(has-42, yet-43)
mark(run-45, to-44)
xcomp(has-42, run-45)
xcomp(Get-29, And-47)
det(faith-50, the-49)
dep(borrowed-16, faith-50)
mark(share-53, that-51)
nsubj(share-53, ye-52)
dep(faith-50, share-53)
case(uphold-57, with-54)
compound(uphold-57, Berkeley-55)
compound(uphold-57, Square-56)
nmod:with(share-53, uphold-57)
dobj(share-53, you-58)
appos(you-58, Tomlinson-60)

(ROOT
  (S
    (S
      (NP (DT The) (NN Spirit))
      (VP (VBD gripped)
        (NP (PRP him))
        (PP (IN by)
          (NP (DT the) (NN hair)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NN sun))
        (PP (IN by)
          (NP
            (NP (NN sun))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBD fell)
                  (PP (IN Till)
                    (NP (PRP they)))))))))
      (VP (VBD came)
        (PP (TO to)
          (NP
            (NP (DT the) (NN belt))
            (PP (IN of)
              (NP
                (NP (NNP Naughty) (NNP Stars))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP rim)
                      (NP
                        (NP (DT the) (NN mouth))
                        (PP (IN of)
                          (NP (NNP Hell)))))))))))))
    (: :)
    (S
      (S
        (S
          (NP (DT The) (JJ first))
          (VP (VBP are)
            (ADJP (JJ red)
              (PP (IN with)
                (NP (NN pride)
                  (CC and)
                  (NN wrath))))))
        (, ,)
        (NP (DT the) (JJ next))
        (VP (VBP are)
          (ADJP (JJ white)
            (PP (IN with)
              (NP (NN pain))))))
      (, ,)
      (CC But)
      (S
        (NP (DT the) (JJ third))
        (VP (VBP are)
          (ADJP (JJ black)
            (PP (IN with)
              (NP
                (NP (JJ clinkered) (NN sin))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD can) (RB not)
                      (VP (VB burn)
                        (ADVP (RB again))))))))))))
    (: :)
    (S
      (NP (PRP They))
      (VP (MD may)
        (VP (VB hold)
          (NP (PRP$ their) (NN path)))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (MD may)
        (VP (VB leave)
          (NP (PRP$ their) (NN path)))))
    (, ,)
    (S
      (SBAR (IN with)
        (S
          (ADVP (RB never))
          (NP
            (NP (DT a) (NN soul))
            (PP (TO to)
              (NP (NN mark))))))
      (, ,)
      (NP (PRP They))
      (VP (MD may)
        (VP (VB burn)
          (CC or)
          (VB freeze))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (MD must) (RB not)
        (VP (VB cease)
          (PP (IN in)
            (NP
              (NP (DT the) (NNP Scorn))
              (PP (IN of)
                (NP (DT the) (NNP Outer) (NNP Dark))))))))
    (. .)))

det(Spirit-2, The-1)
nsubj(gripped-3, Spirit-2)
root(ROOT-0, gripped-3)
dobj(gripped-3, him-4)
case(hair-7, by-5)
det(hair-7, the-6)
nmod:by(gripped-3, hair-7)
cc(gripped-3, and-9)
nsubj(came-17, sun-10)
case(sun-12, by-11)
nmod:by(sun-10, sun-12)
nsubj(fell-14, they-13)
acl:relcl(sun-12, fell-14)
case(they-16, Till-15)
nmod:till(fell-14, they-16)
conj:and(gripped-3, came-17)
case(belt-20, to-18)
det(belt-20, the-19)
nmod:to(came-17, belt-20)
case(Stars-23, of-21)
compound(Stars-23, Naughty-22)
nmod:of(belt-20, Stars-23)
nsubj(rim-25, Stars-23)
ref(Stars-23, that-24)
acl:relcl(Stars-23, rim-25)
det(mouth-27, the-26)
dobj(rim-25, mouth-27)
case(Hell-29, of-28)
nmod:of(mouth-27, Hell-29)
det(first-32, The-31)
nsubj(red-34, first-32)
cop(red-34, are-33)
ccomp(white-43, red-34)
case(pride-36, with-35)
nmod:with(red-34, pride-36)
cc(pride-36, and-37)
nmod:with(red-34, wrath-38)
conj:and(pride-36, wrath-38)
det(next-41, the-40)
nsubj(white-43, next-41)
cop(white-43, are-42)
conj:and(gripped-3, white-43)
case(pain-45, with-44)
nmod:with(white-43, pain-45)
cc(white-43, But-47)
det(third-49, the-48)
nsubj(black-51, third-49)
cop(black-51, are-50)
conj:and(gripped-3, black-51)
conj:but(white-43, black-51)
case(sin-54, with-52)
amod(sin-54, clinkered-53)
nmod:with(black-51, sin-54)
nsubj(burn-58, sin-54)
ref(sin-54, that-55)
aux(burn-58, can-56)
neg(burn-58, not-57)
acl:relcl(sin-54, burn-58)
advmod(burn-58, again-59)
nsubj(hold-63, They-61)
aux(hold-63, may-62)
conj:and(gripped-3, hold-63)
nmod:poss(path-65, their-64)
dobj(hold-63, path-65)
nsubj(leave-69, they-67)
aux(leave-69, may-68)
ccomp(gripped-3, leave-69)
nmod:poss(path-71, their-70)
dobj(leave-69, path-71)
mark(soul-76, with-73)
neg(soul-76, never-74)
det(soul-76, a-75)
advcl(burn-82, soul-76)
case(mark-78, to-77)
nmod:to(soul-76, mark-78)
nsubj(burn-82, They-80)
nsubj(freeze-84, They-80)
aux(burn-82, may-81)
ccomp(gripped-3, burn-82)
cc(burn-82, or-83)
ccomp(gripped-3, freeze-84)
conj:or(burn-82, freeze-84)
cc(gripped-3, but-86)
nsubj(cease-90, they-87)
aux(cease-90, must-88)
neg(cease-90, not-89)
conj:and(gripped-3, cease-90)
case(Scorn-93, in-91)
det(Scorn-93, the-92)
nmod:in(cease-90, Scorn-93)
case(Dark-97, of-94)
det(Dark-97, the-95)
compound(Dark-97, Outer-96)
nmod:of(Scorn-93, Dark-97)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Wind))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBN blows)
            (PP (IN between)
              (NP (DT the) (NNS worlds)))))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBD nipped)
        (NP (PRP him))
        (PP (TO to)
          (NP (DT the) (NN bone)))))
    (, ,)
    (CC And)
    (S
      (NP (PRP he))
      (VP (VBD yearned)
        (PP (TO to)
          (NP
            (NP (DT the) (NN flare))
            (PP (IN of)
              (NP (NNP Hell-Gate)))))
        (PP
          (ADVP (RB there))
          (IN as)
          (NP
            (NP (DT the) (NN light))
            (PP (IN of)
              (NP (PRP$ his) (JJ own) (NN hearth-stone)))))))
    (. .)))

det(Wind-2, The-1)
nsubj(blows-4, Wind-2)
dep(nipped-10, Wind-2)
ref(Wind-2, that-3)
acl:relcl(Wind-2, blows-4)
case(worlds-7, between-5)
det(worlds-7, the-6)
nmod:between(blows-4, worlds-7)
nsubj(nipped-10, it-9)
root(ROOT-0, nipped-10)
dobj(nipped-10, him-11)
case(bone-14, to-12)
det(bone-14, the-13)
nmod:to(nipped-10, bone-14)
cc(nipped-10, And-16)
nsubj(yearned-18, he-17)
conj:and(nipped-10, yearned-18)
case(flare-21, to-19)
det(flare-21, the-20)
nmod:to(yearned-18, flare-21)
case(Hell-Gate-23, of-22)
nmod:of(flare-21, Hell-Gate-23)
advmod(light-27, there-24)
case(light-27, as-25)
det(light-27, the-26)
nmod:as(yearned-18, light-27)
case(hearth-stone-31, of-28)
nmod:poss(hearth-stone-31, his-29)
amod(hearth-stone-31, own-30)
nmod:of(light-27, hearth-stone-31)

(ROOT
  (S
    (S
      (X (DT The)
        (ADJP (JJ Devil)))
      (NP (PRP he))
      (VP (VBD sat)
        (PP (IN behind)
          (NP (DT the) (NNS bars)))
        (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (JJ desperate) (NNS legions))
            (VP (VBD drew))))))
    (, ,)
    (CC But)
    (S
      (NP (PRP he))
      (VP
        (VP (VBD caught)
          (NP (DT the) (VBG hasting) (NN Tomlinson)))
        (CC and)
        (VP (MD would) (RB not)
          (VP (VB let)
            (NP (PRP him))
            (PRT (RP through))))))
    (. .)))

det(Devil-2, The-1)
dep(sat-4, Devil-2)
nsubj(sat-4, he-3)
root(ROOT-0, sat-4)
case(bars-7, behind-5)
det(bars-7, the-6)
nmod:behind(sat-4, bars-7)
advmod(drew-13, where-9)
det(legions-12, the-10)
amod(legions-12, desperate-11)
nsubj(drew-13, legions-12)
advcl(sat-4, drew-13)
cc(sat-4, But-15)
nsubj(caught-17, he-16)
nsubj(let-24, he-16)
conj:but(sat-4, caught-17)
det(Tomlinson-20, the-18)
amod(Tomlinson-20, hasting-19)
dobj(caught-17, Tomlinson-20)
cc(caught-17, and-21)
aux(let-24, would-22)
neg(let-24, not-23)
conj:but(sat-4, let-24)
conj:and(caught-17, let-24)
dobj(let-24, him-25)
compound:prt(let-24, through-26)

(ROOT
  (S (`` ``)
    (NP (NNP Wot))
    (VP (VBD ye)
      (NP
        (NP (DT the) (NN price))
        (PP (IN of)
          (NP (JJ good) (NN pit-coal))))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD must)
            (VP (VB pay))))))
    (. ?) ('' '')))

nsubj(ye-3, Wot-2)
root(ROOT-0, ye-3)
det(price-5, the-4)
dobj(ye-3, price-5)
case(pit-coal-8, of-6)
amod(pit-coal-8, good-7)
nmod:of(price-5, pit-coal-8)
mark(pay-12, that-9)
nsubj(pay-12, I-10)
aux(pay-12, must-11)
ccomp(ye-3, pay-12)

(ROOT
  (SINV
    (VP (VBD said))
    (NP (PRP he))
    (, ,) (`` ``)
    (S
      (NP (DT That))
      (VP (MD ye)
        (VP
          (VP (VB rank)
            (NP
              (NP
                (NP (NNP yoursel) (POS '))
                (RB so) (NN fit))
              (PP (IN for)
                (NP (NNP Hell)))))
          (CC and)
          (VP (VB ask)
            (NP
              (NP (DT no) (NN leave))
              (PP (IN of)
                (NP (PRP me))))))))
    (. ?)))

root(ROOT-0, said-1)
nsubj(said-1, he-2)
nsubj(rank-7, That-5)
nsubj(ask-15, That-5)
aux(rank-7, ye-6)
ccomp(said-1, rank-7)
nmod:poss(fit-11, yoursel-8)
case(yoursel-8, '-9)
advmod(fit-11, so-10)
dobj(rank-7, fit-11)
case(Hell-13, for-12)
nmod:for(fit-11, Hell-13)
cc(rank-7, and-14)
ccomp(said-1, ask-15)
conj:and(rank-7, ask-15)
neg(leave-17, no-16)
dobj(ask-15, leave-17)
case(me-19, of-18)
nmod:of(leave-17, me-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am) (RB all)
        (ADJP (JJ o'er-sib)
          (PP (TO to)
            (NP
              (NP (NNP Adam) (POS 's))
              (NN breed))))
        (SBAR (IN that)
          (S
            (NP (PRP ye))
            (VP (MD should)
              (VP (VB give)
                (S
                  (NP (PRP me))
                  (VP (VB scorn)))))))))
    (, ,) (IN For)
    (S
      (NP (PRP I))
      (VP (VBD strove)
        (PP (IN with)
          (NP
            (NP (NNP God))
            (PP (IN for)
              (NP (PRP$ your) (JJ First) (NN Father)))))
        (NP (DT the) (NN day))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBD was)
              (VP (VBN born)))))))
    (. .)))

nsubj(o'er-sib-4, I-1)
cop(o'er-sib-4, am-2)
advmod(o'er-sib-4, all-3)
root(ROOT-0, o'er-sib-4)
case(breed-8, to-5)
nmod:poss(breed-8, Adam-6)
case(Adam-6, 's-7)
nmod:to(o'er-sib-4, breed-8)
mark(give-12, that-9)
nsubj(give-12, ye-10)
aux(give-12, should-11)
ccomp(o'er-sib-4, give-12)
nsubj(scorn-14, me-13)
ccomp(give-12, scorn-14)
dep(o'er-sib-4, For-16)
nsubj(strove-18, I-17)
parataxis(o'er-sib-4, strove-18)
case(God-20, with-19)
nmod:with(strove-18, God-20)
case(Father-24, for-21)
nmod:poss(Father-24, your-22)
amod(Father-24, First-23)
nmod:for(God-20, Father-24)
det(day-26, the-25)
nmod:tmod(strove-18, day-26)
mark(born-30, that-27)
nsubjpass(born-30, he-28)
auxpass(born-30, was-29)
ccomp(strove-18, born-30)

(ROOT
  (S
    (VP
      (VP (VB Sit)
        (PRT (RP down)))
      (, ,)
      (VP (VB sit)
        (PRT (RP down))
        (PP (IN upon)
          (NP (DT the) (NN slag))))
      (, ,)
      (CC and)
      (VP (VB answer)
        (NP
          (ADJP (JJ loud)
            (CC and)
            (JJ high))
          (DT The) (NN harm))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP ye))
              (VP (VBD did)
                (PP (TO to)
                  (NP
                    (NP (DT the) (NNPS Sons))
                    (PP (IN of)
                      (NP (NN Men))))))))
          (CC or)
          (SBAR
            (X (RB ever))
            (S
              (NP (PRP you))
              (VP (VBD came)
                (S
                  (VP (TO to)
                    (VP (VB die))))))))))
    (. .) ('' '')))

root(ROOT-0, Sit-1)
compound:prt(Sit-1, down-2)
conj:and(Sit-1, sit-4)
compound:prt(sit-4, down-5)
case(slag-8, upon-6)
det(slag-8, the-7)
nmod:upon(sit-4, slag-8)
cc(Sit-1, and-10)
conj:and(Sit-1, answer-11)
amod(harm-16, loud-12)
cc(loud-12, and-13)
conj:and(loud-12, high-14)
amod(harm-16, high-14)
det(harm-16, The-15)
dobj(answer-11, harm-16)
mark(did-19, that-17)
nsubj(did-19, ye-18)
ccomp(answer-11, did-19)
case(Sons-22, to-20)
det(Sons-22, the-21)
nmod:to(did-19, Sons-22)
case(Men-24, of-23)
nmod:of(Sons-22, Men-24)
cc(did-19, or-25)
dep(came-28, ever-26)
nsubj(came-28, you-27)
nsubj:xsubj(die-30, you-27)
ccomp(answer-11, came-28)
conj:or(did-19, came-28)
mark(die-30, to-29)
xcomp(came-28, die-30)

(ROOT
  (S (CC And)
    (S
      (NP (NNP Tomlinson))
      (VP
        (VP (VBD looked)
          (ADVP (RB up)
            (CC and)
            (RB up)))
        (, ,)
        (CC and)
        (VP (VBD saw)
          (PP (IN against)
            (NP (DT the) (NN night)))
          (NP
            (NP (DT The) (NN belly))
            (PP (IN of)
              (NP
                (NP (DT a)
                  (ADJP (JJ tortured))
                  (NN star) (NN blood-red))
                (PP (IN in)
                  (NP (JJ Hell-Mouth) (NN light)))))))))
    (: ;)
    (CC And)
    (S
      (NP (NNP Tomlinson))
      (VP
        (VP (VBD looked)
          (ADVP (RB down)
            (CC and)
            (RB down)))
        (, ,)
        (CC and)
        (VP (VBD saw)
          (PP (IN beneath)
            (NP (PRP$ his) (NNS feet)))
          (NP
            (NP (DT The) (NN frontlet))
            (PP (IN of)
              (NP
                (NP (DT a)
                  (ADJP (JJ tortured))
                  (NN star) (NN milk-white))
                (PP (IN in)
                  (NP (JJ Hell-Mouth) (NN heat)))))))))
    (. .)))

cc(looked-3, And-1)
nsubj(looked-3, Tomlinson-2)
nsubj(saw-9, Tomlinson-2)
root(ROOT-0, looked-3)
advmod(looked-3, up-4)
cc(up-4, and-5)
advmod(looked-3, up-6)
conj:and(up-4, up-6)
cc(looked-3, and-8)
conj:and(looked-3, saw-9)
case(night-12, against-10)
det(night-12, the-11)
nmod:against(saw-9, night-12)
det(belly-14, The-13)
dobj(saw-9, belly-14)
case(blood-red-19, of-15)
det(blood-red-19, a-16)
amod(blood-red-19, tortured-17)
compound(blood-red-19, star-18)
nmod:of(belly-14, blood-red-19)
case(light-22, in-20)
amod(light-22, Hell-Mouth-21)
nmod:in(blood-red-19, light-22)
cc(looked-3, And-24)
nsubj(looked-26, Tomlinson-25)
nsubj(saw-32, Tomlinson-25)
conj:and(looked-3, looked-26)
advmod(looked-26, down-27)
cc(down-27, and-28)
advmod(looked-26, down-29)
conj:and(down-27, down-29)
cc(looked-26, and-31)
conj:and(looked-3, saw-32)
conj:and(looked-26, saw-32)
case(feet-35, beneath-33)
nmod:poss(feet-35, his-34)
nmod:beneath(saw-32, feet-35)
det(frontlet-37, The-36)
dobj(saw-32, frontlet-37)
case(milk-white-42, of-38)
det(milk-white-42, a-39)
amod(milk-white-42, tortured-40)
compound(milk-white-42, star-41)
nmod:of(frontlet-37, milk-white-42)
case(heat-45, in-43)
amod(heat-45, Hell-Mouth-44)
nmod:in(milk-white-42, heat-45)

(ROOT
  (SINV (`` ``)
    (S
      (ADVP (RB O))
      (NP (PRP I))
      (VP (VBD had)
        (NP
          (NP (DT a) (NN love))
          (PP (IN on)
            (NP (NN earth))))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP he))
    (, ,) (`` ``)
    (S
      (S
        (NP (DT that))
        (VP (VBD kissed)
          (NP (PRP me))
          (PP (TO to)
            (NP (PRP$ my) (NN fall)))))
      (, ,)
      (CC And)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP ye))
            (VP (MD would)
              (VP (VB call)
                (NP (PRP$ my) (NN love))
                (PP (TO to)
                  (NP (PRP me)))))))
        (NP (PRP I))
        (VP (VBP know)
          (SBAR
            (S
              (NP (PRP she))
              (VP (MD would)
                (VP (VB answer)
                  (NP (DT all)))))))))
    (. .) ('' '')))

advmod(had-4, O-2)
nsubj(had-4, I-3)
ccomp(said-11, had-4)
det(love-6, a-5)
dobj(had-4, love-6)
case(earth-8, on-7)
nmod:on(love-6, earth-8)
root(ROOT-0, said-11)
nsubj(said-11, he-12)
nsubj(kissed-16, that-15)
dep(said-11, kissed-16)
dobj(kissed-16, me-17)
case(fall-20, to-18)
nmod:poss(fall-20, my-19)
nmod:to(kissed-16, fall-20)
cc(kissed-16, And-22)
mark(call-26, if-23)
nsubj(call-26, ye-24)
aux(call-26, would-25)
advcl(know-32, call-26)
nmod:poss(love-28, my-27)
dobj(call-26, love-28)
case(me-30, to-29)
nmod:to(call-26, me-30)
nsubj(know-32, I-31)
dep(said-11, know-32)
conj:and(kissed-16, know-32)
nsubj(answer-35, she-33)
aux(answer-35, would-34)
ccomp(know-32, answer-35)
dobj(answer-35, all-36)

(ROOT
  (S (: --) (`` ``)
    (NP
      (NP (DT All))
      (SBAR (IN that)
        (S
          (NP (PRP ye))
          (VP (VBD did)
            (PP (IN in)
              (NP (NN love)))))))
    (VP (VBD forbid)
      (SBAR
        (S
          (S
            (S
              (NP (PRP it))
              (VP (MD shall)
                (VP (VB be)
                  (VP (VBN written)
                    (S
                      (ADJP (JJ fair)))))))
            (, ,)
            (CC But)
            (S
              (ADVP (RB now))
              (NP (PRP ye))
              (VP (VBP wait)
                (PP
                  (PP (IN at)
                    (NP (NNP Hell-Mouth) (NNP Gate)))
                  (CC and)
                  (RB not)
                  (PP (IN in)
                    (NP (NNP Berkeley) (NNP Square)))))))
          (: :)
          (S
            (SBAR (IN Though)
              (S
                (NP (PRP we))
                (VP (VBN whistled)
                  (NP (PRP$ your) (NN love))
                  (PP (IN from)
                    (NP (PRP$ her) (NN bed) (NN to-night))))))
            (, ,)
            (NP (PRP I))
            (VP (VBD trow)
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (MD would) (RB not)
                    (VP (VB run)))))))
          (, ,)
          (S
            (PP (IN For)
              (NP (DT the) (NN sin)))
            (NP (PRP ye))
            (VP (VBP do)
              (PP (IN by)
                (NP (CD two)
                  (CC and)
                  (CD two)))
              (SBAR
                (S
                  (NP (PRP ye))
                  (VP (MD must)
                    (VP (VB pay)
                      (PP (IN for)
                        (NP (CD one)))
                      (PP (IN by)
                        (NP (CD one))))))))))))
    (. !) ('' '')))

nsubj(forbid-9, All-3)
mark(did-6, that-4)
nsubj(did-6, ye-5)
dep(All-3, did-6)
case(love-8, in-7)
nmod:in(did-6, love-8)
root(ROOT-0, forbid-9)
nsubjpass(written-13, it-10)
aux(written-13, shall-11)
auxpass(written-13, be-12)
dep(forbid-9, written-13)
xcomp(written-13, fair-14)
cc(written-13, But-16)
advmod(wait-19, now-17)
nsubj(wait-19, ye-18)
nsubj(wait-19', ye-18)
dep(forbid-9, wait-19)
conj:but(written-13, wait-19)
conj:but(written-13, wait-19')
conj:and(wait-19, wait-19')
case(Gate-22, at-20)
compound(Gate-22, Hell-Mouth-21)
nmod:at(wait-19, Gate-22)
cc(wait-19, and-23)
neg(Square-27, not-24)
case(Square-27, in-25)
compound(Square-27, Berkeley-26)
nmod:in(wait-19', Square-27)
mark(whistled-31, Though-29)
nsubj(whistled-31, we-30)
advcl(trow-40, whistled-31)
nmod:poss(love-33, your-32)
dobj(whistled-31, love-33)
case(to-night-37, from-34)
nmod:poss(to-night-37, her-35)
compound(to-night-37, bed-36)
nmod:from(whistled-31, to-night-37)
nsubj(trow-40, I-39)
parataxis(written-13, trow-40)
nsubj(run-44, she-41)
aux(run-44, would-42)
neg(run-44, not-43)
ccomp(trow-40, run-44)
case(sin-48, For-46)
det(sin-48, the-47)
nmod:for(do-50, sin-48)
nsubj(do-50, ye-49)
parataxis(written-13, do-50)
case(two-52, by-51)
nmod:by(do-50, two-52)
cc(two-52, and-53)
nmod:by(do-50, two-54)
conj:and(two-52, two-54)
nsubj(pay-57, ye-55)
aux(pay-57, must-56)
ccomp(do-50, pay-57)
case(one-59, for-58)
nmod:for(pay-57, one-59)
case(one-61, by-60)
nmod:by(pay-57, one-61)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Wind))
      (SBAR (IN that)
        (S
          (S
            (S
              (NP
                (NP (NNS blows))
                (PP (IN between)
                  (NP (DT the) (NNS worlds)))))
            (, ,)
            (NP (PRP it))
            (VP (VBD cut)
              (NP (PRP him))
              (PP (IN like)
                (NP (DT a) (NN knife)))))
          (, ,)
          (CC And)
          (S
            (NP (NNP Tomlinson))
            (VP
              (VP (VBD took)
                (PRT (RP up))
                (NP (DT the) (NN tale)))
              (CC and)
              (VP (VBD spoke)
                (PP (IN of)
                  (NP
                    (NP (PRP$ his) (NN sin))
                    (PP (IN in)
                      (NP (NN life))
                      (: :))))
                (: --) (`` ``)
                (SBAR
                  (S
                    (S
                      (SBAR (IN Once)
                        (S
                          (NP (PRP I))
                          (VP (VBP ha) ('' '))))
                      (VP (VBD laughed)
                        (PP (IN at)
                          (NP
                            (NP (DT the) (NN power))
                            (PP (IN of)
                              (NP
                                (QP (CD Love)
                                  (CC and)
                                  (RB twice))))))
                        (PP (IN at)
                          (NP
                            (NP (DT the) (NN grip))
                            (PP (IN of)
                              (NP (DT the) (NNP Grave)))))))
                    (, ,)
                    (CC And)
                    (S
                      (ADVP (RB thrice))
                      (NP (PRP I))
                      (VP (VBP ha)))))
                ('' ')))))))
    (VP (VBD patted)
      (NP (PRP$ my) (NN God))
      (PP (IN on)
        (NP (DT the) (NN head)))
      (SBAR (IN that)
        (S
          (NP (NNS men))
          (VP (MD might)
            (VP (VB call)
              (S
                (NP (PRP me))
                (ADJP (JJ brave))))))))
    (. .) ('' '')))

det(Wind-2, The-1)
nsubj(patted-56, Wind-2)
mark(cut-10, that-3)
ccomp(cut-10, blows-4)
case(worlds-7, between-5)
det(worlds-7, the-6)
nmod:between(blows-4, worlds-7)
nsubj(cut-10, it-9)
dep(Wind-2, cut-10)
dobj(cut-10, him-11)
case(knife-14, like-12)
det(knife-14, a-13)
nmod:like(cut-10, knife-14)
cc(cut-10, And-16)
nsubj(took-18, Tomlinson-17)
nsubj(spoke-23, Tomlinson-17)
dep(Wind-2, took-18)
conj:and(cut-10, took-18)
compound:prt(took-18, up-19)
det(tale-21, the-20)
dobj(took-18, tale-21)
cc(took-18, and-22)
conj:and(cut-10, spoke-23)
conj:and(took-18, spoke-23)
case(sin-26, of-24)
nmod:poss(sin-26, his-25)
nmod:of(spoke-23, sin-26)
case(life-28, in-27)
nmod:in(sin-26, life-28)
mark(ha-34, Once-32)
nsubj(ha-34, I-33)
csubj(laughed-36, ha-34)
dep(spoke-23, laughed-36)
case(power-39, at-37)
det(power-39, the-38)
nmod:at(laughed-36, power-39)
case(Love-41, of-40)
nmod:of(power-39, Love-41)
cc(Love-41, and-42)
nmod:of(power-39, twice-43)
conj:and(Love-41, twice-43)
case(grip-46, at-44)
det(grip-46, the-45)
nmod:at(laughed-36, grip-46)
case(Grave-49, of-47)
det(Grave-49, the-48)
nmod:of(grip-46, Grave-49)
cc(laughed-36, And-51)
advmod(ha-54, thrice-52)
nsubj(ha-54, I-53)
dep(spoke-23, ha-54)
conj:and(laughed-36, ha-54)
root(ROOT-0, patted-56)
nmod:poss(God-58, my-57)
dobj(patted-56, God-58)
case(head-61, on-59)
det(head-61, the-60)
nmod:on(patted-56, head-61)
mark(call-65, that-62)
nsubj(call-65, men-63)
aux(call-65, might-64)
ccomp(patted-56, call-65)
nsubj(brave-67, me-66)
xcomp(call-65, brave-67)

(ROOT
  (FRAG
    (NP (DT The) (NNP Devil))
    (SBAR
      (S
        (S
          (NP (PRP he))
          (VP (VBD blew)
            (PP (IN on)
              (NP (DT a) (JJ brandered) (NN soul)))))
        (CC and)
        (S
          (VP (VB set)
            (S
              (NP (PRP it))
              (ADVP (RB aside))
              (VP (TO to)
                (VP (VB cool)))))
          (: :))))
    (: --) (`` ``)
    (S
      (NP (NNP Do) (NNP ye))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD would)
              (VP (VB waste)
                (NP (PRP$ my) (JJ good) (NN pit-coal))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN hide))
                    (PP (IN of)
                      (NP (DT a) (JJ brain-sick) (NN fool)))))))))))
    (. ?)))

det(Devil-2, The-1)
root(ROOT-0, Devil-2)
nsubj(blew-4, he-3)
nsubj(set-10, he-3)
dep(Devil-2, blew-4)
case(soul-8, on-5)
det(soul-8, a-6)
amod(soul-8, brandered-7)
nmod:on(blew-4, soul-8)
cc(blew-4, and-9)
dep(Devil-2, set-10)
conj:and(blew-4, set-10)
dobj(set-10, it-11)
nsubj:xsubj(cool-14, it-11)
advmod(cool-14, aside-12)
mark(cool-14, to-13)
xcomp(set-10, cool-14)
compound(ye-19, Do-18)
nsubj(think-20, ye-19)
dep(Devil-2, think-20)
nsubj(waste-23, I-21)
aux(waste-23, would-22)
ccomp(think-20, waste-23)
nmod:poss(pit-coal-26, my-24)
amod(pit-coal-26, good-25)
dobj(waste-23, pit-coal-26)
case(hide-29, on-27)
det(hide-29, the-28)
nmod:on(waste-23, hide-29)
case(fool-33, of-30)
det(fool-33, a-31)
amod(fool-33, brain-sick-32)
nmod:of(hide-29, fool-33)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP see)
      (NP
        (NP (DT no) (NN worth))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ hobnailed) (NN mirth))
            (CC or)
            (NP (DT the) (JJ jolthead) (NN jest))))
        (SBAR
          (S
            (NP (PRP ye))
            (VP (VBD did)
              (SBAR (IN That)
                (S
                  (NP (PRP I))
                  (VP (MD should)
                    (VP (VB waken)
                      (NP
                        (NP (PRP$ my) (NNS gentlemen))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBP are)
                              (VP (VBG sleeping)
                                (NP (CD three))
                                (PP (IN on)
                                  (NP (DT a) (NN grid)))))))))))))))))
    (. .) ('' '')))

nsubj(see-2, I-1)
root(ROOT-0, see-2)
neg(worth-4, no-3)
dobj(see-2, worth-4)
mark(waken-18, worth-4)
case(mirth-8, in-5)
det(mirth-8, the-6)
amod(mirth-8, hobnailed-7)
nmod:in(worth-4, mirth-8)
cc(mirth-8, or-9)
det(jest-12, the-10)
amod(jest-12, jolthead-11)
nmod:in(worth-4, jest-12)
conj:or(mirth-8, jest-12)
nsubj(did-14, ye-13)
acl:relcl(worth-4, did-14)
ref(worth-4, That-15)
nsubj(waken-18, I-16)
aux(waken-18, should-17)
ccomp(did-14, waken-18)
nmod:poss(gentlemen-20, my-19)
dobj(waken-18, gentlemen-20)
nsubj(sleeping-23, gentlemen-20)
ref(gentlemen-20, that-21)
aux(sleeping-23, are-22)
acl:relcl(gentlemen-20, sleeping-23)
dobj(sleeping-23, three-24)
case(grid-27, on-25)
det(grid-27, a-26)
nmod:on(sleeping-23, grid-27)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (NNP Tomlinson))
      (VP (VBD looked)
        (ADVP (RB back)
          (CC and)
          (RB forth))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP (JJ little) (NN grace))))
    (, ,)
    (PP (IN For)
      (NP
        (NP (NNP Hell-Gate))
        (VP (VBN filled)
          (NP (DT the) (JJ houseless) (NN Soul))
          (PP (IN with)
            (NP
              (NP (DT the) (NN Fear))
              (PP (IN of)
                (NP (NNP Naked) (NNP Space))))))))
    (. .)))

advmod(looked-3, Then-1)
nsubj(looked-3, Tomlinson-2)
root(ROOT-0, looked-3)
advmod(looked-3, back-4)
cc(back-4, and-5)
advmod(looked-3, forth-6)
conj:and(back-4, forth-6)
cc(looked-3, and-8)
expl(was-10, there-9)
conj:and(looked-3, was-10)
amod(grace-12, little-11)
nsubj(was-10, grace-12)
case(Hell-Gate-15, For-14)
conj:and(looked-3, Hell-Gate-15)
acl(Hell-Gate-15, filled-16)
det(Soul-19, the-17)
amod(Soul-19, houseless-18)
dobj(filled-16, Soul-19)
case(Fear-22, with-20)
det(Fear-22, the-21)
nmod:with(filled-16, Fear-22)
case(Space-25, of-23)
compound(Space-25, Naked-24)
nmod:of(Fear-22, Space-25)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Nay))
      (, ,)
      (NP (DT this) (NN I) (NN ha) ('' '))
      (VP (VBD heard)))
    (, ,) ('' '')
    (PRN
      (S
        (VP (VBG quo) ('' ')
          (NP (NNP Tomlinson)))))
    (, ,) (`` ``)
    (CC and)
    (S
      (S
        (NP (DT this))
        (VP (VBD was)
          (VP (VBN noised)
            (ADVP (RB abroad)))))
      (, ,)
      (CC And)
      (S
        (NP (DT this) (NN I) (NN ha) ('' '))
        (VP (VBD got)
          (PP (IN from)
            (NP (DT a) (JJ Belgian) (NN book)))
          (PP (IN on)
            (NP
              (NP (DT the) (NN word))
              (PP (IN of)
                (NP (DT a) (JJ dead) (JJ French) (NN lord))))))))
    (. .) ('' '')))

nsubj(heard-8, Nay-2)
det(ha-6, this-4)
compound(ha-6, I-5)
nsubj(heard-8, ha-6)
root(ROOT-0, heard-8)
dep(heard-8, quo-11)
dobj(quo-11, Tomlinson-13)
cc(heard-8, and-16)
nsubjpass(noised-19, this-17)
auxpass(noised-19, was-18)
conj:and(heard-8, noised-19)
advmod(noised-19, abroad-20)
cc(noised-19, And-22)
det(ha-25, this-23)
compound(ha-25, I-24)
nsubj(got-27, ha-25)
conj:and(heard-8, got-27)
conj:and(noised-19, got-27)
case(book-31, from-28)
det(book-31, a-29)
amod(book-31, Belgian-30)
nmod:from(got-27, book-31)
case(word-34, on-32)
det(word-34, the-33)
nmod:on(got-27, word-34)
case(lord-39, of-35)
det(lord-39, a-36)
amod(lord-39, dead-37)
amod(lord-39, French-38)
nmod:of(word-34, lord-39)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (`` ``) (JJ Ye) (NN ha) ('' '))
      (VP (VBD heard)))
    (, ,)
    (NP (NNP ye) (NNP ha) (POS '))
    (VP (VBP read)
      (PRN (, ,)
        (S
          (NP (PRP ye))
          (VP (VBP ha)
            (SBAR
              (S
                (NP (POS '))
                (VP (VBD got))))))
        (, ,))
      (NP (JJ good) (NN lack)))
    (. !)))

amod(ha-4, Ye-3)
nsubj(heard-6, ha-4)
ccomp(read-11, heard-6)
compound(ha-9, ye-8)
nsubj(read-11, ha-9)
case(ha-9, '-10)
root(ROOT-0, read-11)
nsubj(ha-14, ye-13)
parataxis(read-11, ha-14)
nsubj(got-16, '-15)
ccomp(ha-14, got-16)
amod(lack-19, good-18)
dobj(read-11, lack-19)

(ROOT
  (S (CC and)
    (NP (DT the) (NN tale))
    (VP (VBZ begins)
      (NP
        (NP (NN afresh))
        (: --)
        (SQ (VBP Have)
          (NP (PRP ye))
          (VP (VBN sinned)
            (NP
              (NP
                (NP (CD one) (NN sin))
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN pride) (NN o) (POS '))
                    (DT the) (NN eye))))
              (CC or)
              (NP
                (NP (DT the)
                  (ADJP (JJ sinful))
                  (NN lust))
                (PP (IN of)
                  (NP (DT the) (NN flesh))))))
          (. ?))))
    ('' '')))

cc(begins-4, and-1)
det(tale-3, the-2)
nsubj(begins-4, tale-3)
root(ROOT-0, begins-4)
dobj(begins-4, afresh-5)
aux(sinned-9, Have-7)
nsubj(sinned-9, ye-8)
appos(afresh-5, sinned-9)
nummod(sin-11, one-10)
dobj(sinned-9, sin-11)
case(eye-18, for-12)
det(o-15, the-13)
compound(o-15, pride-14)
nmod:poss(eye-18, o-15)
case(o-15, '-16)
det(eye-18, the-17)
nmod:for(sin-11, eye-18)
cc(sin-11, or-19)
det(lust-22, the-20)
amod(lust-22, sinful-21)
dobj(sinned-9, lust-22)
conj:or(sin-11, lust-22)
case(flesh-25, of-23)
det(flesh-25, the-24)
nmod:of(lust-22, flesh-25)

(ROOT
  (S
    (ADVP (RB Then))
    (PRN
      (S
        (NP (NNP Tomlinson) (PRP he))
        (VP
          (VP (VBD gripped)
            (NP (DT the) (NNS bars)))
          (CC and)
          (VP (VBD yammered))))
      (, ,))
    (`` ``)
    (VP (VBD Let)
      (NP (PRP me))
      (PP (IN in)
        (NP
          (PRN (: --)
            (PP (IN For)
              (NP (PRP I))))
          (NN mind)))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD borrowed)
            (NP
              (NP (PRP$ my) (NN neighbour) (POS 's))
              (NN wife)
              (S
                (VP (TO to)
                  (VP (VB sin)
                    (NP (DT the) (JJ deadly) (NN sin))))))))))
    (. .) ('' '')))

advmod(Let-11, Then-1)
nsubj(gripped-4, Tomlinson-2)
nsubj(yammered-8, Tomlinson-2)
dep(Tomlinson-2, he-3)
parataxis(Let-11, gripped-4)
det(bars-6, the-5)
dobj(gripped-4, bars-6)
cc(gripped-4, and-7)
conj:and(gripped-4, yammered-8)
parataxis(Let-11, yammered-8)
root(ROOT-0, Let-11)
dobj(Let-11, me-12)
case(mind-17, in-13)
case(I-16, For-15)
nmod:for(mind-17, I-16)
nmod:in(Let-11, mind-17)
mark(borrowed-20, that-18)
nsubj(borrowed-20, I-19)
ccomp(Let-11, borrowed-20)
nmod:poss(neighbour-22, my-21)
nmod:poss(wife-24, neighbour-22)
case(neighbour-22, 's-23)
dobj(borrowed-20, wife-24)
mark(sin-26, to-25)
acl(wife-24, sin-26)
det(sin-29, the-27)
amod(sin-29, deadly-28)
dobj(sin-26, sin-29)

(ROOT
  (FRAG
    (NP (DT The) (NN Devil)
      (SBAR
        (S
          (NP (PRP he))
          (VP
            (VP (VBD grinned)
              (PP (IN behind)
                (NP (DT the) (NNS bars))))
            (, ,)
            (CC and)
            (VP (VBD banked)
              (NP
                (NP (DT the) (NNS fires))
                (ADVP (JJ high)))
              (: :) (`` ``)
              (SQ (VBD Did)
                (NP (PRP ye))
                (VP (VB read)
                  (PP (IN of)
                    (NP
                      (NP (DT that) (NN sin))
                      (PP (IN in)
                        (NP (DT a) (NN book))))))))))))
    (. ?) ('' '')))

det(Devil-2, The-1)
root(ROOT-0, Devil-2)
nsubj(grinned-4, he-3)
nsubj(banked-10, he-3)
ccomp(Devil-2, grinned-4)
case(bars-7, behind-5)
det(bars-7, the-6)
nmod:behind(grinned-4, bars-7)
cc(grinned-4, and-9)
ccomp(Devil-2, banked-10)
conj:and(grinned-4, banked-10)
det(fires-12, the-11)
dobj(banked-10, fires-12)
advmod(fires-12, high-13)
aux(read-18, Did-16)
nsubj(read-18, ye-17)
dep(banked-10, read-18)
case(sin-21, of-19)
det(sin-21, that-20)
nmod:of(read-18, sin-21)
case(book-24, in-22)
det(book-24, a-23)
nmod:in(sin-21, book-24)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (PRP he))))
    (: ;)
    (CC and)
    (S
      (NP (NNP Tomlinson))
      (VP (VBD said) (, ,) (`` ``)
        (ADJP (JJ Ay))))
    (. !) ('' '')))

root(ROOT-0, said-1)
dobj(said-1, he-2)
cc(said-1, and-4)
nsubj(said-6, Tomlinson-5)
conj:and(said-1, said-6)
xcomp(said-6, Ay-9)

(ROOT
  (S
    (NP (DT The) (NNP Devil))
    (PRN
      (S
        (S
          (S
            (NP (PRP he))
            (VP (VBD blew)
              (PP (IN upon)
                (NP (PRP$ his) (NNS nails)))))
          (, ,)
          (CC and)
          (S
            (NP (DT the) (JJ little) (NNS devils))
            (VP (VBD ran))))
        (, ,)
        (CC And)
        (S
          (NP (PRP he))
          (VP (VBD said) (: :) (`` ``)
            (S
              (S
                (SINV
                  (VP (VB Go)
                    (NP (NN husk)))
                  (NP
                    (NP (DT this) (JJ whimpering) (NN thief))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ comes)
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NN guise))
                              (PP (IN of)
                                (NP (DT a) (NN man))))))))))
                (: :)
                (FRAG
                  (VP (VB Winnow)
                    (NP (PRP him))
                    (PP (IN out)
                      (NP (`` `) (NN twixt) (NN star)
                        (CC and)
                        (NN star))))))
              (, ,)
              (CC and)
              (S
                (VP (VB sieve)
                  (NP (PRP$ his) (JJ proper) (NN worth)))
                (: :)))))))
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (JJ sore) (NN decline))
        (PP (IN in)
          (NP
            (NP (NNP Adam) (POS 's))
            (NN line))))
      (SBAR (IN if)
        (S
          (NP (DT this))
          (VP (VB be)
            (VP (VBN spawn)
              (PP (IN of)
                (NP (NN earth))))))))
    (. .) ('' '')))

det(Devil-2, The-1)
nsubj('s-50, Devil-2)
nsubj(blew-4, he-3)
parataxis('s-50, blew-4)
case(nails-7, upon-5)
nmod:poss(nails-7, his-6)
nmod:upon(blew-4, nails-7)
cc(blew-4, and-9)
det(devils-12, the-10)
amod(devils-12, little-11)
nsubj(ran-13, devils-12)
conj:and(blew-4, ran-13)
parataxis('s-50, ran-13)
cc(blew-4, And-15)
nsubj(said-17, he-16)
conj:and(blew-4, said-17)
parataxis('s-50, said-17)
dep(Winnow-34, Go-20)
dobj(Go-20, husk-21)
det(thief-24, this-22)
amod(thief-24, whimpering-23)
nsubj(Go-20, thief-24)
nsubj(comes-26, thief-24)
ref(thief-24, that-25)
acl:relcl(thief-24, comes-26)
case(guise-29, in-27)
det(guise-29, the-28)
nmod:in(comes-26, guise-29)
case(man-32, of-30)
det(man-32, a-31)
nmod:of(guise-29, man-32)
xcomp(said-17, Winnow-34)
dobj(Winnow-34, him-35)
case(star-39, out-36)
compound(star-39, twixt-38)
nmod:out(Winnow-34, star-39)
cc(star-39, and-40)
nmod:out(Winnow-34, star-41)
conj:and(star-39, star-41)
cc(Winnow-34, and-43)
xcomp(said-17, sieve-44)
conj:and(Winnow-34, sieve-44)
nmod:poss(worth-47, his-45)
amod(worth-47, proper-46)
dobj(sieve-44, worth-47)
expl('s-50, There-49)
root(ROOT-0, 's-50)
amod(decline-52, sore-51)
nsubj('s-50, decline-52)
case(line-56, in-53)
nmod:poss(line-56, Adam-54)
case(Adam-54, 's-55)
nmod:in(decline-52, line-56)
mark(spawn-60, if-57)
nsubjpass(spawn-60, this-58)
auxpass(spawn-60, be-59)
advcl('s-50, spawn-60)
case(earth-62, of-61)
nmod:of(spawn-60, earth-62)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Empusa) (POS 's))
        (NN crew))
      (, ,)
      (ADVP (IN so)
        (NP (CD naked-new)))
      (NP (PRP they))
      (VP (MD may) (RB not)
        (VP (VB face)
          (NP (DT the) (NN fire)))))
    (, ,)
    (CC But)
    (S
      (S
        (VP (VBG weep)
          (SBAR (IN that)
            (S
              (S
                (NP (PRP they))
                (VP (VBD bin)
                  (ADJP (RB too) (JJ small)
                    (PP (TO to)
                      (NP (NN sin))))
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN height))
                      (PP (IN of)
                        (NP (PRP$ their) (NN desire)))))))
              (, ,)
              (S
                (PP (IN Over)
                  (NP (DT the) (NN coal)))
                (NP (PRP they))
                (VP
                  (VP (VBD chased)
                    (NP (DT the) (NN Soul)))
                  (, ,)
                  (CC and)
                  (VP (VBD racked)
                    (NP (PRP it))
                    (ADVP (DT all) (RB abroad)))))
              (, ,)
              (PP (IN As)
                (NP (NNS children)))))))
      (VP (VBZ rifle)
        (NP
          (NP (DT a) (NN caddis-case))
          (CC or)
          (NP
            (NP (DT the) (NN raven) (POS 's))
            (JJ foolish) (NN hoard)))))
    (. .)))

nmod:poss(crew-3, Empusa-1)
case(Empusa-1, 's-2)
nsubj(face-10, crew-3)
case(naked-new-6, so-5)
advmod(face-10, naked-new-6)
nsubj(face-10, they-7)
aux(face-10, may-8)
neg(face-10, not-9)
root(ROOT-0, face-10)
det(fire-12, the-11)
dobj(face-10, fire-12)
cc(face-10, But-14)
csubj(rifle-46, weep-15)
mark(bin-18, that-16)
nsubj(bin-18, they-17)
ccomp(weep-15, bin-18)
advmod(small-20, too-19)
xcomp(bin-18, small-20)
case(sin-22, to-21)
nmod:to(small-20, sin-22)
case(height-25, to-23)
det(height-25, the-24)
nmod:to(bin-18, height-25)
case(desire-28, of-26)
nmod:poss(desire-28, their-27)
nmod:of(height-25, desire-28)
case(coal-32, Over-30)
det(coal-32, the-31)
nmod:over(chased-34, coal-32)
nsubj(chased-34, they-33)
nsubj(racked-39, they-33)
parataxis(bin-18, chased-34)
det(Soul-36, the-35)
dobj(chased-34, Soul-36)
cc(chased-34, and-38)
parataxis(bin-18, racked-39)
conj:and(chased-34, racked-39)
dobj(racked-39, it-40)
dep(abroad-42, all-41)
advmod(racked-39, abroad-42)
case(children-45, As-44)
nmod:as(bin-18, children-45)
conj:but(face-10, rifle-46)
det(caddis-case-48, a-47)
dobj(rifle-46, caddis-case-48)
cc(caddis-case-48, or-49)
det(raven-51, the-50)
nmod:poss(hoard-54, raven-51)
case(raven-51, 's-52)
amod(hoard-54, foolish-53)
dobj(rifle-46, hoard-54)
conj:or(caddis-case-48, hoard-54)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB back))
      (NP (PRP they))
      (VP (VBD came)
        (PP (IN with)
          (NP (DT the) (JJ tattered) (NN Thing)))
        (, ,)
        (PP (IN as)
          (NP (NNS children)))
        (PP (IN after)
          (NP (NN play)))))
    (, ,)
    (CC And)
    (S
      (NP (PRP they))
      (VP (VBD said) (: :) (`` ``)
        (S
          (NP
            (NP (DT The) (NN soul))
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (VBD got)
                  (PP (IN from)
                    (NP (NNP God)))))))
          (NP (PRP he))
          (VP (VBZ has)
            (VP (VBN bartered)
              (ADJP (JJ clean))
              (ADVP (RB away)))))))
    (. .)))

cc(came-4, And-1)
advmod(came-4, back-2)
nsubj(came-4, they-3)
root(ROOT-0, came-4)
case(Thing-8, with-5)
det(Thing-8, the-6)
amod(Thing-8, tattered-7)
nmod:with(came-4, Thing-8)
case(children-11, as-10)
nmod:as(came-4, children-11)
case(play-13, after-12)
nmod:after(came-4, play-13)
cc(came-4, And-15)
nsubj(said-17, they-16)
conj:and(came-4, said-17)
det(soul-21, The-20)
nsubj(bartered-29, soul-21)
mark(got-24, that-22)
nsubj(got-24, he-23)
dep(soul-21, got-24)
case(God-26, from-25)
nmod:from(got-24, God-26)
nsubj(bartered-29, he-27)
aux(bartered-29, has-28)
ccomp(said-17, bartered-29)
xcomp(bartered-29, clean-30)
advmod(bartered-29, away-31)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBP have)
          (VP (VBN threshed)
            (NP
              (NP (DT a) (NN stook))
              (PP (IN of)
                (NP (NN print)
                  (CC and)
                  (NN book))))))
        (, ,)
        (CC and)
        (VP (VBD winnowed)
          (NP (DT a) (VBG chattering) (NN wind)))))
    (CC And)
    (S
      (SBAR
        (WHNP (DT many))
        (S
          (NP (DT a) (NN soul))
          (VP (VBP wherefrom)
            (SBAR
              (S
                (NP (PRP he))
                (VP
                  (VP (VBD stole))
                  (, ,)
                  (CC but)
                  (VP
                    (NP (PRP$ his)))))))))
      (NP (PRP we))
      (VP (MD can) (RB not)
        (VP (VB find))))
    (: :)
    (S
      (NP (PRP We))
      (VP (VBP have)
        (VP (VBN handled)
          (NP (PRP him)))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (VP (VBN dandled)
          (NP (PRP him)))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (VP (VBN seared)
          (NP (PRP him))
          (PP (TO to)
            (NP (DT the) (NN bone))))))
    (, ,)
    (CC And)
    (S
      (ADVP (RB sure)
        (SBAR (IN if)
          (S
            (VP
              (ADVP (NN tooth)
                (CC and)
                (NN nail))
              (VBP show)
              (NP (NN truth))))))
      (NP (PRP he))
      (VP (VBZ has)
        (NP
          (NP (DT no) (NN soul))
          (PP (IN of)
            (NP (PRP$ his) (JJ own))))))
    (. .) ('' '')))

nsubj(threshed-3, We-1)
nsubj(winnowed-12, We-1)
aux(threshed-3, have-2)
root(ROOT-0, threshed-3)
det(stook-5, a-4)
dobj(threshed-3, stook-5)
case(print-7, of-6)
nmod:of(stook-5, print-7)
cc(print-7, and-8)
nmod:of(stook-5, book-9)
conj:and(print-7, book-9)
cc(threshed-3, and-11)
conj:and(threshed-3, winnowed-12)
det(wind-15, a-13)
amod(wind-15, chattering-14)
dobj(winnowed-12, wind-15)
cc(threshed-3, And-16)
dobj(wherefrom-20, many-17)
det(soul-19, a-18)
nsubj(wherefrom-20, soul-19)
advcl(find-29, wherefrom-20)
nsubj(stole-22, he-21)
ccomp(wherefrom-20, stole-22)
cc(stole-22, but-24)
ccomp(wherefrom-20, his-25)
conj:but(stole-22, his-25)
nsubj(find-29, we-26)
aux(find-29, can-27)
neg(find-29, not-28)
conj:and(threshed-3, find-29)
nsubj(handled-33, We-31)
aux(handled-33, have-32)
dep(threshed-3, handled-33)
dobj(handled-33, him-34)
nsubj(dandled-38, we-36)
aux(dandled-38, have-37)
ccomp(threshed-3, dandled-38)
dobj(dandled-38, him-39)
nsubj(seared-43, we-41)
aux(seared-43, have-42)
ccomp(threshed-3, seared-43)
dobj(seared-43, him-44)
case(bone-47, to-45)
det(bone-47, the-46)
nmod:to(seared-43, bone-47)
cc(threshed-3, And-49)
advmod(has-58, sure-50)
mark(show-55, if-51)
advmod(show-55, tooth-52)
cc(tooth-52, and-53)
conj:and(tooth-52, nail-54)
advmod(show-55, nail-54)
dep(sure-50, show-55)
dobj(show-55, truth-56)
nsubj(has-58, he-57)
conj:and(threshed-3, has-58)
neg(soul-60, no-59)
dobj(has-58, soul-60)
case(own-63, of-61)
nmod:poss(own-63, his-62)
nmod:of(soul-60, own-63)

(ROOT
  (S
    (NP (DT The) (NN Devil))
    (S
      (NP (PRP he))
      (VP
        (VP (VBD bowed)
          (NP (PRP$ his) (NN head))
          (PP (IN on)
            (NP (PRP$ his) (NN breast))))
        (CC and)
        (VP (VBD rumbled)
          (ADVP (JJ deep)
            (CC and)
            (JJ low)))))
    (: :) (: --) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB all)
        (ADJP (JJ o'er-sib)
          (PP (TO to)
            (NP
              (NP (NNP Adam) (POS 's))
              (NN breed))))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB bid)
                (S
                  (NP (PRP him))
                  (VP (VB go)))))))))
    (. .)))

det(Devil-2, The-1)
dep(bowed-4, Devil-2)
nsubj(bowed-4, he-3)
nsubj(rumbled-11, he-3)
root(ROOT-0, bowed-4)
nmod:poss(head-6, his-5)
dobj(bowed-4, head-6)
case(breast-9, on-7)
nmod:poss(breast-9, his-8)
nmod:on(bowed-4, breast-9)
cc(bowed-4, and-10)
conj:and(bowed-4, rumbled-11)
advmod(rumbled-11, deep-12)
cc(deep-12, and-13)
advmod(rumbled-11, low-14)
conj:and(deep-12, low-14)
nsubj(o'er-sib-21, I-18)
cop(o'er-sib-21, 'm-19)
advmod(o'er-sib-21, all-20)
parataxis(bowed-4, o'er-sib-21)
case(breed-25, to-22)
nmod:poss(breed-25, Adam-23)
case(Adam-23, 's-24)
nmod:to(o'er-sib-21, breed-25)
mark(bid-29, that-26)
nsubj(bid-29, I-27)
aux(bid-29, should-28)
ccomp(o'er-sib-21, bid-29)
nsubj(go-31, him-30)
ccomp(bid-29, go-31)

(ROOT
  (S (CC Yet)
    (ADVP (JJ close))
    (S
      (S
        (NP (PRP we))
        (VP (VBP lie)))
      (, ,)
      (CC and)
      (S
        (S
          (ADVP (RB deep))
          (NP (PRP we))
          (VP (VBP lie)))
        (, ,)
        (CC and)
        (S
          (S
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBD gave)
                  (NP (PRP him))
                  (NP (NN place)))))
            (, ,)
            (NP
              (NP (PRP$ My) (NNS gentlemen))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (ADJP (RB so) (JJ proud))))))
            (VP (MD would)
              (VP (VB flout)
                (NP (PRP me))
                (PP (TO to)
                  (NP (PRP$ my) (NN face))))))
          (: ;)
          (S
            (NP (PRP They))
            (VP (MD 'd)
              (VP (VB call)
                (NP (PRP$ my) (NN house))
                (NP (DT a) (JJ common) (NNS stews)))))
          (CC and)
          (S
            (NP (PRP me))
            (NP (DT a) (JJ careless) (NN host))))))
    (, ,)
    (CC And)
    (S
      (LST (: --))
      (NP (PRP I))
      (VP (MD would) (RB not)
        (VP (VB anger)
          (NP (PRP$ my) (NNS gentlemen))
          (PP (IN for)
            (NP
              (NP (DT the) (NN sake))
              (PP (IN of)
                (NP (DT a) (JJ shiftless) (NN ghost))))))))
    (. .) ('' '')))

cc(lie-4, Yet-1)
advmod(lie-4, close-2)
nsubj(lie-4, we-3)
root(ROOT-0, lie-4)
cc(lie-4, and-6)
advmod(lie-9, deep-7)
nsubj(lie-9, we-8)
conj:and(lie-4, lie-9)
cc(lie-9, and-11)
mark(gave-14, if-12)
nsubj(gave-14, I-13)
advcl(flout-25, gave-14)
iobj(gave-14, him-15)
dobj(gave-14, place-16)
nmod:poss(gentlemen-19, My-18)
nsubj(proud-23, gentlemen-19)
nsubj(flout-25, gentlemen-19)
ref(gentlemen-19, that-20)
cop(proud-23, are-21)
advmod(proud-23, so-22)
acl:relcl(gentlemen-19, proud-23)
aux(flout-25, would-24)
conj:and(lie-4, flout-25)
conj:and(lie-9, flout-25)
dobj(flout-25, me-26)
case(face-29, to-27)
nmod:poss(face-29, my-28)
nmod:to(flout-25, face-29)
nsubj(call-33, They-31)
aux(call-33, 'd-32)
conj:and(lie-9, call-33)
conj:and(flout-25, call-33)
nmod:poss(house-35, my-34)
dep(call-33, house-35)
det(stews-38, a-36)
amod(stews-38, common-37)
dobj(call-33, stews-38)
cc(flout-25, and-39)
dep(host-43, me-40)
det(host-43, a-41)
amod(host-43, careless-42)
conj:and(lie-9, host-43)
conj:and(flout-25, host-43)
cc(lie-4, And-45)
nsubj(anger-50, I-47)
aux(anger-50, would-48)
neg(anger-50, not-49)
conj:And(lie-4, anger-50)
nmod:poss(gentlemen-52, my-51)
dobj(anger-50, gentlemen-52)
case(sake-55, for-53)
det(sake-55, the-54)
nmod:for(anger-50, sake-55)
case(ghost-59, of-56)
det(ghost-59, a-57)
amod(ghost-59, shiftless-58)
nmod:of(sake-55, ghost-59)

(ROOT
  (S
    (S
      (S
        (X (DT The)
          (ADJP (JJ Devil)))
        (NP (PRP he))
        (VP (VBD looked)
          (PP (IN at)
            (NP
              (NP (DT the) (NNP mangled) (NNP Soul))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD prayed)
                    (S
                      (VP (TO to)
                        (VP (VB feel)
                          (NP (DT the) (NN flame))))))))))))
      (, ,)
      (CC And)
      (S
        (S
          (NP (PRP he))
          (VP (VBD thought)
            (PP (IN of)
              (NP (NNP Holy) (NNP Charity)))))
        (, ,)
        (CC but)
        (S
          (NP (PRP he))
          (VP (VBD thought)
            (PP (IN of)
              (NP (PRP$ his) (JJ own) (JJ good) (NN name)))))))
    (: :) (: --) (`` ``)
    (S
      (ADVP (RB Now))
      (NP (PRP ye))
      (VP (MD could)
        (VP (VB haste)
          (NP (PRP$ my) (NN coal)
            (S
              (VP (TO to)
                (VP
                  (VP (VB waste))
                  (, ,)
                  (CC and)
                  (VP (VB sit)
                    (NP (PRP ye))
                    (PRT (RP down))
                    (PP (TO to)
                      (NP
                        (NP (NN fry))
                        (: :)
                        (SQ (VBD Did)
                          (NP (PRP ye))
                          (VP (VB think)
                            (PP (IN of)
                              (NP
                                (NP (DT that) (NN theft))
                                (PP (IN for)
                                  (NP (PRP yourself)))))))))))))))))
    (. ?) ('' '')))

det(Devil-2, The-1)
dep(looked-4, Devil-2)
nsubj(looked-4, he-3)
root(ROOT-0, looked-4)
case(Soul-8, at-5)
det(Soul-8, the-6)
compound(Soul-8, mangled-7)
nmod:at(looked-4, Soul-8)
nsubj(prayed-10, Soul-8)
nsubj:xsubj(feel-12, Soul-8)
ref(Soul-8, that-9)
acl:relcl(Soul-8, prayed-10)
mark(feel-12, to-11)
xcomp(prayed-10, feel-12)
det(flame-14, the-13)
dobj(feel-12, flame-14)
cc(looked-4, And-16)
nsubj(thought-18, he-17)
conj:and(looked-4, thought-18)
case(Charity-21, of-19)
compound(Charity-21, Holy-20)
nmod:of(thought-18, Charity-21)
cc(thought-18, but-23)
nsubj(thought-25, he-24)
conj:and(looked-4, thought-25)
conj:but(thought-18, thought-25)
case(name-30, of-26)
nmod:poss(name-30, his-27)
amod(name-30, own-28)
amod(name-30, good-29)
nmod:of(thought-25, name-30)
advmod(haste-37, Now-34)
nsubj(haste-37, ye-35)
aux(haste-37, could-36)
parataxis(looked-4, haste-37)
nmod:poss(coal-39, my-38)
dobj(haste-37, coal-39)
mark(waste-41, to-40)
acl(coal-39, waste-41)
cc(waste-41, and-43)
acl(coal-39, sit-44)
conj:and(waste-41, sit-44)
dobj(sit-44, ye-45)
compound:prt(sit-44, down-46)
case(fry-48, to-47)
nmod:to(sit-44, fry-48)
aux(think-52, Did-50)
nsubj(think-52, ye-51)
appos(fry-48, think-52)
case(theft-55, of-53)
det(theft-55, that-54)
nmod:of(think-52, theft-55)
case(yourself-57, for-56)
nmod:for(theft-55, yourself-57)

(ROOT
  (S
    (S
      (VP (VBD said)
        (NP (PRP he))))
    (: ;)
    (CC and)
    (S
      (NP (NNP Tomlinson))
      (VP (VBD said) (, ,) (`` ``)
        (ADJP (JJ Ay))))
    (. !) ('' '')))

root(ROOT-0, said-1)
dobj(said-1, he-2)
cc(said-1, and-4)
nsubj(said-6, Tomlinson-5)
conj:and(said-1, said-6)
xcomp(said-6, Ay-9)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNP Devil))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD blew)
              (NP (DT an) (JJ outward) (NN breath))
              (, ,)
              (PP (IN for)
                (NP (PRP$ his) (NN heart)))))))
      (VP (VBD was)
        (ADJP (JJ free)
          (PP (IN from)
            (NP (NN care))))))
    (: :) (: --) (`` ``)
    (S
      (NP (PRP Ye))
      (VP (VBP have)
        (VP (VBN scarce)
          (NP
            (NP (DT the) (NN soul))
            (PP (IN of)
              (NP (DT a) (NN louse)))))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (PRP he))
        (VP (VBD said))))
    (, ,) (`` ``)
    (CC but)
    (S
      (S
        (NP
          (NP (DT the) (NNS roots))
          (PP (IN of)
            (NP (NN sin))))
        (VP (VBP are)
          (ADVP (RB there))))
      (, ,)
      (CC And)
      (S
        (SBAR (IN for)
          (S
            (NP (DT that) (NN sin))
            (VP (MD should)
              (ADVP (RB ye))
              (VP (VB come)
                (PRT (RP in))))))
        (VP (VBD were)
          (NP (PRP I))
          (ADVP
            (NP (DT the) (NN lord))
            (RB alone)))))
    (. .)))

det(Devil-2, The-1)
nsubj(free-13, Devil-2)
nsubj(blew-4, he-3)
acl:relcl(Devil-2, blew-4)
det(breath-7, an-5)
amod(breath-7, outward-6)
dobj(blew-4, breath-7)
case(heart-11, for-9)
nmod:poss(heart-11, his-10)
nmod:for(blew-4, heart-11)
cop(free-13, was-12)
root(ROOT-0, free-13)
case(care-15, from-14)
nmod:from(free-13, care-15)
nsubj(scarce-21, Ye-19)
aux(scarce-21, have-20)
ccomp(free-13, scarce-21)
det(soul-23, the-22)
dobj(scarce-21, soul-23)
case(louse-26, of-24)
det(louse-26, a-25)
nmod:of(soul-23, louse-26)
nsubj(said-30, he-29)
dep(free-13, said-30)
cc(free-13, but-33)
det(roots-35, the-34)
nsubj(are-38, roots-35)
case(sin-37, of-36)
nmod:of(roots-35, sin-37)
conj:but(free-13, are-38)
advmod(are-38, there-39)
cc(are-38, And-41)
mark(come-47, for-42)
det(sin-44, that-43)
nsubj(come-47, sin-44)
aux(come-47, should-45)
advmod(come-47, ye-46)
csubj(I-50, come-47)
compound:prt(come-47, in-48)
cop(I-50, were-49)
conj:but(free-13, I-50)
conj:and(are-38, I-50)
det(lord-52, the-51)
nmod:npmod(alone-53, lord-52)
advmod(I-50, alone-53)

(ROOT
  (S (CC But)
    (NP (JJ sinful) (NN pride))
    (VP (VBZ has)
      (NP
        (NP (NN rule))
        (ADVP (RB inside))
        (: --)
        (CC and)
        (NP
          (NP (NN mightier))
          (PP (IN than)
            (NP (PRP$ my) (JJ own))))))
    (. .)))

cc(has-4, But-1)
amod(pride-3, sinful-2)
nsubj(has-4, pride-3)
root(ROOT-0, has-4)
dobj(has-4, rule-5)
advmod(rule-5, inside-6)
cc(rule-5, and-8)
dobj(has-4, mightier-9)
conj:and(rule-5, mightier-9)
case(own-12, than-10)
nmod:poss(own-12, my-11)
nmod:than(mightier-9, own-12)

(ROOT
  (S
    (NP (NNP Honour)
      (CC and)
      (NNP Wit))
    (, ,)
    (S
      (ADJP (JJ fore-damned)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP sit) (, ,)
              (PP (TO to)
                (NP (DT each) (PRP$ his) (NN priest)
                  (CC and)
                  (NN whore) (: :) (NN Nay)))
              (, ,)
              (ADJP (JJ scarce)
                (SBAR
                  (S
                    (S
                      (NP (PRP I))
                      (VP (VBP dare)
                        (S
                          (NP (PRP myself))
                          (VP (VB go)
                            (ADVP (RB there))))))
                    (, ,)
                    (CC and)
                    (S
                      (NP (PRP you))
                      (NP (PRP they)))))))))))
    (VP (MD 'd)
      (VP (VB torture)
        (NP (JJ sore))))
    (. .)))

nsubj(torture-29, Honour-1)
cc(Honour-1, and-2)
conj:and(Honour-1, Wit-3)
nsubj(torture-29, Wit-3)
dep(torture-29, fore-damned-5)
nsubj(sit-7, they-6)
ccomp(fore-damned-5, sit-7)
case(priest-12, to-9)
det:predet(priest-12, each-10)
nmod:poss(priest-12, his-11)
nmod:to(sit-7, priest-12)
cc(priest-12, and-13)
compound(Nay-16, whore-14)
nmod:to(sit-7, Nay-16)
conj:and(priest-12, Nay-16)
xcomp(sit-7, scarce-18)
nsubj(dare-20, I-19)
ccomp(scarce-18, dare-20)
nsubj(go-22, myself-21)
ccomp(dare-20, go-22)
advmod(go-22, there-23)
cc(dare-20, and-25)
dep(they-27, you-26)
ccomp(scarce-18, they-27)
conj:and(dare-20, they-27)
aux(torture-29, 'd-28)
root(ROOT-0, torture-29)
dobj(torture-29, sore-30)

(ROOT
  (S
    (S
      (NP (PRP Ye))
      (VP (VBP are)
        (NP (DT neither) (NN spirit)
          (CC nor)
          (NN spirk))))
    (, ,) ('' '')
    (NP (PRP he))
    (VP (VBD said) (: ;) (`` ``)
      (S
        (NP (PRP ye))
        (VP (VBP are)
          (ADJP (DT neither) (JJ book)
            (CC nor)
            (JJ brute))
          (: --)
          (S
            (VP (VB Go) (, ,) (VB get)
              (NP (PRP ye))
              (PP
                (ADVP (RB back))
                (TO to)
                (NP (DT the) (NN flesh)))
              (ADVP (RB again))
              (PP (IN for)
                (NP
                  (NP (DT the) (NN sake))
                  (PP (IN of)
                    (NP
                      (NP (NNP Man) (POS 's))
                      (NN repute))))))))))
    (. .)))

nsubj(spirit-4, Ye-1)
cop(spirit-4, are-2)
cc:preconj(spirit-4, neither-3)
ccomp(said-10, spirit-4)
cc(spirit-4, nor-5)
conj:nor(spirit-4, spirk-6)
ccomp(said-10, spirk-6)
nsubj(said-10, he-9)
root(ROOT-0, said-10)
nsubj(book-16, ye-13)
nsubj(brute-18, ye-13)
cop(book-16, are-14)
cc:preconj(book-16, neither-15)
ccomp(said-10, book-16)
cc(book-16, nor-17)
ccomp(said-10, brute-18)
conj:nor(book-16, brute-18)
ccomp(book-16, Go-20)
dep(Go-20, get-22)
dobj(Go-20, ye-23)
advmod(flesh-27, back-24)
case(flesh-27, to-25)
det(flesh-27, the-26)
nmod:to(Go-20, flesh-27)
advmod(Go-20, again-28)
case(sake-31, for-29)
det(sake-31, the-30)
nmod:for(Go-20, sake-31)
case(repute-35, of-32)
nmod:poss(repute-35, Man-33)
case(Man-33, 's-34)
nmod:of(sake-31, repute-35)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB all)
        (ADJP (JJ o'er-sib)
          (PP (TO to)
            (NP
              (NP (NNP Adam) (POS 's))
              (NN breed))))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB mock)
                (NP (PRP$ your) (NN pain))))))))
    (, ,)
    (CC But)
    (S
      (S
        (VP (VB look)
          (SBAR (IN that)
            (S
              (NP (PRP ye))
              (VP (VBP win)
                (PP (TO to)
                  (NP (JJR worthier) (NN sin) (NN ere))))))))
      (NP (PRP ye))
      (VP (VBP come)
        (ADVP (RB back) (RB again))))
    (. .)))

nsubj(o'er-sib-4, I-1)
cop(o'er-sib-4, 'm-2)
advmod(o'er-sib-4, all-3)
root(ROOT-0, o'er-sib-4)
case(breed-8, to-5)
nmod:poss(breed-8, Adam-6)
case(Adam-6, 's-7)
nmod:to(o'er-sib-4, breed-8)
mark(mock-12, that-9)
nsubj(mock-12, I-10)
aux(mock-12, should-11)
ccomp(o'er-sib-4, mock-12)
nmod:poss(pain-14, your-13)
dobj(mock-12, pain-14)
cc(o'er-sib-4, But-16)
dep(come-26, look-17)
mark(win-20, that-18)
nsubj(win-20, ye-19)
ccomp(look-17, win-20)
case(ere-24, to-21)
amod(ere-24, worthier-22)
compound(ere-24, sin-23)
nmod:to(win-20, ere-24)
nsubj(come-26, ye-25)
conj:but(o'er-sib-4, come-26)
advmod(again-28, back-27)
advmod(come-26, again-28)

(ROOT
  (S
    (S
      (S
        (VP (VB Get)
          (ADVP (RB hence))))
      (, ,)
      (NP (DT the) (NN hearse))
      (VP (VBZ is)
        (PP (IN at)
          (NP (PRP$ your) (NN door)))))
    (: --)
    (S
      (NP (DT the) (JJ grim) (JJ black) (NNS stallions))
      (VP (VBP wait)))
    (: --)
    (S
      (NP (PRP They))
      (VP (VBP bear)
        (NP (PRP$ your) (NN clay)
          (S
            (VP (TO to)
              (VP (VB place)
                (NP (NN to-day))))))))
    (. .)))

ccomp(door-9, Get-1)
advmod(Get-1, hence-2)
det(hearse-5, the-4)
nsubj(door-9, hearse-5)
cop(door-9, is-6)
case(door-9, at-7)
nmod:poss(door-9, your-8)
root(ROOT-0, door-9)
det(stallions-14, the-11)
amod(stallions-14, grim-12)
amod(stallions-14, black-13)
nsubj(wait-15, stallions-14)
parataxis(door-9, wait-15)
nsubj(bear-18, They-17)
parataxis(door-9, bear-18)
nmod:poss(clay-20, your-19)
dobj(bear-18, clay-20)
mark(place-22, to-21)
acl(clay-20, place-22)
dobj(place-22, to-day-23)

(ROOT
  (FRAG
    (NP (NN Speed))
    (, ,)
    (SBAR (IN lest)
      (S
        (NP (PRP ye))
        (VP (VBP come)
          (ADJP (RB too) (JJ late)))))
    (. !)))

root(ROOT-0, Speed-1)
mark(come-5, lest-3)
nsubj(come-5, ye-4)
dep(Speed-1, come-5)
advmod(late-7, too-6)
xcomp(come-5, late-7)

(ROOT
  (S
    (S
      (S
        (S
          (VP (VB Go)
            (PRT (RP back))
            (PP (TO to)
              (NP (NNP Earth)))
            (PP (IN with)
              (NP (DT a) (JJ lip) (NN unsealed))))
          (: --))
        (VP (VBP go)
          (ADVP (RB back))
          (PP (IN with)
            (NP (DT an) (JJ open) (NN eye)))))
      (, ,)
      (CC And)
      (S
        (SBAR
          (SBAR
            (S
              (VP (VBP carry)
                (NP (PRP$ my) (NN word))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NNPS Sons))
                    (PP (IN of)
                      (NP (NN Men))))))))
          (CC or)
          (SBAR
            (X (RB ever))
            (S
              (NP (PRP ye))
              (VP (VBP come)
                (S
                  (VP (TO to)
                    (VP (VB die) (: :)
                      (S
                        (NP (DT That))
                        (NP
                          (NP (DT the) (NN sin))
                          (SBAR
                            (S
                              (NP (PRP they))
                              (VP (VBP do)
                                (PP (IN by)
                                  (NP (CD two)
                                    (CC and)
                                    (CD two)))))))))))))))
        (NP (PRP they))
        (VP (MD must)
          (VP (VB pay)
            (PP (IN for)
              (NP (CD one)))
            (PP (IN by)
              (NP (CD one)))))))
    (: --)
    (S
      (NP (CC And))
      (: ...)
      (ADVP
        (NP (DT the) (NN God))
        (RB that))
      (NP (PRP you))
      (VP (VBD took)
        (PP (IN from)
          (NP (DT a) (JJ printed) (NN book)))
        (VP (VB be)
          (PP (IN with)
            (NP
              (NP (PRP you))
              (, ,)
              (NP (NNP Tomlinson)))))))
    (. !) ('' '')))

csubj(go-10, Go-1)
compound:prt(Go-1, back-2)
case(Earth-4, to-3)
nmod:to(Go-1, Earth-4)
case(unsealed-8, with-5)
det(unsealed-8, a-6)
amod(unsealed-8, lip-7)
nmod:with(Go-1, unsealed-8)
root(ROOT-0, go-10)
advmod(go-10, back-11)
case(eye-15, with-12)
det(eye-15, an-13)
amod(eye-15, open-14)
nmod:with(go-10, eye-15)
cc(go-10, And-17)
advcl(pay-44, carry-18)
nmod:poss(word-20, my-19)
dobj(carry-18, word-20)
case(Sons-23, to-21)
det(Sons-23, the-22)
nmod:to(carry-18, Sons-23)
case(Men-25, of-24)
nmod:of(Sons-23, Men-25)
cc(carry-18, or-26)
dep(come-29, ever-27)
nsubj(come-29, ye-28)
nsubj:xsubj(die-31, ye-28)
conj:or(carry-18, come-29)
advcl(pay-44, come-29)
mark(die-31, to-30)
xcomp(come-29, die-31)
nsubj(sin-35, That-33)
det(sin-35, the-34)
parataxis(die-31, sin-35)
nsubj(do-37, they-36)
acl:relcl(sin-35, do-37)
case(two-39, by-38)
nmod:by(do-37, two-39)
cc(two-39, and-40)
nmod:by(do-37, two-41)
conj:and(two-39, two-41)
nsubj(pay-44, they-42)
aux(pay-44, must-43)
conj:and(go-10, pay-44)
case(one-46, for-45)
nmod:for(pay-44, one-46)
case(one-48, by-47)
nmod:by(pay-44, one-48)
nsubj(took-56, And-50)
det(God-53, the-52)
nmod:npmod(that-54, God-53)
advmod(took-56, that-54)
nsubj(took-56, you-55)
parataxis(go-10, took-56)
case(book-60, from-57)
det(book-60, a-58)
amod(book-60, printed-59)
nmod:from(took-56, book-60)
cop(you-63, be-61)
case(you-63, with-62)
dep(took-56, you-63)
appos(you-63, Tomlinson-65)

(ROOT
  (S
    (S
      (NP
        (NP (NNP L'ENVOI) (NNP TO))
        (`` ``)
        (S
          (NP (NNP LIFE) (POS 'S))
          (VP (VBP HANDICAP)))
        ('' ''))
      (NP (PRP$ My) (JJ new-cut) (NN ashlar))
      (VP (VBZ takes)
        (NP
          (NP (DT the) (NN light))
          (SBAR
            (WHADVP (WRB Where)
              (ADJP (JJ crimson-blank)))
            (S
              (NP (DT the) (NNS windows))
              (VP (VBP flare)))))))
    (: ;)
    (S
      (PP (IN By)
        (NP (PRP$ my) (JJ own) (NN work)))
      (, ,)
      (PP (IN before)
        (NP (DT the) (NN night)))
      (, ,)
      (NP (NNP Great) (NNP Overseer) (PRP I))
      (VP (VBP make)
        (NP (PRP$ my) (NN prayer))))
    (. .)))

compound(TO-2, L'ENVOI-1)
nsubj(takes-11, TO-2)
nsubj(HANDICAP-6, LIFE-4)
case(LIFE-4, 'S-5)
dep(TO-2, HANDICAP-6)
nmod:poss(ashlar-10, My-8)
amod(ashlar-10, new-cut-9)
nsubj(takes-11, ashlar-10)
root(ROOT-0, takes-11)
det(light-13, the-12)
dobj(takes-11, light-13)
advmod(flare-18, Where-14)
dep(Where-14, crimson-blank-15)
det(windows-17, the-16)
nsubj(flare-18, windows-17)
acl:relcl(light-13, flare-18)
case(work-23, By-20)
nmod:poss(work-23, my-21)
amod(work-23, own-22)
nmod:by(make-32, work-23)
case(night-27, before-25)
det(night-27, the-26)
nmod:before(make-32, night-27)
compound(Overseer-30, Great-29)
nsubj(make-32, Overseer-30)
dep(Overseer-30, I-31)
parataxis(takes-11, make-32)
nmod:poss(prayer-34, my-33)
dobj(make-32, prayer-34)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VB be)
          (ADJP (JJ good)
            (PP (IN in)
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBD wrought) (, ,)
                    (S
                      (NP (NNP Thy) (NN hand))
                      (VP (VBN compelled)
                        (NP (PRP it))
                        (, ,)
                        (PP
                          (NP
                            (NP (NNP Master) (, ,) (NNP Thine))
                            (: ;)
                            (SBAR
                              (WHADVP (WRB Where))
                              (S
                                (NP (PRP I))
                                (VP (VBP have)
                                  (VP (VBN failed)
                                    (S
                                      (VP (TO to)
                                        (VP (VB meet)
                                          (SBAR
                                            (S
                                              (NP (NNP Thy))
                                              (VP (VBD thought)
                                                (SBAR
                                                  (S
                                                    (NP (PRP I))
                                                    (VP (VBP know))))))))))))))
                            (, ,))
                          (IN through)
                          (NP (NNP Thee)))))))))))))
    (, ,)
    (NP (DT the) (NN blame))
    (VP (VBZ is)
      (NP (NN mine)))
    (. .)))

mark(be-3, If-1)
expl(be-3, there-2)
advcl(is-35, be-3)
xcomp(be-3, good-4)
mark(wrought-8, in-5)
mark(wrought-8, that-6)
nsubj(wrought-8, I-7)
advcl(good-4, wrought-8)
compound(hand-11, Thy-10)
nsubj(compelled-12, hand-11)
dep(wrought-8, compelled-12)
dobj(compelled-12, it-13)
compound(Thine-17, Master-15)
nmod:through(compelled-12, Thine-17)
advmod(failed-22, Where-19)
nsubj(failed-22, I-20)
nsubj:xsubj(meet-24, I-20)
aux(failed-22, have-21)
acl:relcl(Thine-17, failed-22)
mark(meet-24, to-23)
xcomp(failed-22, meet-24)
nsubj(thought-26, Thy-25)
ccomp(meet-24, thought-26)
nsubj(know-28, I-27)
ccomp(thought-26, know-28)
case(Thine-17, through-30)
dep(Thine-17, Thee-31)
det(blame-34, the-33)
nsubj(is-35, blame-34)
root(ROOT-0, is-35)
dep(is-35, mine-36)

(ROOT
  (S
    (NP
      (NP
        (NP (CD One) (NN instant) (POS 's))
        (NN toil))
      (PP (TO to)
        (NP (NNP Thee))))
    (VP (VBD denied)
      (S
        (NP (NNP Stands))
        (NP
          (NP (DT all) (NN Eternity) (POS 's))
          (NN offence)))
      (, ,)
      (PP (IN Of)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBD did)
              (PP (IN with)
                (NP (NNP Thee)))
              (S
                (VP (TO to)
                  (VP (VB guide)
                    (PP (TO To)
                      (NP (NNP Thee))))))))))
      (, ,)
      (PP (IN through)
        (NP (NNP Thee)))
      (, ,)
      (VP (VB be)
        (ADJP (JJ excellence))))
    (. .)))

nummod(instant-2, One-1)
nmod:poss(toil-4, instant-2)
case(instant-2, 's-3)
nsubj(denied-7, toil-4)
case(Thee-6, to-5)
nmod:to(toil-4, Thee-6)
root(ROOT-0, denied-7)
nsubj(offence-12, Stands-8)
det(Eternity-10, all-9)
nmod:poss(offence-12, Eternity-10)
case(Eternity-10, 's-11)
xcomp(denied-7, offence-12)
mark(did-17, Of-14)
mark(did-17, that-15)
nsubj(did-17, I-16)
nsubj:xsubj(guide-21, I-16)
advcl(denied-7, did-17)
case(Thee-19, with-18)
nmod:with(did-17, Thee-19)
mark(guide-21, to-20)
xcomp(did-17, guide-21)
case(Thee-23, To-22)
nmod:to(guide-21, Thee-23)
case(Thee-26, through-25)
nmod:through(denied-7, Thee-26)
cop(excellence-29, be-28)
dep(denied-7, excellence-29)

(ROOT
  (UCP
    (SBAR
      (WHNP (WP Who))
      (PRN (, ,)
        (SBAR (IN lest)
          (S
            (NP (DT all))
            (VP (VBD thought)
              (PP (IN of)
                (NP (NNP Eden) (NNP fade))))))
        (, ,))
      (S
        (VP (VBZ Bring) (`` `)
          (NP
            (NP (NNP st) (NNP Eden))
            (PP (TO to)
              (NP
                (NP (DT the) (NN craftsman) (POS 's))
                (NN brain)))))))
    (, ,)
    (SINV
      (VP (VB Godlike)
        (S
          (VP (TO to)
            (VP (VB muse)
              (NP (NN o'er))))))
      (NP (PRP$ his) (JJ own) (NN trade)))
    (CC And)
    (S
      (NP (NNP Manlike))
      (VP (VBP stand)
        (PP (IN with)
          (NP (NNP God)))
        (ADVP (RB again))))
    (. .)))

nsubj(Bring-10, Who-1)
mark(thought-5, lest-3)
nsubj(thought-5, all-4)
dep(Bring-10, thought-5)
case(fade-8, of-6)
compound(fade-8, Eden-7)
nmod:of(thought-5, fade-8)
root(ROOT-0, Bring-10)
compound(Eden-13, st-12)
dobj(Bring-10, Eden-13)
case(brain-18, to-14)
det(craftsman-16, the-15)
nmod:poss(brain-18, craftsman-16)
case(craftsman-16, 's-17)
nmod:to(Eden-13, brain-18)
conj:and(Bring-10, Godlike-20)
mark(muse-22, to-21)
xcomp(Godlike-20, muse-22)
dobj(muse-22, o'er-23)
nmod:poss(trade-26, his-24)
amod(trade-26, own-25)
nsubj(Godlike-20, trade-26)
nsubj:xsubj(muse-22, trade-26)
cc(Bring-10, And-27)
nsubj(stand-29, Manlike-28)
conj:and(Bring-10, stand-29)
case(God-31, with-30)
nmod:with(stand-29, God-31)
advmod(stand-29, again-32)

(ROOT
  (NP
    (NP
      (NP (DT The) (NN depth)
        (CC and)
        (NN dream))
      (PP (IN of)
        (NP (PRP$ my) (NN desire))))
    (, ,)
    (NP
      (NP (DT The) (JJ bitter) (NNS paths))
      (SBAR
        (WHADVP (WRB wherein))
        (S
          (NP (PRP I))
          (VP (VBP stray)))))
    (, ,)
    (S
      (NP (PRP Thou))
      (VP (VBP knowest)
        (SBAR
          (WHNP (WP Who))
          (S
            (NP (NN hast))
            (VP (VBD made)
              (NP (DT the) (NN Fire)))))))
    (, ,)
    (S
      (NP (PRP Thou))
      (VP (VBP knowest)
        (SBAR
          (WHNP (WP Who))
          (S
            (NP (NN hast))
            (VP (VBD made)
              (NP (DT the) (NNP Clay)))))))
    (. !)))

det(depth-2, The-1)
root(ROOT-0, depth-2)
cc(depth-2, and-3)
conj:and(depth-2, dream-4)
case(desire-7, of-5)
nmod:poss(desire-7, my-6)
nmod:of(depth-2, desire-7)
det(paths-11, The-9)
amod(paths-11, bitter-10)
appos(depth-2, paths-11)
advmod(stray-14, wherein-12)
nsubj(stray-14, I-13)
acl:relcl(paths-11, stray-14)
nsubj(knowest-17, Thou-16)
dep(depth-2, knowest-17)
dobj(made-20, Who-18)
nsubj(made-20, hast-19)
ccomp(knowest-17, made-20)
det(Fire-22, the-21)
dobj(made-20, Fire-22)
nsubj(knowest-25, Thou-24)
dep(depth-2, knowest-25)
dobj(made-28, Who-26)
nsubj(made-28, hast-27)
ccomp(knowest-25, made-28)
det(Clay-30, the-29)
dobj(made-28, Clay-30)

(ROOT
  (S
    (NP
      (NP (CD One) (NN stone))
      (RRC
        (NP
          (NP (DT the) (JJR more) (NNS swings))
          (PP (TO to)
            (NP (PRP$ her) (NN place))))
        (PP (IN In)
          (NP
            (NP (DT that) (NNP dread) (NNP Temple))
            (PP (IN of)
              (NP (NNP Thy) (NNP Worth))))))
      (PRN (: --)
        (S
          (NP (PRP It))
          (VP (VBZ is)
            (ADJP (JJ enough))
            (SBAR (IN that)
              (S
                (PP (IN through)
                  (NP (NNP Thy) (NN grace)))
                (NP (PRP I))
                (VP (VBD saw))))))))
    (VP (VBP naught)
      (ADJP (JJ common))
      (PP (IN on)
        (NP (NNP Thy) (NN earth))))
    (. .)))

nummod(stone-2, One-1)
det(Temple-12, stone-2)
nsubj(naught-26, stone-2)
det(swings-5, the-3)
amod(swings-5, more-4)
acl:relcl(stone-2, swings-5)
case(place-8, to-6)
nmod:poss(place-8, her-7)
nmod:to(swings-5, place-8)
case(Temple-12, In-9)
ref(stone-2, that-10)
compound(Temple-12, dread-11)
nmod:in(swings-5, Temple-12)
case(Worth-15, of-13)
compound(Worth-15, Thy-14)
nmod:of(Temple-12, Worth-15)
nsubj(enough-19, It-17)
cop(enough-19, is-18)
dep(stone-2, enough-19)
mark(saw-25, that-20)
case(grace-23, through-21)
compound(grace-23, Thy-22)
nmod:through(saw-25, grace-23)
nsubj(saw-25, I-24)
ccomp(enough-19, saw-25)
root(ROOT-0, naught-26)
xcomp(naught-26, common-27)
case(earth-30, on-28)
compound(earth-30, Thy-29)
nmod:on(naught-26, earth-30)

(ROOT
  (S
    (S
      (VP (VB Take)
        (NP (RB not) (DT that) (NN vision))
        (PP (IN from)
          (NP (PRP$ my) (NN ken)))))
    (: ;)
    (S
      (INTJ (UH Oh))
      (NP (NN whatsoe'er))
      (VP (MD may)
        (VP (VB spoil)
          (CC or)
          (VB speed))
        (, ,)
        (VP (VB Help)
          (S
            (NP (PRP me))
            (VP (TO to)
              (VP (VB need)
                (NP (DT no) (NN aid))
                (PP (IN from)
                  (NP (NNS men)))
                (SBAR (IN That)
                  (S
                    (NP (PRP I))
                    (VP (MD may)
                      (VP (VB help)
                        (NP (JJ such) (NNS men))
                        (PP (IN as)
                          (NP (NN need)))))))))))))
    (. !)))

root(ROOT-0, Take-1)
neg(vision-4, not-2)
det(vision-4, that-3)
dobj(Take-1, vision-4)
case(ken-7, from-5)
nmod:poss(ken-7, my-6)
nmod:from(Take-1, ken-7)
discourse(spoil-12, Oh-9)
nsubj(spoil-12, whatsoe'er-10)
nsubj(speed-14, whatsoe'er-10)
aux(spoil-12, may-11)
parataxis(Take-1, spoil-12)
cc(spoil-12, or-13)
parataxis(Take-1, speed-14)
conj:or(spoil-12, speed-14)
dep(spoil-12, Help-16)
dobj(Help-16, me-17)
nsubj:xsubj(need-19, me-17)
mark(need-19, to-18)
xcomp(Help-16, need-19)
neg(aid-21, no-20)
dobj(need-19, aid-21)
case(men-23, from-22)
nmod:from(need-19, men-23)
mark(help-27, That-24)
nsubj(help-27, I-25)
aux(help-27, may-26)
ccomp(need-19, help-27)
amod(men-29, such-28)
dobj(help-27, men-29)
case(need-31, as-30)
nmod:as(help-27, need-31)

(ROOT
  (FRAG
    (NP (NNP L'ENVOI))
    (SBAR
      (S
        (NP (EX There))
        (VP (VBZ 's)
          (NP (DT a) (NN whisper))
          (PP (IN down)
            (NP
              (NP (DT the) (NN field))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (S
                    (NP (DT the) (NN year))
                    (VP (VBZ has)
                      (VP (VBN shot)
                        (NP (PRP$ her) (NN yield)))))
                  (, ,)
                  (CC And)
                  (S
                    (NP (DT the) (NNS ricks))
                    (VP (VBP stand)
                      (ADJP (JJ gray)
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN sun))
                            (, ,)
                            (NP (NN Singing)))))))))))
          (: :))))
    (: --) (`` ``)
    (S
      (S
        (PP (IN Over)
          (NP
            (NP (RB then))
            (, ,)
            (VP (VBN come)
              (PRT (RP over)))))
        (, ,)
        (X (IN for))
        (NP (DT the) (NN bee))
        (VP (VBZ has)
          (VP (VBN quit)
            (NP (DT the) (NN clover)))))
      (, ,)
      (CC And)
      (S
        (NP (PRP$ your) (JJ English) (NN summer))
        (VP (VBZ 's)
          (VP (VBN done)))))
    (. .) ('' '')))

root(ROOT-0, L'ENVOI-1)
expl('s-3, There-2)
dep(L'ENVOI-1, 's-3)
det(whisper-5, a-4)
nsubj('s-3, whisper-5)
case(field-8, down-6)
det(field-8, the-7)
nmod:down('s-3, field-8)
advmod(shot-13, where-9)
det(year-11, the-10)
nsubj(shot-13, year-11)
aux(shot-13, has-12)
acl:relcl(field-8, shot-13)
nmod:poss(yield-15, her-14)
dobj(shot-13, yield-15)
cc(shot-13, And-17)
det(ricks-19, the-18)
nsubj(stand-20, ricks-19)
acl:relcl(field-8, stand-20)
conj:and(shot-13, stand-20)
xcomp(stand-20, gray-21)
case(sun-24, to-22)
det(sun-24, the-23)
nmod:to(gray-21, sun-24)
appos(sun-24, Singing-26)
case(then-31, Over-30)
nmod:over(quit-40, then-31)
acl(then-31, come-33)
compound:prt(come-33, over-34)
dep(quit-40, for-36)
det(bee-38, the-37)
nsubj(quit-40, bee-38)
aux(quit-40, has-39)
dep(L'ENVOI-1, quit-40)
det(clover-42, the-41)
dobj(quit-40, clover-42)
cc(quit-40, And-44)
nmod:poss(summer-47, your-45)
amod(summer-47, English-46)
nsubjpass(done-49, summer-47)
auxpass(done-49, 's-48)
dep(L'ENVOI-1, done-49)
conj:and(quit-40, done-49)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (VP (VBN heard)
          (NP
            (NP
              (NP (DT the) (NN beat))
              (PP (IN of)
                (NP (DT the) (JJ off-shore) (NN wind))))
            (, ,)
            (CC And)
            (NP
              (NP (DT the) (NN thresh))
              (PP (IN of)
                (NP (DT the) (JJ deep-sea) (NN rain))))))))
    (: ;)
    (S
      (NP (PRP You))
      (VP (VBP have)
        (VP (VBN heard)
          (NP
            (NP (DT the) (NN song))
            (PRN (: --)
              (FRAG
                (WHADVP (WRB how))
                (ADJP (JJ long))))))))
    (. !)))

nsubj(heard-3, You-1)
aux(heard-3, have-2)
root(ROOT-0, heard-3)
det(beat-5, the-4)
dobj(heard-3, beat-5)
case(wind-9, of-6)
det(wind-9, the-7)
amod(wind-9, off-shore-8)
nmod:of(beat-5, wind-9)
cc(beat-5, And-11)
det(thresh-13, the-12)
dobj(heard-3, thresh-13)
conj:and(beat-5, thresh-13)
case(rain-17, of-14)
det(rain-17, the-15)
amod(rain-17, deep-sea-16)
nmod:of(thresh-13, rain-17)
nsubj(heard-21, You-19)
aux(heard-21, have-20)
parataxis(heard-3, heard-21)
det(song-23, the-22)
dobj(heard-21, song-23)
dep(long-26, how-25)
dep(song-23, long-26)

(ROOT
  (FRAG
    (WHNP (WRB how) (RB long))
    (. ?)))

advmod(long-2, how-1)
root(ROOT-0, long-2)

(ROOT
  (S
    (VP (VB Pull)
      (PRT (RP out))
      (PP (IN on)
        (NP
          (NP (DT the) (NN trail))
          (ADVP (RB again)))))
    (. !)))

root(ROOT-0, Pull-1)
compound:prt(Pull-1, out-2)
case(trail-5, on-3)
det(trail-5, the-4)
nmod:on(Pull-1, trail-5)
advmod(trail-5, again-6)

(ROOT
  (S
    (S
      (NP (NNP Ha) (POS '))
      (VP (VBN done)
        (PP (IN with)
          (NP
            (NP (DT the) (NNPS Tents))
            (PP (IN of)
              (NP
                (NP (NNP Shem))
                (, ,)
                (NP
                  (ADJP (RB dear))
                  (NNS lass))))))))
    (PRN (, ,)
      (S
        (NP (PRP We))
        (VP (VBP 've)
          (VP (VBN seen)
            (NP (DT the) (NNS seasons))
            (PP (IN through)))))
      (, ,))
    (CC And)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (NN time)
          (S
            (VP (TO to)
              (VP
                (VP (VB turn)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (JJ old) (NN trail))
                      (, ,)
                      (NP (PRP$ our) (JJ own) (NN trail))
                      (, ,)
                      (NP (DT the) (NN out) (NN trail))
                      (, ,)
                      (NP (NNP Pull))))
                  (ADVP (RB out)))
                (, ,)
                (VP (VB pull)
                  (PRT (RP out))
                  (, ,)
                  (PP (IN on)
                    (NP (DT the) (JJ Long) (NN Trail))))
                (: --)
                (NP
                  (NP (DT the) (NN trail))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ is)
                        (ADVP (RB always))
                        (ADJP (JJ new))))))))))))
    (. .)))

nsubj(done-3, Ha-1)
case(Ha-1, '-2)
root(ROOT-0, done-3)
case(Tents-6, with-4)
det(Tents-6, the-5)
nmod:with(done-3, Tents-6)
case(Shem-8, of-7)
nmod:of(Tents-6, Shem-8)
amod(lass-11, dear-10)
appos(Shem-8, lass-11)
nsubj(seen-15, We-13)
aux(seen-15, 've-14)
dep(done-3, seen-15)
det(seasons-17, the-16)
dobj(seen-15, seasons-17)
nmod(seen-15, through-18)
cc(done-3, And-20)
nsubj(time-23, it-21)
cop(time-23, 's-22)
conj:and(done-3, time-23)
mark(turn-25, to-24)
acl(time-23, turn-25)
case(trail-29, on-26)
det(trail-29, the-27)
amod(trail-29, old-28)
nmod:on(turn-25, trail-29)
nmod:poss(trail-33, our-31)
amod(trail-33, own-32)
appos(trail-29, trail-33)
det(trail-37, the-35)
compound(trail-37, out-36)
appos(trail-29, trail-37)
appos(trail-29, Pull-39)
advmod(turn-25, out-40)
dep(turn-25, pull-42)
compound:prt(pull-42, out-43)
case(Trail-48, on-45)
det(Trail-48, the-46)
amod(Trail-48, Long-47)
nmod:on(pull-42, Trail-48)
det(trail-51, the-50)
dobj(turn-25, trail-51)
nsubj(new-55, trail-51)
ref(trail-51, that-52)
cop(new-55, is-53)
advmod(new-55, always-54)
acl:relcl(trail-51, new-55)

(ROOT
  (S
    (S
      (S
        (S
          (NP (PRP It))
          (VP (VBZ 's)
            (ADJP (JJ North))
            (S
              (S
                (NP (PRP you))
                (VP (MD may)
                  (VP (VB run)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (JJ rime-ringed) (NN sun))
                        (, ,)
                        (CC Or)
                        (NP (NNP South))))
                    (PP (TO to)
                      (NP (DT the) (JJ blind)
                        (NP (NNP Horn) (POS 's))
                        (NN hate))))))
              (: ;)
              (CC Or)
              (FRAG
                (NP
                  (NP (NNP East))
                  (ADVP (RB all)
                    (NP (DT the) (NN way))
                    (PP (IN into)
                      (NP (NNP Mississippi) (NNP Bay)))))))))
        (PRN (, ,)
          (S
            (S (CC Or)
              (NP
                (NP (NNP West))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NNP Golden) (NNP Gate))
                    (: ;)
                    (SBAR
                      (WHADVP (WRB Where))
                      (S
                        (NP (DT the) (NN blindest) (NNS bluffs))
                        (VP (VBP hold)
                          (ADJP (JJ good))
                          (, ,)
                          (S
                            (ADJP (RB dear)))))))))
              (VP (VBZ lass)))
            (, ,)
            (CC And)
            (S
              (NP (DT the) (NN wildest) (NNS tales))
              (VP (VBP are)
                (ADJP (JJ true)))))
          (, ,)))
      (CC And)
      (S
        (NP (DT the) (NNS men) (NN bulk))
        (ADJP (JJ big)
          (PP (IN on)
            (NP
              (NP (DT the) (JJ old) (NN trail))
              (, ,)
              (NP
                (NP (PRP$ our) (JJ own) (NN trail))
                (, ,)
                (NP (DT the)
                  (ADJP (RB out))
                  (NN trail))))))))
    (, ,)
    (CC And)
    (S
      (NP (NN life))
      (VP (VBZ runs)
        (ADJP (JJ large)
          (PP (IN on)
            (NP
              (NP (DT the) (JJ Long) (NN Trail))
              (: --)
              (NP
                (NP (DT the) (NN trail))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (ADVP (RB always))
                      (ADJP (JJ new)))))))))))
    (. .)))

nsubj(North-3, It-1)
nsubj(big-58, It-1)
cop(North-3, 's-2)
root(ROOT-0, North-3)
nsubj(run-6, you-4)
aux(run-6, may-5)
xcomp(North-3, run-6)
case(sun-10, to-7)
det(sun-10, the-8)
amod(sun-10, rime-ringed-9)
nmod:to(run-6, sun-10)
cc(sun-10, Or-12)
nmod:to(run-6, South-13)
conj:or(sun-10, South-13)
case(hate-19, to-14)
det(hate-19, the-15)
amod(hate-19, blind-16)
nmod:poss(hate-19, Horn-17)
case(Horn-17, 's-18)
nmod:to(run-6, hate-19)
cc(run-6, Or-21)
xcomp(North-3, East-22)
conj:or(run-6, East-22)
advmod(East-22, all-23)
det(way-25, the-24)
nmod:npmod(all-23, way-25)
case(Bay-28, into-26)
compound(Bay-28, Mississippi-27)
nmod:into(all-23, Bay-28)
cc(lass-45, Or-30)
nsubj(lass-45, West-31)
case(Gate-35, to-32)
det(Gate-35, the-33)
compound(Gate-35, Golden-34)
nmod:to(West-31, Gate-35)
advmod(hold-41, Where-37)
det(bluffs-40, the-38)
compound(bluffs-40, blindest-39)
nsubj(hold-41, bluffs-40)
acl:relcl(Gate-35, hold-41)
xcomp(hold-41, good-42)
xcomp(hold-41, dear-44)
dep(North-3, lass-45)
cc(lass-45, And-47)
det(tales-50, the-48)
compound(tales-50, wildest-49)
nsubj(true-52, tales-50)
cop(true-52, are-51)
dep(North-3, true-52)
conj:and(lass-45, true-52)
cc(North-3, And-54)
det(bulk-57, the-55)
compound(bulk-57, men-56)
dep(big-58, bulk-57)
conj:and(North-3, big-58)
case(trail-62, on-59)
det(trail-62, the-60)
amod(trail-62, old-61)
nmod:on(big-58, trail-62)
nmod:poss(trail-66, our-64)
amod(trail-66, own-65)
appos(trail-62, trail-66)
det(trail-70, the-68)
amod(trail-70, out-69)
appos(trail-66, trail-70)
cc(North-3, And-72)
nsubj(runs-74, life-73)
conj:and(North-3, runs-74)
xcomp(runs-74, large-75)
case(Trail-79, on-76)
det(Trail-79, the-77)
amod(Trail-79, Long-78)
nmod:on(large-75, Trail-79)
det(trail-82, the-81)
dep(Trail-79, trail-82)
nsubj(new-86, trail-82)
ref(trail-82, that-83)
cop(new-86, is-84)
advmod(new-86, always-85)
acl:relcl(trail-82, new-86)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNS days))
        (VP (VBP are)
          (ADJP (JJ sick)
            (CC and)
            (JJ cold))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NNS skies))
        (VP (VBP are)
          (ADJP (JJ gray)
            (CC and)
            (JJ old)))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (JJ twice-breathed) (NNS airs) (NN blow))
      (VP (VBP damp)))
    (: ;)
    (S (CC And)
      (NP (PRP I))
      (VP (MD 'd)
        (VP (VB sell)
          (NP (PRP$ my) (JJ tired) (NN soul))
          (PP (IN for)
            (NP
              (NP (DT the) (JJ bucking) (JJ beam-sea) (NN roll))
              (PP (IN Of)
                (NP (DT a) (JJ black) (NNP Bilbao) (NN tramp))))))))
    (: ;)
    (S
      (PP (IN With)
        (NP
          (NP (PRP$ her) (NN load-line))
          (PP (IN over)
            (NP (PRP$ her) (NN hatch)))))
      (, ,)
      (ADJP (RB dear))
      (VP (VBZ lass)))
    (, ,)
    (CC And)
    (S
      (NP (DT a) (JJ drunken) (NNP Dago) (NN crew))
      (, ,)
      (CC And)
      (NP (PRP$ her) (NN nose))
      (VP (VBD held)
        (NP
          (ADVP (RB down)
            (PP (IN on)
              (NP
                (NP (DT the) (JJ old) (NN trail))
                (, ,)
                (NP (PRP$ our) (JJ own) (NN trail))
                (, ,))))
          (DT the)
          (ADJP (RB out))
          (NN trail))
        (PP (IN From)
          (NP
            (NP (NNP Cadiz) (NNP Bar))
            (PP (IN on)
              (NP
                (NP (DT the) (JJ Long) (NN Trail))
                (: --)
                (NP
                  (NP (DT the) (NN trail))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ is)
                        (ADVP (RB always))
                        (ADJP (JJ new))))))))))))
    (. .)))

det(days-2, The-1)
nsubj(sick-4, days-2)
nsubj(cold-6, days-2)
nsubj(lass-49, days-2)
cop(sick-4, are-3)
root(ROOT-0, sick-4)
cc(sick-4, and-5)
conj:and(sick-4, cold-6)
cc(sick-4, and-8)
det(skies-10, the-9)
nsubj(gray-12, skies-10)
nsubj(old-14, skies-10)
cop(gray-12, are-11)
conj:and(sick-4, gray-12)
cc(gray-12, and-13)
conj:and(sick-4, old-14)
conj:and(gray-12, old-14)
cc(sick-4, And-16)
det(blow-20, the-17)
amod(blow-20, twice-breathed-18)
compound(blow-20, airs-19)
nsubj(damp-21, blow-20)
conj:and(sick-4, damp-21)
cc(sell-26, And-23)
nsubj(sell-26, I-24)
aux(sell-26, 'd-25)
conj:and(sick-4, sell-26)
nmod:poss(soul-29, my-27)
amod(soul-29, tired-28)
dobj(sell-26, soul-29)
case(roll-34, for-30)
det(roll-34, the-31)
amod(roll-34, bucking-32)
amod(roll-34, beam-sea-33)
nmod:for(sell-26, roll-34)
case(tramp-39, Of-35)
det(tramp-39, a-36)
amod(tramp-39, black-37)
compound(tramp-39, Bilbao-38)
nmod:of(roll-34, tramp-39)
case(load-line-43, With-41)
nmod:poss(load-line-43, her-42)
nmod:with(lass-49, load-line-43)
case(hatch-46, over-44)
nmod:poss(hatch-46, her-45)
nmod:over(load-line-43, hatch-46)
dep(lass-49, dear-48)
conj:and(sick-4, lass-49)
cc(sick-4, And-51)
det(crew-55, a-52)
amod(crew-55, drunken-53)
compound(crew-55, Dago-54)
nsubj(held-60, crew-55)
cc(held-60, And-57)
nmod:poss(nose-59, her-58)
conj:and(sick-4, nose-59)
conj:and(held-60, nose-59)
conj:and(sick-4, held-60)
advmod(trail-73, down-61)
case(trail-65, on-62)
det(trail-65, the-63)
amod(trail-65, old-64)
nmod:on(down-61, trail-65)
nmod:poss(trail-69, our-67)
amod(trail-69, own-68)
appos(trail-65, trail-69)
det(trail-73, the-71)
amod(trail-73, out-72)
dobj(held-60, trail-73)
case(Bar-76, From-74)
compound(Bar-76, Cadiz-75)
nmod:from(held-60, Bar-76)
case(Trail-80, on-77)
det(Trail-80, the-78)
amod(Trail-80, Long-79)
nmod:on(Bar-76, Trail-80)
det(trail-83, the-82)
dep(Trail-80, trail-83)
nsubj(new-87, trail-83)
ref(trail-83, that-84)
cop(new-87, is-85)
advmod(new-87, always-86)
acl:relcl(trail-83, new-87)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VB be)
        (VP
          (NP (JJ triple) (NNS ways))
          (S
            (VP (TO to)
              (VP (VB take) (, ,)
                (PP (IN of)
                  (NP
                    (NP
                      (NP (DT the) (NN eagle))
                      (CC or)
                      (NP (DT the) (NN snake)))
                    (, ,)
                    (CC Or)
                    (NP
                      (NP (DT the) (NN way))
                      (PP (IN of)
                        (NP (DT a) (NN man))))))
                (PP (IN with)
                  (NP (DT a) (NN maid)))))))))
    (: ;)
    (CC But)
    (S
      (NP
        (NP (DT the) (JJ fairest) (NN way))
        (PP (TO to)
          (NP (PRP me))))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN ship))
          (SBAR
            (S
              (VP (VBZ 's)
                (PP (IN upon)
                  (NP (DT the) (NN sea)))
                (PP (IN In)
                  (NP
                    (NP (DT the) (NN heel))
                    (PP (IN of)
                      (NP (DT the) (NNP North-East) (NNP Trade)))))))))))
    (. .)))

expl(be-2, There-1)
root(ROOT-0, be-2)
amod(ways-4, triple-3)
nsubj(be-2, ways-4)
mark(take-6, to-5)
advcl(ways-4, take-6)
case(eagle-10, of-8)
det(eagle-10, the-9)
nmod:of(take-6, eagle-10)
cc(eagle-10, or-11)
det(snake-13, the-12)
nmod:of(take-6, snake-13)
conj:or(eagle-10, snake-13)
cc(eagle-10, Or-15)
det(way-17, the-16)
nmod:of(take-6, way-17)
conj:or(eagle-10, way-17)
case(man-20, of-18)
det(man-20, a-19)
nmod:of(way-17, man-20)
case(maid-23, with-21)
det(maid-23, a-22)
nmod:with(take-6, maid-23)
cc(be-2, But-25)
det(way-28, the-26)
amod(way-28, fairest-27)
nsubj(ship-33, way-28)
case(me-30, to-29)
nmod:to(way-28, me-30)
cop(ship-33, is-31)
det(ship-33, a-32)
conj:but(be-2, ship-33)
cop(sea-37, 's-34)
case(sea-37, upon-35)
det(sea-37, the-36)
acl:relcl(ship-33, sea-37)
case(heel-40, In-38)
det(heel-40, the-39)
nmod:in(sea-37, heel-40)
case(Trade-44, of-41)
det(Trade-44, the-42)
compound(Trade-44, North-East-43)
nmod:of(heel-40, Trade-44)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB hear)
      (NP
        (NP
          (NP (DT the) (NN crash))
          (PP (IN on)
            (NP
              (NP (PRP$ her) (NNS bows))
              (, ,)
              (NP
                (ADJP (RB dear))
                (NNS lass)))))
        (, ,)
        (CC And)
        (NP
          (NP (DT the) (NN drum))
          (PP (IN of)
            (NP
              (NP (DT the) (VBG racing) (NN screw))
              (, ,)
              (SBAR (IN As)
                (S
                  (NP (PRP she))
                  (VP (VBZ ships)
                    (S
                      (NP (PRP it))
                      (ADJP (JJ green)
                        (PP (IN on)
                          (NP
                            (NP (DT the) (JJ old) (NN trail))
                            (, ,)
                            (NP
                              (NP (PRP$ our) (JJ own) (NN trail))
                              (, ,)
                              (NP (DT the)
                                (ADJP (RB out))
                                (NN trail)))
                            (, ,))))
                      (SBAR (IN As)
                        (S
                          (NP (PRP she))
                          (VP (VBZ lifts)))))))))))
        (CC and)
        (NP (`` `)
          (NP
            (NP (NNS scends))
            (PP (IN on)
              (NP (DT the) (JJ Long) (NN Trail))))
          (: --)
          (NP
            (NP (DT the) (NN trail))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (ADVP (RB always))
                  (ADJP (JJ new)))))))))
    (. ?)))

aux(hear-3, Can-1)
nsubj(hear-3, you-2)
root(ROOT-0, hear-3)
det(crash-5, the-4)
dobj(hear-3, crash-5)
case(bows-8, on-6)
nmod:poss(bows-8, her-7)
nmod:on(crash-5, bows-8)
amod(lass-11, dear-10)
appos(bows-8, lass-11)
cc(crash-5, And-13)
det(drum-15, the-14)
dobj(hear-3, drum-15)
conj:and(crash-5, drum-15)
case(screw-19, of-16)
det(screw-19, the-17)
amod(screw-19, racing-18)
nmod:of(drum-15, screw-19)
mark(ships-23, As-21)
nsubj(ships-23, she-22)
acl:relcl(screw-19, ships-23)
nsubj(lifts-41, it-24)
dep(lifts-41, green-25)
case(trail-29, on-26)
det(trail-29, the-27)
amod(trail-29, old-28)
nmod:on(green-25, trail-29)
nmod:poss(trail-33, our-31)
amod(trail-33, own-32)
appos(trail-29, trail-33)
det(trail-37, the-35)
amod(trail-37, out-36)
appos(trail-33, trail-37)
mark(lifts-41, As-39)
nsubj(lifts-41, she-40)
xcomp(ships-23, lifts-41)
cc(crash-5, and-42)
dobj(hear-3, scends-44)
conj:and(crash-5, scends-44)
case(Trail-48, on-45)
det(Trail-48, the-46)
amod(Trail-48, Long-47)
nmod:on(scends-44, Trail-48)
det(trail-51, the-50)
dep(scends-44, trail-51)
nsubj(new-55, trail-51)
ref(trail-51, that-52)
cop(new-55, is-53)
advmod(new-55, always-54)
acl:relcl(trail-51, new-55)

(ROOT
  (SINV
    (S
      (VP (VB See)
        (NP
          (NP (DT the) (VBG shaking) (NNS funnels) (NN roar))
          (, ,)
          (PP (IN with)
            (NP
              (NP (DT the) (NNP Peter))
              (PP (IN at)
                (NP (DT the) (NN fore))))))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (DT the) (NNS fenders))
        (VP
          (VP (VBD grind))
          (CC and)
          (VP (VBD heave))))
      (, ,)
      (CC And)
      (S
        (NP (DT the) (NNS derricks))
        (VP (VB clack)
          (CC and)
          (VB grate) (, ,)
          (SBAR (IN as)
            (S
              (NP (DT the) (NN tackle))
              (VP (VBZ hooks)
                (NP (DT the) (NN crate)))))))
      (, ,)
      (CC And)
      (S
        (NP (DT the) (NN fall-rope))
        (VP (VBZ whines)
          (PP (IN through)
            (NP (DT the) (NN sheave)))))
      (: ;)
      (S
        (NP (PRP It))
        (VP (VBZ 's) (`` ``)
          (VP (VBG Gang-plank)
            (PRT (RP up)
              (CC and)
              (RP in))))))
    (, ,) ('' '')
    (VP (VBZ dear))
    (NP
      (NP (NNS lass))
      (, ,)
      (NP
        (NP
          (NP (PRP It) (POS 's))
          (`` ``) (NNS Hawsers))
        (VP (VBG warp)
          (NP (PRP her))
          (PRT (RP through)))))
    (. !) ('' '')))

ccomp(dear-52, See-1)
det(roar-5, the-2)
amod(roar-5, shaking-3)
compound(roar-5, funnels-4)
dobj(See-1, roar-5)
case(Peter-9, with-7)
det(Peter-9, the-8)
nmod:with(roar-5, Peter-9)
case(fore-12, at-10)
det(fore-12, the-11)
nmod:at(Peter-9, fore-12)
cc(dear-52, And-14)
det(fenders-16, the-15)
nsubj(grind-17, fenders-16)
nsubj(heave-19, fenders-16)
conj:and(dear-52, grind-17)
cc(grind-17, and-18)
conj:and(grind-17, heave-19)
conj:and(dear-52, heave-19)
cc(grind-17, And-21)
det(derricks-23, the-22)
nsubj(clack-24, derricks-23)
nsubj(grate-26, derricks-23)
conj:and(grind-17, clack-24)
conj:and(dear-52, clack-24)
cc(clack-24, and-25)
conj:and(grind-17, grate-26)
conj:and(clack-24, grate-26)
mark(hooks-31, as-28)
det(tackle-30, the-29)
nsubj(hooks-31, tackle-30)
advcl(clack-24, hooks-31)
det(crate-33, the-32)
dobj(hooks-31, crate-33)
cc(grind-17, And-35)
det(fall-rope-37, the-36)
nsubj(whines-38, fall-rope-37)
conj:and(grind-17, whines-38)
conj:and(dear-52, whines-38)
case(sheave-41, through-39)
det(sheave-41, the-40)
nmod:through(whines-38, sheave-41)
nsubj(Gang-plank-46, It-43)
aux(Gang-plank-46, 's-44)
conj:and(grind-17, Gang-plank-46)
conj:and(dear-52, Gang-plank-46)
compound:prt(Gang-plank-46, up-47)
cc(up-47, and-48)
dep(up-47, in-49)
root(ROOT-0, dear-52)
nsubj(dear-52, lass-53)
nmod:poss(Hawsers-58, It-55)
case(It-55, 's-56)
appos(lass-53, Hawsers-58)
acl(Hawsers-58, warp-59)
dobj(warp-59, her-60)
compound:prt(warp-59, through-61)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (`` ``)
        (NP (DT All) (JJ clear) (NN aft))
        ('' '')
        (PP (IN on)
          (NP
            (NP
              (NP (DT the) (JJ old) (NN trail))
              (, ,)
              (NP (PRP$ our) (JJ own) (NN trail))
              (, ,)
              (NP
                (NP (DT the)
                  (ADJP (RB out))
                  (NN trail))
                (, ,)
                (S
                  (NP (PRP We))
                  (VP (VBP 're)
                    (VP (VBG backing)
                      (PRT (RP down))
                      (PP (IN on)
                        (NP (DT the) (JJ Long) (NN Trail))))))))
            (: --)
            (NP
              (NP (DT the) (NN trail))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (ADVP (RB always))
                    (ADJP (JJ new))))))))))
    (. .)))

cc(aft-7, And-1)
nsubj(aft-7, it-2)
cop(aft-7, 's-3)
det(aft-7, All-5)
amod(aft-7, clear-6)
root(ROOT-0, aft-7)
case(trail-12, on-9)
det(trail-12, the-10)
amod(trail-12, old-11)
nmod:on(aft-7, trail-12)
nmod:poss(trail-16, our-14)
amod(trail-16, own-15)
appos(trail-12, trail-16)
det(trail-20, the-18)
amod(trail-20, out-19)
appos(trail-12, trail-20)
nsubj(backing-24, We-22)
aux(backing-24, 're-23)
dep(trail-20, backing-24)
compound:prt(backing-24, down-25)
case(Trail-29, on-26)
det(Trail-29, the-27)
amod(Trail-29, Long-28)
nmod:on(backing-24, Trail-29)
det(trail-32, the-31)
dep(trail-12, trail-32)
nsubj(new-36, trail-32)
ref(trail-32, that-33)
cop(new-36, is-34)
advmod(new-36, always-35)
acl:relcl(trail-32, new-36)

(ROOT
  (S
    (S
      (NP
        (NP (NNP O))
        (NP
          (NP (DT the) (NN mutter) (NN overside))
          (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT the) (NN port-fog))
              (VP (VBZ holds)
                (NP (PRP us)))))))
      (VP (VBD tied)))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NNS sirens))
      (VP (VBP hoot)
        (NP (PRP$ their) (NN dread))))
    (. !)))

nsubj(tied-11, O-1)
det(overside-4, the-2)
compound(overside-4, mutter-3)
dep(O-1, overside-4)
advmod(holds-9, when-6)
det(port-fog-8, the-7)
nsubj(holds-9, port-fog-8)
acl:relcl(overside-4, holds-9)
dobj(holds-9, us-10)
root(ROOT-0, tied-11)
cc(tied-11, And-13)
det(sirens-15, the-14)
nsubj(hoot-16, sirens-15)
conj:and(tied-11, hoot-16)
nmod:poss(dread-18, their-17)
dobj(hoot-16, dread-18)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When)
        (NP
          (NP (NN foot))
          (PP (IN by)
            (NP (NN foot)))))
      (S
        (NP (PRP we))
        (VP (VB creep)
          (NP (NN o'er)))))
    (NP (DT the) (NNS hueless))
    (VP (VBZ viewless)
      (ADJP (JJ deep)
        (PP (TO To)
          (NP
            (NP (DT the) (NN sob))
            (PP (IN of)
              (NP (DT the) (VBG questing) (NN lead)))))))
    (. !)))

advmod(creep-6, When-1)
dep(When-1, foot-2)
case(foot-4, by-3)
nmod:by(foot-2, foot-4)
nsubj(creep-6, we-5)
advcl(viewless-10, creep-6)
dobj(creep-6, o'er-7)
det(hueless-9, the-8)
nsubj(viewless-10, hueless-9)
root(ROOT-0, viewless-10)
xcomp(viewless-10, deep-11)
case(sob-14, To-12)
det(sob-14, the-13)
nmod:to(deep-11, sob-14)
case(lead-18, of-15)
det(lead-18, the-16)
amod(lead-18, questing-17)
nmod:of(sob-14, lead-18)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADVP (RB down)
          (PP (IN by)
            (NP
              (NP (DT the) (NNP Lower) (NNP Hope))
              (, ,)
              (NP
                (NP
                  (ADJP (RB dear))
                  (NNS lass))
                (, ,)
                (PP (IN With)
                  (NP
                    (NP (DT the) (NNP Gunfleet) (NNP Sands))
                    (PP (IN in)
                      (NP (NN view))))))
              (, ,))
            (PP (IN Till)
              (NP (DT the) (NNP Mouse) (NNS swings)))))
        (ADJP (JJ green)
          (PP (IN on)
            (NP
              (NP (DT the) (JJ old) (NN trail))
              (, ,)
              (NP
                (NP (PRP$ our) (JJ own) (NN trail))
                (, ,)
                (NP (DT the)
                  (ADJP (RB out))
                  (NN trail))))))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NNP Gull) (NNP Light))
      (VP (VBZ lifts)
        (PP (IN on)
          (NP
            (NP (DT the) (JJ Long) (NN Trail))
            (: --)
            (NP
              (NP (DT the) (NN trail))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (ADVP (RB always))
                    (ADJP (JJ new))))))))))
    (. .)))

nsubj(green-23, It-1)
cop(green-23, 's-2)
advmod(green-23, down-3)
case(Hope-7, by-4)
det(Hope-7, the-5)
compound(Hope-7, Lower-6)
nmod:by(down-3, Hope-7)
amod(lass-10, dear-9)
appos(Hope-7, lass-10)
case(Sands-15, With-12)
det(Sands-15, the-13)
compound(Sands-15, Gunfleet-14)
nmod:with(lass-10, Sands-15)
case(view-17, in-16)
nmod:in(Sands-15, view-17)
case(swings-22, Till-19)
det(swings-22, the-20)
compound(swings-22, Mouse-21)
nmod:till(Hope-7, swings-22)
root(ROOT-0, green-23)
case(trail-27, on-24)
det(trail-27, the-25)
amod(trail-27, old-26)
nmod:on(green-23, trail-27)
nmod:poss(trail-31, our-29)
amod(trail-31, own-30)
appos(trail-27, trail-31)
det(trail-35, the-33)
amod(trail-35, out-34)
appos(trail-31, trail-35)
cc(green-23, And-37)
det(Light-40, the-38)
compound(Light-40, Gull-39)
nsubj(lifts-41, Light-40)
conj:and(green-23, lifts-41)
case(Trail-45, on-42)
det(Trail-45, the-43)
amod(Trail-45, Long-44)
nmod:on(lifts-41, Trail-45)
det(trail-48, the-47)
dep(Trail-45, trail-48)
nsubj(new-52, trail-48)
ref(trail-48, that-49)
cop(new-52, is-50)
advmod(new-52, always-51)
acl:relcl(trail-48, new-52)

(ROOT
  (S
    (S
      (S
        (VP (VB O)
          (NP (DT the) (NN blazing))
          (NP (JJ tropic) (NN night))
          (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT the) (NN wake))
              (VP (VBZ 's)
                (NP
                  (NP (DT a) (NN welt))
                  (PP (IN of)
                    (NP (NN light)))))))))
      (NP (DT That))
      (VP (VBZ holds)
        (S
          (NP (DT the) (JJ hot) (NN sky))
          (VP (JJ tame)))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (JJ steady) (NN fore-foot))
      (VP (VBZ snores)
        (PP (IN through)
          (NP (DT the) (JJ planet-powdered) (NNS floors)))
        (SBAR
          (WHADVP (WRB Where))
          (S
            (NP (DT the) (VBN scared) (NN whale))
            (VP (VBZ flukes)
              (PP (IN in)
                (NP (NN flame))))))))
    (. !)))

dep(holds-16, O-1)
det(blazing-3, the-2)
dobj(O-1, blazing-3)
amod(night-5, tropic-4)
nmod:tmod(O-1, night-5)
advmod(welt-12, when-7)
det(wake-9, the-8)
nsubj(welt-12, wake-9)
cop(welt-12, 's-10)
det(welt-12, a-11)
advcl(O-1, welt-12)
case(light-14, of-13)
nmod:of(welt-12, light-14)
nsubj(holds-16, That-15)
root(ROOT-0, holds-16)
det(sky-19, the-17)
amod(sky-19, hot-18)
nsubj(tame-20, sky-19)
ccomp(holds-16, tame-20)
cc(holds-16, And-22)
det(fore-foot-25, the-23)
amod(fore-foot-25, steady-24)
nsubj(snores-26, fore-foot-25)
conj:and(holds-16, snores-26)
case(floors-30, through-27)
det(floors-30, the-28)
amod(floors-30, planet-powdered-29)
nmod:through(snores-26, floors-30)
advmod(flukes-35, Where-31)
det(whale-34, the-32)
amod(whale-34, scared-33)
nsubj(flukes-35, whale-34)
advcl(snores-26, flukes-35)
case(flame-37, in-36)
nmod:in(flukes-35, flame-37)

(ROOT
  (S
    (S
      (S
        (NP (PRP$ Her) (NNS plates))
        (VP (VBP are)
          (VP (VBG scarred)
            (PP (IN by)
              (NP
                (NP (DT the) (NN sun))
                (, ,)
                (NP
                  (ADJP (RB dear))
                  (NNS lass)))))))
      (, ,)
      (CC And)
      (S
        (S
          (NP (PRP$ her) (NNS ropes))
          (VP (VBP are)
            (ADJP (JJ taut)
              (PP (IN with)
                (NP (DT the) (NN dew))))))
        (, ,) (IN For)
        (S
          (NP (PRP we))
          (VP (VBP 're)
            (VP (VBG booming)
              (PRT (RP down))
              (PP (IN on)
                (NP (DT the) (JJ old) (NN trail)))
              (, ,)
              (NP
                (NP (PRP$ our) (JJ own) (NN trail))
                (, ,)
                (NP (DT the)
                  (ADJP (RB out))
                  (NN trail))))))))
    (, ,)
    (NP (PRP We))
    (VP (VBP 're)
      (NP
        (NP
          (NP (VBG sagging) (NN south))
          (PP (IN on)
            (NP (DT the) (JJ Long) (NN Trail))))
        (: --)
        (NP
          (NP (DT the) (NN trail))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (ADVP (RB always))
                (ADJP (JJ new))))))))
    (. .)))

nmod:poss(plates-2, Her-1)
nsubj(scarred-4, plates-2)
aux(scarred-4, are-3)
ccomp(south-42, scarred-4)
case(sun-7, by-5)
det(sun-7, the-6)
nmod:by(scarred-4, sun-7)
amod(lass-10, dear-9)
appos(sun-7, lass-10)
cc(scarred-4, And-12)
nmod:poss(ropes-14, her-13)
nsubj(taut-16, ropes-14)
cop(taut-16, are-15)
conj:and(scarred-4, taut-16)
ccomp(south-42, taut-16)
case(dew-19, with-17)
det(dew-19, the-18)
nmod:with(taut-16, dew-19)
dep(taut-16, For-21)
nsubj(booming-24, we-22)
aux(booming-24, 're-23)
parataxis(taut-16, booming-24)
compound:prt(booming-24, down-25)
case(trail-29, on-26)
det(trail-29, the-27)
amod(trail-29, old-28)
nmod:on(booming-24, trail-29)
nmod:poss(trail-33, our-31)
amod(trail-33, own-32)
dobj(booming-24, trail-33)
det(trail-37, the-35)
amod(trail-37, out-36)
appos(trail-33, trail-37)
nsubj(south-42, We-39)
cop(south-42, 're-40)
amod(south-42, sagging-41)
root(ROOT-0, south-42)
case(Trail-46, on-43)
det(Trail-46, the-44)
amod(Trail-46, Long-45)
nmod:on(south-42, Trail-46)
det(trail-49, the-48)
dep(south-42, trail-49)
nsubj(new-53, trail-49)
ref(trail-49, that-50)
cop(new-53, is-51)
advmod(new-53, always-52)
acl:relcl(trail-49, new-53)

(ROOT
  (S (RB Then)
    (ADVP (RB home))
    (, ,)
    (VP (VBP get)
      (NP
        (NP (PRP$ her) (NN home))
        (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (S
              (NP (DT the) (NN drunken) (NNS rollers) (NN comb))
              (, ,)
              (CC And)
              (NP (DT the) (NN shouting) (NNS seas))
              (VP (VBP drive)
                (PP (IN by))))
            (, ,)
            (CC And)
            (S
              (S
                (NP (DT the) (NNS engines))
                (VP (VB stamp)
                  (CC and)
                  (VB ring)))
              (, ,)
              (CC and)
              (S
                (S
                  (NP (DT the) (JJ wet) (NNS bows))
                  (VP (VBP reel)
                    (CC and)
                    (VBP swing)))
                (, ,)
                (CC And)
                (S
                  (NP (DT the) (NNP Southern) (NNP Cross))
                  (VP (VBZ rides)
                    (ADJP (JJ high))))))))))
    (. !)))

advmod(get-4, Then-1)
advmod(get-4, home-2)
root(ROOT-0, get-4)
nmod:poss(home-6, her-5)
dobj(get-4, home-6)
advmod(drive-18, where-8)
det(comb-12, the-9)
compound(comb-12, drunken-10)
compound(comb-12, rollers-11)
nsubj(drive-18, comb-12)
cc(drive-18, And-14)
det(seas-17, the-15)
compound(seas-17, shouting-16)
acl:relcl(home-6, seas-17)
conj:and(drive-18, seas-17)
acl:relcl(home-6, drive-18)
nmod(drive-18, by-19)
cc(drive-18, And-21)
det(engines-23, the-22)
nsubj(stamp-24, engines-23)
nsubj(ring-26, engines-23)
acl:relcl(home-6, stamp-24)
conj:and(drive-18, stamp-24)
cc(stamp-24, and-25)
conj:and(drive-18, ring-26)
conj:and(stamp-24, ring-26)
cc(stamp-24, and-28)
det(bows-31, the-29)
amod(bows-31, wet-30)
nsubj(reel-32, bows-31)
nsubj(swing-34, bows-31)
conj:and(drive-18, reel-32)
conj:and(stamp-24, reel-32)
cc(reel-32, and-33)
conj:and(stamp-24, swing-34)
conj:and(reel-32, swing-34)
cc(reel-32, And-36)
det(Cross-39, the-37)
compound(Cross-39, Southern-38)
nsubj(rides-40, Cross-39)
conj:and(stamp-24, rides-40)
conj:and(reel-32, rides-40)
xcomp(rides-40, high-41)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (DT the) (JJ old) (JJ lost) (NNS stars) (NN wheel))
    (ADVP (RB back))
    (PRN (, ,)
      (NP (NNP dear))
      (VP (VBZ lass))
      (, ,))
    (NP (DT That))
    (VP (VBP blaze)
      (PP (IN in)
        (NP (DT the) (NN velvet) (NN blue))))
    (. .)))

discourse(blaze-14, Yes-1)
det(wheel-7, the-3)
amod(wheel-7, old-4)
amod(wheel-7, lost-5)
compound(wheel-7, stars-6)
nsubj(blaze-14, wheel-7)
advmod(blaze-14, back-8)
nsubj(lass-11, dear-10)
parataxis(blaze-14, lass-11)
nsubj(blaze-14, That-13)
root(ROOT-0, blaze-14)
case(blue-18, in-15)
det(blue-18, the-16)
compound(blue-18, velvet-17)
nmod:in(blaze-14, blue-18)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP 're)
        (NP
          (NP (DT all) (JJ old) (NNS friends))
          (PP (IN on)
            (NP
              (NP (DT the) (JJ old) (NN trail))
              (, ,)
              (NP
                (NP (PRP$ our) (JJ own) (NN trail))
                (, ,)
                (NP (DT the)
                  (ADJP (RB out))
                  (NN trail))))))))
    (, ,)
    (NP (PRP They))
    (VP (VBP 're)
      (NP
        (NP
          (NP
            (NP (NNP God) (POS 's))
            (JJ own) (NNS guides))
          (PP (IN on)
            (NP (DT the) (JJ Long) (NN Trail))))
        (: --)
        (NP
          (NP (DT the) (NN trail))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (ADVP (RB always))
                (ADJP (JJ new))))))))
    (. .)))

nsubj(friends-5, They-1)
cop(friends-5, 're-2)
det(friends-5, all-3)
amod(friends-5, old-4)
ccomp(guides-24, friends-5)
case(trail-9, on-6)
det(trail-9, the-7)
amod(trail-9, old-8)
nmod:on(friends-5, trail-9)
nmod:poss(trail-13, our-11)
amod(trail-13, own-12)
appos(trail-9, trail-13)
det(trail-17, the-15)
amod(trail-17, out-16)
appos(trail-13, trail-17)
nsubj(guides-24, They-19)
cop(guides-24, 're-20)
nmod:poss(guides-24, God-21)
case(God-21, 's-22)
amod(guides-24, own-23)
root(ROOT-0, guides-24)
case(Trail-28, on-25)
det(Trail-28, the-26)
amod(Trail-28, Long-27)
nmod:on(guides-24, Trail-28)
det(trail-31, the-30)
dep(guides-24, trail-31)
nsubj(new-35, trail-31)
ref(trail-31, that-32)
cop(new-35, is-33)
advmod(new-35, always-34)
acl:relcl(trail-31, new-35)

(ROOT
  (S
    (ADVP (RB Fly))
    (ADVP (RB forward))
    (, ,)
    (VP (VBP O)
      (NP (PRP$ my) (NN heart))
      (, ,)
      (PP (IN from)
        (NP (DT the) (NNP Foreland)))
      (PP (TO to)
        (NP (DT the) (NNP Start)))
      (: --)
      (S
        (S
          (NP (PRP We))
          (VP (VBP 're)
            (VP (VBG steaming)
              (ADJP (RB all-too) (JJ slow)))))
        (, ,)
        (CC And)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP
              (NP
                (QP (CD twenty) (CD thousand))
                (NN mile))
              (PP (TO to)
                (NP (PRP$ our) (JJ little) (JJ lazy) (NN isle)))
              (SBAR
                (WHADVP (WRB Where))
                (S
                  (NP (DT the) (NNS trumpet-orchids))
                  (VP (VB blow)))))))))
    (. !)))

advmod(O-4, Fly-1)
advmod(O-4, forward-2)
root(ROOT-0, O-4)
nmod:poss(heart-6, my-5)
dobj(O-4, heart-6)
case(Foreland-10, from-8)
det(Foreland-10, the-9)
nmod:from(O-4, Foreland-10)
case(Start-13, to-11)
det(Start-13, the-12)
nmod:to(O-4, Start-13)
nsubj(steaming-17, We-15)
aux(steaming-17, 're-16)
parataxis(O-4, steaming-17)
advmod(slow-19, all-too-18)
xcomp(steaming-17, slow-19)
cc(steaming-17, And-21)
nsubj(mile-26, it-22)
cop(mile-26, 's-23)
compound(thousand-25, twenty-24)
nummod(mile-26, thousand-25)
parataxis(O-4, mile-26)
conj:and(steaming-17, mile-26)
case(isle-31, to-27)
nmod:poss(isle-31, our-28)
amod(isle-31, little-29)
amod(isle-31, lazy-30)
nmod:to(mile-26, isle-31)
advmod(blow-35, Where-32)
det(trumpet-orchids-34, the-33)
nsubj(blow-35, trumpet-orchids-34)
ccomp(mile-26, blow-35)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (VP (VBN heard)
          (NP
            (NP
              (NP (DT the) (NN call))
              (PP (IN of)
                (NP (DT the) (JJ off-shore) (NN wind))))
            (, ,)
            (CC And)
            (NP
              (NP (DT the) (NN voice))
              (PP (IN of)
                (NP (DT the) (JJ deep-sea) (NN rain))))))))
    (: ;)
    (S
      (NP (PRP You))
      (VP (VBP have)
        (VP (VBN heard)
          (NP
            (NP (DT the) (NN song))
            (PRN (: --)
              (FRAG
                (WHADVP (WRB how))
                (ADJP (JJ long))))))))
    (. !)))

nsubj(heard-3, You-1)
aux(heard-3, have-2)
root(ROOT-0, heard-3)
det(call-5, the-4)
dobj(heard-3, call-5)
case(wind-9, of-6)
det(wind-9, the-7)
amod(wind-9, off-shore-8)
nmod:of(call-5, wind-9)
cc(call-5, And-11)
det(voice-13, the-12)
dobj(heard-3, voice-13)
conj:and(call-5, voice-13)
case(rain-17, of-14)
det(rain-17, the-15)
amod(rain-17, deep-sea-16)
nmod:of(voice-13, rain-17)
nsubj(heard-21, You-19)
aux(heard-21, have-20)
parataxis(heard-3, heard-21)
det(song-23, the-22)
dobj(heard-21, song-23)
dep(long-26, how-25)
dep(song-23, long-26)

(ROOT
  (FRAG
    (WHNP (WRB how) (RB long))
    (. ?)))

advmod(long-2, how-1)
root(ROOT-0, long-2)

(ROOT
  (S
    (VP (VB Pull)
      (PRT (RP out))
      (PP (IN on)
        (NP
          (NP (DT the) (NN trail))
          (ADVP (RB again)))))
    (. !)))

root(ROOT-0, Pull-1)
compound:prt(Pull-1, out-2)
case(trail-5, on-3)
det(trail-5, the-4)
nmod:on(Pull-1, trail-5)
advmod(trail-5, again-6)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Lord))
      (VP (VBZ knows)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP we))
            (VP (MD may)
              (VP (VB find) (, ,)
                (FRAG
                  (ADJP (RB dear))
                  (ADJP (JJ lass)))))))))
    (, ,)
    (CC And)
    (S
      (NP (DT The) (NNP Deuce))
      (VP (VBZ knows)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP we))
            (VP (MD may)
              (VP (VB do)))))))
    (: --)
    (CC But)
    (S
      (NP (PRP we))
      (VP (VBP 're)
        (ADVP (RB back) (RB once))
        (ADJP
          (ADJP (JJR more)
            (SBAR
              (S
                (PP (IN on)
                  (NP
                    (NP (DT the) (JJ old) (NN trail))
                    (, ,)
                    (NP
                      (NP (PRP$ our) (JJ own) (NN trail))
                      (, ,)
                      (NP (DT the)
                        (ADJP (RB out))
                        (NN trail)))))
                (, ,)
                (NP (PRP We))
                (VP (VBP 're)
                  (ADJP (RP down))
                  (, ,)
                  (ADJP (JJ hull))))))
          (ADVP (IN down)
            (PP (IN on)
              (NP
                (NP (DT the) (JJ Long) (NN Trail))
                (: --)
                (NP
                  (NP (DT the) (NN trail))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ is)
                        (ADVP (RB always))
                        (ADJP (JJ new))))))))))))
    (. .)))

det(Lord-2, The-1)
nsubj(knows-3, Lord-2)
root(ROOT-0, knows-3)
dobj(find-7, what-4)
nsubj(find-7, we-5)
aux(find-7, may-6)
ccomp(knows-3, find-7)
dep(find-7, dear-9)
dep(dear-9, lass-10)
cc(knows-3, And-12)
det(Deuce-14, The-13)
nsubj(knows-15, Deuce-14)
conj:and(knows-3, knows-15)
dobj(do-19, what-16)
nsubj(do-19, we-17)
aux(do-19, may-18)
ccomp(knows-15, do-19)
cc(knows-3, But-21)
nsubj(more-26, we-22)
cop(more-26, 're-23)
advmod(once-25, back-24)
advmod(more-26, once-25)
conj:and(knows-3, more-26)
case(trail-30, on-27)
det(trail-30, the-28)
amod(trail-30, old-29)
nmod:on(down-42, trail-30)
nmod:poss(trail-34, our-32)
amod(trail-34, own-33)
appos(trail-30, trail-34)
det(trail-38, the-36)
amod(trail-38, out-37)
appos(trail-34, trail-38)
nsubj(down-42, We-40)
cop(down-42, 're-41)
ccomp(more-26, down-42)
xcomp(down-42, hull-44)
advmod(more-26, down-45)
case(Trail-49, on-46)
det(Trail-49, the-47)
amod(Trail-49, Long-48)
nmod:on(down-45, Trail-49)
det(trail-52, the-51)
dep(Trail-49, trail-52)
nsubj(new-56, trail-52)
ref(trail-52, that-53)
cop(new-56, is-54)
advmod(new-56, always-55)
acl:relcl(trail-52, new-56)

(ROOT
  (S
    (NP
      (NP (DT THE) (NNP SEVEN) (NNP SEAS) (NNP 1891-1896) (NNP DEDICATION))
      (PP (TO To)
        (NP
          (NP (DT the) (NNP City))
          (PP (IN of)
            (NP (NNP Bombay) (NNP The) (NNPS Cities))))))
    (VP (VBP are)
      (ADJP (JJ full)
        (PP (IN of)
          (NP
            (NP (NN pride))
            (, ,)
            (NP
              (NP (NNP Challenging))
              (NP (DT each))))))
      (PP (TO to)
        (NP
          (NP (DT each))
          (: --)
          (NP
            (NP (DT This))
            (PP (IN from)
              (NP (PRP$ her) (NN mountain-side))))))
      (, ,)
      (NP
        (NP (DT That))
        (PP (IN from)
          (NP (PRP$ her) (JJ burthened) (NN beach)))))
    (. .)))

det(DEDICATION-5, THE-1)
compound(DEDICATION-5, SEVEN-2)
compound(DEDICATION-5, SEAS-3)
compound(DEDICATION-5, 1891-1896-4)
nsubj(full-14, DEDICATION-5)
case(City-8, To-6)
det(City-8, the-7)
nmod:to(DEDICATION-5, City-8)
case(Cities-12, of-9)
compound(Cities-12, Bombay-10)
compound(Cities-12, The-11)
nmod:of(City-8, Cities-12)
cop(full-14, are-13)
root(ROOT-0, full-14)
case(pride-16, of-15)
nmod:of(full-14, pride-16)
appos(pride-16, Challenging-18)
dep(Challenging-18, each-19)
case(each-21, to-20)
nmod:to(full-14, each-21)
dep(each-21, This-23)
case(mountain-side-26, from-24)
nmod:poss(mountain-side-26, her-25)
nmod:from(This-23, mountain-side-26)
dep(full-14, That-28)
case(beach-32, from-29)
nmod:poss(beach-32, her-30)
amod(beach-32, burthened-31)
nmod:from(That-28, beach-32)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VB count)
          (NP
            (NP
              (NP (PRP$ their) (NNS ships))
              (NP (JJ full) (NN tale)))
            (: --)
            (NP (PRP$ Their) (NN corn))
            (CC and)
            (NP
              (NP (NN oil)
                (CC and)
                (NN wine))
              (, ,)
              (NP (NNP Derrick)))))
        (CC and)
        (VP (VB loom)
          (CC and)
          (VB bale))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP
          (NP (NN rampart) (POS 's))
          (JJ gun-flecked) (NN line))
        (PRN (: ;)
          (S
            (NP
              (NP (NNP City))
              (PP (IN by)
                (NP (NNP City))))
            (NP (PRP they)))))
      (VP (VBZ hail) (: :) (`` ``)
        (S
          (NP (NNP Hast) (NNP aught))
          (VP (TO to)
            (VP (VB match)
              (PP (IN with)
                (NP (NN mine))))))))
    (. ?) ('' '')))

nsubj(count-2, They-1)
nsubj(loom-17, They-1)
root(ROOT-0, count-2)
nmod:poss(ships-4, their-3)
dobj(count-2, ships-4)
amod(tale-6, full-5)
dep(ships-4, tale-6)
nmod:poss(corn-9, Their-8)
dobj(count-2, corn-9)
conj:and(ships-4, corn-9)
cc(ships-4, and-10)
dobj(count-2, oil-11)
conj:and(ships-4, oil-11)
cc(oil-11, and-12)
conj:and(ships-4, wine-13)
conj:and(oil-11, wine-13)
appos(oil-11, Derrick-15)
cc(count-2, and-16)
conj:and(count-2, loom-17)
cc(loom-17, and-18)
conj:and(count-2, bale-19)
conj:and(loom-17, bale-19)
cc(count-2, And-21)
nmod:poss(line-25, rampart-22)
case(rampart-22, 's-23)
amod(line-25, gun-flecked-24)
nsubj(hail-31, line-25)
dep(they-30, City-27)
case(City-29, by-28)
nmod:by(City-27, City-29)
dep(line-25, they-30)
conj:and(count-2, hail-31)
compound(aught-35, Hast-34)
dobj(hail-31, aught-35)
nsubj:xsubj(match-37, aught-35)
mark(match-37, to-36)
xcomp(hail-31, match-37)
case(mine-39, with-38)
nmod:with(match-37, mine-39)

(ROOT
  (S (CC And)
    (NP
      (NP (DT the) (NNS men))
      (SBAR
        (WHNP
          (WHNP (WDT that) (NN breed))
          (PP (IN from)
            (NP (PRP them))))
        (S
          (NP (PRP They))
          (VP (VBD traffic)
            (ADVP (RB up)
              (CC and)
              (RB down))
            (, ,)
            (ADVP (CC But))))))
    (VP (VBP cling)
      (PP (TO to)
        (NP
          (NP
            (NP (PRP$ their) (NNS cities) (POS '))
            (NN hem))
          (ADVP (RB As)
            (NP (DT a) (NN child))
            (PP (TO to)
              (NP
                (NP (PRP$ their) (NN mother) (POS 's))
                (NN gown)))))))
    (. .)))

cc(cling-15, And-1)
det(men-3, the-2)
det(breed-5, men-3)
nsubj(cling-15, men-3)
ref(men-3, that-4)
dobj(traffic-9, breed-5)
case(them-7, from-6)
nmod:from(breed-5, them-7)
nsubj(traffic-9, They-8)
acl:relcl(men-3, traffic-9)
advmod(traffic-9, up-10)
cc(up-10, and-11)
advmod(traffic-9, down-12)
conj:and(up-10, down-12)
advmod(traffic-9, But-14)
root(ROOT-0, cling-15)
case(hem-20, to-16)
nmod:poss(cities-18, their-17)
nmod:poss(hem-20, cities-18)
case(cities-18, '-19)
nmod:to(cling-15, hem-20)
advmod(hem-20, As-21)
det(child-23, a-22)
nmod:npmod(As-21, child-23)
case(gown-28, to-24)
nmod:poss(mother-26, their-25)
nmod:poss(gown-28, mother-26)
case(mother-26, 's-27)
nmod:to(As-21, gown-28)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBP talk)
          (PP (IN with)
            (NP (DT the) (NN stranger) (NNS bands))))))
    (, ,)
    (NP
      (NP
        (NP (NNP Dazed))
        (CC and)
        (NP (RB newly) (RB alone)))
      (: ;)
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP they))
          (VP (VBP walk)
            (PP (IN in)
              (NP (DT the) (NN stranger) (NNS lands))))
          (, ,)
          (PP (IN By)
            (NP
              (NP (VBG roaring) (NNS streets))
              (ADJP (JJ unknown))))))
      (: ;))
    (VP (VBD Blessing)
      (NP (PRP her))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP she))
          (VP (VBZ stands)
            (PP (IN For)
              (NP
                (NP (NN strength))
                (PP (IN above)
                  (NP (PRP$ their) (JJ own)))))))))
    (. .)))

advmod(talk-3, When-1)
nsubj(talk-3, they-2)
advcl(Blessing-27, talk-3)
case(bands-7, with-4)
det(bands-7, the-5)
compound(bands-7, stranger-6)
nmod:with(talk-3, bands-7)
nsubj(Blessing-27, Dazed-9)
cc(Dazed-9, and-10)
advmod(alone-12, newly-11)
conj:and(Dazed-9, alone-12)
nsubj(Blessing-27, alone-12)
advmod(walk-16, When-14)
nsubj(walk-16, they-15)
acl:relcl(Dazed-9, walk-16)
case(lands-20, in-17)
det(lands-20, the-18)
compound(lands-20, stranger-19)
nmod:in(walk-16, lands-20)
case(streets-24, By-22)
amod(streets-24, roaring-23)
nmod:by(walk-16, streets-24)
amod(streets-24, unknown-25)
root(ROOT-0, Blessing-27)
dobj(Blessing-27, her-28)
advmod(stands-31, where-29)
nsubj(stands-31, she-30)
advcl(Blessing-27, stands-31)
case(strength-33, For-32)
nmod:for(stands-31, strength-33)
case(own-36, above-34)
nmod:poss(own-36, their-35)
nmod:above(strength-33, own-36)

(ROOT
  (S (-LRB- -LRB-)
    (S
      (PP (IN On)
        (NP (NN high)
          (S
            (VP (TO to)
              (VP (VB hold)
                (NP (PRP$ her) (NN fame)))))))
      (NP (DT That))
      (VP (VBZ stands)
        (NP (DT all) (NN fame))
        (PP (IN beyond))
        (, ,)
        (S
          (PP (IN By)
            (NP (NN oath)))
          (VP (TO to)
            (VP (VB back)
              (NP
                (NP (DT the) (JJ same))
                (, ,)
                (ADJP (RBS Most) (JJ faithful-foolish-fond))))))))
    (: ;)
    (S
      (S
        (VP (VBG Making)
          (NP (PRP$ her) (NN mere-breathed))))
      (VP (VBP name)
        (NP (PRP$ Their) (NN bond))
        (PP (IN upon)
          (NP (PRP$ their) (NN bond)))))
    (. .) (-RRB- -RRB-)))

case(high-3, On-2)
nmod:beyond(stands-9, high-3)
mark(hold-5, to-4)
acl(high-3, hold-5)
nmod:poss(fame-7, her-6)
dobj(hold-5, fame-7)
nsubj(stands-9, That-8)
root(ROOT-0, stands-9)
det(fame-11, all-10)
dobj(stands-9, fame-11)
case(high-3, beyond-12)
case(oath-15, By-14)
nmod:by(back-17, oath-15)
mark(back-17, to-16)
advcl(stands-9, back-17)
det(same-19, the-18)
dobj(back-17, same-19)
advmod(faithful-foolish-fond-22, Most-21)
amod(same-19, faithful-foolish-fond-22)
csubj(name-27, Making-24)
nmod:poss(mere-breathed-26, her-25)
dobj(Making-24, mere-breathed-26)
parataxis(stands-9, name-27)
nmod:poss(bond-29, Their-28)
dobj(name-27, bond-29)
case(bond-32, upon-30)
nmod:poss(bond-32, their-31)
nmod:upon(name-27, bond-32)

(ROOT
  (S (IN So)
    (S
      (S
        (VP (VBG thank)
          (S
            (NP (PRP I))
            (PP (NNP God)
              (NP
                (NP (PRP$ my) (NN birth) (NN Fell))
                (ADVP (RB not)
                  (PP (IN in)
                    (NP (NNS isles))
                    (ADVP (RB aside)))))))
          (: --)
          (S
            (S
              (S
                (NP (NNP Waste))
                (VP (VBZ headlands)
                  (PP (IN of)
                    (NP (DT the) (NN earth)))))
              (, ,)
              (CC Or)
              (S
                (NP (VBG warring) (NNS tribes))
                (VP (VBZ untried))))
            (: --)
            (CC But)
            (FRAG
              (WHNP (WDT that))))))
      (NP (PRP she))
      (VP (VBD lent)
        (S
          (NP (PRP me))
          (ADJP (JJ worth)))))
    (CC And)
    (S
      (VP (VBD gave)
        (S
          (NP (PRP me))
          (ADJP (JJ right)
            (PP (TO to)
              (NP (NN pride)))))))
    (. .)))

dep(lent-27, So-1)
dep(lent-27, thank-2)
xcomp(thank-2, I-3)
dep(Fell-7, God-4)
nmod:poss(Fell-7, my-5)
compound(Fell-7, birth-6)
dep(I-3, Fell-7)
advmod(Fell-7, not-8)
case(isles-10, in-9)
nmod:in(not-8, isles-10)
advmod(isles-10, aside-11)
nsubj(headlands-14, Waste-13)
parataxis(thank-2, headlands-14)
case(earth-17, of-15)
det(earth-17, the-16)
nmod:of(headlands-14, earth-17)
cc(headlands-14, Or-19)
amod(tribes-21, warring-20)
nsubj(untried-22, tribes-21)
parataxis(thank-2, untried-22)
conj:or(headlands-14, untried-22)
cc(headlands-14, But-24)
parataxis(thank-2, that-25)
conj:but(headlands-14, that-25)
nsubj(lent-27, she-26)
nsubj(gave-31, she-26)
root(ROOT-0, lent-27)
nsubj(worth-29, me-28)
xcomp(lent-27, worth-29)
cc(lent-27, And-30)
conj:and(lent-27, gave-31)
nsubj(right-33, me-32)
xcomp(gave-31, right-33)
case(pride-35, to-34)
nmod:to(right-33, pride-35)

(ROOT
  (FRAG
    (PP
      (ADVP (RB Surely))
      (IN in)
      (NP
        (NP (NN toil)
          (CC or)
          (NN fray))
        (SBAR
          (S
            (PP (IN Under)
              (NP
                (NP (DT an) (JJ alien) (NN sky))
                (, ,)
                (NP (NNP Comfort))))
            (NP (PRP it))
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB say)))))))))
    (: :) (`` ``)
    (S
      (PP (IN Of)
        (NP (DT no) (NN mean)))
      (NP (NN city))
      (VP (VBP am)
        (NP (PRP I))))
    (. !) ('' '')))

advmod(toil-3, Surely-1)
case(toil-3, in-2)
nmod:in(I-23, toil-3)
cc(toil-3, or-4)
conj:or(toil-3, fray-5)
nmod:in(I-23, fray-5)
case(sky-9, Under-6)
det(sky-9, an-7)
amod(sky-9, alien-8)
nmod:under(is-13, sky-9)
appos(sky-9, Comfort-11)
nsubj(is-13, it-12)
nsubj:xsubj(say-15, it-12)
acl:relcl(toil-3, is-13)
mark(say-15, to-14)
xcomp(is-13, say-15)
case(mean-20, Of-18)
neg(mean-20, no-19)
nmod:of(I-23, mean-20)
nsubj(I-23, city-21)
cop(I-23, am-22)
root(ROOT-0, I-23)

(ROOT
  (S (-LRB- -LRB-)
    (S
      (NP
        (NP (DT Neither))
        (PP (IN by)
          (NP
            (NP (NN service))
            (CC nor)
            (NP (NN fee)))))
      (VP
        (VP (VB Come)
          (NP (PRP I))
          (PP (TO to)
            (NP (NN mine) (NN estate))))
        (: --)
        (VP
          (NP
            (NP (NNP Mother))
            (PP (IN of)
              (NP (NNPS Cities))))
          (PP (TO to)
            (NP (PRP me))))))
    (, ,) (IN For)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBN born)
          (PP (IN in)
            (NP (PRP$ her) (NN gate)))
          (, ,)
          (PP (IN Between)
            (NP
              (NP (DT the) (NNS palms))
              (CC and)
              (NP (DT the) (NN sea))))
          (, ,)
          (SBAR
            (WHADVP (WRB Where))
            (S
              (NP (DT the) (JJ world-end) (NNS steamers))
              (VP (VBP wait)))))))
    (. .) (-RRB- -RRB-)))

nsubj(Come-7, Neither-2)
case(service-4, by-3)
nmod:by(Neither-2, service-4)
cc(service-4, nor-5)
nmod:by(Neither-2, fee-6)
conj:nor(service-4, fee-6)
root(ROOT-0, Come-7)
dobj(Come-7, I-8)
case(estate-11, to-9)
compound(estate-11, mine-10)
nmod:to(Come-7, estate-11)
dep(Come-7, Mother-13)
case(Cities-15, of-14)
nmod:of(Mother-13, Cities-15)
case(me-17, to-16)
nmod:to(Mother-13, me-17)
dep(Come-7, For-19)
nsubjpass(born-22, I-20)
auxpass(born-22, was-21)
parataxis(Come-7, born-22)
case(gate-25, in-23)
nmod:poss(gate-25, her-24)
nmod:in(born-22, gate-25)
case(palms-29, Between-27)
det(palms-29, the-28)
nmod:between(born-22, palms-29)
cc(palms-29, and-30)
det(sea-32, the-31)
nmod:between(born-22, sea-32)
conj:and(palms-29, sea-32)
advmod(wait-38, Where-34)
det(steamers-37, the-35)
amod(steamers-37, world-end-36)
nsubj(wait-38, steamers-37)
advcl(born-22, wait-38)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (PP (IN for)
        (NP (DT this) (NN debt)))
      (NP (PRP I))
      (VP (VBP owe)))
    (, ,)
    (CC And)
    (S
      (PP (IN for)
        (NP (PRP$ her) (JJ far-borne) (NN cheer) (NN Must)))
      (NP (PRP I))
      (VP
        (VP (VBP make)
          (NP (NN haste)))
        (CC and)
        (VP (VBP go)
          (PP (IN With)
            (NP (NN tribute)))
          (PP (TO to)
            (NP (PRP$ her) (NN pier))))))
    (. .)))

advmod(owe-6, Now-1)
case(debt-4, for-2)
det(debt-4, this-3)
nmod:for(owe-6, debt-4)
nsubj(owe-6, I-5)
root(ROOT-0, owe-6)
cc(owe-6, And-8)
case(Must-13, for-9)
nmod:poss(Must-13, her-10)
amod(Must-13, far-borne-11)
compound(Must-13, cheer-12)
nmod:for(make-15, Must-13)
nsubj(make-15, I-14)
nsubj(go-18, I-14)
conj:and(owe-6, make-15)
dobj(make-15, haste-16)
cc(make-15, and-17)
conj:and(owe-6, go-18)
conj:and(make-15, go-18)
case(tribute-20, With-19)
nmod:with(go-18, tribute-20)
case(pier-23, to-21)
nmod:poss(pier-23, her-22)
nmod:to(go-18, pier-23)

(ROOT
  (S (CC And)
    (S
      (NP (PRP she))
      (VP (MD shall)
        (VP (VB touch)
          (CC and)
          (VB remit)
          (PP (IN After)
            (NP
              (NP (DT the) (NN use))
              (PP (IN of)
                (NP
                  (NP (NNS kings))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP Orderly))
                    (, ,)
                    (NP (JJ ancient))
                    (, ,)
                    (NP (NN fit))
                    (-RRB- -RRB-))))))
          (NP (PRP$ My) (JJ deep-sea) (NNS plunderings)))))
    (, ,)
    (CC And)
    (S
      (VP (VB purchase)
        (PP (IN in)
          (NP (DT all) (NNS lands)))))
    (. .)))

cc(touch-4, And-1)
nsubj(touch-4, she-2)
nsubj(remit-6, she-2)
nsubj(purchase-24, she-2)
aux(touch-4, shall-3)
root(ROOT-0, touch-4)
cc(touch-4, and-5)
conj:and(touch-4, remit-6)
case(use-9, After-7)
det(use-9, the-8)
nmod:after(touch-4, use-9)
case(kings-11, of-10)
nmod:of(use-9, kings-11)
appos(kings-11, Orderly-13)
dep(Orderly-13, ancient-15)
dep(Orderly-13, fit-17)
nmod:poss(plunderings-21, My-19)
amod(plunderings-21, deep-sea-20)
dobj(touch-4, plunderings-21)
cc(touch-4, And-23)
conj:and(touch-4, purchase-24)
case(lands-27, in-25)
det(lands-27, all-26)
nmod:in(purchase-24, lands-27)

(ROOT
  (FRAG (CC And)
    (NP
      (NP (DT this))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP do)
            (PP (IN for)
              (NP (DT a) (NN sign)))))))
    (SBAR
      (S
        (S
          (NP (PRP$ Her) (NN power))
          (VP (VBZ is)
            (PP (IN over)
              (NP (NN mine)))))
        (, ,)
        (CC And)
        (S
          (NP (NN mine) (NN I))
          (VP (VBP hold)
            (PP (IN at)
              (NP (PRP$ her) (NNS hands)))))))
    (. !)))

cc(this-2, And-1)
root(ROOT-0, this-2)
nsubj(do-4, we-3)
acl:relcl(this-2, do-4)
case(sign-7, for-5)
det(sign-7, a-6)
nmod:for(do-4, sign-7)
nmod:poss(power-9, Her-8)
nsubj(mine-12, power-9)
cop(mine-12, is-10)
case(mine-12, over-11)
dep(this-2, mine-12)
cc(mine-12, And-14)
compound(I-16, mine-15)
nsubj(hold-17, I-16)
dep(this-2, hold-17)
conj:and(mine-12, hold-17)
case(hands-20, at-18)
nmod:poss(hands-20, her-19)
nmod:at(hold-17, hands-20)

(ROOT
  (S
    (S
      (NP
        (NP (DT THE) (NNP SEVEN) (NNP SEAS) (NNP A) (NNP SONG))
        (PP (IN OF)
          (NP (DT THE) (NNP ENGLISH) (NNP Fair))))
      (VP (VBZ is)
        (NP (PRP$ our) (NN lot))))
    (: --)
    (S
      (NP (NNP O))
      (ADVP (RB goodly))
      (VP (VBZ is)
        (NP (PRP$ our) (NN heritage))))
    (. !)))

det(SONG-5, THE-1)
compound(SONG-5, SEVEN-2)
compound(SONG-5, SEAS-3)
compound(SONG-5, A-4)
nsubj(lot-12, SONG-5)
case(Fair-9, OF-6)
det(Fair-9, THE-7)
compound(Fair-9, ENGLISH-8)
nmod:of(SONG-5, Fair-9)
cop(lot-12, is-10)
nmod:poss(lot-12, our-11)
root(ROOT-0, lot-12)
nsubj(heritage-18, O-14)
advmod(heritage-18, goodly-15)
cop(heritage-18, is-16)
nmod:poss(heritage-18, our-17)
parataxis(lot-12, heritage-18)

(ROOT
  (S (-LRB- -LRB-)
    (VP
      (VP (VB Humble)
        (NP
          (NP (PRP ye))
          (, ,)
          (NP (PRP$ my) (NNS people))
          (, ,)))
      (CC and)
      (VP (VB be)
        (ADJP (JJ fearful)
          (PP (IN in)
            (NP (PRP$ your) (NN mirth))))))
    (. !) (-RRB- -RRB-)))

root(ROOT-0, Humble-2)
dobj(Humble-2, ye-3)
nmod:poss(people-6, my-5)
appos(ye-3, people-6)
cc(Humble-2, and-8)
cop(fearful-10, be-9)
conj:and(Humble-2, fearful-10)
case(mirth-13, in-11)
nmod:poss(mirth-13, your-12)
nmod:in(fearful-10, mirth-13)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (DT the) (NNP Lord)))
      (NP
        (NP (PRP$ our) (NNP God) (NNP Most) (NNP High))
        (SBAR
          (S
            (NP (PRP He))
            (VP (VBD hath)))))
      (VP (VBD made)
        (NP (DT the) (JJ deep))
        (PP (IN as)
          (ADJP (JJ dry)))))
    (, ,)
    (NP (PRP He))
    (VP (VBD hath)
      (NP
        (ADJP (JJ smote)
          (PP (IN for)
            (NP (PRP us))))
        (DT a) (NN pathway))
      (PP (TO to)
        (NP
          (NP (DT the) (NNS ends))
          (PP (IN of)
            (NP (PDT all) (DT the) (NN Earth))))))
    (. !)))

case(Lord-3, For-1)
det(Lord-3, the-2)
nmod:for(made-10, Lord-3)
nmod:poss(High-7, our-4)
compound(High-7, God-5)
compound(High-7, Most-6)
nsubj(made-10, High-7)
nsubj(hath-9, He-8)
acl:relcl(High-7, hath-9)
ccomp(hath-17, made-10)
det(deep-12, the-11)
dobj(made-10, deep-12)
case(dry-14, as-13)
advcl(made-10, dry-14)
nsubj(hath-17, He-16)
root(ROOT-0, hath-17)
amod(pathway-22, smote-18)
case(us-20, for-19)
nmod:for(smote-18, us-20)
det(pathway-22, a-21)
dobj(hath-17, pathway-22)
case(ends-25, to-23)
det(ends-25, the-24)
nmod:to(hath-17, ends-25)
case(Earth-29, of-26)
det:predet(Earth-29, all-27)
det(Earth-29, the-28)
nmod:of(ends-25, Earth-29)

(ROOT
  (S
    (NP (NNP Yea))
    (, ,)
    (SBAR (IN though)
      (S
        (NP (PRP we))
        (VP (VBD sinned))))
    (PRN (: --)
      (CC and)
      (S
        (NP (PRP$ our) (NNS rulers))
        (VP (VBD went)
          (PP (IN from)
            (NP (NNS righteousness)))))
      (: --))
    (NP
      (NP (NNP Deep))
      (PP (IN in)
        (NP (DT all))))
    (VP (VBP dishonour)
      (SBAR (IN though)
        (S
          (NP (PRP we))
          (VP (VBD stained)
            (NP
              (NP (PRP$ our) (NNS garments) (POS '))
              (NN hem))))))
    (. .)))

nsubj(dishonour-17, Yea-1)
mark(sinned-5, though-3)
nsubj(sinned-5, we-4)
advcl(dishonour-17, sinned-5)
cc(went-10, and-7)
nmod:poss(rulers-9, our-8)
nsubj(went-10, rulers-9)
parataxis(dishonour-17, went-10)
case(righteousness-12, from-11)
nmod:from(went-10, righteousness-12)
nsubj(dishonour-17, Deep-14)
case(all-16, in-15)
nmod:in(Deep-14, all-16)
root(ROOT-0, dishonour-17)
mark(stained-20, though-18)
nsubj(stained-20, we-19)
advcl(dishonour-17, stained-20)
nmod:poss(garments-22, our-21)
nmod:poss(hem-24, garments-22)
case(garments-22, '-23)
dobj(stained-20, hem-24)

(ROOT
  (S
    (INTJ (UH Oh))
    (VP (VB be)
      (ADJP (RB ye) (RB not) (JJ dismayed) (, ,)
        (SBAR
          (S
            (SBAR (IN Though)
              (S
                (S
                  (NP (PRP we))
                  (VP (VBD stumbled)))
                (CC and)
                (S
                  (NP (PRP we))
                  (VP (VBD strayed)))))
            (, ,)
            (S
              (NP (PRP We))
              (VP (VBD were)
                (VP (VBN led)
                  (PP (IN by)
                    (NP (JJ evil) (NNS counsellors))))))
            (: --)
            (S
              (NP (DT the) (NNP Lord))
              (VP (MD shall)
                (VP (VB deal)
                  (PP (IN with)
                    (NP (PRP them))))))))))
    (. !)))

discourse(dismayed-5, Oh-1)
cop(dismayed-5, be-2)
advmod(dismayed-5, ye-3)
neg(dismayed-5, not-4)
root(ROOT-0, dismayed-5)
mark(stumbled-9, Though-7)
nsubj(stumbled-9, we-8)
advcl(led-16, stumbled-9)
cc(stumbled-9, and-10)
nsubj(strayed-12, we-11)
conj:and(stumbled-9, strayed-12)
advcl(led-16, strayed-12)
nsubjpass(led-16, We-14)
auxpass(led-16, were-15)
ccomp(dismayed-5, led-16)
case(counsellors-19, by-17)
amod(counsellors-19, evil-18)
nmod:by(led-16, counsellors-19)
det(Lord-22, the-21)
nsubj(deal-24, Lord-22)
aux(deal-24, shall-23)
parataxis(led-16, deal-24)
case(them-26, with-25)
nmod:with(deal-24, them-26)

(ROOT
  (S
    (VP
      (VP (VB Hold)
        (NP (PRP ye))
        (NP (DT the) (JJ Faith)
          (PRN (: --)
            (NP
              (NP (DT the) (NNP Faith))
              (SBAR
                (S
                  (NP (PRP$ our) (NNS Fathers))
                  (VP (VB seal)
                    (S
                      (NP (NNP -RSB-) (NNP \))
                      (VP (VB ed)
                        (S
                          (NP (PRP us))
                          (: ;)
                          (VP (VBG Whoring)
                            (PP (RB not) (IN with)
                              (NP (NNS visions)))))))))))
            (: --))
          (NN overwise)))
      (CC and)
      (VP (VB overstale)))
    (. .)))

root(ROOT-0, Hold-1)
iobj(Hold-1, ye-2)
det(overwise-21, the-3)
amod(overwise-21, Faith-4)
det(Faith-7, the-6)
dep(overwise-21, Faith-7)
nmod:poss(Fathers-9, our-8)
nsubj(seal-10, Fathers-9)
acl:relcl(Faith-7, seal-10)
compound(\-12, -RSB--11)
nsubj(ed-13, \-12)
ccomp(seal-10, ed-13)
nsubj(Whoring-16, us-14)
dep(ed-13, Whoring-16)
neg(visions-19, not-17)
case(visions-19, with-18)
nmod:with(Whoring-16, visions-19)
dobj(Hold-1, overwise-21)
cc(Hold-1, and-22)
conj:and(Hold-1, overstale-23)

(ROOT
  (S
    (SBAR (IN Except)
      (S
        (NP (PRP ye))
        (VP (VBP pay)
          (NP
            (NP (DT the) (NNP Lord) (NNP Single) (NN heart))
            (CC and)
            (NP (JJ single) (NN sword))))))
    (, ,)
    (PP (IN Of)
      (NP
        (NP (PRP$ your) (NNS children))
        (PP (IN in)
          (NP (PRP$ their) (JJ bondage) (NN shall)))))
    (NP (PRP He))
    (VP (VBP ask)
      (S
        (NP (PRP them))
        (ADJP (JJ treble-tale))))
    (. !)))

mark(pay-3, Except-1)
nsubj(pay-3, ye-2)
advcl(ask-20, pay-3)
det(heart-7, the-4)
compound(heart-7, Lord-5)
compound(heart-7, Single-6)
dobj(pay-3, heart-7)
cc(heart-7, and-8)
amod(sword-10, single-9)
dobj(pay-3, sword-10)
conj:and(heart-7, sword-10)
case(children-14, Of-12)
nmod:poss(children-14, your-13)
nmod:of(ask-20, children-14)
case(shall-18, in-15)
nmod:poss(shall-18, their-16)
amod(shall-18, bondage-17)
nmod:in(children-14, shall-18)
nsubj(ask-20, He-19)
root(ROOT-0, ask-20)
nsubj(treble-tale-22, them-21)
xcomp(ask-20, treble-tale-22)

(ROOT
  (S
    (VP
      (VP
        (VP (VB Keep)
          (NP (PRP ye))
          (NP (DT the) (NN Law)))
        (: --)
        (VP (VB be)
          (ADJP (JJ swift)
            (PP (IN in)
              (NP (DT all) (NN obedience))))
          (PRN (: --)
            (S
              (NP (NNP Clear))
              (NP
                (NP (DT the) (NN land))
                (PP (IN of)
                  (NP (NN evil))))))))
      (, ,)
      (VP (VB drive)
        (NP (DT the) (NN road)))
      (CC and)
      (VP (VB bridge)
        (NP (DT the) (NN ford))))
    (. .)))

root(ROOT-0, Keep-1)
iobj(Keep-1, ye-2)
det(Law-4, the-3)
dobj(Keep-1, Law-4)
cop(swift-7, be-6)
dep(Keep-1, swift-7)
case(obedience-10, in-8)
det(obedience-10, all-9)
nmod:in(swift-7, obedience-10)
dep(land-14, Clear-12)
det(land-14, the-13)
parataxis(swift-7, land-14)
case(evil-16, of-15)
nmod:of(land-14, evil-16)
conj:and(Keep-1, drive-18)
det(road-20, the-19)
dobj(drive-18, road-20)
cc(Keep-1, and-21)
conj:and(Keep-1, bridge-22)
det(ford-24, the-23)
dobj(bridge-22, ford-24)

(ROOT
  (S
    (S
      (VP (NNP Make)
        (S
          (NP (PRP ye))
          (ADJP (JJ sure)
            (PP (TO to)
              (NP (DT each)))))))
    (NP (PRP$ his))
    (VP (VBP own)
      (FRAG
        (SBAR (IN That)
          (S
            (NP (PRP he))
            (VP (VB reap)
              (SBAR
                (WHADVP (WRB where))
                (FRAG
                  (S
                    (NP (PRP he))
                    (VP (VBP hath)
                      (NP (NN sown))))
                  (: ;)
                  (FRAG
                    (PP (IN By)
                      (NP
                        (NP (DT the) (NN peace))
                        (PP (IN among)
                          (NP (PRP$ Our) (NNS peoples)))))
                    (: let)
                    (NP
                      (NP (NNS men))
                      (SBAR
                        (S
                          (VP (VBP know)
                            (S
                              (NP (PRP we))
                              (VP (VB serve)
                                (NP (DT the) (NN Lord)))))))
                      (. !))
                    (. .))
                  (. .)))))
          (. .))
        (. .)))
    (. .)))

dep(own-7, Make-1)
nsubj(sure-3, ye-2)
xcomp(Make-1, sure-3)
case(each-5, to-4)
nmod:to(sure-3, each-5)
nsubj(own-7, his-6)
root(ROOT-0, own-7)
mark(reap-10, That-8)
nsubj(reap-10, he-9)
dep(own-7, reap-10)
advmod(men-23, where-11)
nsubj(hath-13, he-12)
dep(men-23, hath-13)
dobj(hath-13, sown-14)
case(peace-18, By-16)
det(peace-18, the-17)
nmod:by(men-23, peace-18)
case(peoples-21, among-19)
nmod:poss(peoples-21, Our-20)
nmod:among(peace-18, peoples-21)
advcl(reap-10, men-23)
acl:relcl(men-23, know-24)
nsubj(serve-26, we-25)
ccomp(know-24, serve-26)
det(Lord-28, the-27)
dobj(serve-26, Lord-28)

(ROOT
  (NP
    (NP
      (NP (NNP Hear))
      (ADVP (RB now)
        (NP (DT a) (NN song))))
    (: --)
    (NP
      (NP (DT a) (NN song))
      (PP (IN of)
        (NP
          (NP (VBN broken) (NNS interludes))
          (: --)
          (NP
            (NP (DT A) (NN song))
            (PP (IN of)
              (NP (JJ little) (NNS cunning))))
          (: ;)))
      (PP (IN of)
        (NP (DT a) (NN singer) (NN nothing) (NN worth))))
    (. .)))

root(ROOT-0, Hear-1)
advmod(Hear-1, now-2)
det(song-4, a-3)
nmod:npmod(now-2, song-4)
det(song-7, a-6)
dep(Hear-1, song-7)
case(interludes-10, of-8)
amod(interludes-10, broken-9)
nmod:of(song-7, interludes-10)
det(song-13, A-12)
dep(interludes-10, song-13)
case(cunning-16, of-14)
amod(cunning-16, little-15)
nmod:of(song-13, cunning-16)
case(worth-22, of-18)
det(worth-22, a-19)
compound(worth-22, singer-20)
compound(worth-22, nothing-21)
nmod:of(song-7, worth-22)

(ROOT
  (S
    (PP (IN Through)
      (NP
        (NP (DT the) (JJ naked) (NNS words))
        (CC and)
        (NP (NNP mean) (NNP May))))
    (NP (PRP ye))
    (VP (VBP see)
      (NP
        (NP (DT the) (NN truth))
        (PP (IN between)
          (SBAR (IN As)
            (S
              (NP (DT the) (NN singer))
              (VP
                (VP (VBD knew))
                (CC and)
                (VP (VBD touched)
                  (NP (PRP it))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NNS ends))
                      (PP (IN of)
                        (NP (PDT all) (DT the) (NN Earth))))))))))))
    (. !)))

case(words-4, Through-1)
det(words-4, the-2)
amod(words-4, naked-3)
nmod:through(see-9, words-4)
cc(words-4, and-5)
compound(May-7, mean-6)
conj:and(words-4, May-7)
nmod:through(see-9, May-7)
nsubj(see-9, ye-8)
root(ROOT-0, see-9)
det(truth-11, the-10)
dobj(see-9, truth-11)
mark(knew-16, between-12)
mark(knew-16, As-13)
det(singer-15, the-14)
nsubj(knew-16, singer-15)
nsubj(touched-18, singer-15)
acl(truth-11, knew-16)
cc(knew-16, and-17)
acl(truth-11, touched-18)
conj:and(knew-16, touched-18)
dobj(touched-18, it-19)
case(ends-22, in-20)
det(ends-22, the-21)
nmod:in(touched-18, ends-22)
case(Earth-26, of-23)
det:predet(Earth-26, all-24)
det(Earth-26, the-25)
nmod:of(ends-22, Earth-26)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ Coastwise) (NNS Lights))
        (SBAR
          (S
            (NP (PRP$ Our) (NNS brows))
            (VP (VBP are)
              (VP (VBN bound)
                (PP (IN with)
                  (NP
                    (NP (NN spindrift))
                    (CC and)
                    (NP (DT the) (NN weed)))))))))
      (VP (VBZ is)
        (PP (IN on)
          (NP (PRP$ our) (NNS knees)))))
    (: ;)
    (S
      (NP (PRP$ Our) (NNS loins))
      (VP (VBP are)
        (VP (VBN battered)
          (S (`` `)
            (VP (VB neath)
              (NP (PRP us))
              (PP (IN by)
                (NP
                  (NP (DT the) (NN swinging))
                  (, ,)
                  (NP (NN smoking) (NNS seas)))))))))
    (. .)))

det(Lights-3, The-1)
amod(Lights-3, Coastwise-2)
nsubj(knees-16, Lights-3)
nmod:poss(brows-5, Our-4)
nsubjpass(bound-7, brows-5)
auxpass(bound-7, are-6)
acl:relcl(Lights-3, bound-7)
case(spindrift-9, with-8)
nmod:with(bound-7, spindrift-9)
cc(spindrift-9, and-10)
det(weed-12, the-11)
nmod:with(bound-7, weed-12)
conj:and(spindrift-9, weed-12)
cop(knees-16, is-13)
case(knees-16, on-14)
nmod:poss(knees-16, our-15)
root(ROOT-0, knees-16)
nmod:poss(loins-19, Our-18)
nsubjpass(battered-21, loins-19)
auxpass(battered-21, are-20)
parataxis(knees-16, battered-21)
ccomp(battered-21, neath-23)
dobj(neath-23, us-24)
case(swinging-27, by-25)
det(swinging-27, the-26)
nmod:by(neath-23, swinging-27)
compound(seas-30, smoking-29)
appos(swinging-27, seas-30)

(ROOT
  (S
    (PP (IN From)
      (NP (NN reef)
        (CC and)
        (NN rock)
        (CC and)
        (NN skerry)))
    (PRN (: --)
      (PP (IN over)
        (UCP
          (ADJP (JJ headland))
          (, ,)
          (ADJP (JJ ness))
          (, ,)
          (CC and)
          (NP (NN voe))))
      (: --))
    (NP
      (NP (DT The) (JJ Coastwise) (NNS Lights))
      (PP (IN of)
        (NP (NNP England))))
    (VP (VBP watch)
      (SBAR
        (S
          (NP
            (NP (DT the) (NNS ships))
            (PP (IN of)
              (NP (NNP England))))
          (VP (VBP go)))))
    (. !)))

case(reef-2, From-1)
nmod:from(watch-21, reef-2)
cc(reef-2, and-3)
conj:and(reef-2, rock-4)
nmod:from(watch-21, rock-4)
cc(reef-2, and-5)
conj:and(reef-2, skerry-6)
nmod:from(watch-21, skerry-6)
case(headland-9, over-8)
dep(watch-21, headland-9)
conj:and(headland-9, ness-11)
dep(watch-21, ness-11)
cc(headland-9, and-13)
conj:and(headland-9, voe-14)
dep(watch-21, voe-14)
det(Lights-18, The-16)
amod(Lights-18, Coastwise-17)
nsubj(watch-21, Lights-18)
case(England-20, of-19)
nmod:of(Lights-18, England-20)
root(ROOT-0, watch-21)
det(ships-23, the-22)
nsubj(go-26, ships-23)
case(England-25, of-24)
nmod:of(ships-23, England-25)
ccomp(watch-21, go-26)

(ROOT
  (S
    (PP (IN Through)
      (NP (DT the) (JJ endless) (NN summer) (NNS evenings)))
    (, ,)
    (PP (IN on)
      (NP (DT the) (NNS lineless)))
    (, ,)
    (S
      (NP (NN level) (NNS floors))
      (: ;)
      (PP (IN Through)
        (NP (DT the) (NN yelling)))
      (NP (NNP Channel))
      (VP (VBP tempest)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN siren))
            (VP
              (VP (VBZ hoots))
              (CC and)
              (VP (VBZ roars)))))))
    (PRN (: --)
      (PP (IN By)
        (NP
          (NP (NN day))
          (UCP
            (NP (DT the) (VBG dipping) (NN house-flag))
            (CC and)
            (S
              (PP (IN by)
                (NP (NN night)))
              (NP (DT the) (NN rocket))
              (VP (VBZ 's)
                (NP (NN trail)))))))
      (: --))
    (S
      (PP (IN As)
        (NP (DT the) (NN sheep)))
      (NP (DT that))
      (VP (VBP graze)
        (PRT (RP behind))
        (NP (PRP us))
        (SBAR (IN so)
          (S
            (NP (PRP we))
            (VP (VBP know)
              (NP (PRP them))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP they))
                  (VP (VB hail)))))))))
    (. .)))

case(evenings-5, Through-1)
det(evenings-5, the-2)
amod(evenings-5, endless-3)
compound(evenings-5, summer-4)
nmod:through(tempest-18, evenings-5)
case(lineless-9, on-7)
det(lineless-9, the-8)
nmod:on(tempest-18, lineless-9)
compound(floors-12, level-11)
nsubj(tempest-18, floors-12)
case(yelling-16, Through-14)
det(yelling-16, the-15)
nmod:through(tempest-18, yelling-16)
nsubj(tempest-18, Channel-17)
root(ROOT-0, tempest-18)
advmod(hoots-22, when-19)
det(siren-21, the-20)
nsubj(hoots-22, siren-21)
nsubj(roars-24, siren-21)
advcl(tempest-18, hoots-22)
cc(hoots-22, and-23)
advcl(tempest-18, roars-24)
conj:and(hoots-22, roars-24)
case(day-27, By-26)
dep(tempest-18, day-27)
det(house-flag-30, the-28)
amod(house-flag-30, dipping-29)
dep(day-27, house-flag-30)
cc(house-flag-30, and-31)
case(night-33, by-32)
nmod:by(trail-37, night-33)
det(rocket-35, the-34)
nsubj(trail-37, rocket-35)
cop(trail-37, 's-36)
dep(day-27, trail-37)
conj:and(house-flag-30, trail-37)
case(sheep-41, As-39)
det(sheep-41, the-40)
nmod:as(graze-43, sheep-41)
nsubj(graze-43, that-42)
parataxis(tempest-18, graze-43)
compound:prt(graze-43, behind-44)
dobj(graze-43, us-45)
mark(know-48, so-46)
nsubj(know-48, we-47)
advcl(graze-43, know-48)
dobj(know-48, them-49)
advmod(hail-52, where-50)
nsubj(hail-52, they-51)
advcl(know-48, hail-52)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VB bridge)
          (PP (IN across)
            (NP (DT the) (NN dark))))
        (CC and)
        (VP (VB bid)
          (S
            (NP (DT the) (NN helmsman))
            (VP (VB have)
              (NP
                (NP (DT a) (NN care))
                (, ,)
                (NP
                  (NP (DT The) (NN flash))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (ADVP (RB wheeling) (RB inland))
                      (VP (VBZ wakes)
                        (NP (PRP$ his) (VBG sleeping) (NN wife))
                        (PP (TO to)
                          (NP (NN prayer)))))))))))))
    (: ;)
    (S
      (PP (IN From)
        (NP
          (NP (PRP$ our) (JJ vexed) (NNS eyries))
          (, ,)
          (NP (NN head)
            (S
              (VP (TO to)
                (VP (VB gale)))))))
      (, ,)
      (NP (PRP we))
      (VP (VBD bind)
        (PP (IN in)
          (NP (NN burning) (NNS chains)))
        (NP
          (NP (DT The) (NN lover))
          (PP (IN from)
            (NP
              (NP
                (NP (DT the) (NN sea-rim))
                (VP (VBN drawn)))
              (: --)
              (NP
                (NP (PRP$ his) (NN love))
                (PP (IN in)
                  (NP (JJ English) (NNS lanes)))))))))
    (. .)))

nsubj(bridge-2, We-1)
nsubj(bid-7, We-1)
root(ROOT-0, bridge-2)
case(dark-5, across-3)
det(dark-5, the-4)
nmod:across(bridge-2, dark-5)
cc(bridge-2, and-6)
conj:and(bridge-2, bid-7)
det(helmsman-9, the-8)
nsubj(have-10, helmsman-9)
ccomp(bid-7, have-10)
det(care-12, a-11)
dobj(have-10, care-12)
det(flash-15, The-14)
appos(care-12, flash-15)
nsubj(wakes-19, flash-15)
ref(flash-15, that-16)
advmod(inland-18, wheeling-17)
advmod(wakes-19, inland-18)
acl:relcl(flash-15, wakes-19)
nmod:poss(wife-22, his-20)
amod(wife-22, sleeping-21)
dobj(wakes-19, wife-22)
case(prayer-24, to-23)
nmod:to(wakes-19, prayer-24)
case(eyries-29, From-26)
nmod:poss(eyries-29, our-27)
amod(eyries-29, vexed-28)
nmod:from(bind-36, eyries-29)
appos(eyries-29, head-31)
mark(gale-33, to-32)
acl(head-31, gale-33)
nsubj(bind-36, we-35)
parataxis(bridge-2, bind-36)
case(chains-39, in-37)
compound(chains-39, burning-38)
nmod:in(bind-36, chains-39)
det(lover-41, The-40)
dobj(bind-36, lover-41)
case(sea-rim-44, from-42)
det(sea-rim-44, the-43)
nmod:from(lover-41, sea-rim-44)
acl(sea-rim-44, drawn-45)
nmod:poss(love-48, his-47)
dep(sea-rim-44, love-48)
case(lanes-51, in-49)
amod(lanes-51, English-50)
nmod:in(love-48, lanes-51)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP greet)
        (S
          (NP (DT the) (NNS clippers))
          (VP (VBG wing-and-wing)
            (S
              (NP (DT that) (NN race))
              (NP (DT the) (NNP Southern) (NN wool)))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBP warn)
        (NP
          (NP
            (NP
              (NP (DT the) (JJ crawling) (NNS cargo-tanks))
              (PP (IN of)
                (NP (NNP Bremen) (, ,) (NNP Leith) (, ,)
                  (CC and)
                  (NNP Hull))))
            (: ;)
            (S
              (VP (TO To)
                (VP
                  (NP
                    (NP (DT each))
                    (CC and)
                    (ADVP (DT all))
                    (NP (PRP$ our) (JJ equal) (NN lamp)))
                  (PP (IN at)
                    (NP
                      (NP (NN peril))
                      (PP (IN of)
                        (NP (DT the) (NN sea)))))))))
          (: --)
          (NP (DT The) (JJ white) (JJ wall-sided) (NNS war-ships))
          (CC or)
          (NP
            (NP (DT the) (NNS whalers))
            (PP (IN of)
              (NP (NNP Dundee)))))))
    (. !)))

nsubj(greet-2, We-1)
root(ROOT-0, greet-2)
det(clippers-4, the-3)
nsubj(wing-and-wing-5, clippers-4)
dep(greet-2, wing-and-wing-5)
det(race-7, that-6)
nsubj(wool-10, race-7)
det(wool-10, the-8)
compound(wool-10, Southern-9)
xcomp(wing-and-wing-5, wool-10)
nsubj(warn-13, We-12)
parataxis(greet-2, warn-13)
det(cargo-tanks-16, the-14)
amod(cargo-tanks-16, crawling-15)
dobj(warn-13, cargo-tanks-16)
case(Bremen-18, of-17)
nmod:of(cargo-tanks-16, Bremen-18)
nmod:of(cargo-tanks-16, Leith-20)
conj:and(Bremen-18, Leith-20)
cc(Bremen-18, and-22)
nmod:of(cargo-tanks-16, Hull-23)
conj:and(Bremen-18, Hull-23)
mark(each-26, To-25)
acl(cargo-tanks-16, each-26)
cc(each-26, and-27)
advmod(each-26, all-28)
nmod:poss(lamp-31, our-29)
amod(lamp-31, equal-30)
acl(cargo-tanks-16, lamp-31)
conj:and(each-26, lamp-31)
case(peril-33, at-32)
nmod:at(each-26, peril-33)
case(sea-36, of-34)
det(sea-36, the-35)
nmod:of(peril-33, sea-36)
det(war-ships-41, The-38)
amod(war-ships-41, white-39)
amod(war-ships-41, wall-sided-40)
dobj(warn-13, war-ships-41)
conj:or(cargo-tanks-16, war-ships-41)
cc(cargo-tanks-16, or-42)
det(whalers-44, the-43)
dobj(warn-13, whalers-44)
conj:or(cargo-tanks-16, whalers-44)
case(Dundee-46, of-45)
nmod:of(whalers-44, Dundee-46)

(ROOT
  (SQ
    (VP
      (VP (VB Come)
        (PRT (RP up)))
      (, ,)
      (VP (VB come)
        (PRT (RP in))
        (PP (IN from)
          (NP (NNP Eastward))))
      (, ,)
      (PP (IN from)
        (NP
          (NP (DT the) (NNS guardports))
          (PP (IN of)
            (NP (DT the) (NNP Morn))))))
    (. !)))

root(ROOT-0, Come-1)
compound:prt(Come-1, up-2)
dep(Come-1, come-4)
compound:prt(come-4, in-5)
case(Eastward-7, from-6)
nmod:from(come-4, Eastward-7)
case(guardports-11, from-9)
det(guardports-11, the-10)
nmod:from(Come-1, guardports-11)
case(Morn-14, of-12)
det(Morn-14, the-13)
nmod:of(guardports-11, Morn-14)

(ROOT
  (S
    (ADVP (RB Beat) (RB up))
    (, ,)
    (VP (VB beat)
      (PRT (RP in))
      (PP (IN from)
        (NP (NNP Southerly)))
      (, ,)
      (NP
        (NP (NNP O) (NNS gipsies))
        (PP (IN of)
          (NP (DT the) (NNP Horn)))))
    (. !)))

advmod(up-2, Beat-1)
advmod(beat-4, up-2)
root(ROOT-0, beat-4)
compound:prt(beat-4, in-5)
case(Southerly-7, from-6)
nmod:from(beat-4, Southerly-7)
compound(gipsies-10, O-9)
dobj(beat-4, gipsies-10)
case(Horn-13, of-11)
det(Horn-13, the-12)
nmod:of(gipsies-10, Horn-13)

(ROOT
  (S
    (NP
      (NP (NNP Swift) (NNP shuttles))
      (PP (IN of)
        (NP
          (NP
            (NP (DT an) (NN Empire) (POS 's))
            (NN loom))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP weave)
                (NP (PRP us))))))))
    (, ,)
    (NP
      (NP (JJ main))
      (PP (TO to)
        (NP
          (NP (JJ main))
          (, ,)
          (NP
            (NP (DT The) (JJ Coastwise) (NNS Lights))
            (PP (IN of)
              (NP (NNP England)))))))
    (VP (VB give)
      (S
        (NP (PRP you))
        (VP (VB welcome)
          (ADVP (RB back) (RB again)))))
    (. !)))

compound(shuttles-2, Swift-1)
nsubj(give-21, shuttles-2)
case(loom-7, of-3)
det(Empire-5, an-4)
nmod:poss(loom-7, Empire-5)
case(Empire-5, 's-6)
nmod:of(shuttles-2, loom-7)
nsubj(weave-9, loom-7)
ref(loom-7, that-8)
acl:relcl(loom-7, weave-9)
dobj(weave-9, us-10)
nsubj(give-21, main-12)
case(main-14, to-13)
nmod:to(main-12, main-14)
det(Lights-18, The-16)
amod(Lights-18, Coastwise-17)
appos(main-14, Lights-18)
case(England-20, of-19)
nmod:of(Lights-18, England-20)
root(ROOT-0, give-21)
nsubj(welcome-23, you-22)
ccomp(give-21, welcome-23)
advmod(again-25, back-24)
advmod(welcome-23, again-25)

(ROOT
  (S
    (VP
      (VP (VB Go))
      (, ,)
      (VP
        (VP (VB get)
          (S
            (NP (PRP you))
            (VP (VBN gone)
              (NP (NN up-Channel))
              (PP (IN with)
                (NP (DT the) (NN sea-crust)))
              (PP (IN on)
                (NP (PRP$ your) (NNS plates))))))
        (: ;)
        (VP (VB Go)))
      (, ,)
      (VP (VB get)
        (NP (PRP you))
        (PP (IN into)
          (NP (NNP London)))
        (PP (IN with)
          (NP
            (NP (DT the) (NN burden))
            (PP (IN of)
              (NP (PRP$ your) (NNS freights)))))))
    (. !)))

root(ROOT-0, Go-1)
dep(Go-1, get-3)
nsubj(gone-5, you-4)
dep(get-3, gone-5)
dobj(gone-5, up-Channel-6)
case(sea-crust-9, with-7)
det(sea-crust-9, the-8)
nmod:with(gone-5, sea-crust-9)
case(plates-12, on-10)
nmod:poss(plates-12, your-11)
nmod:on(gone-5, plates-12)
dep(get-3, Go-14)
dep(Go-1, get-16)
dobj(get-16, you-17)
case(London-19, into-18)
nmod:into(get-16, London-19)
case(burden-22, with-20)
det(burden-22, the-21)
nmod:with(get-16, burden-22)
case(freights-25, of-23)
nmod:poss(freights-25, your-24)
nmod:of(burden-22, freights-25)

(ROOT
  (S
    (ADVP (RB Haste))
    (, ,)
    (SBAR (IN for)
      (S
        (NP (PRP they))
        (VP (VBP talk)
          (PP (IN of)
            (NP (NNP Empire)))
          (NP (RB there))
          (, ,)
          (CC and)
          (VBP say) (, ,)
          (SBAR (IN if)
            (S
              (NP (DT any))
              (VP (VBP seek)))))))
    (, ,)
    (NP
      (NP (DT The) (NNS Lights))
      (PP (IN of)
        (NP (NNP England))))
    (VP
      (VP (VBD sent)
        (NP (PRP you)))
      (CC and)
      (VP
        (PP (IN by)
          (NP (NN silence)))
        (MD shall)
        (VP
          (ADVP (RB ye))
          (VB speak))))
    (. !)))

advmod(sent-21, Haste-1)
mark(talk-5, for-3)
nsubj(talk-5, they-4)
nsubj(say-11, they-4)
advcl(sent-21, talk-5)
case(Empire-7, of-6)
nmod:of(talk-5, Empire-7)
dobj(talk-5, there-8)
cc(talk-5, and-10)
conj:and(talk-5, say-11)
advcl(sent-21, say-11)
mark(seek-15, if-13)
nsubj(seek-15, any-14)
advcl(talk-5, seek-15)
det(Lights-18, The-17)
nsubj(sent-21, Lights-18)
nsubj(speak-28, Lights-18)
case(England-20, of-19)
nmod:of(Lights-18, England-20)
root(ROOT-0, sent-21)
dobj(sent-21, you-22)
cc(sent-21, and-23)
case(silence-25, by-24)
nmod:by(speak-28, silence-25)
aux(speak-28, shall-26)
advmod(speak-28, ye-27)
conj:and(sent-21, speak-28)

(ROOT
  (NP
    (NP
      (NP (DT The) (NN Song))
      (PP (IN of)
        (NP
          (NP (DT the) (NNP Dead) (NNP Hear))
          (ADVP (RB now)
            (NP (DT the) (NN Song)))))
      (PP (IN of)
        (NP (DT the) (NNP Dead)))
      (: --)
      (PP (IN in)
        (NP
          (NP (DT the) (NNP North))
          (PP (IN by)
            (NP (DT the) (JJ torn) (NNS berg-edges))))))
    (: --)
    (NP
      (NP (PRP They))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP look)
            (ADVP (RB still))
            (PP (TO to)
              (NP (DT the) (NNP Pole)))
            (, ,)
            (ADJP (JJ asleep)
              (PP (IN by)
                (NP (PRP$ their) (JJ hide-stripped) (NNS sledges))))))))
    (. .)))

det(Song-2, The-1)
root(ROOT-0, Song-2)
case(Hear-6, of-3)
det(Hear-6, the-4)
compound(Hear-6, Dead-5)
nmod:of(Song-2, Hear-6)
advmod(Hear-6, now-7)
det(Song-9, the-8)
nmod:npmod(now-7, Song-9)
case(Dead-12, of-10)
det(Dead-12, the-11)
nmod:of(Song-2, Dead-12)
case(North-16, in-14)
det(North-16, the-15)
nmod:in(Song-2, North-16)
case(berg-edges-20, by-17)
det(berg-edges-20, the-18)
amod(berg-edges-20, torn-19)
nmod:by(North-16, berg-edges-20)
dep(Song-2, They-22)
nsubj(look-24, They-22)
ref(They-22, that-23)
acl:relcl(They-22, look-24)
advmod(look-24, still-25)
case(Pole-28, to-26)
det(Pole-28, the-27)
nmod:to(look-24, Pole-28)
xcomp(look-24, asleep-30)
case(sledges-34, by-31)
nmod:poss(sledges-34, their-32)
amod(sledges-34, hide-stripped-33)
nmod:by(asleep-30, sledges-34)

(ROOT
  (NP
    (NP
      (NP (NN Song))
      (PP (IN of)
        (NP
          (NP (DT the) (NNP Dead))
          (PP (IN in)
            (NP (DT the) (NNP South))))))
    (: --)
    (NP
      (PP (IN in)
        (NP (DT the) (NN sun)))
      (PP (IN by)
        (NP
          (NP (PRP$ their) (NN skeleton) (NNS horses))
          (, ,)
          (SBAR
            (WHADVP (WRB Where))
            (S
              (NP
                (NP (DT the) (JJ warrigal) (NNS whimpers)
                  (CC and)
                  (NNS bays))
                (PP (IN through)
                  (NP
                    (NP (DT the) (NN dust))
                    (PP (IN of)
                      (NP (DT the) (NN sear))))))
              (VP (VBZ river-courses)))))))
    (. .)))

root(ROOT-0, Song-1)
case(Dead-4, of-2)
det(Dead-4, the-3)
nmod:of(Song-1, Dead-4)
case(South-7, in-5)
det(South-7, the-6)
nmod:in(Dead-4, South-7)
case(sun-11, in-9)
det(sun-11, the-10)
dep(Song-1, sun-11)
case(horses-15, by-12)
nmod:poss(horses-15, their-13)
compound(horses-15, skeleton-14)
nmod:by(sun-11, horses-15)
advmod(river-courses-29, Where-17)
det(whimpers-20, the-18)
amod(whimpers-20, warrigal-19)
nsubj(river-courses-29, whimpers-20)
cc(whimpers-20, and-21)
conj:and(whimpers-20, bays-22)
nsubj(river-courses-29, bays-22)
case(dust-25, through-23)
det(dust-25, the-24)
nmod:through(whimpers-20, dust-25)
case(sear-28, of-26)
det(sear-28, the-27)
nmod:of(dust-25, sear-28)
acl:relcl(horses-15, river-courses-29)

(ROOT
  (NP
    (NP (NN Song))
    (PP (IN of)
      (NP
        (NP (DT the) (NNP Dead))
        (PP (IN in)
          (NP (DT the) (NNP East)))
        (PRN (: --)
          (PP (IN in)
            (NP (DT the) (JJ heat-rotted) (NN jungle) (NNS hollows)))
          (, ,)
          (SBAR
            (WHADVP (WRB Where))
            (S
              (NP (DT the) (NN dog-ape))
              (VP (VBZ barks)
                (PP (IN in)
                  (NP (DT the) (NN kloof))))))
          (: --))))
    (PP (IN in)
      (NP (DT the) (NNP brake)))
    (PP (IN of)
      (NP (DT the) (NNS buffalo-wallows)))
    (. .)))

root(ROOT-0, Song-1)
case(Dead-4, of-2)
det(Dead-4, the-3)
nmod:of(Song-1, Dead-4)
case(East-7, in-5)
det(East-7, the-6)
nmod:in(Dead-4, East-7)
case(hollows-13, in-9)
det(hollows-13, the-10)
amod(hollows-13, heat-rotted-11)
compound(hollows-13, jungle-12)
nmod:in(barks-18, hollows-13)
advmod(barks-18, Where-15)
det(dog-ape-17, the-16)
nsubj(barks-18, dog-ape-17)
dep(Dead-4, barks-18)
case(kloof-21, in-19)
det(kloof-21, the-20)
nmod:in(barks-18, kloof-21)
case(brake-25, in-23)
det(brake-25, the-24)
nmod:in(Song-1, brake-25)
case(buffalo-wallows-28, of-26)
det(buffalo-wallows-28, the-27)
nmod:of(Song-1, buffalo-wallows-28)

(ROOT
  (NP
    (NP
      (NP (NN Song))
      (PP (IN of)
        (NP
          (NP
            (NP (DT the) (NNP Dead))
            (PP (IN in)
              (NP (DT the) (NNP West))))
          (PRN (: --)
            (PP (IN in)
              (NP (DT the) (NNPS Barrens)))
            (, ,)
            (NP
              (NP (DT the) (NN waste))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBN betrayed)
                    (NP (PRP them))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB Where))
                      (S
                        (NP (DT the) (NN wolverene))
                        (VP (VBZ tumbles)
                          (NP (PRP$ their) (NNS packs))
                          (PP (IN from)
                            (NP (DT the) (NN camp)))))))))))
          (CC and)
          (NP
            (NP (DT the) (NN grave-mound))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBD made)
                  (NP (PRP them)))))))))
    (: ;)
    (NP
      (NP (NNP Hear))
      (RRC
        (ADVP (RB now))
        (NP
          (NP (DT the) (NN Song))
          (PP (IN of)
            (NP (DT the) (NNP Dead))))))
    (. !)))

root(ROOT-0, Song-1)
case(Dead-4, of-2)
det(Dead-4, the-3)
nmod:of(Song-1, Dead-4)
case(West-7, in-5)
det(West-7, the-6)
nmod:in(Dead-4, West-7)
case(Barrens-11, in-9)
det(Barrens-11, the-10)
nmod:in(waste-14, Barrens-11)
det(waste-14, the-13)
dep(Dead-4, waste-14)
nsubj(betrayed-16, waste-14)
ref(waste-14, that-15)
acl:relcl(waste-14, betrayed-16)
dobj(betrayed-16, them-17)
advmod(tumbles-22, Where-19)
det(wolverene-21, the-20)
nsubj(tumbles-22, wolverene-21)
advcl(betrayed-16, tumbles-22)
nmod:poss(packs-24, their-23)
dobj(tumbles-22, packs-24)
case(camp-27, from-25)
det(camp-27, the-26)
nmod:from(tumbles-22, camp-27)
cc(Dead-4, and-28)
det(grave-mound-30, the-29)
nmod:of(Song-1, grave-mound-30)
conj:and(Dead-4, grave-mound-30)
nsubj(made-32, they-31)
acl:relcl(grave-mound-30, made-32)
dobj(made-32, them-33)
dep(Song-1, Hear-35)
advmod(Song-38, now-36)
det(Song-38, the-37)
acl:relcl(Hear-35, Song-38)
case(Dead-41, of-39)
det(Dead-41, the-40)
nmod:of(Song-38, Dead-41)

(ROOT
  (S
    (S
      (NP (PRP I))
      (PRN
        (S
          (NP (PRP We))
          (VP (VBD were)
            (ADJP (JJ dreamers))))
        (, ,))
      (VP (VBD dreaming)
        (ADVP (RB greatly))
        (, ,)
        (PP (IN in)
          (NP (DT the) (JJ man-stifled) (NN town)))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBD yearned)
        (PP (IN beyond)
          (NP (DT the) (NN sky-line)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (JJ strange) (NNS roads))
            (VP (VBP go)
              (PRT (RP down)))))))
    (. .)))

nsubj(dreaming-6, I-1)
nsubj(dreamers-4, We-2)
cop(dreamers-4, were-3)
parataxis(dreaming-6, dreamers-4)
root(ROOT-0, dreaming-6)
advmod(dreaming-6, greatly-7)
case(town-12, in-9)
det(town-12, the-10)
amod(town-12, man-stifled-11)
nmod:in(dreaming-6, town-12)
nsubj(yearned-15, We-14)
parataxis(dreaming-6, yearned-15)
case(sky-line-18, beyond-16)
det(sky-line-18, the-17)
nmod:beyond(yearned-15, sky-line-18)
advmod(go-23, where-19)
det(roads-22, the-20)
amod(roads-22, strange-21)
nsubj(go-23, roads-22)
advcl(yearned-15, go-23)
compound:prt(go-23, down-24)

(ROOT
  (S
    (NP
      (NP (NNP Came) (DT the) (NNP Whisper))
      (, ,)
      (VP (VBD came)
        (NP (DT the) (NNP Vision)))
      (, ,))
    (VP (VBD came)
      (NP (DT the) (NN Power))
      (PP (IN with)
        (NP (DT the) (NNP Need)))
      (, ,)
      (PP (IN Till)
        (NP
          (NP (DT the) (NN Soul))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is) (RB not)
                (NP
                  (NP
                    (NP (NN man) (POS 's))
                    (NN soul))
                  (SBAR
                    (S
                      (VP (VBD was)
                        (VP (VBN lent)
                          (S
                            (NP (PRP us))
                            (VP (TO to)
                              (VP (VB lead)))))))))))))))
    (. .)))

compound(Whisper-3, Came-1)
det(Whisper-3, the-2)
nsubj(came-9, Whisper-3)
acl(Whisper-3, came-5)
det(Vision-7, the-6)
dobj(came-5, Vision-7)
root(ROOT-0, came-9)
det(Power-11, the-10)
dobj(came-9, Power-11)
case(Need-14, with-12)
det(Need-14, the-13)
nmod:with(came-9, Need-14)
case(Soul-18, Till-16)
det(Soul-18, the-17)
nmod:till(came-9, Soul-18)
nsubj(soul-24, Soul-18)
ref(Soul-18, that-19)
cop(soul-24, is-20)
neg(soul-24, not-21)
nmod:poss(soul-24, man-22)
case(man-22, 's-23)
acl:relcl(Soul-18, soul-24)
auxpass(lent-26, was-25)
acl:relcl(soul-24, lent-26)
dobj(lent-26, us-27)
nsubj:xsubj(lead-29, us-27)
mark(lead-29, to-28)
xcomp(lent-26, lead-29)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (DT the) (NNS deer))
        (VP (VBZ breaks)
          (PRN (: --)
            (SBAR (IN as)
              (S
                (NP (DT the) (NN steer))
                (VP (VBZ breaks))))
            (: --))
          (PP (IN from)
            (NP
              (NP (DT the) (NN herd))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP they))
                  (VP (VBP graze)))))))))
    (, ,)
    (PP (IN In)
      (NP
        (NP (DT the) (NN faith))
        (PP (IN of)
          (NP (JJ little) (NNS children)))))
    (NP (PRP we))
    (VP (VBD went)
      (PP (IN on)
        (NP (PRP$ our) (NNS ways))))
    (. .)))

mark(breaks-4, As-1)
det(deer-3, the-2)
nsubj(breaks-4, deer-3)
advcl(went-25, breaks-4)
mark(breaks-9, as-6)
det(steer-8, the-7)
nsubj(breaks-9, steer-8)
parataxis(breaks-4, breaks-9)
case(herd-13, from-11)
det(herd-13, the-12)
nmod:from(breaks-4, herd-13)
advmod(graze-16, where-14)
nsubj(graze-16, they-15)
acl:relcl(herd-13, graze-16)
case(faith-20, In-18)
det(faith-20, the-19)
nmod:in(went-25, faith-20)
case(children-23, of-21)
amod(children-23, little-22)
nmod:of(faith-20, children-23)
nsubj(went-25, we-24)
root(ROOT-0, went-25)
case(ways-28, on-26)
nmod:poss(ways-28, our-27)
nmod:on(went-25, ways-28)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (DT the) (NN wood))
      (VP (VBD failed)))
    (: --)
    (S
      (ADVP (RB then))
      (NP (DT the) (NN food))
      (VP (VBD failed)))
    (: --)
    (S
      (ADVP (RB then))
      (NP (DT the) (JJ last) (NN water))
      (VP (VBD dried)))
    (: --)
    (S
      (PP (IN In)
        (NP
          (NP (DT the) (NN faith))
          (PP (IN of)
            (NP (JJ little) (NNS children)))))
      (NP (PRP we))
      (VP
        (VP (VBD lay)
          (PRT (RP down)))
        (CC and)
        (VP (VBD died))))
    (. .)))

advmod(failed-4, Then-1)
det(wood-3, the-2)
nsubj(failed-4, wood-3)
root(ROOT-0, failed-4)
advmod(failed-9, then-6)
det(food-8, the-7)
nsubj(failed-9, food-8)
parataxis(failed-4, failed-9)
advmod(dried-15, then-11)
det(water-14, the-12)
amod(water-14, last-13)
nsubj(dried-15, water-14)
parataxis(failed-4, dried-15)
case(faith-19, In-17)
det(faith-19, the-18)
nmod:in(lay-24, faith-19)
case(children-22, of-20)
amod(children-22, little-21)
nmod:of(faith-19, children-22)
nsubj(lay-24, we-23)
nsubj(died-27, we-23)
parataxis(failed-4, lay-24)
compound:prt(lay-24, down-25)
cc(lay-24, and-26)
parataxis(failed-4, died-27)
conj:and(lay-24, died-27)

(ROOT
  (S
    (S
      (PP (IN On)
        (NP
          (NP
            (NP (DT the) (NN sand-drift))
            (PRN (: --)
              (PP (IN on)
                (NP (DT the) (NN veldt-side)))
              (: --)))
          (PP (IN in)
            (NP (DT the) (NN fern-scrub)))))
      (NP (PRP we))
      (VP (VBD lay)))
    (, ,)
    (NP (DT That) (PRP$ our) (NNS sons))
    (VP (MD might)
      (VP (VB follow)
        (PP (IN after) (IN by)
          (NP
            (NP (DT the) (NNS bones))
            (PP (IN on)
              (NP (DT the) (NN way)))))))
    (. .)))

case(sand-drift-3, On-1)
det(sand-drift-3, the-2)
nmod:on(lay-13, sand-drift-3)
case(veldt-side-7, on-5)
det(veldt-side-7, the-6)
nmod:on(sand-drift-3, veldt-side-7)
case(fern-scrub-11, in-9)
det(fern-scrub-11, the-10)
nmod:in(sand-drift-3, fern-scrub-11)
nsubj(lay-13, we-12)
ccomp(follow-19, lay-13)
det:predet(sons-17, That-15)
nmod:poss(sons-17, our-16)
nsubj(follow-19, sons-17)
aux(follow-19, might-18)
root(ROOT-0, follow-19)
case(bones-23, after-20)
case(bones-23, by-21)
det(bones-23, the-22)
nmod:by(follow-19, bones-23)
case(way-26, on-24)
det(way-26, the-25)
nmod:on(bones-23, way-26)

(ROOT
  (SQ
    (VP
      (VP (VB Follow)
        (PP (IN after)))
      (: --)
      (VP (VB follow)
        (PP (IN after))))
    (. !)))

root(ROOT-0, Follow-1)
nmod(Follow-1, after-2)
dep(Follow-1, follow-4)
nmod(follow-4, after-5)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP have)
        (VP (VBD watered)
          (NP (DT the) (NN root)))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NN bud))
      (VP (VBZ has)
        (VP (VBN come)
          (PP (TO to)
            (NP
              (NP (NN blossom))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ ripens)
                    (PP (IN for)
                      (NP (NN fruit)))))))))))
    (. !)))

nsubj(watered-3, We-1)
aux(watered-3, have-2)
root(ROOT-0, watered-3)
det(root-5, the-4)
dobj(watered-3, root-5)
cc(watered-3, And-7)
det(bud-9, the-8)
nsubj(come-11, bud-9)
aux(come-11, has-10)
conj:and(watered-3, come-11)
case(blossom-13, to-12)
nmod:to(come-11, blossom-13)
nsubj(ripens-15, blossom-13)
ref(blossom-13, that-14)
acl:relcl(blossom-13, ripens-15)
case(fruit-17, for-16)
nmod:for(ripens-15, fruit-17)

(ROOT
  (S
    (S
      (VP (VB Follow)
        (PP (IN after))))
    (: --)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (VP (VBG waiting) (, ,)
          (PP (IN by)
            (NP
              (NP (DT the) (NNS trails))
              (SBAR (IN that)
                (S
                  (NP (PRP we))
                  (VP (VBN lost)
                    (PRN (, ,)
                      (PP (IN For)
                        (NP
                          (NP (DT the) (NNS sounds))
                          (PP (IN of)
                            (NP (JJ many) (NNS footsteps)))))
                      (, ,))
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN tread))
                        (PP (IN of)
                          (NP (DT a) (NN host)))))))))))))
    (. .)))

root(ROOT-0, Follow-1)
nmod(Follow-1, after-2)
nsubj(waiting-6, we-4)
aux(waiting-6, are-5)
parataxis(Follow-1, waiting-6)
case(trails-10, by-8)
det(trails-10, the-9)
nmod:by(waiting-6, trails-10)
mark(lost-13, that-11)
nsubj(lost-13, we-12)
dep(trails-10, lost-13)
case(sounds-17, For-15)
det(sounds-17, the-16)
dep(lost-13, sounds-17)
case(footsteps-20, of-18)
amod(footsteps-20, many-19)
nmod:of(sounds-17, footsteps-20)
case(tread-24, for-22)
det(tread-24, the-23)
nmod:for(lost-13, tread-24)
case(host-27, of-25)
det(host-27, a-26)
nmod:of(tread-24, host-27)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (NNP Follow))
          (PRN
            (PP (IN after)))
          (PRN (: --)
            (S
              (VP (VB follow)
                (PP (IN after))))
            (: --)))
        (PP (IN for)
          (NP (DT the) (NN harvest))))
      (VP (VBZ is)
        (ADJP (JJ sown))))
    (: :)
    (S
      (PP (IN By)
        (NP
          (NP (DT the) (NNS bones))
          (PP (IN about)
            (NP (DT the) (NN wayside)))))
      (NP (PRP ye))
      (VP (MD shall)
        (VP (VB come)
          (PP (TO to)
            (NP (PRP$ your) (JJ own))))))
    (. !)))

nsubj(sown-11, Follow-1)
nmod(Follow-1, after-2)
dep(Follow-1, follow-4)
nmod(follow-4, after-5)
case(harvest-9, for-7)
det(harvest-9, the-8)
nmod:for(Follow-1, harvest-9)
cop(sown-11, is-10)
root(ROOT-0, sown-11)
case(bones-15, By-13)
det(bones-15, the-14)
nmod:by(come-21, bones-15)
case(wayside-18, about-16)
det(wayside-18, the-17)
nmod:about(bones-15, wayside-18)
nsubj(come-21, ye-19)
aux(come-21, shall-20)
parataxis(sown-11, come-21)
case(own-24, to-22)
nmod:poss(own-24, your-23)
nmod:to(come-21, own-24)

(ROOT
  (S
    (S
      (S
        (SBAR
          (WHADVP (WRB When))
          (S
            (S
              (NP (NNP Drake))
              (VP (VBD went)
                (PRT (RP down))
                (PP (TO to)
                  (NP (DT the) (NNP Horn)))))
            (CC And)
            (S
              (NP (NNP England))
              (VP (VBD was)
                (VP (VBN crowned)
                  (ADVP (RB thereby)))))))
        (, ,) (`` `)
        (NP (NNP Twixt) (NNS seas))
        (VP (VBD unsailed)))
      (CC and)
      (S
        (NP (NNS shores))
        (VP (VBD unhailed)
          (NP (PRP$ Our) (NN Lodge)))))
    (: --)
    (S
      (NP (PRP$ our) (NN Lodge))
      (VP (VBD was)
        (VP (VBN born)
          (PRN (-LRB- -LRB-)
            (FRAG (CC And)
              (NP
                (NP (NNP England))
                (SBAR
                  (S
                    (VP (VBD was)
                      (VP (VBN crowned)
                        (ADVP (RB thereby)))))))
              (. !))
            (-RRB- -RRB-)))))))

advmod(went-3, When-1)
nsubj(went-3, Drake-2)
advcl(unsailed-17, went-3)
compound:prt(went-3, down-4)
case(Horn-7, to-5)
det(Horn-7, the-6)
nmod:to(went-3, Horn-7)
cc(went-3, And-8)
nsubjpass(crowned-11, England-9)
auxpass(crowned-11, was-10)
conj:and(went-3, crowned-11)
advcl(unsailed-17, crowned-11)
advmod(crowned-11, thereby-12)
compound(seas-16, Twixt-15)
nsubj(unsailed-17, seas-16)
root(ROOT-0, unsailed-17)
cc(unsailed-17, and-18)
nsubj(unhailed-20, shores-19)
conj:and(unsailed-17, unhailed-20)
nmod:poss(Lodge-22, Our-21)
dobj(unhailed-20, Lodge-22)
nmod:poss(Lodge-25, our-24)
nsubjpass(born-27, Lodge-25)
auxpass(born-27, was-26)
parataxis(unsailed-17, born-27)
cc(England-30, And-29)
dep(born-27, England-30)
auxpass(crowned-32, was-31)
acl:relcl(England-30, crowned-32)
advmod(crowned-32, thereby-33)

(ROOT
  (S
    (NP (WDT Which))
    (ADVP (RB never))
    (VP (MD shall)
      (VP (VB close)
        (UCP
          (ADVP (RB again)
            (PP (IN By)
              (NP (NN day))))
          (CC nor)
          (PP
            (ADVP (RB yet))
            (IN by)
            (NP
              (NP (NN night))
              (, ,)
              (UCP
                (SBAR (IN While)
                  (S
                    (NP (NN man))
                    (VP (MD shall)
                      (VP (VB take)
                        (NP (PRP$ his) (NN life))
                        (PP (TO to)
                          (NP (NN stake)))))))
                (PP (IN At)
                  (NP
                    (NP (NN risk))
                    (PP (IN of)
                      (NP (JJ shoal)
                        (CC or)
                        (JJ main)))
                    (PRN (-LRB- -LRB-)
                      (PP (IN By)
                        (NP
                          (NP (NN day))
                          (VP (VBG nor)
                            (ADVP (RB yet))
                            (PP (IN by)
                              (NP (NN night))))))
                      (-RRB- -RRB-))))))))))
    (. .)))

nsubj(close-4, Which-1)
neg(close-4, never-2)
aux(close-4, shall-3)
root(ROOT-0, close-4)
advmod(nor-8, again-5)
case(day-7, By-6)
nmod:by(again-5, day-7)
advmod(close-4, nor-8)
advmod(night-11, yet-9)
case(night-11, by-10)
conj(nor-8, night-11)
mark(take-16, While-13)
nsubj(take-16, man-14)
aux(take-16, shall-15)
dep(night-11, take-16)
nmod:poss(life-18, his-17)
dobj(take-16, life-18)
case(stake-20, to-19)
nmod:to(take-16, stake-20)
case(risk-22, At-21)
dep(take-16, risk-22)
case(shoal-24, of-23)
nmod:of(risk-22, shoal-24)
cc(shoal-24, or-25)
nmod:of(risk-22, main-26)
conj:or(shoal-24, main-26)
case(day-29, By-28)
nmod:by(risk-22, day-29)
acl(day-29, nor-30)
advmod(nor-30, yet-31)
case(night-33, by-32)
nmod:by(nor-30, night-33)

(ROOT
  (FRAG (CC But)
    (ADVP (RB standeth))
    (SBAR
      (SBAR (RB even) (IN so)
        (S
          (PP (IN As)
            (NP (RB now)))
          (NP (PRP we))
          (VP (VBZ witness)
            (ADVP (RB here)))))
      (, ,)
      (SBAR (IN While)
        (S
          (NP (NNS men))
          (VP (VB depart) (, ,)
            (PP (IN of)
              (NP (JJ joyful) (NN heart)))
            (, ,)
            (NP
              (NP (NN Adventure))
              (PP (IN for)
                (NP
                  (S
                    (VP (TO to)
                      (VP (VB know))))
                  (PRN (-LRB- -LRB-)
                    (SQ
                      (VP
                        (ADVP (RB As) (RB now))
                        (VB bear)
                        (NP (NN witness))
                        (ADVP (RB here)))
                      (. !))
                    (-RRB- -RRB-)))))))))))

cc(standeth-2, But-1)
root(ROOT-0, standeth-2)
advmod(witness-8, even-3)
mark(witness-8, so-4)
case(now-6, As-5)
nmod:as(witness-8, now-6)
nsubj(witness-8, we-7)
dep(standeth-2, witness-8)
advmod(witness-8, here-9)
mark(depart-13, While-11)
nsubj(depart-13, men-12)
dep(witness-8, depart-13)
case(heart-17, of-15)
amod(heart-17, joyful-16)
nmod:of(depart-13, heart-17)
dobj(depart-13, Adventure-19)
case(bear-26, for-20)
mark(know-22, to-21)
dep(bear-26, know-22)
advmod(now-25, As-24)
advmod(bear-26, now-25)
nmod:for(Adventure-19, bear-26)
dobj(bear-26, witness-27)
advmod(bear-26, here-28)

(ROOT
  (FRAG
    (NP
      (NP (NNP II))
      (SBAR
        (S
          (S
            (NP (PRP We))
            (VP (VBP have)
              (VP (VBN fed)
                (NP (PRP$ our) (NN sea))
                (PP (IN for)
                  (NP (DT a) (CD thousand) (NNS years))))))
          (CC And)
          (S
            (NP (PRP she))
            (VP (VBZ calls)
              (NP (PRP us)))
            (PRN (, ,)
              (S
                (ADVP (RB still))
                (VP (VBN unfed)))
              (, ,))
            (SBAR (IN Though)
              (S
                (NP (EX there))
                (VP (VBZ 's)
                  (ADVP (RB never))
                  (NP
                    (NP (DT a) (NN wave))
                    (PP (IN of)
                      (NP (PDT all) (PRP$ her) (NNS waves)))))))))))
    (X (CC But)
      (VP (VBZ marks)
        (NP
          (NP (PRP$ our) (JJ English) (NN dead))
          (: :)
          (S
            (NP (PRP We))
            (VP (VBP have)
              (VP (VBN strawed)
                (NP (PRP$ our) (JJS best))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN weed) (POS 's))
                    (NN unrest)))
                (, ,)
                (PP (TO To)
                  (NP
                    (NP (DT the) (NN shark))
                    (CC and)
                    (NP (DT the) (VBG sheering) (NN gull)))))))))
      (. .))))

root(ROOT-0, II-1)
nsubj(fed-4, We-2)
aux(fed-4, have-3)
acl:relcl(II-1, fed-4)
nmod:poss(sea-6, our-5)
dobj(fed-4, sea-6)
case(years-10, for-7)
det(years-10, a-8)
nummod(years-10, thousand-9)
nmod:for(fed-4, years-10)
cc(fed-4, And-11)
nsubj(calls-13, she-12)
acl:relcl(II-1, calls-13)
conj:and(fed-4, calls-13)
dobj(calls-13, us-14)
advmod(unfed-17, still-16)
parataxis(calls-13, unfed-17)
mark('s-21, Though-19)
expl('s-21, there-20)
dep(calls-13, 's-21)
neg('s-21, never-22)
det(wave-24, a-23)
nsubj('s-21, wave-24)
case(waves-28, of-25)
det:predet(waves-28, all-26)
nmod:poss(waves-28, her-27)
nmod:of(wave-24, waves-28)
cc(marks-30, But-29)
dep(II-1, marks-30)
nmod:poss(dead-33, our-31)
amod(dead-33, English-32)
dobj(marks-30, dead-33)
nsubj(strawed-37, We-35)
aux(strawed-37, have-36)
dep(dead-33, strawed-37)
nmod:poss(best-39, our-38)
dobj(strawed-37, best-39)
case(unrest-44, to-40)
det(weed-42, the-41)
nmod:poss(unrest-44, weed-42)
case(weed-42, 's-43)
nmod:to(strawed-37, unrest-44)
case(shark-48, To-46)
det(shark-48, the-47)
nmod:to(strawed-37, shark-48)
cc(shark-48, and-49)
det(gull-52, the-50)
amod(gull-52, sheering-51)
nmod:to(strawed-37, gull-52)
conj:and(shark-48, gull-52)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN blood))
        (VP (VB be)
          (NP
            (NP (DT the) (NN price))
            (PP (IN of)
              (NP
                (NP (NN admiralty))
                (, ,)
                (NP (NNP Lord) (NNP God))))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP ha)
      (SBAR
        (S
          (NP (POS '))
          (VP (VBN paid)
            (PP (IN in)
              (ADJP (JJ full)))))))
    (. !)))

mark(price-5, If-1)
nsubj(price-5, blood-2)
cop(price-5, be-3)
det(price-5, the-4)
advcl(ha-13, price-5)
case(admiralty-7, of-6)
nmod:of(price-5, admiralty-7)
compound(God-10, Lord-9)
appos(admiralty-7, God-10)
nsubj(ha-13, we-12)
root(ROOT-0, ha-13)
nsubj(paid-15, '-14)
ccomp(ha-13, paid-15)
case(full-17, in-16)
advcl(paid-15, full-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (ADVP (RB never))
      (NP
        (NP (DT a) (NN flood))
        (SBAR
          (S
            (VP (VBZ goes)
              (SBAR
                (S
                  (S
                    (VP (VBN shoreward)
                      (ADVP (RB now))))
                  (CC But)
                  (S
                    (VP (VBZ lifts)
                      (NP
                        (NP (DT a) (NN keel))
                        (SBAR
                          (S
                            (S
                              (NP (PRP we))
                              (VP (VBD manned)))
                            (: ;)
                            (S
                              (NP (EX There))
                              (VP (VBZ 's)
                                (S
                                  (S
                                    (ADVP (RB never))
                                    (NP (DT an) (NN ebb))
                                    (VP (VBZ goes)
                                      (SBAR
                                        (S
                                          (S
                                            (VP (VBN seaward)
                                              (ADVP (RB now))))
                                          (CC But)
                                          (S
                                            (VP (VBZ drops)
                                              (NP (PRP$ our) (NN dead))
                                              (PP (IN on)
                                                (NP (DT the) (NN sand)))))))))
                                  (: --)
                                  (CC But)
                                  (FRAG
                                    (NP
                                      (NP (NNS slinks))
                                      (NP (PRP$ our)
                                        (ADJP (JJ dead)
                                          (PP (IN on)
                                            (NP (DT the) (NNS sands))))
                                        (NN forlore)))))))
                            (, ,)
                            (PP (IN From)
                              (NP
                                (NP (DT the) (NNPS Ducies))
                                (PP (TO to)
                                  (NP (DT the) (NNP Swin)))))))))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
neg('s-2, never-3)
det(flood-5, a-4)
nsubj('s-2, flood-5)
acl:relcl(flood-5, goes-6)
dep(goes-6, shoreward-7)
advmod(shoreward-7, now-8)
cc(shoreward-7, But-9)
dep(goes-6, lifts-10)
conj:but(shoreward-7, lifts-10)
det(keel-12, a-11)
dobj(lifts-10, keel-12)
nsubj(manned-14, we-13)
acl:relcl(keel-12, manned-14)
expl('s-17, There-16)
parataxis(manned-14, 's-17)
neg(goes-21, never-18)
det(ebb-20, an-19)
nsubj(goes-21, ebb-20)
xcomp('s-17, goes-21)
dep(goes-21, seaward-22)
advmod(seaward-22, now-23)
cc(seaward-22, But-24)
dep(goes-21, drops-25)
conj:but(seaward-22, drops-25)
nmod:poss(dead-27, our-26)
dobj(drops-25, dead-27)
case(sand-30, on-28)
det(sand-30, the-29)
nmod:on(drops-25, sand-30)
cc(goes-21, But-32)
xcomp('s-17, slinks-33)
conj:but(goes-21, slinks-33)
nmod:poss(forlore-39, our-34)
amod(forlore-39, dead-35)
case(sands-38, on-36)
det(sands-38, the-37)
nmod:on(dead-35, sands-38)
dep(slinks-33, forlore-39)
case(Ducies-43, From-41)
det(Ducies-43, the-42)
nmod:from(manned-14, Ducies-43)
case(Swin-46, to-44)
det(Swin-46, the-45)
nmod:to(Ducies-43, Swin-46)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN blood))
        (VP (VB be)
          (NP
            (NP (DT the) (NN price))
            (PP (IN of)
              (NP (NN admiralty)))))))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (NN blood))
        (VP (VB be)
          (NP
            (NP (DT the) (NN price))
            (PP (IN of)
              (NP
                (NP (NN admiralty))
                (, ,)
                (NP (NNP Lord) (NNP God))))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP ha)
      (SBAR
        (S
          (NP (POS '))
          (VP (VBD paid)
            (NP (PRP it))
            (PP (IN in))))))
    (. !)))

mark(price-5, If-1)
nsubj(price-5, blood-2)
cop(price-5, be-3)
det(price-5, the-4)
advcl(ha-21, price-5)
case(admiralty-7, of-6)
nmod:of(price-5, admiralty-7)
mark(price-13, If-9)
nsubj(price-13, blood-10)
cop(price-13, be-11)
det(price-13, the-12)
advcl(ha-21, price-13)
case(admiralty-15, of-14)
nmod:of(price-13, admiralty-15)
compound(God-18, Lord-17)
appos(admiralty-15, God-18)
nsubj(ha-21, we-20)
root(ROOT-0, ha-21)
nsubj(paid-23, '-22)
ccomp(ha-21, paid-23)
dobj(paid-23, it-24)
nmod(paid-23, in-25)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD must)
        (VP (VB feed)
          (NP (PRP$ our) (NN sea))
          (PP (IN for)
            (NP (DT a) (CD thousand) (NNS years))))))
    (, ,) (IN For)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (NP
          (NP (PRP$ our) (NN doom)
            (CC and)
            (NN pride))
          (PRN (, ,)
            (SBAR (IN As)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP they))
                      (VP (VBD sailed)
                        (PP (IN with)
                          (NP (DT the) (NNP _) (NNP Golden) (NNP Hind) (NNP _)))))))))
            (, ,))
          (CC Or)
          (NP
            (NP (DT the) (NN wreck))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD struck)
                  (NP
                    (NP (JJ last) (NN tide))
                    (PRN (: --)
                      (FRAG (CC Or)
                        (NP (DT the) (NN wreck))))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ lies)
                          (PP (IN on)
                            (NP (DT the) (VBG spouting) (NN reef)))))))))))
          (SBAR
            (WHADVP (WRB Where))
            (S
              (NP (DT the) (JJ ghastly) (NNS blue-lights))
              (VP (VBP flare)))))))
    (. .)))

nsubj(feed-3, We-1)
aux(feed-3, must-2)
root(ROOT-0, feed-3)
nmod:poss(sea-5, our-4)
dobj(feed-3, sea-5)
case(years-9, for-6)
det(years-9, a-7)
nummod(years-9, thousand-8)
nmod:for(feed-3, years-9)
dep(feed-3, For-11)
nsubj(doom-15, that-12)
cop(doom-15, is-13)
nmod:poss(doom-15, our-14)
parataxis(feed-3, doom-15)
cc(doom-15, and-16)
parataxis(feed-3, pride-17)
conj:and(doom-15, pride-17)
mark(was-21, As-19)
nsubj(was-21, it-20)
dep(doom-15, was-21)
advmod(sailed-24, when-22)
nsubj(sailed-24, they-23)
advcl(was-21, sailed-24)
case(_-30, with-25)
det(_-30, the-26)
compound(_-30, _-27)
compound(_-30, Golden-28)
compound(_-30, Hind-29)
nmod:with(sailed-24, _-30)
cc(doom-15, Or-32)
det(wreck-34, the-33)
parataxis(feed-3, wreck-34)
conj:or(doom-15, wreck-34)
nsubj(struck-36, wreck-34)
ref(wreck-34, that-35)
acl:relcl(wreck-34, struck-36)
amod(tide-38, last-37)
dobj(struck-36, tide-38)
nsubj(lies-44, tide-38)
cc(wreck-42, Or-40)
det(wreck-42, the-41)
dep(tide-38, wreck-42)
ref(tide-38, that-43)
acl:relcl(tide-38, lies-44)
case(reef-48, on-45)
det(reef-48, the-46)
amod(reef-48, spouting-47)
nmod:on(lies-44, reef-48)
advmod(flare-53, Where-49)
det(blue-lights-52, the-50)
amod(blue-lights-52, ghastly-51)
nsubj(flare-53, blue-lights-52)
acl:relcl(doom-15, flare-53)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN blood))
        (VP (VB be)
          (NP
            (NP (DT the) (NN price))
            (PP (IN of)
              (NP (NN admiralty)))))))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (NN blood))
        (VP (VB be)
          (NP
            (NP (DT the) (NN price))
            (PP (IN of)
              (NP (NN admiralty)))))))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (NN blood))
        (VP (VB be)
          (NP
            (NP (DT the) (NN price))
            (PP (IN of)
              (NP
                (NP (NN admiralty))
                (, ,)
                (NP (NNP Lord) (NNP God))))))))
    (, ,)
    (NP (PRP we))
    (VP (VB ha)
      (SBAR
        (S
          (NP (POS '))
          (VP (VBD bought)
            (S
              (NP (PRP it))
              (ADJP (JJ fair)))))))
    (. !)))

mark(price-5, If-1)
nsubj(price-5, blood-2)
cop(price-5, be-3)
det(price-5, the-4)
advcl(ha-29, price-5)
case(admiralty-7, of-6)
nmod:of(price-5, admiralty-7)
mark(price-13, If-9)
nsubj(price-13, blood-10)
cop(price-13, be-11)
det(price-13, the-12)
advcl(ha-29, price-13)
case(admiralty-15, of-14)
nmod:of(price-13, admiralty-15)
mark(price-21, If-17)
nsubj(price-21, blood-18)
cop(price-21, be-19)
det(price-21, the-20)
advcl(ha-29, price-21)
case(admiralty-23, of-22)
nmod:of(price-21, admiralty-23)
compound(God-26, Lord-25)
appos(admiralty-23, God-26)
nsubj(ha-29, we-28)
root(ROOT-0, ha-29)
nsubj(bought-31, '-30)
ccomp(ha-29, bought-31)
nsubj(fair-33, it-32)
xcomp(bought-31, fair-33)

(ROOT
  (S
    (S
      (NP (DT The) (NNP Deep-Sea))
      (VP (VBZ Cables)
        (S
          (NP (DT The) (NNS wrecks))
          (VP (VB dissolve)
            (PP (IN above)
              (NP (PRP us)))))))
    (: ;)
    (S
      (NP (PRP$ their) (NN dust))
      (VP (VBZ drops)
        (PRT (RP down))
        (PP
          (PP (IN from)
            (NP (NN afar)))
          (: --)
          (PP
            (ADVP (RB Down))
            (TO to)
            (NP (DT the) (NN dark)))
          (, ,)
          (PP (TO to)
            (NP (DT the) (JJ utter) (NN dark)))
          (, ,)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (JJ blind) (JJ white) (NNS sea-snakes))
              (VP (VBP are)))))))
    (. .)))

det(Deep-Sea-2, The-1)
nsubj(Cables-3, Deep-Sea-2)
root(ROOT-0, Cables-3)
det(wrecks-5, The-4)
nsubj(dissolve-6, wrecks-5)
ccomp(Cables-3, dissolve-6)
case(us-8, above-7)
nmod:above(dissolve-6, us-8)
nmod:poss(dust-11, their-10)
nsubj(drops-12, dust-11)
parataxis(Cables-3, drops-12)
compound:prt(drops-12, down-13)
case(afar-15, from-14)
nmod:from(are-32, afar-15)
advmod(dark-20, Down-17)
case(dark-20, to-18)
det(dark-20, the-19)
nmod:to(are-32, dark-20)
case(dark-25, to-22)
det(dark-25, the-23)
amod(dark-25, utter-24)
nmod:to(are-32, dark-25)
advmod(are-32, where-27)
det(sea-snakes-31, the-28)
amod(sea-snakes-31, blind-29)
amod(sea-snakes-31, white-30)
nsubj(are-32, sea-snakes-31)
advcl(drops-12, are-32)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP
          (NP
            (NP (DT no) (NN sound))
            (, ,)
            (NP
              (NP (DT no) (NN echo))
              (PP (IN of)
                (NP (NN sound))))
            (, ,))
          (PP (IN in)
            (NP
              (NP (DT the) (NNS deserts))
              (PP (IN of)
                (NP (DT the) (JJ deep))))))
        (, ,)
        (CC Or)
        (NP
          (NP (DT the) (JJ great) (JJ gray) (NN level) (NNS plains))
          (PP (IN of)
            (NP (NN ooze)))))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (JJ shell-burred) (NNS cables))
          (VP (VB creep)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(sound-4, no-3)
nsubj(is-2, sound-4)
neg(echo-7, no-6)
appos(sound-4, echo-7)
case(sound-9, of-8)
nmod:of(echo-7, sound-9)
case(deserts-13, in-11)
det(deserts-13, the-12)
nmod:in(sound-4, deserts-13)
case(deep-16, of-14)
det(deep-16, the-15)
nmod:of(deserts-13, deep-16)
cc(sound-4, Or-18)
det(plains-23, the-19)
amod(plains-23, great-20)
amod(plains-23, gray-21)
compound(plains-23, level-22)
nsubj(is-2, plains-23)
conj:or(sound-4, plains-23)
case(ooze-25, of-24)
nmod:of(plains-23, ooze-25)
advmod(creep-30, where-26)
det(cables-29, the-27)
amod(cables-29, shell-burred-28)
nsubj(creep-30, cables-29)
advcl(is-2, creep-30)

(ROOT
  (S
    (ADVP (RB Here))
    (PP (IN in)
      (NP
        (NP (DT the) (NN womb))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (NN world))
              (PRN (: --)
                (ADVP (RB here)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NNS tie-ribs))
                      (PP (IN of)
                        (NP
                          (NP (NN earth) (NNS Words))
                          (, ,)
                          (CC and)
                          (NP
                            (NP (DT the) (NNS words))
                            (PP (IN of)
                              (NP (NNS men))))
                          (, ,))))))
                (NP (NN flicker)
                  (CC and)
                  (NN flutter)
                  (CC and)
                  (NN beat))))
            (PRN (: --)
              (NP
                (NP (NNP Warning))
                (, ,)
                (NP (NN sorrow))
                (CC and)
                (NP (NN gain) (, ,) (NN salutation)
                  (CC and)
                  (NN mirth)))
              (: --))))))
    (PP (IN For)
      (NP (DT a) (NNP Power) (NNS troubles)))
    (NP (DT the)
      (ADJP (RB Still) (DT that)))
    (VP (VBZ has)
      (NP
        (NP (DT neither) (NN voice))
        (CC nor)
        (NP (NNS feet))))
    (. .)))

advmod(has-46, Here-1)
case(womb-4, in-2)
det(womb-4, the-3)
nmod:in(has-46, womb-4)
case(world-7, of-5)
det(world-7, the-6)
nmod:of(womb-4, world-7)
dep(flicker-23, here-9)
case(tie-ribs-12, on-10)
det(tie-ribs-12, the-11)
nmod:on(here-9, tie-ribs-12)
case(Words-15, of-13)
compound(Words-15, earth-14)
nmod:of(tie-ribs-12, Words-15)
cc(Words-15, and-17)
det(words-19, the-18)
nmod:of(tie-ribs-12, words-19)
conj:and(Words-15, words-19)
case(men-21, of-20)
nmod:of(words-19, men-21)
dep(world-7, flicker-23)
cc(flicker-23, and-24)
dep(world-7, flutter-25)
conj:and(flicker-23, flutter-25)
cc(flicker-23, and-26)
dep(world-7, beat-27)
conj:and(flicker-23, beat-27)
dep(world-7, Warning-29)
dep(world-7, sorrow-31)
conj:and(Warning-29, sorrow-31)
cc(Warning-29, and-32)
dep(world-7, gain-33)
conj:and(Warning-29, gain-33)
conj:and(Warning-29, salutation-35)
conj:and(gain-33, salutation-35)
cc(gain-33, and-36)
conj:and(Warning-29, mirth-37)
conj:and(gain-33, mirth-37)
case(troubles-42, For-39)
det(troubles-42, a-40)
compound(troubles-42, Power-41)
nmod:for(has-46, troubles-42)
det(that-45, the-43)
advmod(that-45, Still-44)
nsubj(has-46, that-45)
root(ROOT-0, has-46)
det(voice-48, neither-47)
dobj(has-46, voice-48)
cc(voice-48, nor-49)
dobj(has-46, feet-50)
conj:nor(voice-48, feet-50)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP have)
        (VP (VBN wakened)
          (NP (DT the) (JJ timeless) (NNS Things)))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (VP (VBN killed)
          (S
            (NP (PRP$ their) (NN father) (NN Time))
            (: ;)
            (VP (VBG Joining)
              (NP (NNS hands))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN gloom))
                  (, ,)
                  (NP (DT a) (NN league))))
              (PP (IN from)
                (NP
                  (NP (DT the) (JJ last))
                  (PP (IN of)
                    (NP (DT the) (NN sun))))))))))
    (. .)))

nsubj(wakened-3, They-1)
aux(wakened-3, have-2)
root(ROOT-0, wakened-3)
det(Things-6, the-4)
amod(Things-6, timeless-5)
dobj(wakened-3, Things-6)
nsubj(killed-10, they-8)
aux(killed-10, have-9)
parataxis(wakened-3, killed-10)
nmod:poss(Time-13, their-11)
compound(Time-13, father-12)
nsubj(Joining-15, Time-13)
dep(killed-10, Joining-15)
dobj(Joining-15, hands-16)
case(gloom-19, in-17)
det(gloom-19, the-18)
nmod:in(Joining-15, gloom-19)
det(league-22, a-21)
appos(gloom-19, league-22)
case(last-25, from-23)
det(last-25, the-24)
nmod:from(Joining-15, last-25)
case(sun-28, of-26)
det(sun-28, the-27)
nmod:of(last-25, sun-28)

(ROOT
  (S
    (VP (VB Hush))
    (. !)))

root(ROOT-0, Hush-1)

(ROOT
  (S
    (S
      (NP (NN Men) (NN talk) (NN to-day))
      (VP (VBP o'er)
        (NP
          (NP (DT the) (NN waste))
          (PP (IN of)
            (NP (DT the) (JJ ultimate) (NN slime))))))
    (, ,)
    (CC And)
    (S
      (NP (DT a) (JJ new) (NN Word))
      (VP (VBZ runs)
        (PP (IN between))
        (: :)
        (S
          (VP (VBG whispering) (, ,) (`` ``)
            (S
              (VP (VB Let)
                (S
                  (NP (PRP us))
                  (VP (VB be)
                    (NP (CD one))))))))))
    (. !) ('' '')))

compound(to-day-3, Men-1)
compound(to-day-3, talk-2)
nsubj(o'er-4, to-day-3)
root(ROOT-0, o'er-4)
det(waste-6, the-5)
dobj(o'er-4, waste-6)
case(slime-10, of-7)
det(slime-10, the-8)
amod(slime-10, ultimate-9)
nmod:of(waste-6, slime-10)
cc(o'er-4, And-12)
det(Word-15, a-13)
amod(Word-15, new-14)
nsubj(runs-16, Word-15)
conj:and(o'er-4, runs-16)
nmod(runs-16, between-17)
parataxis(runs-16, whispering-19)
ccomp(whispering-19, Let-22)
nsubj(one-25, us-23)
cop(one-25, be-24)
ccomp(Let-22, one-25)

(ROOT
  (FRAG
    (NP
      (NP
        (NP (DT The) (NN Song))
        (PP (IN of)
          (NP
            (NP (DT the) (NNP Sons) (CD One))
            (PP (IN from)
              (NP
                (NP (DT the) (NNS ends))
                (PP (IN of)
                  (NP (DT the) (NN earth))))))))
      (: --)
      (NP
        (NP (NNS gifts))
        (PP (IN at)
          (NP (DT an) (JJ open) (NN door)))))
    (: --)
    (S
      (S
        (NP (NNP Treason))
        (VP (VBZ has)
          (NP (RB much))))
      (, ,)
      (CC but)
      (S
        (NP (PRP we))
        (, ,)
        (ADVP (RB Mother))
        (, ,)
        (NP (PRP$ thy) (NNS sons))
        (VP (VBP have)
          (NP (JJR more)))))
    (. !)))

det(Song-2, The-1)
root(ROOT-0, Song-2)
case(Sons-5, of-3)
det(Sons-5, the-4)
nmod:of(Song-2, Sons-5)
nummod(Sons-5, One-6)
case(ends-9, from-7)
det(ends-9, the-8)
nmod:from(Sons-5, ends-9)
case(earth-12, of-10)
det(earth-12, the-11)
nmod:of(ends-9, earth-12)
dep(Song-2, gifts-14)
case(door-18, at-15)
det(door-18, an-16)
amod(door-18, open-17)
nmod:at(gifts-14, door-18)
nsubj(has-21, Treason-20)
parataxis(Song-2, has-21)
dobj(has-21, much-22)
cc(has-21, but-24)
nsubj(have-31, we-25)
advmod(have-31, Mother-27)
nmod:poss(sons-30, thy-29)
nsubj(have-31, sons-30)
parataxis(Song-2, have-31)
conj:but(has-21, have-31)
dobj(have-31, more-32)

(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (DT the) (NN whine))
        (PP (IN of)
          (NP
            (NP (DT a) (VBG dying) (NN man))
            (, ,)
            (PP (IN from)
              (NP
                (NP (DT the) (NN snarl))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN wolf-pack))
                    (VP (VBN freed))))))))))
    (, ,)
    (NP
      (NP (NN Turn))
      (, ,)
      (CC and)
      (NP (DT the) (NN world)))
    (VP (VBZ is)
      (ADJP (JJ thine)))
    (. .)))

case(whine-3, From-1)
det(whine-3, the-2)
nmod:from(thine-23, whine-3)
case(man-7, of-4)
det(man-7, a-5)
amod(man-7, dying-6)
nmod:of(whine-3, man-7)
case(snarl-11, from-9)
det(snarl-11, the-10)
nmod:from(man-7, snarl-11)
case(wolf-pack-14, of-12)
det(wolf-pack-14, a-13)
nmod:of(snarl-11, wolf-pack-14)
acl(wolf-pack-14, freed-15)
nsubj(thine-23, Turn-17)
cc(Turn-17, and-19)
det(world-21, the-20)
conj:and(Turn-17, world-21)
nsubj(thine-23, world-21)
cop(thine-23, is-22)
root(ROOT-0, thine-23)

(ROOT
  (S
    (NP (NNP Mother))
    (, ,)
    (VP (VB be)
      (ADJP (JJ proud))
      (PP (IN of)
        (NP (PRP$ thy) (NN seed))))
    (. !)))

nsubj(proud-4, Mother-1)
cop(proud-4, be-3)
root(ROOT-0, proud-4)
case(seed-7, of-5)
nmod:poss(seed-7, thy-6)
nmod:of(proud-4, seed-7)

(ROOT
  (SINV
    (S
      (VP (VB Count)))
    (, ,)
    (VP (VBP are))
    (NP
      (NP (PRP we))
      (ADJP (JJ feeble)
        (CC or)
        (JJ few)))
    (. ?)))

ccomp(are-3, Count-1)
root(ROOT-0, are-3)
nsubj(are-3, we-4)
amod(we-4, feeble-5)
cc(feeble-5, or-6)
amod(we-4, few-7)
conj:or(feeble-5, few-7)

(ROOT
  (SQ
    (ADVP (RB Hear))
    (, ,) (VBZ is)
    (NP (PRP$ our) (NN speech))
    (ADVP (RB so) (RB rude))
    (. ?)))

advmod(is-3, Hear-1)
root(ROOT-0, is-3)
nmod:poss(speech-5, our-4)
nsubj(is-3, speech-5)
advmod(rude-7, so-6)
advmod(is-3, rude-7)

(ROOT
  (SBARQ
    (WHADVP (WRB Look))
    (, ,)
    (SQ (VBP are)
      (NP (PRP we))
      (ADJP (JJ poor)
        (PP (IN in)
          (NP (DT the) (NN land)))))
    (. ?)))

advmod(poor-5, Look-1)
cop(poor-5, are-3)
nsubj(poor-5, we-4)
root(ROOT-0, poor-5)
case(land-8, in-6)
det(land-8, the-7)
nmod:in(poor-5, land-8)

(ROOT
  (SINV
    (FRAG
      (NP (NNP Judge)))
    (, ,)
    (VP (VBP are)
      (NP (PRP we)))
    (NP
      (NP (NNS men))
      (PP (IN of)
        (NP (DT The) (NN Blood))))
    (. ?)))

dep(we-4, Judge-1)
cop(we-4, are-3)
root(ROOT-0, we-4)
nsubj(we-4, men-5)
case(Blood-8, of-6)
det(Blood-8, The-7)
nmod:of(men-5, Blood-8)

(ROOT
  (S
    (NP
      (NP (DT Those))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP have)
            (VP (VBN stayed)
              (PP (IN at)
                (NP
                  (NP (PRP$ thy) (NNS knees))
                  (, ,)
                  (NP (NNP Mother))
                  (, ,))))))))
    (VP
      (VP (VBP go)
        (VP (VB call)
          (NP (PRP them))
          (PP (IN in) (: --)
            (NP
              (NP (PRP We))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD were)
                    (VP (VBN bred)
                      (NP (JJ overseas) (NN wait))))))))))
      (CC and)
      (VP (MD would)
        (VP (VB speak)
          (PP (IN with)
            (NP (PRP$ our) (NN kin))))))
    (. .)))

nsubj(stayed-4, Those-1)
nsubj(go-11, Those-1)
nsubj(speak-24, Those-1)
ref(Those-1, that-2)
aux(stayed-4, have-3)
acl:relcl(Those-1, stayed-4)
case(knees-7, at-5)
nmod:poss(knees-7, thy-6)
nmod:at(stayed-4, knees-7)
appos(knees-7, Mother-9)
root(ROOT-0, go-11)
xcomp(go-11, call-12)
dobj(call-12, them-13)
case(We-16, in-14)
nmod:in(call-12, We-16)
nsubjpass(bred-19, We-16)
ref(We-16, that-17)
auxpass(bred-19, were-18)
acl:relcl(We-16, bred-19)
amod(wait-21, overseas-20)
dobj(bred-19, wait-21)
cc(go-11, and-22)
aux(speak-24, would-23)
conj:and(go-11, speak-24)
case(kin-27, with-25)
nmod:poss(kin-27, our-26)
nmod:with(speak-24, kin-27)

(ROOT
  (SINV
    (PP (RB Not) (IN in)
      (NP (DT the) (NN dark)))
    (VP (VBP do)
      (NP (PRP we)))
    (NP
      (NP (NN fight))
      (PRN (: --)
        (NP (NN haggle)
          (CC and)
          (NN flout)
          (CC and)
          (NN gibe))
        (: ;)))
    (S
      (VP (VBG Selling)
        (NP (PRP$ our) (NN love))
        (PP (IN for)
          (NP (DT a) (NN price)))
        (, ,)
        (S
          (VP (VBG loaning)
            (NP (PRP$ our) (NNS hearts))
            (PP (IN for)
              (NP (DT a) (NN bribe)))))))
    (. .)))

neg(dark-4, Not-1)
case(dark-4, in-2)
det(dark-4, the-3)
nmod:in(do-5, dark-4)
root(ROOT-0, do-5)
dobj(do-5, we-6)
nsubj(do-5, fight-7)
dep(fight-7, haggle-9)
cc(haggle-9, and-10)
dep(fight-7, flout-11)
conj:and(haggle-9, flout-11)
cc(haggle-9, and-12)
dep(fight-7, gibe-13)
conj:and(haggle-9, gibe-13)
dep(do-5, Selling-15)
nmod:poss(love-17, our-16)
dobj(Selling-15, love-17)
case(price-20, for-18)
det(price-20, a-19)
nmod:for(Selling-15, price-20)
advcl(Selling-15, loaning-22)
nmod:poss(hearts-24, our-23)
dobj(loaning-22, hearts-24)
case(bribe-27, for-25)
det(bribe-27, a-26)
nmod:for(loaning-22, bribe-27)

(ROOT
  (S
    (NP (NNS Gifts))
    (VP (VBP have)
      (NP (PRP we)
        (NP
          (NP (RB only) (JJ to-day)
            (PRN (: --)
              (NP
                (NP (NN Love))
                (PP (IN without)
                  (NP (NN promise)
                    (CC or)
                    (NN fee))))
              (: --)))
          (NP (NNP Hear))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP$ thy) (NNS children))
          (VP (VBP speak) (, ,)
            (PP (IN from)
              (NP
                (NP (DT the) (JJ uttermost) (NNS parts))
                (PP (IN of)
                  (NP (DT the) (NN sea)))))))))
    (. !)))

nsubj(have-2, Gifts-1)
root(ROOT-0, have-2)
dep(to-day-5, we-3)
advmod(to-day-5, only-4)
dobj(have-2, to-day-5)
dep(to-day-5, Love-7)
case(promise-9, without-8)
nmod:without(Love-7, promise-9)
cc(promise-9, or-10)
nmod:without(Love-7, fee-11)
conj:or(promise-9, fee-11)
appos(to-day-5, Hear-13)
mark(speak-18, for-15)
nmod:poss(children-17, thy-16)
nsubj(speak-18, children-17)
advcl(have-2, speak-18)
case(parts-23, from-20)
det(parts-23, the-21)
amod(parts-23, uttermost-22)
nmod:from(speak-18, parts-23)
case(sea-26, of-24)
det(sea-26, the-25)
nmod:of(parts-23, sea-26)

(ROOT
  (FRAG
    (X
      (NP
        (NP
          (NP (DT The) (NN Song))
          (PP (IN of)
            (NP (DT the) (NNPS Cities) (NNP BOMBAY) (NNP Royal))))
        (CC and)
        (NP
          (NP (NNP Dower-royal))
          (, ,)
          (NP (PRP I))))
      (NP (DT the) (NNP Queen) (NN Fronting))
      (NP
        (NP (PRP$ thy) (JJS richest) (NN sea))
        (PP (IN with)
          (NP (JJR richer) (NNS hands)))))
    (: --)
    (NP
      (NP (DT A) (CD thousand) (NNS mills) (NN roar))
      (PP (IN through)
        (NP (PRP me)))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP I))
          (VP (VB glean)
            (NP (DT All) (NNS races))
            (PP (IN from)
              (NP (DT all) (NNS lands)))))))
    (. .)))

det(Song-2, The-1)
dep(sea-17, Song-2)
case(Royal-7, of-3)
det(Royal-7, the-4)
compound(Royal-7, Cities-5)
compound(Royal-7, BOMBAY-6)
nmod:of(Song-2, Royal-7)
cc(Song-2, and-8)
conj:and(Song-2, Dower-royal-9)
dep(sea-17, Dower-royal-9)
appos(Dower-royal-9, I-11)
det(Fronting-14, the-12)
compound(Fronting-14, Queen-13)
dep(sea-17, Fronting-14)
nmod:poss(sea-17, thy-15)
amod(sea-17, richest-16)
dep(roar-25, sea-17)
case(hands-20, with-18)
amod(hands-20, richer-19)
nmod:with(sea-17, hands-20)
det(roar-25, A-22)
nummod(roar-25, thousand-23)
compound(roar-25, mills-24)
root(ROOT-0, roar-25)
case(me-27, through-26)
nmod:through(roar-25, me-27)
advmod(glean-30, where-28)
nsubj(glean-30, I-29)
acl:relcl(roar-25, glean-30)
det(races-32, All-31)
dobj(glean-30, races-32)
case(lands-35, from-33)
det(lands-35, all-34)
nmod:from(glean-30, lands-35)

(ROOT
  (S
    (S
      (NP
        (NP (NNP CALCUTTA) (NNP Me))
        (NP (DT the) (NN Sea-captain)))
      (VP (VBD loved)))
    (, ,)
    (S
      (NP (DT the) (NN River))
      (VP (VBD built)))
    (, ,)
    (S
      (NP (NNP Wealth))
      (VP (VBD sought)))
    (CC and)
    (S
      (NP (NNPS Kings))
      (VP (VBD adventured)
        (NP (NN life))
        (S
          (VP (TO to)
            (VP (VB hold))))))
    (. .)))

compound(Me-2, CALCUTTA-1)
nsubj(loved-5, Me-2)
det(Sea-captain-4, the-3)
dep(Me-2, Sea-captain-4)
root(ROOT-0, loved-5)
det(River-8, the-7)
nsubj(built-9, River-8)
ccomp(loved-5, built-9)
nsubj(sought-12, Wealth-11)
conj:and(loved-5, sought-12)
cc(loved-5, and-13)
nsubj(adventured-15, Kings-14)
conj:and(loved-5, adventured-15)
dobj(adventured-15, life-16)
mark(hold-18, to-17)
advcl(adventured-15, hold-18)

(ROOT
  (NP
    (NP (NNP Hail))
    (, ,)
    (NP (NNP England))
    (. !)))

root(ROOT-0, Hail-1)
appos(Hail-1, England-3)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP am)
        (NP
          (NP (NNP Asia))
          (: --)
          (NP
            (NP (NNP Power))
            (PP (IN on)
              (NP
                (NP (NN silt))
                (, ,)
                (NP
                  (NP (NN Death))
                  (PP (IN in)
                    (NP (PRP$ my) (NNS hands)))))))))
      (, ,)
      (CC but)
      (VP (VBZ Gold)))
    (. !)))

nsubj(Asia-3, I-1)
nsubj(Gold-15, I-1)
cop(Asia-3, am-2)
root(ROOT-0, Asia-3)
dep(Asia-3, Power-5)
case(silt-7, on-6)
nmod:on(Power-5, silt-7)
appos(silt-7, Death-9)
case(hands-12, in-10)
nmod:poss(hands-12, my-11)
nmod:in(Death-9, hands-12)
cc(Asia-3, but-14)
conj:but(Asia-3, Gold-15)

(ROOT
  (S
    (S
      (NP (NNP MADRAS) (NNP Clive))
      (VP (VBD kissed)
        (NP (PRP me))
        (PP (IN on)
          (NP
            (NP
              (NP (DT the) (NN mouth))
              (CC and)
              (NP (NNS eyes)))
            (CC and)
            (NP
              (NP (NN brow))
              (, ,)
              (NP (JJ Wonderful) (NNS kisses)))))
        (, ,)
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP I))
            (VP (VBD became)
              (NP
                (NP (NNP Crowned))
                (PP (IN above)
                  (NP (NNP Queens)))))))))
    (: --)
    (S
      (NP (DT a) (NN withered))
      (VP (VBP beldame)
        (ADVP (RB now))
        (, ,)
        (S
          (VP (VBG Brooding)
            (PP (IN on)
              (NP (JJ ancient) (NN fame)))))))
    (. .)))

compound(Clive-2, MADRAS-1)
nsubj(kissed-3, Clive-2)
root(ROOT-0, kissed-3)
dobj(kissed-3, me-4)
case(mouth-7, on-5)
det(mouth-7, the-6)
nmod:on(kissed-3, mouth-7)
cc(mouth-7, and-8)
nmod:on(kissed-3, eyes-9)
conj:and(mouth-7, eyes-9)
cc(mouth-7, and-10)
nmod:on(kissed-3, brow-11)
conj:and(mouth-7, brow-11)
amod(kisses-14, Wonderful-13)
appos(brow-11, kisses-14)
mark(became-19, so-16)
mwe(so-16, that-17)
nsubj(became-19, I-18)
advcl(kissed-3, became-19)
xcomp(became-19, Crowned-20)
case(Queens-22, above-21)
nmod:above(Crowned-20, Queens-22)
det(withered-25, a-24)
nsubj(beldame-26, withered-25)
parataxis(kissed-3, beldame-26)
advmod(beldame-26, now-27)
xcomp(beldame-26, Brooding-29)
case(fame-32, on-30)
amod(fame-32, ancient-31)
nmod:on(Brooding-29, fame-32)

(ROOT
  (NP
    (NP (NNP RANGOON) (NNP Hail))
    (, ,)
    (NP (NNP Mother))
    (. !)))

compound(Hail-2, RANGOON-1)
root(ROOT-0, Hail-2)
appos(Hail-2, Mother-4)

(ROOT
  (SQ (VBP Do)
    (NP (PRP they))
    (VP (VB call)
      (S
        (NP (PRP me))
        (ADJP (JJ rich)
          (PP (IN in)
            (NP (NN trade))))))
    (. ?)))

aux(call-3, Do-1)
nsubj(call-3, they-2)
root(ROOT-0, call-3)
nsubj(rich-5, me-4)
xcomp(call-3, rich-5)
case(trade-7, in-6)
nmod:in(rich-5, trade-7)

(ROOT
  (S
    (S
      (NP (NNP Little))
      (VP
        (VP (VBP care)
          (NP (PRP I)))
        (, ,)
        (CC but)
        (VP (VBP hear)
          (NP (DT the) (JJ shorn) (NN priest) (NN drone)))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VB watch)
          (NP
            (NP (PRP$ my) (JJ silk-clad) (NNS lovers))
            (, ,)
            (NP
              (NP (NN man))
              (PP (IN by)
                (NP (NN maid)))))))
      (, ,)
      (NP (NNP Laugh))
      (VP (`` `) (VBP neath)
        (NP (PRP$ my) (NNP Shwe) (NNP Dagon))))
    (. .)))

nsubj(care-2, Little-1)
nsubj(hear-6, Little-1)
root(ROOT-0, care-2)
dobj(care-2, I-3)
cc(care-2, but-5)
conj:but(care-2, hear-6)
det(drone-10, the-7)
amod(drone-10, shorn-8)
compound(drone-10, priest-9)
dobj(hear-6, drone-10)
cc(care-2, And-12)
ccomp(neath-24, watch-13)
nmod:poss(lovers-16, my-14)
amod(lovers-16, silk-clad-15)
dobj(watch-13, lovers-16)
appos(lovers-16, man-18)
case(maid-20, by-19)
nmod:by(man-18, maid-20)
nsubj(neath-24, Laugh-22)
conj:and(care-2, neath-24)
nmod:poss(Dagon-27, my-25)
compound(Dagon-27, Shwe-26)
dobj(neath-24, Dagon-27)

(ROOT
  (NP
    (NP (NNP SINGAPORE) (NNP Hail))
    (, ,)
    (NP (NNP Mother))
    (. !)))

compound(Hail-2, SINGAPORE-1)
root(ROOT-0, Hail-2)
appos(Hail-2, Mother-4)

(ROOT
  (S
    (NP (NNP East)
      (CC and)
      (NNP West))
    (VP (MD must)
      (VP (VB seek)
        (NP
          (NP (PRP$ my) (NN aid) (NN Ere))
          (SBAR
            (S
              (NP (DT the) (VBN spent) (NN gear))
              (VP (MD may)
                (VP (VB dare)
                  (NP (DT the) (NNS ports) (NN afar)))))))))
    (. .)))

nsubj(seek-5, East-1)
cc(East-1, and-2)
conj:and(East-1, West-3)
nsubj(seek-5, West-3)
aux(seek-5, must-4)
root(ROOT-0, seek-5)
nmod:poss(Ere-8, my-6)
compound(Ere-8, aid-7)
dobj(seek-5, Ere-8)
det(gear-11, the-9)
amod(gear-11, spent-10)
nsubj(dare-13, gear-11)
aux(dare-13, may-12)
acl:relcl(Ere-8, dare-13)
det(afar-16, the-14)
compound(afar-16, ports-15)
dobj(dare-13, afar-16)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ second) (NN doorway))
      (PP (IN of)
        (NP
          (NP (DT the) (JJ wide) (NN world) (POS 's))
          (NN trade))))
    (VP (NNP Is)
      (NP (NN mine))
      (PP (TO to)
        (NP
          (ADJP (JJ loose)
            (CC or)
            (NN bar)))))
    (. .)))

det(doorway-3, The-1)
amod(doorway-3, second-2)
nsubj(mine-11, doorway-3)
case(trade-9, of-4)
det(world-7, the-5)
amod(world-7, wide-6)
nmod:poss(trade-9, world-7)
case(world-7, 's-8)
nmod:of(doorway-3, trade-9)
dep(mine-11, Is-10)
root(ROOT-0, mine-11)
case(loose-13, to-12)
nmod:to(mine-11, loose-13)
cc(loose-13, or-14)
nmod:to(mine-11, bar-15)
conj:or(loose-13, bar-15)

(ROOT
  (NP
    (NP (NNP HONG-KONG) (NNP Hail))
    (, ,)
    (NP (NNP Mother))
    (. !)))

compound(Hail-2, HONG-KONG-1)
root(ROOT-0, Hail-2)
appos(Hail-2, Mother-4)

(ROOT
  (S
    (S
      (VP (VB Hold)
        (S
          (NP (PRP me))
          (ADJP (JJ fast)))))
    (: ;)
    (S
      (NP (PRP$ my) (NN Praya))
      (VP (VBZ sleeps)
        (S
          (PP (IN Under)
            (NP
              (ADJP (JJ innumerable) (JJ keels))
              (NN to-day))))))
    (. .)))

root(ROOT-0, Hold-1)
nsubj(fast-3, me-2)
xcomp(Hold-1, fast-3)
nmod:poss(Praya-6, my-5)
nsubj(sleeps-7, Praya-6)
parataxis(Hold-1, sleeps-7)
case(to-day-11, Under-8)
amod(keels-10, innumerable-9)
amod(to-day-11, keels-10)
nmod:under(sleeps-7, to-day-11)

(ROOT
  (S (CC Yet)
    (NP
      (NP
        (NP (NN guard))
        (PRN (-LRB- -LRB-)
          (CC and)
          (ADJP (JJ landward))
          (-RRB- -RRB-))
        (, ,))
      (CC or)
      (NP (NN to-morrow)))
    (VP (VBZ sweeps)
      (NP (NNP Thy) (NNS war-ships))
      (ADVP (RB down)
        (NP (DT the) (NN bay))))
    (. !)))

cc(sweeps-10, Yet-1)
nsubj(sweeps-10, guard-2)
cc(landward-5, and-4)
dep(guard-2, landward-5)
cc(guard-2, or-8)
conj:or(guard-2, to-morrow-9)
nsubj(sweeps-10, to-morrow-9)
root(ROOT-0, sweeps-10)
compound(war-ships-12, Thy-11)
dobj(sweeps-10, war-ships-12)
advmod(sweeps-10, down-13)
det(bay-15, the-14)
nmod:npmod(down-13, bay-15)

(ROOT
  (S
    (NP
      (NP (NNP HALIFAX))
      (PP (NNP Into)
        (NP (DT the) (NN mist)))
      (SBAR
        (S
          (NP (PRP$ my) (NN guardian) (NNS prows))
          (VP (VBD put)
            (ADVP (RB forth))))))
    (, ,)
    (PP (IN Behind)
      (NP
        (NP (DT the) (NN mist))
        (SBAR
          (S
            (NP (PRP$ my) (JJ virgin) (NNS ramparts))
            (VP (VBP lie))))))
    (, ,)
    (NP
      (NP (DT The) (NNP Warden))
      (PP (IN of)
        (NP
          (NP (DT the) (NN Honour))
          (PP (IN of)
            (NP
              (NP (DT the) (NNP North))
              (, ,)
              (ADJP (JJ Sleepless)
                (CC and)
                (VBN veiled)))))))
    (VP (VBP am)
      (NP (PRP I)))
    (. !)))

nsubj(I-32, HALIFAX-1)
dep(mist-4, Into-2)
det(mist-4, the-3)
nmod(HALIFAX-1, mist-4)
nmod:poss(prows-7, my-5)
compound(prows-7, guardian-6)
nsubj(put-8, prows-7)
acl:relcl(HALIFAX-1, put-8)
advmod(put-8, forth-9)
case(mist-13, Behind-11)
det(mist-13, the-12)
nmod:behind(I-32, mist-13)
nmod:poss(ramparts-16, my-14)
amod(ramparts-16, virgin-15)
nsubj(lie-17, ramparts-16)
acl:relcl(mist-13, lie-17)
det(Warden-20, The-19)
nsubj(I-32, Warden-20)
case(Honour-23, of-21)
det(Honour-23, the-22)
nmod:of(Warden-20, Honour-23)
case(North-26, of-24)
det(North-26, the-25)
nmod:of(Honour-23, North-26)
amod(North-26, Sleepless-28)
cc(Sleepless-28, and-29)
amod(North-26, veiled-30)
conj:and(Sleepless-28, veiled-30)
cop(I-32, am-31)
root(ROOT-0, I-32)

(ROOT
  (S
    (NP (NNP QUEBEC)
      (CC AND)
      (NNP MONTREAL) (NNP Peace))
    (VP (VBZ is)
      (NP (PRP$ our) (NN portion)))
    (. .)))

compound(Peace-4, QUEBEC-1)
cc(QUEBEC-1, AND-2)
conj:and(QUEBEC-1, MONTREAL-3)
compound(Peace-4, MONTREAL-3)
nsubj(portion-7, Peace-4)
cop(portion-7, is-5)
nmod:poss(portion-7, our-6)
root(ROOT-0, portion-7)

(ROOT
  (S
    (S (CC Yet)
      (NP (DT a) (NN whisper))
      (VP (VBD rose)))
    (, ,)
    (NP (NNP Foolish)
      (CC and)
      (NNS causeless))
    (, ,)
    (PP
      (ADVP (NN half))
      (IN in)
      (NP (NN jest)))
    (, ,)
    (NP (DT half))
    (VP (VBP hate))
    (. .)))

cc(rose-4, Yet-1)
det(whisper-3, a-2)
nsubj(rose-4, whisper-3)
ccomp(hate-15, rose-4)
nsubj(hate-15, Foolish-6)
cc(Foolish-6, and-7)
conj:and(Foolish-6, causeless-8)
nsubj(hate-15, causeless-8)
advmod(jest-12, half-10)
case(jest-12, in-11)
nmod:in(hate-15, jest-12)
nsubj(hate-15, half-14)
root(ROOT-0, hate-15)

(ROOT
  (S
    (S
      (NP (RB Now))
      (VP
        (VP (VBP wake)
          (NP (PRP we)))
        (CC and)
        (VP (VBP remember)
          (NP (JJ mighty) (NNS blows)))))
    (, ,)
    (S (CC And)
      (, ,)
      (S
        (VP (VBG fearing)
          (NP (DT no) (NN man))))
      (, ,)
      (VP (VBP wait)))
    (. !)))

nsubj(wake-2, Now-1)
nsubj(remember-5, Now-1)
root(ROOT-0, wake-2)
dobj(wake-2, we-3)
cc(wake-2, and-4)
conj:and(wake-2, remember-5)
amod(blows-7, mighty-6)
dobj(remember-5, blows-7)
cc(wait-15, And-9)
dep(wait-15, fearing-11)
neg(man-13, no-12)
dobj(fearing-11, man-13)
parataxis(wake-2, wait-15)

(ROOT
  (S
    (NP
      (NP (NNP VICTORIA))
      (SBAR
        (S
          (PP (IN From)
            (NP
              (NP (NNP East))
              (PP (TO to)
                (NP (NNP West)))))
          (NP (DT the) (JJ circling) (NN word))
          (VP (VBZ has)
            (VP (VBN passed))))))
    (, ,)
    (S
      (NP (NNP Till) (NNP West))
      (VP (VBZ is)
        (ADJP (JJ East)
          (PP (IN beside)
            (NP (PRP$ our) (JJ land-locked) (NN blue))))))
    (: ;)
    (S
      (PP (IN From)
        (NP
          (NP (NNP East))
          (PP (TO to)
            (NP (NNP West)))))
      (NP (DT the) (JJ tested) (NN chain))
      (VP (VBZ holds)
        (ADVP (RB fast))))
    (, ,)
    (S
      (NP (DT The) (JJ well-forged) (NN link) (NNS rings))
      (ADJP (JJ true)))
    (. !)))

dep(East-15, VICTORIA-1)
case(East-3, From-2)
nmod:from(passed-10, East-3)
case(West-5, to-4)
nmod:to(East-3, West-5)
det(word-8, the-6)
amod(word-8, circling-7)
nsubj(passed-10, word-8)
aux(passed-10, has-9)
acl:relcl(VICTORIA-1, passed-10)
compound(West-13, Till-12)
nsubj(East-15, West-13)
cop(East-15, is-14)
root(ROOT-0, East-15)
case(blue-19, beside-16)
nmod:poss(blue-19, our-17)
amod(blue-19, land-locked-18)
nmod:beside(East-15, blue-19)
case(East-22, From-21)
nmod:from(holds-28, East-22)
case(West-24, to-23)
nmod:to(East-22, West-24)
det(chain-27, the-25)
amod(chain-27, tested-26)
nsubj(holds-28, chain-27)
parataxis(East-15, holds-28)
advmod(holds-28, fast-29)
det(rings-34, The-31)
amod(rings-34, well-forged-32)
compound(rings-34, link-33)
dep(true-35, rings-34)
parataxis(East-15, true-35)

(ROOT
  (NP (NNP CAPE) (NNP TOWN) (NNP Hail) (. !)))

compound(Hail-3, CAPE-1)
compound(Hail-3, TOWN-2)
root(ROOT-0, Hail-3)

(ROOT
  (S
    (S
      (VP
        (VP (VBN Snatched))
        (CC and)
        (VP (VBN bartered)
          (NP (NN oft))
          (PP (IN from)
            (NP (NN hand)))
          (PP (TO to)
            (NP (NN hand))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP dream)
      (NP (PRP$ my) (NN dream))
      (, ,)
      (PP (IN by)
        (NP (NN rock)
          (CC and)
          (NN heath)
          (CC and)
          (NN pine)))
      (, ,)
      (PP (IN Of)
        (NP (NNP Empire)))
      (PP (TO to)
        (NP (DT the) (NN northward))))
    (. .)))

advcl(dream-11, Snatched-1)
cc(Snatched-1, and-2)
conj:and(Snatched-1, bartered-3)
advcl(dream-11, bartered-3)
dobj(bartered-3, oft-4)
case(hand-6, from-5)
nmod:from(bartered-3, hand-6)
case(hand-8, to-7)
nmod:to(bartered-3, hand-8)
nsubj(dream-11, I-10)
root(ROOT-0, dream-11)
nmod:poss(dream-13, my-12)
dobj(dream-11, dream-13)
case(rock-16, by-15)
nmod:by(dream-11, rock-16)
cc(rock-16, and-17)
nmod:by(dream-11, heath-18)
conj:and(rock-16, heath-18)
cc(rock-16, and-19)
nmod:by(dream-11, pine-20)
conj:and(rock-16, pine-20)
case(Empire-23, Of-22)
nmod:of(dream-11, Empire-23)
case(northward-26, to-24)
det(northward-26, the-25)
nmod:to(dream-11, northward-26)

(ROOT
  (NP
    (NP (NNP Ay))
    (, ,)
    (NP
      (NP (CD one) (NN land))
      (PP (IN From)
        (NP
          (NP
            (NP (NNP Lion) (POS 's))
            (NNP Head))
          (PP (TO to)
            (NP (NNP Line))))))
    (. !)))

root(ROOT-0, Ay-1)
nummod(land-4, one-3)
appos(Ay-1, land-4)
case(Head-8, From-5)
nmod:poss(Head-8, Lion-6)
case(Lion-6, 's-7)
nmod:from(land-4, Head-8)
case(Line-10, to-9)
nmod:to(Head-8, Line-10)

(ROOT
  (NP (NNP MELBOURNE) (NNP Greeting) (. !)))

compound(Greeting-2, MELBOURNE-1)
root(ROOT-0, Greeting-2)

(ROOT
  (FRAG (CC Nor)
    (NP
      (NP (NN fear)
        (CC nor)
        (NN favour) (NNS won))
      (SBAR
        (S
          (NP (PRP us))
          (VP (VBP place) (, ,)
            (S
              (VP (VBN Got)
                (PP (IN between)
                  (NP
                    (NP (NN greed))
                    (PP (IN of)
                      (NP (NN gold)
                        (CC and)
                        (NN dread)))
                    (PP (IN of)
                      (NP (NN drouth)))
                    (, ,)
                    (ADJP (JJ Loud-voiced)
                      (CC and)
                      (JJ reckless))
                    (PP (IN as)
                      (NP (DT the) (JJ wild) (NN tide-race)))))))))))
    (SBAR
      (S
        (NP (DT That))
        (VP (VBZ whips)
          (NP (PRP$ our) (NN harbour-mouth)))))
    (. !)))

cc(won-5, Nor-1)
compound(won-5, fear-2)
cc(fear-2, nor-3)
conj:nor(fear-2, favour-4)
compound(won-5, favour-4)
root(ROOT-0, won-5)
nsubj(place-7, us-6)
acl:relcl(won-5, place-7)
dep(place-7, Got-9)
case(greed-11, between-10)
nmod:between(Got-9, greed-11)
case(gold-13, of-12)
nmod:of(greed-11, gold-13)
cc(gold-13, and-14)
nmod:of(greed-11, dread-15)
conj:and(gold-13, dread-15)
case(drouth-17, of-16)
nmod:of(greed-11, drouth-17)
amod(greed-11, Loud-voiced-19)
cc(Loud-voiced-19, and-20)
amod(greed-11, reckless-21)
conj:and(Loud-voiced-19, reckless-21)
case(tide-race-25, as-22)
det(tide-race-25, the-23)
amod(tide-race-25, wild-24)
nmod:as(greed-11, tide-race-25)
nsubj(whips-27, That-26)
dep(won-5, whips-27)
nmod:poss(harbour-mouth-29, our-28)
dobj(whips-27, harbour-mouth-29)

(ROOT
  (NP (NNP SYDNEY) (NNP Greeting) (. !)))

compound(Greeting-2, SYDNEY-1)
root(ROOT-0, Greeting-2)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NN birth-stain))
      (VP (VBP have)
        (S
          (NP (PRP I))
          (VP (VBN turned)
            (PP (TO to)
              (ADJP (JJ good)))))))
    (: ;)
    (S
      (VP (VBG Forcing)
        (S
          (NP (JJ strong) (NNS wills))
          (ADJP (JJ perverse)
            (PP (TO to)
              (NP
                (NP (NNS steadfastness))
                (: :)
                (NP
                  (NP (DT The) (JJ first) (NN flush))
                  (PP (IN of)
                    (NP
                      (UCP
                        (NP
                          (NP (DT the) (NNS tropics))
                          (PP (IN in)
                            (NP (PRP$ my) (NN blood))))
                        (, ,)
                        (CC And)
                        (PP (IN at)
                          (NP (PRP$ my) (NNS feet))))
                      (NNP Success))))))))))
    (. !)))

nmod:poss(birth-stain-2, My-1)
nsubj(have-3, birth-stain-2)
root(ROOT-0, have-3)
nsubj(turned-5, I-4)
ccomp(have-3, turned-5)
case(good-7, to-6)
advcl(turned-5, good-7)
parataxis(have-3, Forcing-9)
amod(wills-11, strong-10)
nsubj(perverse-12, wills-11)
xcomp(Forcing-9, perverse-12)
case(steadfastness-14, to-13)
nmod:to(perverse-12, steadfastness-14)
det(flush-18, The-16)
amod(flush-18, first-17)
dep(steadfastness-14, flush-18)
case(Success-30, of-19)
det(tropics-21, the-20)
compound(Success-30, tropics-21)
case(blood-24, in-22)
nmod:poss(blood-24, my-23)
nmod:in(tropics-21, blood-24)
cc(tropics-21, And-26)
case(feet-29, at-27)
nmod:poss(feet-29, my-28)
conj:and(tropics-21, feet-29)
compound(Success-30, feet-29)
nmod:of(flush-18, Success-30)

(ROOT
  (S
    (S
      (VP (VB BRISBANE)
        (NP (DT The) (JJ northern) (NN stirp))
        (PP (IN beneath)
          (NP (DT the) (JJ southern) (NNS skies)))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP build)
        (NP
          (NP (DT a) (NN Nation))
          (PP (IN for)
            (NP
              (NP
                (NP (DT an) (NN Empire) (POS 's))
                (NN need))
              (, ,)
              (NP
                (NP (NNP Suffer))
                (NP (DT a) (JJ little))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ my) (NN land))
      (VP (MD shall)
        (VP (VB rise) (, ,)
          (ADVP (RB Queen))
          (PP (IN over)
            (NP (NNS lands)))
          (ADVP (RB indeed)))))
    (. !)))

root(ROOT-0, BRISBANE-1)
det(stirp-4, The-2)
amod(stirp-4, northern-3)
dobj(BRISBANE-1, stirp-4)
case(skies-8, beneath-5)
det(skies-8, the-6)
amod(skies-8, southern-7)
nmod:beneath(BRISBANE-1, skies-8)
nsubj(build-11, I-10)
conj:and(BRISBANE-1, build-11)
det(Nation-13, a-12)
dobj(build-11, Nation-13)
case(need-18, for-14)
det(Empire-16, an-15)
nmod:poss(need-18, Empire-16)
case(Empire-16, 's-17)
nmod:for(Nation-13, need-18)
appos(need-18, Suffer-20)
det(little-22, a-21)
dep(Suffer-20, little-22)
cc(BRISBANE-1, and-24)
nmod:poss(land-26, my-25)
nsubj(rise-28, land-26)
aux(rise-28, shall-27)
conj:and(BRISBANE-1, rise-28)
advmod(rise-28, Queen-30)
case(lands-32, over-31)
nmod:over(rise-28, lands-32)
advmod(rise-28, indeed-33)

(ROOT
  (S
    (S
      (NP
        (NP (NNP HOBART) (NNP Man) (POS 's))
        (NN love))
      (ADVP (RB first))
      (VP (VBD found)
        (NP (PRP me))))
    (: ;)
    (S
      (NP
        (NP (NN man) (POS 's))
        (NN hate))
      (VP (VBD made)
        (S
          (NP (PRP me))
          (NP (NNP Hell)))))
    (: ;)
    (S
      (PP (IN For)
        (NP
          (NP (PRP$ my) (NNS babes) (POS '))
          (NN sake)))
      (NP (PRP I))
      (VP (VBD cleansed)
        (SBAR
          (S
            (NP (DT those))
            (VP (VBZ infamies))))))
    (. .)))

compound(Man-2, HOBART-1)
nmod:poss(love-4, Man-2)
case(Man-2, 's-3)
nsubj(found-6, love-4)
advmod(found-6, first-5)
root(ROOT-0, found-6)
dobj(found-6, me-7)
nmod:poss(hate-11, man-9)
case(man-9, 's-10)
nsubj(made-12, hate-11)
parataxis(found-6, made-12)
nsubj(Hell-14, me-13)
xcomp(made-12, Hell-14)
case(sake-20, For-16)
nmod:poss(babes-18, my-17)
nmod:poss(sake-20, babes-18)
case(babes-18, '-19)
nmod:for(cleansed-22, sake-20)
nsubj(cleansed-22, I-21)
parataxis(found-6, cleansed-22)
nsubj(infamies-24, those-23)
ccomp(cleansed-22, infamies-24)

(ROOT
  (S
    (VP
      (VP (VB Earnest)
        (PP (IN for)
          (NP (NN leave)))
        (PP (TO to)
          (NP
            (NP (JJ live)
              (CC and)
              (NN labour) (NN well))
            (, ,)
            (NP (NNP God))))
        (S
          (VP (VBG flung)
            (NP (PRP me))
            (X (NN peace)))))
      (CC and)
      (VP (VB ease)))
    (. .)))

root(ROOT-0, Earnest-1)
case(leave-3, for-2)
nmod:for(Earnest-1, leave-3)
case(well-8, to-4)
amod(well-8, live-5)
cc(live-5, and-6)
conj:and(live-5, labour-7)
amod(well-8, labour-7)
nmod:to(Earnest-1, well-8)
appos(well-8, God-10)
xcomp(Earnest-1, flung-11)
dobj(flung-11, me-12)
dep(flung-11, peace-13)
cc(Earnest-1, and-14)
conj:and(Earnest-1, ease-15)

(ROOT
  (SINV
    (VP (VBD AUCKLAND))
    (NP
      (NP (JJ Last))
      (, ,)
      (NP (NN loneliest))
      (, ,)
      (NP (NN loveliest))
      (, ,)
      (NP (JJ exquisite))
      (, ,)
      (RRC
        (ADVP (RB apart) (: --))
        (PP (IN On)
          (NP (PRP us)))))
    (, ,)
    (PP (IN on)
      (NP
        (NP (PRP us))
        (SBAR
          (S
            (NP (DT the) (VBG unswerving) (NN season))
            (VP (VBZ smiles))))
        (, ,)
        (SBAR
          (WHNP (WP Who))
          (S
            (VP (VBP wonder) (`` `)
              (S
                (VP (VBG mid)
                  (NP (PRP$ our) (NN fern))
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (NNS men))
                      (VP (VB depart)
                        (S
                          (VP (TO To)
                            (VP (VB seek)
                              (NP (DT the) (JJ Happy) (NNS Isles))))))))))))))
      (. !))))

root(ROOT-0, AUCKLAND-1)
nsubj(AUCKLAND-1, Last-2)
appos(Last-2, loneliest-4)
appos(Last-2, loveliest-6)
appos(Last-2, exquisite-8)
advmod(us-13, apart-10)
case(us-13, On-12)
acl:relcl(Last-2, us-13)
case(us-16, on-15)
nmod:on(AUCKLAND-1, us-16)
nsubj(wonder-23, us-16)
det(season-19, the-17)
amod(season-19, unswerving-18)
nsubj(smiles-20, season-19)
acl:relcl(us-16, smiles-20)
ref(us-16, Who-22)
acl:relcl(us-16, wonder-23)
xcomp(wonder-23, mid-25)
nmod:poss(fern-27, our-26)
dobj(mid-25, fern-27)
advmod(depart-30, why-28)
nsubj(depart-30, men-29)
nsubj:xsubj(seek-32, men-29)
advcl(mid-25, depart-30)
mark(seek-32, To-31)
xcomp(depart-30, seek-32)
det(Isles-35, the-33)
amod(Isles-35, Happy-34)
dobj(seek-32, Isles-35)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP England) (POS 's))
        (NNP Answer) (NNP Truly) (NNP ye))
      (VP (VBN come)
        (PP (IN of)
          (NP (DT The) (NN Blood)))))
    (: ;)
    (S
      (ADJP (JJR slower)
        (S
          (VP (TO to)
            (VP (VB bless)
              (SBAR (IN than)
                (S
                  (VP (TO to)
                    (VP (VB ban))))))))))
    (: ;)
    (NP (NNP Little))
    (VP (VBD used)
      (S
        (VP (TO to)
          (VP (VB lie)
            (PRT (RP down))
            (PP (IN at)
              (NP
                (NP (DT the) (NN bidding))
                (PP (IN of)
                  (NP (DT any) (NN man)))))))))
    (. .)))

nmod:poss(ye-5, England-1)
case(England-1, 's-2)
compound(ye-5, Answer-3)
compound(ye-5, Truly-4)
nsubj(used-19, ye-5)
nsubj:xsubj(lie-21, ye-5)
acl(ye-5, come-6)
case(Blood-9, of-7)
det(Blood-9, The-8)
nmod:of(come-6, Blood-9)
parataxis(used-19, slower-11)
mark(bless-13, to-12)
xcomp(slower-11, bless-13)
mark(ban-16, than-14)
mark(ban-16, to-15)
advcl(bless-13, ban-16)
nsubj(used-19, Little-18)
nsubj:xsubj(lie-21, Little-18)
root(ROOT-0, used-19)
mark(lie-21, to-20)
xcomp(used-19, lie-21)
compound:prt(lie-21, down-22)
case(bidding-25, at-23)
det(bidding-25, the-24)
nmod:at(lie-21, bidding-25)
case(man-28, of-26)
det(man-28, any-27)
nmod:of(bidding-25, man-28)

(ROOT
  (S
    (NP
      (NP (NN Flesh))
      (PP (IN of)
        (NP
          (NP
            (NP (DT the) (NN flesh))
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (VBD bred)))))
          (, ,)
          (NP
            (NP (NN bone))
            (PP (IN of)
              (NP
                (NP (DT the) (NN bone))
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (ADJP (JJ bare)))))))
          (: ;)
          (NP
            (NP (NNP Stark))
            (PP (IN as)
              (NP (PRP$ your) (NNS sons)))))))
    (VP (MD shall)
      (VP
        (VP (VB be))
        (: --)
        (VP
          (ADJP (JJ stern))
          (SBAR (IN as)
            (S
              (NP (PRP$ your) (NNS fathers))
              (VP (VBD were)))))))
    (. .)))

nsubj(be-22, Flesh-1)
case(flesh-4, of-2)
det(flesh-4, the-3)
nmod:of(Flesh-1, flesh-4)
mark(bred-7, that-5)
nsubj(bred-7, I-6)
dep(flesh-4, bred-7)
appos(flesh-4, bone-9)
case(bone-12, of-10)
det(bone-12, the-11)
nmod:of(bone-9, bone-12)
mark(bare-15, that-13)
dep(bare-15, I-14)
dep(bone-12, bare-15)
dep(flesh-4, Stark-17)
case(sons-20, as-18)
nmod:poss(sons-20, your-19)
nmod:as(Stark-17, sons-20)
aux(be-22, shall-21)
root(ROOT-0, be-22)
dep(be-22, stern-24)
mark(were-28, as-25)
nmod:poss(fathers-27, your-26)
nsubj(were-28, fathers-27)
advcl(stern-24, were-28)

(ROOT
  (S
    (SINV
      (VP (VBD Deeper)
        (PP (IN than)
          (NP (NN speech))))
      (NP
        (NP (PRP$ our) (NN love))
        (, ,)
        (NP
          (NP (JJR stronger))
          (PP (IN than)
            (NP (NN life) (PRP$ our) (NN tether))))))
    (, ,)
    (CC But)
    (S
      (NP (PRP we))
      (VP (VBP do) (RB not)
        (VP (VB fall)
          (PP (IN on)
            (NP
              (NP (DT the) (NN neck))
              (CC nor)
              (NP (NN kiss))))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP we))
              (VP (VBP come)
                (ADVP (RB together))))))))
    (. .)))

root(ROOT-0, Deeper-1)
case(speech-3, than-2)
nmod:than(Deeper-1, speech-3)
nmod:poss(love-5, our-4)
nsubj(Deeper-1, love-5)
appos(love-5, stronger-7)
case(tether-11, than-8)
compound(tether-11, life-9)
nmod:poss(tether-11, our-10)
nmod:than(stronger-7, tether-11)
cc(Deeper-1, But-13)
nsubj(fall-17, we-14)
aux(fall-17, do-15)
neg(fall-17, not-16)
conj:but(Deeper-1, fall-17)
case(neck-20, on-18)
det(neck-20, the-19)
nmod:on(fall-17, neck-20)
cc(neck-20, nor-21)
nmod:on(fall-17, kiss-22)
conj:nor(neck-20, kiss-22)
advmod(come-25, when-23)
nsubj(come-25, we-24)
advcl(fall-17, come-25)
advmod(come-25, together-26)

(ROOT
  (S
    (S
      (S
        (NP (PRP$ My) (NN arm))
        (VP (VBZ is)
          (ADJP (NN nothing) (JJ weak))))
      (, ,)
      (S
        (NP (PRP$ my) (NN strength))
        (VP (VBZ is) (RB not)
          (VP (VBN gone)
            (PP (IN by)))))
      (: ;)
      (S
        (ADVP (RB Sons))
        (, ,)
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN borne)
            (NP (JJ many) (NNS sons))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP$ my) (NNS dugs))
      (VP (VBP are) (RB not)
        (ADJP (JJ dry))))
    (. .)))

nmod:poss(arm-2, My-1)
nsubj(weak-5, arm-2)
cop(weak-5, is-3)
nmod:npmod(weak-5, nothing-4)
root(ROOT-0, weak-5)
nmod:poss(strength-8, my-7)
nsubjpass(gone-11, strength-8)
auxpass(gone-11, is-9)
neg(gone-11, not-10)
dep(weak-5, gone-11)
nmod(gone-11, by-12)
advmod(borne-18, Sons-14)
nsubj(borne-18, I-16)
aux(borne-18, have-17)
parataxis(weak-5, borne-18)
amod(sons-20, many-19)
dobj(borne-18, sons-20)
cc(weak-5, but-22)
nmod:poss(dugs-24, my-23)
nsubj(dry-27, dugs-24)
cop(dry-27, are-25)
neg(dry-27, not-26)
conj:but(weak-5, dry-27)

(ROOT
  (S
    (ADVP (RB Look))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP
            (VP (VBN made)
              (S
                (NP (PRP ye))
                (NP (DT a) (NN place))))
            (CC and)
            (VP (VBN opened)
              (S
                (ADJP (JJ wide))))
            (NP (DT the) (NNS doors)))))
      (, ,))
    (SBAR (IN That)
      (S
        (NP (PRP ye))
        (VP (MD may)
          (VP (VB talk)
            (ADVP (RB together))))))
    (, ,)
    (NP
      (NP (PRP$ your) (NNS Barons)
        (CC and)
        (NNS Councillors))
      (PRN (: --)
        (NP
          (NP (NNP Wards))
          (PP (IN of)
            (NP (DT the) (NNP Outer) (NNP March)))))
      (, ,)
      (NP
        (NP (NNPS Lords))
        (PP (IN of)
          (NP (DT the) (JJR Lower) (NNS Seas))))
      (, ,)
      (NP (NNP Ay))
      (, ,))
    (VP (VBP talk)
      (PP (TO to)
        (NP
          (NP (PRP$ your) (JJ gray) (NN mother))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD bore)
                (NP (PRP you))
                (PP (IN on)
                  (NP (PRP$ her) (NNS knees)))))))))
    (. !)))

advmod(talk-40, Look-1)
nsubj(made-5, I-3)
nsubj(opened-10, I-3)
aux(made-5, have-4)
parataxis(talk-40, made-5)
nsubj(place-8, ye-6)
det(place-8, a-7)
xcomp(made-5, place-8)
cc(made-5, and-9)
conj:and(made-5, opened-10)
parataxis(talk-40, opened-10)
xcomp(opened-10, wide-11)
det(doors-13, the-12)
dobj(made-5, doors-13)
mark(talk-18, That-15)
nsubj(talk-18, ye-16)
aux(talk-18, may-17)
advcl(talk-40, talk-18)
advmod(talk-18, together-19)
nmod:poss(Barons-22, your-21)
nsubj(talk-40, Barons-22)
cc(Barons-22, and-23)
conj:and(Barons-22, Councillors-24)
nsubj(talk-40, Councillors-24)
dep(Barons-22, Wards-26)
case(March-30, of-27)
det(March-30, the-28)
compound(March-30, Outer-29)
nmod:of(Wards-26, March-30)
appos(Barons-22, Lords-32)
case(Seas-36, of-33)
det(Seas-36, the-34)
amod(Seas-36, Lower-35)
nmod:of(Lords-32, Seas-36)
appos(Barons-22, Ay-38)
root(ROOT-0, talk-40)
case(mother-44, to-41)
nmod:poss(mother-44, your-42)
amod(mother-44, gray-43)
nmod:to(talk-40, mother-44)
nsubj(bore-46, mother-44)
ref(mother-44, that-45)
acl:relcl(mother-44, bore-46)
dobj(bore-46, you-47)
case(knees-50, on-48)
nmod:poss(knees-50, her-49)
nmod:on(bore-46, knees-50)

(ROOT
  (S (: --)
    (SBAR (IN That)
      (S
        (NP (PRP ye))
        (VP (MD may)
          (VP (VB talk)
            (ADVP (RB together))))))
    (, ,)
    (NP
      (NP (NN brother))
      (PP (TO to)
        (NP (NN brother))))
    (VP (VBZ 's)
      (NP (NN face))
      (PRN (: --)
        (ADVP (RB Thus))
        (PP (IN for)
          (NP
            (NP (DT the) (NN good))
            (PP (IN of)
              (NP (PRP$ your) (NNS peoples)))))
        (: --))
      (PP
        (ADVP (RB thus))
        (IN for)
        (NP
          (NP (DT the) (NN Pride))
          (PP (IN of)
            (NP (DT the) (NNP Race))))))
    (. .)))

mark(talk-5, That-2)
nsubj(talk-5, ye-3)
aux(talk-5, may-4)
advcl(face-12, talk-5)
advmod(talk-5, together-6)
nsubj(face-12, brother-8)
case(brother-10, to-9)
nmod:to(brother-8, brother-10)
cop(face-12, 's-11)
root(ROOT-0, face-12)
dep(good-17, Thus-14)
case(good-17, for-15)
det(good-17, the-16)
dep(face-12, good-17)
case(peoples-20, of-18)
nmod:poss(peoples-20, your-19)
nmod:of(good-17, peoples-20)
advmod(Pride-25, thus-22)
case(Pride-25, for-23)
det(Pride-25, the-24)
nmod:for(face-12, Pride-25)
case(Race-28, of-26)
det(Race-28, the-27)
nmod:of(Pride-25, Race-28)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (NP (PRP we))
    (VP (MD will)
      (VP (VB make)
        (NP (NN promise))))
    (. .)))

advmod(make-5, Also-1)
nsubj(make-5, we-3)
aux(make-5, will-4)
root(ROOT-0, make-5)
dobj(make-5, promise-6)

(ROOT
  (S (IN So)
    (SBAR (RB long) (IN as)
      (S
        (NP (DT The) (NN Blood))
        (VP (VBZ endures))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB know)
          (SBAR (IN that)
            (S
              (NP (PRP$ your) (NN good))
              (VP (VBZ is)
                (NP (NN mine))))))))
    (: :)
    (S
      (NP (PRP ye))
      (VP (MD shall)
        (VP (VB feel)
          (SBAR (IN that)
            (S
              (NP (PRP$ my) (NN strength))
              (VP (VBZ is)
                (ADJP (JJ yours))))))))
    (: :)
    (S
      (PP (IN In)
        (NP
          (NP (DT the) (NN day))
          (PP (IN of)
            (NP (NNP Armageddon)))
          (, ,)
          (PP (IN at)
            (NP
              (NP (DT the) (JJ last) (JJ great) (NN fight))
              (PP (IN of)
                (NP (DT all)))))))
      (, ,)
      (NP (DT That) (NNP Our) (NNP House))
      (VP (VBP stand)
        (ADVP (RB together))))
    (CC and)
    (S
      (NP (DT the) (NNS pillars))
      (VP (VBP do) (RB not)
        (VP (VB fall))))
    (. .)))

dep(know-10, So-1)
advmod(endures-6, long-2)
mark(endures-6, as-3)
det(Blood-5, The-4)
nsubj(endures-6, Blood-5)
dep(know-10, endures-6)
nsubj(know-10, I-8)
aux(know-10, shall-9)
root(ROOT-0, know-10)
mark(mine-15, that-11)
nmod:poss(good-13, your-12)
nsubj(mine-15, good-13)
cop(mine-15, is-14)
ccomp(know-10, mine-15)
nsubj(feel-19, ye-17)
aux(feel-19, shall-18)
conj:and(know-10, feel-19)
mark(yours-24, that-20)
nmod:poss(strength-22, my-21)
nsubj(yours-24, strength-22)
cop(yours-24, is-23)
ccomp(feel-19, yours-24)
case(day-28, In-26)
det(day-28, the-27)
nmod:in(stand-43, day-28)
case(Armageddon-30, of-29)
nmod:of(day-28, Armageddon-30)
case(fight-36, at-32)
det(fight-36, the-33)
amod(fight-36, last-34)
amod(fight-36, great-35)
nmod:at(day-28, fight-36)
case(all-38, of-37)
nmod:of(fight-36, all-38)
det(House-42, That-40)
compound(House-42, Our-41)
nsubj(stand-43, House-42)
conj:and(know-10, stand-43)
advmod(stand-43, together-44)
cc(know-10, and-45)
det(pillars-47, the-46)
nsubj(fall-50, pillars-47)
aux(fall-50, do-48)
neg(fall-50, not-49)
conj:and(know-10, fall-50)

(ROOT
  (S
    (S
      (VP (VB Draw)
        (NP (RB now))
        (NP
          (NP (DT the) (JJ threefold) (NN knot) (NN firm))
          (PP (IN on)
            (NP (DT the)
              (ADJP (RB ninefold))
              (NNS bands))))))
    (, ,)
    (S (CC And)
      (NP
        (NP (DT the) (NN Law))
        (SBAR (IN that)
          (S
            (NP (PRP ye))
            (VP (VBP make)))))
      (VP (MD shall)
        (VP (VB be)
          (NP (NN law))
          (PP (IN after)
            (NP
              (NP (DT the) (NN rule))
              (PP (IN of)
                (NP (PRP$ your) (NNS lands))))))))
    (. .)))

root(ROOT-0, Draw-1)
iobj(Draw-1, now-2)
det(firm-6, the-3)
amod(firm-6, threefold-4)
compound(firm-6, knot-5)
dobj(Draw-1, firm-6)
case(bands-10, on-7)
det(bands-10, the-8)
amod(bands-10, ninefold-9)
nmod:on(firm-6, bands-10)
cc(law-20, And-12)
det(Law-14, the-13)
nsubj(law-20, Law-14)
mark(make-17, that-15)
nsubj(make-17, ye-16)
dep(Law-14, make-17)
aux(law-20, shall-18)
cop(law-20, be-19)
parataxis(Draw-1, law-20)
case(rule-23, after-21)
det(rule-23, the-22)
nmod:after(law-20, rule-23)
case(lands-26, of-24)
nmod:poss(lands-26, your-25)
nmod:of(rule-23, lands-26)

(ROOT
  (NP
    (NP (DT This))
    (PP (IN for)
      (NP
        (NP
          (NP (DT the) (NN waxen))
          (NP (NNP Heath)))
        (, ,)
        (CC and)
        (NP
          (NP (DT that))
          (PP (IN for)
            (NP (DT the) (NNP Wattle-bloom))))
        (, ,)
        (NP
          (NP (DT This))
          (PP (IN for)
            (NP (DT the) (NNP Maple-leaf))))
        (, ,)
        (CC and)
        (NP
          (NP (DT that))
          (PP (IN for)
            (NP (DT the) (JJ southern) (NN Broom))))))
    (. .)))

root(ROOT-0, This-1)
case(waxen-4, for-2)
det(waxen-4, the-3)
nmod:for(This-1, waxen-4)
appos(waxen-4, Heath-5)
cc(waxen-4, and-7)
nmod:for(This-1, that-8)
conj:and(waxen-4, that-8)
case(Wattle-bloom-11, for-9)
det(Wattle-bloom-11, the-10)
nmod:for(that-8, Wattle-bloom-11)
nmod:for(This-1, This-13)
conj:and(waxen-4, This-13)
case(Maple-leaf-16, for-14)
det(Maple-leaf-16, the-15)
nmod:for(This-13, Maple-leaf-16)
cc(waxen-4, and-18)
nmod:for(This-1, that-19)
conj:and(waxen-4, that-19)
case(Broom-23, for-20)
det(Broom-23, the-21)
amod(Broom-23, southern-22)
nmod:for(that-19, Broom-23)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN Law))
        (SBAR (IN that)
          (S
            (NP (PRP ye))
            (VP (VBP make)))))
      (VP (MD shall)
        (VP (VB be)
          (NP (NN law)))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB press)
          (NP (PRP$ my) (NN will)))))
    (, ,)
    (SBAR (IN Because)
      (S
        (NP (PRP ye))
        (VP
          (VP (VBP are)
            (NP
              (NP (NNP Sons))
              (PP (IN of)
                (NP (DT The) (NN Blood)))))
          (CC and)
          (VP (VBP call)
            (NP (PRP me)))
          (NP (NNP Mother))
          (ADVP (RB still)))))
    (. .)))

det(Law-2, The-1)
nsubj(law-8, Law-2)
mark(make-5, that-3)
nsubj(make-5, ye-4)
dep(Law-2, make-5)
aux(law-8, shall-6)
cop(law-8, be-7)
root(ROOT-0, law-8)
cc(law-8, and-9)
nsubj(press-13, I-10)
aux(press-13, do-11)
neg(press-13, not-12)
conj:and(law-8, press-13)
nmod:poss(will-15, my-14)
dobj(press-13, will-15)
mark(Sons-20, Because-17)
nsubj(Sons-20, ye-18)
nsubj(call-25, ye-18)
cop(Sons-20, are-19)
dep(law-8, Sons-20)
case(Blood-23, of-21)
det(Blood-23, The-22)
nmod:of(Sons-20, Blood-23)
cc(Sons-20, and-24)
dep(law-8, call-25)
conj:and(Sons-20, call-25)
dobj(call-25, me-26)
dobj(Sons-20, Mother-27)
advmod(Sons-20, still-28)

(ROOT
  (S
    (S
      (NP (RB Now))
      (VP (MD must)
        (ADVP (RB ye))
        (VP (VB speak)
          (PP (TO to)
            (NP (PRP$ your) (NN kinsmen))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD must)
        (VP (VB speak)
          (PP (TO to)
            (NP
              (NP (PRP you))
              (PRN (, ,)
                (PP (IN After)
                  (NP
                    (NP (DT the) (NN use))
                    (PP (IN of)
                      (NP (DT the) (NNP English)))))
                (, ,))))
          (PP (IN in)
            (NP
              (NP (JJ straight-flung) (NNS words))
              (CC and)
              (NP (JJ few)))))))
    (. .)))

nsubj(speak-4, Now-1)
aux(speak-4, must-2)
advmod(speak-4, ye-3)
root(ROOT-0, speak-4)
case(kinsmen-7, to-5)
nmod:poss(kinsmen-7, your-6)
nmod:to(speak-4, kinsmen-7)
cc(speak-4, and-8)
nsubj(speak-11, they-9)
aux(speak-11, must-10)
conj:and(speak-4, speak-11)
case(you-13, to-12)
nmod:to(speak-11, you-13)
case(use-17, After-15)
det(use-17, the-16)
nmod:after(you-13, use-17)
case(English-20, of-18)
det(English-20, the-19)
nmod:of(use-17, English-20)
case(words-24, in-22)
amod(words-24, straight-flung-23)
nmod:in(speak-11, words-24)
cc(words-24, and-25)
nmod:in(speak-11, few-26)
conj:and(words-24, few-26)

(ROOT
  (S
    (VP
      (VP (VB Go)
        (PP (TO to)
          (NP (PRP$ your) (NN work))))
      (CC and)
      (VP (VB be)
        (ADJP (JJ strong))
        (, ,)
        (S
          (VP
            (VP (VBG halting)
              (PP (RB not) (IN in)
                (NP (PRP$ your) (NNS ways))))
            (, ,)
            (VP (VBG Balking)
              (NP (DT the) (NN end) (NN half-won))
              (PP (IN for)
                (NP
                  (NP (DT an) (JJ instant) (NN dole))
                  (PP (IN of)
                    (NP (NN praise))))))))))
    (. .)))

root(ROOT-0, Go-1)
case(work-4, to-2)
nmod:poss(work-4, your-3)
nmod:to(Go-1, work-4)
cc(Go-1, and-5)
cop(strong-7, be-6)
conj:and(Go-1, strong-7)
ccomp(strong-7, halting-9)
neg(ways-13, not-10)
case(ways-13, in-11)
nmod:poss(ways-13, your-12)
nmod:in(halting-9, ways-13)
dep(halting-9, Balking-15)
det(half-won-18, the-16)
compound(half-won-18, end-17)
dobj(Balking-15, half-won-18)
case(dole-22, for-19)
det(dole-22, an-20)
amod(dole-22, instant-21)
nmod:for(Balking-15, dole-22)
case(praise-24, of-23)
nmod:of(dole-22, praise-24)

(ROOT
  (S
    (VP
      (VP (VB Stand)
        (PP (TO to)
          (NP (PRP$ your) (NN work))))
      (CC and)
      (VP (VB be)
        (ADJP (JJ wise))
        (: --)
        (NP
          (NP (JJ certain))
          (PP (IN of)
            (NP (NN sword)
              (CC and)
              (NN pen)))
          (, ,)
          (SBAR
            (WHNP (WP Who))
            (S
              (VP (VBP are) (RB neither)
                (NP
                  (NP
                    (NP (NNS children))
                    (CC nor)
                    (NP (NNS Gods)))
                  (, ,)
                  (CC but)
                  (NP
                    (NP (NNS men))
                    (PP (IN in)
                      (NP
                        (NP (DT a) (NN world))
                        (PP (IN of)
                          (NP (NNS men)))))))))))))
    (. !)))

root(ROOT-0, Stand-1)
case(work-4, to-2)
nmod:poss(work-4, your-3)
nmod:to(Stand-1, work-4)
cc(Stand-1, and-5)
cop(wise-7, be-6)
conj:and(Stand-1, wise-7)
parataxis(wise-7, certain-9)
nsubj(children-18, certain-9)
case(sword-11, of-10)
nmod:of(certain-9, sword-11)
cc(sword-11, and-12)
nmod:of(certain-9, pen-13)
conj:and(sword-11, pen-13)
ref(certain-9, Who-15)
cop(children-18, are-16)
advmod(children-18, neither-17)
acl:relcl(certain-9, children-18)
cc(children-18, nor-19)
acl:relcl(certain-9, Gods-20)
conj:nor(children-18, Gods-20)
cc(children-18, but-22)
acl:relcl(certain-9, men-23)
conj:but(children-18, men-23)
case(world-26, in-24)
det(world-26, a-25)
nmod:in(men-23, world-26)
case(men-28, of-27)
nmod:of(world-26, men-28)

(ROOT
  (S
    (NP (DT THE) (NNP FIRST) (NNP CHANTEY) (NNP Mine))
    (VP (VBD was)
      (NP (DT the) (NN woman))
      (PP (TO to)
        (NP (PRP me)))
      (, ,)
      (S
        (VP (VBG darkling)
          (S
            (NP (PRP I))
            (VP
              (VP (VBN found)
                (S
                  (NP (PRP her))
                  (: ;)
                  (VP (VBG Haling)
                    (NP (PRP$ her) (JJ dumb))
                    (PP (IN from)
                      (NP (DT the) (NN camp))))))
              (, ,)
              (VP (VBD took)
                (NP (PRP her)))
              (CC and)
              (VP (VBN bound)
                (NP (PRP her))))))))
    (. .)))

det(Mine-4, THE-1)
compound(Mine-4, FIRST-2)
compound(Mine-4, CHANTEY-3)
nsubj(woman-7, Mine-4)
cop(woman-7, was-5)
det(woman-7, the-6)
root(ROOT-0, woman-7)
case(me-9, to-8)
nmod:to(woman-7, me-9)
advcl(woman-7, darkling-11)
nsubj(found-13, I-12)
nsubj(took-23, I-12)
nsubj(bound-26, I-12)
ccomp(darkling-11, found-13)
nsubj(Haling-16, her-14)
dep(found-13, Haling-16)
nmod:poss(dumb-18, her-17)
dobj(Haling-16, dumb-18)
case(camp-21, from-19)
det(camp-21, the-20)
nmod:from(Haling-16, camp-21)
ccomp(darkling-11, took-23)
conj:and(found-13, took-23)
dobj(took-23, her-24)
cc(found-13, and-25)
ccomp(darkling-11, bound-26)
conj:and(found-13, bound-26)
dobj(bound-26, her-27)

(ROOT
  (S
    (S
      (NP (NNP Hot))
      (VP (VBD rose)
        (SBAR
          (S
            (NP
              (NP (PRP$ her) (NN tribe))
              (PP (IN on)
                (NP (PRP$ our) (NN track))))
            (VP (VBP ere)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD had)
                    (VP (VBN proved)
                      (S
                        (NP (PRP her))
                        (: ;)
                        (VP (VBG Hearing)
                          (NP (PRP$ her) (NN laugh))
                          (PP (IN in)
                            (NP (DT the) (NN gloom))))))))))))))
    (, ,)
    (ADVP (RB greatly))
    (S
      (NP (PRP I))
      (VP (VBD loved)
        (NP (PRP her))))
    (. .)))

nsubj(rose-2, Hot-1)
root(ROOT-0, rose-2)
nmod:poss(tribe-4, her-3)
nsubj(ere-8, tribe-4)
case(track-7, on-5)
nmod:poss(track-7, our-6)
nmod:on(tribe-4, track-7)
ccomp(rose-2, ere-8)
nsubj(proved-11, I-9)
aux(proved-11, had-10)
ccomp(ere-8, proved-11)
nsubj(Hearing-14, her-12)
dep(proved-11, Hearing-14)
nmod:poss(laugh-16, her-15)
dobj(Hearing-14, laugh-16)
case(gloom-19, in-17)
det(gloom-19, the-18)
nmod:in(Hearing-14, gloom-19)
advmod(loved-23, greatly-21)
nsubj(loved-23, I-22)
parataxis(rose-2, loved-23)
dobj(loved-23, her-24)

(ROOT
  (S
    (S
      (S
        (VP (VBG Swift)
          (PP (IN through)
            (NP (DT the) (NN forest)))))
      (NP (PRP we))
      (VP (VBD ran)))
    (: ;)
    (S
      (NP (NN none))
      (VP (VBD stood)
        (S
          (VP (TO to)
            (VP (VB guard)
              (NP (PRP us)))))))
    (, ,)
    (S
      (NP (JJ Few))
      (VP (VBD were)
        (NP
          (NP (PRP$ my) (NNS people))
          (ADVP (CC and)
            (RB far)))))
    (: ;)
    (S
      (ADVP (RB then))
      (NP (DT the) (NN flood))
      (VP (VBD barred)
        (NP (PRP us))))
    (: --)
    (S
      (ADVP (RB Him))
      (NP (PRP we))
      (VP (VBP call)
        (NP
          (NP (NNP Son))
          (PP (IN of)
            (NP
              (NP (DT the) (NN Sea))
              (, ,)
              (NP (NN sullen))
              (CC and)
              (NP (JJ swollen)))))))
    (. .)))

dep(ran-6, Swift-1)
case(forest-4, through-2)
det(forest-4, the-3)
nmod:through(Swift-1, forest-4)
nsubj(ran-6, we-5)
root(ROOT-0, ran-6)
nsubj(stood-9, none-8)
nsubj:xsubj(guard-11, none-8)
parataxis(ran-6, stood-9)
mark(guard-11, to-10)
xcomp(stood-9, guard-11)
dobj(guard-11, us-12)
nsubj(people-17, Few-14)
cop(people-17, were-15)
nmod:poss(people-17, my-16)
dep(ran-6, people-17)
cc(far-19, and-18)
advmod(people-17, far-19)
advmod(barred-24, then-21)
det(flood-23, the-22)
nsubj(barred-24, flood-23)
parataxis(ran-6, barred-24)
dobj(barred-24, us-25)
advmod(call-29, Him-27)
nsubj(call-29, we-28)
parataxis(ran-6, call-29)
dobj(call-29, Son-30)
case(Sea-33, of-31)
det(Sea-33, the-32)
nmod:of(Son-30, Sea-33)
nmod:of(Son-30, sullen-35)
conj:and(Sea-33, sullen-35)
cc(Sea-33, and-36)
nmod:of(Son-30, swollen-37)
conj:and(Sea-33, swollen-37)

(ROOT
  (SINV
    (VP (VBG Panting)
      (NP (PRP we)))
    (VP (VBD waited))
    (NP
      (NP (DT the) (NN death))
      (, ,)
      (NP
        (NP (NN stealer))
        (CC and)
        (NP (VBN stolen))))
    (. .)))

root(ROOT-0, Panting-1)
dobj(Panting-1, we-2)
dep(Panting-1, waited-3)
det(death-5, the-4)
nsubj(Panting-1, death-5)
appos(death-5, stealer-7)
cc(stealer-7, and-8)
appos(death-5, stolen-9)
conj:and(stealer-7, stolen-9)

(ROOT
  (S (CC Yet)
    (ADVP (RB ere))
    (NP (PRP they))
    (VP (VBD came)
      (PP (TO to)
        (NP
          (NP (PRP$ my) (NN lance))
          (VP (VBN laid)
            (PP (IN for)
              (NP
                (NP (DT the) (NN slaughter))
                (, ,)
                (NP
                  (NP
                    (NP (NNP Lightly))
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP (VBD leaped)
                          (PP (TO to)
                            (NP
                              (NP (DT a) (NN log))
                              (VP (VBN lapped)
                                (PP (IN in)
                                  (NP (DT the) (NN water))))))))))
                  (: ;)
                  (NP
                    (NP (NNP Holding))
                    (PP (IN on)
                      (NP
                        (ADJP (JJ high)
                          (CC and)
                          (RB apart))
                        (NNS skins)))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD arrayed)
                          (NP (PRP her))))))
                  (, ,)
                  (VP (VBN Called)
                    (S
                      (NP (PRP she))
                      (NP
                        (NP (DT the) (NNP God))
                        (PP (IN of)
                          (NP (DT the) (NN Wind)))))
                    (SBAR (IN that)
                      (S
                        (NP (PRP He))
                        (VP (MD should)
                          (VP (VB aid)
                            (NP (PRP her))))))))))))))
    (. .)))

cc(came-4, Yet-1)
advmod(came-4, ere-2)
nsubj(came-4, they-3)
root(ROOT-0, came-4)
case(lance-7, to-5)
nmod:poss(lance-7, my-6)
nmod:to(came-4, lance-7)
acl(lance-7, laid-8)
case(slaughter-11, for-9)
det(slaughter-11, the-10)
nmod:for(laid-8, slaughter-11)
appos(slaughter-11, Lightly-13)
nsubj(leaped-15, she-14)
acl:relcl(Lightly-13, leaped-15)
case(log-18, to-16)
det(log-18, a-17)
nmod:to(leaped-15, log-18)
acl(log-18, lapped-19)
case(water-22, in-20)
det(water-22, the-21)
nmod:in(lapped-19, water-22)
dep(Lightly-13, Holding-24)
nsubj(arrayed-31, Holding-24)
case(skins-29, on-25)
amod(skins-29, high-26)
cc(high-26, and-27)
advmod(high-26, apart-28)
nmod:on(Holding-24, skins-29)
ref(Holding-24, that-30)
acl:relcl(Holding-24, arrayed-31)
dobj(arrayed-31, her-32)
acl(Lightly-13, Called-34)
nsubj(God-37, she-35)
det(God-37, the-36)
xcomp(Called-34, God-37)
case(Wind-40, of-38)
det(Wind-40, the-39)
nmod:of(God-37, Wind-40)
mark(aid-44, that-41)
nsubj(aid-44, He-42)
aux(aid-44, should-43)
ccomp(Called-34, aid-44)
dobj(aid-44, her-45)

(ROOT
  (S
    (NP (NNP Life))
    (VP (VBD had)
      (NP
        (NP (DT the) (NN tree))
        (PP (IN at)
          (NP
            (NP (DT that) (NN word))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (NNP Praise))
                (NP
                  (NP (PRP we))
                  (NP (DT the) (NN Giver))))
              (. !) (-RRB- -RRB-))))))))

nsubj(had-2, Life-1)
root(ROOT-0, had-2)
det(tree-4, the-3)
dobj(had-2, tree-4)
case(word-7, at-5)
det(word-7, that-6)
nmod:at(tree-4, word-7)
dep(word-7, Praise-9)
dep(Praise-9, we-10)
det(Giver-12, the-11)
dep(we-10, Giver-12)

(ROOT
  (S
    (NP (NNP Otter-like))
    (VP (VBD left)
      (S
        (NP (PRP he))
        (NP
          (NP (DT the) (NN bank))
          (PP (IN for)
            (NP (DT the) (JJ full) (NN river))))))
    (. .)))

nsubj(left-2, Otter-like-1)
root(ROOT-0, left-2)
nsubj(bank-5, he-3)
det(bank-5, the-4)
xcomp(left-2, bank-5)
case(river-9, for-6)
det(river-9, the-7)
amod(river-9, full-8)
nmod:for(bank-5, river-9)

(ROOT
  (S
    (S
      (NP (NNP Far))
      (VP (VBD fell)
        (NP (PRP$ their) (NNS axes))
        (PRT (RP behind))
        (, ,)
        (S
          (ADJP (VBG flashing)
            (CC and)
            (JJ ringing)))))
    (, ,)
    (S
      (NP (NNP Wonder))
      (VP (VBD was)
        (PP (IN on)
          (NP (PRP me)))))
    (CC and)
    (S
      (NP (NN fear))
      (: --)
      (ADVP (RB yet))
      (NP (PRP she))
      (VP (VBD was)
        (VP (VBG singing))))
    (. !)))

nsubj(fell-2, Far-1)
root(ROOT-0, fell-2)
nmod:poss(axes-4, their-3)
dobj(fell-2, axes-4)
compound:prt(fell-2, behind-5)
xcomp(fell-2, flashing-7)
cc(flashing-7, and-8)
xcomp(fell-2, ringing-9)
conj:and(flashing-7, ringing-9)
nsubj(me-14, Wonder-11)
cop(me-14, was-12)
case(me-14, on-13)
conj:and(fell-2, me-14)
cc(fell-2, and-15)
nsubj(singing-21, fear-16)
advmod(singing-21, yet-18)
nsubj(singing-21, she-19)
aux(singing-21, was-20)
conj:and(fell-2, singing-21)

(ROOT
  (S
    (NP (NNP Low))
    (VP (VBD lay)
      (NP
        (NP (DT the) (NN land))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD had)
              (VP (VBN left)))))))
    (. .)))

nsubj(lay-2, Low-1)
root(ROOT-0, lay-2)
det(land-4, the-3)
dobj(lay-2, land-4)
nsubj(left-7, we-5)
aux(left-7, had-6)
acl:relcl(land-4, left-7)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT the) (NN blue))
    (VP (VBP bound)
      (NP (PRP us))
      (, ,)
      (SBAR (RB Even)
        (S
          (NP
            (NP (DT the) (NN Floor))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ Gods) (NN level))
                (PP (IN around)
                  (NP (PRP us)))))))))
    (. .)))

advmod(bound-4, Now-1)
det(blue-3, the-2)
nsubj(bound-4, blue-3)
root(ROOT-0, bound-4)
dobj(bound-4, us-5)
advmod(Floor-9, Even-7)
det(Floor-9, the-8)
dep(bound-4, Floor-9)
case(level-13, of-10)
det(level-13, the-11)
amod(level-13, Gods-12)
nmod:of(Floor-9, level-13)
case(us-15, around-14)
nmod:around(level-13, us-15)

(ROOT
  (S
    (S
      (NP (NNP Whisper))
      (ADVP (RB there))
      (VP (VBD was) (RB not)))
    (, ,)
    (CC nor)
    (S
      (NP
        (NP (NN word) (, ,) (NN shadow)
          (CC nor)
          (NN showing))
        (PRN (, ,)
          (PP (IN Till)
            (NP (DT the) (NN light)))))
      (VP (VBD stirred)
        (PP (IN on)
          (NP (DT the) (JJ deep)))
        (, ,)
        (S
          (VP (VBG glowing)
            (CC and)
            (VBG growing)))))
    (. .)))

nsubj(was-3, Whisper-1)
advmod(was-3, there-2)
root(ROOT-0, was-3)
neg(was-3, not-4)
cc(was-3, nor-6)
nsubj(stirred-16, word-7)
conj:nor(word-7, shadow-9)
nsubj(stirred-16, shadow-9)
cc(word-7, nor-10)
conj:nor(word-7, showing-11)
nsubj(stirred-16, showing-11)
case(light-15, Till-13)
det(light-15, the-14)
nmod:till(word-7, light-15)
conj:nor(was-3, stirred-16)
case(deep-19, on-17)
det(deep-19, the-18)
nmod:on(stirred-16, deep-19)
xcomp(stirred-16, glowing-21)
cc(glowing-21, and-22)
xcomp(stirred-16, growing-23)
conj:and(glowing-21, growing-23)

(ROOT
  (SINV
    (ADVP (RB Then))
    (VBD did)
    (NP (PRP He))
    (VP (VB leap)
      (PP (TO to)
        (NP
          (NP (PRP$ His) (NN place))
          (VP (VBG flaring)
            (PP (IN from)
              (PP (IN under))))))
      (, ,)
      (S
        (NP (PRP He))
        (NP
          (NP
            (NP (DT the) (NN Compeller))
            (, ,)
            (NP (DT the) (NNP Sun))
            (, ,))
          (VP (VBN bared)
            (PP (TO to)
              (NP (PRP$ our) (NN wonder)))))))
    (. .)))

advmod(leap-4, Then-1)
aux(leap-4, did-2)
nsubj(leap-4, He-3)
root(ROOT-0, leap-4)
case(place-7, to-5)
nmod:poss(place-7, His-6)
nmod:to(leap-4, place-7)
acl(place-7, flaring-8)
case(under-10, from-9)
dep(flaring-8, under-10)
nsubj(Compeller-14, He-12)
det(Compeller-14, the-13)
xcomp(leap-4, Compeller-14)
det(Sun-17, the-16)
appos(Compeller-14, Sun-17)
acl(Compeller-14, bared-19)
case(wonder-22, to-20)
nmod:poss(wonder-22, our-21)
nmod:to(bared-19, wonder-22)

(ROOT
  (S
    (NP
      (NP (NNP Nay))
      (, ,)
      (VP
        (ADVP (RB not)
          (NP (DT a) (NN league))
          (PP (IN from)
            (NP (PRP$ our) (NNS eyes))))
        (VBN blinded)
        (PP (IN with)
          (NP (NN gazing))))
      (, ,))
    (VP (VBD Cleared)
      (S
        (NP (PRP He))
        (NP
          (NP (DT the) (NN gate))
          (PP (IN of)
            (NP
              (NP (DT the) (NN world))
              (, ,)
              (ADJP (JJ huge)
                (CC and)
                (JJ amazing)))))))
    (. !)))

nsubj(Cleared-13, Nay-1)
neg(blinded-9, not-3)
det(league-5, a-4)
nmod:npmod(not-3, league-5)
case(eyes-8, from-6)
nmod:poss(eyes-8, our-7)
nmod:from(not-3, eyes-8)
acl(Nay-1, blinded-9)
case(gazing-11, with-10)
nmod:with(blinded-9, gazing-11)
root(ROOT-0, Cleared-13)
nsubj(gate-16, He-14)
det(gate-16, the-15)
xcomp(Cleared-13, gate-16)
case(world-19, of-17)
det(world-19, the-18)
nmod:of(gate-16, world-19)
amod(world-19, huge-21)
cc(huge-21, and-22)
amod(world-19, amazing-23)
conj:and(huge-21, amazing-23)

(ROOT
  (NP
    (NP
      (NP
        (NP (DT This))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD beheld)))))
      (PRN (-LRB- -LRB-)
        (CC and)
        (S
          (NP (PRP we))
          (VP (VBP live)))
        (-RRB- -RRB-)))
    (: --)
    (NP
      (NP (DT the) (NN Pit))
      (PP (IN of)
        (NP (DT the) (NN Burning))))
    (. !)))

root(ROOT-0, This-1)
nsubj(beheld-3, we-2)
acl:relcl(This-1, beheld-3)
cc(live-7, and-5)
nsubj(live-7, we-6)
dep(This-1, live-7)
det(Pit-11, the-10)
dep(This-1, Pit-11)
case(Burning-14, of-12)
det(Burning-14, the-13)
nmod:of(Pit-11, Burning-14)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (DT the) (NNP God))
      (VP (VBD spoke)
        (PP (TO to)
          (NP
            (NP (DT the) (NN tree))
            (PP (IN for)
              (NP (PRP$ our) (VBG returning)))))))
    (: ;)
    (S
      (PP (RB Back) (TO to)
        (NP
          (NP (DT the) (NN beach))
          (PP (IN of)
            (NP (PRP$ our) (NN flight)))))
      (, ,)
      (UCP
        (ADJP (JJ fearless))
        (CC and)
        (ADVP (RB slowly)))
      (, ,)
      (VP
        (ADVP (RB Back)
          (PP (TO to)
            (NP (PRP$ our) (NNS slayers))))
        (VBD went)
        (NP (PRP he))))
    (: :)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBD were)
        (ADJP (JJ holy))))
    (. .)))

advmod(spoke-4, Then-1)
det(God-3, the-2)
nsubj(spoke-4, God-3)
nsubj(went-28, God-3)
root(ROOT-0, spoke-4)
case(tree-7, to-5)
det(tree-7, the-6)
nmod:to(spoke-4, tree-7)
case(our-9, for-8)
nmod:for(tree-7, our-9)
amod(our-9, returning-10)
advmod(beach-15, Back-12)
case(beach-15, to-13)
det(beach-15, the-14)
nmod:to(went-28, beach-15)
case(flight-18, of-16)
nmod:poss(flight-18, our-17)
nmod:of(beach-15, flight-18)
dep(went-28, fearless-20)
cc(fearless-20, and-21)
advmod(fearless-20, slowly-22)
advmod(went-28, Back-24)
case(slayers-27, to-25)
nmod:poss(slayers-27, our-26)
nmod:to(Back-24, slayers-27)
conj:but(spoke-4, went-28)
dobj(went-28, he-29)
cc(spoke-4, but-31)
nsubj(holy-34, we-32)
cop(holy-34, were-33)
conj:but(spoke-4, holy-34)

(ROOT
  (FRAG
    (NP
      (NP (NNS Men))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD were)
            (ADJP (JJ hot)
              (PP (IN in)
                (NP
                  (NP (DT that) (NN hunt))
                  (, ,)
                  (NP
                    (NP
                      (NP (NNS women))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD followed)))))
                    (, ,)
                    (NP
                      (NP (NNP Babes))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD were)
                            (VP (VBN promised)
                              (NP (PRP$ our) (NNS bones)))))))
                    (, ,)
                    (VP (VBN trembled)
                      (CC and)
                      (VBN wallowed))))))))))
    (: :)
    (S
      (PP (IN Over)
        (NP
          (NP
            (NP (DT the) (NNS necks))
            (PP (IN of)
              (NP (DT the) (NNP Tribe) (NN crouching))))
          (CC and)
          (NP (NN fawning))
          (: --)
          (NP (NN Prophet))
          (CC and)
          (NP (NNS priestess))))
      (NP (PRP we))
      (VP (VBD came)
        (ADVP (RB back))
        (PP (IN from)
          (NP (DT the) (VBG dawning)))))
    (. !)))

root(ROOT-0, Men-1)
nsubj(hot-4, Men-1)
ref(Men-1, that-2)
cop(hot-4, were-3)
acl:relcl(Men-1, hot-4)
case(hunt-7, in-5)
det(hunt-7, that-6)
nmod:in(hot-4, hunt-7)
appos(hunt-7, women-9)
nsubj(followed-11, women-9)
ref(women-9, that-10)
acl:relcl(women-9, followed-11)
appos(women-9, Babes-13)
nsubjpass(promised-16, Babes-13)
ref(Babes-13, that-14)
auxpass(promised-16, were-15)
acl:relcl(Babes-13, promised-16)
nmod:poss(bones-18, our-17)
dobj(promised-16, bones-18)
acl(women-9, trembled-20)
cc(trembled-20, and-21)
acl(women-9, wallowed-22)
conj:and(trembled-20, wallowed-22)
case(necks-26, Over-24)
det(necks-26, the-25)
nmod:over(came-38, necks-26)
case(crouching-30, of-27)
det(crouching-30, the-28)
compound(crouching-30, Tribe-29)
nmod:of(necks-26, crouching-30)
cc(necks-26, and-31)
conj:and(necks-26, fawning-32)
nmod:over(came-38, fawning-32)
conj:and(necks-26, Prophet-34)
nmod:over(came-38, Prophet-34)
cc(necks-26, and-35)
conj:and(necks-26, priestess-36)
nmod:over(came-38, priestess-36)
nsubj(came-38, we-37)
parataxis(Men-1, came-38)
advmod(came-38, back-39)
case(the-41, from-40)
nmod:from(came-38, the-41)
amod(the-41, dawning-42)

(ROOT
  (S
    (S
      (NP (DT THE) (NNP LAST) (NNP CHANTEY) ('' ''))
      (VP (VBZ _)))
    (CC And)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP (DT no) (JJR more) (NN sea))))
    (. .)))

det(CHANTEY-3, THE-1)
compound(CHANTEY-3, LAST-2)
nsubj(_-5, CHANTEY-3)
root(ROOT-0, _-5)
cc(_-5, And-6)
expl(was-8, there-7)
conj:and(_-5, was-8)
neg(sea-11, no-9)
amod(sea-11, more-10)
nsubj(was-8, sea-11)

(ROOT
  (S
    (NP
      (NP (NN _) ('' ''))
      (ADVP (RB Thus)))
    (VP (VBD said)
      (NP (DT The) (NN Lord))
      (PP (IN in)
        (NP (DT the) (NNP Vault)))
      (PP (IN above)
        (S
          (NP (DT the) (NNP Cherubim))
          (VP (VBG Calling)
            (PP (TO to)
              (NP
                (NP (DT the) (NNPS Angels))
                (CC and)
                (NP (DT the) (NNS Souls))))
            (PP (IN in)
              (NP (PRP$ their) (NN degree)))
            (: :) (`` ``)
            (NP (NNP Lo))))))
    (. !)))

nsubj(said-4, _-1)
advmod(_-1, Thus-3)
root(ROOT-0, said-4)
det(Lord-6, The-5)
dobj(said-4, Lord-6)
case(Vault-9, in-7)
det(Vault-9, the-8)
nmod:in(said-4, Vault-9)
mark(Calling-13, above-10)
det(Cherubim-12, the-11)
nsubj(Calling-13, Cherubim-12)
advcl(said-4, Calling-13)
case(Angels-16, to-14)
det(Angels-16, the-15)
nmod:to(Calling-13, Angels-16)
cc(Angels-16, and-17)
det(Souls-19, the-18)
nmod:to(Calling-13, Souls-19)
conj:and(Angels-16, Souls-19)
case(degree-22, in-20)
nmod:poss(degree-22, their-21)
nmod:in(Calling-13, degree-22)
dobj(Calling-13, Lo-25)

(ROOT
  (S
    (NP (NNP Earth))
    (VP (VBZ has)
      (VP (VBN passed)
        (PRT (RP away))
        (PP (IN On)
          (NP
            (NP (DT the) (NN smoke))
            (PP (IN of)
              (NP (NNP Judgment) (NNP Day)))))))
    (. .)))

nsubj(passed-3, Earth-1)
aux(passed-3, has-2)
root(ROOT-0, passed-3)
compound:prt(passed-3, away-4)
case(smoke-7, On-5)
det(smoke-7, the-6)
nmod:on(passed-3, smoke-7)
case(Day-10, of-8)
compound(Day-10, Judgment-9)
nmod:of(smoke-7, Day-10)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP (PRP$ Our) (NN word))
        (VP (MD may)
          (VP (VB be)
            (VP (VBN established))))))
    (VP (MD shall)
      (NP (PRP We))
      (S
        (VP (VB gather)
          (PRT (RP up))
          (NP (DT the) (NN sea)))))
    (. ?) ('' '')))

mark(established-6, That-1)
nmod:poss(word-3, Our-2)
nsubjpass(established-6, word-3)
aux(established-6, may-4)
auxpass(established-6, be-5)
csubj(shall-7, established-6)
root(ROOT-0, shall-7)
dobj(shall-7, We-8)
dep(shall-7, gather-9)
compound:prt(gather-9, up-10)
det(sea-12, the-11)
dobj(gather-9, sea-12)

(ROOT
  (S
    (NP (NNP Loud))
    (VP (VBD sang)
      (S
        (NP
          (NP (DT the) (NNS souls))
          (PP (IN of)
            (NP (DT the) (NN jolly)))
          (, ,)
          (ADJP (RB jolly) (JJ mariners))
          (: :))
        (`` ``)
        (ADJP (JJ Plague)
          (PP (IN upon)
            (NP
              (NP (DT the) (NN hurricane))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD made)
                    (S
                      (NP (PRP us))
                      (VP (VB furl)
                        (CC and)
                        (VB flee)))))))))))
    (. !)))

nsubj(sang-2, Loud-1)
root(ROOT-0, sang-2)
det(souls-4, the-3)
dep(Plague-13, souls-4)
case(jolly-7, of-5)
det(jolly-7, the-6)
nmod:of(souls-4, jolly-7)
advmod(mariners-10, jolly-9)
amod(souls-4, mariners-10)
xcomp(sang-2, Plague-13)
case(hurricane-16, upon-14)
det(hurricane-16, the-15)
nmod:upon(Plague-13, hurricane-16)
nsubj(made-18, hurricane-16)
ref(hurricane-16, that-17)
acl:relcl(hurricane-16, made-18)
nsubj(furl-20, us-19)
nsubj(flee-22, us-19)
ccomp(made-18, furl-20)
cc(furl-20, and-21)
ccomp(made-18, flee-22)
conj:and(furl-20, flee-22)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (NN war))
      (VP (VBZ is)
        (VP (VBN done)
          (PP (IN between)
            (NP (PRP us))))))
    (, ,)
    (S
      (PP (IN In)
        (NP (DT the) (JJ deep)))
      (NP (DT the) (NNP Lord))
      (VP (VBP hath)
        (VP (VBN seen)
          (NP
            (NP (PRP us))
            (: --)
            (NP
              (NP (PRP$ Our) (NNS bones))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (MD 'll)
                    (VP (VB leave)
                      (NP (DT the) (NN barracout)))))))
            ('' ')))))
    (, ,)
    (CC and)
    (S
      (NP (NNP God))
      (VP (MD may)
        (VP (VB sink)
          (NP (DT the) (NN sea)))))
    (. !) ('' '')))

cc(done-5, But-1)
det(war-3, the-2)
nsubjpass(done-5, war-3)
auxpass(done-5, is-4)
root(ROOT-0, done-5)
case(us-7, between-6)
nmod:between(done-5, us-7)
case(deep-11, In-9)
det(deep-11, the-10)
nmod:in(hath-14, deep-11)
det(Lord-13, the-12)
nsubj(hath-14, Lord-13)
ccomp(done-5, hath-14)
dep(hath-14, seen-15)
dobj(seen-15, us-16)
nmod:poss(bones-19, Our-18)
dep(us-16, bones-19)
nsubj(leave-22, we-20)
aux(leave-22, 'll-21)
acl:relcl(bones-19, leave-22)
det(barracout-24, the-23)
dobj(leave-22, barracout-24)
cc(done-5, and-27)
nsubj(sink-30, God-28)
aux(sink-30, may-29)
conj:and(done-5, sink-30)
det(sea-32, the-31)
dobj(sink-30, sea-32)

(ROOT
  (SINV (RB Then)
    (VP (VBD said)
      (NP
        (NP (DT the) (NN soul))
        (PP (IN of)
          (NP (NNP Judas))))
      (SBAR (IN that)
        (S
          (NP
            (NP
              (ADJP (RB betray) (JJ -RSB-))
              (NN \) (NN ed) (NNS Him))
            (: :) (`` ``)
            (NP (NNP Lord))
            (, ,))
          (VP (VBP hast)
            (S
              (NP (PRP Thou))
              (VP (VBN forgotten)))))))
    (NP
      (NP (NNP Thy) (NNP covenant))
      (PP (IN with)
        (NP (PRP me))))
    (. ?)))

advmod(said-2, Then-1)
root(ROOT-0, said-2)
det(soul-4, the-3)
dobj(said-2, soul-4)
case(Judas-6, of-5)
nmod:of(soul-4, Judas-6)
mark(hast-17, that-7)
advmod(-RSB--9, betray-8)
amod(Him-12, -RSB--9)
compound(Him-12, \-10)
compound(Him-12, ed-11)
nsubj(hast-17, Him-12)
dep(Him-12, Lord-15)
ccomp(said-2, hast-17)
nsubj(forgotten-19, Thou-18)
dep(hast-17, forgotten-19)
compound(covenant-21, Thy-20)
nsubj(said-2, covenant-21)
case(me-23, with-22)
nmod:with(covenant-21, me-23)

(ROOT
  (SBARQ
    (WHADVP (WRB How)
      (NP (RB once) (DT a) (NN year)))
    (SQ
      (NP (PRP I))
      (VP (VB go)
        (S
          (VP (TO To)
            (VP (VB cool)
              (NP (PRP me))
              (PP (IN on)
                (NP (DT the) (NN floe))))))))
    (. ?)))

advmod(go-6, How-1)
advmod(year-4, once-2)
det(year-4, a-3)
dep(How-1, year-4)
nsubj(go-6, I-5)
nsubj:xsubj(cool-8, I-5)
root(ROOT-0, go-6)
mark(cool-8, To-7)
xcomp(go-6, cool-8)
dobj(cool-8, me-9)
case(floe-12, on-10)
det(floe-12, the-11)
nmod:on(cool-8, floe-12)

(ROOT
  (S (CC And)
    (NP (PRP Ye))
    (VP (VBP take)
      (NP
        (NP (PRP$ my) (NN day))
        (PP (IN of)
          (NP (NN mercy))))
      (SBAR (IN if)
        (S
          (NP (PRP Ye))
          (VP (VB take)
            (PRT (RP away))
            (NP (DT the) (NN sea))))))
    (. !) ('' '')))

cc(take-3, And-1)
nsubj(take-3, Ye-2)
root(ROOT-0, take-3)
nmod:poss(day-5, my-4)
dobj(take-3, day-5)
case(mercy-7, of-6)
nmod:of(day-5, mercy-7)
mark(take-10, if-8)
nsubj(take-10, Ye-9)
advcl(take-3, take-10)
compound:prt(take-10, away-11)
det(sea-13, the-12)
dobj(take-10, sea-13)

(ROOT
  (SINV
    (VP
      (ADVP (RB Then))
      (VBD said))
    (NP
      (NP (DT the) (NN soul))
      (PP (IN of)
        (NP
          (NP (DT the) (NNP Angel))
          (PP (IN of)
            (NP (DT the) (JJ Off-shore) (NN Wind))
            (: :))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (PRP He))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ bits)
                    (NP
                      (NP (DT the) (NN thunder))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (DT the) (JJ bull-mouthed) (NNS breakers))
                          (VP (VB flee)))))))))
            (-RRB- -RRB-)))))
    (: :) (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (VBP have)
          (S
            (VP (VB watch)
              (CC and)
              (VB ward)))
          (S
            (VP (TO to)
              (VP (VB keep)
                (NP (NNP O'er) (NNP Thy) (NNS wonders))
                (PP (IN on)
                  (NP (DT the) (JJ deep))))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP Ye))
        (VP (VBP take)
          (S
            (NP (PRP mine))
            (VP (VB honour)
              (PP (IN from)
                (NP (PRP me)))
              (SBAR (IN if)
                (S
                  (NP (PRP Ye))
                  (VP (VB take)
                    (PRT (RP away))
                    (NP (DT the) (NN sea))))))))))
    (. !) ('' '')))

advmod(said-2, Then-1)
root(ROOT-0, said-2)
det(soul-4, the-3)
nsubj(said-2, soul-4)
case(Angel-7, of-5)
det(Angel-7, the-6)
nmod:of(soul-4, Angel-7)
case(Wind-11, of-8)
det(Wind-11, the-9)
amod(Wind-11, Off-shore-10)
nmod:of(Angel-7, Wind-11)
dep(Angel-7, He-14)
nsubj(bits-16, He-14)
ref(He-14, that-15)
acl:relcl(He-14, bits-16)
det(thunder-18, the-17)
dobj(bits-16, thunder-18)
advmod(flee-23, when-19)
det(breakers-22, the-20)
amod(breakers-22, bull-mouthed-21)
nsubj(flee-23, breakers-22)
acl:relcl(thunder-18, flee-23)
nsubj(have-28, I-27)
nsubj:xsubj(keep-33, I-27)
ccomp(said-2, have-28)
ccomp(have-28, watch-29)
cc(watch-29, and-30)
ccomp(have-28, ward-31)
conj:and(watch-29, ward-31)
mark(keep-33, to-32)
xcomp(have-28, keep-33)
compound(wonders-36, O'er-34)
compound(wonders-36, Thy-35)
dobj(keep-33, wonders-36)
case(deep-39, on-37)
det(deep-39, the-38)
nmod:on(keep-33, deep-39)
cc(have-28, And-41)
nsubj(take-43, Ye-42)
ccomp(said-2, take-43)
conj:and(have-28, take-43)
nsubj(honour-45, mine-44)
ccomp(take-43, honour-45)
case(me-47, from-46)
nmod:from(honour-45, me-47)
mark(take-50, if-48)
nsubj(take-50, Ye-49)
advcl(honour-45, take-50)
compound:prt(take-50, away-51)
det(sea-53, the-52)
dobj(take-50, sea-53)

(ROOT
  (S
    (S
      (NP (NNP Loud))
      (VP (VBD sang)
        (S
          (NP
            (NP (DT the) (NNS souls))
            (PP (IN of)
              (NP (DT the) (NN jolly)))
            (, ,)
            (ADJP (RB jolly) (JJ mariners))
            (: :))
          (`` ``)
          (ADJP (JJ Nay)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP we))
        (VP (VBD were)
          (ADJP (JJ angry))))
      (, ,)
      (CC and)
      (S
        (NP (DT a) (JJ hasty) (NN folk))
        (VP (VBP are)
          (NP (PRP we)))))
    (. !)))

nsubj(sang-2, Loud-1)
root(ROOT-0, sang-2)
det(souls-4, the-3)
dep(Nay-13, souls-4)
case(jolly-7, of-5)
det(jolly-7, the-6)
nmod:of(souls-4, jolly-7)
advmod(mariners-10, jolly-9)
amod(souls-4, mariners-10)
xcomp(sang-2, Nay-13)
cc(sang-2, but-15)
nsubj(angry-18, we-16)
cop(angry-18, were-17)
conj:but(sang-2, angry-18)
cc(angry-18, and-20)
det(folk-23, a-21)
amod(folk-23, hasty-22)
nsubj(we-25, folk-23)
cop(we-25, are-24)
conj:but(sang-2, we-25)
conj:and(angry-18, we-25)

(ROOT
  (X
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBD worked)
          (SBAR
            (S
              (NP (DT the) (NN ship))
              (ADVP (RB together))
              (VP (VBD Till)
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP (VBD foundered)
                      (PP (IN in)
                        (NP (JJ foul) (NN weather))))))))))))
    (, ,)
    (NP
      (SQ (VBP Are)
        (NP (PRP we)))
      (VP (VB babes)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (MD should)
              (VP (VB clamour)
                (PP (IN for)
                  (NP
                    (NP (DT a) (NN vengeance))
                    (PP (IN on)
                      (NP (DT the) (NN sea)))))))))))
    (. ?) ('' '')))

mark(worked-3, If-1)
nsubj(worked-3, we-2)
dep(Are-14, worked-3)
det(ship-5, the-4)
nsubj(Till-7, ship-5)
advmod(Till-7, together-6)
ccomp(worked-3, Till-7)
nsubj(foundered-9, she-8)
ccomp(Till-7, foundered-9)
case(weather-12, in-10)
amod(weather-12, foul-11)
nmod:in(foundered-9, weather-12)
root(ROOT-0, Are-14)
nsubj(Are-14, we-15)
dep(Are-14, babes-16)
mark(clamour-20, that-17)
nsubj(clamour-20, we-18)
aux(clamour-20, should-19)
ccomp(babes-16, clamour-20)
case(vengeance-23, for-21)
det(vengeance-23, a-22)
nmod:for(clamour-20, vengeance-23)
case(sea-26, on-24)
det(sea-26, the-25)
nmod:on(vengeance-23, sea-26)

(ROOT
  (SINV
    (VP
      (ADVP (RB Then))
      (VBD said)
      (NP
        (NP (DT the) (NNS souls))
        (PP (IN of)
          (NP (DT the) (NNS slaves)))))
    (SBAR (IN that)
      (S
        (NP (NNS men))
        (VP (VBD threw)
          (ADVP (RB overboard)))))
    (: :) (`` ``)
    (S
      (S
        (S
          (NP
            (NP (NNP Kennelled))
            (PP (IN in)
              (NP
                (NP (DT the) (NN picaroon))
                (NP (DT a) (JJ weary) (NN band)))))
          (VP (VBD were)
            (NP (PRP we))))
        (: ;)
        (CC But)
        (S
          (NP (NNP Thy) (NN arm))
          (VP (VBD was)
            (ADJP (JJ strong)
              (S
                (VP (TO to)
                  (VP (VB save))))))))
      (, ,)
      (CC And)
      (S
        (S
          (NP (PRP it))
          (VP (VBD touched)
            (NP (PRP us))
            (PP (IN on)
              (NP (DT the) (NN wave)))))
        (, ,)
        (CC And)
        (S
          (NP (PRP we))
          (VP (VBD drowsed)
            (S
              (NP (DT the) (JJ long) (NNS tides))
              (VP (VB idle)
                (SBAR (IN till)
                  (S
                    (NP (NNP Thy) (NNP Trumpets))
                    (VP (VBD tore)
                      (NP (DT the) (NN sea)))))))))))
    (. .) ('' '')))

advmod(said-2, Then-1)
root(ROOT-0, said-2)
det(souls-4, the-3)
dobj(said-2, souls-4)
case(slaves-7, of-5)
det(slaves-7, the-6)
nmod:of(souls-4, slaves-7)
mark(threw-10, that-8)
nsubj(threw-10, men-9)
dep(said-2, threw-10)
advmod(threw-10, overboard-11)
nsubj(we-22, Kennelled-14)
case(picaroon-17, in-15)
det(picaroon-17, the-16)
nmod:in(Kennelled-14, picaroon-17)
det(band-20, a-18)
amod(band-20, weary-19)
dep(picaroon-17, band-20)
cop(we-22, were-21)
ccomp(said-2, we-22)
cc(we-22, But-24)
compound(arm-26, Thy-25)
nsubj(strong-28, arm-26)
nsubj:xsubj(save-30, arm-26)
cop(strong-28, was-27)
ccomp(said-2, strong-28)
conj:but(we-22, strong-28)
mark(save-30, to-29)
xcomp(strong-28, save-30)
cc(we-22, And-32)
nsubj(touched-34, it-33)
ccomp(said-2, touched-34)
conj:but(we-22, touched-34)
dobj(touched-34, us-35)
case(wave-38, on-36)
det(wave-38, the-37)
nmod:on(touched-34, wave-38)
cc(touched-34, And-40)
nsubj(drowsed-42, we-41)
conj:but(we-22, drowsed-42)
conj:and(touched-34, drowsed-42)
det(tides-45, the-43)
amod(tides-45, long-44)
nsubj(idle-46, tides-45)
ccomp(drowsed-42, idle-46)
mark(tore-50, till-47)
compound(Trumpets-49, Thy-48)
nsubj(tore-50, Trumpets-49)
advcl(idle-46, tore-50)
det(sea-52, the-51)
dobj(tore-50, sea-52)

(ROOT
  (SINV
    (VP
      (ADVP (RB Then))
      (VBD cried)
      (NP
        (NP (DT the) (NN soul))
        (PP (IN of)
          (NP (DT the) (NN stout)))))
    (NP
      (NP (NNP Apostle) (NNP Paul))
      (PP (TO to)
        (NP (NNP God))))
    (: :) (`` ``)
    (S
      (S
        (ADVP (RB Once))
        (NP (PRP we))
        (VP (VBD frapped)
          (NP (DT a) (NN ship))))
      (, ,)
      (CC and)
      (S
        (NP (PRP she))
        (VP (VBD laboured)
          (ADVP (RB woundily)))))
    (. .)))

advmod(cried-2, Then-1)
root(ROOT-0, cried-2)
det(soul-4, the-3)
dobj(cried-2, soul-4)
case(stout-7, of-5)
det(stout-7, the-6)
nmod:of(soul-4, stout-7)
compound(Paul-9, Apostle-8)
nsubj(cried-2, Paul-9)
case(God-11, to-10)
nmod:to(Paul-9, God-11)
advmod(frapped-16, Once-14)
nsubj(frapped-16, we-15)
ccomp(cried-2, frapped-16)
det(ship-18, a-17)
dobj(frapped-16, ship-18)
cc(frapped-16, and-20)
nsubj(laboured-22, she-21)
ccomp(cried-2, laboured-22)
conj:and(frapped-16, laboured-22)
advmod(laboured-22, woundily-23)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD were)
        (NP
          (NP (CD fourteen) (NN score))
          (PP (IN of)
            (NP (DT these))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP they))
      (VP (VBN blessed)
        (NP
          (NP (NNP Thee))
          (PP (IN on)
            (NP (PRP$ their) (NNS knees))))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP they))
            (VP (VBD learned)
              (NP (NNP Thy) (NNP Grace)
                (CC and)
                (NNP Glory))
              (PP (IN under)
                (NP (NNP Malta)))
              (PP (IN by)
                (NP (DT the) (NN sea))))))))
    (. !) ('' '')))

expl(were-2, There-1)
root(ROOT-0, were-2)
nummod(score-4, fourteen-3)
nsubj(were-2, score-4)
case(these-6, of-5)
nmod:of(score-4, these-6)
cc(were-2, And-8)
nsubj(blessed-10, they-9)
conj:and(were-2, blessed-10)
dobj(blessed-10, Thee-11)
case(knees-14, on-12)
nmod:poss(knees-14, their-13)
nmod:on(Thee-11, knees-14)
advmod(learned-18, When-16)
nsubj(learned-18, they-17)
advcl(blessed-10, learned-18)
compound(Grace-20, Thy-19)
dobj(learned-18, Grace-20)
cc(Grace-20, and-21)
dobj(learned-18, Glory-22)
conj:and(Grace-20, Glory-22)
case(Malta-24, under-23)
nmod:under(learned-18, Malta-24)
case(sea-27, by-25)
det(sea-27, the-26)
nmod:by(learned-18, sea-27)

(ROOT
  (FRAG
    (NP (NNP Loud))
    (SBAR
      (S
        (VP (VBD sang)
          (NP
            (NP (DT the) (NNS souls))
            (PP (IN of)
              (NP
                (NP (DT the) (NN jolly))
                (, ,)
                (NP (JJ jolly) (NNS mariners))
                (, ,)
                (NP
                  (NP (NNP Plucking))
                  (PP (IN at)
                    (NP (PRP$ their) (NNS harps))))
                (, ,)
                (CC and)
                (NP
                  (NP (PRP they))
                  (VP (VBN plucked)
                    (ADVP (RB unhandily))))))))))
    (: :) (`` ``)
    (S
      (S
        (NP (PRP$ Our) (NNS thumbs))
        (VP
          (VP (VBP are)
            (ADJP (JJ rough)))
          (CC and)
          (VP (VBD tarred))))
      (, ,)
      (CC And)
      (S
        (S
          (NP (DT the) (NN tune))
          (VP (VBZ is)
            (NP (NN something))
            (ADVP (RB hard))))
        (: --)
        (S
          (NP (NNP May))
          (NP (PRP we))
          (VP (VBP lift)
            (NP
              (NP (DT a) (NNP Deep-sea) (NNP Chantey))
              (PP (JJ such) (IN as)
                (NP
                  (NP (NN seamen) (NN use))
                  (PP (IN at)
                    (NP (NN sea))))))))))
    (. ?) ('' '')))

root(ROOT-0, Loud-1)
dep(Loud-1, sang-2)
det(souls-4, the-3)
dobj(sang-2, souls-4)
case(jolly-7, of-5)
det(jolly-7, the-6)
nmod:of(souls-4, jolly-7)
amod(mariners-10, jolly-9)
nmod:of(souls-4, mariners-10)
conj:and(jolly-7, mariners-10)
nmod:of(souls-4, Plucking-12)
conj:and(jolly-7, Plucking-12)
case(harps-15, at-13)
nmod:poss(harps-15, their-14)
nmod:at(Plucking-12, harps-15)
cc(jolly-7, and-17)
nmod:of(souls-4, they-18)
conj:and(jolly-7, they-18)
acl(they-18, plucked-19)
advmod(plucked-19, unhandily-20)
nmod:poss(thumbs-24, Our-23)
nsubj(rough-26, thumbs-24)
nsubj(tarred-28, thumbs-24)
cop(rough-26, are-25)
dep(Loud-1, rough-26)
cc(rough-26, and-27)
dep(Loud-1, tarred-28)
conj:and(rough-26, tarred-28)
cc(rough-26, And-30)
det(tune-32, the-31)
nsubj(something-34, tune-32)
cop(something-34, is-33)
dep(Loud-1, something-34)
conj:and(rough-26, something-34)
advmod(something-34, hard-35)
nmod:tmod(lift-39, May-37)
nsubj(lift-39, we-38)
parataxis(something-34, lift-39)
det(Chantey-42, a-40)
compound(Chantey-42, Deep-sea-41)
dobj(lift-39, Chantey-42)
case(use-46, such-43)
mwe(such-43, as-44)
compound(use-46, seamen-45)
nmod:such_as(Chantey-42, use-46)
case(sea-48, at-47)
nmod:at(use-46, sea-48)

(ROOT
  (SINV
    (VP
      (ADVP (RB Then))
      (VBD said)
      (NP
        (NP (DT the) (NNS souls))
        (PP (IN of)
          (NP (DT the) (JJ gentlemen-adventurers) (: --) (NN Fettered) (NN wrist))))
      (PP (TO to)
        (NP (NN bar))))
    (NP
      (NP (DT all))
      (PP (IN for)
        (NP (JJ red) (NN iniquity))))
    (: :) (`` ``)
    (S
      (S
        (NP (NNP Ho))
        (PRN (, ,)
          (S
            (NP (PRP we))
            (VP (VBP revel)
              (PP (IN in)
                (NP (PRP$ our) (NNS chains)))
              (S
                (VP
                  (VP (VB O'er)
                    (NP
                      (NP (DT the) (NN sorrow))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD was)
                            (NP
                              (NP (NNP Spain) (NNP 's))
                              (: ;)
                              (NP (NNP Heave))))))))
                  (CC or)
                  (VP (VB sink)
                    (NP (PRP it)))))))
          (, ,))
        (VP (VBP leave)
          (CC or)
          (VBP drink)
          (NP (PRP it))))
      (, ,)
      (S
        (NP (PRP we))
        (VP (VBD were)
          (NP
            (NP (NNS masters))
            (PP (IN of)
              (NP (DT the) (NN sea)))))))
    (. !) ('' '')))

advmod(said-2, Then-1)
root(ROOT-0, said-2)
det(souls-4, the-3)
dobj(said-2, souls-4)
case(wrist-10, of-5)
det(wrist-10, the-6)
amod(wrist-10, gentlemen-adventurers-7)
compound(wrist-10, Fettered-9)
nmod:of(souls-4, wrist-10)
case(bar-12, to-11)
nmod:to(said-2, bar-12)
nsubj(said-2, all-13)
case(iniquity-16, for-14)
amod(iniquity-16, red-15)
nmod:for(all-13, iniquity-16)
nsubj(leave-39, Ho-19)
nsubj(drink-41, Ho-19)
nsubj(revel-22, we-21)
parataxis(leave-39, revel-22)
case(chains-25, in-23)
nmod:poss(chains-25, our-24)
nmod:in(revel-22, chains-25)
ccomp(revel-22, O'er-26)
det(sorrow-28, the-27)
dobj(O'er-26, sorrow-28)
nsubj('s-32, sorrow-28)
ref(sorrow-28, that-29)
cop('s-32, was-30)
compound('s-32, Spain-31)
acl:relcl(sorrow-28, 's-32)
dep('s-32, Heave-34)
cc(O'er-26, or-35)
ccomp(revel-22, sink-36)
conj:or(O'er-26, sink-36)
dobj(sink-36, it-37)
ccomp(said-2, leave-39)
cc(leave-39, or-40)
ccomp(said-2, drink-41)
conj:or(leave-39, drink-41)
dobj(leave-39, it-42)
nsubj(masters-46, we-44)
cop(masters-46, were-45)
parataxis(leave-39, masters-46)
case(sea-49, of-47)
det(sea-49, the-48)
nmod:of(masters-46, sea-49)

(ROOT
  (FRAG
    (PP (IN Up)
      (NP
        (NP (JJ spake) (DT the) (NN soul))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ gray) (NN Gothavn))
            (`` `)
            (NP (NN speckshioner))
            (: --)))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (PRP He))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD led)
                  (NP (DT the) (NN flinching))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NNS fleets))
                      (PP (IN of)
                        (NP (JJ fair) (NNP Dundee)))))))))
          (-RRB- -RRB-))))
    (: :) (`` ``)
    (S
      (S
        (INTJ (UH Oh))
        (, ,)
        (NP (DT the))
        (VP (VBZ ice-blink)
          (ADJP (JJ white)
            (CC and)
            (JJ near))))
      (, ,)
      (CC And)
      (S
        (NP (DT the) (NN bowhead))
        (VP (VBG breaching)
          (ADJP (JJ clear)))))
    (. !)))

case(soul-4, Up-1)
amod(soul-4, spake-2)
det(soul-4, the-3)
nmod:up(ice-blink-30, soul-4)
case(Gothavn-8, of-5)
det(Gothavn-8, a-6)
amod(Gothavn-8, gray-7)
nmod:of(soul-4, Gothavn-8)
dep(Gothavn-8, speckshioner-10)
dep(soul-4, He-13)
nsubj(led-15, He-13)
ref(He-13, that-14)
acl:relcl(He-13, led-15)
det(flinching-17, the-16)
dobj(led-15, flinching-17)
case(fleets-20, in-18)
det(fleets-20, the-19)
nmod:in(led-15, fleets-20)
case(Dundee-23, of-21)
amod(Dundee-23, fair-22)
nmod:of(fleets-20, Dundee-23)
discourse(ice-blink-30, Oh-27)
nsubj(ice-blink-30, the-29)
root(ROOT-0, ice-blink-30)
xcomp(ice-blink-30, white-31)
cc(white-31, and-32)
xcomp(ice-blink-30, near-33)
conj:and(white-31, near-33)
cc(ice-blink-30, And-35)
det(bowhead-37, the-36)
nsubj(breaching-38, bowhead-37)
conj:and(ice-blink-30, breaching-38)
xcomp(breaching-38, clear-39)

(ROOT
  (SQ (MD Will)
    (NP (PRP Ye))
    (VP (VBP whelm)
      (NP (PRP them))
      (PP (DT all) (IN for)
        (NP
          (NP (NNS wantonness))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD wallow)
                (PP (IN in)
                  (NP (DT the) (NN sea)))))))))
    (. ?) ('' '')))

aux(whelm-3, Will-1)
nsubj(whelm-3, Ye-2)
root(ROOT-0, whelm-3)
dobj(whelm-3, them-4)
dep(wantonness-7, all-5)
case(wantonness-7, for-6)
nmod:for(whelm-3, wantonness-7)
nsubj(wallow-9, wantonness-7)
ref(wantonness-7, that-8)
acl:relcl(wantonness-7, wallow-9)
case(sea-12, in-10)
det(sea-12, the-11)
nmod:in(wallow-9, sea-12)

(ROOT
  (SINV
    (VP
      (ADVP (RB Loud))
      (VBD sang)
      (NP
        (NP (DT the) (NNS souls))
        (PP (IN of)
          (NP
            (NP (DT the) (NN jolly))
            (, ,)
            (NP (JJ jolly) (NNS mariners))
            (, ,)))))
    (NP (NNP Crying))
    (: :) (`` ``)
    (S
      (PP (IN Under)
        (NP (NNP Heaven)))
      (, ,)
      (ADVP (RB here))
      (VP (VBZ is)
        (NP (DT neither) (NN lead)
          (CC nor)
          (NN lee))))
    (. !)))

advmod(sang-2, Loud-1)
root(ROOT-0, sang-2)
det(souls-4, the-3)
dobj(sang-2, souls-4)
case(jolly-7, of-5)
det(jolly-7, the-6)
nmod:of(souls-4, jolly-7)
amod(mariners-10, jolly-9)
appos(jolly-7, mariners-10)
nsubj(sang-2, Crying-12)
case(Heaven-16, Under-15)
nmod:under(lead-21, Heaven-16)
advmod(lead-21, here-18)
cop(lead-21, is-19)
cc:preconj(lead-21, neither-20)
ccomp(sang-2, lead-21)
cc(lead-21, nor-22)
ccomp(sang-2, lee-23)
conj:nor(lead-21, lee-23)

(ROOT
  (SQ (MD Must)
    (NP (PRP we))
    (VP (VB sing)
      (PP (IN for)
        (NP (NN evermore)))
      (PP (IN On)
        (NP (DT the) (JJ windless) (, ,) (JJ glassy) (NN floor))))
    (. ?)))

aux(sing-3, Must-1)
nsubj(sing-3, we-2)
root(ROOT-0, sing-3)
case(evermore-5, for-4)
nmod:for(sing-3, evermore-5)
case(floor-11, On-6)
det(floor-11, the-7)
amod(floor-11, windless-8)
amod(floor-11, glassy-10)
nmod:on(sing-3, floor-11)

(ROOT
  (S
    (S
      (VP (VB Take)
        (PRT (RP back))
        (NP (PRP$ your) (JJ golden) (NNS fiddles))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB beat)
          (S
            (VP (TO to)
              (VP (VB open)
                (NP (NN sea))))))))
    (. !) ('' '')))

root(ROOT-0, Take-1)
compound:prt(Take-1, back-2)
nmod:poss(fiddles-5, your-3)
amod(fiddles-5, golden-4)
dobj(Take-1, fiddles-5)
cc(Take-1, and-6)
nsubj(beat-9, we-7)
nsubj:xsubj(open-11, we-7)
aux(beat-9, 'll-8)
conj:and(Take-1, beat-9)
mark(open-11, to-10)
xcomp(beat-9, open-11)
dobj(open-11, sea-12)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (VP (VBN stooped)
        (NP (DT the) (NN Lord))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP He))
        (VP (VBD called)
          (NP (DT the) (JJ good) (NN sea))
          (PRT (RP up))
          (PP (TO to)
            (NP (PRP Him)))))
      (, ,)
      (CC And)
      (`` `)
      (S
        (SBAR
          (SINV
            (VP (VBD stablished)
              (NP (PRP$ his) (NNS borders) (NN unto)))
            (NP
              (NP (DT all) (NN eternity))
              (, ,)
              (NP
                (NP (DT That))
                (PP (JJ such) (IN as)
                  (NP
                    (VP (VB have)
                      (S
                        (ADVP
                          (NP (DT no) (NN pleasure))
                          (IN For))
                        (VP (TO to)
                          (VP (VB praise)
                            (NP (DT the) (NN Lord))
                            (PP (IN by)
                              (NP (NN measure)))))))))))))
        (, ,)
        (NP (PRP They))
        (VP (MD may)
          (VP
            (VP (VB enter)
              (PP (IN into)
                (NP (NNS galleons))))
            (CC and)
            (VP (VB serve)
              (NP (PRP Him))
              (PP (IN on)
                (NP (DT the) (NN sea))))))))
    (. .)))

advmod(stooped-2, Then-1)
root(ROOT-0, stooped-2)
det(Lord-4, the-3)
dobj(stooped-2, Lord-4)
cc(stooped-2, and-6)
nsubj(called-8, He-7)
conj:and(stooped-2, called-8)
det(sea-11, the-9)
amod(sea-11, good-10)
dobj(called-8, sea-11)
compound:prt(called-8, up-12)
case(Him-14, to-13)
nmod:to(called-8, Him-14)
cc(called-8, And-16)
advcl(enter-41, stablished-18)
nmod:poss(unto-21, his-19)
compound(unto-21, borders-20)
dobj(stablished-18, unto-21)
det(eternity-23, all-22)
nsubj(stablished-18, eternity-23)
appos(eternity-23, That-25)
case(have-28, such-26)
mwe(such-26, as-27)
nmod:such_as(That-25, have-28)
neg(pleasure-30, no-29)
advmod(praise-33, pleasure-30)
case(pleasure-30, For-31)
mark(praise-33, to-32)
xcomp(have-28, praise-33)
det(Lord-35, the-34)
dobj(praise-33, Lord-35)
case(measure-37, by-36)
nmod:by(praise-33, measure-37)
nsubj(enter-41, They-39)
nsubj(serve-45, They-39)
aux(enter-41, may-40)
conj:and(stooped-2, enter-41)
conj:And(called-8, enter-41)
case(galleons-43, into-42)
nmod:into(enter-41, galleons-43)
cc(enter-41, and-44)
conj:And(called-8, serve-45)
conj:and(enter-41, serve-45)
dobj(serve-45, Him-46)
case(sea-49, on-47)
det(sea-49, the-48)
nmod:on(serve-45, sea-49)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Sun))
        (, ,)
        (NP (NN wind))
        (, ,)
        (CC and)
        (NP (NN cloud)))
      (VP (MD shall)
        (VP (VB fail)
          (PP (RB not) (IN from)
            (NP
              (NP
                (NP (DT the) (NN face))
                (PP (IN of)
                  (NP (PRP it))))
              (, ,)
              (NP
                (NP
                  (NP (NNP Stinging))
                  (, ,)
                  (NP (VBG ringing) (NN spindrift))
                  (, ,))
                (CC nor)
                (NP
                  (NP (DT the) (NN fulmar))
                  (VP (VBG flying)
                    (ADJP (JJ free))))))))))
    (: ;)
    (CC And)
    (S
      (NP (DT the) (NNS ships))
      (VP (MD shall)
        (VP (VB go)
          (ADVP (RB abroad))
          (PP (TO To)
            (NP
              (NP (DT the) (NN Glory))
              (PP (IN of)
                (NP (DT the) (NNP Lord)))
              (SBAR
                (WHNP (WP Who))
                (S
                  (VP
                    (VP (VBD heard)
                      (NP (DT the) (JJ silly) (NN sailor-folk)))
                    (CC and)
                    (VP (VBD gave)
                      (S
                        (NP (PRP them))
                        (VP (VB back)
                          (NP (PRP$ their) (NN sea)))))))))))))
    (. !)))

nsubj(fail-8, Sun-1)
conj:and(Sun-1, wind-3)
nsubj(fail-8, wind-3)
cc(Sun-1, and-5)
conj:and(Sun-1, cloud-6)
nsubj(fail-8, cloud-6)
aux(fail-8, shall-7)
root(ROOT-0, fail-8)
neg(face-12, not-9)
case(face-12, from-10)
det(face-12, the-11)
nmod:from(fail-8, face-12)
case(it-14, of-13)
nmod:of(face-12, it-14)
appos(face-12, Stinging-16)
amod(spindrift-19, ringing-18)
appos(Stinging-16, spindrift-19)
cc(Stinging-16, nor-21)
det(fulmar-23, the-22)
appos(face-12, fulmar-23)
conj:nor(Stinging-16, fulmar-23)
acl(fulmar-23, flying-24)
xcomp(flying-24, free-25)
cc(fail-8, And-27)
det(ships-29, the-28)
nsubj(go-31, ships-29)
aux(go-31, shall-30)
conj:and(fail-8, go-31)
advmod(go-31, abroad-32)
case(Glory-35, To-33)
det(Glory-35, the-34)
nmod:to(go-31, Glory-35)
nsubj(heard-40, Glory-35)
nsubj(gave-45, Glory-35)
case(Lord-38, of-36)
det(Lord-38, the-37)
nmod:of(Glory-35, Lord-38)
ref(Glory-35, Who-39)
acl:relcl(Glory-35, heard-40)
det(sailor-folk-43, the-41)
amod(sailor-folk-43, silly-42)
dobj(heard-40, sailor-folk-43)
cc(heard-40, and-44)
acl:relcl(Glory-35, gave-45)
conj:and(heard-40, gave-45)
nsubj(back-47, them-46)
ccomp(gave-45, back-47)
nmod:poss(sea-49, their-48)
dobj(back-47, sea-49)

(ROOT
  (S
    (S
      (NP (DT THE) (NNP MERCHANTMEN) (NNP King) (NNP Solomon))
      (VP (VBD drew)
        (NP (NN merchantmen))
        (, ,)
        (SBAR (IN Because)
          (S
            (PP
              (PP (IN of)
                (NP (PRP$ his) (NN desire)))
              (IN For)
              (NP (NNS peacocks) (, ,) (NNS apes) (, ,)
                (CC and)
                (NN ivory)))
            (, ,)
            (PP (IN From)
              (NP (NNP Tarshish) (NNP unto) (NNP Tyre)))
            (: :)
            (SBAR (IN With)
              (S
                (VP (VBZ cedars)
                  (PRT (RP out))
                  (PP (IN of)
                    (NP (NNP Lebanon) (NNP Which) (NNP Hiram))))))
            (VP (VBD rafted)
              (PRT (RP down)))))))
    (, ,)
    (CC But)
    (S
      (NP (PRP we))
      (VP (VB be)
        (VP
          (ADVP (RB only))
          (VBN sailormen)
          (NP
            (NP (DT That) (NN use))
            (PP (IN in)
              (NP (NNP London) (NNP Town)))))))
    (. .)))

det(Solomon-4, THE-1)
compound(Solomon-4, MERCHANTMEN-2)
compound(Solomon-4, King-3)
nsubj(drew-5, Solomon-4)
root(ROOT-0, drew-5)
dobj(drew-5, merchantmen-6)
mark(rafted-32, Because-8)
case(desire-11, of-9)
nmod:poss(desire-11, his-10)
nmod:of(peacocks-13, desire-11)
case(peacocks-13, For-12)
nmod:for(rafted-32, peacocks-13)
conj:and(peacocks-13, apes-15)
nmod:for(rafted-32, apes-15)
cc(peacocks-13, and-17)
conj:and(peacocks-13, ivory-18)
nmod:for(rafted-32, ivory-18)
case(Tyre-23, From-20)
compound(Tyre-23, Tarshish-21)
compound(Tyre-23, unto-22)
nmod:from(rafted-32, Tyre-23)
mark(cedars-26, With-25)
csubj(rafted-32, cedars-26)
compound:prt(cedars-26, out-27)
case(Hiram-31, of-28)
compound(Hiram-31, Lebanon-29)
compound(Hiram-31, Which-30)
nmod:of(cedars-26, Hiram-31)
advcl(drew-5, rafted-32)
compound:prt(rafted-32, down-33)
cc(drew-5, But-35)
nsubjpass(sailormen-39, we-36)
auxpass(sailormen-39, be-37)
advmod(sailormen-39, only-38)
conj:but(drew-5, sailormen-39)
det(use-41, That-40)
dobj(sailormen-39, use-41)
case(Town-44, in-42)
compound(Town-44, London-43)
nmod:in(use-41, Town-44)

(ROOT
  (S
    (S
      (NP
        (NP (NNP _) (NNP Coastwise))
        (PRN (: --)
          (NP
            (NP
              (NP (NNS cross-seas))
              (PRN (: --)
                (ADVP
                  (ADVP (RB round)
                    (NP (DT the) (NN world)))
                  (CC and)
                  (ADVP (RB back) (RB again)))
                (: --))
              (SBAR
                (WHADVP (WRB Where))
                (S
                  (NP (DT the) (NN flaw))
                  (VP (MD shall)
                    (VP (VB head)
                      (NP (PRP us)))))))
            (CC or)
            (NP
              (NP (DT the) (JJ full) (NNP Trade) (NNS suits))
              (PRN (: --)
                (NP (NNP Plain-sail))
                (: --))
              (NP (NN storm-sail))))
          (: --)))
      (VP (VBD lay)
        (NP (PRP$ your) (NN board)
          (CC and)
          (NN tack))
        (ADVP (RB again))))
    (: --)
    (CC And)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN way))
          (SBAR
            (S
              (NP (PRP we))
              (VP (MD 'll)
                (VP (VB pay)
                  (NP
                    (NP (NNP Paddy) (NNP Doyle))
                    (PP (IN for)
                      (NP (PRP$ his) (NNS boots)))))))))))
    (. !)))

compound(Coastwise-2, _-1)
nsubj(lay-29, Coastwise-2)
dep(Coastwise-2, cross-seas-4)
advmod(and-9, round-6)
det(world-8, the-7)
nmod:npmod(round-6, world-8)
dep(cross-seas-4, and-9)
advmod(again-11, back-10)
advmod(and-9, again-11)
advmod(head-17, Where-13)
det(flaw-15, the-14)
nsubj(head-17, flaw-15)
aux(head-17, shall-16)
acl:relcl(cross-seas-4, head-17)
dobj(head-17, us-18)
cc(cross-seas-4, or-19)
det(suits-23, the-20)
amod(suits-23, full-21)
compound(suits-23, Trade-22)
dep(Coastwise-2, suits-23)
conj:or(cross-seas-4, suits-23)
dep(suits-23, Plain-sail-25)
dep(suits-23, storm-sail-27)
root(ROOT-0, lay-29)
nmod:poss(board-31, your-30)
dobj(lay-29, board-31)
cc(board-31, and-32)
dobj(lay-29, tack-33)
conj:and(board-31, tack-33)
advmod(lay-29, again-34)
cc(lay-29, And-36)
nsubj(way-40, that-37)
cop(way-40, 's-38)
det(way-40, the-39)
conj:and(lay-29, way-40)
nsubj(pay-43, we-41)
aux(pay-43, 'll-42)
acl:relcl(way-40, pay-43)
compound(Doyle-45, Paddy-44)
dobj(pay-43, Doyle-45)
case(boots-48, for-46)
nmod:poss(boots-48, his-47)
nmod:for(Doyle-45, boots-48)

(ROOT
  (S
    (S
      (ADVP (RB _))
      (NP (PRP We))
      (VP (VBP bring)
        (NP
          (NP (DT no) (NN store))
          (PP (IN of)
            (NP
              (NP (NNS ingots))
              (, ,)
              (UCP
                (PP (IN Of)
                  (NP (NN spice)
                    (CC or)
                    (JJ precious) (NNS stones)))
                (, ,)
                (CC But)
                (SBAR (IN that)
                  (S
                    (NP (PRP we))
                    (VP (VBP have)
                      (S
                        (NP (PRP we))
                        (VP (VBN gathered)
                          (PP (IN With)
                            (NP (NN sweat)
                              (CC and)
                              (NN aching) (NNS bones))))))))))))))
    (: :)
    (S
      (PP (IN In)
        (NP
          (NP
            (NP (NN flame))
            (PP (IN beneath)
              (NP (DT the) (NNS tropics))))
          (, ,)
          (UCP
            (PP (IN In)
              (NP
                (NP (NN frost))
                (PP (IN upon)
                  (NP (DT the) (NN floe)))))
            (, ,)
            (CC And)
            (NP
              (NP (NN jeopardy))
              (PP (IN of)
                (NP (DT every) (NN wind)))))))
      (NP (DT That))
      (VP (VBZ does)
        (PP (IN between)
          (S
            (NP (PRP them))
            (VP (VB go))))))
    (. .)))

advmod(bring-3, _-1)
nsubj(bring-3, We-2)
root(ROOT-0, bring-3)
neg(store-5, no-4)
dobj(bring-3, store-5)
case(ingots-7, of-6)
nmod:of(store-5, ingots-7)
case(stones-13, Of-9)
compound(stones-13, spice-10)
cc(spice-10, or-11)
conj:or(spice-10, precious-12)
compound(stones-13, precious-12)
nmod:of(ingots-7, stones-13)
cc(stones-13, But-15)
mark(have-18, that-16)
nsubj(have-18, we-17)
nmod:of(ingots-7, have-18)
conj:but(stones-13, have-18)
nsubj(gathered-20, we-19)
ccomp(have-18, gathered-20)
case(bones-25, With-21)
compound(bones-25, sweat-22)
cc(sweat-22, and-23)
conj:and(sweat-22, aching-24)
compound(bones-25, aching-24)
nmod:with(gathered-20, bones-25)
case(flame-28, In-27)
nmod:in(does-45, flame-28)
case(tropics-31, beneath-29)
det(tropics-31, the-30)
nmod:beneath(flame-28, tropics-31)
case(frost-34, In-33)
nmod:in(flame-28, frost-34)
case(floe-37, upon-35)
det(floe-37, the-36)
nmod:upon(frost-34, floe-37)
cc(frost-34, And-39)
nmod:in(flame-28, jeopardy-40)
conj:and(frost-34, jeopardy-40)
case(wind-43, of-41)
det(wind-43, every-42)
nmod:of(jeopardy-40, wind-43)
nsubj(does-45, That-44)
parataxis(bring-3, does-45)
mark(go-48, between-46)
nsubj(go-48, them-47)
advcl(does-45, go-48)

(ROOT
  (S (CC And)
    (S
      (NP (DT some) (PRP we))
      (VP (VBD got)
        (PP (IN by)
          (NP (NN purchase)))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (DT some) (PRP we))
        (VP (VBD had)
          (PP (IN by)
            (NP (NN trade)))))
      (, ,)
      (CC And)
      (S
        (S
          (SBAR
            (SBAR
              (WHNP (DT some))
              (S
                (NP (PRP we))
                (VP (VBD found)
                  (PP (IN by)
                    (NP (NN courtesy)))
                  (PP (IN Of)
                    (NP (NN pike)
                      (CC and)
                      (NN carronade))))))
            (: --)
            (PRN
              (PP (IN At)
                (NP
                  (NP (NN midnight))
                  (, ,) (`` `)
                  (NP (JJ mid-sea) (NNS meetings))))))
          (, ,)
          (PP (IN For)
            (NP (NN charity)))
          (VP (TO to)
            (VP (VB keep))))
        (, ,)
        (CC And)
        (S
          (NP (JJ light) (DT the) (NN rolling))
          (VP (VBD homeward-bound)
            (SBAR
              (S
                (NP (DT That))
                (VP (VBD rode)
                  (S
                    (NP (DT a) (NN foot))
                    (ADJP (RB too) (JJ deep))))))))))
    (. .)))

cc(got-4, And-1)
det(we-3, some-2)
nsubj(got-4, we-3)
root(ROOT-0, got-4)
case(purchase-6, by-5)
nmod:by(got-4, purchase-6)
cc(got-4, And-8)
det(we-10, some-9)
nsubj(had-11, we-10)
nsubj(keep-36, we-10)
conj:and(got-4, had-11)
case(trade-13, by-12)
nmod:by(had-11, trade-13)
cc(had-11, And-15)
dobj(found-18, some-16)
nsubj(found-18, we-17)
dep(keep-36, found-18)
case(courtesy-20, by-19)
nmod:by(found-18, courtesy-20)
case(pike-22, Of-21)
nmod:of(found-18, pike-22)
cc(pike-22, and-23)
nmod:of(found-18, carronade-24)
conj:and(pike-22, carronade-24)
case(midnight-27, At-26)
dep(found-18, midnight-27)
amod(meetings-31, mid-sea-30)
dep(midnight-27, meetings-31)
case(charity-34, For-33)
nmod:for(keep-36, charity-34)
mark(keep-36, to-35)
conj:and(got-4, keep-36)
conj:and(had-11, keep-36)
cc(keep-36, And-38)
amod(rolling-41, light-39)
det(rolling-41, the-40)
nsubj(homeward-bound-42, rolling-41)
conj:and(had-11, homeward-bound-42)
conj:and(keep-36, homeward-bound-42)
nsubj(rode-44, That-43)
ccomp(homeward-bound-42, rode-44)
det(foot-46, a-45)
nsubj(deep-48, foot-46)
advmod(deep-48, too-47)
xcomp(rode-44, deep-48)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (NN sport))
        (PP (IN of)
          (NP (JJ bitter) (NN weather)))))
    (NP (PRP We))
    (VP (VBP 're)
      (UCP
        (ADJP (JJ walty))
        (, ,)
        (ADJP (VBN strained))
        (, ,)
        (CC and)
        (VP (VBD scarred)
          (PP (IN From)
            (NP
              (NP (DT the) (NN kentledge))
              (PP (IN on)
                (NP (DT the) (NN kelson)))))
          (PP (TO To)
            (NP (DT the) (NNS slings)))
          (PP (IN upon)
            (NP (DT the) (NN yard))))))
    (. .)))

case(sport-2, By-1)
nmod:by(walty-8, sport-2)
case(weather-5, of-3)
amod(weather-5, bitter-4)
nmod:of(sport-2, weather-5)
nsubjpass(walty-8, We-6)
nsubjpass(strained-10, We-6)
nsubjpass(scarred-13, We-6)
auxpass(walty-8, 're-7)
root(ROOT-0, walty-8)
conj:and(walty-8, strained-10)
cc(walty-8, and-12)
conj:and(walty-8, scarred-13)
case(kentledge-16, From-14)
det(kentledge-16, the-15)
nmod:from(scarred-13, kentledge-16)
case(kelson-19, on-17)
det(kelson-19, the-18)
nmod:on(kentledge-16, kelson-19)
case(slings-22, To-20)
det(slings-22, the-21)
nmod:to(scarred-13, slings-22)
case(yard-25, upon-23)
det(yard-25, the-24)
nmod:upon(scarred-13, yard-25)

(ROOT
  (S
    (S
      (NP (CD Six) (NNS oceans))
      (VP (VBD had)
        (NP
          (NP (PRP$ their) (NN will))
          (PP (IN of)
            (NP (PRP us)))
          (S
            (VP (TO To)
              (VP (VB carry)
                (ADVP (DT all) (RB away))))))))
    (: --)
    (S
      (S
        (NP (PRP$ Our) (NN galley))
        (VP (VBZ 's)
          (PP (IN in)
            (NP (DT the) (NNP Baltic)))))
      (, ,)
      (CC And)
      (S
        (NP (PRP$ our) (NN boom))
        (VP (VBZ 's)
          (PP (IN in)
            (NP (NNP Mossel) (NNP Bay))))))
    (. !)))

nummod(oceans-2, Six-1)
nsubj(had-3, oceans-2)
root(ROOT-0, had-3)
nmod:poss(will-5, their-4)
dobj(had-3, will-5)
case(us-7, of-6)
nmod:of(will-5, us-7)
mark(carry-9, To-8)
acl(will-5, carry-9)
dep(away-11, all-10)
advmod(carry-9, away-11)
nmod:poss(galley-14, Our-13)
nsubj(Baltic-18, galley-14)
cop(Baltic-18, 's-15)
case(Baltic-18, in-16)
det(Baltic-18, the-17)
parataxis(had-3, Baltic-18)
cc(Baltic-18, And-20)
nmod:poss(boom-22, our-21)
nsubj(Bay-26, boom-22)
cop(Bay-26, 's-23)
case(Bay-26, in-24)
compound(Bay-26, Mossel-25)
parataxis(had-3, Bay-26)
conj:and(Baltic-18, Bay-26)

(ROOT
  (S
    (S
      (S
        (NP (PRP We))
        (VP (VBP 've)
          (VP (VBN floundered)
            (PRT (RP off))
            (NP
              (NP (DT the) (NNP Texel) (, ,) (NNP Awash))
              (PP (IN with)
                (NP (NN sodden) (NNS deals)))))))
      (, ,)
      (S
        (NP (PRP We))
        (VP (VBP 've)
          (VP (VBN slipped)
            (PP (IN from)
              (NP (NNP Valparaiso)))
            (PP (IN With)
              (NP (DT the) (NNP Norther)))
            (PP (IN at)
              (NP (PRP$ our) (NNS heels))))))
      (: :)
      (S
        (NP (PRP We))
        (VP (VBP 've)
          (VP (VBN ratched)
            (PP (IN beyond)
              (NP (DT the) (NNPS Crossets)))))))
    (PRN
      (S
        (NP (DT That))
        (VP (VBP tusk)
          (NP (DT the) (NNP Southern) (NNP Pole))))
      (, ,))
    (CC And)
    (S
      (VP (VBD dipped)
        (NP (PRP$ our) (NNS gunnels))
        (PP (IN under)
          (PP (TO To)
            (NP (DT the) (NNP dread) (NNPS Agulhas) (NN roll))))))
    (. .)))

nsubj(floundered-3, We-1)
nsubj(dipped-38, We-1)
aux(floundered-3, 've-2)
root(ROOT-0, floundered-3)
compound:prt(floundered-3, off-4)
det(Awash-8, the-5)
compound(Awash-8, Texel-6)
dobj(floundered-3, Awash-8)
case(deals-11, with-9)
compound(deals-11, sodden-10)
nmod:with(Awash-8, deals-11)
nsubj(slipped-15, We-13)
aux(slipped-15, 've-14)
parataxis(floundered-3, slipped-15)
case(Valparaiso-17, from-16)
nmod:from(slipped-15, Valparaiso-17)
case(Norther-20, With-18)
det(Norther-20, the-19)
nmod:with(slipped-15, Norther-20)
case(heels-23, at-21)
nmod:poss(heels-23, our-22)
nmod:at(slipped-15, heels-23)
nsubj(ratched-27, We-25)
aux(ratched-27, 've-26)
parataxis(floundered-3, ratched-27)
case(Crossets-30, beyond-28)
det(Crossets-30, the-29)
nmod:beyond(ratched-27, Crossets-30)
nsubj(tusk-32, That-31)
dep(floundered-3, tusk-32)
det(Pole-35, the-33)
compound(Pole-35, Southern-34)
dobj(tusk-32, Pole-35)
cc(floundered-3, And-37)
conj:and(floundered-3, dipped-38)
nmod:poss(gunnels-40, our-39)
dobj(dipped-38, gunnels-40)
case(roll-46, under-41)
case(roll-46, To-42)
det(roll-46, the-43)
compound(roll-46, dread-44)
compound(roll-46, Agulhas-45)
nmod:to(dipped-38, roll-46)

(ROOT
  (S
    (S
      (PP (IN Beyond)
        (NP (DT all) (JJ outer) (NN charting)))
      (NP (PRP We))
      (VP (VBD sailed)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NN none))
            (VP (VBP have)
              (VP (VBD sailed)))))))
    (, ,)
    (CC And)
    (SINV
      (VP (VBD saw)
        (NP (DT the) (JJ land-lights) (NN burning))
        (SBAR
          (S
            (S
              (S
                (PP (IN On)
                  (NP (NNS islands)))
                (NP (NN none))
                (VP (VBP have)
                  (VP (VBN hailed))))
              (: ;)
              (S
                (NP (PRP$ Our) (NN hair))
                (VP (VBD stood)
                  (PRT (RP up))
                  (PP (IN for)
                    (NP (NN wonder))))))
            (, ,)
            (CC But)
            (, ,)
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (DT the) (NN night))
                  (VP (VBD was)
                    (VP (VBN done)))))
              (, ,)
              (NP (EX There))
              (VP (VB danced)
                (NP (DT the)
                  (ADJP (JJ deep) (TO to) (JJ windward))
                  (NN Blue-empty))
                (`` `) (VB neath))))))
      (NP (DT the) (NN sun)))
    (. !)))

case(charting-4, Beyond-1)
det(charting-4, all-2)
amod(charting-4, outer-3)
nmod:beyond(sailed-6, charting-4)
nsubj(sailed-6, We-5)
root(ROOT-0, sailed-6)
advmod(sailed-10, where-7)
nsubj(sailed-10, none-8)
aux(sailed-10, have-9)
advcl(sailed-6, sailed-10)
cc(sailed-6, And-12)
conj:and(sailed-6, saw-13)
det(burning-16, the-14)
amod(burning-16, land-lights-15)
dobj(saw-13, burning-16)
case(islands-18, On-17)
nmod:on(hailed-21, islands-18)
nsubj(hailed-21, none-19)
nsubj(danced-39, none-19)
aux(hailed-21, have-20)
dep(saw-13, hailed-21)
nmod:poss(hair-24, Our-23)
nsubj(stood-25, hair-24)
parataxis(hailed-21, stood-25)
compound:prt(stood-25, up-26)
case(wonder-28, for-27)
nmod:for(stood-25, wonder-28)
cc(hailed-21, But-30)
advmod(done-36, when-32)
det(night-34, the-33)
nsubjpass(done-36, night-34)
auxpass(done-36, was-35)
advcl(danced-39, done-36)
expl(danced-39, There-38)
dep(saw-13, danced-39)
conj:But(hailed-21, danced-39)
det(Blue-empty-44, the-40)
amod(windward-43, deep-41)
dep(windward-43, to-42)
amod(Blue-empty-44, windward-43)
dobj(danced-39, Blue-empty-44)
dep(danced-39, neath-46)
det(sun-48, the-47)
nsubj(saw-13, sun-48)

(ROOT
  (S
    (S
      (NP (JJ Strange) (NNS consorts))
      (VP (VBD rode)
        (PP (IN beside)
          (NP (PRP us)))))
    (CC And)
    (S
      (VP (VBN brought)
        (S
          (NP (PRP us))
          (NP (JJ evil) (NN luck)))))
    (: ;)
    (S
      (NP (DT The) (NN witch-fire))
      (VP (VBD climbed)
        (NP (PRP$ our) (NNS channels))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBN flared)
          (PP
            (PP (IN on)
              (NP (NN vane)
                (CC and)
                (NN truck)))
            (: :)
            (PP (IN Till))
            (, ,)
            (PP (IN through)
              (NP
                (NP (DT the) (JJ red) (NN tornado))
                (, ,)
                (SBAR
                  (WHNP (WDT That))
                  (S
                    (VP (VBD lashed)
                      (SBAR
                        (S
                          (NP (PRP us))
                          (VP (VBP nigh)
                            (PP (TO to)
                              (ADJP (JJ blind))))))))))))))
      (, ,)
      (NP (PRP We))
      (VP (VBD saw)
        (SBAR
          (S
            (NP
              (NP (DT The) (JJ Dutchman) (NN plunging))
              (, ,)
              (NP (JJ Full) (NN canvas))
              (, ,))
            (VP (VBP head)
              (S
                (VP (TO to)
                  (VP (VB wind)))))))))
    (. !)))

amod(consorts-2, Strange-1)
nsubj(rode-3, consorts-2)
nsubj(brought-7, consorts-2)
root(ROOT-0, rode-3)
case(us-5, beside-4)
nmod:beside(rode-3, us-5)
cc(rode-3, And-6)
conj:and(rode-3, brought-7)
nsubj(luck-10, us-8)
amod(luck-10, evil-9)
xcomp(brought-7, luck-10)
det(witch-fire-13, The-12)
nsubj(climbed-14, witch-fire-13)
dep(rode-3, climbed-14)
nmod:poss(channels-16, our-15)
dobj(climbed-14, channels-16)
cc(rode-3, And-18)
advcl(saw-40, flared-19)
case(vane-21, on-20)
advcl(flared-19, vane-21)
cc(vane-21, and-22)
advcl(flared-19, truck-23)
conj:and(vane-21, truck-23)
nmod(vane-21, Till-25)
case(tornado-30, through-27)
det(tornado-30, the-28)
amod(tornado-30, red-29)
nmod:through(vane-21, tornado-30)
nsubj(lashed-33, tornado-30)
ref(tornado-30, That-32)
acl:relcl(tornado-30, lashed-33)
nsubj(nigh-35, us-34)
ccomp(lashed-33, nigh-35)
case(blind-37, to-36)
advcl(nigh-35, blind-37)
nsubj(saw-40, We-39)
conj:and(rode-3, saw-40)
det(plunging-43, The-41)
amod(plunging-43, Dutchman-42)
nsubj(head-48, plunging-43)
nsubj:xsubj(wind-50, plunging-43)
amod(canvas-46, Full-45)
appos(plunging-43, canvas-46)
ccomp(saw-40, head-48)
mark(wind-50, to-49)
xcomp(head-48, wind-50)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN heard)
          (NP
            (NP (DT the) (NNP Midnight) (NNP Leadsman))
            (SBAR
              (S
                (NP (DT That))
                (VP (VBZ calls)
                  (NP (DT the) (JJ black))
                  (ADVP (RB deep) (RB down)))))))))
    (: --)
    (S
      (NP (NNP Ay))
      (, ,)
      (ADVP (RB thrice))
      (NP (PRP we))
      (VP (VBP 've)
        (VP (VBN heard)
          (NP
            (NP (DT The) (NN Swimmer))
            (, ,)
            (NP
              (NP (DT The) (NN Thing))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD may) (RB not)
                    (VP (VB drown))))))))))
    (. .)))

nsubj(heard-3, We-1)
aux(heard-3, 've-2)
root(ROOT-0, heard-3)
det(Leadsman-6, the-4)
compound(Leadsman-6, Midnight-5)
dobj(heard-3, Leadsman-6)
nsubj(calls-8, Leadsman-6)
ref(Leadsman-6, That-7)
acl:relcl(Leadsman-6, calls-8)
det(black-10, the-9)
dobj(calls-8, black-10)
advmod(down-12, deep-11)
advmod(calls-8, down-12)
nsubj(heard-19, Ay-14)
advmod(we-17, thrice-16)
nsubj(heard-19, we-17)
aux(heard-19, 've-18)
parataxis(heard-3, heard-19)
det(Swimmer-21, The-20)
dobj(heard-19, Swimmer-21)
det(Thing-24, The-23)
appos(Swimmer-21, Thing-24)
nsubj(drown-28, Thing-24)
ref(Thing-24, that-25)
aux(drown-28, may-26)
neg(drown-28, not-27)
acl:relcl(Thing-24, drown-28)

(ROOT
  (S
    (PP (IN On)
      (NP (JJ frozen) (NN bunt)
        (CC and)
        (NN gasket)))
    (NP (DT The) (NN sleet-cloud))
    (VP (VBP drave)
      (NP
        (NP (PRP$ her) (NNS hosts))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (PRN (, ,)
            (S
              (VP (VBD manned)
                (PP (IN by)
                  (NP
                    (QP (JJR more) (IN than) (CD signed))))
                (PP (IN with)
                  (NP (PRP us)))))
            (, ,))
          (S
            (NP (PRP We))
            (VP (VBD passed)
              (NP
                (NP (DT the) (NNP Isle) (NN o) (POS '))
                (NNS Ghosts)))))))
    (. !)))

case(bunt-3, On-1)
amod(bunt-3, frozen-2)
nmod:on(drave-8, bunt-3)
cc(bunt-3, and-4)
conj:and(bunt-3, gasket-5)
nmod:on(drave-8, gasket-5)
det(sleet-cloud-7, The-6)
nsubj(drave-8, sleet-cloud-7)
root(ROOT-0, drave-8)
nmod:poss(hosts-10, her-9)
dobj(drave-8, hosts-10)
advmod(passed-23, When-12)
dep(passed-23, manned-14)
case(signed-18, by-15)
advmod(signed-18, more-16)
mwe(more-16, than-17)
nmod:by(manned-14, signed-18)
case(us-20, with-19)
nmod:with(manned-14, us-20)
nsubj(passed-23, We-22)
acl:relcl(hosts-10, passed-23)
det(o-26, the-24)
compound(o-26, Isle-25)
nmod:poss(Ghosts-28, o-26)
case(o-26, '-27)
dobj(passed-23, Ghosts-28)

(ROOT
  (S (CC And)
    (NP (NN north))
    (, ,)
    (PP (IN amid)
      (NP (DT the) (NNS hummocks)))
    (, ,)
    (NP (DT A) (NNS biscuit-toss))
    (ADVP (RB below))
    (PRN (, ,)
      (S
        (NP (PRP We))
        (VP (VBD met)
          (NP
            (NP (DT the) (JJ silent) (NN shallop))
            (SBAR
              (S
                (NP (DT That))
                (VP (VBD frighted)
                  (SBAR
                    (S
                      (NP (NNS whalers))
                      (VP (VBP know)))))
                (: ;)
                (SBAR (IN For) (, ,)
                  (PP (IN down)
                    (NP (DT a) (JJ cruel) (NN ice-lane)))
                  (, ,)
                  (S
                    (NP (DT That))
                    (VP (VBD opened)
                      (SBAR (IN as)
                        (S
                          (NP (PRP he))
                          (VP (VBD sped))))))))))))
      (, ,))
    (NP (PRP We))
    (VP (VBD saw)
      (PRT (RP dead))
      (NP
        (NP (NNP Henry) (NNP Hudson) (NNP Steer))
        (, ,)
        (ADJP (JJ North)
          (PP (IN by)
            (NP (NNP West))))
        (, ,)
        (NP (PRP$ his) (NN dead))))
    (. .)))

cc(saw-36, And-1)
nsubj(saw-36, north-2)
case(hummocks-6, amid-4)
det(hummocks-6, the-5)
nmod:amid(saw-36, hummocks-6)
det(biscuit-toss-9, A-8)
nsubj(saw-36, biscuit-toss-9)
advmod(saw-36, below-10)
nsubj(met-13, We-12)
parataxis(saw-36, met-13)
det(shallop-16, the-14)
amod(shallop-16, silent-15)
dobj(met-13, shallop-16)
nsubj(frighted-18, shallop-16)
ref(shallop-16, That-17)
acl:relcl(shallop-16, frighted-18)
nsubj(know-20, whalers-19)
ccomp(frighted-18, know-20)
mark(opened-30, For-22)
case(ice-lane-27, down-24)
det(ice-lane-27, a-25)
amod(ice-lane-27, cruel-26)
nmod:down(opened-30, ice-lane-27)
nsubj(opened-30, That-29)
parataxis(frighted-18, opened-30)
mark(sped-33, as-31)
nsubj(sped-33, he-32)
advcl(opened-30, sped-33)
nsubj(saw-36, We-35)
root(ROOT-0, saw-36)
compound:prt(saw-36, dead-37)
compound(Steer-40, Henry-38)
compound(Steer-40, Hudson-39)
dobj(saw-36, Steer-40)
amod(Steer-40, North-42)
case(West-44, by-43)
nmod:by(North-42, West-44)
nmod:poss(dead-47, his-46)
appos(Steer-40, dead-47)

(ROOT
  (S
    (S (RB So)
      (VP (VBG dealt)
        (NP
          (NP (NNP God) (POS 's))
          (NNS waters))
        (PP (IN with)
          (S
            (NP (PRP us))
            (PP (IN Beneath)
              (NP (DT the) (VBG roaring) (NNS skies)))))))
    (, ,)
    (ADVP (RB So))
    (VP (VBD walked)
      (NP (PRP$ His) (NNS signs)
        (CC and)
        (NNS marvels))
      (ADVP (DT All) (JJ naked)
        (PP (TO to)
          (NP (PRP$ our) (NNS eyes)))))
    (: :)
    (CC But)
    (S
      (S
        (NP (PRP we))
        (VP (VBD were)
          (VP (VBG heading)
            (VP (VBN homeward)
              (PP (IN With)
                (NP (NN trade)))
              (S
                (VP (TO to)
                  (VP (VB lose)
                    (CC or)
                    (VB make))))))))
      (: --)
      (S
        (INTJ (JJ Good) (NN Lord))
        (, ,)
        (NP (PRP they))
        (VP (VBD slipped)
          (PP (IN behind)
            (NP (PRP us)))
          (PP (IN In)
            (NP
              (NP (DT the) (NN tailing))
              (PP (IN of)
                (NP (PRP$ our) (NN wake))))))))
    (. !)))

advmod(dealt-2, So-1)
dep(walked-14, dealt-2)
nmod:poss(waters-5, God-3)
case(God-3, 's-4)
dobj(dealt-2, waters-5)
mark(us-7, with-6)
advcl(dealt-2, us-7)
case(skies-11, Beneath-8)
det(skies-11, the-9)
amod(skies-11, roaring-10)
dep(us-7, skies-11)
advmod(walked-14, So-13)
root(ROOT-0, walked-14)
nmod:poss(signs-16, His-15)
dobj(walked-14, signs-16)
cc(signs-16, and-17)
dobj(walked-14, marvels-18)
conj:and(signs-16, marvels-18)
det(naked-20, All-19)
advmod(walked-14, naked-20)
case(eyes-23, to-21)
nmod:poss(eyes-23, our-22)
nmod:to(naked-20, eyes-23)
cc(walked-14, But-25)
nsubj(heading-28, we-26)
aux(heading-28, were-27)
conj:but(walked-14, heading-28)
dep(heading-28, homeward-29)
case(trade-31, With-30)
nmod:with(homeward-29, trade-31)
mark(lose-33, to-32)
xcomp(homeward-29, lose-33)
cc(lose-33, or-34)
xcomp(homeward-29, make-35)
conj:or(lose-33, make-35)
amod(Lord-38, Good-37)
discourse(slipped-41, Lord-38)
nsubj(slipped-41, they-40)
parataxis(heading-28, slipped-41)
case(us-43, behind-42)
nmod:behind(slipped-41, us-43)
case(tailing-46, In-44)
det(tailing-46, the-45)
nmod:in(slipped-41, tailing-46)
case(wake-49, of-47)
nmod:poss(wake-49, our-48)
nmod:of(tailing-46, wake-49)

(ROOT
  (S
    (VP (VB Let)
      (VP
        (VP (VB go))
        (, ,)
        (ADVP (VB let))
        (VP (VB go)
          (NP
            (NP (DT the) (NNS anchors))
            (: ;)
            (S
              (S
                (VP
                  (ADVP (RB Now))
                  (VBN shamed)
                  (PP (IN at)
                    (NP (NN heart)))))
              (VP (VBP are)
                (S
                  (NP (PRP we))
                  (VP (TO To)
                    (VP (VB bring)
                      (NP
                        (NP
                          (ADJP (RB so) (JJ poor))
                          (DT a) (NN cargo) (NN home))
                        (SBAR
                          (S
                            (NP (DT That))
                            (VP (VBD had)
                              (PP (IN for)
                                (NP (NN gift))))))))))))))
        (NP (DT the) (NN sea))))
    (. !)))

root(ROOT-0, Let-1)
dep(Let-1, go-2)
advmod(go-2, let-4)
dep(go-2, go-5)
det(anchors-7, the-6)
dobj(go-5, anchors-7)
advmod(shamed-10, Now-9)
csubj(are-13, shamed-10)
case(heart-12, at-11)
nmod:at(shamed-10, heart-12)
dep(anchors-7, are-13)
dobj(are-13, we-14)
nsubj:xsubj(bring-16, we-14)
mark(bring-16, To-15)
xcomp(are-13, bring-16)
advmod(poor-18, so-17)
amod(home-21, poor-18)
det(home-21, a-19)
compound(home-21, cargo-20)
dobj(bring-16, home-21)
nsubj(had-23, home-21)
ref(home-21, That-22)
acl:relcl(home-21, had-23)
case(gift-25, for-24)
nmod:for(had-23, gift-25)
det(sea-27, the-26)
dobj(go-2, sea-27)

(ROOT
  (FRAG
    (S
      (VP
        (VP (VB Let)
          (S
            (S
              (VP (VB go)
                (NP (DT the) (JJ great) (NNS bow-anchors))))
            (: --)
            (S
              (INTJ (UH Ah))
              (, ,)
              (NP (NNS fools))
              (VP (VBD were)
                (UCP
                  (NP (PRP we))
                  (CC and)
                  (ADJP (JJ blind)))))))
        (: --)
        (NP
          (NP (DT The) (JJS worst))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD stored)
                (PP (IN with)
                  (NP (JJ utter) (NNS toil)))))))))
    (, ,)
    (NP
      (NP (DT The) (JJS best))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBD left)
            (PRT (RP behind))))))
    (. !)))

dep(best-24, Let-1)
xcomp(Let-1, go-2)
det(bow-anchors-5, the-3)
amod(bow-anchors-5, great-4)
dobj(go-2, bow-anchors-5)
discourse(we-11, Ah-7)
nsubj(we-11, fools-9)
nsubj(blind-13, fools-9)
cop(we-11, were-10)
parataxis(go-2, we-11)
cc(we-11, and-12)
parataxis(go-2, blind-13)
conj:and(we-11, blind-13)
det(worst-16, The-15)
dobj(Let-1, worst-16)
nsubj(stored-18, we-17)
acl:relcl(worst-16, stored-18)
case(toil-21, with-19)
amod(toil-21, utter-20)
nmod:with(stored-18, toil-21)
det(best-24, The-23)
root(ROOT-0, best-24)
nsubj(left-26, we-25)
acl:relcl(best-24, left-26)
compound:prt(left-26, behind-27)

(ROOT
  (S
    (S
      (NP
        (NP (NNP _) (NNP Coastwise))
        (PRN (: --)
          (ADJP (JJ cross-seas))
          (: --)))
      (VP (VBP round)
        (NP (DT the) (NN world))))
    (CC and)
    (ADVP (RB back) (RB again))
    (, ,)
    (S
      (NP (NNP Whither) (NN flaw))
      (VP (MD shall)
        (VP (VB fail)
          (NP (PRP us)))))
    (CC or)
    (S
      (NP (DT the) (NNPS Trades))
      (VP (VBP drive)
        (PRT (RP down))))
    (: :)
    (S
      (NP
        (NP (NNP Plain-sail))
        (PRN (: --)
          (NP (NN storm-sail))
          (: --)))
      (VP (VBD lay)
        (NP (PRP$ your) (NN board)
          (CC and)
          (NN tack))
        (ADVP (RB again))))
    (: --)
    (CC And)
    (S
      (NP (DT all))
      (VP (TO to)
        (VP (VB bring)
          (NP (DT a) (NN cargo))
          (PRT (RP up))
          (PP (TO to)
            (NP (NNP London) (NNP Town))))))
    (. !)))

compound(Coastwise-2, _-1)
nsubj(round-6, Coastwise-2)
dep(Coastwise-2, cross-seas-4)
root(ROOT-0, round-6)
det(world-8, the-7)
dobj(round-6, world-8)
cc(round-6, and-9)
advmod(again-11, back-10)
advmod(round-6, again-11)
compound(flaw-14, Whither-13)
nsubj(fail-16, flaw-14)
aux(fail-16, shall-15)
dep(round-6, fail-16)
dobj(fail-16, us-17)
cc(round-6, or-18)
det(Trades-20, the-19)
nsubj(drive-21, Trades-20)
conj:and(round-6, drive-21)
compound:prt(drive-21, down-22)
nsubj(lay-28, Plain-sail-24)
dep(Plain-sail-24, storm-sail-26)
dep(round-6, lay-28)
nmod:poss(board-30, your-29)
dobj(lay-28, board-30)
cc(board-30, and-31)
dobj(lay-28, tack-32)
conj:and(board-30, tack-32)
advmod(lay-28, again-33)
cc(round-6, And-35)
nsubj(bring-38, all-36)
mark(bring-38, to-37)
conj:and(round-6, bring-38)
det(cargo-40, a-39)
dobj(bring-38, cargo-40)
compound:prt(bring-38, up-41)
case(Town-44, to-42)
compound(Town-44, London-43)
nmod:to(bring-38, Town-44)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP
            (NP (NNP _) (NNP M'ANDREW) (POS 'S))
            (NNP HYMN)
            (NAC (NNP Lord) (, ,) (NNP Thou))
            (NN hast))
          (VP (VBN made)
            (NP (DT this) (NN world))
            (PP (IN below)
              (NP
                (NP (DT the) (NN shadow))
                (PP (IN of)
                  (NP (DT a) (NN dream)))))))
        (, ,)
        (NP (NNP An) (POS '))
        (, ,))
      (VP (VBD taught)
        (SBAR
          (S
            (PP (IN by)
              (NP (NN time)))
            (, ,)
            (NP (PRP I))
            (VP (VBP tak) ('' ')
              (NP (PRP it))
              (ADVP (RB so)))))))
    (: --)
    (S
      (NP (NNP exceptin) (POS '))
      (ADVP (RB always))
      (VP (VBZ Steam)))
    (. .)))

compound(M'ANDREW-2, _-1)
nmod:poss(hast-8, M'ANDREW-2)
case(M'ANDREW-2, 'S-3)
compound(hast-8, HYMN-4)
dep(hast-8, Lord-5)
dep(Lord-5, Thou-7)
nsubj(taught-22, hast-8)
acl(hast-8, made-9)
det(world-11, this-10)
dobj(made-9, world-11)
case(shadow-14, below-12)
det(shadow-14, the-13)
nmod:below(made-9, shadow-14)
case(dream-17, of-15)
det(dream-17, a-16)
nmod:of(shadow-14, dream-17)
appos(hast-8, An-19)
case(An-19, '-20)
root(ROOT-0, taught-22)
case(time-24, by-23)
nmod:by(tak-27, time-24)
nsubj(tak-27, I-26)
ccomp(taught-22, tak-27)
dobj(tak-27, it-29)
advmod(tak-27, so-30)
nsubj(Steam-35, exceptin-32)
case(exceptin-32, '-33)
advmod(Steam-35, always-34)
parataxis(taught-22, Steam-35)

(ROOT
  (S
    (PP (IN From)
      (NP (NN coupler-flange)
        (S
          (VP (TO to)
            (VP (VB spindle-guide)
              (S
                (NP (PRP I))
                (VP (VB see)
                  (NP (NNP Thy) (NNP Hand)))))))))
    (, ,)
    (NP
      (NP (NNP O) (NNP God))
      (: --)
      (NP
        (NP (NNP Predestination))
        (PP (IN in)
          (NP
            (NP (DT the) (NN stride) (NN o) (POS '))
            (NN yon) (NN connectin) ('' '))))
      (: -))
    (VP (VBZ rod))
    (. .)))

case(coupler-flange-2, From-1)
nmod:from(rod-23, coupler-flange-2)
mark(spindle-guide-4, to-3)
acl(coupler-flange-2, spindle-guide-4)
nsubj(see-6, I-5)
ccomp(spindle-guide-4, see-6)
compound(Hand-8, Thy-7)
dobj(see-6, Hand-8)
compound(God-11, O-10)
nsubj(rod-23, God-11)
dep(God-11, Predestination-13)
case(connectin-20, in-14)
det(o-17, the-15)
compound(o-17, stride-16)
nmod:poss(connectin-20, o-17)
case(o-17, '-18)
compound(connectin-20, yon-19)
nmod:in(Predestination-13, connectin-20)
root(ROOT-0, rod-23)

(ROOT
  (S
    (S
      (NP (NNP John) (NNP Calvin))
      (VP (MD might)
        (VP (VB ha) ('' ')
          (NP
            (NP
              (NP (NNP forged))
              (NP (DT the) (JJ same)))
            (: --)
            (NP (NNS enorrmous))
            (, ,)
            (ADJP (JJ certain) (, ,) (JJ slow))))))
    (: --)
    (S
      (NP
        (NP (NNP Ay))
        (, ,)
        (VP (VBD wrought)
          (NP (PRP it))
          (PP (IN in)
            (NP (DT the) (NN furnace-flame))))
        (: --))
      (VP (VBZ _)
        (S
          (NP (PRP$ my) (NN _))
          (`` ``)
          (NP (NNP Institutio))
          ('' ''))))
    (. .)))

compound(Calvin-2, John-1)
nsubj(ha-4, Calvin-2)
aux(ha-4, might-3)
root(ROOT-0, ha-4)
dobj(ha-4, forged-6)
det(same-8, the-7)
dep(forged-6, same-8)
dep(forged-6, enorrmous-10)
amod(slow-14, certain-12)
amod(forged-6, slow-14)
nsubj(_-24, Ay-16)
acl(Ay-16, wrought-18)
dobj(wrought-18, it-19)
case(furnace-flame-22, in-20)
det(furnace-flame-22, the-21)
nmod:in(wrought-18, furnace-flame-22)
parataxis(ha-4, _-24)
nmod:poss(_-26, my-25)
dep(Institutio-28, _-26)
xcomp(_-24, Institutio-28)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB get)
          (NP (PRP$ my) (NN sleep) (NN to-night)))))
    (: ;)
    (S
      (NP (JJ old) (NNS bones))
      (VP (VBP are)
        (ADJP (JJ hard)
          (S
            (VP (TO to)
              (VP (VB please)
                (PRN (: ;)
                  (S
                    (NP (PRP I))
                    (VP (MD 'll)
                      (VP (VB stand)
                        (NP (DT the) (JJ middle) (NN watch))
                        (PRT (RP up))
                        (ADVP (RB here)))))
                  (: --))
                (NP (RB alone)
                  (NP
                    (NP (NNP wi) (POS '))
                    (VBG God))
                  (, an) ('' ')
                  (NP
                    (NP (DT these))
                    (NP (PRP$ My) (NNS engines))))
                (, ,)
                (SBAR (IN after)
                  (S
                    (NP
                      (NP
                        (NP (JJ ninety) (NNS days))
                        (NP
                          (NP (NNP o) (POS '))
                          (NN race)))
                      (, an) ('' ')
                      (VP (VBN rack))
                      (, an) ('' '))
                    (VP (VBP strain)
                      (PP (IN Through)
                        (NP
                          (NP (PDT all) (DT the) (NNS seas))
                          (PP (IN of)
                            (NP
                              (NP (DT all) (NNP Thy) (NN world))
                              (, ,)
                              (NP
                                (NP (NN slam-bangin) (POS '))
                                (NN home))))))
                      (ADVP (RB again)))))))))))
    (. .)))

nsubj(get-4, I-1)
aux(get-4, can-2)
neg(get-4, not-3)
root(ROOT-0, get-4)
nmod:poss(to-night-7, my-5)
compound(to-night-7, sleep-6)
dobj(get-4, to-night-7)
amod(bones-10, old-9)
nsubj(hard-12, bones-10)
nsubj:xsubj(please-14, bones-10)
cop(hard-12, are-11)
parataxis(get-4, hard-12)
mark(please-14, to-13)
xcomp(hard-12, please-14)
nsubj(stand-18, I-16)
aux(stand-18, 'll-17)
parataxis(please-14, stand-18)
det(watch-21, the-19)
amod(watch-21, middle-20)
dobj(stand-18, watch-21)
compound:prt(stand-18, up-22)
advmod(stand-18, here-23)
advmod(wi-26, alone-25)
dobj(please-14, wi-26)
case(wi-26, '-27)
amod(wi-26, God-28)
dep(wi-26, these-31)
nmod:poss(engines-33, My-32)
dep(these-31, engines-33)
mark(strain-46, after-35)
amod(days-37, ninety-36)
nsubj(strain-46, days-37)
nmod:poss(race-40, o-38)
case(o-38, '-39)
dep(days-37, race-40)
acl(days-37, rack-43)
advcl(please-14, strain-46)
case(seas-50, Through-47)
det:predet(seas-50, all-48)
det(seas-50, the-49)
nmod:through(strain-46, seas-50)
case(world-54, of-51)
det(world-54, all-52)
compound(world-54, Thy-53)
nmod:of(seas-50, world-54)
nmod:poss(home-58, slam-bangin-56)
case(slam-bangin-56, '-57)
appos(world-54, home-58)
advmod(strain-46, again-59)

(ROOT
  (S
    (S
      (S
        (VP (VBG Slam-bang)
          (ADVP (RB too) (RB much))))
      (PRN (: --)
        (S
          (NP (PRP they))
          (VP (VB knock)
            (NP (DT a) (NN wee))))
        (: --))
      (NP (DT the) (NNS crosshead-gibs))
      (VP (VBP are)
        (ADJP (JJ loose))))
    (: ;)
    (S (CC But)
      (NP
        (NP (RB thirty) (CD thousand) (NN mile) (NN o) (POS '))
        (NN sea))
      (VP (VBZ has)
        (VP (VBN gied)
          (NP (PRP them) (JJ fair) (NN excuse)))))
    (: ...) (. .)))

dep(loose-13, Slam-bang-1)
advmod(much-3, too-2)
advmod(Slam-bang-1, much-3)
nsubj(knock-6, they-5)
parataxis(loose-13, knock-6)
det(wee-8, a-7)
dobj(knock-6, wee-8)
det(crosshead-gibs-11, the-10)
nsubj(loose-13, crosshead-gibs-11)
cop(loose-13, are-12)
root(ROOT-0, loose-13)
cc(gied-23, But-15)
advmod(o-19, thirty-16)
nummod(o-19, thousand-17)
compound(o-19, mile-18)
nmod:poss(sea-21, o-19)
case(o-19, '-20)
nsubj(gied-23, sea-21)
aux(gied-23, has-22)
parataxis(loose-13, gied-23)
dep(excuse-26, them-24)
amod(excuse-26, fair-25)
dobj(gied-23, excuse-26)

(ROOT
  (NP
    (NP
      (NP
        (NP
          (NP (NNP Fine))
          (, ,)
          (NP (JJ clear) (DT an)))
        (POS '))
      (NN dark))
    (: --)
    (NP
      (NP (DT a) (JJ full-draught) (NN breeze))
      (, ,)
      (NP
        (NP
          (NP (NNP wi) (POS '))
          (NNP Ushant))
        (PP (IN out)
          (NP
            (NP (NNP o) (POS '))
            (NN sight))))
      (, ,)
      (NP
        (NP (NNP An) (POS '))
        (NP (NNP Ferguson) (NNP relievin) (POS '))
        (NNP Hay)))
    (. .)))

nmod:poss(dark-6, Fine-1)
appos(Fine-1, clear-3)
dep(clear-3, an-4)
case(Fine-1, '-5)
root(ROOT-0, dark-6)
det(breeze-10, a-8)
amod(breeze-10, full-draught-9)
dep(dark-6, breeze-10)
nmod:poss(Ushant-14, wi-12)
case(wi-12, '-13)
appos(breeze-10, Ushant-14)
case(sight-18, out-15)
nmod:poss(sight-18, o-16)
case(o-16, '-17)
nmod:out(Ushant-14, sight-18)
nmod:poss(Hay-25, An-20)
case(An-20, '-21)
compound(relievin-23, Ferguson-22)
nmod:poss(Hay-25, relievin-23)
case(relievin-23, '-24)
appos(breeze-10, Hay-25)

(ROOT
  (S
    (NP (JJ Old) (NN girl))
    (, ,)
    (NP (PRP ye))
    (VP (MD 'll)
      (VP (VB walk)
        (NP (NN to-night))))
    (. !)))

amod(girl-2, Old-1)
nsubj(walk-6, girl-2)
nsubj(walk-6, ye-4)
aux(walk-6, 'll-5)
root(ROOT-0, walk-6)
dobj(walk-6, to-night-7)

(ROOT
  (S
    (NP (PRP$ His) (NN wife))
    (VP (VBZ 's)
      (PP (IN at)
        (NP (NNP Plymouth))))
    (: ...) (. .)))

nmod:poss(wife-2, His-1)
nsubj(Plymouth-5, wife-2)
cop(Plymouth-5, 's-3)
case(Plymouth-5, at-4)
root(ROOT-0, Plymouth-5)

(ROOT
  (NP
    (NP (CD Seventy) (: --) (CD One))
    (: --)
    (NP
      (NP (CD Two) (: --) (CD Three))
      (SBAR
        (SBAR (IN since)
          (S
            (NP (PRP he))
            (VP
              (VP (VBD began))
              (: --)
              (NP
                (NP (CD Three) (NNS turns))
                (PP (IN for)
                  (NP (NNP Mistress) (NNP Ferguson)))))))
        (: ...)
        (CC and)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ 's)
              (S
                (VP (TO to)
                  (VP (VB blame)
                    (NP (DT the) (NN man))))))))))
    (. ?)))

nummod(One-3, Seventy-1)
root(ROOT-0, One-3)
nummod(Three-7, Two-5)
dep(One-3, Three-7)
nsubj('s-20, Three-7)
nsubj:xsubj(blame-22, Three-7)
mark(began-10, since-8)
nsubj(began-10, he-9)
acl:relcl(Three-7, began-10)
nummod(turns-13, Three-12)
dobj(began-10, turns-13)
case(Ferguson-16, for-14)
compound(Ferguson-16, Mistress-15)
nmod:for(turns-13, Ferguson-16)
cc(began-10, and-18)
ref(Three-7, who-19)
acl:relcl(Three-7, 's-20)
conj:and(began-10, 's-20)
mark(blame-22, to-21)
xcomp('s-20, blame-22)
det(man-24, the-23)
dobj(blame-22, man-24)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (NN none))
          (PP (IN at)
            (NP
              (NP (DT any) (NN port))
              (PP (IN for)
                (NP (PRP me)))
              (, ,)
              (PP (IN by)
                (NP (NN drivin)))))
          ('' ')
          (ADJP (JJ fast)
            (CC or)
            (JJ slow)))))
    (, ,)
    (SBAR (IN Since)
      (S
        (NP (NNP Elsie) (NNP Campbell))
        (VP (VBD went)
          (PP (TO to)
            (NP (NNP Thee) (, ,) (NNP Lord)))
          (, ,)
          (ADVP
            (NP (CD thirty) (NNS years))
            (RB ago)))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
nsubj('s-2, none-3)
case(port-6, at-4)
det(port-6, any-5)
nmod:at(none-3, port-6)
case(me-8, for-7)
nmod:for(port-6, me-8)
case(drivin-11, by-10)
nmod:by(port-6, drivin-11)
amod(none-3, fast-13)
cc(fast-13, or-14)
amod(none-3, slow-15)
conj:or(fast-13, slow-15)
mark(went-20, Since-17)
compound(Campbell-19, Elsie-18)
nsubj(went-20, Campbell-19)
dep('s-2, went-20)
case(Lord-24, to-21)
compound(Lord-24, Thee-22)
nmod:to(went-20, Lord-24)
nummod(years-27, thirty-26)
nmod:npmod(ago-28, years-27)
advmod(went-20, ago-28)

(ROOT
  (S (-LRB- -LRB-)
    (NP (DT The) (NN year))
    (NP (DT the) (NNP _) (NNP Sarah) (NNP Sands) (NNP _))
    (VP (VBD was)
      (VP (VBN burned)))
    (. .)))

det(year-3, The-2)
nmod:tmod(burned-10, year-3)
det(_-8, the-4)
compound(_-8, _-5)
compound(_-8, Sarah-6)
compound(_-8, Sands-7)
nsubjpass(burned-10, _-8)
auxpass(burned-10, was-9)
root(ROOT-0, burned-10)

(ROOT
  (S
    (S
      (INTJ (UH Oh) (UH roads))
      (NP (PRP we))
      (VP
        (VP (VBD used)
          (S
            (VP (TO to)
              (VP (VB tread)))))
        (, ,)
        (NP
          (NP
            (NP (NNP Fra) (POS '))
            (NNP Maryhill))
          (PP (TO to)
            (NP (NNP Pollokshaws))))))
    (: --)
    (S
      (NP (NNP fra) (POS '))
      (VP (VBN Govan)
        (PP (TO to)
          (NP (NNP Parkhead)))))
    (. !) (-RRB- -RRB-)))

discourse(used-4, Oh-1)
dep(Oh-1, roads-2)
nsubj(used-4, we-3)
root(ROOT-0, used-4)
mark(tread-6, to-5)
xcomp(used-4, tread-6)
nmod:poss(Maryhill-10, Fra-8)
case(Fra-8, '-9)
dobj(used-4, Maryhill-10)
nsubj:xsubj(tread-6, Maryhill-10)
case(Pollokshaws-12, to-11)
nmod:to(Maryhill-10, Pollokshaws-12)
nsubj(Govan-16, fra-14)
case(fra-14, '-15)
parataxis(used-4, Govan-16)
case(Parkhead-18, to-17)
nmod:to(Govan-16, Parkhead-18)

(ROOT
  (S
    (ADVP (RB Not)
      (CC but))
    (NP (PRP they))
    (VP (VBP 're)
      (ADJP (JJ ceevil)
        (PP (IN on)
          (NP (DT the) (NNP Board)))))
    (. .)))

neg(ceevil-5, Not-1)
cc(Not-1, but-2)
nsubj(ceevil-5, they-3)
cop(ceevil-5, 're-4)
root(ROOT-0, ceevil-5)
case(Board-8, on-6)
det(Board-8, the-7)
nmod:on(ceevil-5, Board-8)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (MD 'll)
      (VP (VB hear)
        (SBAR
          (S
            (NP (NNP Sir) (NNP Kenneth))
            (VP (VBP say) (: :)
              (NP (`` ``) (JJ Good-morrn) (, ,) (NN M'Andrew)))))))
    (. !)))

nsubj(hear-3, Ye-1)
aux(hear-3, 'll-2)
root(ROOT-0, hear-3)
compound(Kenneth-5, Sir-4)
nsubj(say-6, Kenneth-5)
ccomp(hear-3, say-6)
amod(M'Andrew-11, Good-morrn-9)
dobj(say-6, M'Andrew-11)

(ROOT
  (FRAG
    (ADVP (RB Back) (RB again))
    (. ?)))

advmod(again-2, Back-1)
root(ROOT-0, again-2)

(ROOT
  (SBAR
    (S
      (NP (NNP An) (POS '))
      (ADVP (WRB how))
      (VP (VBZ 's)
        (NP (PRP$ your) (JJ bilge) (NN to-day))))
    (. ?) ('' '')))

nsubj(to-day-7, An-1)
case(An-1, '-2)
advmod(to-day-7, how-3)
cop(to-day-7, 's-4)
nmod:poss(to-day-7, your-5)
amod(to-day-7, bilge-6)
root(ROOT-0, to-day-7)

(ROOT
  (S
    (NP (NNP Miscallin) (POS '))
    (VP
      (VP (VBZ technicalities))
      (CC but)
      (VP (VB handin) ('' ')
        (S
          (NP (PRP me))
          (NP (PRP$ my) (NN chair)
            (S
              (VP (TO To)
                (VP (VB drink)
                  (NP
                    (NP
                      (NP (NNP Madeira) (NNP wi) (POS '))
                      (CD three) (NNS Earls))
                    (PRN (: --)
                      (NP
                        (NP (DT the) (JJ auld) (NNP Fleet) (NNP Engineer))
                        (, ,)
                        (NP
                          (NP (DT That))
                          (VP (VBN started)
                            (PP (IN as)
                              (NP (DT a) (NN boiler-whelp))))))
                      (: --))))))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP
              (NP (NN steam))
              (CC and)
              (NP (PRP he)))
            (VP (VBD were)
              (ADJP (JJ low)))))))
    (. .)))

nsubj(technicalities-3, Miscallin-1)
nsubj(handin-5, Miscallin-1)
case(Miscallin-1, '-2)
root(ROOT-0, technicalities-3)
cc(technicalities-3, but-4)
conj:but(technicalities-3, handin-5)
nsubj(chair-9, me-7)
nmod:poss(chair-9, my-8)
xcomp(handin-5, chair-9)
mark(drink-11, To-10)
acl(chair-9, drink-11)
compound(wi-13, Madeira-12)
nmod:poss(Earls-16, wi-13)
case(wi-13, '-14)
nummod(Earls-16, three-15)
dobj(drink-11, Earls-16)
det(Engineer-21, the-18)
amod(Engineer-21, auld-19)
compound(Engineer-21, Fleet-20)
dep(Earls-16, Engineer-21)
appos(Engineer-21, That-23)
acl(That-23, started-24)
case(boiler-whelp-27, as-25)
det(boiler-whelp-27, a-26)
nmod:as(started-24, boiler-whelp-27)
advmod(low-34, when-29)
nsubj(low-34, steam-30)
cc(steam-30, and-31)
conj:and(steam-30, he-32)
nsubj(low-34, he-32)
cop(low-34, were-33)
advcl(handin-5, low-34)

(ROOT
  (S
    (NP (PRP I))
    (VP (VB mind)
      (NP
        (NP (DT the) (NN time))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD used)
              (S
                (VP (TO to)
                  (VP (VB serve)
                    (NP
                      (NP (DT a) (JJ broken) (NN pipe) (NN wi) (POS '))
                      (NN tow))))))))))
    (. .)))

nsubj(mind-2, I-1)
root(ROOT-0, mind-2)
det(time-4, the-3)
dobj(mind-2, time-4)
nsubj(used-6, we-5)
nsubj:xsubj(serve-8, we-5)
acl:relcl(time-4, used-6)
mark(serve-8, to-7)
xcomp(used-6, serve-8)
det(wi-12, a-9)
amod(wi-12, broken-10)
compound(wi-12, pipe-11)
nmod:poss(tow-14, wi-12)
case(wi-12, '-13)
dobj(serve-8, tow-14)

(ROOT
  (S
    (NP (CD Ten) (NN pound))
    (VP (VBD was)
      (NP (DT all)
        (NP (DT the) (NN pressure))
        (ADVP (RB then))
        (: --)
        (NP (NNP Eh))))
    (. !)))

nummod(pound-2, Ten-1)
nsubj(pressure-6, pound-2)
cop(pressure-6, was-3)
det(pressure-6, all-4)
det(pressure-6, the-5)
root(ROOT-0, pressure-6)
advmod(pressure-6, then-7)
dep(pressure-6, Eh-9)

(ROOT
  (S
    (VP (VB Eh))
    (. !)))

root(ROOT-0, Eh-1)

(ROOT
  (NP (: --)
    (NP
      (NP (DT a) (NN man) (NN wad) (NN drive))
      (: ;)
      (NP
        (NP (NNP An) (POS '))
        (NP (RB here))))
    (, ,)
    (NP
      (NP
        (NP (PRP$ our) (NN workin) (POS '))
        (NNS gauges))
      (SBAR
        (S
          (VP (VBP give)
            (NP (CD one))
            (NP (NN hunder) (NN fifty-five))))))
    (. !)))

det(drive-5, a-2)
compound(drive-5, man-3)
compound(drive-5, wad-4)
root(ROOT-0, drive-5)
dep(drive-5, An-7)
case(An-7, '-8)
dep(An-7, here-9)
nmod:poss(workin-12, our-11)
nmod:poss(gauges-14, workin-12)
case(workin-12, '-13)
appos(drive-5, gauges-14)
acl:relcl(gauges-14, give-15)
iobj(give-15, one-16)
compound(fifty-five-18, hunder-17)
dobj(give-15, fifty-five-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (ADJP (JJ creepin) ('' ')
        (PP (IN on)
          (S
            (VP (VBG wi) ('' ')
              (NP
                (NP (DT each) (JJ new) (NN rig))
                (: --)
                (PP (CC less)
                  (NP
                    (NP (NN weight))
                    (, an) ('' ')
                    (NP
                      (NP (JJR larger) (NN power))
                      (: :)
                      (S
                        (NP (EX There))
                        (VP (MD 'll)
                          (VP (VB be)
                            (NP (DT the) (JJ loco-boiler) (JJ next))))))))
                (, an))
              ('' ')
              (NP
                (NP (CD thirty) (NNS knots))
                (NP (DT an) (NN hour))))))))
    (. !)))

nsubj(creepin-3, We-1)
cop(creepin-3, 're-2)
root(ROOT-0, creepin-3)
mark(wi-6, on-5)
advcl(creepin-3, wi-6)
det(rig-10, each-8)
amod(rig-10, new-9)
dobj(wi-6, rig-10)
case(weight-13, less-12)
nmod:less(rig-10, weight-13)
amod(power-17, larger-16)
dep(weight-13, power-17)
expl(next-24, There-19)
aux(next-24, 'll-20)
cop(next-24, be-21)
det(next-24, the-22)
amod(next-24, loco-boiler-23)
dep(power-17, next-24)
nummod(knots-28, thirty-27)
dobj(wi-6, knots-28)
det(hour-30, an-29)
dep(knots-28, hour-30)

(ROOT
  (S
    (VP
      (NP
        (NP (NNP Thirty))
        (, an) ('' ')
        (ADVP (RBR more))))
    (. .)))

root(ROOT-0, Thirty-1)
advmod(Thirty-1, more-4)

(ROOT
  (SBAR
    (WHNP (WP What))
    (S
      (NP (PRP I))
      (VP (VBP ha)
        (SBAR
          (S
            (NP (POS '))
            (VP (VBN seen)
              (SBAR (IN since)
                (S
                  (NP (NN ocean-steam))
                  (VP (VBD began)
                    (SBAR
                      (S
                        (VP (VBZ Leaves)
                          (NP (PRP me))
                          (FRAG
                            (FRAG
                              (NP (DT no) (NN doot))
                              (PP (IN for)
                                (NP (DT the) (NN machine))))
                            (: :)
                            (FRAG (CC but)
                              (WP what) (IN about)
                              (NP (DT the) (NN man))
                              (. ?))))))))))))))))

dobj(ha-3, What-1)
nsubj(ha-3, I-2)
root(ROOT-0, ha-3)
nsubj(seen-5, '-4)
ccomp(ha-3, seen-5)
mark(began-8, since-6)
nsubj(began-8, ocean-steam-7)
advcl(seen-5, began-8)
ccomp(began-8, Leaves-9)
dobj(Leaves-9, me-10)
neg(doot-12, no-11)
dep(Leaves-9, doot-12)
case(machine-15, for-13)
det(machine-15, the-14)
nmod:for(doot-12, machine-15)
cc(about-19, but-17)
dep(about-19, what-18)
parataxis(doot-12, about-19)
det(man-21, the-20)
dep(about-19, man-21)

(ROOT
  (S
    (NP
      (NP (DT The) (NN man))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ counts)))))
    (, ,)
    (VP (VBP wi) ('' ')
      (NP (PDT all) (PRP$ his) (NNS runs))
      (, ,)
      (S
        (NP
          (NP
            (QP (CD one) (CD million))
            (NN mile) (NN o) ('' ') (NN sea))
          (: :)
          (NP
            (NP (CD Four) (NN time))
            (NP
              (NP (DT the) (NN span))
              (PP (IN from)
                (NP
                  (NP (NN earth))
                  (PP (TO to)
                    (NP (NN moon)))))))
          (: ...))))
    (. .)))

det(man-2, The-1)
nsubj(counts-4, man-2)
nsubj(wi-6, man-2)
ref(man-2, that-3)
acl:relcl(man-2, counts-4)
root(ROOT-0, wi-6)
det:predet(runs-10, all-8)
nmod:poss(runs-10, his-9)
dobj(wi-6, runs-10)
compound(million-13, one-12)
nummod(sea-17, million-13)
compound(sea-17, mile-14)
compound(sea-17, o-15)
xcomp(wi-6, sea-17)
nummod(time-20, Four-19)
dep(sea-17, time-20)
det(span-22, the-21)
dep(time-20, span-22)
case(earth-24, from-23)
nmod:from(span-22, earth-24)
case(moon-26, to-25)
nmod:to(earth-24, moon-26)

(ROOT
  (SINV
    (FRAG
      (WHADJP (WRB How) (JJ far)))
    (, ,)
    (VP (VBP O))
    (NP
      (NP (NNP Lord))
      (, ,)
      (PP (IN from)
        (NP (NNP Thee))))
    (. ?)))

advmod(far-2, How-1)
dep(O-4, far-2)
root(ROOT-0, O-4)
nsubj(O-4, Lord-5)
case(Thee-8, from-7)
nmod:from(Lord-5, Thee-8)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD wast)
      (PP (IN beside)
        (NP
          (NP (PRP him))
          (NP (NN night))
          (, an) ('' ')))
      (NP (NN day)))
    (. .)))

nsubj(wast-2, That-1)
root(ROOT-0, wast-2)
case(him-4, beside-3)
nmod:beside(wast-2, him-4)
dep(him-4, night-5)
nmod:tmod(wast-2, day-8)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (VB mind)
      (NP (PRP$ my) (JJ first) (NN typhoon)))
    (. ?)))

nsubj(mind-2, Ye-1)
root(ROOT-0, mind-2)
nmod:poss(typhoon-5, my-3)
amod(typhoon-5, first-4)
dobj(mind-2, typhoon-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD scoughed)
      (NP (DT the) (NN skipper))
      (PP (IN on)
        (NP (PRP$ his) (NN way)))
      (PP (TO to)
        (NP
          (NP (NNP jock) (NNP wi) (POS '))
          (DT the) (NN saloon))))
    (. .)))

nsubj(scoughed-2, It-1)
root(ROOT-0, scoughed-2)
det(skipper-4, the-3)
dobj(scoughed-2, skipper-4)
case(way-7, on-5)
nmod:poss(way-7, his-6)
nmod:on(scoughed-2, way-7)
case(saloon-13, to-8)
compound(wi-10, jock-9)
nmod:poss(saloon-13, wi-10)
case(wi-10, '-11)
det(saloon-13, the-12)
nmod:to(scoughed-2, saloon-13)

(ROOT
  (S
    (S
      (NP (CD Three) (NNS feet))
      (VP (VBD were)
        (PP (IN on)
          (NP
            (NP (DT the) (NN stokehold-floor))
            (: --)
            (NP
              (ADVP (RB just))
              (NP (NN slappin))
              ('' ')
              (PP (TO to)
                (NP (DT an))))
            ('' ')))
        (ADJP (JJ fro))))
    (: --)
    (S
      (NP (NNP An) (POS '))
      (VP (VBD cast)
        (NP (PRP me))
        (PP (IN on)
          (NP (DT a) (NN furnace-door)))))
    (. .)))

nummod(feet-2, Three-1)
nsubj(fro-14, feet-2)
cop(fro-14, were-3)
case(stokehold-floor-6, on-4)
det(stokehold-floor-6, the-5)
nmod:on(fro-14, stokehold-floor-6)
advmod(slappin-9, just-8)
dep(stokehold-floor-6, slappin-9)
case(an-12, to-11)
nmod:to(slappin-9, an-12)
root(ROOT-0, fro-14)
nsubj(cast-18, An-16)
case(An-16, '-17)
parataxis(fro-14, cast-18)
dobj(cast-18, me-19)
case(furnace-door-22, on-20)
det(furnace-door-22, a-21)
nmod:on(cast-18, furnace-door-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (S
        (NP (DT the) (NNS marks))
        (VP (TO to)
          (VP (VB show)))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(marks-4, the-3)
dobj(have-2, marks-4)
mark(show-6, to-5)
ccomp(have-2, show-6)

(ROOT
  (INTJ (UH Marks) (. !)))

root(ROOT-0, Marks-1)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB ha))
      (VP (`` ') (VBZ marks)
        (NP (NN o))
        ('' ')
        (NP
          (NP
            (QP (JJR more) (IN than) (CD burns)))
          (: --)
          (ADJP (JJ deep)
            (PP (IN in)
              (NP
                (NP (PRP$ my) (NN soul))
                (, an) ('' ')
                (NP
                  (NP (JJ black))
                  (, ,)
                  (NP
                    (NP
                      (NP (NNP An) (POS '))
                      (NNS times))
                    (PP (IN like)
                      (NP (DT this))))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (NNS things))
                      (VP (VBP go)
                        (ADJP (JJ smooth))))))))))))
    (, ,)
    (NP (PRP$ my) (NNS wickudness))
    (VP (VBZ comes)
      (PRT (RP back)))
    (. .)))

nsubj(marks-4, I-1)
advmod(marks-4, ha-2)
ccomp(comes-32, marks-4)
dobj(marks-4, o-5)
advmod(burns-9, more-7)
mwe(more-7, than-8)
dobj(marks-4, burns-9)
amod(burns-9, deep-11)
case(soul-14, in-12)
nmod:poss(soul-14, my-13)
nmod:in(deep-11, soul-14)
dep(soul-14, black-17)
nmod:poss(times-21, An-19)
case(An-19, '-20)
appos(black-17, times-21)
case(this-23, like-22)
nmod:like(times-21, this-23)
advmod(go-27, when-25)
nsubj(go-27, things-26)
acl:relcl(black-17, go-27)
xcomp(go-27, smooth-28)
nmod:poss(wickudness-31, my-30)
nsubj(comes-32, wickudness-31)
root(ROOT-0, comes-32)
compound:prt(comes-32, back-33)

(ROOT
  (S
    (NP (DT The) (NNS sins))
    (VP (VB o) (`` ')
      (NP
        (NP (CD four))
        (CC and)
        (NP
          (NP (JJ forty) (NNS years))
          (, ,)
          (ADVP (DT all) (IN up))
          (, an)))
      ('' ')
      (PP (IN down)
        (NP (DT the) (NNS seas)))
      (, ,)
      (NP
        (NP (NNP Clack))
        (, an) ('' ')
        (NP
          (NP (NN repeat))
          (PP (IN like)
            (NP
              (NP (NNS valves))
              (VP (VBN half-fed)))))))
    (: ...) (. .)))

det(sins-2, The-1)
nsubj(o-3, sins-2)
root(ROOT-0, o-3)
dobj(o-3, four-5)
cc(four-5, and-6)
amod(years-8, forty-7)
dobj(o-3, years-8)
conj:and(four-5, years-8)
advmod(years-8, all-10)
case(all-10, up-11)
case(seas-16, down-14)
det(seas-16, the-15)
nmod:down(o-3, seas-16)
dobj(o-3, Clack-18)
dep(Clack-18, repeat-21)
case(valves-23, like-22)
nmod:like(repeat-21, valves-23)
acl(valves-23, half-fed-24)

(ROOT
  (S
    (NP (NNP Forgie))
    (VP (VBZ 's)
      (NP (PRP$ our) (NNS trespasses)))
    (. .)))

nsubj(trespasses-4, Forgie-1)
cop(trespasses-4, 's-2)
nmod:poss(trespasses-4, our-3)
root(ROOT-0, trespasses-4)

(ROOT
  (NP
    (NP
      (NP (NNPS Nights))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (MD 'd)
            (VP (VB come)
              (PP (IN on)
                (NP (NN deck)))
              (PP (TO to)
                (NP
                  (NP (NN mark))
                  (, ,)
                  (NP
                    (NP
                      (NP (NNP wi) (POS '))
                      (NN envy))
                    (PP (IN in)
                      (NP (PRP$ my) (NN gaze))))
                  (, ,))))))))
    (NP
      (NP (DT The) (NNS couples) (NN kittlin) ('' '))
      (PP (IN in)
        (NP
          (NP (DT the) (NN dark))
          (PP (IN between)
            (NP (DT the) (JJ funnel) (NNS stays))))))
    (: ;)
    (NP
      (NP (NNS Years))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD raked)
            (NP
              (NP (DT the) (NNS ports) (NN wi) (POS '))
              (NN pride)
              (S
                (VP (TO to)
                  (VP (VB fill)
                    (NP
                      (NP
                        (NP (PRP$ my) (NN cup) (NN o) (POS '))
                        (JJ wrong))
                      (PRN (: --)
                        (NP
                          (NP (NNP Judge) (RB not))
                          (, ,)
                          (NP (NNP O) (NNP Lord))
                          (, ,)
                          (NP (PRP$ my) (NNS steps)))))
                    (PRT (RP aside))
                    (PP (IN at)
                      (NP
                        (NP (NNP Gay) (NNP Street))
                        (PP (IN in)
                          (NP (NNP Hong-Kong)))))))))))))
    (. !)))

root(ROOT-0, Nights-1)
advmod(come-5, when-2)
nsubj(come-5, I-3)
aux(come-5, 'd-4)
acl:relcl(Nights-1, come-5)
case(deck-7, on-6)
nmod:on(come-5, deck-7)
case(mark-9, to-8)
nmod:to(come-5, mark-9)
nmod:poss(envy-13, wi-11)
case(wi-11, '-12)
appos(mark-9, envy-13)
case(gaze-16, in-14)
nmod:poss(gaze-16, my-15)
nmod:in(envy-13, gaze-16)
det(kittlin-20, The-18)
compound(kittlin-20, couples-19)
dep(Nights-1, kittlin-20)
case(dark-24, in-22)
det(dark-24, the-23)
nmod:in(kittlin-20, dark-24)
case(stays-28, between-25)
det(stays-28, the-26)
amod(stays-28, funnel-27)
nmod:between(dark-24, stays-28)
dep(Nights-1, Years-30)
advmod(raked-33, when-31)
nsubj(raked-33, I-32)
acl:relcl(Years-30, raked-33)
det(wi-36, the-34)
compound(wi-36, ports-35)
nmod:poss(pride-38, wi-36)
case(wi-36, '-37)
dobj(raked-33, pride-38)
mark(fill-40, to-39)
acl(pride-38, fill-40)
nmod:poss(o-43, my-41)
compound(o-43, cup-42)
dobj(fill-40, o-43)
case(o-43, '-44)
amod(o-43, wrong-45)
dep(o-43, Judge-47)
neg(Judge-47, not-48)
compound(Lord-51, O-50)
appos(Judge-47, Lord-51)
nmod:poss(steps-54, my-53)
appos(Judge-47, steps-54)
compound:prt(fill-40, aside-55)
case(Street-58, at-56)
compound(Street-58, Gay-57)
nmod:at(fill-40, Street-58)
case(Hong-Kong-60, in-59)
nmod:in(Street-58, Hong-Kong-60)

(ROOT
  (ADJP (JJ Blot)
    (PP (IN out)
      (NP
        (NP (DT the) (JJ wastrel) (NNS hours))
        (PP (IN of)
          (NP (NN mine)))))
    (PP (IN in)
      (NP
        (NP (NN sin))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBP abode) (: --)
              (NP
                (NP (NNP Jane)
                  (NP (NNP Harrigan) (POS 's)))
                (, an) ('' ')
                (NP
                  (NP
                    (NP (NNP Number) (NNP Nine))
                    (, ,)
                    (NP (DT The) (NN Reddick))
                    (, an) ('' '))
                  (PRN
                    (NP (NNP Grant) (NNP Road))))))))))
    (. !)))

root(ROOT-0, Blot-1)
case(hours-5, out-2)
det(hours-5, the-3)
amod(hours-5, wastrel-4)
nmod:out(Blot-1, hours-5)
case(mine-7, of-6)
nmod:of(hours-5, mine-7)
case(sin-9, in-8)
nmod:in(Blot-1, sin-9)
advmod(abode-12, when-10)
nsubj(abode-12, I-11)
acl:relcl(sin-9, abode-12)
dobj(abode-12, Jane-14)
nmod:poss(Jane-14, Harrigan-15)
case(Harrigan-15, 's-16)
compound(Nine-20, Number-19)
dep(Jane-14, Nine-20)
det(Reddick-23, The-22)
appos(Nine-20, Reddick-23)
compound(Road-27, Grant-26)
dep(Nine-20, Road-27)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP An) (POS '))
        (NN waur))
      (PP (IN than)
        (NP
          (NP (DT all))
          (PRN (: --)
            (NP
              (NP (PRP$ my) (NN crownin) (POS '))
              (NN sin))
            (: --)))))
    (VP (VBP rank)
      (NP
        (NP (NN blasphemy))
        (, an) ('' ')
        (ADVP (RB wild))))
    (. .)))

nmod:poss(waur-3, An-1)
case(An-1, '-2)
nsubj(rank-12, waur-3)
case(all-5, than-4)
nmod:than(waur-3, all-5)
nmod:poss(crownin-8, my-7)
nmod:poss(sin-10, crownin-8)
case(crownin-8, '-9)
dep(all-5, sin-10)
root(ROOT-0, rank-12)
dobj(rank-12, blasphemy-13)
advmod(blasphemy-13, wild-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (NP
        (NP (RB not) (CD four)
          (CC and)
          (CD twenty))
        (ADVP (RB then))
        (: --)
        (NP
          (NP (JJ Ye) (NN wadna) (NN judge))
          (NP (DT a) (NN child)))))
    (. ?)))

nsubj(four-4, I-1)
cop(four-4, was-2)
neg(four-4, not-3)
root(ROOT-0, four-4)
cc(four-4, and-5)
conj:and(four-4, twenty-6)
advmod(four-4, then-7)
amod(judge-11, Ye-9)
compound(judge-11, wadna-10)
dep(four-4, judge-11)
det(child-13, a-12)
dep(judge-11, child-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD 'd)
      (VP (VBN seen)
        (NP (DT the) (NNPS Tropics))
        (ADVP (RB first))
        (SBAR (IN that)
          (S
            (NP
              (NP (NN run))
              (PRN (: --)
                (NP
                  (NP (JJ new) (NN fruit))
                  (, ,)
                  (NP (JJ new)))))
            (VP
              (VP (VBZ smells))
              (, ,)
              (NP
                (NP (JJ new) (NN air))
                (: --)
                (SBARQ
                  (WHADVP (WRB How))
                  (SQ (MD could)
                    (NP (PRP I))
                    (VP (VB tell)
                      (PRN (: --)
                        (S
                          (VP (VBG blind-fou)
                            (NP
                              (NP (NNP wi) (POS '))
                              (NN sun))))
                        (: --))
                      (SBAR
                        (S
                          (NP (DT the) (NNP Deil))
                          (VP (VBD was)
                            (VP (VBN lurkin) ('' ')
                              (NP (RB there))))))))
                  (. ?))))))))))

nsubj(seen-3, I-1)
aux(seen-3, 'd-2)
root(ROOT-0, seen-3)
det(Tropics-5, the-4)
dobj(seen-3, Tropics-5)
advmod(seen-3, first-6)
mark(smells-14, that-7)
nsubj(smells-14, run-8)
amod(fruit-11, new-10)
dep(run-8, fruit-11)
appos(fruit-11, new-13)
ccomp(seen-3, smells-14)
amod(air-17, new-16)
dobj(smells-14, air-17)
advmod(tell-22, How-19)
aux(tell-22, could-20)
nsubj(tell-22, I-21)
dep(air-17, tell-22)
parataxis(tell-22, blind-fou-24)
nmod:poss(sun-27, wi-25)
case(wi-25, '-26)
dobj(blind-fou-24, sun-27)
det(Deil-30, the-29)
nsubjpass(lurkin-32, Deil-30)
auxpass(lurkin-32, was-31)
ccomp(tell-22, lurkin-32)
dobj(lurkin-32, there-34)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP
          (NP (NN day))
          (PP (IN like)
            (NP (NNS playhouse-scenes)))))
      (NP (DT the) (NN shore))
      (VP (VBD slid)
        (PP (IN past)
          (NP (PRP$ our) (JJ sleepy) (NNS eyes)))))
    (: ;)
    (S
      (PP (IN By)
        (NP (NN night)))
      (NP (DT those) (JJ soft) (, ,) (JJ lasceevious) (NNS stars))
      (VP (VBD leered)
        (PP (IN from)
          (NP (DT those) (NN velvet) (NNS skies)))))
    (, ,)
    (S
      (PP (IN In)
        (NP (NN port)))
      (PRN (-LRB- -LRB-)
        (S
          (NP (PRP we))
          (VP (VBD used)
            (NP (DT no) (NN cargo-steam))))
        (-RRB- -RRB-))
      (NP (PRP I))
      (VP (MD 'd)
        (VP (VB daunder)
          (PRT (RP down))
          (NP (DT the) (NNS streets)))))
    (: --)
    (S
      (NP
        (NP (DT An) (JJ ijjit) (NN grinnin))
        ('' ')
        (PP (IN in)
          (NP (DT a) (NN dream)))
        (PRN (: --)
          (PP (IN for)
            (NP
              (NP (NNS shells))
              (, an) ('' ')
              (NP
                (NP (NNS parrakeets))
                (, ,)
                (NP
                  (NP (NNP An) (POS '))
                  (NN walkin)))))
          ('' ') (: -))
        (NP (JJ sticks) (NN o))
        ('' '))
      (VP (VBD carved)
        (NP
          (NP (NN bamboo))
          (, an) ('' ')
          (PRN
            (S
              (NP (NN blowfish))
              (VP (VBD stuffed)
                (NP (DT an)
                  (S
                    (NP (POS '))
                    (VP (VBD dried)))))))
          (: --)
          (NP
            (NP (NNP Fillin) (POS '))
            (NP
              (NP
                (NP (PRP$ my) (NN bunk) (NN wi) (POS '))
                (NN rubbishry))
              (NP (DT the) (NNP Chief) (NN put) (NN overside)))))))
    (. .)))

case(day-2, By-1)
nmod:by(slid-7, day-2)
case(playhouse-scenes-4, like-3)
nmod:like(day-2, playhouse-scenes-4)
det(shore-6, the-5)
nsubj(slid-7, shore-6)
root(ROOT-0, slid-7)
case(eyes-11, past-8)
nmod:poss(eyes-11, our-9)
amod(eyes-11, sleepy-10)
nmod:past(slid-7, eyes-11)
case(night-14, By-13)
nmod:by(leered-20, night-14)
det(stars-19, those-15)
amod(stars-19, soft-16)
amod(stars-19, lasceevious-18)
nsubj(leered-20, stars-19)
parataxis(slid-7, leered-20)
case(skies-24, from-21)
det(skies-24, those-22)
compound(skies-24, velvet-23)
nmod:from(leered-20, skies-24)
case(port-27, In-26)
nmod:in(daunder-36, port-27)
nsubj(used-30, we-29)
parataxis(daunder-36, used-30)
neg(cargo-steam-32, no-31)
dobj(used-30, cargo-steam-32)
nsubj(daunder-36, I-34)
aux(daunder-36, 'd-35)
parataxis(slid-7, daunder-36)
compound:prt(daunder-36, down-37)
det(streets-39, the-38)
dobj(daunder-36, streets-39)
det(grinnin-43, An-41)
amod(grinnin-43, ijjit-42)
nsubj(carved-63, grinnin-43)
case(dream-47, in-45)
det(dream-47, a-46)
nmod:in(grinnin-43, dream-47)
case(shells-50, for-49)
nmod:for(grinnin-43, shells-50)
dep(shells-50, parrakeets-53)
nmod:poss(walkin-57, An-55)
case(An-55, '-56)
appos(parrakeets-53, walkin-57)
amod(o-61, sticks-60)
dep(grinnin-43, o-61)
parataxis(slid-7, carved-63)
dobj(carved-63, bamboo-64)
nsubj(stuffed-68, blowfish-67)
dep(bamboo-64, stuffed-68)
dobj(stuffed-68, an-69)
nsubj(dried-71, '-70)
dep(an-69, dried-71)
dep(bamboo-64, Fillin-73)
case(Fillin-73, '-74)
nmod:poss(wi-77, my-75)
compound(wi-77, bunk-76)
nmod:poss(rubbishry-79, wi-77)
case(wi-77, '-78)
dep(Fillin-73, rubbishry-79)
det(overside-83, the-80)
compound(overside-83, Chief-81)
compound(overside-83, put-82)
dep(rubbishry-79, overside-83)

(ROOT
  (S
    (ADVP (RB Till))
    (PRN (, ,)
      (S
        (PP (IN off)
          (NP
            (NP (NNP Sambawa) (NNP Head))
            (, ,)
            (NP (JJ Ye) (NN mind))))
        (, ,)
        (NP (PRP I))
        (VP (VBD heard)
          (SBAR
            (S
              (NP (DT a) (NN land-breeze))
              (VP (MD ca)))))
        ('' '))
      (, ,))
    (NP
      (NP
        (NP (NNP Milk-warm) (NNP wi) (POS '))
        (NN breath))
      (VP (VBN o) (`` ')
        (NP (NN spice) (DT an))
        ('' ')))
    (VP (VBZ bloom) (: :) (`` ``)
      (S
        (NP (NNP M'Andrew))
        (, ,)
        (VP (VB come)
          (NP (NN awa))))
      ('' '))
    (. !) ('' '')))

advmod(bloom-26, Till-1)
case(Head-5, off-3)
compound(Head-5, Sambawa-4)
nmod:off(heard-11, Head-5)
amod(mind-8, Ye-7)
appos(Head-5, mind-8)
nsubj(heard-11, I-10)
parataxis(bloom-26, heard-11)
det(land-breeze-13, a-12)
nsubj(ca-14, land-breeze-13)
ccomp(heard-11, ca-14)
compound(wi-18, Milk-warm-17)
nmod:poss(breath-20, wi-18)
case(wi-18, '-19)
nsubj(bloom-26, breath-20)
acl(breath-20, o-21)
dobj(o-21, spice-23)
dep(spice-23, an-24)
root(ROOT-0, bloom-26)
nsubj(come-31, M'Andrew-29)
ccomp(bloom-26, come-31)
dobj(come-31, awa-32)

(ROOT
  (S
    (NP
      (NP (NN Firm))
      (, ,)
      (ADJP (JJ clear))
      (, an) ('' ')
      (NP
        (NP (JJ low))
        (PRN (: --)
          (NP
            (NP (DT no) (NN haste))
            (, ,)
            (NP (DT no) (NN hate)))
          (: --))
        (SBAR
          (S
            (NP (DT the) (JJ ghostly) (NN whisper))
            (VP (VBD went)))))
      (, ,)
      (NP
        (NP
          (NP
            (NP (RB Just) (NN statin) (POS '))
            (NN eevidential) (NNS facts) (NNS beyon) ('' '))
          (NP (DT all) (NN argument)))
        (: :)
        (S (`` ``)
          (NP (PRP$ Your) (NN mither))
          (VP (VBZ 's)
            (NP
              (NP
                (NP (NNP God) (POS 's))
                (NP (DT a) (NN graspin) (POS '))
                (NNP deil))
              (, ,)
              (NP
                (NP (DT the) (NN shadow) (NN o) (POS '))
                (NN yoursel))))
          ('' ')))
      (, ,))
    (VP (VBD Got)
      (PRT (RP out))
      (NP
        (NP (NNP o) (POS '))
        (NNS books))
      (PP (IN by)
        (NP (JJ meenisters) (JJ clean) (NN daft)))
      (PP (IN on)
        (NP
          (NP (NNP Heaven))
          (, an) ('' ')
          (NP (NNP Hell)))))
    (. .)))

nsubj(Got-47, Firm-1)
amod(Firm-1, clear-3)
dep(Firm-1, low-6)
neg(haste-9, no-8)
dep(low-6, haste-9)
neg(hate-12, no-11)
appos(haste-9, hate-12)
det(whisper-16, the-14)
amod(whisper-16, ghostly-15)
nsubj(went-17, whisper-16)
acl:relcl(low-6, went-17)
advmod(statin-20, Just-19)
nmod:poss(beyon-24, statin-20)
case(statin-20, '-21)
compound(beyon-24, eevidential-22)
compound(beyon-24, facts-23)
appos(Firm-1, beyon-24)
det(argument-27, all-26)
dep(beyon-24, argument-27)
nmod:poss(mither-31, Your-30)
nsubj(deil-38, mither-31)
cop(deil-38, 's-32)
nmod:poss(deil-38, God-33)
case(God-33, 's-34)
det(graspin-36, a-35)
nmod:poss(deil-38, graspin-36)
case(graspin-36, '-37)
dep(beyon-24, deil-38)
det(o-42, the-40)
compound(o-42, shadow-41)
nmod:poss(yoursel-44, o-42)
case(o-42, '-43)
appos(deil-38, yoursel-44)
root(ROOT-0, Got-47)
compound:prt(Got-47, out-48)
nmod:poss(books-51, o-49)
case(o-49, '-50)
dobj(Got-47, books-51)
case(daft-55, by-52)
amod(daft-55, meenisters-53)
amod(daft-55, clean-54)
nmod:by(Got-47, daft-55)
case(Heaven-57, on-56)
nmod:on(Got-47, Heaven-57)
dep(Heaven-57, Hell-60)

(ROOT
  (FRAG
    (S
      (S
        (NP (PRP They))
        (ADVP (RB mak))
        (VP (`` ') (VBZ Him)
          (PP (IN in)
            (NP
              (NP (DT the) (NNP Broomielaw))
              (, ,)
              (NP
                (NP (NNP o) (POS '))
                (JJ Glasgie) (NN cold))
              (, an)))
          ('' ')
          (NP
            (NP (NN dirt))
            (, ,)
            (NP (DT A) (JJ jealous) (, ,) (JJ pridefu) ('' ') (NN fetich))
            (, ,)
            (NP
              (NP (NN lad))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (ADVP (RB only))
                    (ADJP (JJ strong)
                      (S
                        (VP (TO to)
                          (VP (VB hurt) (, ,)
                            (SBAR
                              (S
                                (NP (PRP Ye))
                                (VP (MD 'll) (RB not)
                                  (VP (VB go)
                                    (PRT (RP back))
                                    (PP (TO to)
                                      (NP (PRP Him)))
                                    (ADVP (RB again))))))))))))))
            (, an) ('' ')
            (VP (VBG kiss)
              (NP (PRP$ His) (JJ red-hot) (NN rod))))))
      (, ,)
      (CC But)
      (S
        (S
          (VP (VBN come)))
        (VP (VBP wi) (`` ')
          (ADJP (JJ Us))
          ('' '')
          (PRN (-LRB- -LRB-)
            (FRAG
              (NP (RB Now))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD were)
                    (VP (VBN _)
                      (S
                        (NP (PRP They))
                        (ADJP (JJ _)))))))
              (. ?))
            (-RRB- -RRB-)))))))

nsubj(Him-4, They-1)
advmod(Him-4, mak-2)
root(ROOT-0, Him-4)
case(Broomielaw-7, in-5)
det(Broomielaw-7, the-6)
nmod:in(Him-4, Broomielaw-7)
nmod:poss(cold-12, o-9)
case(o-9, '-10)
amod(cold-12, Glasgie-11)
appos(Broomielaw-7, cold-12)
dobj(Him-4, dirt-15)
det(fetich-22, A-17)
amod(fetich-22, jealous-18)
amod(fetich-22, pridefu-20)
appos(dirt-15, fetich-22)
appos(dirt-15, lad-24)
nsubj(strong-29, lad-24)
nsubj:xsubj(hurt-31, lad-24)
ref(lad-24, that-26)
cop(strong-29, 's-27)
advmod(strong-29, only-28)
acl:relcl(lad-24, strong-29)
mark(hurt-31, to-30)
xcomp(strong-29, hurt-31)
nsubj(go-36, Ye-33)
aux(go-36, 'll-34)
neg(go-36, not-35)
ccomp(hurt-31, go-36)
compound:prt(go-36, back-37)
case(Him-39, to-38)
nmod:to(go-36, Him-39)
advmod(go-36, again-40)
acl(dirt-15, kiss-43)
nmod:poss(rod-46, His-44)
amod(rod-46, red-hot-45)
dobj(kiss-43, rod-46)
cc(Him-4, But-48)
csubj(wi-50, come-49)
conj:but(Him-4, wi-50)
xcomp(wi-50, Us-52)
dep(wi-50, Now-55)
nsubjpass(_-59, who-57)
auxpass(_-59, were-58)
dep(Now-55, _-59)
nsubj(_-61, They-60)
xcomp(_-59, _-61)

(ROOT
  (S
    (S (`` ``)
      (NP (DT an))
      ('' ')
      (VP (VB know)
        (NP
          (NP (DT the) (NNP Leevin) (POS '))
          (NN God))))
    (PRN (, ,)
      (S
        (NP (DT That))
        (VP (VBZ does) (RB not)
          (VP
            (VP (VB kipper)
              (NP
                (NP (NNS souls))
                (PP (IN for)
                  (NP (NN sport)))))
            (CC or)
            (VP (VB break)
              (NP
                (NP (DT a) (NN life))
                (PP (IN in)
                  (NP (NN jest))))))))
      (, ,))
    (CC But)
    (S
      (VP (VBZ swells)
        (NP (DT the)
          (NP
            (NP (NN ripenin) (POS '))
            (NNS cocoanuts))
          (, an) ('' ')
          (NP
            (NP (NNS ripes))
            (NP
              (NP (DT the) (NN woman) (POS 's))
              (NN breast))))))
    (. .) ('' '')))

nsubj(know-4, an-2)
nsubj(swells-25, an-2)
root(ROOT-0, know-4)
det(Leevin-6, the-5)
nmod:poss(God-8, Leevin-6)
case(Leevin-6, '-7)
dobj(know-4, God-8)
nsubj(kipper-13, That-10)
nsubj(break-18, That-10)
aux(kipper-13, does-11)
neg(kipper-13, not-12)
dep(know-4, kipper-13)
dobj(kipper-13, souls-14)
case(sport-16, for-15)
nmod:for(souls-14, sport-16)
cc(kipper-13, or-17)
dep(know-4, break-18)
conj:or(kipper-13, break-18)
det(life-20, a-19)
dobj(break-18, life-20)
case(jest-22, in-21)
nmod:in(life-20, jest-22)
cc(know-4, But-24)
conj:but(know-4, swells-25)
det(cocoanuts-29, the-26)
nmod:poss(cocoanuts-29, ripenin-27)
case(ripenin-27, '-28)
dobj(swells-25, cocoanuts-29)
dep(cocoanuts-29, ripes-32)
det(woman-34, the-33)
nmod:poss(breast-36, woman-34)
case(woman-34, 's-35)
dep(ripes-32, breast-36)

(ROOT
  (S
    (S
      (NP (NNP An) (POS '))
      (NP (EX there)))
    (PRN
      (S
        (NP (PRP it))
        (VP
          (VP (VBD stopped))
          (: :)
          (NP
            (NP (NN cut))
            (ADVP (IN off))
            (: :)
            (NP (RB no) (JJR more))
            (: ;)
            (NP (DT that) (JJ quiet) (, ,) (JJ certain) (NN voice))
            (: --)
            (PP (IN For)
              (NP (PRP me))))))
      (, ,))
    (NP (CD six) (NNS months))
    (VP (VBP o) ('' ')
      (NP (NN twenty-four))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB leave)
            (CC or)
            (VB take)
            (PP (IN at)
              (NP (NN choice)))))))
    (. .)))

dep(there-3, An-1)
case(An-1, '-2)
dep(o-24, there-3)
nsubj(stopped-5, it-4)
parataxis(o-24, stopped-5)
dobj(stopped-5, cut-7)
advmod(cut-7, off-8)
neg(more-11, no-10)
dep(cut-7, more-11)
det(voice-17, that-13)
amod(voice-17, quiet-14)
amod(voice-17, certain-16)
dep(cut-7, voice-17)
case(me-20, For-19)
nmod:for(cut-7, me-20)
nummod(months-23, six-22)
nsubj(o-24, months-23)
root(ROOT-0, o-24)
dobj(o-24, twenty-four-26)
mark(leave-29, to-28)
advcl(o-24, leave-29)
cc(leave-29, or-30)
advcl(o-24, take-31)
conj:or(leave-29, take-31)
case(choice-33, at-32)
nmod:at(leave-29, choice-33)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (PP (IN on)
          (NP (PRP me)))
        (PP (IN like)
          (NP (DT a) (NN thunderclap)))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBD racked)
        (NP (PRP me))
        (PP (IN through)
          (NP
            (NP (DT an))
            ('' ')
            (PP (IN through)
              (PRN (: --)
                (S
                  (NP (NN Temptation) (NN past))
                  (NP
                    (NP
                      (NP
                        (NP (DT the) (NN show) (NN o) (POS '))
                        (NN speech))
                      (, ,)
                      (NP (NN unnameable))
                      (, an) ('' '))
                    (ADJP (JJ new))))
                (: --))
              (NP (DT The) (NNP Sin)))))
        (PP (IN against)
          (NP (DT the) (JJ Holy) (NN Ghost)))))
    (. ?)))

nsubj(me-4, 'T-1)
cop(me-4, was-2)
case(me-4, on-3)
root(ROOT-0, me-4)
case(thunderclap-7, like-5)
det(thunderclap-7, a-6)
nmod:like(me-4, thunderclap-7)
nsubj(racked-10, it-9)
parataxis(me-4, racked-10)
dobj(racked-10, me-11)
case(an-13, through-12)
nmod:through(racked-10, an-13)
case(Sin-31, through-15)
compound(past-18, Temptation-17)
dep(speech-23, past-18)
det(o-21, the-19)
compound(o-21, show-20)
nmod:poss(speech-23, o-21)
case(o-21, '-22)
dep(Sin-31, speech-23)
appos(speech-23, unnameable-25)
amod(speech-23, new-28)
det(Sin-31, The-30)
nmod:through(an-13, Sin-31)
case(Ghost-35, against-32)
det(Ghost-35, the-33)
amod(Ghost-35, Holy-34)
nmod:against(racked-10, Ghost-35)

(ROOT
  (S (: ...)
    (NP
      (NP (NNP An) (POS '))
      (PP (IN under)
        (NP
          (NP (DT all))
          (, ,)
          (NP (PRP$ our)))))
    (VP (VBD screw))
    (. .)))

nsubj(screw-8, An-2)
case(An-2, '-3)
case(all-5, under-4)
nmod:under(An-2, all-5)
appos(all-5, our-7)
root(ROOT-0, screw-8)

(ROOT
  (S
    (S
      (NP (DT That) (NN storm))
      (VP
        (VP (VBD blew)
          (PP (IN by)))
        (CC but)
        (VP (VBD left)
          (PP (IN behind)
            (NP
              (NP (PRP$ her) (NN anchor-shiftin) (POS '))
              (NN swell))))))
    (, ,)
    (NP (PRP Thou))
    (VP (VBP knowest)
      (SBAR
        (S
          (NP (PDT all)
            (NP (PRP$ my) (NN heart))
            (, an) ('' ')
            (NP
              (NP (NN mind))
              (, ,)
              (NP (JJ Thou) (NN knowest))
              (, ,)
              (NP (NNP Lord))
              (, ,)
              (NP (PRP I))))
          (VP (VBD fell)))))
    (. .)))

det(storm-2, That-1)
nsubj(blew-3, storm-2)
nsubj(left-6, storm-2)
ccomp(knowest-14, blew-3)
nmod(blew-3, by-4)
cc(blew-3, but-5)
conj:but(blew-3, left-6)
ccomp(knowest-14, left-6)
case(swell-11, behind-7)
nmod:poss(anchor-shiftin-9, her-8)
nmod:poss(swell-11, anchor-shiftin-9)
case(anchor-shiftin-9, '-10)
nmod:behind(left-6, swell-11)
nsubj(knowest-14, Thou-13)
root(ROOT-0, knowest-14)
dep(heart-17, all-15)
nmod:poss(heart-17, my-16)
nsubj(fell-28, heart-17)
dep(heart-17, mind-20)
amod(knowest-23, Thou-22)
appos(mind-20, knowest-23)
appos(mind-20, Lord-25)
appos(mind-20, I-27)
ccomp(knowest-14, fell-28)

(ROOT
  (S
    (NP
      (NP (NNP Third))
      (PP (IN on)
        (NP (DT the) (NNP _) (NNP Mary) (NNP Gloster))))
    (VP
      (VP (VBD _)
        (ADVP (RB then)))
      (, ,)
      (CC and)
      (VP
        (NP (RB first) (DT that) (NN night))
        (PP (IN in)
          (NP (NNP Hell)))))
    (. !)))

nsubj(_-7, Third-1)
case(Gloster-6, on-2)
det(Gloster-6, the-3)
compound(Gloster-6, _-4)
compound(Gloster-6, Mary-5)
nmod:on(Third-1, Gloster-6)
root(ROOT-0, _-7)
advmod(_-7, then-8)
cc(_-7, and-10)
advmod(night-13, first-11)
det(night-13, that-12)
conj:and(_-7, night-13)
case(Hell-15, in-14)
nmod:in(night-13, Hell-15)

(ROOT
  (S
    (ADVP (RB Yet))
    (SINV
      (VP (VBD was)
        (VP (VBN Thy)
          (NP (NN hand))
          (PP (IN beneath)
            (NP (PRP$ my) (NN head)))
          (, ,)
          (PP (IN about)
            (NP (PRP$ my) (NNS feet)))))
      (NP
        (NP (NNP Thy) (NN care))
        (: --)
        (NP
          (NP
            (NP (NNP Fra) (POS '))
            (NNP Deli))
          (ADJP (JJ clear)
            (PP (TO to)
              (NP
                (NP (NNP Torres) (NNP Strait))
                (, ,)
                (NP
                  (NP (DT the) (NN trial) (NN o) (POS '))
                  (NN despair))))))))
    (, ,)
    (CC But)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBD touched))))
      (NP (DT the) (NNP Barrier) (NNP Reef) (NNP Thy))
      (VP (VBP answer)
        (PP (TO to)
          (NP (PRP$ my) (NN prayer)))))
    (. !)))

advmod(Thy-3, Yet-1)
auxpass(Thy-3, was-2)
root(ROOT-0, Thy-3)
dobj(Thy-3, hand-4)
case(head-7, beneath-5)
nmod:poss(head-7, my-6)
nmod:beneath(Thy-3, head-7)
case(feet-11, about-9)
nmod:poss(feet-11, my-10)
nmod:about(Thy-3, feet-11)
compound(care-13, Thy-12)
nsubjpass(Thy-3, care-13)
nmod:poss(Deli-17, Fra-15)
case(Fra-15, '-16)
dep(care-13, Deli-17)
amod(Deli-17, clear-18)
case(Strait-21, to-19)
compound(Strait-21, Torres-20)
nmod:to(clear-18, Strait-21)
det(o-25, the-23)
compound(o-25, trial-24)
nmod:poss(despair-27, o-25)
case(o-25, '-26)
appos(Strait-21, despair-27)
cc(Thy-3, But-29)
advmod(touched-32, when-30)
nsubj(touched-32, we-31)
advcl(answer-37, touched-32)
det(Thy-36, the-33)
compound(Thy-36, Barrier-34)
compound(Thy-36, Reef-35)
nsubj(answer-37, Thy-36)
conj:but(Thy-3, answer-37)
case(prayer-40, to-38)
nmod:poss(prayer-40, my-39)
nmod:to(answer-37, prayer-40)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP
        (VP (VBD dared) (RB not)
          (VP (VB run)
            (NP (DT that) (NN sea))
            (PP (IN by)
              (NP (NN night)))))
        (CC but)
        (VP (VBD lay)
          (NP (DT an)
            (S
              (NP (POS '))
              (VP (VBD held)
                (NP (PRP$ our) (NN fire))))))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (NN I))
    (VP (VBD was)
      (VP (VBN drowsin) ('' ')
        (PP (IN on)
          (NP
            (NP
              (NP (DT the) (NN hatch))
              (: --)
              (ADJP (JJ sick)))
            (: --)
            (NP
              (NP
                (NP
                  (NP (JJ sick) (NN wi) (POS '))
                  (NP (RB doubt) (DT an)))
                (POS '))
              (NN tire))
            (: :)))
        ('' '')
        (S
          (VP (VBG _)
            (S
              (ADJP (RBR Better))
              (NP
                (NP (DT the) (NN sight))
                (PP (IN of)
                  (NP
                    (NP (NNS eyes))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP see)
                          (PP (IN than)
                            (NP
                              (NP
                                (NP (NN wanderin) (POS '))
                                (NN o) (POS '))
                              (NN desire))))))))))))))
    (. !)))

nsubj(dared-2, We-1)
nsubj(lay-10, We-1)
ccomp(drowsin-21, dared-2)
neg(dared-2, not-3)
dep(dared-2, run-4)
det(sea-6, that-5)
dobj(run-4, sea-6)
case(night-8, by-7)
nmod:by(run-4, night-8)
cc(dared-2, but-9)
conj:but(dared-2, lay-10)
ccomp(drowsin-21, lay-10)
dobj(lay-10, an-11)
nsubj(held-13, '-12)
dep(an-11, held-13)
nmod:poss(fire-15, our-14)
dobj(held-13, fire-15)
nmod:poss(I-19, An-17)
case(An-17, '-18)
nsubjpass(drowsin-21, I-19)
auxpass(drowsin-21, was-20)
root(ROOT-0, drowsin-21)
case(hatch-25, on-23)
det(hatch-25, the-24)
nmod:on(drowsin-21, hatch-25)
amod(hatch-25, sick-27)
amod(wi-30, sick-29)
nmod:poss(tire-35, wi-30)
case(wi-30, '-31)
advmod(an-33, doubt-32)
dep(wi-30, an-33)
case(wi-30, '-34)
dep(hatch-25, tire-35)
xcomp(drowsin-21, _-38)
xcomp(_-38, Better-39)
det(sight-41, the-40)
dep(Better-39, sight-41)
case(eyes-43, of-42)
nmod:of(sight-41, eyes-43)
nsubj(see-45, eyes-43)
ref(eyes-43, that-44)
acl:relcl(eyes-43, see-45)
case(desire-51, than-46)
nmod:poss(o-49, wanderin-47)
case(wanderin-47, '-48)
nmod:poss(desire-51, o-49)
case(o-49, '-50)
nmod:than(see-45, desire-51)

(ROOT
  (S
    (NP (NNP _) ('' '') (NNP Ye))
    (VP (VB mind)
      (NP (DT that) (NN word)))
    (. ?)))

compound(Ye-3, _-1)
nsubj(mind-4, Ye-3)
root(ROOT-0, mind-4)
det(word-6, that-5)
dobj(mind-4, word-6)

(ROOT
  (S
    (S
      (VP
        (VP (VBN Clear)
          (PP (IN as)
            (NP
              (NP (PRP$ our) (NNS gongs))
              (: --)
              (ADVP (RB again))
              (, ,)
              (NP (DT an))))
          ('' ')
          (ADVP (RB once) (RB again)))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (NNP rippin) (POS '))
            (VP
              (ADVP (RB down)
                (PP (IN through)
                  (NP (NN coral-trash))))
              (VBD ran)
              (PRT (RP out))
              (NP
                (NP
                  (NP (PRP$ our) (NN moorin) (POS '))
                  (JJ -) (NN chain))
                (: ;)
                (NP (NNP An))
                ('' '))
              (PP (IN by)
                (NP (NNP Thy) (NNP Grace))))))))
    (NP (PRP I))
    (VP (VBD had)
      (NP (DT the) (NN Light)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP$ my) (NN duty) (NN plain)))))))
    (. .)))

dep(had-33, Clear-1)
case(gongs-4, as-2)
nmod:poss(gongs-4, our-3)
nmod:as(Clear-1, gongs-4)
advmod(gongs-4, again-6)
appos(gongs-4, an-8)
advmod(again-11, once-10)
advmod(Clear-1, again-11)
advmod(ran-19, When-13)
nsubj(ran-19, rippin-14)
case(rippin-14, '-15)
advmod(ran-19, down-16)
case(coral-trash-18, through-17)
nmod:through(down-16, coral-trash-18)
advcl(Clear-1, ran-19)
compound:prt(ran-19, out-20)
nmod:poss(moorin-22, our-21)
nmod:poss(chain-25, moorin-22)
case(moorin-22, '-23)
amod(chain-25, --24)
dobj(ran-19, chain-25)
dep(chain-25, An-27)
case(Grace-31, by-29)
compound(Grace-31, Thy-30)
nmod:by(ran-19, Grace-31)
nsubj(had-33, I-32)
root(ROOT-0, had-33)
det(Light-35, the-34)
dobj(had-33, Light-35)
mark(see-37, to-36)
acl(Light-35, see-37)
nmod:poss(plain-40, my-38)
compound(plain-40, duty-39)
dobj(see-37, plain-40)

(ROOT
  (S
    (NP
      (NP (NNP Light))
      (PP (IN on)
        (NP (DT the) (JJ engine-room)
          (PRN (: --)
            (ADVP (RB no) (JJR more))
            (: --))
          (JJ bright)))
      (PP (IN as)
        (NP (PRP$ our) (NNS carbons))))
    (VP (VBP burn))
    (. .)))

nsubj(burn-13, Light-1)
case(bright-9, on-2)
det(bright-9, the-3)
amod(bright-9, engine-room-4)
neg(more-7, no-6)
dep(bright-9, more-7)
nmod:on(Light-1, bright-9)
case(carbons-12, as-10)
nmod:poss(carbons-12, our-11)
nmod:as(Light-1, carbons-12)
root(ROOT-0, burn-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN lost)
        (NP (PRP it))
        (SBAR (IN since)
          (FRAG
            (NP
              (NP (DT a) (CD thousand))
              (SBAR
                (FRAG
                  (NP (NNS times))
                  (, ,)
                  (CC but)
                  (FRAG
                    (ADVP (RB never))
                    (NP (JJ past) (NN return) (. .))
                    (. .))
                  (. .)))
              (. .))))))
    (. .) (. .)))

nsubj(lost-3, I-1)
aux(lost-3, 've-2)
root(ROOT-0, lost-3)
dobj(lost-3, it-4)
mark(thousand-7, since-5)
det(thousand-7, a-6)
advcl(lost-3, thousand-7)
dep(thousand-7, times-8)
cc(times-8, but-10)
neg(return-13, never-11)
amod(return-13, past-12)
dep(times-8, return-13)

(ROOT
  (S
    (VP (VB Obsairve))
    (. .)))

root(ROOT-0, Obsairve-1)

(ROOT
  (S
    (S
      (NP (NNP Per))
      (VP (VBD annum)
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD 'll)
              (VP (VB have)
                (NP
                  (NP (RB here) (CD two))
                  (ADVP
                    (NP (CD thousand) (NNS souls))
                    (IN aboard)))
                (PRN (: --)
                  (S
                    (VP (VB Think))))
                (SBAR (RB not)
                  (S
                    (NP (PRP I))
                    (VP (VBP dare)
                      (S
                        (VP (TO to)
                          (VP (VB justify)
                            (NP (PRP myself))
                            (PP (IN before)
                              (NP (DT the) (NNP Lord)))))))))))))))
    (, ,)
    (CC But)
    (S
      (SBAR
        (PRN (: --)
          (S
            (NP (JJ average) (JJ fifteen) (NN hunder) (NNS souls))
            (NP
              (NP
                (NP (JJ safe-borne) (NN fra) (POS '))
                (NN port))
              (PP (TO to)
                (NP (NN port)))))
          (: --))
        (S
          (NP (PRP I))
          (VP (VBZ _))))
      (VP (VBP am)
        (VP (VBG _)
          (NP
            (NP (NNP o) (POS '))
            (NN service))
          (PP (TO to)
            (NP (PRP$ my) (NN kind))))))
    (. .)))

nsubj(annum-2, Per-1)
root(ROOT-0, annum-2)
nsubj(have-5, we-3)
aux(have-5, 'll-4)
ccomp(annum-2, have-5)
advmod(two-7, here-6)
dobj(have-5, two-7)
nummod(souls-9, thousand-8)
advmod(two-7, souls-9)
case(souls-9, aboard-10)
parataxis(have-5, Think-12)
dep(dare-15, not-13)
nsubj(dare-15, I-14)
nsubj:xsubj(justify-17, I-14)
dep(have-5, dare-15)
mark(justify-17, to-16)
xcomp(dare-15, justify-17)
dobj(justify-17, myself-18)
case(Lord-21, before-19)
det(Lord-21, the-20)
nmod:before(justify-17, Lord-21)
cc(annum-2, But-23)
amod(souls-28, average-25)
amod(souls-28, fifteen-26)
compound(souls-28, hunder-27)
dep(port-32, souls-28)
amod(fra-30, safe-borne-29)
nmod:poss(port-32, fra-30)
case(fra-30, '-31)
dep(_-37, port-32)
case(port-34, to-33)
nmod:to(port-32, port-34)
nsubj(_-37, I-36)
csubj(_-39, _-37)
aux(_-39, am-38)
conj:But(annum-2, _-39)
nmod:poss(service-42, o-40)
case(o-40, '-41)
dobj(_-39, service-42)
case(kind-45, to-43)
nmod:poss(kind-45, my-44)
nmod:to(_-39, kind-45)

(ROOT
  (SQ (MD Ye)
    (NP (NN wadna))
    (VP (VB blame)
      (NP (DT the) (NN thought)))
    (. ?)))

aux(blame-3, Ye-1)
nsubj(blame-3, wadna-2)
root(ROOT-0, blame-3)
det(thought-5, the-4)
dobj(blame-3, thought-5)

(ROOT
  (S
    (S
      (VP (VBG Maybe)
        (S
          (NP (PRP they))
          (NP
            (NP (NN steam))
            (PP (IN from)
              (NP
                (NP (NN grace))
                (PP (TO to)
                  (NP (NN wrath)))))))
        (: --)
        (PP (TO to)
          (NP (NN sin)))
        (PP (IN by)
          (NP
            (NP (NN folly))
            (VP (VBN led))))))
    (, ,)
    (PRN (: --)
      (S
        (NP (PRP It))
        (VP (VBZ isna)
          (S
            (NP (PRP mine))
            (VP (TO to)
              (VP (VB judge)
                (NP (PRP$ their) (NN path)))))))
      (: --))
    (NP (PRP$ their) (NNS lives))
    (VP (VBP are)
      (PP (IN on)
        (NP (PRP$ my) (NN head))))
    (. .)))

dep(head-29, Maybe-1)
nsubj(steam-3, they-2)
xcomp(Maybe-1, steam-3)
case(grace-5, from-4)
nmod:from(steam-3, grace-5)
case(wrath-7, to-6)
nmod:to(grace-5, wrath-7)
case(sin-10, to-9)
nmod:to(Maybe-1, sin-10)
case(folly-12, by-11)
nmod:by(Maybe-1, folly-12)
acl(folly-12, led-13)
nsubj(isna-17, It-16)
parataxis(head-29, isna-17)
dobj(isna-17, mine-18)
nsubj:xsubj(judge-20, mine-18)
mark(judge-20, to-19)
xcomp(isna-17, judge-20)
nmod:poss(path-22, their-21)
dobj(judge-20, path-22)
nmod:poss(lives-25, their-24)
nsubj(head-29, lives-25)
cop(head-29, are-26)
case(head-29, on-27)
nmod:poss(head-29, my-28)
root(ROOT-0, head-29)

(ROOT
  (NP
    (NP
      (NP (NNP Mine))
      (PP (IN at)
        (NP (DT the) (JJ last))))
    (: --)
    (NP
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT all))
          (VP (VBZ is)
            (VP (VBN done)
              (SBAR
                (S
                  (NP (PRP it))
                  (ADVP (DT all))
                  (VP (VBZ comes)
                    (PRT (RP back))
                    (PP (TO to)
                      (NP (PRP me))))))))))
      (, ,)
      (NP
        (NP (DT The) (NN fault))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ leaves)
              (NP
                (NP
                  (QP (CD six) (CD thousand))
                  (NN ton))
                (ADVP
                  (NP (DT a) (NN log))
                  (PP (IN upon)
                    (NP (DT the) (NN sea))))))))))
    (. .)))

root(ROOT-0, Mine-1)
case(last-4, at-2)
det(last-4, the-3)
nmod:at(Mine-1, last-4)
advmod(done-9, when-6)
nsubjpass(done-9, all-7)
auxpass(done-9, is-8)
dep(fault-18, done-9)
nsubj(comes-12, it-10)
advmod(comes-12, all-11)
ccomp(done-9, comes-12)
compound:prt(comes-12, back-13)
case(me-15, to-14)
nmod:to(comes-12, me-15)
det(fault-18, The-17)
dep(Mine-1, fault-18)
nsubj(leaves-20, fault-18)
ref(fault-18, that-19)
acl:relcl(fault-18, leaves-20)
compound(thousand-22, six-21)
nummod(ton-23, thousand-22)
dobj(leaves-20, ton-23)
det(log-25, a-24)
advmod(ton-23, log-25)
case(sea-28, upon-26)
det(sea-28, the-27)
nmod:upon(log-25, sea-28)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD 'll)
        (VP (VB tak) ('' ')
          (NP
            (NP (CD one) (NN stretch))
            (: --)
            (NP (CD three) (NNS weeks))
            (, an) ('' ')
            (ADJP (JJ odd)
              (PP (IN by)
                (NP
                  (NP
                    (NP (DT any) (NN road))
                    (SBAR
                      (S
                        (NP (PRP ye))
                        (VP (VB steer)))))
                  (: --)
                  (NP
                    (NP
                      (NP (NNP Fra) (POS '))
                      (NNP Cape) (NNP Town))
                    (ADVP (JJ east)
                      (PP (TO to)
                        (NP (NNP Wellington))))))))))))
    (: --)
    (S
      (NP (PRP ye))
      (VP (VBP need)
        (NP (DT an) (NN engineer))))
    (. .)))

nsubj(tak-3, We-1)
aux(tak-3, 'll-2)
root(ROOT-0, tak-3)
nummod(stretch-6, one-5)
dobj(tak-3, stretch-6)
nummod(weeks-9, three-8)
dep(stretch-6, weeks-9)
amod(stretch-6, odd-12)
case(road-15, by-13)
det(road-15, any-14)
nmod:by(odd-12, road-15)
nsubj(steer-17, ye-16)
acl:relcl(road-15, steer-17)
nmod:poss(Town-22, Fra-19)
case(Fra-19, '-20)
compound(Town-22, Cape-21)
dep(road-15, Town-22)
advmod(Town-22, east-23)
case(Wellington-25, to-24)
nmod:to(east-23, Wellington-25)
nsubj(need-28, ye-27)
parataxis(tak-3, need-28)
det(engineer-30, an-29)
dobj(need-28, engineer-30)

(ROOT
  (S
    (NP (NN Fail))
    (ADVP (RB there))
    (PRN (: --)
      (S
        (NP (PRP ye))
        (VP (VBP 've)
          (NP (NN time)
            (S
              (VP (TO to)
                (VP (VB weld)
                  (NP (PRP$ your) (NN shaft))))))))
      (: --))
    (NP (NN ay))
    (, ,)
    (S
      (VP (VB eat)
        (NP (PRP it))))
    (, ,)
    (VP (VBP ere)
      (SBAR
        (S
          (NP (PRP ye))
          (VP (VBP 're)
            (ADJP (JJ spoke))))))
    (: ;)
    (S (CC Or)
      (VP (VB make)
        (NP
          (NP
            (NP (NNP Kerguelen))
            (PP (IN under)
              (NP (NN sail))))
          (: --)
          (NP
            (NP (CD three) (NNS jiggers))
            (VP (VBN burned)
              (NP
                (NP (NNP wi) (POS '))
                (NN smoke)))))))
    (. !)))

nsubj(ere-17, Fail-1)
advmod(ere-17, there-2)
nsubj('ve-5, ye-4)
parataxis(ere-17, 've-5)
dobj('ve-5, time-6)
mark(weld-8, to-7)
acl(time-6, weld-8)
nmod:poss(shaft-10, your-9)
dobj(weld-8, shaft-10)
nsubj(ere-17, ay-12)
ccomp(ere-17, eat-14)
dobj(eat-14, it-15)
root(ROOT-0, ere-17)
nsubj(spoke-20, ye-18)
cop(spoke-20, 're-19)
ccomp(ere-17, spoke-20)
cc(make-23, Or-22)
parataxis(ere-17, make-23)
dobj(make-23, Kerguelen-24)
case(sail-26, under-25)
nmod:under(Kerguelen-24, sail-26)
nummod(jiggers-29, three-28)
dep(Kerguelen-24, jiggers-29)
acl(jiggers-29, burned-30)
nmod:poss(smoke-33, wi-31)
case(wi-31, '-32)
dobj(burned-30, smoke-33)

(ROOT
  (S
    (ADVP
      (NP
        (NP (NNP An) (POS '))
        (NN home))
      (RB again))
    (, ,)
    (NP
      (NP (DT the) (NNP Rio) (NN run))
      (: :)
      (SBAR
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP
                (NP (DT no) (NN child) (POS 's))
                (NN play)
                (S
                  (VP (TO to)
                    (VP (VB go)
                      (NP (NNP Steamin) (POS '))
                      (PP (TO to)
                        (NP (NN bell))))))))))
        (SBAR (IN for)
          (S
            (NP
              (NP
                (NP (CD fourteen) (NNS days))
                (NP
                  (NP (NNP o) (POS '))
                  (NN snow)))
              (, an) ('' ')
              (NP (JJ floe) (DT an))
              ('' ')
              (NP
                (NP (NN blow))
                (: --)
                (NP
                  (NP (DT The)
                    (ADJP (JJ bergs)
                      (PP (IN like)
                        (NP (NNS kelpies))))
                    (NN overside))
                  (NP (DT that) (NN girn))))
              (, an) ('' '))
            (VP (VBP turn)))))
      (, an) ('' '))
    (VP (VBP shift)
      (SBAR
        (S
          (NP
            (NP (NNP Whaur))
            (, ,)
            (NP
              (NP (NN grindin) (POS '))
              (JJ like)
              (NP (DT the) (NNP Mills) (NN o) (POS '))
              (NNP God))
            (, ,))
          (VP (VBZ goes)
            (PP (IN by)
              (NP (DT the) (JJ big) (NNP South) (NN drift)))))))
    (. .)))

nmod:poss(home-3, An-1)
case(An-1, '-2)
nmod:npmod(again-4, home-3)
advmod(shift-47, again-4)
det(run-8, the-6)
compound(run-8, Rio-7)
nsubj(shift-47, run-8)
nsubj(play-15, it-10)
cop(play-15, 's-11)
neg(child-13, no-12)
nmod:poss(play-15, child-13)
case(child-13, 's-14)
dep(run-8, play-15)
mark(go-17, to-16)
acl(play-15, go-17)
dobj(go-17, Steamin-18)
case(Steamin-18, '-19)
case(bell-21, to-20)
nmod:to(go-17, bell-21)
mark(turn-44, for-22)
nummod(days-24, fourteen-23)
nsubj(turn-44, days-24)
nmod:poss(snow-27, o-25)
case(o-25, '-26)
dep(days-24, snow-27)
dep(days-24, floe-30)
dep(floe-30, an-31)
dep(days-24, blow-33)
det(overside-39, The-35)
amod(overside-39, bergs-36)
case(kelpies-38, like-37)
nmod:like(bergs-36, kelpies-38)
dep(blow-33, overside-39)
det(girn-41, that-40)
dep(overside-39, girn-41)
dep(play-15, turn-44)
root(ROOT-0, shift-47)
nsubj(goes-59, Whaur-48)
nmod:poss(God-57, grindin-50)
case(grindin-50, '-51)
amod(God-57, like-52)
det(o-55, the-53)
compound(o-55, Mills-54)
nmod:poss(God-57, o-55)
case(o-55, '-56)
appos(Whaur-48, God-57)
ccomp(shift-47, goes-59)
case(drift-64, by-60)
det(drift-64, the-61)
amod(drift-64, big-62)
compound(drift-64, South-63)
nmod:by(goes-59, drift-64)

(ROOT
  (S (-LRB- -LRB-)
    (S
      (NP
        (NP
          (NP (NNP Hail))
          (, ,)
          (NP (NN snow)))
        (, an) ('' ')
        (NP
          (NP (NN ice))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP praise)
                (NP (DT the) (NN Lord))))))
        (: :))
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN met)
          (NP (PRP them))
          (PP (IN at)
            (NP (PRP$ their) (NN work))))))
    (, ,)
    (S
      (NP (NNP An) (POS '))
      (VP (VBD wished)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD had)
              (NP (NN anither) (NN route)))))))
    (CC or)
    (S
      (NP (PRP they))
      (VP (VBP anither)
        (NP (NN kirk))))
    (. .) (-RRB- -RRB-)))

nsubj(met-15, Hail-2)
appos(Hail-2, snow-4)
dep(Hail-2, ice-7)
nsubj(praise-9, ice-7)
ref(ice-7, that-8)
acl:relcl(ice-7, praise-9)
det(Lord-11, the-10)
dobj(praise-9, Lord-11)
nsubj(met-15, I-13)
aux(met-15, 've-14)
root(ROOT-0, met-15)
dobj(met-15, them-16)
case(work-19, at-17)
nmod:poss(work-19, their-18)
nmod:at(met-15, work-19)
nsubj(wished-23, An-21)
case(An-21, '-22)
conj:or(met-15, wished-23)
nsubj(had-25, we-24)
ccomp(wished-23, had-25)
compound(route-27, anither-26)
dobj(had-25, route-27)
cc(met-15, or-28)
nsubj(anither-30, they-29)
conj:or(met-15, anither-30)
dobj(anither-30, kirk-31)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Yon) (POS 's))
        (NN strain))
      (, ,)
      (NP (JJ hard) (NN strain))
      (, ,))
    (VP
      (VP (VBP o) (`` ')
        (NP (NN head) (DT an))
        ('' '))
      (VP (NN hand) (, ,)
        (SBAR (IN for)
          (S
            (SBAR (IN though)
              (S
                (NP (NNP Thy) (NNP Power))
                (VP (VBZ brings)
                  (NP (DT All) (NN skill)
                    (S
                      (VP (TO to)
                        (VP (VB naught))))))))
            (, ,)
            (NP (PRP Ye))
            (VP (MD 'll)
              (VP (VB understand)
                (SBAR
                  (S
                    (NP (DT a) (NN man))
                    (VP (MD must)
                      (VP (VB think)
                        (NP
                          (NP (NNP o) (POS '))
                          (NNS things))))))))))))
    (. .)))

nmod:poss(strain-3, Yon-1)
case(Yon-1, 's-2)
nsubj(o-8, strain-3)
amod(strain-6, hard-5)
appos(strain-3, strain-6)
root(ROOT-0, o-8)
dobj(o-8, head-10)
dep(head-10, an-11)
dep(o-8, hand-13)
mark(understand-27, for-15)
mark(brings-19, though-16)
compound(Power-18, Thy-17)
nsubj(brings-19, Power-18)
advcl(understand-27, brings-19)
det(skill-21, All-20)
dobj(brings-19, skill-21)
mark(naught-23, to-22)
acl(skill-21, naught-23)
nsubj(understand-27, Ye-25)
aux(understand-27, 'll-26)
advcl(hand-13, understand-27)
det(man-29, a-28)
nsubj(think-31, man-29)
aux(think-31, must-30)
ccomp(understand-27, think-31)
nmod:poss(things-34, o-32)
case(o-32, '-33)
dobj(think-31, things-34)

(ROOT
  (S (RB Then)
    (PRN (, ,)
      (S
        (PP (IN at)
          (NP (DT the) (JJ last)))
        (, ,)
        (NP (PRP we))
        (VP (MD 'll)
          (VP (VB get)
            (PP (TO to)
              (NP
                (NP (JJ port) (DT an))
                ('' ')
                (SBAR
                  (S
                    (VP (VBP hoist)
                      (S
                        (NP (PRP$ their) (NN baggage))
                        (ADJP (JJ clear)))
                      (PRN (: --)
                        (S
                          (NP
                            (NP (DT The) (NNS passengers))
                            (, ,)
                            (NP
                              (NP (NNP wi) (POS '))
                              (NNS gloves))
                            (, an) ('' '))
                          (VP (VBZ canes)))
                        (: --)))))
                (, an) ('' ')
                (SBAR
                  (S
                    (NP (DT this))
                    (VP (VBZ is)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP I))
                          (VP (MD 'll)
                            (VP (VB hear) (: :) (`` ``)
                              (INTJ (UH Well))))))))))))))
      (, ,))
    (VP (VB thank)
      (NP (PRP ye))
      (PP (IN for)
        (NP (DT a) (JJ pleasant) (NN voyage))))
    (. .)))

advmod(thank-41, Then-1)
case(last-5, at-3)
det(last-5, the-4)
nmod:at(get-9, last-5)
nsubj(get-9, we-7)
aux(get-9, 'll-8)
parataxis(thank-41, get-9)
case(port-11, to-10)
nmod:to(get-9, port-11)
dobj(hear-36, port-11)
dep(port-11, an-12)
acl:relcl(port-11, hoist-14)
nmod:poss(baggage-16, their-15)
nsubj(clear-17, baggage-16)
xcomp(hoist-14, clear-17)
det(passengers-20, The-19)
nsubj(canes-27, passengers-20)
nmod:poss(gloves-24, wi-22)
case(wi-22, '-23)
appos(passengers-20, gloves-24)
parataxis(hoist-14, canes-27)
nsubj(is-32, this-31)
acl:relcl(port-11, is-32)
ref(port-11, what-33)
nsubj(hear-36, I-34)
aux(hear-36, 'll-35)
ccomp(is-32, hear-36)
discourse(hear-36, Well-39)
root(ROOT-0, thank-41)
dobj(thank-41, ye-42)
case(voyage-46, for-43)
det(voyage-46, a-44)
amod(voyage-46, pleasant-45)
nmod:for(thank-41, voyage-46)

(ROOT
  (S
    (NP (DT The) (NN tender))
    (VP (VBZ 's)
      (VP (VBN comin) (`` ')
        (ADVP (RB now))))
    (. .) ('' '')))

det(tender-2, The-1)
nsubjpass(comin-4, tender-2)
auxpass(comin-4, 's-3)
root(ROOT-0, comin-4)
advmod(comin-4, now-6)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (PRP I))
        (VP (VBP go)
          (NP
            (NP (NN testin) (POS '))
            (NNS follower-bolts)))))
    (NP (DT an))
    (VP (`` ') (VBP watch)
      (NP (DT the) (NN skipper) (NN bow)))
    (. .)))

mark(go-3, While-1)
nsubj(go-3, I-2)
advcl(watch-9, go-3)
nmod:poss(follower-bolts-6, testin-4)
case(testin-4, '-5)
dobj(go-3, follower-bolts-6)
nsubj(watch-9, an-7)
root(ROOT-0, watch-9)
det(bow-12, the-10)
compound(bow-12, skipper-11)
dobj(watch-9, bow-12)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP 've)
        (NP
          (NP (NNS words))
          (PP (IN for)
            (NP
              (NP (DT every) (NN one))
              (PP (CC but)
                (NP (PRP me))))))))
    (: --)
    (S
      (NP (NN shake) (NNS hands))
      (VP (VBP wi) ('' ')
        (NP (PDT half) (DT the) (NN crew))
        (, ,)
        (SBAR
          (S
            (PP (IN Except)
              (NP
                (NP (DT the) (JJ dour) (NNP Scots) (NN engineer))
                (, ,)
                (NP (DT the) (NN man))))
            (NP (PRP they))
            (ADVP (RB never))
            (VP (VBD knew))))))
    (. .)))

nsubj('ve-2, They-1)
root(ROOT-0, 've-2)
dobj('ve-2, words-3)
case(one-6, for-4)
det(one-6, every-5)
nmod:for(words-3, one-6)
case(me-8, but-7)
nmod:but(one-6, me-8)
compound(hands-11, shake-10)
nsubj(wi-12, hands-11)
parataxis('ve-2, wi-12)
det:predet(crew-16, half-14)
det(crew-16, the-15)
dobj(wi-12, crew-16)
case(engineer-22, Except-18)
det(engineer-22, the-19)
amod(engineer-22, dour-20)
compound(engineer-22, Scots-21)
nmod:except(knew-28, engineer-22)
det(man-25, the-24)
appos(engineer-22, man-25)
nsubj(knew-28, they-26)
neg(knew-28, never-27)
dep(wi-12, knew-28)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP An) (POS '))
        (RB yet) (NN I))
      (PP (IN like)
        (NP
          (NP (DT the) (NN wark))
          (PP (IN for)
            (NP
              (NP
                (NP (DT all))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP 've)
                      (NP
                        (NP
                          (NP (NN dam) (POS '))
                          (JJ few) (NN pickin))
                        (SBAR
                          (S
                            (VP (VBZ 's)
                              (NP
                                (NP (RB here))
                                (: --)
                                (NP (DT No) (NN pension))
                                (, ,))))))))))
              (, an) ('' ')
              (NP
                (NP (DT the) (JJS most))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP earn))))))))))
    (VP (VBZ 's)
      (NP
        (NP (CD four) (NN hunder) (NN pound))
        (NP (DT a) (NN year))))
    (. .)))

nmod:poss(I-4, An-1)
case(An-1, '-2)
advmod(I-4, yet-3)
nsubj(pound-31, I-4)
case(wark-7, like-5)
det(wark-7, the-6)
nmod:like(I-4, wark-7)
case(all-9, for-8)
nmod:for(wark-7, all-9)
nsubj('ve-11, we-10)
acl:relcl(all-9, 've-11)
nmod:poss(pickin-15, dam-12)
case(dam-12, '-13)
amod(pickin-15, few-14)
dobj('ve-11, pickin-15)
cop(here-17, 's-16)
acl:relcl(pickin-15, here-17)
neg(pension-20, No-19)
dep(here-17, pension-20)
det(most-25, the-24)
dep(all-9, most-25)
nsubj(earn-27, we-26)
acl:relcl(most-25, earn-27)
cop(pound-31, 's-28)
nummod(pound-31, four-29)
compound(pound-31, hunder-30)
root(ROOT-0, pound-31)
det(year-33, a-32)
dep(pound-31, year-33)

(ROOT
  (FRAG
    (NP (NNP Better) (NNP myself))
    (ADVP (RB abroad))
    (. ?)))

compound(myself-2, Better-1)
root(ROOT-0, myself-2)
dep(myself-2, abroad-3)

(ROOT
  (FRAG
    (ADVP (RB Maybe))
    (. .)))

root(ROOT-0, Maybe-1)

(ROOT
  (S
    (ADVP (RB _))
    (NP (PRP I))
    (VP (MD 'd)
      (ADVP
        (NP (CD _))
        (RBR sooner))
      (VP (VB starve)
        (PP (IN than)
          (NP
            (NP (NNP sail) (NNP Wi) (POS '))
            (NP
              (FRAG
                (PP (JJ such) (IN as)
                  (NP (NN call)))
                (NP
                  (NP (DT a) (JJ snifter-rod) (JJ _) (NNS ross) (NN _))
                  (: ...)
                  (NP
                    (NP (NNP French))
                    (PP (IN for)
                      (NP (NN nightingale)))))))))))
    (. .)))

advmod(starve-6, _-1)
nsubj(starve-6, I-2)
aux(starve-6, 'd-3)
nmod:npmod(sooner-5, _-4)
advmod(starve-6, sooner-5)
root(ROOT-0, starve-6)
case(Wi-9, than-7)
compound(Wi-9, sail-8)
nmod:'(starve-6, Wi-9)
case(Wi-9, '-10)
case(call-13, such-11)
mwe(such-11, as-12)
nmod:such_as(_-18, call-13)
det(_-18, a-14)
amod(_-18, snifter-rod-15)
amod(_-18, _-16)
compound(_-18, ross-17)
dep(Wi-9, _-18)
dep(_-18, French-20)
case(nightingale-22, for-21)
nmod:for(French-20, nightingale-22)

(ROOT
  (NP
    (NP (NNP Commeesion))
    (PP (IN on)
      (NP (PRP$ my) (NNS stores)))
    (. ?)))

root(ROOT-0, Commeesion-1)
case(stores-4, on-2)
nmod:poss(stores-4, my-3)
nmod:on(Commeesion-1, stores-4)

(ROOT
  (S
    (S
      (NP (DT Some))
      (VP (VBP do)))
    (: ;)
    (S (CC but)
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB afford)
          (S
            (VP (TO To)
              (VP (VB lie)
                (PP (IN like)
                  (NP
                    (NP (NNP stewards) (NNP wi) (POS '))
                    (NNS patty-pans)))))))))
    (: --) (. .)))

nsubj(do-2, Some-1)
root(ROOT-0, do-2)
cc(afford-8, but-4)
nsubj(afford-8, I-5)
nsubj:xsubj(lie-10, I-5)
aux(afford-8, can-6)
neg(afford-8, not-7)
parataxis(do-2, afford-8)
mark(lie-10, To-9)
xcomp(afford-8, lie-10)
case(patty-pans-15, like-11)
compound(wi-13, stewards-12)
nmod:poss(patty-pans-15, wi-13)
case(wi-13, '-14)
nmod:like(lie-10, patty-pans-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP
        (ADJP (JJR older))
        (PP (IN than)
          (NP (DT the) (NNP Board)))))
    (. .)))

nsubj(older-3, I-1)
cop(older-3, 'm-2)
root(ROOT-0, older-3)
case(Board-6, than-4)
det(Board-6, the-5)
nmod:than(older-3, Board-6)

(ROOT
  (SBARQ
    (WHNP
      (NP (DT A) (NN bonus))
      (PP (IN on)
        (NP (DT the) (NN coal))))
    (SQ
      (NP (PRP I))
      (VP (VB save)))
    (. ?)))

det(bonus-2, A-1)
dobj(save-7, bonus-2)
case(coal-5, on-3)
det(coal-5, the-4)
nmod:on(bonus-2, coal-5)
nsubj(save-7, I-6)
root(ROOT-0, save-7)

(ROOT
  (S
    (S
      (S
        (VP (VB Ou)
          (NP (NN ay))))
      (, ,)
      (NP (DT the) (NNPS Scots))
      (VP (VBP are)
        (ADJP (JJ close))))
    (, ,)
    (CC But)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBP grudge)
            (NP (DT the) (NN strength)))))
      (NP (PRP Ye))
      (VP (VBD gave)
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD 'll)
              (VP (VB grudge)
                (NP (PRP$ their) (NN food)
                  (S
                    (VP (TO to)
                      (VP (VB _)
                        (NP (DT those) (NN _))))))))))))
    (. .)))

ccomp(close-7, Ou-1)
dobj(Ou-1, ay-2)
det(Scots-5, the-4)
nsubj(close-7, Scots-5)
cop(close-7, are-6)
root(ROOT-0, close-7)
cc(close-7, But-9)
advmod(grudge-12, when-10)
nsubj(grudge-12, I-11)
advcl(gave-16, grudge-12)
det(strength-14, the-13)
dobj(grudge-12, strength-14)
nsubj(gave-16, Ye-15)
conj:but(close-7, gave-16)
nsubj(grudge-19, I-17)
aux(grudge-19, 'll-18)
ccomp(gave-16, grudge-19)
nmod:poss(food-21, their-20)
dobj(grudge-19, food-21)
mark(_-23, to-22)
acl(food-21, _-23)
det(_-25, those-24)
dobj(_-23, _-25)

(ROOT
  (S (-LRB- -LRB-)
    (NP (EX There))
    (VP (VBZ 's)
      (NP (NNS bricks))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD might)
            (VP (VB recommend))))))
    (: --)
    (S
      (NP (DT an))
      ('' ')
      (VP (VB clink)
        (S
          (NP (DT the) (NNS fire-bars))
          (ADJP (JJ cruel)))))
    (. .)))

expl('s-3, There-2)
root(ROOT-0, 's-3)
nsubj('s-3, bricks-4)
mark(recommend-8, that-5)
nsubj(recommend-8, I-6)
aux(recommend-8, might-7)
ccomp('s-3, recommend-8)
nsubj(clink-12, an-10)
parataxis('s-3, clink-12)
det(fire-bars-14, the-13)
nsubj(cruel-15, fire-bars-14)
xcomp(clink-12, cruel-15)

(ROOT
  (INTJ (UH No) (. !)))

root(ROOT-0, No-1)

(ROOT
  (S
    (NP
      (NP (NNP Welsh))
      (PRN (: --)
        (NP
          (NP (NNP Wangarti))
          (PP (IN at)
            (NP (DT the) (JJS worst))))
        (: --))
      (, an) ('' '))
    (ADVP (RB damn) (RB all))
    (ADVP (RB patent))
    (VP (VBZ fuel))
    (. !) (-RRB- -RRB-)))

nsubj(fuel-13, Welsh-1)
dep(Welsh-1, Wangarti-3)
case(worst-6, at-4)
det(worst-6, the-5)
nmod:at(Wangarti-3, worst-6)
advmod(all-11, damn-10)
advmod(fuel-13, all-11)
advmod(fuel-13, patent-12)
root(ROOT-0, fuel-13)

(ROOT
  (NP (NNS Inventions) (. ?)))

root(ROOT-0, Inventions-1)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (MD must)
      (VP (VB stay)
        (PP (IN in)
          (NP (NN port)))
        (S
          (VP (TO to)
            (VP (VB mak) ('' ')
              (NP (DT a) (NN patent) (NN pay)))))))
    (. .)))

nsubj(stay-3, Ye-1)
nsubj:xsubj(mak-7, Ye-1)
aux(stay-3, must-2)
root(ROOT-0, stay-3)
case(port-5, in-4)
nmod:in(stay-3, port-5)
mark(mak-7, to-6)
xcomp(stay-3, mak-7)
det(pay-11, a-9)
compound(pay-11, patent-10)
dobj(mak-7, pay-11)

(ROOT
  (S
    (S
      (NP (NNP My) (NNP Deeferential) (NNP Valve-Gear))
      (VP (VBD taught)
        (NP (PRP me))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT that) (NN business))
            (VP (VBD lay))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP blame)
      (NP
        (NP
          (NP (DT no) (NNS chaps) (NN wi) (POS '))
          (JJR clearer) (NN head))
        (PP (IN for)
          (NP (NN aught)))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VB make)
              (CC or)
              (VB sell))))))
    (. .)))

compound(Valve-Gear-3, My-1)
compound(Valve-Gear-3, Deeferential-2)
nsubj(taught-4, Valve-Gear-3)
ccomp(blame-12, taught-4)
dobj(taught-4, me-5)
advmod(lay-9, how-6)
det(business-8, that-7)
nsubj(lay-9, business-8)
dep(taught-4, lay-9)
nsubj(blame-12, I-11)
root(ROOT-0, blame-12)
neg(wi-15, no-13)
compound(wi-15, chaps-14)
nmod:poss(head-18, wi-15)
case(wi-15, '-16)
amod(head-18, clearer-17)
dobj(blame-12, head-18)
case(aught-20, for-19)
nmod:for(head-18, aught-20)
nsubj(make-22, they-21)
nsubj(sell-24, they-21)
acl:relcl(head-18, make-22)
cc(make-22, or-23)
acl:relcl(head-18, sell-24)
conj:or(make-22, sell-24)

(ROOT
  (S
    (NP
      (NP (NNP _) (NNP I) (NNP _))
      (VP (VBN found)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD could) (RB not)
              (VP (VB invent))))))
      (, an) ('' '))
    (VP (VB look)
      (PP (TO to)
        (NP (DT these)))
      (: --)
      (ADVP (RB as) (RB well)))
    (. .)))

compound(_-3, _-1)
compound(_-3, I-2)
nsubj(look-12, _-3)
acl(_-3, found-4)
mark(invent-9, that-5)
nsubj(invent-9, I-6)
aux(invent-9, could-7)
neg(invent-9, not-8)
ccomp(found-4, invent-9)
root(ROOT-0, look-12)
case(these-14, to-13)
nmod:to(look-12, these-14)
advmod(look-12, as-16)
mwe(as-16, well-17)

(ROOT
  (FRAG
    (ADVP (RB So))
    (, ,)
    (NP
      (NP (JJ wrestled) (NN wi) ('' ') (NNP Apollyon))
      (: --)
      (NP (NNP Nah)))
    (. !)))

dep(Apollyon-6, So-1)
amod(Apollyon-6, wrestled-3)
compound(Apollyon-6, wi-4)
root(ROOT-0, Apollyon-6)
dep(Apollyon-6, Nah-8)

(ROOT
  (S (: --)
    (NP
      (NP (NN fretted))
      (PP (IN like)
        (NP (DT a) (NN bairn)))
      (: --)
      (VP
        (ADVP (CC But))
        (VBN burned)
        (NP (DT the) (NN workin))
        ('' '))
      (: -))
    (VP (VBZ plans)
      (NP (JJ last) (NN run) (NN wi))
      ('' ')
      (SBAR
        (WHNP (DT all))
        (S
          (NP (PRP I))
          (VP (VBD hoped)
            (S
              (VP (TO to)
                (VP (VB earn))))))))
    (. .)))

nsubj(plans-13, fretted-2)
case(bairn-5, like-3)
det(bairn-5, a-4)
nmod:like(fretted-2, bairn-5)
advmod(burned-8, But-7)
acl(fretted-2, burned-8)
det(workin-10, the-9)
dobj(burned-8, workin-10)
root(ROOT-0, plans-13)
amod(wi-16, last-14)
compound(wi-16, run-15)
dobj(plans-13, wi-16)
dobj(hoped-20, all-18)
nsubj:xsubj(earn-22, all-18)
nsubj(hoped-20, I-19)
dep(plans-13, hoped-20)
mark(earn-22, to-21)
xcomp(hoped-20, earn-22)

(ROOT
  (S
    (S
      (NP (PRP Ye))
      (VP (VBP know)
        (SBAR
          (WHADVP (WRB how) (JJ hard))
          (S
            (NP (DT an) (NNP Idol))
            (VP (VBZ dies) (, ,)
              (ADVP (DT an))
              ('' ')
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT that))
                  (VP (VBD meant)
                    (PP (TO to)
                      (NP (PRP me)))
                    (: --)
                    (S
                      (NP
                        (NP (NNP E'en) (NNP tak) (POS '))
                        (NP (PRP it))
                        (PP (IN for)
                          (NP (DT a) (NN sacrifice))))
                      (ADJP (JJ acceptable)
                        (S
                          (VP (TO to)
                            (VP (VB Thee))))))))))))))
    (: ...)
    (S
      (NP (NNP _) (NNP Below))
      (NP (EX there)))
    (. !)))

nsubj(know-2, Ye-1)
root(ROOT-0, know-2)
advmod(hard-4, how-3)
advmod(dies-7, hard-4)
det(Idol-6, an-5)
nsubj(dies-7, Idol-6)
ccomp(know-2, dies-7)
advmod(dies-7, an-9)
dobj(meant-13, what-11)
nsubj(meant-13, that-12)
ccomp(dies-7, meant-13)
case(me-15, to-14)
nmod:to(meant-13, me-15)
compound(tak-18, E'en-17)
nsubj(acceptable-24, tak-18)
nsubj:xsubj(Thee-26, tak-18)
case(tak-18, '-19)
dep(tak-18, it-20)
case(sacrifice-23, for-21)
det(sacrifice-23, a-22)
nmod:for(tak-18, sacrifice-23)
parataxis(meant-13, acceptable-24)
mark(Thee-26, to-25)
xcomp(acceptable-24, Thee-26)
compound(Below-29, _-28)
dep(there-30, Below-29)
parataxis(know-2, there-30)

(ROOT
  (S
    (VP (VB Oiler))
    (. !)))

root(ROOT-0, Oiler-1)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (PRP$ your) (NN wark)))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, 's-2)
nmod:poss(wark-4, your-3)
nsubj(What-1, wark-4)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (NP
          (NP (NN runnin) (POS '))
          (JJ hard))))
    (. ?)))

nsubj(find-2, Ye-1)
root(ROOT-0, find-2)
nsubj(runnin-4, it-3)
xcomp(find-2, runnin-4)
case(runnin-4, '-5)
amod(runnin-4, hard-6)

(ROOT
  (S
    (S
      (NP (PRP Ye))
      (VP (VBP need) (RB n't)
        (VP (VB swill)
          (NP
            (NP (DT the) (NN cap) (NN wi) (POS '))
            (NN oil)))))
    (: --)
    (S
      (NP (DT this))
      (VP (VBZ is) (RB n't)
        (NP (DT the) (NNP Cunard))))
    (. !)))

nsubj(need-2, Ye-1)
root(ROOT-0, need-2)
neg(need-2, n't-3)
dep(need-2, swill-4)
det(wi-7, the-5)
compound(wi-7, cap-6)
nmod:poss(oil-9, wi-7)
case(wi-7, '-8)
dobj(swill-4, oil-9)
nsubj(Cunard-15, this-11)
cop(Cunard-15, is-12)
neg(Cunard-15, n't-13)
det(Cunard-15, the-14)
parataxis(need-2, Cunard-15)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (VBD thought))
    (. ?)))

nsubj(thought-2, Ye-1)
root(ROOT-0, thought-2)

(ROOT
  (S
    (NP (PRP Ye))
    (VP (VBP are) (RB not)
      (VP (VBN paid)
        (S
          (VP (TO to)
            (VP (VB think))))))
    (. .)))

nsubjpass(paid-4, Ye-1)
nsubj:xsubj(think-6, Ye-1)
auxpass(paid-4, are-2)
neg(paid-4, not-3)
root(ROOT-0, paid-4)
mark(think-6, to-5)
xcomp(paid-4, think-6)

(ROOT
  (S
    (VP
      (VP (VB Go))
      (, ,)
      (VP (VB sweat)
        (NP (DT that))
        (PRT (RP off))
        (ADVP (RB again))))
    (. !)))

root(ROOT-0, Go-1)
dep(Go-1, sweat-3)
dobj(sweat-3, that-4)
compound:prt(sweat-3, off-5)
advmod(sweat-3, again-6)

(ROOT
  (NP (NNP _) (NNP Tck) (. !)))

compound(Tck-2, _-1)
root(ROOT-0, Tck-2)

(ROOT
  (S
    (VP (VB Tck))
    (. !)))

root(ROOT-0, Tck-1)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ deeficult)
        (S
          (VP (TO to)
            (VP (VB sweer)
              (CC nor)
              (VB tak) ('' ')
              (NP
                (NP (DT The) (NN Name))
                (PP (IN in)
                  (NP (JJ vain)))))))))
    (. !)))

nsubj(deeficult-3, It-1)
nsubj:xsubj(sweer-5, It-1)
nsubj:xsubj(tak-7, It-1)
cop(deeficult-3, 's-2)
root(ROOT-0, deeficult-3)
mark(sweer-5, to-4)
xcomp(deeficult-3, sweer-5)
cc(sweer-5, nor-6)
xcomp(deeficult-3, tak-7)
conj:nor(sweer-5, tak-7)
det(Name-10, The-9)
xcomp(deeficult-3, Name-10)
conj:nor(sweer-5, Name-10)
case(vain-12, in-11)
nmod:in(Name-10, vain-12)

(ROOT
  (S
    (NP
      (NP
        (NP (NNS Men))
        (, ,)
        (NP (NN ay)))
      (, an) ('' ')
      (NP (NNS women))
      (, ,))
    (VP (VBP call)
      (S
        (NP (PRP me))
        (ADJP (JJ stern))))
    (. .)))

nsubj(call-8, Men-1)
appos(Men-1, ay-3)
dep(Men-1, women-6)
root(ROOT-0, call-8)
nsubj(stern-10, me-9)
xcomp(call-8, stern-10)

(ROOT
  (S
    (VP (VB Wi) (`` ')
      (NP (DT these))
      (S
        (VP (TO to)
          (VP (VB oversee)
            (SBAR
              (S
                (NP (PRP Ye))
                (VP (MD 'll)
                  (VP (VB note)
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBP 've)
                          (NP (JJ little) (NN time)
                            (S
                              (VP (TO to)
                                (VP (VB burn)
                                  (PP (IN on)
                                    (NP (JJ social) (NN repartee))))))))))))))))))
    (. .)))

root(ROOT-0, Wi-1)
dobj(Wi-1, these-3)
mark(oversee-5, to-4)
advcl(Wi-1, oversee-5)
nsubj(note-8, Ye-6)
aux(note-8, 'll-7)
ccomp(oversee-5, note-8)
nsubj('ve-10, I-9)
ccomp(note-8, 've-10)
amod(time-12, little-11)
dobj('ve-10, time-12)
mark(burn-14, to-13)
acl(time-12, burn-14)
case(repartee-17, on-15)
amod(repartee-17, social-16)
nmod:on(burn-14, repartee-17)

(ROOT
  (S
    (S
      (NP (DT The) (NNS bairns))
      (VP (VBP see)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP$ their) (NNS elders))
            (VP (VBP miss))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (MD 'll)
        (VP (VB hunt)
          (NP (PRP me))
          (PP (TO to)
            (NP (DT an)))
          ('' ')
          (ADVP (RB fro))
          (, ,)
          (PP (IN Till)
            (SBAR (IN for)
              (S
                (NP
                  (NP (DT the) (NN sake))
                  (PP (IN of)
                    (PRN (: --)
                      (FRAG
                        (INTJ (UH well))
                        (, ,)
                        (NP (DT a) (NN kiss)))
                      (: --))
                    (NP (PRP I))))
                (VP (VBP tak) ('' ')
                  (NP (PRP 'em))
                  (ADVP (RB down) (RB below)))))))))
    (. .)))

det(bairns-2, The-1)
nsubj(see-3, bairns-2)
root(ROOT-0, see-3)
dobj(miss-7, what-4)
nmod:poss(elders-6, their-5)
nsubj(miss-7, elders-6)
ccomp(see-3, miss-7)
nsubj(hunt-11, they-9)
aux(hunt-11, 'll-10)
parataxis(see-3, hunt-11)
dobj(hunt-11, me-12)
case(an-14, to-13)
nmod:to(hunt-11, an-14)
advmod(hunt-11, fro-16)
mark(tak-30, Till-18)
mark(tak-30, for-19)
det(sake-21, the-20)
nsubj(tak-30, sake-21)
case(I-29, of-22)
discourse(kiss-27, well-24)
det(kiss-27, a-26)
dep(I-29, kiss-27)
nmod:of(sake-21, I-29)
advcl(hunt-11, tak-30)
dobj(tak-30, 'em-32)
advmod(below-34, down-33)
advmod(tak-30, below-34)

(ROOT
  (S
    (NP
      (NP
        (NP (DT That) (NNS minds))
        (NP
          (NP
            (NP (PRP me))
            (PP (IN of)
              (NP (PRP$ our) (NNP Viscount) (NN loon))))
          (: --)
          (NP
            (NP (NNP Sir))
            (NP
              (NP (NNP Kenneth) (POS 's))
              (NN kin)))
          (: --)
          (NP
            (NP (DT the) (NN chap))
            (NP
              (NP (NNP Wi) (POS '))
              (NNP Russia) (NN leather) (NN tennis-shoon)))))
      (, an) ('' ')
      (NP (JJ spar-decked) (NN yachtin) ('' '))
      (: -))
    (VP (VBP cap))
    (. .)))

det(minds-2, That-1)
nsubj(cap-27, minds-2)
dep(minds-2, me-3)
case(loon-7, of-4)
nmod:poss(loon-7, our-5)
compound(loon-7, Viscount-6)
nmod:of(me-3, loon-7)
dep(me-3, Sir-9)
nmod:poss(kin-12, Kenneth-10)
case(Kenneth-10, 's-11)
dep(Sir-9, kin-12)
det(chap-15, the-14)
dep(me-3, chap-15)
nmod:poss(tennis-shoon-20, Wi-16)
case(Wi-16, '-17)
compound(tennis-shoon-20, Russia-18)
compound(tennis-shoon-20, leather-19)
dep(chap-15, tennis-shoon-20)
amod(yachtin-24, spar-decked-23)
dep(minds-2, yachtin-24)
root(ROOT-0, cap-27)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBD showed)
        (SBAR
          (S
            (NP (PRP him))
            (VP (VBP round)
              (NP (JJ last) (NN week)))))))
    (, ,)
    (VP (VBP o'er)
      (NP
        (NP (DT all))
        (: --)
        (NP (DT an))
        ('' '))
      (PP (IN at)
        (NP
          (NP (DT the) (JJ last))
          (VP (VBZ says)))))
    (NP (PRP he))
    (: :) (`` ``)
    (S
      (NP (NNP Mister))
      (VP (VBD M'Andrew) (, ,)
        (SQ (VBP do) (RB n't)
          (NP (PRP you))
          (VP (VB think)
            (NP (NN steam) (NNS spoils) (NN romance))
            (PP (IN at)
              (NP (NN sea)))))))
    (. ?) ('' '')))

nsubj(showed-2, I-1)
ccomp(o'er-8, showed-2)
nsubj(round-4, him-3)
ccomp(showed-2, round-4)
amod(week-6, last-5)
nmod:tmod(round-4, week-6)
root(ROOT-0, o'er-8)
dobj(o'er-8, all-9)
dep(all-9, an-11)
case(last-15, at-13)
det(last-15, the-14)
nmod:at(o'er-8, last-15)
dep(last-15, says-16)
nsubj(o'er-8, he-17)
nsubj(M'Andrew-21, Mister-20)
dep(o'er-8, M'Andrew-21)
aux(think-26, do-23)
neg(think-26, n't-24)
nsubj(think-26, you-25)
dep(M'Andrew-21, think-26)
compound(romance-29, steam-27)
compound(romance-29, spoils-28)
dobj(think-26, romance-29)
case(sea-31, at-30)
nmod:at(think-26, sea-31)

(ROOT
  (NP (JJ Damned) (NN ijjit) (. !)))

amod(ijjit-2, Damned-1)
root(ROOT-0, ijjit-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD 'd)
      (VP (VBN been)
        (VP (VBN doon)
          (NP
            (NP (DT that) (NN morn)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBD ailed)
                          (NP (DT the) (NN throws)))))))))
            (, ,)
            (NP (NNP Manholin) (POS ')))
          (, ,)
          (PP (IN on)
            (NP
              (NP (PRP$ my) (NN back))
              (: --)
              (NP
                (NP (DT the) (JJ cranks) (CD three) (NNS inches))
                (PP (IN off)
                  (NP (PRP$ my) (NN nose)))))))))
    (. .)))

nsubjpass(doon-4, I-1)
aux(doon-4, 'd-2)
auxpass(doon-4, been-3)
root(ROOT-0, doon-4)
det(morn-6, that-5)
dobj(doon-4, morn-6)
mark(see-8, to-7)
acl(morn-6, see-8)
nsubj(ailed-10, what-9)
ccomp(see-8, ailed-10)
det(throws-12, the-11)
dobj(ailed-10, throws-12)
appos(morn-6, Manholin-14)
case(Manholin-14, '-15)
case(back-19, on-17)
nmod:poss(back-19, my-18)
nmod:on(doon-4, back-19)
det(inches-24, the-21)
amod(inches-24, cranks-22)
nummod(inches-24, three-23)
dep(back-19, inches-24)
case(nose-27, off-25)
nmod:poss(nose-27, my-26)
nmod:off(inches-24, nose-27)

(ROOT
  (S
    (VP (VB Romance))
    (. !)))

root(ROOT-0, Romance-1)

(ROOT
  (S
    (NP
      (NP (DT Those) (JJ first-class) (NNS passengers))
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP like)
            (NP (PRP it))
            (S
              (S
                (NP
                  (NP (RB very) (RB well))
                  (, ,)
                  (VP (VBN Printed))
                  (, an) ('' '))
                (VP (VBN bound)
                  (PP (IN in)
                    (NP (JJ little) (NNS books)))))
              (: ;)
              (CC but)
              (FRAG
                (WHADVP (WRB why))))))))
    (VP (VBP do) (RB n't)
      (ADVP (RB poets))
      (VP (VB tell)))
    (. ?)))

det(passengers-3, Those-1)
amod(passengers-3, first-class-2)
nsubj(tell-23, passengers-3)
nsubj(like-5, they-4)
acl:relcl(passengers-3, like-5)
dobj(like-5, it-6)
advmod(well-8, very-7)
nsubj(bound-13, well-8)
acl(well-8, Printed-10)
xcomp(like-5, bound-13)
case(books-16, in-14)
amod(books-16, little-15)
nmod:in(bound-13, books-16)
cc(bound-13, but-18)
xcomp(like-5, why-19)
conj:but(bound-13, why-19)
aux(tell-23, do-20)
neg(tell-23, n't-21)
advmod(tell-23, poets-22)
root(ROOT-0, tell-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sick)
        (PP (IN of)
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP
                  (NP (PRP$ their) (NNS quirks))
                  (, an) ('' ')
                  (NP
                    (NP (NNS turns))
                    (: --)
                    (NP (DT the) (JJ loves) (DT an)))
                  ('' '))
                (VP (VBZ doves)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBP dream) (: --)
                        (NP
                          (NP (NNP Lord))
                          (, ,)
                          (NP
                            (VP (VB send)
                              (NP
                                (NP (DT a) (NN man))
                                (PP (IN like)
                                  (NP (NNP Robbie) (NNP Burns))))
                              (S
                                (VP (TO to)
                                  (VP (VB sing)
                                    (NP
                                      (NP (DT the) (NN Song) (NN o) (POS '))
                                      (NN Steam))))))))))))))))))
    (. !)))

nsubj(sick-3, I-1)
cop(sick-3, 'm-2)
root(ROOT-0, sick-3)
case(all-5, of-4)
nmod:of(sick-3, all-5)
nmod:poss(quirks-7, their-6)
nsubj(doves-16, quirks-7)
dep(quirks-7, turns-10)
det(loves-13, the-12)
dep(turns-10, loves-13)
dep(loves-13, an-14)
acl:relcl(all-5, doves-16)
nsubj(dream-18, they-17)
ccomp(doves-16, dream-18)
dobj(dream-18, Lord-20)
appos(Lord-20, send-22)
det(man-24, a-23)
dobj(send-22, man-24)
case(Burns-27, like-25)
compound(Burns-27, Robbie-26)
nmod:like(man-24, Burns-27)
mark(sing-29, to-28)
advcl(send-22, sing-29)
det(o-32, the-30)
compound(o-32, Song-31)
nmod:poss(Steam-34, o-32)
case(o-32, '-33)
dobj(sing-29, Steam-34)

(ROOT
  (S
    (VP (TO To)
      (VP (VB match)
        (NP
          (NP
            (NP (NNP wi) (POS '))
            (NNP Scotia) (POS 's))
          (NN noblest) (NN speech))
        (NP
          (NP
            (NP (RB yon))
            (NP (NNP orchestra) (NNP sublime) (NNP Whaurto)))
          (PRN (: --)
            (VP (VBN uplifted)
              (PP (IN like)
                (NP (DT the) (RB Just))))
            (: --))
          (NP
            (NP (DT the) (JJ tail-rods) (NN mark))
            (NP (DT the) (NN time))))))
    (. .)))

mark(match-2, To-1)
root(ROOT-0, match-2)
nmod:poss(Scotia-5, wi-3)
case(wi-3, '-4)
nmod:poss(speech-8, Scotia-5)
case(Scotia-5, 's-6)
compound(speech-8, noblest-7)
iobj(match-2, speech-8)
dobj(match-2, yon-9)
compound(Whaurto-12, orchestra-10)
compound(Whaurto-12, sublime-11)
dep(yon-9, Whaurto-12)
dep(yon-9, uplifted-14)
case(Just-17, like-15)
det(Just-17, the-16)
nmod:like(uplifted-14, Just-17)
det(mark-21, the-19)
amod(mark-21, tail-rods-20)
dep(yon-9, mark-21)
det(time-23, the-22)
dep(mark-21, time-23)

(ROOT
  (S
    (S
      (NP (DT The) (NNS crank-throws))
      (VP (VBP give)
        (SBAR
          (S
            (NP
              (NP (DT the) (NNS double-bass))
              (, ,)
              (NP (DT the) (JJ feed-pump) (NNS sobs))
              (, an) ('' '))
            (VP (VBZ heaves) (, ,)
              (S
                (NP (NNP An) (POS '))
                (VP
                  (ADVP (RB now)
                    (NP (DT the) (JJ main) (NNS eccentrics)))
                  (VB start)
                  (NP
                    (NP (PRP$ their) (NN quarrel))
                    (PP (IN on)
                      (NP (DT the) (NNS sheaves)))))))))))
    (: :)
    (S
      (NP
        (NP (PRP$ Her) (NN time))
        (, ,)
        (NP (PRP$ her) (JJ own) (JJ appointed) (NN time))
        (, ,)
        (NP (DT the) (JJ rocking) (JJ link-head) (NNS bides))
        (, ,)
        (ADVP (RB Till))
        (: --))
      (VP (VBP hear)
        (NP (DT that) (NN note))))
    (. ?)))

det(crank-throws-2, The-1)
nsubj(give-3, crank-throws-2)
root(ROOT-0, give-3)
det(double-bass-5, the-4)
nsubj(heaves-12, double-bass-5)
det(sobs-9, the-7)
amod(sobs-9, feed-pump-8)
appos(double-bass-5, sobs-9)
ccomp(give-3, heaves-12)
nsubj(start-20, An-14)
case(An-14, '-15)
advmod(start-20, now-16)
det(eccentrics-19, the-17)
amod(eccentrics-19, main-18)
nmod:npmod(now-16, eccentrics-19)
ccomp(heaves-12, start-20)
nmod:poss(quarrel-22, their-21)
dobj(start-20, quarrel-22)
case(sheaves-25, on-23)
det(sheaves-25, the-24)
nmod:on(quarrel-22, sheaves-25)
nmod:poss(time-28, Her-27)
nsubj(hear-42, time-28)
nmod:poss(time-33, her-30)
amod(time-33, own-31)
amod(time-33, appointed-32)
appos(time-28, time-33)
det(bides-38, the-35)
amod(bides-38, rocking-36)
amod(bides-38, link-head-37)
appos(time-28, bides-38)
advmod(time-28, Till-40)
parataxis(give-3, hear-42)
det(note-44, that-43)
dobj(hear-42, note-44)

(ROOT
  (NP (: --)
    (NP
      (NP
        (NP (DT the) (NN rod) (POS 's))
        (NN return) (NNS whings))
      (VP (VBN glimmerin) ('' ')
        (PP (IN through)
          (NP (DT the) (NNS guides)))))
    (. .)))

det(rod-3, the-2)
nmod:poss(whings-6, rod-3)
case(rod-3, 's-4)
compound(whings-6, return-5)
root(ROOT-0, whings-6)
acl(whings-6, glimmerin-7)
case(guides-11, through-9)
det(guides-11, the-10)
nmod:through(glimmerin-7, guides-11)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're) (RB all)
      (ADJP (JJ awa) ('' ')))
    (. !)))

nsubj(awa-4, They-1)
cop(awa-4, 're-2)
advmod(awa-4, all-3)
root(ROOT-0, awa-4)

(ROOT
  (S
    (INTJ (UH True) (UH beat))
    (, ,)
    (NP
      (NP (JJ full) (NN power))
      (, ,)
      (NP
        (NP (DT the) (NN clangin) (POS '))
        (NN chorus)))
    (VP (VBZ goes)
      (NP (NNP Clear))
      (PP (TO to)
        (NP
          (NP
            (NP (DT the) (NN tunnel))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP they))
                (VP (VBP sit)))))
          (, ,)
          (NP
            (NP (PRP$ my) (NN purrin) (POS '))
            (NNS dynamos)))))
    (. .)))

discourse(goes-11, True-1)
dep(True-1, beat-2)
amod(power-5, full-4)
nsubj(goes-11, power-5)
det(clangin-8, the-7)
nmod:poss(chorus-10, clangin-8)
case(clangin-8, '-9)
appos(power-5, chorus-10)
root(ROOT-0, goes-11)
dobj(goes-11, Clear-12)
case(tunnel-15, to-13)
det(tunnel-15, the-14)
nmod:to(goes-11, tunnel-15)
advmod(sit-18, where-16)
nsubj(sit-18, they-17)
acl:relcl(tunnel-15, sit-18)
nmod:poss(purrin-21, my-20)
nmod:poss(dynamos-23, purrin-21)
case(purrin-21, '-22)
appos(tunnel-15, dynamos-23)

(ROOT
  (S
    (NP
      (NP (NNP Interdependence) (NNP absolute))
      (, ,)
      (VP (VBN foreseen) (, ,) (VBN ordained) (, ,) (VBN decreed) (, ,)
        (S
          (VP (TO To)
            (VP (VB work)))))
      (, ,))
    (NP (PRP Ye))
    (VP (MD 'll)
      (VP (VB note) (, ,)
        (PP (IN at)
          (NP
            (NP (DT any) (NN tilt))
            (, an) ('' ')
            (NP
              (NP (DT every) (NN rate) (NN o) (POS '))
              (NN speed))))))
    (. .)))

compound(absolute-2, Interdependence-1)
nsubj(note-15, absolute-2)
acl(absolute-2, foreseen-4)
dep(foreseen-4, ordained-6)
dep(foreseen-4, decreed-8)
mark(work-11, To-10)
xcomp(foreseen-4, work-11)
nsubj(note-15, Ye-13)
aux(note-15, 'll-14)
root(ROOT-0, note-15)
case(tilt-19, at-17)
det(tilt-19, any-18)
nmod:at(note-15, tilt-19)
det(o-24, every-22)
compound(o-24, rate-23)
nmod:poss(speed-26, o-24)
case(o-24, '-25)
dep(tilt-19, speed-26)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP
            (NP (NNP Fra) (POS '))
            (NN skylight-lift))
          (PP (TO to)
            (NP
              (NP (NNS furnace-bars))
              (, ,)
              (VP (VBN backed) (, ,) (VBN bolted) (, ,)
                (S
                  (VP (VBN braced))))
              (, an) ('' ')
              (VP (VBN stayed)))))
        (, ,)
        (NP
          (NP (NNP An) (POS '))
          (NN singin))
        ('' '))
      (VP (VBP like)
        (NP
          (NP
            (NP (DT the) (NNP Mornin) (POS '))
            (NNP Stars))
          (PP (IN for)
            (NP (NN joy))))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (VP (VBN made)))))))
    (: ;)
    (S
      (SBAR (IN While) (, ,)
        (PP (IN out)
          (NP
            (NP
              (NP (NNP o) (POS '))
              (NN touch))
            (NP
              (NP (NNP o) (POS '))
              (NN vanity))))
        (, ,)
        (S
          (NP
            (NP (DT the) (NN sweatin) (POS '))
            (NN thrust-block))
          (VP (VBZ says) (: :) (`` ``)
            (S
              (VP (RB Not) (VB unto)
                (NP (PRP us)))
              (NP
                (NP (DT the) (NN praise) (, ,)
                  (CC or)
                  (NN man))
                (PRN (: --) (RB not)
                  (NP (NNP unto))))))))
      (NP (PRP us) (DT the))
      (VP (VBP praise)))
    (. !) ('' '')))

nmod:poss(skylight-lift-3, Fra-1)
case(Fra-1, '-2)
nsubj(like-20, skylight-lift-3)
case(furnace-bars-5, to-4)
nmod:to(skylight-lift-3, furnace-bars-5)
acl(furnace-bars-5, backed-7)
dep(backed-7, bolted-9)
dep(backed-7, braced-11)
acl(furnace-bars-5, stayed-14)
nmod:poss(singin-18, An-16)
case(An-16, '-17)
appos(skylight-lift-3, singin-18)
root(ROOT-0, like-20)
det(Mornin-22, the-21)
nmod:poss(Stars-24, Mornin-22)
case(Mornin-22, '-23)
dobj(like-20, Stars-24)
case(joy-26, for-25)
nmod:for(Stars-24, joy-26)
mark(made-30, that-27)
nsubjpass(made-30, they-28)
auxpass(made-30, are-29)
ccomp(like-20, made-30)
mark(says-46, While-32)
case(touch-37, out-34)
nmod:poss(touch-37, o-35)
case(o-35, '-36)
nmod:out(says-46, touch-37)
nmod:poss(vanity-40, o-38)
case(o-38, '-39)
dep(touch-37, vanity-40)
det(sweatin-43, the-42)
nmod:poss(thrust-block-45, sweatin-43)
case(sweatin-43, '-44)
nsubj(says-46, thrust-block-45)
advcl(praise-62, says-46)
neg(unto-50, Not-49)
ccomp(says-46, unto-50)
dobj(unto-50, us-51)
det(praise-53, the-52)
dep(unto-50, praise-53)
cc(praise-53, or-55)
dep(unto-50, man-56)
conj:or(praise-53, man-56)
dep(unto-59, not-58)
dep(praise-53, unto-59)
nsubj(praise-62, us-60)
dep(us-60, the-61)
parataxis(like-20, praise-62)

(ROOT
  (S
    (NP
      (NP (RB Now))
      (, ,)
      (NP
        (NP (NNP a) (POS '))
        (NN together))
      (, ,))
    (VP (VBP hear)
      (S
        (NP (PRP them))
        (VP (VB lift)
          (S
            (NP
              (NP (PRP$ their) (NN lesson))
              (: --)
              (NP (JJ theirs) (DT an))
              ('' ')
              (NP
                (NP (NN mine))
                (: :)
                (NP
                  (NP (`` ``)
                    (NP (NNP Law))
                    (, ,)
                    (NP (NNP Orrder))
                    (, ,)
                    (NP (NNP Duty) (DT an))
                    ('' '))
                  (NP (NNP Restraint))))
              (, ,)
              (NP (NN Obedience))
              (, ,))
            (ADJP (JJ Discipline))))))
    (. !) ('' '')))

nsubj(hear-7, Now-1)
nmod:poss(together-5, a-3)
case(a-3, '-4)
appos(Now-1, together-5)
root(ROOT-0, hear-7)
nsubj(lift-9, them-8)
ccomp(hear-7, lift-9)
nmod:poss(lesson-11, their-10)
nsubj(Discipline-30, lesson-11)
dep(lesson-11, theirs-13)
dep(theirs-13, an-14)
dep(lesson-11, mine-16)
dep(mine-16, Law-19)
appos(Law-19, Orrder-21)
appos(Law-19, Duty-23)
dep(Duty-23, an-24)
appos(Law-19, Restraint-26)
appos(lesson-11, Obedience-28)
xcomp(lift-9, Discipline-30)

(ROOT
  (S
    (NP (NNP Mill))
    (, ,)
    (S
      (VP (VB forge)
        (NP
          (NP (DT an))
          (POS ') (NN try-pit))))
    (VP (VBD taught)
      (NP (PRP them))
      (SBAR (IN that)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (VP
                (NP
                  (NP (NN roarin))
                  ('' ')
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBD arose)))))
                (, ,)
                (NP
                  (NP (NNP An) (POS '))
                  (NNS whiles)))))
          (NP (PRP I))
          (VP (VBP wonder)
            (SBAR (IN if)
              (S
                (NP (DT a) (NN soul))
                (VP (VBD was)
                  (VP (VBN gied)
                    (SBAR
                      (S
                        (NP (PRP them))
                        (VP (VBP wi) (`` ')
                          (NP (DT the) (NNS blows)))))))))))))
    (. .)))

nsubj(taught-7, Mill-1)
dep(taught-7, forge-3)
nmod:poss(try-pit-6, an-4)
case(try-pit-6, '-5)
dobj(forge-3, try-pit-6)
root(ROOT-0, taught-7)
dobj(taught-7, them-8)
mark(wonder-20, that-9)
advmod(roarin-11, when-10)
advcl(wonder-20, roarin-11)
nsubj(arose-14, they-13)
acl:relcl(roarin-11, arose-14)
nmod:poss(whiles-18, An-16)
case(An-16, '-17)
dobj(roarin-11, whiles-18)
nsubj(wonder-20, I-19)
ccomp(taught-7, wonder-20)
mark(gied-25, if-21)
det(soul-23, a-22)
nsubjpass(gied-25, soul-23)
auxpass(gied-25, was-24)
advcl(wonder-20, gied-25)
nsubj(wi-27, them-26)
ccomp(gied-25, wi-27)
det(blows-30, the-29)
dobj(wi-27, blows-30)

(ROOT
  (INTJ (UH Oh)
    (PP (IN for)
      (NP (DT a) (NN man)
        (S
          (VP (TO to)
            (VP (VB weld)
              (NP (PRP it))
              (ADVP (RB then))
              (, ,)
              (PP (IN in)
                (NP (CD one) (JJ trip-hammer) (NN strain)))
              (, ,)
              (PP (IN Till)
                (NP
                  (NP
                    (ADJP (RB even) (JJ first-class))
                    (NNS passengers))
                  (SBAR
                    (S
                      (VP (MD could)
                        (VP (VB tell)
                          (NP
                            (NP (DT the) (NN meanin) (POS '))
                            (NN plain)))))))))))))
    (. !)))

root(ROOT-0, Oh-1)
case(man-4, for-2)
det(man-4, a-3)
dep(Oh-1, man-4)
mark(weld-6, to-5)
acl(man-4, weld-6)
dobj(weld-6, it-7)
advmod(weld-6, then-8)
case(strain-13, in-10)
nummod(strain-13, one-11)
amod(strain-13, trip-hammer-12)
nmod:in(weld-6, strain-13)
case(passengers-18, Till-15)
advmod(first-class-17, even-16)
amod(passengers-18, first-class-17)
nmod:till(weld-6, passengers-18)
aux(tell-20, could-19)
acl:relcl(passengers-18, tell-20)
det(meanin-22, the-21)
nmod:poss(plain-24, meanin-22)
case(meanin-22, '-23)
dobj(tell-20, plain-24)

(ROOT
  (S (CC But)
    (NP
      (NP (DT no) (CD one) (NNS cares))
      (PP (IN except)
        (NP (NN mysel)))
      ('' ')
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP serve))))
      (, an) ('' '))
    (VP (VBP understand)
      (NP
        (NP (PRP$ My)
          (ADJP
            (QP (CD seven) (CD thousand)))
          (NN horse-power))
        (ADVP (RB here))))
    (. .)))

cc(understand-12, But-1)
neg(cares-4, no-2)
nummod(cares-4, one-3)
nsubj(serve-9, cares-4)
nsubj(understand-12, cares-4)
case(mysel-6, except-5)
nmod:except(cares-4, mysel-6)
ref(cares-4, that-8)
acl:relcl(cares-4, serve-9)
root(ROOT-0, understand-12)
nmod:poss(horse-power-16, My-13)
compound(thousand-15, seven-14)
nummod(horse-power-16, thousand-15)
dobj(understand-12, horse-power-16)
advmod(horse-power-16, here-17)

(ROOT
  (NP
    (NP (NNP Eh))
    (, ,)
    (NP (NNP Lord))
    (. !)))

root(ROOT-0, Eh-1)
appos(Eh-1, Lord-3)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP 're)
        (NP (JJ grand))))
    (: --)
    (S
      (NP (PRP they))
      (VP (VBP 're)
        (NP (JJ grand))))
    (. !)))

nsubj(grand-3, They-1)
cop(grand-3, 're-2)
root(ROOT-0, grand-3)
nsubj(grand-7, they-5)
cop(grand-7, 're-6)
parataxis(grand-3, grand-7)

(ROOT
  (S
    (NP (NNP Uplift))
    (VP (VBP am)
      (NP (PRP I)))
    (. ?)))

nsubj(I-3, Uplift-1)
cop(I-3, am-2)
root(ROOT-0, I-3)

(ROOT
  (SBARQ
    (SBAR
      (WHADVP (WRB When))
      (S
        (PP
          (ADVP (RB first))
          (IN in)
          (NP (NN store)))
        (NP (DT the) (JJ new-made) (NNS beasties))
        (VP (VBD stood))))
    (, ,)
    (SQ (VBD Were)
      (NP (PRP Ye))
      (VP (VBN cast)
        (PRT (RP down))
        (SBAR (IN that)
          (S
            (VP (VBD breathed)
              (S
                (NP (DT the) (NNP Word) (NN declarin) ('' '))
                (ADJP
                  (NP (DT all) (NNS things))
                  (JJ good))))))))
    (. ?)))

advmod(stood-8, When-1)
advmod(store-4, first-2)
case(store-4, in-3)
nmod:in(stood-8, store-4)
det(beasties-7, the-5)
amod(beasties-7, new-made-6)
nsubj(stood-8, beasties-7)
dep(cast-12, stood-8)
auxpass(cast-12, Were-10)
nsubjpass(cast-12, Ye-11)
root(ROOT-0, cast-12)
compound:prt(cast-12, down-13)
mark(breathed-15, that-14)
ccomp(cast-12, breathed-15)
det(declarin-18, the-16)
compound(declarin-18, Word-17)
nsubj(good-22, declarin-18)
det(things-21, all-20)
nmod:npmod(good-22, things-21)
xcomp(breathed-15, good-22)

(ROOT
  (FRAG (RB Not)
    (ADVP (RB so) (. !))))

root(ROOT-0, Not-1)
dep(Not-1, so-2)

(ROOT
  (S
    (S
      (NP
        (NP (NNP O) (POS '))
        (NP
          (NP
            (NP (DT that) (NN warld-liftin) (POS '))
            (NN joy))
          (NP (DT no) (NN after-fall))))
      (VP (MD could)
        (VP (VB vex))))
    (, ,)
    (NP (PRP Ye))
    (VP (VBP 've)
      (VP (VBN left)
        (NP (DT a) (NN glimmer))
        (S
          (ADVP (RB still))
          (VP (TO to)
            (VP (VB cheer)
              (NP
                (NP (DT the) (NN Man))
                (: --)
                (NP (DT the) (NNP Arrtifex))))))))
    (. !)))

nsubj(vex-10, O-1)
case(O-1, '-2)
det(warld-liftin-4, that-3)
nmod:poss(joy-6, warld-liftin-4)
case(warld-liftin-4, '-5)
dep(O-1, joy-6)
neg(after-fall-8, no-7)
dep(joy-6, after-fall-8)
aux(vex-10, could-9)
ccomp(left-14, vex-10)
nsubj(left-14, Ye-12)
aux(left-14, 've-13)
root(ROOT-0, left-14)
det(glimmer-16, a-15)
dobj(left-14, glimmer-16)
advmod(cheer-19, still-17)
mark(cheer-19, to-18)
advcl(left-14, cheer-19)
det(Man-21, the-20)
dobj(cheer-19, Man-21)
det(Arrtifex-24, the-23)
dep(Man-21, Arrtifex-24)

(ROOT
  (S
    (S
      (ADVP (RB _))
      (NP (DT That))
      (VP
        (ADVP (RB _))
        (VBZ holds) (, ,)
        (PP (IN in)
          (NP
            (NP
              (NP
                (NP (NN spite) (NN o) (POS '))
                (NN knock)
                (CC and)
                (NN scale))
              (, ,)
              (NP
                (NP (NNP o) (POS '))
                (NN friction)))
            (, ,)
            (NP (NN waste))
            (, an) ('' ')))
        (NP
          (NP (NN slip))
          (, ,)
          (NP
            (NP (NNP An) (POS '))
            (PP (IN by)
              (NP (DT that) (NN light)))))
        (PRN (: --)
          (ADVP (RB now))
          (, ,)
          (VP (VBP mark)
            (NP (PRP$ my) (NN word)))
          (: --))))
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB build)
        (NP (DT the) (NNP Perfect) (NNP Ship))))
    (. .)))

advmod(holds-4, _-1)
nsubj(holds-4, That-2)
advmod(holds-4, _-3)
dep(build-37, holds-4)
case(knock-10, in-6)
compound(o-8, spite-7)
nmod:poss(knock-10, o-8)
case(o-8, '-9)
nmod:in(holds-4, knock-10)
cc(knock-10, and-11)
nmod:in(holds-4, scale-12)
conj:and(knock-10, scale-12)
nmod:poss(friction-16, o-14)
case(o-14, '-15)
appos(knock-10, friction-16)
appos(knock-10, waste-18)
dobj(holds-4, slip-21)
appos(slip-21, An-23)
case(An-23, '-24)
case(light-27, by-25)
det(light-27, that-26)
nmod:by(An-23, light-27)
dep(mark-31, now-29)
dep(holds-4, mark-31)
nmod:poss(word-33, my-32)
dobj(mark-31, word-33)
nsubj(build-37, we-35)
aux(build-37, 'll-36)
root(ROOT-0, build-37)
det(Ship-40, the-38)
compound(Ship-40, Perfect-39)
dobj(build-37, Ship-40)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB last)
        (S
          (VP (TO to)
            (VP
              (VP (VB judge)
                (NP (PRP$ her) (NNS lines)))
              (CC or)
              (VP (VB take)
                (NP
                  (NP (PRP$ her) (NN curve))
                  (PRN (: --) (RB not)
                    (NP (PRP I))))))))))
    (. .)))

nsubj(last-4, I-1)
nsubj:xsubj(judge-6, I-1)
nsubj:xsubj(take-10, I-1)
aux(last-4, 'll-2)
neg(last-4, never-3)
root(ROOT-0, last-4)
mark(judge-6, to-5)
xcomp(last-4, judge-6)
nmod:poss(lines-8, her-7)
dobj(judge-6, lines-8)
cc(judge-6, or-9)
xcomp(last-4, take-10)
conj:or(judge-6, take-10)
nmod:poss(curve-12, her-11)
dobj(take-10, curve-12)
dep(I-15, not-14)
dep(curve-12, I-15)

(ROOT
  (S
    (S (CC But)
      (NP (PRP I))
      (VP (VBP ha) ('' ')
        (NP (RB lived) (DT an))
        ('' ')))
    (NP (PRP I))
    (VP (VBP ha)
      (SBAR
        (S
          (NP (POS '))
          (VP (VBD worked)))))
    (. .)))

cc(ha-3, But-1)
nsubj(ha-3, I-2)
dep(ha-9, ha-3)
advmod(an-6, lived-5)
dobj(ha-3, an-6)
nsubj(ha-9, I-8)
root(ROOT-0, ha-9)
nsubj(worked-11, '-10)
ccomp(ha-9, worked-11)

(ROOT
  (S (`` `)
    (VP (VB Be)
      (ADJP (JJ thanks)
        (PP (TO to)
          (NP (NNP Thee))))
      (, ,)
      (NP (RBS Most) (JJ High)))
    (. !)))

cop(thanks-3, Be-2)
root(ROOT-0, thanks-3)
case(Thee-5, to-4)
nmod:to(thanks-3, Thee-5)
advmod(High-8, Most-7)
dep(thanks-3, High-8)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (NNP An) (POS '))
          (NN I) (NN ha) ('' '))
        (VP (VBN done)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP ha) ('' '))))))
      (VP (VBN done)))
    (: --)
    (SINV
      (VP (VBP judge)
        (NP (PRP Thou))
        (SBAR (IN if)
          (FRAG
            (UCP
              (ADJP (RB ill))
              (CC or)
              (ADVP (RB well) (: --))))))
      (NP
        (NP (NNP Always) (NNP Thy) (NNP Grace) (NN preventin) (POS '))
        (NX (FW me))))
    (: ...) (. .)))

nmod:poss(ha-4, An-1)
case(An-1, '-2)
compound(ha-4, I-3)
nsubj(done-11, ha-4)
acl(ha-4, done-6)
dobj(ha-9, what-7)
nsubj(ha-9, I-8)
ccomp(done-6, ha-9)
root(ROOT-0, done-11)
parataxis(done-11, judge-13)
dobj(judge-13, Thou-14)
mark(ill-16, if-15)
advcl(judge-13, ill-16)
cc(ill-16, or-17)
advmod(ill-16, well-18)
compound(preventin-23, Always-20)
compound(preventin-23, Thy-21)
compound(preventin-23, Grace-22)
nmod:poss(me-25, preventin-23)
case(preventin-23, '-24)
nsubj(judge-13, me-25)

(ROOT
  (S
    (VP (VB Losh))
    (. !)))

root(ROOT-0, Losh-1)

(ROOT
  (S
    (NP (NNP Yon))
    (VP (VBZ 's)
      (NP (DT the) (`` ``)
        (ADJP (VBN Stand)
          (PP (IN by)))
        ('' '') (NN bell)))
    (. .)))

nsubj(bell-8, Yon-1)
cop(bell-8, 's-2)
det(bell-8, the-3)
amod(bell-8, Stand-5)
nmod(Stand-5, by-6)
root(ROOT-0, bell-8)

(ROOT
  (FRAG
    (NP (NN Pilot))
    (ADVP (RB so) (RB soon))
    (. ?)))

root(ROOT-0, Pilot-1)
advmod(soon-3, so-2)
dep(Pilot-1, soon-3)

(ROOT
  (S
    (NP (PRP$ His))
    (VP (VBP flare)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)))))
    (. .)))

nsubj(flare-2, His-1)
root(ROOT-0, flare-2)
nsubj(is-4, it-3)
ccomp(flare-2, is-4)

(ROOT
  (S
    (NP
      (NP (DT The) (NN mornin) (POS '))
      (JJ -) (NN watch))
    (VP (VBZ is)
      (VP (VBN set)))
    (. .)))

det(mornin-2, The-1)
nmod:poss(watch-5, mornin-2)
case(mornin-2, '-3)
amod(watch-5, --4)
nsubjpass(set-7, watch-5)
auxpass(set-7, is-6)
root(ROOT-0, set-7)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (NNP God))
      (VP (VBP be)
        (ADJP (JJ thanked))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBN sayin))))))
      ('' '))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (NP (DT no) (NNP Pelagian))
      (ADVP (RB yet)))
    (. .)))

discourse(thanked-5, Well-1)
nsubj(thanked-5, God-3)
cop(thanked-5, be-4)
ccomp(Pelagian-16, thanked-5)
mark(sayin-10, as-7)
nsubjpass(sayin-10, I-8)
auxpass(sayin-10, was-9)
advcl(thanked-5, sayin-10)
nsubj(Pelagian-16, I-13)
cop(Pelagian-16, 'm-14)
neg(Pelagian-16, no-15)
root(ROOT-0, Pelagian-16)
advmod(Pelagian-16, yet-17)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB tak) ('' ')
          (PP (IN on)))))
    (: ...)
    (S
      (VP (VBG _)
        (NP (`` `)
          (NP (NNP Morrn))
          (, ,)
          (NP (NNP Ferguson)))))
    (. .)))

advmod(tak-4, Now-1)
nsubj(tak-4, I-2)
aux(tak-4, 'll-3)
root(ROOT-0, tak-4)
nmod(tak-4, on-6)
parataxis(tak-4, _-8)
dobj(_-8, Morrn-10)
appos(Morrn-10, Ferguson-12)

(ROOT
  (S
    (NP (NNP Man))
    (, ,)
    (VP (VB have)
      (S
        (NP (PRP ye))
        (ADVP (RB ever))
        (VP (VBD thought)
          (SBAR
            (WHNP (WP What))
            (S
              (NP (PRP$ your) (JJ good) (NN leddy))
              (VP (VBZ costs)
                (PP (IN in)
                  (NP (NN coal)))))))))
    (. ?)))

nsubj(have-3, Man-1)
root(ROOT-0, have-3)
nsubj(thought-6, ye-4)
advmod(thought-6, ever-5)
ccomp(have-3, thought-6)
dobj(costs-11, What-7)
nmod:poss(leddy-10, your-8)
amod(leddy-10, good-9)
nsubj(costs-11, leddy-10)
ccomp(thought-6, costs-11)
case(coal-13, in-12)
nmod:in(costs-11, coal-13)

(ROOT
  (S (: ...)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB burn)
        (NP (PRP 'em))
        (PRT (RP down))
        (PP (TO to)
          (NP (NN port)))))
    (. .)))

nsubj(burn-4, I-2)
aux(burn-4, 'll-3)
root(ROOT-0, burn-4)
dobj(burn-4, 'em-5)
compound:prt(burn-4, down-6)
case(port-8, to-7)
nmod:to(burn-4, port-8)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP THE))
      (VP (VBZ MIRACLES)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD sent)
              (NP
                (NP (DT a) (NN message))
                (PP (TO to)
                  (NP (PRP$ my) (NN dear)))
                (PRN (: --)
                  (UCP
                    (NP (DT A) (CD thousand) (NNS leagues))
                    (CC and)
                    (ADJP (JJR more)
                      (PP (TO to)
                        (NP (PRP Her)))))
                  (: --))
                (NP
                  (NP (DT The) (JJ dumb) (NNS sea-levels))
                  (VP (VBN thrilled)
                    (S
                      (VP (TO to)
                        (VP (VB hear))))))))))))
    (, ,)
    (CC And)
    (S
      (NP (NNP Lost) (NNP Atlantis))
      (VP (VBD bore)
        (PP (TO to)
          (NP (PRP Her)))))
    (. .)))

compound(THE-2, _-1)
nsubj(MIRACLES-3, THE-2)
root(ROOT-0, MIRACLES-3)
nsubj(sent-5, I-4)
ccomp(MIRACLES-3, sent-5)
det(message-7, a-6)
dobj(sent-5, message-7)
case(dear-10, to-8)
nmod:poss(dear-10, my-9)
nmod:to(message-7, dear-10)
det(leagues-14, A-12)
nummod(leagues-14, thousand-13)
dep(message-7, leagues-14)
cc(leagues-14, and-15)
dep(message-7, more-16)
conj:and(leagues-14, more-16)
case(Her-18, to-17)
nmod:to(more-16, Her-18)
det(sea-levels-22, The-20)
amod(sea-levels-22, dumb-21)
dep(message-7, sea-levels-22)
acl(sea-levels-22, thrilled-23)
mark(hear-25, to-24)
xcomp(thrilled-23, hear-25)
cc(MIRACLES-3, And-27)
compound(Atlantis-29, Lost-28)
nsubj(bore-30, Atlantis-29)
conj:and(MIRACLES-3, bore-30)
case(Her-32, to-31)
nmod:to(bore-30, Her-32)

(ROOT
  (S
    (PP (IN Behind)
      (NP (PRP$ my) (NN message)))
    (S
      (ADVP (RB hard))
      (NP (PRP I))
      (VP (VBD came)))
    (, ,)
    (CC And)
    (S
      (NP (NN nigh))
      (VP (VBD had)
        (VP (VBN found)
          (NP
            (NP (DT a) (NN grave))
            (PP (IN for)
              (NP (PRP me)))))))
    (: ;)
    (CC But)
    (S
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD launched)
            (PP (IN of)
              (NP (NN steel)
                (CC and)
                (NN flame))))))
      (VP (VBD Did)
        (NP (NN war))
        (PP (IN against)
          (NP (DT the) (NN wave)))
        (PP (IN for)
          (NP (PRP me)))))
    (. .)))

case(message-3, Behind-1)
nmod:poss(message-3, my-2)
nmod:behind(came-6, message-3)
advmod(came-6, hard-4)
nsubj(came-6, I-5)
root(ROOT-0, came-6)
cc(came-6, And-8)
nsubj(found-11, nigh-9)
aux(found-11, had-10)
conj:and(came-6, found-11)
det(grave-13, a-12)
dobj(found-11, grave-13)
case(me-15, for-14)
nmod:for(grave-13, me-15)
cc(came-6, But-17)
mark(launched-20, that-18)
nsubj(launched-20, I-19)
csubj(Did-25, launched-20)
case(steel-22, of-21)
nmod:of(launched-20, steel-22)
cc(steel-22, and-23)
nmod:of(launched-20, flame-24)
conj:and(steel-22, flame-24)
conj:and(came-6, Did-25)
dobj(Did-25, war-26)
case(wave-29, against-27)
det(wave-29, the-28)
nmod:against(Did-25, wave-29)
case(me-31, for-30)
nmod:for(Did-25, me-31)

(ROOT
  (S
    (VP (VB Uprose)
      (NP (DT the) (JJ deep))
      (, ,)
      (PP (IN by)
        (S
          (S
            (ADJP (JJ gale)
              (PP (IN on)
                (NP (NN gale)))))
          (, ,)
          (S
            (VP (TO To)
              (VP (VB bid)
                (S
                  (NP (PRP me))
                  (VP (VB change)
                    (NP (PRP$ my) (NN mind))
                    (ADVP (RB again))
                    (: --)
                    (S
                      (NP (PRP He))
                      (VP (VBD broke)
                        (NP (PRP$ his) (NNS teeth))
                        (PP (IN along)
                          (NP (PRP$ my) (NN rail))))))))))
          (, ,)
          (S (CC And)
            (, ,)
            (S
              (NP (VBG roaring)))
            (, ,)
            (VP (VBD swung)
              (PRT (RP behind))
              (ADVP (RB again)))))))
    (. .)))

root(ROOT-0, Uprose-1)
det(deep-3, the-2)
dobj(Uprose-1, deep-3)
mark(gale-6, by-5)
advcl(Uprose-1, gale-6)
case(gale-8, on-7)
nmod:on(gale-6, gale-8)
mark(bid-11, To-10)
parataxis(gale-6, bid-11)
nsubj(change-13, me-12)
ccomp(bid-11, change-13)
nmod:poss(mind-15, my-14)
dobj(change-13, mind-15)
advmod(change-13, again-16)
nsubj(broke-19, He-18)
parataxis(change-13, broke-19)
nmod:poss(teeth-21, his-20)
dobj(broke-19, teeth-21)
case(rail-24, along-22)
nmod:poss(rail-24, my-23)
nmod:along(broke-19, rail-24)
cc(swung-30, And-26)
dep(swung-30, roaring-28)
parataxis(gale-6, swung-30)
compound:prt(swung-30, behind-31)
advmod(swung-30, again-32)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBD stayed)
          (NP (DT the) (NN sun))
          (PP (IN at)
            (NP (NN noon)))
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP$ My) (NN way))
                (PP (IN across)
                  (NP
                    (NP (DT the) (NN waste))
                    (PP (IN of)
                      (NP (PRP it))))))))))
      (: ;)
      (S
        (NP (PRP I))
        (VP (VBD read)
          (NP (DT the) (NN storm))
          (SBAR (IN before)
            (S
              (NP (PRP it))
              (VP (VBD fell)))))))
    (CC And)
    (S
      (VP (VBN made)
        (NP
          (NP (DT the) (JJR better) (NN haste))
          (PP (IN of)
            (NP (PRP it))))))
    (. .)))

nsubj(stayed-2, I-1)
nsubj(made-25, I-1)
root(ROOT-0, stayed-2)
det(sun-4, the-3)
dobj(stayed-2, sun-4)
case(noon-6, at-5)
nmod:at(stayed-2, noon-6)
mark(tell-8, to-7)
advcl(stayed-2, tell-8)
nmod:poss(way-10, My-9)
dobj(tell-8, way-10)
case(waste-13, across-11)
det(waste-13, the-12)
nmod:across(tell-8, waste-13)
case(it-15, of-14)
nmod:of(waste-13, it-15)
nsubj(read-18, I-17)
parataxis(stayed-2, read-18)
det(storm-20, the-19)
dobj(read-18, storm-20)
mark(fell-23, before-21)
nsubj(fell-23, it-22)
advcl(read-18, fell-23)
cc(stayed-2, And-24)
conj:and(stayed-2, made-25)
det(haste-28, the-26)
amod(haste-28, better-27)
dobj(made-25, haste-28)
case(it-30, of-29)
nmod:of(haste-28, it-30)

(ROOT
  (S
    (ADVP (RB Afar))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBD hailed)
        (NP (DT the) (NN land))
        (PP (IN at)
          (NP (NN night)))))
    (: --)
    (S
      (NP
        (NP (DT The) (NNS towers))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD built)))))
      (VP (VBD had)
        (VP (VBN heard)
          (PP (IN of)
            (NP (PRP me))))))
    (: --)
    (CC And)
    (, ,)
    (S
      (ADVP (RB ere))
      (NP (PRP$ my) (NN rocket))
      (VP (VBD reached)
        (NP (PRP$ its) (NN height))))
    (, ,)
    (SBAR
      (SINV
        (VP (VBD Had)
          (VP (VBN flashed)
            (NP (PRP$ my) (NN Love))))
        (NP
          (NP (DT the) (NN word))
          (PP (IN of)
            (NP (PRP me))))))
    (. .)))

advmod(hailed-4, Afar-1)
nsubj(hailed-4, I-3)
root(ROOT-0, hailed-4)
det(land-6, the-5)
dobj(hailed-4, land-6)
case(night-8, at-7)
nmod:at(hailed-4, night-8)
det(towers-11, The-10)
nsubj(heard-15, towers-11)
nsubj(built-13, I-12)
acl:relcl(towers-11, built-13)
aux(heard-15, had-14)
conj:And(hailed-4, heard-15)
case(me-17, of-16)
nmod:of(heard-15, me-17)
cc(hailed-4, And-19)
advmod(reached-24, ere-21)
nmod:poss(rocket-23, my-22)
nsubj(reached-24, rocket-23)
conj:And(hailed-4, reached-24)
nmod:poss(height-26, its-25)
dobj(reached-24, height-26)
aux(flashed-29, Had-28)
conj:And(hailed-4, flashed-29)
nmod:poss(Love-31, my-30)
dobj(flashed-29, Love-31)
det(word-33, the-32)
nsubj(flashed-29, word-33)
case(me-35, of-34)
nmod:of(word-33, me-35)

(ROOT
  (S
    (S
      (NP (NNP Earth))
      (VP (VBD sold)
        (NP
          (NP (PRP$ her) (JJ chosen) (NNS men))
          (PP (IN of)
            (NP (NN strength))))
        (PRN (-LRB- -LRB-)
          (S
            (NP (PRP They))
            (VP
              (VP (VBD lived))
              (CC and)
              (VP
                (VP (VBD strove))
                (CC and)
                (VP (VBD died)
                  (PP (IN for)
                    (NP (PRP me)))))))
          (-RRB- -RRB-))
        (S
          (VP (TO To)
            (VP (VB drive)
              (S
                (NP (PRP$ my) (NN road))
                (NP
                  (NP (DT a) (NN nation) (POS 's))
                  (NN length))))))))
    (, ,)
    (CC And)
    (S
      (VP (VB toss)
        (NP (DT the) (NNS miles))
        (ADVP (RB aside))
        (PP (IN for)
          (NP (PRP me)))))
    (. .)))

nsubj(sold-2, Earth-1)
nsubj(toss-28, Earth-1)
root(ROOT-0, sold-2)
nmod:poss(men-5, her-3)
amod(men-5, chosen-4)
dobj(sold-2, men-5)
case(strength-7, of-6)
nmod:of(men-5, strength-7)
nsubj(lived-10, They-9)
nsubj(strove-12, They-9)
parataxis(sold-2, lived-10)
cc(lived-10, and-11)
parataxis(sold-2, strove-12)
conj:and(lived-10, strove-12)
cc(strove-12, and-13)
conj:and(lived-10, died-14)
conj:and(strove-12, died-14)
case(me-16, for-15)
nmod:for(died-14, me-16)
mark(drive-19, To-18)
advcl(sold-2, drive-19)
nmod:poss(road-21, my-20)
nsubj(length-25, road-21)
det(nation-23, a-22)
nmod:poss(length-25, nation-23)
case(nation-23, 's-24)
xcomp(drive-19, length-25)
cc(sold-2, And-27)
conj:and(sold-2, toss-28)
det(miles-30, the-29)
dobj(toss-28, miles-30)
advmod(toss-28, aside-31)
case(me-33, for-32)
nmod:for(toss-28, me-33)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD snatched)
        (SBAR
          (S
            (NP (PRP$ their))
            (VP (VBP toil)
              (S
                (VP (TO to)
                  (VP (VB serve)
                    (NP (PRP$ my) (NNS needs))
                    (: --)
                    (S
                      (ADJP (RB Too) (JJ slow))
                      (SBAR
                        (S
                          (NP (PRP$ their) (NN fleetest))
                          (VP (VBD flew)
                            (PP (IN for)
                              (NP (PRP me)))
                            (: --)
                            (S
                              (NP (PRP I))
                              (ADJP (JJ tired))
                              (S
                                (VP (VBG twenty)
                                  (NP (NN smoking) (NNS steeds)))))))))))))))))
    (, ,)
    (CC And)
    (S
      (ADVP (RB bade))
      (NP (PRP them))
      (VP (VBD bait)
        (NP (DT a) (JJ new))
        (PP (IN for)
          (NP (PRP me)))))
    (. .)))

nsubj(snatched-2, I-1)
root(ROOT-0, snatched-2)
nsubj(toil-4, their-3)
nsubj:xsubj(serve-6, their-3)
ccomp(snatched-2, toil-4)
mark(serve-6, to-5)
xcomp(toil-4, serve-6)
nmod:poss(needs-8, my-7)
dobj(serve-6, needs-8)
advmod(slow-11, Too-10)
dep(flew-14, slow-11)
nmod:poss(fleetest-13, their-12)
nsubj(flew-14, fleetest-13)
parataxis(serve-6, flew-14)
case(me-16, for-15)
nmod:for(flew-14, me-16)
nsubj(twenty-20, I-18)
dep(twenty-20, tired-19)
parataxis(flew-14, twenty-20)
compound(steeds-22, smoking-21)
dobj(twenty-20, steeds-22)
cc(snatched-2, And-24)
advmod(bait-27, bade-25)
nsubj(bait-27, them-26)
conj:and(snatched-2, bait-27)
det(new-29, a-28)
dobj(bait-27, new-29)
case(me-31, for-30)
nmod:for(bait-27, me-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD sent)
      (NP (DT the) (NNS lightnings))
      (PRT (RP forth))
      (S
        (VP (TO to)
          (VP (VB see)
            (SBARQ
              (WHADVP (WRB Where))))))
      (NP (NN hour))
      (PP (IN by)
        (NP
          (NP (NN hour))
          (SBAR
            (S
              (NP (PRP She))
              (VP (VBD waited)
                (NP (PRP me))))))))
    (. .)))

nsubj(sent-2, I-1)
root(ROOT-0, sent-2)
det(lightnings-4, the-3)
dobj(sent-2, lightnings-4)
compound:prt(sent-2, forth-5)
mark(see-7, to-6)
advcl(sent-2, see-7)
ccomp(see-7, Where-8)
dobj(sent-2, hour-9)
case(hour-11, by-10)
nmod:by(sent-2, hour-11)
nsubj(waited-13, She-12)
acl:relcl(hour-11, waited-13)
dobj(waited-13, me-14)

(ROOT
  (S
    (S
      (PP (IN Among)
        (NP
          (QP (CD ten) (CD million))))
      (NP (PRP one))
      (VP (VBD was)
        (NP (PRP She))))
    (, ,)
    (CC And)
    (S
      (ADVP (RB surely))
      (NP (DT all) (NNS men))
      (VP (VBZ hated)
        (NP (PRP me))))
    (. !)))

case(million-3, Among-1)
compound(million-3, ten-2)
nmod:among(She-6, million-3)
nsubj(She-6, one-4)
cop(She-6, was-5)
root(ROOT-0, She-6)
cc(She-6, And-8)
advmod(hated-12, surely-9)
det(men-11, all-10)
nsubj(hated-12, men-11)
conj:and(She-6, hated-12)
dobj(hated-12, me-13)

(ROOT
  (S
    (S
      (NP (NNP Dawn))
      (VP (VBD ran)
        (S
          (VP (TO to)
            (VP (VB meet)
              (NP (PRP me))
              (PP (IN at)
                (NP (PRP$ my) (NN goal))))))))
    (: --)
    (S
      (INTJ (UH Ah))
      (, ,)
      (NP
        (NP (NN day))
        (NP (DT no) (NN tongue)))
      (VP (MD shall)
        (VP (VB tell)
          (ADVP (RB again)))))
    (. !)))

nsubj(ran-2, Dawn-1)
nsubj:xsubj(meet-4, Dawn-1)
root(ROOT-0, ran-2)
mark(meet-4, to-3)
xcomp(ran-2, meet-4)
dobj(meet-4, me-5)
case(goal-8, at-6)
nmod:poss(goal-8, my-7)
nmod:at(meet-4, goal-8)
discourse(tell-16, Ah-10)
nsubj(tell-16, day-12)
neg(tongue-14, no-13)
dep(day-12, tongue-14)
aux(tell-16, shall-15)
parataxis(ran-2, tell-16)
advmod(tell-16, again-17)

(ROOT
  (S (CC And)
    (NP
      (NP (JJ little) (NN folk))
      (PP (IN of)
        (NP (JJ little) (NN soul))))
    (VP (VBZ Rose)
      (PRT (RP up))
      (S
        (VP (TO to)
          (VP (VB buy)
            (CC and)
            (VB sell)
            (ADVP (RB again))))))
    (. !)))

cc(Rose-7, And-1)
amod(folk-3, little-2)
nsubj(Rose-7, folk-3)
nsubj:xsubj(buy-10, folk-3)
nsubj:xsubj(sell-12, folk-3)
case(soul-6, of-4)
amod(soul-6, little-5)
nmod:of(folk-3, soul-6)
root(ROOT-0, Rose-7)
compound:prt(Rose-7, up-8)
mark(buy-10, to-9)
xcomp(Rose-7, buy-10)
cc(buy-10, and-11)
xcomp(Rose-7, sell-12)
conj:and(buy-10, sell-12)
advmod(buy-10, again-13)

(ROOT
  (NP
    (NP
      (NP (DT THE) (NN NATIVE-BORN))
      (SBAR
        (S
          (NP (PRP We))
          (VP (VBP 've)
            (VP (VBN drunk)
              (PP (TO to)
                (NP (DT the) (NN Queen))))))))
    (: --)
    (S
      (NP (NNP God))
      (VP (VB bless)
        (NP (PRP her))))
    (. !)))

det(NATIVE-BORN-2, THE-1)
root(ROOT-0, NATIVE-BORN-2)
nsubj(drunk-5, We-3)
aux(drunk-5, 've-4)
acl:relcl(NATIVE-BORN-2, drunk-5)
case(Queen-8, to-6)
det(Queen-8, the-7)
nmod:to(drunk-5, Queen-8)
nsubj(bless-11, God-10)
dep(NATIVE-BORN-2, bless-11)
dobj(bless-11, her-12)

(ROOT
  (S (: --)
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN drunk)
          (PP (TO to)
            (NP
              (NP (PRP$ our) (NNS mothers) (POS '))
              (NN land))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN drunk)
          (PP (TO to)
            (NP
              (NP (PRP$ our) (JJ English) (NN brother))
              (PRN (-LRB- -LRB-)
                (S
                  (ADVP (CC But))
                  (NP (PRP he))
                  (VP (VBZ does) (RB not)
                    (VP (VB understand))))
                (-RRB- -RRB-)))))))
    (: ;)
    (S
      (S
        (NP (PRP We))
        (VP (VBP 've)
          (VP (VBN drunk)
            (PP (TO to)
              (NP (DT the) (JJ wide) (NN creation))))))
      (, ,)
      (CC And)
      (S
        (NP (DT the) (NNP Cross))
        (VP (VBZ swings)
          (ADJP (JJ low)
            (PP (IN for)
              (NP
                (NP (DT the) (NN morn))
                (: ;)
                (NP (JJ Last) (NN toast))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN of)
        (NP (NN obligation)))
      (, ,)
      (NP
        (NP (DT A) (NN health))
        (PP (TO to)
          (NP (DT the) (NN Native-born)))))
    (. !)))

nsubj(drunk-4, We-2)
aux(drunk-4, 've-3)
root(ROOT-0, drunk-4)
case(land-9, to-5)
nmod:poss(mothers-7, our-6)
nmod:poss(land-9, mothers-7)
case(mothers-7, '-8)
nmod:to(drunk-4, land-9)
nsubj(drunk-13, We-11)
aux(drunk-13, 've-12)
conj:and(drunk-4, drunk-13)
case(brother-17, to-14)
nmod:poss(brother-17, our-15)
amod(brother-17, English-16)
nmod:to(drunk-13, brother-17)
advmod(understand-23, But-19)
nsubj(understand-23, he-20)
aux(understand-23, does-21)
neg(understand-23, not-22)
dep(brother-17, understand-23)
nsubj(drunk-28, We-26)
aux(drunk-28, 've-27)
conj:and(drunk-4, drunk-28)
case(creation-32, to-29)
det(creation-32, the-30)
amod(creation-32, wide-31)
nmod:to(drunk-28, creation-32)
cc(drunk-28, And-34)
det(Cross-36, the-35)
nsubj(swings-37, Cross-36)
conj:and(drunk-4, swings-37)
conj:and(drunk-28, swings-37)
xcomp(swings-37, low-38)
case(morn-41, for-39)
det(morn-41, the-40)
nmod:for(low-38, morn-41)
amod(toast-44, Last-43)
dep(morn-41, toast-44)
cc(drunk-4, and-46)
case(obligation-48, of-47)
dep(health-51, obligation-48)
det(health-51, A-50)
conj:and(drunk-4, health-51)
case(Native-born-54, to-52)
det(Native-born-54, the-53)
nmod:to(health-51, Native-born-54)

(ROOT
  (FRAG
    (FRAG
      (NP (PRP They))
      (VP (VB change)
        (NP (PRP$ their) (NNS skies))
        (PP (IN above)
          (NP (PRP them)))))
    (, ,)
    (FRAG (CC But)
      (RB not)
      (NP
        (NP (PRP$ their) (NNS hearts))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP roam)))))
      (. !))))

root(ROOT-0, They-1)
dep(They-1, change-2)
nmod:poss(skies-4, their-3)
dobj(change-2, skies-4)
case(them-6, above-5)
nmod:above(change-2, them-6)
cc(not-9, But-8)
parataxis(They-1, not-9)
nmod:poss(hearts-11, their-10)
dep(not-9, hearts-11)
nsubj(roam-13, hearts-11)
ref(hearts-11, that-12)
acl:relcl(hearts-11, roam-13)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD learned)
        (PP (IN from)
          (NP (PRP$ our) (JJ wistful) (NNS mothers)))
        (S
          (VP (TO To)
            (VP (VB call)
              (S
                (NP (JJ old) (NNP England))
                (`` ``)
                (ADJP (NN home))
                ('' '')))))))
    (: ;)
    (S
      (S
        (NP (PRP We))
        (VP (VBD read)
          (PP (IN of)
            (NP (DT the) (JJ English) (NN skylark)))
          (, ,)
          (PP (IN Of)
            (NP
              (NP (DT the) (NN spring))
              (PP (IN in)
                (NP (DT the) (JJ English) (NNS lanes)))))))
      (, ,)
      (CC But)
      (S
        (NP (PRP we))
        (VP (VBD screamed)
          (PP (IN with)
            (NP (DT the) (VBN painted) (NNS lories)))
          (SBAR (IN As)
            (S
              (NP (PRP we))
              (VP (VBD rode)
                (PP (IN on)
                  (NP (DT the) (JJ dusty) (NNS plains)))))))))
    (. !)))

nsubj(learned-2, We-1)
nsubj:xsubj(call-8, We-1)
root(ROOT-0, learned-2)
case(mothers-6, from-3)
nmod:poss(mothers-6, our-4)
amod(mothers-6, wistful-5)
nmod:from(learned-2, mothers-6)
mark(call-8, To-7)
xcomp(learned-2, call-8)
amod(England-10, old-9)
dep(home-12, England-10)
xcomp(call-8, home-12)
nsubj(read-16, We-15)
parataxis(learned-2, read-16)
case(skylark-20, of-17)
det(skylark-20, the-18)
amod(skylark-20, English-19)
nmod:of(read-16, skylark-20)
case(spring-24, Of-22)
det(spring-24, the-23)
nmod:of(read-16, spring-24)
case(lanes-28, in-25)
det(lanes-28, the-26)
amod(lanes-28, English-27)
nmod:in(spring-24, lanes-28)
cc(read-16, But-30)
nsubj(screamed-32, we-31)
parataxis(learned-2, screamed-32)
conj:but(read-16, screamed-32)
case(lories-36, with-33)
det(lories-36, the-34)
amod(lories-36, painted-35)
nmod:with(screamed-32, lories-36)
mark(rode-39, As-37)
nsubj(rode-39, we-38)
advcl(screamed-32, rode-39)
case(plains-43, on-40)
det(plains-43, the-41)
amod(plains-43, dusty-42)
nmod:on(rode-39, plains-43)

(ROOT
  (S
    (S
      (S
        (S
          (NP (PRP They))
          (VP (VBD passed)
            (PP (IN with)
              (NP
                (NP (PRP$ their) (JJ old-world) (NNS legends))
                (PRN (: --)
                  (NP
                    (NP (PRP$ Their) (NNS tales))
                    (PP (IN of)
                      (NP
                        (NP (JJ wrong))
                        (CC and)
                        (NP (NN dearth)))))
                  (: --))))))
        (PRN
          (S
            (NP (PRP$ Our) (NNS fathers))
            (VP (VBD held)
              (PP (IN by)
                (NP (NN purchase)))))
          (, ,)))
      (CC But)
      (S
        (NP (PRP we))
        (PP (IN by)
          (NP
            (NP (DT the) (NN right))
            (PP (IN of)
              (NP (NN birth)))))))
    (: ;)
    (S
      (S
        (NP (PRP$ Our) (NN heart))
        (VP (VBZ 's)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP they))
              (VP (VBD rocked)
                (NP
                  (NP (PRP$ our) (NN cradle))
                  (, ,)
                  (NP
                    (NP (PRP$ Our) (NN love))
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (PRP we))
                        (VP (VBD spent)
                          (NP (PRP$ our) (NN toil))))))))))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP
            (NP (PRP$ our) (NN faith))
            (CC and)
            (NP (PRP$ our) (NN hope)))
          (CC and)
          (NP
            (NP (PRP$ our) (NN honour))
            (NP (PRP We))))
        (VP (VBZ pledge)
          (PP (TO to)
            (NP (PRP$ our) (JJ native) (NN soil))))))
    (. !)))

nsubj(passed-2, They-1)
root(ROOT-0, passed-2)
case(legends-6, with-3)
nmod:poss(legends-6, their-4)
amod(legends-6, old-world-5)
nmod:with(passed-2, legends-6)
nmod:poss(tales-9, Their-8)
dep(legends-6, tales-9)
case(wrong-11, of-10)
nmod:of(tales-9, wrong-11)
cc(wrong-11, and-12)
nmod:of(tales-9, dearth-13)
conj:and(wrong-11, dearth-13)
nmod:poss(fathers-16, Our-15)
nsubj(held-17, fathers-16)
dep(passed-2, held-17)
case(purchase-19, by-18)
nmod:by(held-17, purchase-19)
cc(passed-2, But-21)
conj:but(passed-2, we-22)
case(right-25, by-23)
det(right-25, the-24)
dep(we-22, right-25)
case(birth-27, of-26)
nmod:of(right-25, birth-27)
nmod:poss(heart-30, Our-29)
nsubj('s-31, heart-30)
parataxis(passed-2, 's-31)
advmod(rocked-34, where-32)
nsubj(rocked-34, they-33)
advcl('s-31, rocked-34)
nmod:poss(cradle-36, our-35)
dobj(rocked-34, cradle-36)
nmod:poss(love-39, Our-38)
appos(cradle-36, love-39)
advmod(spent-42, where-40)
nsubj(spent-42, we-41)
acl:relcl(love-39, spent-42)
nmod:poss(toil-44, our-43)
dobj(spent-42, toil-44)
cc('s-31, And-46)
nmod:poss(faith-48, our-47)
nsubj(pledge-56, faith-48)
cc(faith-48, and-49)
nmod:poss(hope-51, our-50)
conj:and(faith-48, hope-51)
nsubj(pledge-56, hope-51)
cc(faith-48, and-52)
nmod:poss(honour-54, our-53)
conj:and(faith-48, honour-54)
nsubj(pledge-56, honour-54)
dep(honour-54, We-55)
parataxis(passed-2, pledge-56)
conj:and('s-31, pledge-56)
case(soil-60, to-57)
nmod:poss(soil-60, our-58)
amod(soil-60, native-59)
nmod:to(pledge-56, soil-60)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP charge)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP charge)
              (NP (PRP$ your) (NNS glasses)))))))
    (: --)
    (S
      (S
        (NP (PRP I))
        (VP (VBP charge)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP drink)
                (PP (IN with)
                  (NP (PRP me)))
                (PP (TO To)
                  (NP
                    (NP (DT the) (NNS men))
                    (PP (IN of)
                      (NP (DT the) (CD Four) (NNP New) (NNPS Nations))))))))))
      (, ,)
      (CC And)
      (S
        (S
          (NP
            (NP (DT the) (NNPS Islands))
            (PP (IN of)
              (NP
                (NP (DT the) (NN Sea))
                (: --)
                (PP (TO To)
                  (NP
                    (NP (DT the) (JJ last) (JJS least) (NN lump))
                    (PP (IN of)
                      (NP (NN coral)))))
                (NP (DT That) (NN none)))))
          (VP (MD may)
            (VP (VB stand)
              (ADVP (RB outside)))))
        (, ,)
        (CC And)
        (S
          (NP (PRP$ our) (JJ own) (JJ good) (NN pride))
          (VP (MD shall)
            (VP (VB teach)
              (S
                (NP (PRP us))
                (VP (TO To)
                  (VP (VB praise)
                    (NP
                      (NP (PRP$ our) (NN comrade) (POS 's))
                      (NN pride))))))))))
    (. !)))

nsubj(charge-2, I-1)
root(ROOT-0, charge-2)
nsubj(charge-4, you-3)
ccomp(charge-2, charge-4)
nmod:poss(glasses-6, your-5)
dobj(charge-4, glasses-6)
nsubj(charge-9, I-8)
parataxis(charge-2, charge-9)
nsubj(drink-11, you-10)
ccomp(charge-9, drink-11)
case(me-13, with-12)
nmod:with(drink-11, me-13)
case(men-16, To-14)
det(men-16, the-15)
nmod:to(drink-11, men-16)
case(Nations-21, of-17)
det(Nations-21, the-18)
nummod(Nations-21, Four-19)
compound(Nations-21, New-20)
nmod:of(men-16, Nations-21)
cc(charge-9, And-23)
det(Islands-25, the-24)
nsubj(stand-40, Islands-25)
case(Sea-28, of-26)
det(Sea-28, the-27)
nmod:of(Islands-25, Sea-28)
case(lump-34, To-30)
det(lump-34, the-31)
amod(lump-34, last-32)
amod(lump-34, least-33)
nmod:to(Sea-28, lump-34)
case(coral-36, of-35)
nmod:of(lump-34, coral-36)
det(none-38, That-37)
dep(Sea-28, none-38)
aux(stand-40, may-39)
parataxis(charge-2, stand-40)
conj:and(charge-9, stand-40)
advmod(stand-40, outside-41)
cc(stand-40, And-43)
nmod:poss(pride-47, our-44)
amod(pride-47, own-45)
amod(pride-47, good-46)
nsubj(teach-49, pride-47)
aux(teach-49, shall-48)
conj:and(charge-9, teach-49)
conj:and(stand-40, teach-49)
dobj(teach-49, us-50)
nsubj:xsubj(praise-52, us-50)
mark(praise-52, To-51)
xcomp(teach-49, praise-52)
nmod:poss(comrade-54, our-53)
nmod:poss(pride-56, comrade-54)
case(comrade-54, 's-55)
dobj(praise-52, pride-56)

(ROOT
  (S
    (PP
      (PP (TO To)
        (NP
          (NP (DT the) (NN hush))
          (PP (IN of)
            (NP (DT the) (JJ breathless) (NN morning)))))
      (IN On)
      (NP (DT the) (JJ thin)))
    (, ,)
    (S
      (NP
        (NP (NN tin))
        (, ,)
        (NP (VBG crackling) (NNS roofs))
        (, ,))
      (PP (TO To)
        (NP
          (NP (DT the) (NN haze))
          (PP (IN of)
            (NP (DT the) (JJ burned) (NNS back-ranges))))))
    (CC And)
    (S
      (NP
        (NP (DT the) (NN dust))
        (PP (IN of)
          (NP (DT the) (NNS shoeless))))
      (VP (VBZ hoofs)
        (PRN (: --)
          (PP (TO To)
            (NP
              (NP (DT the) (NN risk))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN death))
                  (PP (IN by)
                    (S
                      (VP (VBG drowning) (, ,)
                        (PP (TO To)
                          (NP
                            (NP (DT the) (NN risk))
                            (PP (IN of)
                              (NP (DT a) (NN death)))))
                        (PP (IN by)
                          (NP (NN drouth))))))))))
          (: --))
        (PP (TO To)
          (NP
            (NP (DT the) (NNS men))
            (PP (IN of)
              (NP
                (QP (DT a) (CD million))
                (NNS acres)))
            (, ,)
            (PP (TO To)
              (NP (DT the) (NNPS Sons)))
            (PP (IN of)
              (NP (DT the) (NNP Golden) (NNP South)))))))
    (. !)))

case(hush-3, To-1)
det(hush-3, the-2)
nmod:to(thin-10, hush-3)
case(morning-7, of-4)
det(morning-7, the-5)
amod(morning-7, breathless-6)
nmod:of(hush-3, morning-7)
case(thin-10, On-8)
det(thin-10, the-9)
nmod:on(tin-12, thin-10)
root(ROOT-0, tin-12)
amod(roofs-15, crackling-14)
appos(tin-12, roofs-15)
case(haze-19, To-17)
det(haze-19, the-18)
dep(tin-12, haze-19)
case(back-ranges-23, of-20)
det(back-ranges-23, the-21)
amod(back-ranges-23, burned-22)
nmod:of(haze-19, back-ranges-23)
cc(tin-12, And-24)
det(dust-26, the-25)
nsubj(hoofs-30, dust-26)
case(shoeless-29, of-27)
det(shoeless-29, the-28)
nmod:of(dust-26, shoeless-29)
conj:and(tin-12, hoofs-30)
case(risk-34, To-32)
det(risk-34, the-33)
dep(hoofs-30, risk-34)
case(death-37, of-35)
det(death-37, a-36)
nmod:of(risk-34, death-37)
mark(drowning-39, by-38)
acl(death-37, drowning-39)
case(risk-43, To-41)
det(risk-43, the-42)
nmod:to(drowning-39, risk-43)
case(death-46, of-44)
det(death-46, a-45)
nmod:of(risk-43, death-46)
case(drouth-48, by-47)
nmod:by(drowning-39, drouth-48)
case(men-52, To-50)
det(men-52, the-51)
nmod:to(hoofs-30, men-52)
case(acres-56, of-53)
advmod(million-55, a-54)
nummod(acres-56, million-55)
nmod:of(men-52, acres-56)
case(Sons-60, To-58)
det(Sons-60, the-59)
nmod:to(men-52, Sons-60)
case(South-64, of-61)
det(South-64, the-62)
compound(South-64, Golden-63)
nmod:of(men-52, South-64)

(ROOT
  (PP (TO To)
    (NP
      (NP (DT the) (NNPS Sons))
      (PP (IN of)
        (NP
          (NP (DT the) (NNP Golden) (NNP South))
          (PRN (-LRB- -LRB-)
            (ADVP (RB Stand) (RB up) (. !))
            (-RRB- -RRB-)))))))

case(Sons-3, To-1)
det(Sons-3, the-2)
root(ROOT-0, Sons-3)
case(South-7, of-4)
det(South-7, the-5)
compound(South-7, Golden-6)
nmod:of(Sons-3, South-7)
advmod(up-10, Stand-9)
dep(South-7, up-10)

(ROOT
  (PRN (, ,)
    (S
      (S (CC And)
        (NP (DT the) (NN life))
        (NP (PRP we))
        (VP (VBP live)))
      (CC and)
      (S
        (S
          (VP (VB know) (, ,) (VB Let)
            (NP (DT a) (JJ fellow) (JJ sing) (NN o) ('' '))
            (S
              (NP
                (NP (DT the) (JJ little) (NNS things))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBZ cares)
                      (PRT (RP about)))))))))
        (, ,)
        (SBAR (IN If)
          (S
            (NP (DT a) (NN fellow))
            (VP (VBZ fights)
              (PP (IN for)
                (NP (DT the) (JJ little) (NNS things))))))
        (NP (PRP he))
        (VP (VBZ cares)
          (PP (IN about)
            (FRAG
              (PP (IN With)
                (NP
                  (NP (DT the) (NN weight))
                  (PP (IN of)
                    (NP (DT a) (JJ single) (NN blow)))))
              (. !))))))))

cc(live-6, And-2)
det(life-4, the-3)
nsubj(live-6, life-4)
nsubj(live-6, we-5)
root(ROOT-0, live-6)
cc(live-6, and-7)
ccomp(cares-32, know-8)
dep(know-8, Let-10)
det(o-14, a-11)
amod(o-14, fellow-12)
amod(o-14, sing-13)
dobj(know-8, o-14)
det(things-18, the-16)
amod(things-18, little-17)
xcomp(know-8, things-18)
nsubj(cares-20, he-19)
acl:relcl(things-18, cares-20)
compound:prt(cares-20, about-21)
mark(fights-26, If-23)
det(fellow-25, a-24)
nsubj(fights-26, fellow-25)
advcl(cares-32, fights-26)
case(things-30, for-27)
det(things-30, the-28)
amod(things-30, little-29)
nmod:for(fights-26, things-30)
nsubj(cares-32, he-31)
conj:and(live-6, cares-32)
case(weight-36, about-33)
case(weight-36, With-34)
det(weight-36, the-35)
advcl(cares-32, weight-36)
case(blow-40, of-37)
det(blow-40, a-38)
amod(blow-40, single-39)
nmod:of(weight-36, blow-40)

(ROOT
  (FRAG
    (PP (TO To)
      (NP
        (NP (DT the) (NN smoke))
        (PP
          (PP (IN of)
            (NP (DT a) (CD hundred) (NNS coasters)))
          (, ,)
          (PP (TO To)
            (NP
              (NP (DT the) (NN sheep))
              (PP (IN on)
                (NP (DT a) (CD thousand) (NNS hills)))))
          (, ,)
          (PP (TO To)
            (NP
              (NP (DT the) (NN sun))
              (SBAR
                (WHNP (WDT that))
                (S
                  (ADVP (RB never))
                  (VP (VBZ blisters) (, ,)
                    (PP (TO To)
                      (NP
                        (NP (DT the) (NN rain))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (ADVP (RB never))
                            (VP (VBZ chills))))
                        (: --)
                        (PP (TO To)
                          (NP
                            (NP (DT the) (NN land))
                            (PP (IN of)
                              (NP (DT the) (VBG waiting) (NN spring-time)))))))))))))))
    (, ,)
    (PP (TO To)
      (NP
        (NP
          (NP
            (NP (PRP$ our) (NN five-meal))
            (, ,)
            (NP (JJ meat-fed) (NNS men))
            (, ,))
          (TO To)
          (NP (DT the)
            (ADJP (JJ tall) (, ,) (JJ deep-bosomed))
            (NNS women)))
        (, ,)
        (CC And)
        (NP
          (NP (DT the) (NNS children))
          (NP (CD nine)
            (CC and)
            (CD ten)))))
    (. !)))

case(smoke-3, To-1)
det(smoke-3, the-2)
root(ROOT-0, smoke-3)
case(coasters-7, of-4)
det(coasters-7, a-5)
nummod(coasters-7, hundred-6)
nmod:of(smoke-3, coasters-7)
case(sheep-11, To-9)
det(sheep-11, the-10)
nmod:to(coasters-7, sheep-11)
case(hills-15, on-12)
det(hills-15, a-13)
nummod(hills-15, thousand-14)
nmod:on(sheep-11, hills-15)
case(sun-19, To-17)
det(sun-19, the-18)
nmod:to(coasters-7, sun-19)
nsubj(blisters-22, sun-19)
ref(sun-19, that-20)
neg(blisters-22, never-21)
acl:relcl(sun-19, blisters-22)
case(rain-26, To-24)
det(rain-26, the-25)
nmod:to(blisters-22, rain-26)
nsubj(chills-29, rain-26)
ref(rain-26, that-27)
neg(chills-29, never-28)
acl:relcl(rain-26, chills-29)
case(land-33, To-31)
det(land-33, the-32)
nmod:to(rain-26, land-33)
case(spring-time-37, of-34)
det(spring-time-37, the-35)
amod(spring-time-37, waiting-36)
nmod:of(land-33, spring-time-37)
case(five-meal-41, To-39)
nmod:poss(five-meal-41, our-40)
nmod:to(smoke-3, five-meal-41)
amod(men-44, meat-fed-43)
appos(five-meal-41, men-44)
dep(five-meal-41, To-46)
det(women-51, the-47)
amod(deep-bosomed-50, tall-48)
amod(women-51, deep-bosomed-50)
dep(five-meal-41, women-51)
cc(five-meal-41, And-53)
det(children-55, the-54)
nmod:to(smoke-3, children-55)
conj:and(five-meal-41, children-55)
dep(children-55, nine-56)
cc(nine-56, and-57)
dep(children-55, ten-58)
conj:and(nine-56, ten-58)

(ROOT
  (FRAG (CC And)
    (NP
      (NP (DT the) (NNS children))
      (ADJP
        (NP
          (QP (CD nine)
            (CC and)
            (CD ten)))
        (ADJP (-LRB- -LRB-)
          (NP
            (QP (CD Stand) (IN up) (CD !)))
          (-RRB- -RRB-))))))

cc(children-3, And-1)
det(children-3, the-2)
root(ROOT-0, children-3)
dep(!-10, nine-4)
cc(nine-4, and-5)
conj:and(nine-4, ten-6)
dep(!-10, ten-6)
compound(!-10, Stand-8)
advmod(!-10, up-9)
amod(children-3, !-10)

(ROOT
  (PRN (, ,)
    (S
      (S (CC And)
        (NP (DT the) (NN life))
        (NP (PRP we))
        (VP (VBP live)))
      (CC and)
      (S
        (S
          (VP (VB know) (, ,) (VB Let)
            (NP (DT a) (JJ fellow) (JJ sing) (NN o) ('' '))
            (S
              (NP
                (NP (DT the) (JJ little) (NNS things))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBZ cares)
                      (PRT (RP about)))))))))
        (, ,)
        (SBAR (IN If)
          (S
            (NP (DT a) (NN fellow))
            (VP (VBZ fights)
              (PP (IN for)
                (NP (DT the) (JJ little) (NNS things))))))
        (NP (PRP he))
        (VP (VBZ cares)
          (PP (IN about)
            (FRAG
              (PP (IN With)
                (NP
                  (NP (DT the) (NN weight))
                  (PP (IN of)
                    (NP (DT a) (JJ two-fold) (NN blow)))))
              (. !))))))))

cc(live-6, And-2)
det(life-4, the-3)
nsubj(live-6, life-4)
nsubj(live-6, we-5)
root(ROOT-0, live-6)
cc(live-6, and-7)
ccomp(cares-32, know-8)
dep(know-8, Let-10)
det(o-14, a-11)
amod(o-14, fellow-12)
amod(o-14, sing-13)
dobj(know-8, o-14)
det(things-18, the-16)
amod(things-18, little-17)
xcomp(know-8, things-18)
nsubj(cares-20, he-19)
acl:relcl(things-18, cares-20)
compound:prt(cares-20, about-21)
mark(fights-26, If-23)
det(fellow-25, a-24)
nsubj(fights-26, fellow-25)
advcl(cares-32, fights-26)
case(things-30, for-27)
det(things-30, the-28)
amod(things-30, little-29)
nmod:for(fights-26, things-30)
nsubj(cares-32, he-31)
conj:and(live-6, cares-32)
case(weight-36, about-33)
case(weight-36, With-34)
det(weight-36, the-35)
advcl(cares-32, weight-36)
case(blow-40, of-37)
det(blow-40, a-38)
amod(blow-40, two-fold-39)
nmod:of(weight-36, blow-40)

(ROOT
  (S
    (S
      (S
        (PP (TO To)
          (NP (DT the) (JJ far-flung) (NNS fenceless)))
        (VP (VB prairie)
          (SBAR
            (WHADVP (WRB Where))
            (S
              (NP (DT the) (JJ quick) (NNS cloud-shadows))
              (VP (VBP trail) (, ,)
                (PP (TO To)
                  (NP
                    (NP (PRP$ our) (NN neighbour) (POS 's))
                    (NN barn)))
                (PP (IN in)
                  (NP (DT the) (NN offing))))))))
      (CC And)
      (S
        (NP (DT the) (NN line))
        (PP (IN of)
          (NP (DT the) (JJ new-cut) (NN rail)))))
    (: ;)
    (S
      (S
        (PP
          (PP (TO To)
            (NP
              (NP (DT the) (NN plough))
              (PP (IN in)
                (NP (PRP$ her) (JJ league-long) (NN furrow)))))
          (IN With)
          (NP (DT the) (JJ gray) (NN Lake)))
        (VP (VBZ gulls)
          (PRT (RP behind))
          (: --)
          (PP (TO To)
            (NP
              (NP (DT the) (NN weight))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN half-year) (POS 's))
                  (NN winter)))))))
      (CC And)
      (S
        (NP (DT the) (JJ warm) (NN wet))
        (NP (JJ western) (NN wind))))
    (. !)))

case(fenceless-4, To-1)
det(fenceless-4, the-2)
amod(fenceless-4, far-flung-3)
nmod:to(prairie-5, fenceless-4)
root(ROOT-0, prairie-5)
advmod(trail-10, Where-6)
det(cloud-shadows-9, the-7)
amod(cloud-shadows-9, quick-8)
nsubj(trail-10, cloud-shadows-9)
advcl(prairie-5, trail-10)
case(barn-16, To-12)
nmod:poss(neighbour-14, our-13)
nmod:poss(barn-16, neighbour-14)
case(neighbour-14, 's-15)
nmod:to(trail-10, barn-16)
case(offing-19, in-17)
det(offing-19, the-18)
nmod:in(trail-10, offing-19)
cc(prairie-5, And-20)
det(line-22, the-21)
conj:and(prairie-5, line-22)
case(rail-26, of-23)
det(rail-26, the-24)
amod(rail-26, new-cut-25)
dep(line-22, rail-26)
case(plough-30, To-28)
det(plough-30, the-29)
nmod:to(Lake-38, plough-30)
case(furrow-34, in-31)
nmod:poss(furrow-34, her-32)
amod(furrow-34, league-long-33)
nmod:in(plough-30, furrow-34)
case(Lake-38, With-35)
det(Lake-38, the-36)
amod(Lake-38, gray-37)
nmod:with(gulls-39, Lake-38)
parataxis(prairie-5, gulls-39)
compound:prt(gulls-39, behind-40)
case(weight-44, To-42)
det(weight-44, the-43)
nmod:to(gulls-39, weight-44)
case(winter-49, of-45)
det(half-year-47, a-46)
nmod:poss(winter-49, half-year-47)
case(half-year-47, 's-48)
nmod:of(weight-44, winter-49)
cc(gulls-39, And-50)
det(wet-53, the-51)
amod(wet-53, warm-52)
dep(wind-55, wet-53)
amod(wind-55, western-54)
parataxis(prairie-5, wind-55)
conj:and(gulls-39, wind-55)

(ROOT
  (FRAG
    (PP (TO To)
      (NP
        (NP
          (NP (DT the) (NN home))
          (PP (IN of)
            (NP
              (NP (DT the) (NNS floods))
              (CC and)
              (NP (NN thunder))))
          (, ,)
          (PP (TO To)
            (NP (PRP$ her) (JJ pale) (JJ dry) (NN healing) (NN blue))))
        (: --)
        (UCP
          (PP (TO To)
            (NP
              (NP (DT the) (NN lift))
              (PP (IN of)
                (NP (DT the) (JJ great) (NNP Cape) (NNS combers)))))
          (, ,)
          (CC And)
          (NP
            (NP (DT the) (NN smell))
            (PP (IN of)
              (NP (DT the) (JJ baked) (NNP Karroo)))))))
    (. .)))

case(home-3, To-1)
det(home-3, the-2)
root(ROOT-0, home-3)
case(floods-6, of-4)
det(floods-6, the-5)
nmod:of(home-3, floods-6)
cc(floods-6, and-7)
nmod:of(home-3, thunder-8)
conj:and(floods-6, thunder-8)
case(blue-15, To-10)
nmod:poss(blue-15, her-11)
amod(blue-15, pale-12)
amod(blue-15, dry-13)
compound(blue-15, healing-14)
nmod:to(home-3, blue-15)
case(lift-19, To-17)
det(lift-19, the-18)
nmod:to(home-3, lift-19)
case(combers-24, of-20)
det(combers-24, the-21)
amod(combers-24, great-22)
compound(combers-24, Cape-23)
nmod:of(lift-19, combers-24)
cc(lift-19, And-26)
det(smell-28, the-27)
nmod:to(home-3, smell-28)
conj:and(lift-19, smell-28)
case(Karroo-32, of-29)
det(Karroo-32, the-30)
amod(Karroo-32, baked-31)
nmod:of(smell-28, Karroo-32)

(ROOT
  (X
    (X
      (X (TO To))
      (NP
        (NP (DT the) (NN growl))
        (PP (IN of)
          (NP (DT the) (NN sluicing)))))
    (ADJP
      (ADJP (JJ stamp-head) (: --)
        (PP
          (PP (TO To)
            (NP
              (NP (DT the) (NN reef))
              (CC and)
              (NP (DT the) (NN water-gold))))
          (, ,)
          (PP (TO To)
            (NP
              (NP (DT the) (JJ last))
              (CC and)
              (NP (DT the) (JJS largest) (NN Empire))))
          (, ,)))
      (PP (TO To)
        (NP
          (NP (DT the) (NN map))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (ADJP (RB half) (JJ unrolled)))))))
      (. !))))

dep(growl-3, To-1)
det(growl-3, the-2)
dep(stamp-head-7, growl-3)
case(sluicing-6, of-4)
det(sluicing-6, the-5)
nmod:of(growl-3, sluicing-6)
root(ROOT-0, stamp-head-7)
case(reef-11, To-9)
det(reef-11, the-10)
advcl(stamp-head-7, reef-11)
cc(reef-11, and-12)
det(water-gold-14, the-13)
advcl(stamp-head-7, water-gold-14)
conj:and(reef-11, water-gold-14)
case(last-18, To-16)
det(last-18, the-17)
nmod:to(reef-11, last-18)
cc(last-18, and-19)
det(Empire-22, the-20)
amod(Empire-22, largest-21)
nmod:to(reef-11, Empire-22)
conj:and(last-18, Empire-22)
case(map-26, To-24)
det(map-26, the-25)
nmod:to(stamp-head-7, map-26)
nsubj(unrolled-30, map-26)
ref(map-26, that-27)
cop(unrolled-30, is-28)
advmod(unrolled-30, half-29)
acl:relcl(map-26, unrolled-30)

(ROOT
  (S
    (PP (TO To)
      (NP
        (NP (PRP$ our)
          (ADJP (RB dear))
          (JJ dark) (NNS foster-mothers))
        (, ,)
        (SBAR
          (WHPP (TO To)
            (NP (DT the) (JJ heathen) (NNS songs)))
          (S
            (NP (PRP they))
            (VP (VBN sung))))))
    (PRN (: --)
      (PP (TO To)
        (NP (DT the) (NN heathen) (NN speech))))
    (NP (PRP we))
    (VP (VBD babbled)
      (NP
        (NP (NNP Ere))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD came)
              (PP (TO to)
                (NP
                  (NP (DT the) (JJ white) (NN man) (POS 's))
                  (NN tongue))))))))
    (. .)))

case(foster-mothers-5, To-1)
nmod:poss(foster-mothers-5, our-2)
amod(foster-mothers-5, dear-3)
amod(foster-mothers-5, dark-4)
nmod:to(babbled-19, foster-mothers-5)
case(songs-10, To-7)
det(songs-10, the-8)
amod(songs-10, heathen-9)
nmod:to(sung-12, songs-10)
nsubj(sung-12, they-11)
acl:relcl(foster-mothers-5, sung-12)
case(speech-17, To-14)
det(speech-17, the-15)
compound(speech-17, heathen-16)
dep(babbled-19, speech-17)
nsubj(babbled-19, we-18)
root(ROOT-0, babbled-19)
dobj(babbled-19, Ere-20)
nsubj(came-22, we-21)
acl:relcl(Ere-20, came-22)
case(tongue-28, to-23)
det(man-26, the-24)
amod(man-26, white-25)
nmod:poss(tongue-28, man-26)
case(man-26, 's-27)
nmod:to(came-22, tongue-28)

(ROOT
  (FRAG
    (PP (TO To)
      (NP
        (NP
          (NP (DT the) (NN cool))
          (PP (IN of)
            (NP (PRP$ our) (JJ deep) (NNS verandas))))
        (: --)
        (UCP
          (PP
            (PP (TO To)
              (NP
                (NP (DT the) (NN blaze))
                (PP (IN of)
                  (NP (PRP$ our) (JJ jewelled) (JJ main)))))
            (PP (, ,)
              (PP (TO To)
                (NP (DT the) (NN night)))
              (, ,) (TO to)
              (NP
                (NP (DT the) (NNS palms))
                (PP (IN in)
                  (NP (DT the) (NN moonlight))))))
          (, ,)
          (CC And)
          (NP
            (NP (DT the) (NN fire-fly))
            (PP (IN in)
              (NP (DT the) (NN cane)))))))
    (. !)))

case(cool-3, To-1)
det(cool-3, the-2)
root(ROOT-0, cool-3)
case(verandas-7, of-4)
nmod:poss(verandas-7, our-5)
amod(verandas-7, deep-6)
nmod:of(cool-3, verandas-7)
case(blaze-11, To-9)
det(blaze-11, the-10)
nmod:to(cool-3, blaze-11)
case(main-15, of-12)
nmod:poss(main-15, our-13)
amod(main-15, jewelled-14)
nmod:of(blaze-11, main-15)
case(night-19, To-17)
det(night-19, the-18)
nmod:to(palms-23, night-19)
case(palms-23, to-21)
det(palms-23, the-22)
nmod:to(blaze-11, palms-23)
case(moonlight-26, in-24)
det(moonlight-26, the-25)
nmod:in(palms-23, moonlight-26)
cc(blaze-11, And-28)
det(fire-fly-30, the-29)
nmod:to(cool-3, fire-fly-30)
conj:and(blaze-11, fire-fly-30)
case(cane-33, in-31)
det(cane-33, the-32)
nmod:in(fire-fly-30, cane-33)

(ROOT
  (FRAG
    (PP (TO To)
      (NP
        (NP (DT the) (NN hearth))
        (PP (IN of)
          (NP
            (NP (PRP$ our) (NNS people) (POS 's))
            (NNS people)))))
    (: --)
    (S
      (VP (TO To)
        (VP
          (NP (PRP$ her) (JJ well-ploughed) (NN windy) (NN sea))
          (, ,)
          (PP (TO To)
            (NP
              (NP (DT the) (NN hush))
              (PP (IN of)
                (NP
                  (NP (PRP$ our) (NN dread) (NN high-altar))
                  (SBAR
                    (WHADVP (WRB Where))
                    (S
                      (NP (DT The) (NNP Abbey))
                      (VP (VBZ makes)
                        (S
                          (NP (PRP us))
                          (NP (PRP We))))))
                  (: ;)
                  (PP (TO To)
                    (NP
                      (NP (DT the) (NN grist))
                      (PP (IN of)
                        (NP (DT the) (JJ slow-ground) (NNS ages)))
                      (, ,)
                      (PP (TO To)
                        (NP
                          (NP (DT the) (NN gain))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBZ is)
                                (NP
                                  (NP
                                    (NP (NN yours)
                                      (CC and)
                                      (NN mine))
                                    (PRN (: --)
                                      (PP (TO To)
                                        (NP
                                          (NP (DT the) (NNP Bank))
                                          (PP (IN of)
                                            (NP (DT the) (NNP Open) (NNP Credit)))))
                                      (, ,)
                                      (PP (TO To)
                                        (NP (DT the) (NN Power-house)))))
                                  (PP (IN of)
                                    (NP (DT the) (NNP Line))))))))))))))))))
    (. !)))

case(hearth-3, To-1)
det(hearth-3, the-2)
nmod:to(sea-14, hearth-3)
case(people-8, of-4)
nmod:poss(people-6, our-5)
nmod:poss(people-8, people-6)
case(people-6, 's-7)
nmod:of(hearth-3, people-8)
mark(sea-14, To-10)
nmod:poss(sea-14, her-11)
amod(sea-14, well-ploughed-12)
compound(sea-14, windy-13)
root(ROOT-0, sea-14)
case(hush-18, To-16)
det(hush-18, the-17)
nmod:to(sea-14, hush-18)
case(high-altar-22, of-19)
nmod:poss(high-altar-22, our-20)
compound(high-altar-22, dread-21)
nmod:of(hush-18, high-altar-22)
advmod(makes-26, Where-23)
det(Abbey-25, The-24)
nsubj(makes-26, Abbey-25)
acl:relcl(high-altar-22, makes-26)
nsubj(We-28, us-27)
xcomp(makes-26, We-28)
case(grist-32, To-30)
det(grist-32, the-31)
nmod:to(high-altar-22, grist-32)
case(ages-36, of-33)
det(ages-36, the-34)
amod(ages-36, slow-ground-35)
nmod:of(grist-32, ages-36)
case(gain-40, To-38)
det(gain-40, the-39)
nmod:to(grist-32, gain-40)
nsubj(yours-43, gain-40)
ref(gain-40, that-41)
cop(yours-43, is-42)
acl:relcl(gain-40, yours-43)
cc(yours-43, and-44)
acl:relcl(gain-40, mine-45)
conj:and(yours-43, mine-45)
case(Bank-49, To-47)
det(Bank-49, the-48)
nmod:to(yours-43, Bank-49)
case(Credit-53, of-50)
det(Credit-53, the-51)
compound(Credit-53, Open-52)
nmod:of(Bank-49, Credit-53)
case(Power-house-57, To-55)
det(Power-house-57, the-56)
nmod:to(Bank-49, Power-house-57)
case(Line-60, of-58)
det(Line-60, the-59)
nmod:of(yours-43, Line-60)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN drunk)
        (PP (TO to)
          (NP (DT the) (NN Queen)))
        (: --)
        (S
          (NP (NNP God))
          (VP (VB bless)
            (NP (PRP her))))))
    (. !)))

nsubj(drunk-3, We-1)
aux(drunk-3, 've-2)
root(ROOT-0, drunk-3)
case(Queen-6, to-4)
det(Queen-6, the-5)
nmod:to(drunk-3, Queen-6)
nsubj(bless-9, God-8)
ccomp(drunk-3, bless-9)
dobj(bless-9, her-10)

(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN drunk)
          (PP (TO to)
            (NP
              (NP (PRP$ our) (NNS mothers) (POS '))
              (NN land))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (S
          (VP
            (VP (VBG drunk)
              (PP (TO to)
                (NP (PRP$ our) (JJ English) (NN brother))))
            (-LRB- -LRB-)
            (SBAR (CC And)
              (S
                (NP (PRP we))
                (VP (VBP hope)
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (MD 'll)
                        (VP (VB understand))))))))
            (-RRB- -RRB-)))))
    (. .)))

nsubj(drunk-4, We-2)
aux(drunk-4, 've-3)
root(ROOT-0, drunk-4)
case(land-9, to-5)
nmod:poss(mothers-7, our-6)
nmod:poss(land-9, mothers-7)
case(mothers-7, '-8)
nmod:to(drunk-4, land-9)
nsubj('ve-12, We-11)
parataxis(drunk-4, 've-12)
ccomp('ve-12, drunk-13)
case(brother-17, to-14)
nmod:poss(brother-17, our-15)
amod(brother-17, English-16)
nmod:to(drunk-13, brother-17)
cc(hope-21, And-19)
nsubj(hope-21, we-20)
ccomp(drunk-13, hope-21)
nsubj(understand-24, he-22)
aux(understand-24, 'll-23)
ccomp(hope-21, understand-24)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (ADVP
          (ADVP (NN drunk) (RB as) (RB much))
          (SBAR (IN as)
            (S
              (NP (PRP we))
              (VP (VBP 're)
                (ADJP (JJ able))))))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NNP Cross))
      (VP (VBZ swings)
        (ADJP (JJ low)
          (PP (IN for)
            (NP
              (NP (DT the) (NN morn))
              (: ;)
              (NP (JJ Last) (NN toast))
              (: --)
              (CC and)
              (NP (PRP$ your) (NN foot)))))
        (PP (IN on)
          (NP (DT the) (NN table)))))
    (. !)))

nsubj('ve-2, We-1)
root(ROOT-0, 've-2)
dep(much-5, drunk-3)
advmod(much-5, as-4)
advmod('ve-2, much-5)
mark(able-9, as-6)
nsubj(able-9, we-7)
cop(able-9, 're-8)
advcl(much-5, able-9)
cc('ve-2, And-11)
det(Cross-13, the-12)
nsubj(swings-14, Cross-13)
conj:and('ve-2, swings-14)
xcomp(swings-14, low-15)
case(morn-18, for-16)
det(morn-18, the-17)
nmod:for(low-15, morn-18)
amod(toast-21, Last-20)
nmod:for(low-15, toast-21)
conj:and(morn-18, toast-21)
cc(morn-18, and-23)
nmod:poss(foot-25, your-24)
nmod:for(low-15, foot-25)
conj:and(morn-18, foot-25)
case(table-28, on-26)
det(table-28, the-27)
nmod:on(swings-14, table-28)

(ROOT
  (NP (: --)
    (NP (DT A) (NN health))
    (PP (TO to)
      (NP (DT the) (NN Native-born)))
    (. !)))

det(health-3, A-2)
root(ROOT-0, health-3)
case(Native-born-6, to-4)
det(Native-born-6, the-5)
nmod:to(health-3, Native-born-6)

(ROOT
  (NP
    (NP (DT A) (NN health))
    (PP
      (PP (TO to)
        (NP (DT the) (NN Native-born)))
      (PRN (-LRB- -LRB-)
        (ADVP (RB Stand) (RB up) (. !))
        (-RRB- -RRB-)))))

det(health-2, A-1)
root(ROOT-0, health-2)
case(Native-born-5, to-3)
det(Native-born-5, the-4)
acl(health-2, Native-born-5)
advmod(up-8, Stand-7)
dep(Native-born-5, up-8)

(ROOT
  (PRN (, ,)
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (NP
          (NP
            (NP (CD six) (JJ white) (NNS men))
            (NP (NN arow)))
          (, ,)
          (NP (DT All)
            (ADJP (VBN bound)
              (S
                (VP (TO to)
                  (VP (VB sing)))))
            (NN o) ('' '))
          (NP
            (NP (DT the) (JJ little) (NNS things))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP care)
                  (PRT (RP about))))))
          (, ,)
          (NP
            (NP (DT All))
            (VP (VBN bound)
              (S
                (VP (TO to)
                  (VP (VB fight)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (JJ little) (NNS things))
                        (SBAR
                          (S
                            (NP (PRP we))
                            (VP (VBP care)
                              (PP (IN about)
                                (FRAG
                                  (PP (IN With)
                                    (NP
                                      (NP (DT the) (NN weight))
                                      (PP (IN of)
                                        (NP (DT a) (JJ six-fold) (NN blow)))))
                                  (. !))))))))))))))))))

nsubj(men-6, We-2)
cop(men-6, 're-3)
nummod(men-6, six-4)
amod(men-6, white-5)
root(ROOT-0, men-6)
dep(men-6, arow-7)
det(o-13, All-9)
amod(o-13, bound-10)
mark(sing-12, to-11)
xcomp(bound-10, sing-12)
appos(men-6, o-13)
det(things-17, the-15)
amod(things-17, little-16)
dep(men-6, things-17)
nsubj(care-19, we-18)
acl:relcl(things-17, care-19)
compound:prt(care-19, about-20)
appos(men-6, All-22)
acl(All-22, bound-23)
mark(fight-25, to-24)
xcomp(bound-23, fight-25)
case(things-29, for-26)
det(things-29, the-27)
amod(things-29, little-28)
nmod:for(fight-25, things-29)
nsubj(care-31, we-30)
acl:relcl(things-29, care-31)
case(weight-35, about-32)
case(weight-35, With-33)
det(weight-35, the-34)
advcl(care-31, weight-35)
case(blow-39, of-36)
det(blow-39, a-37)
amod(blow-39, six-fold-38)
nmod:of(weight-35, blow-39)

(ROOT
  (PP (IN By)
    (NP
      (NP (DT the) (NN might))
      (PP (IN of)
        (NP (PRP$ our) (NN cable-tow)))
      (PRN (-LRB- -LRB-)
        (SQ
          (VP (VB Take)
            (NP (NNS hands)))
          (. !))
        (-RRB- -RRB-)))))

case(might-3, By-1)
det(might-3, the-2)
root(ROOT-0, might-3)
case(cable-tow-6, of-4)
nmod:poss(cable-tow-6, our-5)
nmod:of(might-3, cable-tow-6)
dep(might-3, Take-8)
dobj(Take-8, hands-9)

(ROOT
  (S
    (S (, ,)
      (PP (IN From)
        (NP
          (NP (DT the) (NNPS Orkneys))
          (PP (TO to)
            (NP (DT the) (NNP Horn)))))
      (, ,)
      (NP (DT All))
      (VP (VBP round)
        (NP
          (NP (DT the) (NN world))
          (PRN (-LRB- -LRB-)
            (CC and)
            (NP
              (NP (DT a) (JJ little) (NN loop))
              (SBAR
                (S
                  (VP (TO to)
                    (VP (VB pull)
                      (NP (PRP it))
                      (PP (IN by)))))))
            (-RRB- -RRB-)))))
    (, ,)
    (NP (DT All))
    (VP (VBP round)
      (NP
        (NP
          (NP (DT the) (NN world))
          (PRN (-LRB- -LRB-)
            (CC and)
            (NP
              (NP (DT a) (JJ little) (NN strap))
              (SBAR
                (S
                  (VP (TO to)
                    (VP (VB buckle)
                      (NP (PRP it)))))))
            (-RRB- -RRB-)))
        (, ,)
        (NP
          (NP (DT A) (NN health))
          (PP (TO to)
            (NP (DT the) (NN Native-born))))))
    (. !)))

case(Orkneys-4, From-2)
det(Orkneys-4, the-3)
nmod:from(round-10, Orkneys-4)
case(Horn-7, to-5)
det(Horn-7, the-6)
nmod:to(Orkneys-4, Horn-7)
nsubj(round-10, All-9)
ccomp(round-25, round-10)
det(world-12, the-11)
dobj(round-10, world-12)
cc(loop-17, and-14)
det(loop-17, a-15)
amod(loop-17, little-16)
dep(world-12, loop-17)
mark(pull-19, to-18)
acl(loop-17, pull-19)
dobj(pull-19, it-20)
nmod(pull-19, by-21)
nsubj(round-25, All-24)
root(ROOT-0, round-25)
det(world-27, the-26)
dobj(round-25, world-27)
cc(strap-32, and-29)
det(strap-32, a-30)
amod(strap-32, little-31)
dep(world-27, strap-32)
mark(buckle-34, to-33)
acl(strap-32, buckle-34)
dobj(buckle-34, it-35)
det(health-39, A-38)
appos(world-27, health-39)
case(Native-born-42, to-40)
det(Native-born-42, the-41)
nmod:to(health-39, Native-born-42)

(ROOT
  (S
    (NP
      (NP (DT THE) (NN KING))
      (`` ``)
      (NP (NNP Farewell))
      (, ,))
    (VP (VBP Romance))
    (. !) ('' '')))

det(KING-2, THE-1)
nsubj(Romance-6, KING-2)
dep(KING-2, Farewell-4)
root(ROOT-0, Romance-6)

(ROOT
  (S
    (S
      (NP (DT the) (NN Cave-men))
      (VP (VBD said) (: ;) (`` ``)
        (S
          (SBAR (IN With)
            (S
              (NP (NN bone))
              (ADVP (RB well))
              (VP (VBD carved)
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD went)
                      (PRT (RP away))))))))
          (, ,)
          (NP (NNP Flint))
          (VP (VBZ arms)
            (NP (DT the) (JJ ignoble) (NN arrowhead))))))
    (, ,)
    (CC And)
    (S
      (NP (NN jasper))
      (VP (VBZ tips)
        (NP (DT the) (NN spear) (NN to-day))))
    (. .)))

det(Cave-men-2, the-1)
nsubj(said-3, Cave-men-2)
root(ROOT-0, said-3)
mark(carved-9, With-6)
nsubj(carved-9, bone-7)
advmod(carved-9, well-8)
advcl(arms-15, carved-9)
nsubj(went-11, he-10)
ccomp(carved-9, went-11)
compound:prt(went-11, away-12)
nsubj(arms-15, Flint-14)
ccomp(said-3, arms-15)
det(arrowhead-18, the-16)
amod(arrowhead-18, ignoble-17)
dobj(arms-15, arrowhead-18)
cc(said-3, And-20)
nsubj(tips-22, jasper-21)
conj:and(said-3, tips-22)
det(to-day-25, the-23)
compound(to-day-25, spear-24)
dobj(tips-22, to-day-25)

(ROOT
  (S
    (S
      (NP (NNP Changed))
      (VP (VBP are)
        (NP
          (NP (DT the) (NNS Gods))
          (PP (IN of)
            (NP (NNP Hunt)
              (CC and)
              (NNP Dance))))))
    (, ,)
    (CC And)
    (FRAG
      (NP (PRP he))
      (PP (IN with)
        (NP (DT these))))
    (. .)))

nsubj(Gods-4, Changed-1)
cop(Gods-4, are-2)
det(Gods-4, the-3)
root(ROOT-0, Gods-4)
case(Hunt-6, of-5)
nmod:of(Gods-4, Hunt-6)
cc(Hunt-6, and-7)
nmod:of(Gods-4, Dance-8)
conj:and(Hunt-6, Dance-8)
cc(Gods-4, And-10)
conj:and(Gods-4, he-11)
case(these-13, with-12)
nmod:with(he-11, these-13)

(ROOT
  (NP
    (NP (NNP Farewell))
    (, ,)
    (NP (NNP Romance))
    (. !) ('' '')))

root(ROOT-0, Farewell-1)
appos(Farewell-1, Romance-3)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Farewell))
    (, ,)
    (NP (NNP Romance))
    (. !) ('' '')))

root(ROOT-0, Farewell-2)
appos(Farewell-2, Romance-4)

(ROOT
  (S
    (S
      (NP (DT the) (NNP Lake-folk))
      (VP (VBD sighed) (: ;) (`` ``)
        (S
          (NP (PRP We))
          (VP (VB lift)
            (NP
              (NP (DT the) (NN weight))
              (PP (IN of)
                (NP (VBG flatling) (NNS years))))))))
    (: ;)
    (S
      (NP
        (NP (DT The) (NNS caverns))
        (PP (IN of)
          (NP (DT the) (NN mountain-side))))
      (VP (VBP Hold)
        (NP
          (NP (PRP him))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ scorns)
                (NP (PRP$ our) (JJ hutted) (NNS piers))))))))
    (. .)))

det(Lake-folk-2, the-1)
nsubj(sighed-3, Lake-folk-2)
root(ROOT-0, sighed-3)
nsubj(lift-7, We-6)
ccomp(sighed-3, lift-7)
det(weight-9, the-8)
dobj(lift-7, weight-9)
case(years-12, of-10)
amod(years-12, flatling-11)
nmod:of(weight-9, years-12)
det(caverns-15, The-14)
nsubj(Hold-19, caverns-15)
case(mountain-side-18, of-16)
det(mountain-side-18, the-17)
nmod:of(caverns-15, mountain-side-18)
parataxis(sighed-3, Hold-19)
dobj(Hold-19, him-20)
nsubj(scorns-22, him-20)
ref(him-20, who-21)
acl:relcl(him-20, scorns-22)
nmod:poss(piers-25, our-23)
amod(piers-25, hutted-24)
dobj(scorns-22, piers-25)

(ROOT
  (S
    (S
      (NP (NNP Lost))
      (VP (VBZ hills)
        (SBAR
          (WHADVP (WRB whereby))
          (S
            (NP (PRP we))
            (VP (MD dare) (RB not)
              (VP (VB dwell)))))))
    (, ,)
    (NP (NNP Guard))
    (VP (VBZ ye)
      (NP (PRP$ his) (NN rest)))
    (. .)))

nsubj(hills-2, Lost-1)
ccomp(ye-10, hills-2)
advmod(dwell-7, whereby-3)
nsubj(dwell-7, we-4)
aux(dwell-7, dare-5)
neg(dwell-7, not-6)
advcl(hills-2, dwell-7)
nsubj(ye-10, Guard-9)
root(ROOT-0, ye-10)
nmod:poss(rest-12, his-11)
dobj(ye-10, rest-12)

(ROOT
  (FRAG
    (ADVP (RB Romance))
    (, ,)
    (NP (NN farewell))
    (. !) ('' '')))

dep(farewell-3, Romance-1)
root(ROOT-0, farewell-3)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Farewell))
    (, ,)
    (NP (NNP Romance))
    (. !) ('' '')))

root(ROOT-0, Farewell-2)
appos(Farewell-2, Romance-4)

(ROOT
  (S
    (S
      (NP (DT the) (NNP Soldier))
      (VP (VBD spoke) (: ;) (`` ``)
        (S
          (PP (IN By)
            (NP
              (NP (NN sleight))
              (PP (IN of)
                (NP (NN sword)))))
          (NP (PRP we))
          (VP (MD may) (RB not)
            (VP (VB win))))))
    (, ,)
    (CC But)
    (S
      (NP (JJ scuffle) (`` `) (JJ mid) (NN uncleanly))
      (VP (VBP smoke)
        (PP (IN Of)
          (NP (NNS arquebus)
            (CC and)
            (NN culverin)))))
    (. .)))

det(Soldier-2, the-1)
nsubj(spoke-3, Soldier-2)
root(ROOT-0, spoke-3)
case(sleight-7, By-6)
nmod:by(win-13, sleight-7)
case(sword-9, of-8)
nmod:of(sleight-7, sword-9)
nsubj(win-13, we-10)
aux(win-13, may-11)
neg(win-13, not-12)
ccomp(spoke-3, win-13)
cc(spoke-3, But-15)
amod(uncleanly-19, scuffle-16)
amod(uncleanly-19, mid-18)
nsubj(smoke-20, uncleanly-19)
conj:but(spoke-3, smoke-20)
case(arquebus-22, Of-21)
nmod:of(smoke-20, arquebus-22)
cc(arquebus-22, and-23)
nmod:of(smoke-20, culverin-24)
conj:and(arquebus-22, culverin-24)

(ROOT
  (S
    (S
      (NP (NNP Honour))
      (VP (VBZ is)
        (VP (VBN lost))))
    (, ,)
    (CC and)
    (S
      (NP (NN none))
      (VP (MD may)
        (VP (VB tell)
          (SBAR
            (WHNP (WP Who))
            (S
              (VP (VBD paid)
                (NP (JJ good) (NNS blows))))))))
    (. .)))

nsubjpass(lost-3, Honour-1)
auxpass(lost-3, is-2)
root(ROOT-0, lost-3)
cc(lost-3, and-5)
nsubj(tell-8, none-6)
aux(tell-8, may-7)
conj:and(lost-3, tell-8)
nsubj(paid-10, Who-9)
ccomp(tell-8, paid-10)
amod(blows-12, good-11)
dobj(paid-10, blows-12)

(ROOT
  (FRAG
    (ADVP (RB Romance))
    (, ,)
    (NP (NN farewell))
    (. !) ('' '')))

dep(farewell-3, Romance-1)
root(ROOT-0, farewell-3)

(ROOT
  (FRAG (`` ``)
    (NP (NNP Farewell))
    (, ,)
    (NP (NNP Romance))
    (. !) ('' '')))

root(ROOT-0, Farewell-2)
appos(Farewell-2, Romance-4)

(ROOT
  (S
    (S
      (S
        (NP (DT the) (NNS Traders))
        (VP (VBD cried)))
      (: ;)
      (S
        (NP (PRP$ Our) (NNS keels))
        (NP
          (NP
            (NP (NNP ha) (POS '))
            (NN lain))
          (PP (IN with)
            (NP (DT every) (NN sea)))))
      (: ;)
      (S
        (NP
          (NP (DT The) (JJ dull-returning) (NN wind))
          (CC and)
          (NP (NN tide)))
        (VP (VBP Heave)
          (PRT (RP up))
          (NP (DT the) (NN wharf))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP we))
              (VP (MD would)
                (VP (VB be))))))))
    (: ;)
    (S
      (NP (DT The) (JJ known)
        (CC and)
        (JJ noted) (NNS breezes))
      (VP (VBP swell)
        (NP (PRP$ Our) (JJ trudging) (NN sail))))
    (. .)))

det(Traders-2, the-1)
nsubj(cried-3, Traders-2)
root(ROOT-0, cried-3)
nmod:poss(keels-6, Our-5)
dep(lain-9, keels-6)
nmod:poss(lain-9, ha-7)
case(ha-7, '-8)
parataxis(cried-3, lain-9)
case(sea-12, with-10)
det(sea-12, every-11)
nmod:with(lain-9, sea-12)
det(wind-16, The-14)
amod(wind-16, dull-returning-15)
nsubj(Heave-19, wind-16)
cc(wind-16, and-17)
conj:and(wind-16, tide-18)
nsubj(Heave-19, tide-18)
parataxis(cried-3, Heave-19)
compound:prt(Heave-19, up-20)
det(wharf-22, the-21)
dobj(Heave-19, wharf-22)
advmod(be-26, where-23)
nsubj(be-26, we-24)
aux(be-26, would-25)
advcl(Heave-19, be-26)
det(breezes-32, The-28)
amod(breezes-32, known-29)
cc(known-29, and-30)
conj:and(known-29, noted-31)
amod(breezes-32, noted-31)
nsubj(swell-33, breezes-32)
parataxis(cried-3, swell-33)
nmod:poss(sail-36, Our-34)
amod(sail-36, trudging-35)
dobj(swell-33, sail-36)

(ROOT
  (FRAG
    (ADVP (RB Romance))
    (, ,)
    (NP (NN farewell))
    (. !) ('' '')))

dep(farewell-3, Romance-1)
root(ROOT-0, farewell-3)

(ROOT
  (FRAG (`` ``)
    (NP (NN Good-bye))
    (, ,)
    (NP (NNP Romance))
    (. !) ('' '')))

root(ROOT-0, Good-bye-2)
appos(Good-bye-2, Romance-4)

(ROOT
  (S
    (S
      (S
        (NP (DT the) (NNP Skipper))
        (VP (VBD said) (: ;) (`` ``)
          (S
            (NP (PRP He))
            (VP (VBN vanished)
              (PP (IN with)
                (NP
                  (NP (DT the) (NN coal))
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (VBP burn))))))))))
      (: ;)
      (S
        (NP (PRP$ Our) (NN dial))
        (VP (VBZ marks)
          (NP (JJ full) (NN steam))
          (ADVP (RB ahead)))))
    (, ,)
    (NP (PRP$ Our) (NN speed))
    (VP (VBZ is)
      (VP (VBN timed)
        (PP (TO to)
          (NP (PDT half) (DT a) (NN turn)))))
    (. .)))

det(Skipper-2, the-1)
nsubj(said-3, Skipper-2)
ccomp(timed-24, said-3)
nsubj(vanished-7, He-6)
dep(said-3, vanished-7)
case(coal-10, with-8)
det(coal-10, the-9)
nmod:with(vanished-7, coal-10)
nsubj(burn-12, we-11)
acl:relcl(coal-10, burn-12)
nmod:poss(dial-15, Our-14)
nsubj(marks-16, dial-15)
parataxis(said-3, marks-16)
amod(steam-18, full-17)
dobj(marks-16, steam-18)
advmod(marks-16, ahead-19)
nmod:poss(speed-22, Our-21)
nsubjpass(timed-24, speed-22)
auxpass(timed-24, is-23)
root(ROOT-0, timed-24)
case(turn-28, to-25)
det:predet(turn-28, half-26)
det(turn-28, a-27)
nmod:to(timed-24, turn-28)

(ROOT
  (S
    (NP
      (NP (NNP Sure))
      (PP (IN as)
        (NP (DT the) (JJ ferried) (NN barge) (PRP we))))
    (VP (VBP ply)
      (NP (`` `) (JJ Twixt) (NN port)
        (CC and)
        (NN port)))
    (. .)))

nsubj(ply-7, Sure-1)
case(barge-5, as-2)
det(barge-5, the-3)
amod(barge-5, ferried-4)
nmod:as(Sure-1, barge-5)
dep(barge-5, we-6)
root(ROOT-0, ply-7)
amod(port-10, Twixt-9)
dobj(ply-7, port-10)
cc(port-10, and-11)
dobj(ply-7, port-12)
conj:and(port-10, port-12)

(ROOT
  (FRAG
    (ADVP (RB Romance))
    (, ,)
    (NP (NN good-bye))
    (. !) ('' '')))

dep(good-bye-3, Romance-1)
root(ROOT-0, good-bye-3)

(ROOT
  (S (`` ``)
    (VP (VB Romance))
    (. !) ('' '')))

root(ROOT-0, Romance-2)

(ROOT
  (S
    (S
      (NP
        (NP (DT the) (JJ season-tickets) (NN mourn))
        (, ,) ('' '')
        (VP (VBN _)
          (S
            (NP (PRP He))
            (ADJP (JJ _)))))
      (ADVP (RB never))
      (VP (VBD ran)
        (S
          (VP (TO to)
            (VP (VB catch)
              (NP (PRP$ his) (NN train)))))))
    (, ,)
    (CC But)
    (S
      (VP (VBN passed)
        (PP (IN with)
          (NP
            (NP
              (NP (NN coach))
              (CC and)
              (NP (NN guard)
                (CC and)
                (NN horn)))
            (: --)
            (SBAR (CC And)
              (S
                (VP (VBD left)
                  (NP
                    (NP (DT the) (JJ local))
                    (: --)
                    (ADVP (RB late) (RB again))))))))))
    (. !) ('' '')))

det(mourn-3, the-1)
amod(mourn-3, season-tickets-2)
nsubj(ran-10, mourn-3)
nsubj:xsubj(catch-12, mourn-3)
nsubj(passed-17, mourn-3)
acl(mourn-3, _-6)
nsubj(_-8, He-7)
xcomp(_-6, _-8)
neg(ran-10, never-9)
root(ROOT-0, ran-10)
mark(catch-12, to-11)
xcomp(ran-10, catch-12)
nmod:poss(train-14, his-13)
dobj(catch-12, train-14)
cc(ran-10, But-16)
conj:but(ran-10, passed-17)
case(coach-19, with-18)
nmod:with(passed-17, coach-19)
cc(coach-19, and-20)
nmod:with(passed-17, guard-21)
conj:and(coach-19, guard-21)
cc(guard-21, and-22)
conj:and(coach-19, horn-23)
conj:and(guard-21, horn-23)
cc(left-26, And-25)
dep(coach-19, left-26)
det(local-28, the-27)
dobj(left-26, local-28)
advmod(again-31, late-30)
advmod(local-28, again-31)

(ROOT
  (NP (NNP Confound) (NNP Romance) (. !)))

compound(Romance-2, Confound-1)
root(ROOT-0, Romance-2)

(ROOT
  (S (: ...)
    (CC And)
    (NP (DT all) (NNP unseen) (NNP Romance))
    (VP (VBD brought)
      (PRT (RP up))
      (NP (DT the) (NN nine-fifteen)))
    (. .)))

cc(brought-6, And-2)
det(Romance-5, all-3)
compound(Romance-5, unseen-4)
conj:and(brought-6, Romance-5)
root(ROOT-0, brought-6)
compound:prt(brought-6, up-7)
det(nine-fifteen-9, the-8)
dobj(brought-6, nine-fifteen-9)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN hand))
      (VP (VBD was)
        (PP (IN on)
          (NP
            (NP (DT the) (NN lever))
            (VP (VBN laid))))))
    (, ,)
    (S
      (NP (PRP$ His) (NN oil-can))
      (VP (VBD soothed)
        (NP (DT the) (JJ worrying) (NNS cranks))))
    (, ,)
    (S
      (NP (PRP$ His) (NN whistle))
      (VP (VBD waked)
        (NP (DT the) (JJ snowbound) (NN grade))))
    (, ,)
    (S
      (NP (PRP$ His) (NN fog-horn))
      (VP (VBD cut)
        (NP (DT the) (VBG reeking) (NNS Banks))))
    (: ;)
    (S
      (PP (IN By)
        (NP
          (NP (NN dock))
          (CC and)
          (NP (JJ deep)
            (CC and)
            (NN mine)
            (CC and)
            (NN mill))))
      (NP (DT The) (JJ Boy-god) (NN reckless))
      (VP (VBD laboured)
        (ADVP (RB still))))
    (. !)))

nmod:poss(hand-2, His-1)
nsubj(lever-6, hand-2)
cop(lever-6, was-3)
case(lever-6, on-4)
det(lever-6, the-5)
root(ROOT-0, lever-6)
acl(lever-6, laid-7)
nmod:poss(oil-can-10, His-9)
nsubj(soothed-11, oil-can-10)
dep(lever-6, soothed-11)
det(cranks-14, the-12)
amod(cranks-14, worrying-13)
dobj(soothed-11, cranks-14)
nmod:poss(whistle-17, His-16)
nsubj(waked-18, whistle-17)
dep(lever-6, waked-18)
det(grade-21, the-19)
amod(grade-21, snowbound-20)
dobj(waked-18, grade-21)
nmod:poss(fog-horn-24, His-23)
nsubj(cut-25, fog-horn-24)
dep(lever-6, cut-25)
det(Banks-28, the-26)
amod(Banks-28, reeking-27)
dobj(cut-25, Banks-28)
case(dock-31, By-30)
nmod:by(laboured-41, dock-31)
cc(dock-31, and-32)
conj:and(dock-31, deep-33)
nmod:by(laboured-41, deep-33)
cc(deep-33, and-34)
conj:and(dock-31, mine-35)
conj:and(deep-33, mine-35)
cc(deep-33, and-36)
conj:and(dock-31, mill-37)
conj:and(deep-33, mill-37)
det(reckless-40, The-38)
amod(reckless-40, Boy-god-39)
nsubj(laboured-41, reckless-40)
parataxis(lever-6, laboured-41)
advmod(laboured-41, still-42)

(ROOT
  (S
    (S
      (ADJP (JJ Robed) (, ,) (JJ crowned)
        (CC and)
        (JJ throned)))
    (, ,)
    (NP (PRP he))
    (VP (VBP wove)
      (NP
        (NP (PRP$ his) (NN spell))
        (, ,)
        (SBAR
          (WHADVP (WRB Where))
          (S
            (NP (JJ heart-blood)
              (ADJP (JJ beat)
                (CC or)
                (JJ hearth-smoke))
              (NNS curled))
            (, ,)
            (PP (IN With)
              (NP (JJ unconsidered) (NN miracle)))
            (, ,)
            (VP (VBD Hedged)
              (PP (IN in)
                (NP
                  (NP (DT a) (JJ backward-gazing) (NN world))
                  (PRN (: ;)
                    (VP
                      (ADVP (RB Then))
                      (VBN taught)
                      (NP (PRP$ his) (JJ chosen) (NN bard))
                      (S
                        (VP (TO to)
                          (VP (VB say) (: :)
                            (S (`` ``)
                              (NP (PRP$ Our) (NN King))
                              (VP (VBD was)
                                (PP (IN with)
                                  (NP (PRP us)))))))))
                    (: --))))
              (NP (NN yesterday)))))))
    (. !) ('' '')))

ccomp(wove-8, Robed-1)
conj:and(Robed-1, crowned-3)
ccomp(wove-8, crowned-3)
cc(Robed-1, and-4)
conj:and(Robed-1, throned-5)
ccomp(wove-8, throned-5)
nsubj(wove-8, he-7)
root(ROOT-0, wove-8)
nmod:poss(spell-10, his-9)
dobj(wove-8, spell-10)
advmod(Hedged-23, Where-12)
amod(curled-17, heart-blood-13)
amod(curled-17, beat-14)
cc(beat-14, or-15)
conj:or(beat-14, hearth-smoke-16)
amod(curled-17, hearth-smoke-16)
nsubj(Hedged-23, curled-17)
case(miracle-21, With-19)
amod(miracle-21, unconsidered-20)
nmod:with(Hedged-23, miracle-21)
acl:relcl(spell-10, Hedged-23)
case(world-27, in-24)
det(world-27, a-25)
amod(world-27, backward-gazing-26)
nmod:in(Hedged-23, world-27)
advmod(taught-30, Then-29)
dep(world-27, taught-30)
nmod:poss(bard-33, his-31)
amod(bard-33, chosen-32)
dobj(taught-30, bard-33)
mark(say-35, to-34)
advcl(taught-30, say-35)
nmod:poss(King-39, Our-38)
nsubj(us-42, King-39)
cop(us-42, was-40)
case(us-42, with-41)
ccomp(say-35, us-42)
nmod:tmod(Hedged-23, yesterday-44)

(ROOT
  (S
    (S
      (NP
        (NP (DT THE) (NN RHYME))
        (PP (IN OF)
          (NP (DT THE) (NNP THREE))))
      (VP (VBZ SEALERS)
        (ADVP (RB Away)
          (PP (IN by)
            (NP
              (NP (DT the) (NNS lands))
              (PP (IN of)
                (NP (DT the) (NNP Japanee))))))
        (SBAR
          (WHADVP (WRB Where))
          (S
            (NP (DT the) (NN paper))
            (VP (VBZ lanterns)
              (ADJP (NN glow)))))))
    (CC And)
    (S
      (NP
        (NP (DT the) (NNS crews))
        (PP (IN of)
          (NP (PDT all) (DT the) (NN shipping))))
      (VP (VBP drink)
        (SBAR
          (S
            (S
              (PP (IN In)
                (NP
                  (NP (DT the) (NN house))
                  (PP (IN of)
                    (NP (NNP Blood) (NNP Street) (NNP Joe)))))
              (, ,)
              (PP (IN At)
                (NP (NN twilight)))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (S
                    (NP (DT the) (JJ landward) (NN breeze))
                    (VP (VBZ Brings)
                      (PRT (RP up))
                      (NP (DT the) (NN harbour) (NN noise))))
                  (, ,)
                  (CC And)
                  (S
                    (NP
                      (NP (NN ebb))
                      (PP (IN of)
                        (NP
                          (NP (NNP Yokohama) (NNP Bay) (NNP Swigs))
                          (VP (VBG chattering)
                            (PP (IN through)
                              (NP (DT the) (NN buoys))))))
                      (, ,))
                    (PP (IN In)
                      (NP
                        (NP (NNP Cisco) (POS 's))
                        (NNP Dewdrop) (NNP Dining-Rooms))))))
              (NP (PRP They))
              (VP (VBP tell)
                (S
                  (NP (DT the) (NN tale))
                  (ADVP (RB anew))
                  (PP (IN Of)
                    (NP
                      (NP (DT a) (VBN hidden) (NN sea))
                      (CC and)
                      (NP (DT a) (VBN hidden) (NN fight)))))
                (, ,)
                (SBAR
                  (WHADVP (WRB When))
                  (S
                    (NP (DT the) (NNP _) (NNP Baltic) (NNP _))
                    (VP (VBD ran)
                      (PP (IN from)
                        (NP (DT the) (NNP _) (NNP Northern) (NNP Light) (NNP _))))))))
            (CC And)
            (S
              (NP (DT the) (NNP _) (NNP Stralsund) (NNP _))
              (VP (VBD fought)
                (NP (DT the) (CD two))))))))
    (. .)))

det(RHYME-2, THE-1)
nsubj(SEALERS-6, RHYME-2)
case(THREE-5, OF-3)
det(THREE-5, THE-4)
nmod:of(RHYME-2, THREE-5)
root(ROOT-0, SEALERS-6)
advmod(SEALERS-6, Away-7)
case(lands-10, by-8)
det(lands-10, the-9)
nmod:by(Away-7, lands-10)
case(Japanee-13, of-11)
det(Japanee-13, the-12)
nmod:of(lands-10, Japanee-13)
advmod(lanterns-17, Where-14)
det(paper-16, the-15)
nsubj(lanterns-17, paper-16)
advcl(SEALERS-6, lanterns-17)
xcomp(lanterns-17, glow-18)
cc(SEALERS-6, And-19)
det(crews-21, the-20)
nsubj(drink-26, crews-21)
case(shipping-25, of-22)
det:predet(shipping-25, all-23)
det(shipping-25, the-24)
nmod:of(crews-21, shipping-25)
conj:and(SEALERS-6, drink-26)
case(house-29, In-27)
det(house-29, the-28)
nmod:in(tell-65, house-29)
case(Joe-33, of-30)
compound(Joe-33, Blood-31)
compound(Joe-33, Street-32)
nmod:of(house-29, Joe-33)
case(twilight-36, At-35)
nmod:at(tell-65, twilight-36)
advmod(Brings-42, when-38)
det(breeze-41, the-39)
amod(breeze-41, landward-40)
nsubj(Brings-42, breeze-41)
advcl(tell-65, Brings-42)
compound:prt(Brings-42, up-43)
det(noise-46, the-44)
compound(noise-46, harbour-45)
dobj(Brings-42, noise-46)
cc(Brings-42, And-48)
conj:and(Brings-42, ebb-49)
advcl(tell-65, ebb-49)
case(Swigs-53, of-50)
compound(Swigs-53, Yokohama-51)
compound(Swigs-53, Bay-52)
nmod:of(ebb-49, Swigs-53)
acl(Swigs-53, chattering-54)
case(buoys-57, through-55)
det(buoys-57, the-56)
nmod:through(chattering-54, buoys-57)
case(Dining-Rooms-63, In-59)
nmod:poss(Dining-Rooms-63, Cisco-60)
case(Cisco-60, 's-61)
compound(Dining-Rooms-63, Dewdrop-62)
dep(ebb-49, Dining-Rooms-63)
nsubj(tell-65, They-64)
dep(drink-26, tell-65)
det(tale-67, the-66)
xcomp(tell-65, tale-67)
advmod(tale-67, anew-68)
case(sea-72, Of-69)
det(sea-72, a-70)
amod(sea-72, hidden-71)
dep(tale-67, sea-72)
cc(sea-72, and-73)
det(fight-76, a-74)
amod(fight-76, hidden-75)
dep(tale-67, fight-76)
conj:and(sea-72, fight-76)
advmod(ran-83, When-78)
det(_-82, the-79)
compound(_-82, _-80)
compound(_-82, Baltic-81)
nsubj(ran-83, _-82)
advcl(tell-65, ran-83)
case(_-89, from-84)
det(_-89, the-85)
compound(_-89, _-86)
compound(_-89, Northern-87)
compound(_-89, Light-88)
nmod:from(ran-83, _-89)
cc(tell-65, And-90)
det(_-94, the-91)
compound(_-94, _-92)
compound(_-94, Stralsund-93)
nsubj(fought-95, _-94)
dep(drink-26, fought-95)
conj:and(tell-65, fought-95)
det(two-97, the-96)
dobj(fought-95, two-97)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (DT this))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN Law))
          (PP (IN of)
            (NP (DT the) (NNP Muscovite))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBZ proves)
              (PP (IN with)
                (NP (NN shot)
                  (CC and)
                  (NN steel)))
              (, ,)
              (SBAR
                (WHADVP (WRB When))
                (S
                  (NP (PRP ye))
                  (VP (VBP come)
                    (PP (IN by)
                      (NP
                        (NP (PRP$ his) (NNS isles))
                        (PP (IN in)
                          (NP (DT the) (NNP Smoky) (NNP Sea)))))
                    (SBAR
                      (S
                        (NP (PRP ye))
                        (VP (MD must) (RB not)
                          (VP (VB take)
                            (NP
                              (NP (DT the) (NN seal))
                              (, ,)
                              (SBAR
                                (WHADVP (WRB Where))
                                (S
                                  (NP (DT the) (JJ gray) (NN sea))
                                  (VP (VBZ goes)
                                    (ADVP (RB nakedly))
                                    (PP (IN between)
                                      (NP (DT the) (JJ weed-hung) (NNS shelves)))))))))))))))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT the) (JJ little) (JJ blue) (NN fox))
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBZ is)
              (VP (VBN bred)
                (PP (IN for)
                  (NP
                    (NP (PRP$ his) (NN skin))
                    (CC and)
                    (NP (DT the) (NN seal)))))))))
      (NP (PRP they))
      (VP (VBP breed)
        (PP (IN for)
          (NP (PRP themselves)))))
    (: ;)
    (S
      (PP (IN For)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (JJ _) (NNS matkas) (NN _))
            (VP (VBP seek)
              (NP (DT the)
                (VP (NN shore)
                  (S
                    (VP (TO to)
                      (VP (VB drop)
                        (NP (PRP$ their) (NNS pups))))))
                (NN aland))))))
      (, ,)
      (NP
        (NP
          (NP (DT The) (JJ great) (JJ man-seal) (NN haul))
          (PP (RB out) (IN of)
            (NP (DT the) (NN sea))))
        (, ,)
        (NP (NN a-roaring))
        (, ,))
      (VP (VBZ band)
        (PP (IN by)
          (NP (NN band)))))
    (: ;)
    (CC And)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (JJ first) (NNP September) (NNS gales))
          (VP (VBP have)
            (VP (VBN slaked)
              (NP (PRP$ their) (NN rutting-wrath))))))
      (, ,)
      (NP (DT The) (JJ great) (JJ man-seal) (NN haul))
      (VP
        (ADVP (RB back)
          (PP (TO to)
            (NP
              (NP (DT the) (NN sea))
              (CC and)
              (NP (DT no) (NN man)))))
        (VBZ knows)
        (NP (PRP$ their) (NN path))))
    (. .)))

advmod(Law-5, Now-1)
nsubj(Law-5, this-2)
cop(Law-5, is-3)
det(Law-5, the-4)
root(ROOT-0, Law-5)
case(Muscovite-8, of-6)
det(Muscovite-8, the-7)
nmod:of(Law-5, Muscovite-8)
mark(proves-12, that-10)
nsubj(proves-12, he-11)
ccomp(Law-5, proves-12)
case(shot-14, with-13)
nmod:with(proves-12, shot-14)
cc(shot-14, and-15)
nmod:with(proves-12, steel-16)
conj:and(shot-14, steel-16)
advmod(come-20, When-18)
nsubj(come-20, ye-19)
advcl(proves-12, come-20)
case(isles-23, by-21)
nmod:poss(isles-23, his-22)
nmod:by(come-20, isles-23)
case(Sea-27, in-24)
det(Sea-27, the-25)
compound(Sea-27, Smoky-26)
nmod:in(isles-23, Sea-27)
nsubj(take-31, ye-28)
aux(take-31, must-29)
neg(take-31, not-30)
ccomp(come-20, take-31)
det(seal-33, the-32)
dobj(take-31, seal-33)
advmod(goes-39, Where-35)
det(sea-38, the-36)
amod(sea-38, gray-37)
nsubj(goes-39, sea-38)
acl:relcl(seal-33, goes-39)
advmod(goes-39, nakedly-40)
case(shelves-44, between-41)
det(shelves-44, the-42)
amod(shelves-44, weed-hung-43)
nmod:between(goes-39, shelves-44)
cc(Law-5, And-46)
det(fox-50, the-47)
amod(fox-50, little-48)
amod(fox-50, blue-49)
nsubj(breed-61, fox-50)
nsubjpass(bred-53, he-51)
auxpass(bred-53, is-52)
acl:relcl(fox-50, bred-53)
case(skin-56, for-54)
nmod:poss(skin-56, his-55)
nmod:for(bred-53, skin-56)
cc(skin-56, and-57)
det(seal-59, the-58)
nmod:for(bred-53, seal-59)
conj:and(skin-56, seal-59)
nsubj(breed-61, they-60)
conj:and(Law-5, breed-61)
case(themselves-63, for-62)
nmod:for(breed-61, themselves-63)
mark(seek-71, For-65)
advmod(seek-71, when-66)
det(_-70, the-67)
amod(_-70, _-68)
compound(_-70, matkas-69)
nsubj(seek-71, _-70)
advcl(band-91, seek-71)
det(aland-78, the-72)
dep(aland-78, shore-73)
mark(drop-75, to-74)
xcomp(shore-73, drop-75)
nmod:poss(pups-77, their-76)
dobj(drop-75, pups-77)
dobj(seek-71, aland-78)
det(haul-83, The-80)
amod(haul-83, great-81)
amod(haul-83, man-seal-82)
nsubj(band-91, haul-83)
case(sea-87, out-84)
mwe(out-84, of-85)
det(sea-87, the-86)
nmod:out_of(haul-83, sea-87)
appos(haul-83, a-roaring-89)
conj:and(Law-5, band-91)
case(band-93, by-92)
nmod:by(band-91, band-93)
cc(Law-5, And-95)
advmod(slaked-102, when-96)
det(gales-100, the-97)
amod(gales-100, first-98)
compound(gales-100, September-99)
nsubj(slaked-102, gales-100)
aux(slaked-102, have-101)
advcl(knows-117, slaked-102)
nmod:poss(rutting-wrath-104, their-103)
dobj(slaked-102, rutting-wrath-104)
det(haul-109, The-106)
amod(haul-109, great-107)
amod(haul-109, man-seal-108)
nsubj(knows-117, haul-109)
advmod(knows-117, back-110)
case(sea-113, to-111)
det(sea-113, the-112)
nmod:to(back-110, sea-113)
cc(sea-113, and-114)
neg(man-116, no-115)
nmod:to(back-110, man-116)
conj:and(sea-113, man-116)
conj:and(Law-5, knows-117)
nmod:poss(path-119, their-118)
dobj(knows-117, path-119)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (S
        (ADJP (JJ dark)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP lie)
                (CC and)
                (VBP stark)
                (NP (PRP they)))))))
      (VP (VBP lie) (: --)
        (NP (NN rookery) (, ,) (NN dune) (, ,)
          (CC and)
          (NN floe))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (JJ Northern) (NNS Lights))
      (VP (VBP come)
        (PRT (RP down))
        (NP
          (NP (NNP o) (POS '))
          (NNS nights)
          (S
            (VP (TO to)
              (VP (VB dance)
                (PP (IN with)
                  (NP (DT the) (JJ houseless) (NN snow)))))))))
    (: ;)
    (CC And)
    (S
      (NP
        (NP (NNP God))
        (SBAR
          (WHNP (WP Who))
          (S
            (VP
              (VP (VBZ clears)
                (NP (DT the) (NN grounding) (NN berg)))
              (CC and)
              (VP (VBZ steers)
                (NP (DT the) (VBG grinding) (NN floe)))))))
      (, ,)
      (NP (PRP He))
      (VP (VBZ hears)
        (NP
          (NP
            (NP (DT the) (NN cry))
            (PP (IN of)
              (NP (DT the) (JJ little) (NN kit-fox))))
          (CC and)
          (NP
            (NP (DT the) (NN wind))
            (PP (IN along)
              (NP (DT the) (NN snow)))))))
    (. .)))

advmod(lie-8, Then-1)
csubj(lie-8, dark-2)
nsubj(lie-4, they-3)
nsubj(stark-6, they-3)
ccomp(dark-2, lie-4)
cc(lie-4, and-5)
ccomp(dark-2, stark-6)
conj:and(lie-4, stark-6)
dobj(lie-4, they-7)
root(ROOT-0, lie-8)
dobj(lie-8, rookery-10)
dobj(lie-8, dune-12)
conj:and(rookery-10, dune-12)
cc(rookery-10, and-14)
dobj(lie-8, floe-15)
conj:and(rookery-10, floe-15)
cc(lie-8, And-17)
det(Lights-20, the-18)
amod(Lights-20, Northern-19)
nsubj(come-21, Lights-20)
conj:and(lie-8, come-21)
compound:prt(come-21, down-22)
nmod:poss(nights-25, o-23)
case(o-23, '-24)
nmod:tmod(come-21, nights-25)
mark(dance-27, to-26)
acl(nights-25, dance-27)
case(snow-31, with-28)
det(snow-31, the-29)
amod(snow-31, houseless-30)
nmod:with(dance-27, snow-31)
cc(lie-8, And-33)
nsubj(clears-36, God-34)
nsubj(steers-41, God-34)
nsubj(hears-47, God-34)
ref(God-34, Who-35)
acl:relcl(God-34, clears-36)
det(berg-39, the-37)
compound(berg-39, grounding-38)
dobj(clears-36, berg-39)
cc(clears-36, and-40)
acl:relcl(God-34, steers-41)
conj:and(clears-36, steers-41)
det(floe-44, the-42)
amod(floe-44, grinding-43)
dobj(steers-41, floe-44)
nsubj(hears-47, He-46)
conj:and(lie-8, hears-47)
det(cry-49, the-48)
dobj(hears-47, cry-49)
case(kit-fox-53, of-50)
det(kit-fox-53, the-51)
amod(kit-fox-53, little-52)
nmod:of(cry-49, kit-fox-53)
cc(cry-49, and-54)
det(wind-56, the-55)
dobj(hears-47, wind-56)
conj:and(cry-49, wind-56)
case(snow-59, along-57)
det(snow-59, the-58)
nmod:along(wind-56, snow-59)

(ROOT
  (S (CC But)
    (SBAR (IN since)
      (S
        (NP (PRP$ our) (NNS women))
        (VP (MD must)
          (VP (VB walk)
            (SBAR
              (S
                (NP (JJ gay)
                  (CC and)
                  (NN money))
                (VP (VBZ buys)
                  (NP (PRP$ their) (NN gear)))))))))
    (, ,)
    (X (DT The)
      (ADJP (JJ sealing-boats)))
    (NP (PRP they))
    (VP (VBP filch)
      (NP
        (NP (DT that) (NN way))
        (PP (IN at)
          (NP (NN hazard) (NN year))))
      (PP (IN by)
        (NP (NN year))))
    (. .)))

cc(filch-17, But-1)
mark(walk-6, since-2)
nmod:poss(women-4, our-3)
nsubj(walk-6, women-4)
aux(walk-6, must-5)
advcl(filch-17, walk-6)
nsubj(buys-10, gay-7)
cc(gay-7, and-8)
conj:and(gay-7, money-9)
nsubj(buys-10, money-9)
ccomp(walk-6, buys-10)
nmod:poss(gear-12, their-11)
dobj(buys-10, gear-12)
det(sealing-boats-15, The-14)
dep(filch-17, sealing-boats-15)
nsubj(filch-17, they-16)
root(ROOT-0, filch-17)
det(way-19, that-18)
dobj(filch-17, way-19)
case(year-22, at-20)
compound(year-22, hazard-21)
nmod:at(way-19, year-22)
case(year-24, by-23)
nmod:by(filch-17, year-24)

(ROOT
  (FRAG
    (ADJP (JJ English))
    (S
      (S
        (NP (PRP they))
        (VP
          (VP (VB be))
          (CC and)
          (VP (VB Japanee)
            (SBAR (IN that)
              (S
                (VP (VBP hang)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NNP Brown) (NNP Bear) (POS 's))
                      (NN flank)))))))))
      (, ,)
      (CC And)
      (S
        (NP (DT some))
        (VP
          (VP (VB be)
            (NP
              (NP (NNP Scot))
              (, ,)
              (CC but)
              (NP
                (NP (DT the) (JJS worst))
                (PP (IN of)
                  (NP (DT the) (NN lot))))
              (, ,)
              (CC and)
              (NP (DT the) (JJS boldest) (NNS thieves))))
          (, ,)
          (VP (VB be)
            (NP (NNP Yank))))))
    (. !)))

root(ROOT-0, English-1)
nsubj(be-3, they-2)
nsubj(Japanee-5, they-2)
dep(English-1, be-3)
cc(be-3, and-4)
dep(English-1, Japanee-5)
conj:and(be-3, Japanee-5)
mark(hang-7, that-6)
ccomp(Japanee-5, hang-7)
case(flank-13, on-8)
det(Bear-11, the-9)
compound(Bear-11, Brown-10)
nmod:poss(flank-13, Bear-11)
case(Bear-11, 's-12)
nmod:on(hang-7, flank-13)
cc(be-3, And-15)
nsubj(Scot-18, some-16)
nsubj(worst-22, some-16)
cop(Scot-18, be-17)
dep(English-1, Scot-18)
conj:and(be-3, Scot-18)
cc(Scot-18, but-20)
det(worst-22, the-21)
conj:and(be-3, worst-22)
conj:but(Scot-18, worst-22)
case(lot-25, of-23)
det(lot-25, the-24)
nmod:of(worst-22, lot-25)
cc(Scot-18, and-27)
det(thieves-30, the-28)
amod(thieves-30, boldest-29)
conj:and(be-3, thieves-30)
conj:and(Scot-18, thieves-30)
cop(Yank-33, be-32)
dep(Scot-18, Yank-33)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD was)
        (NP (DT the) (JJ sealer) (NNP _) (NNP Northern) (NNP Light) (NNP _))))
    (, ,)
    (S
      (PP (TO to)
        (NP (DT the) (NNP Smoky) (NNS Seas)))
      (NP (PRP she))
      (VP (VBD bore)))
    (, ,)
    (PP (IN With)
      (NP
        (NP (DT a) (NN stovepipe))
        (VP (VBN stuck)
          (PP (IN from)
            (NP
              (NP (DT a) (JJ starboard) (NN port))
              (CC and)
              (NP (DT the) (JJ Russian) (NN flag))))
          (PP (IN at)
            (NP (PRP$ her) (NN fore))))))
    (. .)))

nsubj(_-8, It-1)
cop(_-8, was-2)
det(_-8, the-3)
amod(_-8, sealer-4)
compound(_-8, _-5)
compound(_-8, Northern-6)
compound(_-8, Light-7)
root(ROOT-0, _-8)
case(Seas-13, to-10)
det(Seas-13, the-11)
compound(Seas-13, Smoky-12)
nmod:to(bore-15, Seas-13)
nsubj(bore-15, she-14)
parataxis(_-8, bore-15)
case(stovepipe-19, With-17)
det(stovepipe-19, a-18)
nmod:with(_-8, stovepipe-19)
acl(stovepipe-19, stuck-20)
case(port-24, from-21)
det(port-24, a-22)
amod(port-24, starboard-23)
nmod:from(stuck-20, port-24)
cc(port-24, and-25)
det(flag-28, the-26)
amod(flag-28, Russian-27)
nmod:from(stuck-20, flag-28)
conj:and(port-24, flag-28)
case(fore-31, at-29)
nmod:poss(fore-31, her-30)
nmod:at(stuck-20, fore-31)

(ROOT
  (S (-LRB- -LRB-)
    (NP
      (NP (NNP _) (NNP Baltic) (NNP _))
      (, ,)
      (NP (NNP _) (NNP Stralsund) (NNP _))
      (, ,)
      (CC and)
      (NP (NNP _) (NNP Northern) (NNP Light) (NNP _))
      (: --))
    (VP (VBZ oh))
    (. !)))

compound(_-4, _-2)
compound(_-4, Baltic-3)
nsubj(oh-16, _-4)
compound(_-8, _-6)
compound(_-8, Stralsund-7)
conj:and(_-4, _-8)
nsubj(oh-16, _-8)
cc(_-4, and-10)
compound(_-14, _-11)
compound(_-14, Northern-12)
compound(_-14, Light-13)
conj:and(_-4, _-14)
nsubj(oh-16, _-14)
root(ROOT-0, oh-16)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBD were)
      (NP
        (NP (NNS birds))
        (PP (IN of)
          (NP
            (NP (DT a) (NN feather))
            (: --)
            (S
              (VP (VBG Slipping)
                (PRT (RP away))
                (PP (TO to)
                  (NP (DT the) (NNP Smoky) (NNS Seas)))))
            (, ,)
            (ADVP
              (NP (CD three) (NNS seal-thieves))
              (RB together))))))
    (. !) (-RRB- -RRB-)))

nsubj(birds-3, they-1)
cop(birds-3, were-2)
root(ROOT-0, birds-3)
case(feather-6, of-4)
det(feather-6, a-5)
nmod:of(birds-3, feather-6)
dep(feather-6, Slipping-8)
compound:prt(Slipping-8, away-9)
case(Seas-13, to-10)
det(Seas-13, the-11)
compound(Seas-13, Smoky-12)
nmod:to(Slipping-8, Seas-13)
nummod(seal-thieves-16, three-15)
nmod:npmod(together-17, seal-thieves-16)
advmod(feather-6, together-17)

(ROOT
  (S (CC And)
    (S
      (PP (IN at)
        (NP (JJ last)))
      (S
        (NP (PRP she))
        (VP (VBD came)
          (PP (TO to)
            (NP (DT a) (JJ sandy) (NN cove)))))
      (CC and)
      (S
        (NP (DT the) (NNP Baltic))
        (VP (VBD lay)
          (ADVP (RB therein)))))
    (, ,)
    (CC But)
    (S
      (NP (PRP$ her) (NNS men))
      (VP (VBD were)
        (ADVP (RB up)
          (PP (IN with)
            (NP (DT the) (JJ herding) (NN seal))))
        (PP (TO to)
          (NP (NN drive)
            (CC and)
            (NN club)
            (CC and)
            (NN skin)))))
    (. .)))

cc(came-5, And-1)
case(last-3, at-2)
nmod:at(came-5, last-3)
nsubj(came-5, she-4)
root(ROOT-0, came-5)
case(cove-9, to-6)
det(cove-9, a-7)
amod(cove-9, sandy-8)
nmod:to(came-5, cove-9)
cc(came-5, and-10)
det(Baltic-12, the-11)
nsubj(lay-13, Baltic-12)
conj:and(came-5, lay-13)
advmod(lay-13, therein-14)
cc(came-5, But-16)
nmod:poss(men-18, her-17)
nsubj(drive-26, men-18)
cop(drive-26, were-19)
advmod(drive-26, up-20)
case(seal-24, with-21)
det(seal-24, the-22)
amod(seal-24, herding-23)
nmod:with(up-20, seal-24)
case(drive-26, to-25)
conj:and(came-5, drive-26)
cc(drive-26, and-27)
conj:and(came-5, club-28)
conj:and(drive-26, club-28)
cc(drive-26, and-29)
conj:and(came-5, skin-30)
conj:and(drive-26, skin-30)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD were)
        (ADVP (RB fifteen)
          (NP (CD hundred) (NNS skins)))
        (NP
          (NP (NN abeach))
          (, ,)
          (NP (JJ cool) (NN pelt))
          (CC and)
          (NP (JJ proper) (NN fur)))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (DT the) (NNP _) (NNP Northern) (NNP Light) (NNP _))
            (VP (VBD drove)
              (PP (IN into)
                (NP (DT the) (NN bight))))))))
    (CC and)
    (S
      (NP (DT the) (NN sea-mist))
      (VP (VBD drove)
        (PP (IN with)
          (NP (PRP her)))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
advmod(were-2, fifteen-3)
nummod(skins-5, hundred-4)
nmod:npmod(fifteen-3, skins-5)
nsubj(were-2, abeach-6)
amod(pelt-9, cool-8)
nsubj(were-2, pelt-9)
conj:and(abeach-6, pelt-9)
cc(abeach-6, and-10)
amod(fur-12, proper-11)
nsubj(were-2, fur-12)
conj:and(abeach-6, fur-12)
advmod(drove-20, When-14)
det(_-19, the-15)
compound(_-19, _-16)
compound(_-19, Northern-17)
compound(_-19, Light-18)
nsubj(drove-20, _-19)
advcl(were-2, drove-20)
case(bight-23, into-21)
det(bight-23, the-22)
nmod:into(drove-20, bight-23)
cc(were-2, and-24)
det(sea-mist-26, the-25)
nsubj(drove-27, sea-mist-26)
conj:and(were-2, drove-27)
case(her-29, with-28)
nmod:with(drove-27, her-29)

(ROOT
  (S
    (S
      (NP (DT The) (NNP _) (NNP Baltic) (NNP _))
      (VP
        (VP (VBD called)
          (NP (PRP$ her) (NNS men)))
        (CC and)
        (VP (VBD weighed))))
    (: --)
    (S
      (NP (PRP she))
      (VP
        (VP (MD could) (RB not)
          (VP (VB choose)))
        (CC but)
        (VP (VBP run))))
    (: --)
    (S
      (PP (IN For)
        (NP
          (NP (DT a) (NN stovepipe))
          (VP (VBN seen)
            (PP (IN through)
              (NP (DT the) (VBG closing) (NN mist))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ shows)
        (PP (IN like)
          (NP (DT a) (JJ four-inch) (NN gun)))))
    (. .)))

det(_-4, The-1)
compound(_-4, _-2)
compound(_-4, Baltic-3)
nsubj(called-5, _-4)
nsubj(weighed-9, _-4)
root(ROOT-0, called-5)
nmod:poss(men-7, her-6)
dobj(called-5, men-7)
cc(called-5, and-8)
conj:and(called-5, weighed-9)
nsubj(choose-14, she-11)
nsubj(run-16, she-11)
aux(choose-14, could-12)
neg(choose-14, not-13)
parataxis(called-5, choose-14)
cc(choose-14, but-15)
parataxis(called-5, run-16)
conj:but(choose-14, run-16)
case(stovepipe-20, For-18)
det(stovepipe-20, a-19)
nmod:for(shows-28, stovepipe-20)
acl(stovepipe-20, seen-21)
case(mist-25, through-22)
det(mist-25, the-23)
amod(mist-25, closing-24)
nmod:through(seen-21, mist-25)
nsubj(shows-28, it-27)
parataxis(called-5, shows-28)
case(gun-32, like-29)
det(gun-32, a-30)
amod(gun-32, four-inch-31)
nmod:like(shows-28, gun-32)

(ROOT
  (S (-LRB- -LRB-)
    (S
      (FRAG (CC And)
        (NP (NN loss)))
      (NP (PRP it))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (VP (VBZ is)
              (ADJP (JJ sad)
                (PP (IN as)
                  (NP (NN death))))
              (S
                (VP (TO to)
                  (VP (VB lose)
                    (NP (DT both) (NN trip)
                      (CC and)
                      (NN ship))))))))))
    (CC And)
    (S
      (NP
        (NP (NN lie))
        (PP (IN for)
          (NP
            (NP (DT a) (JJ rotting) (NN contraband))
            (PP (IN on)
              (NP (NNP Vladivostock))))))
      (VP (VBP slip)))
    (. .) (-RRB- -RRB-)))

cc(loss-3, And-2)
dep(is-5, loss-3)
nsubj(is-5, it-4)
root(ROOT-0, is-5)
mark(sad-8, that-6)
cop(sad-8, is-7)
ccomp(is-5, sad-8)
case(death-10, as-9)
nmod:as(sad-8, death-10)
mark(lose-12, to-11)
xcomp(sad-8, lose-12)
cc:preconj(trip-14, both-13)
dobj(lose-12, trip-14)
cc(trip-14, and-15)
dobj(lose-12, ship-16)
conj:and(trip-14, ship-16)
cc(is-5, And-17)
nsubj(slip-25, lie-18)
case(contraband-22, for-19)
det(contraband-22, a-20)
amod(contraband-22, rotting-21)
nmod:for(lie-18, contraband-22)
case(Vladivostock-24, on-23)
nmod:on(contraband-22, Vladivostock-24)
conj:and(is-5, slip-25)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP
        (VP (VBD turned))
        (CC and)
        (VP (VBD dived)
          (PP (IN in)
            (NP
              (NP (DT the) (NN sea-smother))
              (PP (IN as)
                (NP (DT a) (NN rabbit) (NNS dives)))))
          (PP (IN in)
            (NP (DT the) (NNS whins))))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NNP _) (NNP Northern) (NNP Light) (NNP _))
      (VP (VBD sent)
        (PRT (RP up))
        (NP (PRP$ her) (NNS boats))
        (S
          (VP (TO to)
            (VP (VB steal)
              (NP (DT the) (VBN stolen) (NNS skins)))))))
    (. .)))

nsubj(turned-2, She-1)
nsubj(dived-4, She-1)
root(ROOT-0, turned-2)
cc(turned-2, and-3)
conj:and(turned-2, dived-4)
case(sea-smother-7, in-5)
det(sea-smother-7, the-6)
nmod:in(dived-4, sea-smother-7)
case(dives-11, as-8)
det(dives-11, a-9)
compound(dives-11, rabbit-10)
nmod:as(sea-smother-7, dives-11)
case(whins-14, in-12)
det(whins-14, the-13)
nmod:in(dived-4, whins-14)
cc(turned-2, And-16)
det(_-21, the-17)
compound(_-21, _-18)
compound(_-21, Northern-19)
compound(_-21, Light-20)
nsubj(sent-22, _-21)
conj:and(turned-2, sent-22)
compound:prt(sent-22, up-23)
nmod:poss(boats-25, her-24)
dobj(sent-22, boats-25)
mark(steal-27, to-26)
advcl(sent-22, steal-27)
det(skins-30, the-28)
amod(skins-30, stolen-29)
dobj(steal-27, skins-30)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD had) (RB not)
        (VP (VBN brought)
          (NP (DT a) (NN load))
          (PP (TO to)
            (NP (NN side)))))
      (CC or)
      (VP (VBD slid)
        (S
          (NP (PRP$ their) (NNS hatches))
          (ADJP (JJ clear))))
      (, ,)
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP they))
          (VP (VBD were)
            (ADJP
              (ADJP (JJ aware)
                (PP (IN of)
                  (NP (DT a) (NN sloop-of-war))))
              (, ,)
              (ADJP (JJ ghost-white))
              (CC and)
              (ADJP (RB very) (JJ near)))))))
    (. .)))

nsubj(brought-4, They-1)
nsubj(slid-10, They-1)
aux(brought-4, had-2)
neg(brought-4, not-3)
root(ROOT-0, brought-4)
det(load-6, a-5)
dobj(brought-4, load-6)
case(side-8, to-7)
nmod:to(brought-4, side-8)
cc(brought-4, or-9)
conj:or(brought-4, slid-10)
nmod:poss(hatches-12, their-11)
nsubj(clear-13, hatches-12)
xcomp(slid-10, clear-13)
advmod(aware-18, When-15)
nsubj(aware-18, they-16)
nsubj(ghost-white-23, they-16)
nsubj(near-26, they-16)
cop(aware-18, were-17)
advcl(brought-4, aware-18)
case(sloop-of-war-21, of-19)
det(sloop-of-war-21, a-20)
nmod:of(aware-18, sloop-of-war-21)
advcl(brought-4, ghost-white-23)
conj:and(aware-18, ghost-white-23)
cc(aware-18, and-24)
advmod(near-26, very-25)
advcl(brought-4, near-26)
conj:and(aware-18, near-26)

(ROOT
  (S
    (NP (PRP$ Her) (NN flag))
    (NP (PRP she))
    (VP
      (VP (VBD showed))
      (, ,)
      (CC and)
      (VP
        (NP (PRP$ her) (NNS guns))
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBD showed)
              (NP
                (NP (: --)
                  (NP
                    (NP (CD three))
                    (PP (IN of)
                      (NP (PRP them))))
                  (, ,)
                  (NP
                    (NP (JJ black))
                    (, ,)
                    (NP (NN abeam))))
                (, ,)
                (CC And)
                (NP
                  (NP (DT a) (JJ funnel) (JJ white))
                  (PP (IN with)
                    (NP (DT the) (JJ crusted) (NN salt)))))))
          (, ,)
          (CC but)
          (S
            (ADVP (RB never))
            (NP
              (NP (DT a) (NN show))
              (PP (IN of)
                (NP (NN steam))))))))
    (. .)))

nmod:poss(flag-2, Her-1)
nsubj(showed-4, flag-2)
nsubj(showed-4, she-3)
root(ROOT-0, showed-4)
cc(showed-4, and-6)
nmod:poss(guns-8, her-7)
conj:and(showed-4, guns-8)
nsubj(showed-10, she-9)
dep(guns-8, showed-10)
dobj(showed-10, three-12)
case(them-14, of-13)
nmod:of(three-12, them-14)
appos(three-12, black-16)
appos(black-16, abeam-18)
cc(three-12, And-20)
det(white-23, a-21)
amod(white-23, funnel-22)
dobj(showed-10, white-23)
conj:and(three-12, white-23)
case(salt-27, with-24)
det(salt-27, the-25)
amod(salt-27, crusted-26)
nmod:with(white-23, salt-27)
cc(showed-10, but-29)
neg(show-32, never-30)
det(show-32, a-31)
dep(guns-8, show-32)
conj:but(showed-10, show-32)
case(steam-34, of-33)
nmod:of(show-32, steam-34)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP (DT no) (NN time)
          (S
            (VP (TO to)
              (VP (VB man)
                (NP (DT the) (NNS brakes))))))))
    (PRN (, ,)
      (S
        (NP (PRP they))
        (VP (VBD knocked)
          (S
            (NP (DT the) (NN shackle))
            (ADJP (JJ free)))))
      (, ,))
    (CC And)
    (S
      (NP (DT the) (NNP _) (NNP Northern) (NNP Light) (NNP _))
      (VP (VBD stood)
        (PRT (RP out))
        (ADVP (RB again))
        (, ,)
        (S
          (ADJP (JJ goose-winged)
            (S
              (VP (TO to)
                (VP (VB open)
                  (NP (NN sea)))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(time-4, no-3)
nsubj(was-2, time-4)
mark(man-6, to-5)
acl(time-4, man-6)
det(brakes-8, the-7)
dobj(man-6, brakes-8)
nsubj(knocked-11, they-10)
dep(was-2, knocked-11)
det(shackle-13, the-12)
nsubj(free-14, shackle-13)
xcomp(knocked-11, free-14)
cc(was-2, And-16)
det(_-21, the-17)
compound(_-21, _-18)
compound(_-21, Northern-19)
compound(_-21, Light-20)
nsubj(stood-22, _-21)
conj:and(was-2, stood-22)
compound:prt(stood-22, out-23)
advmod(stood-22, again-24)
xcomp(stood-22, goose-winged-26)
mark(open-28, to-27)
xcomp(goose-winged-26, open-28)
dobj(open-28, sea-29)

(ROOT
  (S (-LRB- -LRB-)
    (S
      (PP (IN For)
        (NP (NN life)))
      (NP (PRP it))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (VP (VBZ is)
              (ADJP
                (ADJP (JJR worse))
                (PP (IN than)
                  (NP (NN death)))))))))
    (, ,) (IN by)
    (S
      (NP
        (NP (NN force))
        (PP (IN of)
          (NP (JJ Russian) (NN law))))
      (VP (TO To)
        (VP (VB work)
          (PP (IN in)
            (NP
              (NP (DT the) (NNS mines))
              (PP (IN of)
                (NP (NN mercury)))))
          (SBAR (IN that)
            (S
              (ADVP (RB loose))
              (NP (DT the) (NNS teeth))
              (PP (IN in)
                (NP (PRP$ your) (NN jaw))))))))
    (. .) (-RRB- -RRB-)))

case(life-3, For-2)
nmod:for(is-5, life-3)
nsubj(is-5, it-4)
root(ROOT-0, is-5)
mark(worse-8, that-6)
cop(worse-8, is-7)
ccomp(is-5, worse-8)
case(death-10, than-9)
nmod:than(worse-8, death-10)
dep(is-5, by-12)
nsubj(work-18, force-13)
case(law-16, of-14)
amod(law-16, Russian-15)
nmod:of(force-13, law-16)
mark(work-18, To-17)
parataxis(is-5, work-18)
case(mines-21, in-19)
det(mines-21, the-20)
nmod:in(work-18, mines-21)
case(mercury-23, of-22)
nmod:of(mines-21, mercury-23)
mark(teeth-27, that-24)
advmod(teeth-27, loose-25)
det(teeth-27, the-26)
dep(work-18, teeth-27)
case(jaw-30, in-28)
nmod:poss(jaw-30, your-29)
dep(teeth-27, jaw-30)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD had) (RB not)
        (VP (VBN run)
          (NP (DT a) (NN mile))
          (PP (IN from)
            (NP (NN shore)))
          (PRN (: --)
            (S
              (NP (PRP they))
              (VP (VBD heard)
                (NP (DT no) (NNS shots))
                (ADVP (RB behind))))
            (: --))
          (SBAR
            (WHADVP (WRB When))
            (S
              (NP (DT the) (NN skipper))
              (VP
                (VP (VBP smote)
                  (NP (PRP$ his) (NN hand))
                  (PP (IN on)
                    (NP (PRP$ his) (NN thigh))))
                (CC and)
                (VP (VBD threw)
                  (NP (PRP her))
                  (PRT (RP up))
                  (PP (IN in)
                    (NP (DT the) (NN wind))))
                (: :) (`` ``)
                (VP (VBD Bluffed))
                (: --)
                (VP (VBD raised)
                  (PRT (RP out))
                  (PP (IN on)
                    (NP (DT a) (NN bluff))))))))))
    (PRN (, ,) ('' '')
      (SINV
        (VP (VBD said))
        (NP (PRP he)))
      (, ,) (`` ``))
    (IN for)
    (S
      (S
        (SBAR (IN if)
          (FRAG
            (NP
              (NP (PRP$ my) (NN name) (POS 's))
              (NNP Tom) (NNP Hall))))
        (, ,)
        (NP (PRP You))
        (VP (MD must)
          (VP (VB set)
            (NP (DT a) (NN thief)
              (S
                (VP (TO to)
                  (VP (VB catch)
                    (NP (DT a) (NN thief)))))))))
      (: --)
      (CC and)
      (S
        (NP (DT a) (NN thief))
        (VP (VBZ has)
          (VP (VBN caught)
            (S
              (NP (PRP us))
              (NP (DT all)))))))
    (. !)))

nsubj(run-4, They-1)
aux(run-4, had-2)
neg(run-4, not-3)
root(ROOT-0, run-4)
det(mile-6, a-5)
dobj(run-4, mile-6)
case(shore-8, from-7)
nmod:from(run-4, shore-8)
nsubj(heard-11, they-10)
parataxis(run-4, heard-11)
neg(shots-13, no-12)
dobj(heard-11, shots-13)
advmod(heard-11, behind-14)
advmod(smote-19, When-16)
det(skipper-18, the-17)
nsubj(smote-19, skipper-18)
nsubj(threw-26, skipper-18)
advcl(run-4, smote-19)
nmod:poss(hand-21, his-20)
dobj(smote-19, hand-21)
case(thigh-24, on-22)
nmod:poss(thigh-24, his-23)
nmod:on(smote-19, thigh-24)
cc(smote-19, and-25)
advcl(run-4, threw-26)
conj:and(smote-19, threw-26)
dobj(threw-26, her-27)
compound:prt(threw-26, up-28)
case(wind-31, in-29)
det(wind-31, the-30)
nmod:in(threw-26, wind-31)
dep(smote-19, Bluffed-34)
dep(smote-19, raised-36)
compound:prt(raised-36, out-37)
case(bluff-40, on-38)
det(bluff-40, a-39)
nmod:on(raised-36, bluff-40)
dep(run-4, said-43)
nsubj(said-43, he-44)
dep(run-4, for-47)
mark(Hall-53, if-48)
nmod:poss(name-50, my-49)
nmod:poss(Hall-53, name-50)
case(name-50, 's-51)
compound(Hall-53, Tom-52)
advcl(set-57, Hall-53)
nsubj(set-57, You-55)
aux(set-57, must-56)
parataxis(run-4, set-57)
det(thief-59, a-58)
dobj(set-57, thief-59)
mark(catch-61, to-60)
acl(thief-59, catch-61)
det(thief-63, a-62)
dobj(catch-61, thief-63)
cc(set-57, and-65)
det(thief-67, a-66)
nsubj(caught-69, thief-67)
aux(caught-69, has-68)
parataxis(run-4, caught-69)
conj:and(set-57, caught-69)
nsubj(all-71, us-70)
xcomp(caught-69, all-71)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP
          (NP (DT every) (NN butt))
          (PP (IN in)
            (NP (NNP Oregon))))
        (CC and)
        (NP
          (NP (DT every) (NN spar))
          (PP (IN in)
            (NP (NNP Maine))))))
    (, ,)
    (NP
      (NP (DT The) (NN hand))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD spilled)
            (NP (DT the) (NN wind))
            (PP (IN from)
              (NP (PRP$ her) (NN sail)))))))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN hand))
        (PP (IN of)
          (NP (NNP Reuben) (NNP Paine)))))
    (. !)))

case(butt-3, By-1)
det(butt-3, every-2)
nmod:by(hand-23, butt-3)
case(Oregon-5, in-4)
nmod:in(butt-3, Oregon-5)
cc(butt-3, and-6)
det(spar-8, every-7)
conj:and(butt-3, spar-8)
nmod:by(hand-23, spar-8)
case(Maine-10, in-9)
nmod:in(spar-8, Maine-10)
det(hand-13, The-12)
nsubj(spilled-15, hand-13)
nsubj(hand-23, hand-13)
ref(hand-13, that-14)
acl:relcl(hand-13, spilled-15)
det(wind-17, the-16)
dobj(spilled-15, wind-17)
case(sail-20, from-18)
nmod:poss(sail-20, her-19)
nmod:from(spilled-15, sail-20)
cop(hand-23, was-21)
det(hand-23, the-22)
root(ROOT-0, hand-23)
case(Paine-26, of-24)
compound(Paine-26, Reuben-25)
nmod:of(hand-23, Paine-26)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN rigged)
          (CC and)
          (VBN trigged)
          (NP (PRP her))
          (PP (IN with)
            (NP (NN paint)
              (CC and)
              (NN spar))))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (NP (NN faith)))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBZ has)
        (VP (VBN faked)
          (S
            (NP (PRP her))
            (ADVP (RB well))))))
    (: --)
    (CC But)
    (S
      (NP (PRP I))
      (VP (MD 'd)
        (VP (VB know)
          (NP
            (NP (DT the) (NNP _) (NNP Stralsund) (NNP _) (POS 's))
            (NN deckhouse))
          (PP
            (ADVP (RB yet))
            (IN from)
            (NP (RB here)))
          (PP (TO to)
            (NP
              (NP (DT the) (NNS booms) (NN o) (POS '))
              (NN Hell))))))
    (. .)))

nsubj(rigged-3, He-1)
nsubj(trigged-5, He-1)
aux(rigged-3, has-2)
root(ROOT-0, rigged-3)
cc(rigged-3, and-4)
conj:and(rigged-3, trigged-5)
dobj(rigged-3, her-6)
case(paint-8, with-7)
nmod:with(rigged-3, paint-8)
cc(paint-8, and-9)
nmod:with(rigged-3, spar-10)
conj:and(paint-8, spar-10)
cc(rigged-3, and-12)
conj:and(rigged-3, faith-14)
nsubj(faked-18, he-16)
aux(faked-18, has-17)
conj:and(rigged-3, faked-18)
xcomp(faked-18, her-19)
advmod(her-19, well-20)
cc(rigged-3, But-22)
nsubj(know-25, I-23)
aux(know-25, 'd-24)
conj:and(rigged-3, know-25)
det(_-29, the-26)
compound(_-29, _-27)
compound(_-29, Stralsund-28)
nmod:poss(deckhouse-31, _-29)
case(_-29, 's-30)
dobj(know-25, deckhouse-31)
advmod(here-34, yet-32)
case(here-34, from-33)
nmod:from(know-25, here-34)
case(Hell-40, to-35)
det(o-38, the-36)
compound(o-38, booms-37)
nmod:poss(Hell-40, o-38)
case(o-38, '-39)
nmod:to(know-25, Hell-40)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (S
        (ADVP (RB once))
        (NP (PRP we))
        (VP (VBP ha)
          (SBAR
            (S
              (NP (POS '))
              (VP (VBN met)
                (PP
                  (PP (IN at)
                    (NP (NNP Baltimore)))
                  (, ,)
                  (CC and)
                  (ADVP (RB twice))
                  (PP (IN on)
                    (NP (NNP Boston) (NNP pier)))))))))
      (, ,)
      (CC But)
      (S
        (NP
          (NP
            (NP (DT the) (JJ sickest) (NN day))
            (PP (IN for)
              (NP (PRP you))))
          (, ,)
          (NP (NNP Reuben) (NNP Paine))
          (, ,))
        (VP (VBD was)
          (NP (DT the) (NN day))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBD came)
                (ADVP (RB here))
                (: --)
                (NP
                  (NP (DT The) (NN day))
                  (SBAR (IN that)
                    (S
                      (NP (PRP you))
                      (VP (VBD came)
                        (ADVP (RB here))))))))))))
    (, ,)
    (NP (PRP$ my) (NN lad))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB scare)
          (NP (PRP us))
          (PP (IN from)
            (NP
              (NP (PRP$ our) (NN seal))
              (PP (IN With)
                (NP (PRP$ your) (NN funnel))))))))
    (VP (VBD made)
      (NP
        (NP
          (NP (NNP o) (POS '))
          (NP (PRP$ your) (JJ painted) (NN cloth)))
        (, ,)
        (CC and)
        (NP
          (NP (PRP$ your) (NNS guns))
          (NP
            (NP (NNP o) (POS '))
            (JJ rotten) (NN deal)))))
    (. !)))

discourse(ha-5, Oh-1)
advmod(ha-5, once-3)
nsubj(ha-5, we-4)
ccomp(made-54, ha-5)
nsubj(met-7, '-6)
nsubj(met-7', '-6)
ccomp(ha-5, met-7)
ccomp(ha-5, met-7')
conj:and(met-7, met-7')
case(Baltimore-9, at-8)
nmod:at(met-7, Baltimore-9)
cc(met-7, and-11)
advmod(pier-15, twice-12)
case(pier-15, on-13)
compound(pier-15, Boston-14)
nmod:on(met-7', pier-15)
cc(ha-5, But-17)
det(day-20, the-18)
amod(day-20, sickest-19)
nsubj(day-29, day-20)
case(you-22, for-21)
nmod:for(day-20, you-22)
compound(Paine-25, Reuben-24)
appos(day-20, Paine-25)
cop(day-29, was-27)
det(day-29, the-28)
conj:but(ha-5, day-29)
ccomp(made-54, day-29)
mark(came-32, that-30)
nsubj(came-32, you-31)
ccomp(day-29, came-32)
advmod(came-32, here-33)
det(day-36, The-35)
dobj(came-32, day-36)
mark(came-39, that-37)
nsubj(came-39, you-38)
dep(day-36, came-39)
advmod(came-39, here-40)
nmod:poss(lad-43, my-42)
nsubj(made-54, lad-43)
mark(scare-46, to-45)
parataxis(made-54, scare-46)
dobj(scare-46, us-47)
case(seal-50, from-48)
nmod:poss(seal-50, our-49)
nmod:from(scare-46, seal-50)
case(funnel-53, With-51)
nmod:poss(funnel-53, your-52)
nmod:with(seal-50, funnel-53)
root(ROOT-0, made-54)
dobj(made-54, o-55)
case(o-55, '-56)
nmod:poss(cloth-59, your-57)
amod(cloth-59, painted-58)
dep(o-55, cloth-59)
cc(o-55, and-61)
nmod:poss(guns-63, your-62)
dobj(made-54, guns-63)
conj:and(o-55, guns-63)
nmod:poss(deal-67, o-64)
case(o-64, '-65)
amod(deal-67, rotten-66)
dep(guns-63, deal-67)

(ROOT
  (S
    (S
      (NP
        (NP (VBG Ring)
          (CC and)
          (NN blow))
        (PP (IN for)
          (NP (DT the) (NNP _) (NNP Baltic))))
      (VP
        (VP (VBD _)
          (ADVP (RB now)))
        (, ,)
        (CC and)
        (VP (VBP head)
          (NP (PRP$ her) (NN back))
          (PP (TO to)
            (NP (DT the) (NN bay))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB come)
          (PP (IN into)
            (NP (DT the) (NN game)))
          (ADVP (RB again))
          (: --)
          (PP (IN with)
            (NP (DT a) (JJ double) (NN deck)
              (S
                (VP (TO to)
                  (VP (VB play)))))))))
    (. !) ('' '')))

nsubj(_-8, Ring-1)
nsubj(head-12, Ring-1)
cc(Ring-1, and-2)
conj:and(Ring-1, blow-3)
nsubj(_-8, blow-3)
case(Baltic-7, for-4)
det(Baltic-7, the-5)
compound(Baltic-7, _-6)
nmod:for(Ring-1, Baltic-7)
root(ROOT-0, _-8)
advmod(_-8, now-9)
cc(_-8, and-11)
conj:and(_-8, head-12)
nmod:poss(back-14, her-13)
dobj(head-12, back-14)
case(bay-17, to-15)
det(bay-17, the-16)
nmod:to(head-12, bay-17)
cc(_-8, And-19)
nsubj(come-22, we-20)
aux(come-22, 'll-21)
conj:and(_-8, come-22)
case(game-25, into-23)
det(game-25, the-24)
nmod:into(come-22, game-25)
advmod(come-22, again-26)
case(deck-31, with-28)
det(deck-31, a-29)
amod(deck-31, double-30)
nmod:with(come-22, deck-31)
mark(play-33, to-32)
acl(deck-31, play-33)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBD rang))
        (CC and)
        (VP (VBD blew)
          (NP
            (NP
              (NP (DT the) (NNS sealers) (POS '))
              (NN call))
            (PRN (: --)
              (NP
                (NP (DT the) (JJ poaching) (NN cry))
                (PP (IN of)
                  (NP (DT the) (NN sea))))
              (: --)))
          (S
            (S
              (S (CC And)
                (NP (PRP they))
                (VP (VBD raised)
                  (NP (DT the) (JJ _) (JJ Baltic) (NN _))
                  (PRT (RP out))
                  (PP (IN of)
                    (NP (DT the) (NN mist)))))
              (, ,)
              (CC and)
              (S
                (NP (DT an) (JJ angry) (NN ship))
                (VP (VBD was)
                  (NP (PRP she)))))
            (: :)
            (CC And)
            (FRAG
              (ADJP (JJ blind)))))))
    (NP (PRP they))
    (VP (VBD groped)
      (PP (IN through)
        (NP
          (NP (DT the) (NN whirling))
          (ADJP (JJ white)
            (CC and)
            (JJ blind))))
      (PP (TO to)
        (NP
          (NP (DT the) (NN bay))
          (ADVP (RB again))))
      (, ,)
      (PP (IN Till)
        (NP
          (S
            (NP (PRP they))
            (VP (VBD heard)
              (NP
                (NP (DT the) (NN creak))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNP _) (NNP Stralsund) (NNP _) (POS 's))
                    (NN boom))))))
          (CC and)
          (NP
            (NP (DT the) (NN clank))
            (PP (IN of)
              (NP (PRP$ her) (JJ mooring) (NN chain)))))))
    (. .)))

nsubj(rang-2, They-1)
nsubj(blew-4, They-1)
dep(groped-39, rang-2)
cc(rang-2, and-3)
conj:and(rang-2, blew-4)
dep(groped-39, blew-4)
det(sealers-6, the-5)
nmod:poss(call-8, sealers-6)
case(sealers-6, '-7)
dobj(blew-4, call-8)
det(cry-12, the-10)
amod(cry-12, poaching-11)
dep(call-8, cry-12)
case(sea-15, of-13)
det(sea-15, the-14)
nmod:of(cry-12, sea-15)
cc(raised-19, And-17)
nsubj(raised-19, they-18)
nsubj(blind-37, they-18)
xcomp(blew-4, raised-19)
det(_-23, the-20)
amod(_-23, _-21)
amod(_-23, Baltic-22)
dobj(raised-19, _-23)
compound:prt(raised-19, out-24)
case(mist-27, of-25)
det(mist-27, the-26)
nmod:of(raised-19, mist-27)
cc(raised-19, and-29)
det(ship-32, an-30)
amod(ship-32, angry-31)
nsubj(she-34, ship-32)
cop(she-34, was-33)
xcomp(blew-4, she-34)
conj:and(raised-19, she-34)
cc(raised-19, And-36)
xcomp(blew-4, blind-37)
conj:and(raised-19, blind-37)
nsubj(groped-39, they-38)
root(ROOT-0, groped-39)
case(whirling-42, through-40)
det(whirling-42, the-41)
nmod:through(groped-39, whirling-42)
amod(whirling-42, white-43)
cc(white-43, and-44)
amod(whirling-42, blind-45)
conj:and(white-43, blind-45)
case(bay-48, to-46)
det(bay-48, the-47)
nmod:to(groped-39, bay-48)
advmod(bay-48, again-49)
case(heard-53, Till-51)
nsubj(heard-53, they-52)
nmod:till(groped-39, heard-53)
det(creak-55, the-54)
dobj(heard-53, creak-55)
case(boom-62, of-56)
det(_-60, the-57)
compound(_-60, _-58)
compound(_-60, Stralsund-59)
nmod:poss(boom-62, _-60)
case(_-60, 's-61)
nmod:of(creak-55, boom-62)
cc(heard-53, and-63)
det(clank-65, the-64)
nmod:till(groped-39, clank-65)
conj:and(heard-53, clank-65)
case(chain-69, of-66)
nmod:poss(chain-69, her-67)
amod(chain-69, mooring-68)
nmod:of(clank-65, chain-69)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD laid)
        (NP (PRP them))
        (PRT (RP down))
        (PP (IN by)
          (NP
            (NP (NN bitt)
              (CC and)
              (NN boat))
            (, ,)
            (NP
              (NP (PRP$ their) (NNS pistols))
              (PP (IN in)
                (NP (PRP$ their) (NNS belts))))))
        (, ,)
        (S
          (NP (CC And)))))
    (: :) (`` ``)
    (SQ
      (SQ (MD Will)
        (NP (PRP you))
        (VP (VB fight)
          (PP (IN for)
            (NP
              (NP (PRP it))
              (, ,)
              (NP (NNP Reuben) (NNP Paine))))))
      (, ,)
      (CC or)
      (SQ (MD will)
        (NP (PRP you))
        (VP (VB share)
          (NP (DT the) (NN pelts) (. ?) ('' '')))))))

nsubj(laid-2, They-1)
root(ROOT-0, laid-2)
dobj(laid-2, them-3)
compound:prt(laid-2, down-4)
case(bitt-6, by-5)
nmod:by(laid-2, bitt-6)
cc(bitt-6, and-7)
nmod:by(laid-2, boat-8)
conj:and(bitt-6, boat-8)
nmod:poss(pistols-11, their-10)
appos(bitt-6, pistols-11)
case(belts-14, in-12)
nmod:poss(belts-14, their-13)
nmod:in(pistols-11, belts-14)
xcomp(laid-2, And-16)
aux(fight-21, Will-19)
nsubj(fight-21, you-20)
parataxis(laid-2, fight-21)
case(it-23, for-22)
nmod:for(fight-21, it-23)
compound(Paine-26, Reuben-25)
appos(it-23, Paine-26)
cc(fight-21, or-28)
aux(share-31, will-29)
nsubj(share-31, you-30)
parataxis(laid-2, share-31)
conj:or(fight-21, share-31)
det(pelts-33, the-32)
dobj(share-31, pelts-33)

(ROOT
  (S
    (NP (DT A) (JJ dog-toothed) (NN laugh))
    (VP
      (VP (VBD laughed)
        (NP (NNP Reuben) (NNP Paine)))
      (, ,)
      (CC and)
      (VP (VBD bared)
        (NP (PRP$ his) (NN flenching-knife))))
    (. .)))

det(laugh-3, A-1)
amod(laugh-3, dog-toothed-2)
nsubj(laughed-4, laugh-3)
nsubj(bared-9, laugh-3)
root(ROOT-0, laughed-4)
compound(Paine-6, Reuben-5)
dobj(laughed-4, Paine-6)
cc(laughed-4, and-8)
conj:and(laughed-4, bared-9)
nmod:poss(flenching-knife-11, his-10)
dobj(bared-9, flenching-knife-11)

(ROOT
  (S (`` ``)
    (S
      (S
        (NP
          (NP (NNP Yea))
          (, ,)
          (NP
            (NP
              (NP (NN skin))
              (PP (IN for)
                (NP (NN skin))))
            (, ,)
            (CC and)
            (NP
              (NP (DT all))
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBP hath)
                    (S
                      (S
                        (NP (DT a) (NN man))
                        (VP (MD will)
                          (VP (VB give)
                            (PP (IN for)
                              (NP (PRP$ his) (NN life))))))
                      (: ;)
                      (CC But)
                      (S
                        (NP (PRP I))
                        (VP (VBP 've)
                          (NP
                            (NP (CD six))
                            (ADVP
                              (NP (CD thousand) (NNS skins))
                              (IN below)))))
                      (, ,)
                      (CC and)
                      (S
                        (S
                          (NP (NNP Yeddo) (NNP Port))
                          (VP (TO to)
                            (VP (VB see))))
                        (, ,)
                        (CC And)
                        (S
                          (NP (EX there))
                          (VP (VBZ 's)
                            (ADVP (RB never))
                            (NP
                              (NP (DT a) (NN law))
                              (PP (IN of)
                                (NP (NN God)
                                  (CC or)
                                  (NN man))))))))))))))
        (VP (VBZ runs)
          (NP
            (NP (NN north))
            (PP (IN of)
              (NP (NNP Fifty-Three))))))
      (: :) (RB So)
      (S
        (S
          (VP (VB go)
            (PP (IN in)
              (NP (NN peace)))
            (PP (TO to)
              (NP (DT the) (JJ naked) (NNS seas)))
            (PP (IN with)
              (ADJP (JJ empty)))))
        (VP (VBZ holds)
          (S
            (VP (TO to)
              (VP (VB fill)))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB be)
          (ADJP (JJ good)
            (PP (TO to)
              (NP
                (NP
                  (NP (PRP$ your) (NN seal))
                  (NP (DT this) (NN catch)))
                (, ,)
                (ADJP (RB as) (JJ many)))))
          (SBAR (IN as)
            (S
              (NP (PRP I))
              (VP (MD shall)
                (VP (VB kill))))))))
    (. !) ('' '')))

nsubj(runs-45, Yea-2)
appos(Yea-2, skin-4)
case(skin-6, for-5)
nmod:for(skin-4, skin-6)
cc(skin-4, and-8)
appos(Yea-2, all-9)
conj:and(skin-4, all-9)
mark(hath-12, that-10)
nsubj(hath-12, he-11)
dep(all-9, hath-12)
det(man-14, a-13)
nsubj(give-16, man-14)
aux(give-16, will-15)
xcomp(hath-12, give-16)
case(life-19, for-17)
nmod:poss(life-19, his-18)
nmod:for(give-16, life-19)
cc(give-16, But-21)
nsubj('ve-23, I-22)
xcomp(hath-12, 've-23)
conj:but(give-16, 've-23)
dobj('ve-23, six-24)
nummod(skins-26, thousand-25)
advmod(six-24, skins-26)
case(skins-26, below-27)
cc(give-16, and-29)
compound(Port-31, Yeddo-30)
nsubj(see-33, Port-31)
mark(see-33, to-32)
xcomp(hath-12, see-33)
conj:and(give-16, see-33)
cc(see-33, And-35)
expl('s-37, there-36)
conj:and(give-16, 's-37)
conj:and(see-33, 's-37)
neg('s-37, never-38)
det(law-40, a-39)
nsubj('s-37, law-40)
case(God-42, of-41)
nmod:of(law-40, God-42)
cc(God-42, or-43)
nmod:of(law-40, man-44)
conj:or(God-42, man-44)
root(ROOT-0, runs-45)
dobj(runs-45, north-46)
case(Fifty-Three-48, of-47)
nmod:of(north-46, Fifty-Three-48)
advmod(runs-45, So-50)
csubj(holds-60, go-51)
case(peace-53, in-52)
nmod:in(go-51, peace-53)
case(seas-57, to-54)
det(seas-57, the-55)
amod(seas-57, naked-56)
nmod:to(go-51, seas-57)
case(empty-59, with-58)
advcl(go-51, empty-59)
parataxis(runs-45, holds-60)
mark(fill-62, to-61)
xcomp(holds-60, fill-62)
cc(runs-45, And-64)
nsubj(good-68, I-65)
aux(good-68, 'll-66)
cop(good-68, be-67)
conj:and(runs-45, good-68)
case(seal-71, to-69)
nmod:poss(seal-71, your-70)
nmod:to(good-68, seal-71)
det(catch-73, this-72)
dep(seal-71, catch-73)
advmod(many-76, as-75)
amod(seal-71, many-76)
mark(kill-80, as-77)
nsubj(kill-80, I-78)
aux(kill-80, shall-79)
advcl(good-68, kill-80)

(ROOT
  (S
    (S
      (S
        (VP (VBN Answered)
          (NP
            (NP (DT the) (NN snap))
            (PP (IN of)
              (NP
                (NP (DT a) (VBG closing) (NN lock))
                (CC and)
                (NP
                  (NP (DT the) (NN jar))
                  (PP (IN of)
                    (NP (DT a) (NN gun-butt)))))))))
      (VP (VBD slid)))
    (, ,)
    (CC But)
    (S
      (NP (DT the) (NN tender) (NN fog))
      (VP (VBD shut)
        (SBAR
          (S
            (S
              (VP (VB fold)
                (PRT (RP on))))
            (VP (VBP fold)
              (S
                (VP (TO to)
                  (VP (VB hide)
                    (NP
                      (NP (DT the) (JJ wrong))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBD did)))))))))))))
    (. .)))

csubj(slid-14, Answered-1)
det(snap-3, the-2)
dobj(Answered-1, snap-3)
case(lock-7, of-4)
det(lock-7, a-5)
amod(lock-7, closing-6)
nmod:of(snap-3, lock-7)
cc(lock-7, and-8)
det(jar-10, the-9)
nmod:of(snap-3, jar-10)
conj:and(lock-7, jar-10)
case(gun-butt-13, of-11)
det(gun-butt-13, a-12)
nmod:of(jar-10, gun-butt-13)
root(ROOT-0, slid-14)
cc(slid-14, But-16)
det(fog-19, the-17)
compound(fog-19, tender-18)
nsubj(shut-20, fog-19)
conj:but(slid-14, shut-20)
csubj(fold-23, fold-21)
compound:prt(fold-21, on-22)
ccomp(shut-20, fold-23)
mark(hide-25, to-24)
xcomp(fold-23, hide-25)
det(wrong-27, the-26)
dobj(hide-25, wrong-27)
nsubj(did-29, they-28)
acl:relcl(wrong-27, did-29)

(ROOT
  (S
    (S
      (NP (DT The) (JJ weeping) (NN fog))
      (VP (VBD rolled)
        (VP (VB fold)
          (PP (IN on)
            (S
              (VP (VBG fold)
                (NP
                  (NP (DT the) (NN wrath))
                  (PP (IN of)
                    (NP (NN man))))
                (PP (TO to)
                  (NP (NN cloak)))))))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (JJ flame-spurts) (NN pale))
      (VP (VBD ran)
        (PRT (RP down))
        (NP (DT the) (NN rail))
        (SBAR (IN as)
          (S
            (NP (DT the) (NNS sealing-rifles))
            (VP (VBD spoke))))))
    (. .)))

det(fog-3, The-1)
amod(fog-3, weeping-2)
nsubj(rolled-4, fog-3)
root(ROOT-0, rolled-4)
xcomp(rolled-4, fold-5)
mark(fold-7, on-6)
advcl(fold-5, fold-7)
det(wrath-9, the-8)
dobj(fold-7, wrath-9)
case(man-11, of-10)
nmod:of(wrath-9, man-11)
case(cloak-13, to-12)
nmod:to(fold-7, cloak-13)
cc(rolled-4, And-15)
det(pale-18, the-16)
amod(pale-18, flame-spurts-17)
nsubj(ran-19, pale-18)
conj:and(rolled-4, ran-19)
compound:prt(ran-19, down-20)
det(rail-22, the-21)
dobj(ran-19, rail-22)
mark(spoke-26, as-23)
det(sealing-rifles-25, the-24)
nsubj(spoke-26, sealing-rifles-25)
advcl(ran-19, spoke-26)

(ROOT
  (S
    (NP (DT The) (NNS bullets))
    (VP
      (ADVP (RB bit)
        (PP (IN on)
          (NP
            (NP (NN bend)
              (CC and)
              (NN butt))
            (, ,)
            (NP (DT the) (NN splinter)))))
      (VBZ slivered)
      (ADJP (JJ free))
      (PRN (-LRB- -LRB-)
        (S
          (NP (NNP Little) (PRP they))
          (VP (VBP trust)
            (S
              (VP (TO to)
                (VP (VB sparrow-dust)
                  (S
                    (NP (DT that))
                    (VP (VB stop)
                      (NP (DT the) (NN seal))
                      (PP (IN in)
                        (NP (PRP$ his) (NN sea))))))))))
        (. !) (-RRB- -RRB-)))))

det(bullets-2, The-1)
nsubj(slivered-11, bullets-2)
advmod(slivered-11, bit-3)
case(bend-5, on-4)
nmod:on(bit-3, bend-5)
cc(bend-5, and-6)
nmod:on(bit-3, butt-7)
conj:and(bend-5, butt-7)
det(splinter-10, the-9)
appos(bend-5, splinter-10)
root(ROOT-0, slivered-11)
xcomp(slivered-11, free-12)
nsubj(trust-16, Little-14)
nsubj:xsubj(sparrow-dust-18, Little-14)
dep(Little-14, they-15)
parataxis(slivered-11, trust-16)
mark(sparrow-dust-18, to-17)
xcomp(trust-16, sparrow-dust-18)
nsubj(stop-20, that-19)
ccomp(sparrow-dust-18, stop-20)
det(seal-22, the-21)
dobj(stop-20, seal-22)
case(sea-25, in-23)
nmod:poss(sea-25, his-24)
nmod:in(stop-20, sea-25)

(ROOT
  (S
    (S (, ,)
      (SBAR
        (X (DT The)
          (ADJP (JJ thick)))
        (S
          (NP (NN smoke))
          (VP
            (VP (VBD hung))
            (CC and)
            (VP (MD would) (RB not)
              (VP (VB shift))))))
      (, ,)
      (S
        (VP (VBN leaden)))
      (NP (PRP it))
      (VP
        (VP (VBD lay))
        (CC and)
        (VP (VBZ blue))))
    (, ,)
    (CC But)
    (S
      (NP (CD three))
      (VP (VBD were)
        (ADVP (RB down))
        (PP (IN on)
          (NP
            (NP
              (NP (DT the) (NNP _) (NNP Baltic) (NNP _) (POS 's))
              (NN deck))
            (CC and)
            (NP
              (NP (CD two))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNP _) (NNP Stralsund) (NNP _) (POS 's))
                  (NN crew))))))))
    (. .)))

det(thick-3, The-2)
dep(hung-5, thick-3)
nsubj(hung-5, smoke-4)
nsubj(shift-9, smoke-4)
advcl(lay-13, hung-5)
cc(hung-5, and-6)
aux(shift-9, would-7)
neg(shift-9, not-8)
conj:and(hung-5, shift-9)
advcl(lay-13, shift-9)
dep(lay-13, leaden-11)
nsubj(lay-13, it-12)
nsubj(blue-15, it-12)
root(ROOT-0, lay-13)
cc(lay-13, and-14)
conj:and(lay-13, blue-15)
cc(lay-13, But-17)
nsubj(deck-27, three-18)
cop(deck-27, were-19)
advmod(deck-27, down-20)
case(deck-27, on-21)
det(_-25, the-22)
compound(_-25, _-23)
compound(_-25, Baltic-24)
nmod:poss(deck-27, _-25)
case(_-25, 's-26)
conj:and(lay-13, deck-27)
cc(deck-27, and-28)
conj:and(lay-13, two-29)
conj:and(deck-27, two-29)
case(crew-36, of-30)
det(_-34, the-31)
compound(_-34, _-32)
compound(_-34, Stralsund-33)
nmod:poss(crew-36, _-34)
case(_-34, 's-35)
nmod:of(two-29, crew-36)

(ROOT
  (S
    (S
      (NP (DT An) (NN arm))
      (VP (VBZ 's) (: -)
        (S
          (ADJP
            (ADJP (JJ length) (IN out))
            (CC and)
            (ADJP (JJ overside)))
          (SBAR
            (S
              (NP (DT the) (JJ banked) (NN fog))
              (VP (VBD held)
                (S
                  (NP (PRP them))
                  (ADJP (VBN bound)))))))))
    (, ,)
    (CC But)
    (S (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBD heard)
            (NP (CC or)
              (NP
                (NP (NN groan))
                (CC or)
                (NP (NN word)))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD fired)
        (PP (IN at)
          (NP (DT the) (NN sound)))))
    (. .)))

det(arm-2, An-1)
nsubj('s-3, arm-2)
root(ROOT-0, 's-3)
dep(held-12, length-5)
dep(length-5, out-6)
cc(length-5, and-7)
conj:and(length-5, overside-8)
dep(held-12, overside-8)
det(fog-11, the-9)
amod(fog-11, banked-10)
nsubj(held-12, fog-11)
parataxis('s-3, held-12)
nsubj(bound-14, them-13)
xcomp(held-12, bound-14)
cc('s-3, But-16)
mark(heard-20, as-18)
nsubj(heard-20, they-19)
advcl(fired-27, heard-20)
cc(groan-22, or-21)
dobj(heard-20, groan-22)
cc(groan-22, or-23)
dobj(heard-20, word-24)
conj:or(groan-22, word-24)
nsubj(fired-27, they-26)
conj:But('s-3, fired-27)
case(sound-30, at-28)
det(sound-30, the-29)
nmod:at(fired-27, sound-30)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (CD one))
        (VP (VBN cried)
          (PRT (RP out))
          (PP (IN on)
            (NP
              (NP
                (NP (DT the) (NN Name))
                (PP (IN of)
                  (NP (NNP God))))
              (, ,)
              (CC and)
              (NP (CD one))))
          (S
            (VP (TO to)
              (VP (VB have)
                (S
                  (NP (PRP him))
                  (VP (VB cease)))))))))
    (, ,)
    (S
      (S (CC And)
        (NP (DT the) (NN questing))
        (ADVP (RB volley))
        (VP
          (VP (VBD found)
            (S
              (NP (PRP them))
              (NP (DT both))))
          (CC and)
          (VP (VBD bade)
            (SBAR
              (S
                (NP (PRP them))
                (VP (VBP hold)
                  (NP (PRP$ their) (NN peace))))))))
      (: ;)
      (CC And)
      (S
        (NP (PRP one))
        (VP (VBD called)
          (PRT (RP out))
          (PP (IN on)
            (NP
              (NP (DT a) (NN heathen) (NNS joss))
              (CC and)
              (NP (CD one))))
          (PP (IN on)
            (NP
              (NP (DT the) (NNP Virgin) (POS 's))
              (NN Name))))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NN schooling) (NN bullet))
      (VP
        (VP (VBD leaped)
          (PRT (RP across)))
        (CC and)
        (VP (VBD showed)
          (SBAR
            (S
              (NP (PRP them))
              (VP (VBP whence)
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBD came))))))))))
    (. .)))

case(one-2, For-1)
nmod:for(found-22, one-2)
acl(one-2, cried-3)
compound:prt(cried-3, out-4)
case(Name-7, on-5)
det(Name-7, the-6)
nmod:on(cried-3, Name-7)
case(God-9, of-8)
nmod:of(Name-7, God-9)
cc(Name-7, and-11)
nmod:on(cried-3, one-12)
conj:and(Name-7, one-12)
mark(have-14, to-13)
xcomp(cried-3, have-14)
nsubj(cease-16, him-15)
ccomp(have-14, cease-16)
cc(found-22, And-18)
det(questing-20, the-19)
nsubj(found-22, questing-20)
nsubj(bade-26, questing-20)
advmod(found-22, volley-21)
root(ROOT-0, found-22)
nsubj(both-24, them-23)
xcomp(found-22, both-24)
cc(found-22, and-25)
conj:and(found-22, bade-26)
nsubj(hold-28, them-27)
ccomp(bade-26, hold-28)
nmod:poss(peace-30, their-29)
dobj(hold-28, peace-30)
cc(found-22, And-32)
nsubj(called-34, one-33)
conj:and(found-22, called-34)
compound:prt(called-34, out-35)
case(joss-39, on-36)
det(joss-39, a-37)
compound(joss-39, heathen-38)
nmod:on(called-34, joss-39)
cc(joss-39, and-40)
nmod:on(called-34, one-41)
conj:and(joss-39, one-41)
case(Name-46, on-42)
det(Virgin-44, the-43)
nmod:poss(Name-46, Virgin-44)
case(Virgin-44, 's-45)
nmod:on(called-34, Name-46)
cc(found-22, And-48)
det(bullet-51, the-49)
compound(bullet-51, schooling-50)
nsubj(leaped-52, bullet-51)
nsubj(showed-55, bullet-51)
conj:and(found-22, leaped-52)
compound:prt(leaped-52, across-53)
cc(leaped-52, and-54)
conj:and(found-22, showed-55)
conj:and(leaped-52, showed-55)
nsubj(whence-57, them-56)
ccomp(showed-55, whence-57)
nsubj(came-59, they-58)
ccomp(whence-57, came-59)

(ROOT
  (S (CC And)
    (S
      (PP (IN in)
        (NP (DT the) (VBG waiting) (NNS silences)))
      (NP (DT the) (NN rudder))
      (VP (VBD whined)
        (PP (IN beneath))))
    (, ,)
    (CC And)
    (S
      (NP (DT each) (NN man))
      (VP (VBD drew)
        (S
          (NP (PRP$ his) (JJ watchful) (NN breath))
          (ADJP (JJ slow))
          (S
            (VP
              (VP (VBN taken)
                (S
                  (VP (`` `) (VB tween)
                    (S
                      (NP
                        (NP (DT the) (NNS teeth))
                        (PRN (: --)
                          (NP
                            (NP (NN Trigger)
                              (CC and)
                              (NN ear))
                            (CC and)
                            (NP (NN eye) (NN acock) (, ,) (NN knit) (NN brow)
                              (CC and)
                              (NN hard-drawn) (NNS lips)))
                          (: --)))
                      (VP (VBG Bracing)
                        (NP (PRP$ his) (NNS feet))
                        (PP (IN by)
                          (NP (NN chock))))))))
              (CC and)
              (VP
                (ADJP (JJ cleat))
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN rolling))
                    (PP (IN of)
                      (NP (DT the) (NNS ships)))))))))))
    (. .)))

cc(whined-8, And-1)
case(silences-5, in-2)
det(silences-5, the-3)
amod(silences-5, waiting-4)
nmod:beneath(whined-8, silences-5)
det(rudder-7, the-6)
nsubj(whined-8, rudder-7)
root(ROOT-0, whined-8)
case(silences-5, beneath-9)
cc(whined-8, And-11)
det(man-13, each-12)
nsubj(drew-14, man-13)
conj:and(whined-8, drew-14)
nmod:poss(breath-17, his-15)
amod(breath-17, watchful-16)
nsubj(taken-19, breath-17)
nsubj(cleat-44, breath-17)
dep(taken-19, slow-18)
xcomp(drew-14, taken-19)
ccomp(taken-19, tween-21)
det(teeth-23, the-22)
nsubj(Bracing-38, teeth-23)
dep(teeth-23, Trigger-25)
cc(Trigger-25, and-26)
dep(teeth-23, ear-27)
conj:and(Trigger-25, ear-27)
cc(Trigger-25, and-28)
compound(brow-33, eye-29)
compound(brow-33, acock-30)
dep(brow-33, knit-32)
dep(teeth-23, brow-33)
conj:and(Trigger-25, brow-33)
cc(brow-33, and-34)
compound(lips-36, hard-drawn-35)
conj:and(Trigger-25, lips-36)
conj:and(brow-33, lips-36)
dep(tween-21, Bracing-38)
nmod:poss(feet-40, his-39)
dobj(Bracing-38, feet-40)
case(chock-42, by-41)
nmod:by(Bracing-38, chock-42)
cc(taken-19, and-43)
xcomp(drew-14, cleat-44)
conj:and(taken-19, cleat-44)
case(rolling-47, for-45)
det(rolling-47, the-46)
nmod:for(cleat-44, rolling-47)
case(ships-50, of-48)
det(ships-50, the-49)
nmod:of(rolling-47, ships-50)

(ROOT
  (S
    (ADVP (RB Till))
    (NP (PRP they))
    (VP (VBD heard)
      (NP
        (NP (DT the) (NN cough))
        (PP (IN of)
          (NP (DT a) (JJ wounded) (NN man))))
      (SBAR (IN that)
        (S
          (S
            (VP (VBN fought)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN fog))
                  (PP (IN for)
                    (NP (NN breath)))))
              (, ,)
              (PP (IN Till)
                (NP
                  (NP (PRP they))
                  (VP (VBN heard)
                    (NP
                      (NP (DT the) (NN torment))
                      (PP (IN of)
                        (NP
                          (NP (NNP Reuben) (NNP Paine))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD wailed)
                                (PP (IN upon)
                                  (NP (PRP$ his) (NN death)))
                                (: :) (`` ``)
                                (S
                                  (NP
                                    (NP (DT The) (NNS tides))
                                    (SBAR
                                      (S
                                        (S
                                          (NP (PRP they))
                                          (VP (MD 'll)
                                            (VP (VB go)
                                              (PP (IN through)
                                                (NP (NNP Fundy) (NNP Race))))))
                                        (CC but)
                                        (S
                                          (NP (PRP I))
                                          (VP (MD 'll)
                                            (VP (VB go)))))))
                                  (ADJP (JJ nevermore))))))))))))))
          (CC And)
          (S
            (VP (VB see)
              (NP (DT the) (NNS hogs))
              (PP (IN from)
                (NP
                  (NP (JJ ebb-tide) (NN mark) (NN turn))
                  (VP (VBG scampering)
                    (PRT (RP back))
                    (S
                      (VP (TO to)
                        (VP (VB shore))))))))))))
    (. .)))

advmod(heard-3, Till-1)
nsubj(heard-3, they-2)
root(ROOT-0, heard-3)
det(cough-5, the-4)
dobj(heard-3, cough-5)
case(man-9, of-6)
det(man-9, a-7)
amod(man-9, wounded-8)
nmod:of(cough-5, man-9)
mark(fought-11, that-10)
ccomp(heard-3, fought-11)
case(fog-14, in-12)
det(fog-14, the-13)
nmod:in(fought-11, fog-14)
case(breath-16, for-15)
nmod:for(fog-14, breath-16)
case(they-19, Till-18)
nmod:till(fought-11, they-19)
acl(they-19, heard-20)
det(torment-22, the-21)
dobj(heard-20, torment-22)
case(Paine-25, of-23)
compound(Paine-25, Reuben-24)
nmod:of(torment-22, Paine-25)
nsubj(wailed-27, Paine-25)
ref(Paine-25, that-26)
acl:relcl(Paine-25, wailed-27)
case(death-30, upon-28)
nmod:poss(death-30, his-29)
nmod:upon(wailed-27, death-30)
det(tides-34, The-33)
nsubj(nevermore-45, tides-34)
nsubj(go-37, they-35)
aux(go-37, 'll-36)
acl:relcl(tides-34, go-37)
case(Race-40, through-38)
compound(Race-40, Fundy-39)
nmod:through(go-37, Race-40)
cc(go-37, but-41)
nsubj(go-44, I-42)
aux(go-44, 'll-43)
acl:relcl(tides-34, go-44)
conj:but(go-37, go-44)
xcomp(wailed-27, nevermore-45)
cc(fought-11, And-46)
ccomp(heard-3, see-47)
conj:and(fought-11, see-47)
det(hogs-49, the-48)
dobj(see-47, hogs-49)
case(turn-53, from-50)
amod(turn-53, ebb-tide-51)
compound(turn-53, mark-52)
nmod:from(see-47, turn-53)
acl(turn-53, scampering-54)
compound:prt(scampering-54, back-55)
mark(shore-57, to-56)
xcomp(scampering-54, shore-57)

(ROOT
  (S
    (S
      (ADVP (DT No) (RBR more))
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB see)
          (NP (DT the) (JJ trawlers) (NN drift))
          (PP (IN below)
            (NP (DT the) (NNP Bass) (NNP Rock) (NN ground))))))
    (, ,)
    (CC Or)
    (S
      (VP (VB watch)
        (S
          (NP (DT the) (JJ tall) (NN Fall) (NN steamer) (NNS lights))
          (VP (VB tear)
            (S
              (VP (VBG blazing)
                (PRT (RP up))
                (NP (DT the) (NN Sound))))))))
    (. .)))

neg(more-2, No-1)
advmod(see-5, more-2)
nsubj(see-5, I-3)
nsubj(watch-16, I-3)
aux(see-5, 'll-4)
root(ROOT-0, see-5)
det(drift-8, the-6)
amod(drift-8, trawlers-7)
dobj(see-5, drift-8)
case(ground-13, below-9)
det(ground-13, the-10)
compound(ground-13, Bass-11)
compound(ground-13, Rock-12)
nmod:below(see-5, ground-13)
cc(see-5, Or-15)
conj:or(see-5, watch-16)
det(lights-21, the-17)
amod(lights-21, tall-18)
compound(lights-21, Fall-19)
compound(lights-21, steamer-20)
nsubj(tear-22, lights-21)
ccomp(watch-16, tear-22)
xcomp(tear-22, blazing-23)
compound:prt(blazing-23, up-24)
det(Sound-26, the-25)
dobj(blazing-23, Sound-26)

(ROOT
  (S
    (NP (NN Sorrow))
    (VP (VBZ is)
      (NP (PRP me))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT a) (JJ lonely) (NN sea))
          (CC and)
          (NP
            (NP
              (NP (DT a) (JJ sinful) (NN fight))
              (SBAR
                (S
                  (S
                    (NP (PRP I))
                    (VP (VBP fall)))
                  (, ,)
                  (CC But)
                  (S
                    (SBAR (IN if)
                      (S
                        (NP (EX there))
                        (VP (VBZ 's)
                          (NP
                            (NP (NN law) (NN o) (POS '))
                            (NN God)
                            (CC or)
                            (NN man)))))
                    (NP (PRP you))
                    (VP (MD 'll)
                      (VP (VB swing)
                        (PP (IN for)
                          (NP (PRP it)))
                        (ADVP (RB yet))))))))
            (, ,)
            (NP (NNP Tom) (NNP Hall))))))
    (. !) ('' '')))

nsubj(me-3, Sorrow-1)
cop(me-3, is-2)
root(ROOT-0, me-3)
case(sea-8, in-5)
det(sea-8, a-6)
amod(sea-8, lonely-7)
nmod:in(me-3, sea-8)
cc(sea-8, and-9)
det(fight-12, a-10)
amod(fight-12, sinful-11)
nmod:in(me-3, fight-12)
conj:and(sea-8, fight-12)
nsubj(fall-14, I-13)
acl:relcl(fight-12, fall-14)
cc(fall-14, But-16)
mark('s-19, if-17)
expl('s-19, there-18)
advcl(swing-28, 's-19)
compound(o-21, law-20)
nmod:poss(God-23, o-21)
case(o-21, '-22)
nsubj('s-19, God-23)
cc(God-23, or-24)
nsubj('s-19, man-25)
conj:or(God-23, man-25)
nsubj(swing-28, you-26)
aux(swing-28, 'll-27)
acl:relcl(fight-12, swing-28)
conj:but(fall-14, swing-28)
case(it-30, for-29)
nmod:for(swing-28, it-30)
advmod(swing-28, yet-31)
compound(Hall-34, Tom-33)
appos(fight-12, Hall-34)

(ROOT
  (S
    (NP (NNP Tom) (NNP Hall))
    (VP (VBD stood)
      (PRT (RP up))
      (PP (IN by)
        (NP (DT the) (NN quarter-rail))))
    (. .)))

compound(Hall-2, Tom-1)
nsubj(stood-3, Hall-2)
root(ROOT-0, stood-3)
compound:prt(stood-3, up-4)
case(quarter-rail-7, by-5)
det(quarter-rail-7, the-6)
nmod:by(stood-3, quarter-rail-7)

(ROOT
  (SINV (`` ``)
    (NP
      (NP (PRP$ Your) (NNS words))
      (PP (IN in)
        (NP (PRP$ your) (NNS teeth))))
    (, ,) ('' '')
    (VP (VBD said))
    (NP (PRP he))
    (. .)))

nmod:poss(words-3, Your-2)
dep(said-9, words-3)
case(teeth-6, in-4)
nmod:poss(teeth-6, your-5)
nmod:in(words-3, teeth-6)
root(ROOT-0, said-9)
nsubj(said-9, he-10)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (ADVP (RB never))
        (NP
          (NP (DT a) (NN law))
          (PP (IN of)
            (NP (NNP God))))))
    (CC or)
    (S
      (NP (NN man))
      (VP (VBZ runs)
        (NP
          (NP (NN north))
          (PP (IN of)
            (NP (NNP Fifty-Three))))))
    (. .)))

expl('s-3, There-2)
root(ROOT-0, 's-3)
neg('s-3, never-4)
det(law-6, a-5)
nsubj('s-3, law-6)
case(God-8, of-7)
nmod:of(law-6, God-8)
cc('s-3, or-9)
nsubj(runs-11, man-10)
conj:or('s-3, runs-11)
dobj(runs-11, north-12)
case(Fifty-Three-14, of-13)
nmod:of(north-12, Fifty-Three-14)

(ROOT
  (S
    (S
      (S
        (VP
          (ADVP (RB So))
          (VB go)
          (PP (IN in)
            (NP (NN grace)))
          (SBAR (IN with)
            (S
              (NP (PRP Him))
              (VP (TO to)
                (VP (VB face)))))))
      (, ,)
      (CC and)
      (S
        (NP (DT an) (JJ ill-spent) (NN life))
        (VP
          (ADVP (RB behind)))))
    (, ,)
    (CC And)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB be)
          (ADJP (JJ good)
            (PP (TO to)
              (NP
                (NP (PRP$ your) (NNS widows))
                (, ,)
                (NP (NNP Rube))
                (, ,)
                (ADJP (RB as) (JJ many))
                (SBAR (IN as)
                  (S
                    (NP (PRP I))
                    (VP (MD shall)
                      (VP (VB find)))))))))))
    (. .) ('' '')))

advmod(go-2, So-1)
root(ROOT-0, go-2)
case(grace-4, in-3)
nmod:in(go-2, grace-4)
mark(face-8, with-5)
nsubj(face-8, Him-6)
mark(face-8, to-7)
advcl(go-2, face-8)
cc(go-2, and-10)
det(life-13, an-11)
amod(life-13, ill-spent-12)
nsubj(behind-14, life-13)
conj:and(go-2, behind-14)
cc(go-2, And-16)
nsubj(good-20, I-17)
aux(good-20, 'll-18)
cop(good-20, be-19)
conj:and(go-2, good-20)
case(widows-23, to-21)
nmod:poss(widows-23, your-22)
nmod:to(good-20, widows-23)
appos(widows-23, Rube-25)
advmod(many-28, as-27)
amod(widows-23, many-28)
mark(find-32, as-29)
nsubj(find-32, I-30)
aux(find-32, shall-31)
acl:relcl(widows-23, find-32)

(ROOT
  (S
    (S
      (S
        (NP (DT A) (NNP _) (NNP Stralsund) (NNP _) (NN man))
        (VP (VBD shot)
          (ADJP (JJ blind)
            (CC and)
            (JJ large))))
      (, ,)
      (CC and)
      (S
        (NP (DT a) (JJ war-lock) (NNP Finn))
        (VP (VBD was)
          (NP (PRP he)))))
    (, ,)
    (CC And)
    (S
      (NP (PRP he))
      (VP (VBD hit)
        (NP
          (NP
            (NP (NNP Tom) (NNP Hall))
            (PP (IN with)
              (NP
                (NP (DT a) (JJ bursting) (NN ball))
                (NP (DT a) (NN hand) (POS 's)))))
          (: -)
          (NP
            (NP (NN breadth))
            (PP (IN over)
              (NP (DT the) (NN knee)))))))
    (. .)))

det(man-5, A-1)
compound(man-5, _-2)
compound(man-5, Stralsund-3)
compound(man-5, _-4)
nsubj(shot-6, man-5)
root(ROOT-0, shot-6)
xcomp(shot-6, blind-7)
cc(blind-7, and-8)
xcomp(shot-6, large-9)
conj:and(blind-7, large-9)
cc(shot-6, and-11)
det(Finn-14, a-12)
amod(Finn-14, war-lock-13)
nsubj(he-16, Finn-14)
cop(he-16, was-15)
conj:and(shot-6, he-16)
cc(shot-6, And-18)
nsubj(hit-20, he-19)
conj:and(shot-6, hit-20)
compound(Hall-22, Tom-21)
dobj(hit-20, Hall-22)
case(ball-26, with-23)
det(ball-26, a-24)
amod(ball-26, bursting-25)
nmod:with(Hall-22, ball-26)
det(hand-28, a-27)
nmod:poss(ball-26, hand-28)
case(hand-28, 's-29)
dep(Hall-22, breadth-31)
case(knee-34, over-32)
det(knee-34, the-33)
nmod:over(breadth-31, knee-34)

(ROOT
  (S
    (S
      (NP (NNP Tom) (NNP Hall))
      (VP
        (VP (VBD caught)
          (NP (VB hold))
          (PP (IN by)
            (NP (DT the) (NN topping-lift))))
        (, ,)
        (CC and)
        (VP (VBD sat)
          (NP (PRP him))
          (PRT (RP down))
          (PP (IN with)
            (NP (DT an) (NN oath))))))
    (, ,)
    (S (`` ``)
      (S
        (NP (PRP You))
        (VP (MD 'll)
          (VP (VB wait)
            (NP (DT a) (JJ little) (, ,) (NN Rube)))))
      (, ,) ('' '')
      (NP (PRP he))
      (VP (VBD said) (, ,) (`` ``)
        (S
          (NP (DT the) (NNP Devil))
          (VP (VBZ has)
            (VP (VBN called)
              (PP (IN for)
                (NP (DT both))))))))
    (. .)))

compound(Hall-2, Tom-1)
nsubj(caught-3, Hall-2)
nsubj(sat-10, Hall-2)
root(ROOT-0, caught-3)
dobj(caught-3, hold-4)
case(topping-lift-7, by-5)
det(topping-lift-7, the-6)
nmod:by(caught-3, topping-lift-7)
cc(caught-3, and-9)
conj:and(caught-3, sat-10)
dobj(sat-10, him-11)
compound:prt(sat-10, down-12)
case(oath-15, with-13)
det(oath-15, an-14)
nmod:with(sat-10, oath-15)
nsubj(wait-20, You-18)
aux(wait-20, 'll-19)
ccomp(said-28, wait-20)
det(Rube-24, a-21)
amod(Rube-24, little-22)
dobj(wait-20, Rube-24)
nsubj(said-28, he-27)
parataxis(caught-3, said-28)
det(Devil-32, the-31)
nsubj(called-34, Devil-32)
aux(called-34, has-33)
ccomp(said-28, called-34)
case(both-36, for-35)
nmod:for(called-34, both-36)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNP Devil))
        (VP (VBZ is)
          (VP (VBG driving)
            (NP (PDT both) (DT this) (NN tide)))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NNS killing-grounds))
        (VP (VBP are)
          (ADJP (JJ close)))))
    (, ,)
    (CC And)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB go)
          (PRT (RP up))
          (PP (TO to)
            (NP
              (NP (DT the) (NN Wrath))
              (PP (IN of)
                (NP (NNP God)))))
          (SBAR (IN as)
            (S
              (NP (DT the) (NN holluschickie))
              (VP (VBZ goes)))))))
    (. .)))

det(Devil-2, The-1)
nsubj(driving-4, Devil-2)
aux(driving-4, is-3)
root(ROOT-0, driving-4)
det:predet(tide-7, both-5)
det(tide-7, this-6)
dobj(driving-4, tide-7)
cc(driving-4, and-9)
det(killing-grounds-11, the-10)
nsubj(close-13, killing-grounds-11)
cop(close-13, are-12)
conj:and(driving-4, close-13)
cc(driving-4, And-15)
nsubj(go-18, we-16)
aux(go-18, 'll-17)
conj:and(driving-4, go-18)
compound:prt(go-18, up-19)
case(Wrath-22, to-20)
det(Wrath-22, the-21)
nmod:to(go-18, Wrath-22)
case(God-24, of-23)
nmod:of(Wrath-22, God-24)
mark(goes-28, as-25)
det(holluschickie-27, the-26)
nsubj(goes-28, holluschickie-27)
advcl(go-18, goes-28)

(ROOT
  (S
    (S
      (NP (NNP O) (NNS men))
      (, ,)
      (S
        (VP
          (VP (VB put)
            (PRT (RP back))
            (NP (PRP$ your) (NNS guns))
            (ADVP (RB again)))
          (CC and)
          (VP (VB lay)
            (NP (PRP$ your) (NNS rifles))
            (PP (IN by)))))
      (, ,)
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN fought)
          (NP (PRP$ our) (NN fight)))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (JJS best))
      (VP (VBP are)
        (ADJP (RP down))))
    (. .)))

compound(men-2, O-1)
nsubj(fought-17, men-2)
ccomp(fought-17, put-4)
compound:prt(put-4, back-5)
nmod:poss(guns-7, your-6)
dobj(put-4, guns-7)
advmod(put-4, again-8)
cc(put-4, and-9)
conj:and(put-4, lay-10)
ccomp(fought-17, lay-10)
nmod:poss(rifles-12, your-11)
dobj(lay-10, rifles-12)
nmod(lay-10, by-13)
nsubj(fought-17, We-15)
aux(fought-17, 've-16)
root(ROOT-0, fought-17)
nmod:poss(fight-19, our-18)
dobj(fought-17, fight-19)
cc(fought-17, and-21)
det(best-23, the-22)
nsubj(down-25, best-23)
cop(down-25, are-24)
conj:and(fought-17, down-25)

(ROOT
  (S
    (VP
      (VP (VB Let)
        (PRT (RP up)))
      (CC and)
      (VP (VB let)
        (S
          (NP (PRP us))
          (VP (VB die)))))
    (. !)))

root(ROOT-0, Let-1)
compound:prt(Let-1, up-2)
cc(Let-1, and-3)
conj:and(Let-1, let-4)
nsubj(die-6, us-5)
ccomp(let-4, die-6)

(ROOT
  (S
    (NP
      (NP (JJ Quit) (NN firing))
      (, ,)
      (FRAG
        (PP (IN by)
          (NP (DT the) (NN bow)))
        (NP (RB there))
        (: --)))
    (VP (VBD quit))
    (. !)))

amod(firing-2, Quit-1)
nsubj(quit-9, firing-2)
case(bow-6, by-4)
det(bow-6, the-5)
nmod:by(there-7, bow-6)
dep(firing-2, there-7)
root(ROOT-0, quit-9)

(ROOT
  (S
    (VP (VB Call)
      (PRT (RP off))
      (NP
        (NP (DT the) (NNP _) (NNP Baltic) (NNP _) (POS 's))
        (NN crew)))
    (. !)))

root(ROOT-0, Call-1)
compound:prt(Call-1, off-2)
det(_-6, the-3)
compound(_-6, _-4)
compound(_-6, Baltic-5)
nmod:poss(crew-8, _-6)
case(_-6, 's-7)
dobj(Call-1, crew-8)

(ROOT
  (S
    (NP (PRP You))
    (VP
      (VP (VBP 're)
        (ADJP (JJ sure)
          (PP (IN of)
            (NP (NNP Hell))))
        (PP (IN as)
          (NP
            (NP (PRP me))
            (CC or)
            (NP (NNP Rube)))))
      (: --)
      (CC but)
      (VP (VBP wait)
        (SBAR (IN till)
          (S
            (NP (PRP we))
            (VP (VBP get)
              (PRT (RP through)))))))
    (. .) ('' '')))

nsubj(sure-3, You-1)
nsubj(wait-12, You-1)
cop(sure-3, 're-2)
root(ROOT-0, sure-3)
case(Hell-5, of-4)
nmod:of(sure-3, Hell-5)
case(me-7, as-6)
nmod:as(sure-3, me-7)
cc(me-7, or-8)
nmod:as(sure-3, Rube-9)
conj:or(me-7, Rube-9)
cc(sure-3, but-11)
conj:but(sure-3, wait-12)
mark(get-15, till-13)
nsubj(get-15, we-14)
advcl(wait-12, get-15)
compound:prt(get-15, through-16)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD went)
        (NP
          (NP (DT no) (NN word))
          (PP (IN between)
            (NP (DT the) (NNS ships))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP
          (NP
            (ADJP (JJ thick)
              (CC and)
              (JJ quick)
              (CC and)
              (JJ loud))
            (DT The) (JJ life-blood) (NN drummed))
          (PP (IN on)
            (NP (DT the) (JJ dripping) (NNS decks))))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT the) (NN fog-dew))
            (PP (IN from)
              (NP (DT the) (NN shroud)))))
        (, ,)
        (NP (DT The) (NN sea-pull))
        (VP (VBD drew)
          (S
            (NP (PRP them))
            (NP
              (NP (NN side))
              (PP (IN by)
                (NP (NN side)))))
          (, ,)
          (ADJP (JJ gunnel)
            (S
              (VP (TO to)
                (VP (VB gunnel)
                  (VP (VBN laid))))))))
      (, ,)
      (CC And)
      (S
        (S
          (NP (PRP they))
          (VP (VBD felt)
            (UCP
              (NP (DT the) (JJ sheerstrakes) (NN pound))
              (CC and)
              (ADJP (JJ clear)))))
        (, ,)
        (CC but)
        (S
          (ADVP (RB never))
          (NP (DT a) (NN word))
          (VP (VBD was)
            (VP (VBN said))))))
    (. .)))

expl(went-2, There-1)
root(ROOT-0, went-2)
neg(word-4, no-3)
dobj(went-2, word-4)
case(ships-7, between-5)
det(ships-7, the-6)
nmod:between(word-4, ships-7)
cc(went-2, but-9)
dep(quick-12, thick-10)
cc(quick-12, and-11)
amod(drummed-17, quick-12)
cc(quick-12, and-13)
conj:and(quick-12, loud-14)
amod(drummed-17, loud-14)
det(drummed-17, The-15)
amod(drummed-17, life-blood-16)
nsubj(drew-32, drummed-17)
case(decks-21, on-18)
det(decks-21, the-19)
amod(decks-21, dripping-20)
nmod:on(drummed-17, decks-21)
case(fog-dew-25, with-23)
det(fog-dew-25, the-24)
nmod:with(drew-32, fog-dew-25)
case(shroud-28, from-26)
det(shroud-28, the-27)
nmod:from(fog-dew-25, shroud-28)
det(sea-pull-31, The-30)
nsubj(drew-32, sea-pull-31)
conj:but(went-2, drew-32)
nsubj(side-34, them-33)
xcomp(drew-32, side-34)
case(side-36, by-35)
nmod:by(side-34, side-36)
xcomp(drew-32, gunnel-38)
mark(gunnel-40, to-39)
xcomp(gunnel-38, gunnel-40)
dep(gunnel-40, laid-41)
cc(drew-32, And-43)
nsubj(felt-45, they-44)
conj:but(went-2, felt-45)
conj:and(drew-32, felt-45)
det(pound-48, the-46)
amod(pound-48, sheerstrakes-47)
dobj(felt-45, pound-48)
cc(pound-48, and-49)
dobj(felt-45, clear-50)
conj:and(pound-48, clear-50)
cc(felt-45, but-52)
neg(said-57, never-53)
det(word-55, a-54)
nsubjpass(said-57, word-55)
auxpass(said-57, was-56)
conj:and(drew-32, said-57)
conj:but(felt-45, said-57)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (NNP Reuben) (NNP Paine))
      (VP (VBD cried)
        (PRT (RP out))
        (ADVP (RB again))
        (SBAR (IN before)
          (S
            (NP (PRP$ his) (NN spirit))
            (VP (VBD passed))))))
    (: :) (`` ``)
    (SQ (VBP Have)
      (NP (PRP I))
      (VP (VBN followed)
        (NP (DT the) (NN sea))
        (PP (IN for)
          (NP (CD thirty) (NNS years)))
        (S
          (VP (TO to)
            (VP (VB die)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN dark))
                  (PP (IN at)
                    (NP (JJ last)))))))))
      (. ?))))

advmod(cried-4, Then-1)
compound(Paine-3, Reuben-2)
nsubj(cried-4, Paine-3)
root(ROOT-0, cried-4)
compound:prt(cried-4, out-5)
advmod(cried-4, again-6)
mark(passed-10, before-7)
nmod:poss(spirit-9, his-8)
nsubj(passed-10, spirit-9)
advcl(cried-4, passed-10)
aux(followed-15, Have-13)
nsubj(followed-15, I-14)
parataxis(cried-4, followed-15)
det(sea-17, the-16)
dobj(followed-15, sea-17)
case(years-20, for-18)
nummod(years-20, thirty-19)
nmod:for(followed-15, years-20)
mark(die-22, to-21)
advcl(followed-15, die-22)
case(dark-25, in-23)
det(dark-25, the-24)
nmod:in(die-22, dark-25)
case(last-27, at-26)
nmod:at(dark-25, last-27)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Curse))
        (PP (IN on)
          (NP
            (NP (PRP$ her) (NN work))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ has)
                  (VP (VBN nipped)
                    (NP (PRP me))
                    (ADVP (RB here))
                    (PP (IN with)
                      (NP (DT a) (JJ shifty) (NN trick))))))))))
      (VP (VBD unkind)))
    (: --)
    (S
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN gotten)
            (NP (PRP$ my) (NN death))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP I))
                (VP (VBD got)
                  (NP (PRP$ my) (NN bread))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP I))
        (VP (MD dare) (RB not)
          (VP (VB face)
            (S
              (NP (PRP it))
              (ADJP (JJ blind)))))))
    (. .)))

nsubj(unkind-14, Curse-1)
case(work-4, on-2)
nmod:poss(work-4, her-3)
nmod:on(Curse-1, work-4)
nsubj(nipped-7, work-4)
ref(work-4, that-5)
aux(nipped-7, has-6)
acl:relcl(work-4, nipped-7)
dobj(nipped-7, me-8)
advmod(nipped-7, here-9)
case(trick-13, with-10)
det(trick-13, a-11)
amod(trick-13, shifty-12)
nmod:with(nipped-7, trick-13)
root(ROOT-0, unkind-14)
nsubj(gotten-18, I-16)
aux(gotten-18, have-17)
parataxis(unkind-14, gotten-18)
nmod:poss(death-20, my-19)
dobj(gotten-18, death-20)
advmod(got-23, where-21)
nsubj(got-23, I-22)
advcl(gotten-18, got-23)
nmod:poss(bread-25, my-24)
dobj(got-23, bread-25)
cc(gotten-18, but-27)
nsubj(face-31, I-28)
aux(face-31, dare-29)
neg(face-31, not-30)
parataxis(unkind-14, face-31)
conj:but(gotten-18, face-31)
nsubj(blind-33, it-32)
xcomp(face-31, blind-33)

(ROOT
  (S
    (VP (VB Curse)
      (PP (IN on)
        (NP (DT the) (NN fog))))
    (. !)))

root(ROOT-0, Curse-1)
case(fog-4, on-2)
det(fog-4, the-3)
nmod:on(Curse-1, fog-4)

(ROOT
  (SQ (VBZ Is)
    (NP (EX there))
    (SBAR
      (X
        (X
          (ADVP (RB never))
          (NP (DT a) (NN wind)))
        (PP (IN of)
          (NP (PDT all) (DT the) (NNS winds))))
      (S
        (NP (PRP I))
        (VP (VBD knew)
          (S
            (VP (TO To)
              (VP
                (VP (VB clear)
                  (NP (DT the) (NN smother))
                  (PP (IN from)
                    (PP (IN off)
                      (NP (PRP$ my) (NN chest)))))
                (, ,)
                (CC and)
                (VP (VB let)
                  (S
                    (NP (PRP me))
                    (VP (VB look)
                      (PP (IN at)
                        (NP (DT the) (NN blue))))))))))))
    (. ?) ('' '')))

root(ROOT-0, Is-1)
expl(Is-1, there-2)
dep(wind-5, never-3)
det(wind-5, a-4)
dep(winds-9, wind-5)
case(winds-9, of-6)
det:predet(winds-9, all-7)
det(winds-9, the-8)
dep(knew-11, winds-9)
nsubj(knew-11, I-10)
nsubj:xsubj(clear-13, I-10)
nsubj:xsubj(let-22, I-10)
dep(Is-1, knew-11)
mark(clear-13, To-12)
xcomp(knew-11, clear-13)
det(smother-15, the-14)
dobj(clear-13, smother-15)
case(chest-19, from-16)
case(chest-19, off-17)
nmod:poss(chest-19, my-18)
nmod:off(clear-13, chest-19)
cc(clear-13, and-21)
xcomp(knew-11, let-22)
conj:and(clear-13, let-22)
nsubj(look-24, me-23)
ccomp(let-22, look-24)
case(blue-27, at-25)
det(blue-27, the-26)
nmod:at(look-24, blue-27)

(ROOT
  (S
    (S
      (NP (DT The) (JJ good) (NN fog))
      (VP (VBD heard)))
    (: --)
    (S
      (S
        (PP
          (PP (IN like)
            (NP (DT a) (NN splitten) (NN sail)))
          (, ,)
          (PP (TO to)
            (NP (NN left)
              (CC and)
              (NN right))))
        (NP (PRP she))
        (VP (VBD tore)))
      (, ,)
      (CC And)
      (S
        (NP (PRP they))
        (VP (VBD saw)
          (NP (DT the) (NNS sun-dogs))
          (PP (IN in)
            (NP
              (NP (DT the) (NN haze))
              (CC and)
              (NP (DT the) (NN seal))))
          (PP (IN upon)
            (NP (DT the) (NN shore))))))
    (. .)))

det(fog-3, The-1)
amod(fog-3, good-2)
nsubj(heard-4, fog-3)
root(ROOT-0, heard-4)
case(sail-9, like-6)
det(sail-9, a-7)
compound(sail-9, splitten-8)
advcl(tore-16, sail-9)
case(left-12, to-11)
nmod:to(sail-9, left-12)
cc(left-12, and-13)
nmod:to(sail-9, right-14)
conj:and(left-12, right-14)
nsubj(tore-16, she-15)
parataxis(heard-4, tore-16)
cc(tore-16, And-18)
nsubj(saw-20, they-19)
parataxis(heard-4, saw-20)
conj:and(tore-16, saw-20)
det(sun-dogs-22, the-21)
dobj(saw-20, sun-dogs-22)
case(haze-25, in-23)
det(haze-25, the-24)
nmod:in(saw-20, haze-25)
cc(haze-25, and-26)
det(seal-28, the-27)
nmod:in(saw-20, seal-28)
conj:and(haze-25, seal-28)
case(shore-31, upon-29)
det(shore-31, the-30)
nmod:upon(saw-20, shore-31)

(ROOT
  (S
    (S
      (NP (NNP Silver)
        (CC and)
        (NNP gray))
      (VP (VBD ran)
        (NP (NN spit)
          (CC and)
          (NN bay))
        (S
          (VP (TO to)
            (VP (VB meet)
              (NP (DT the) (JJ steel-backed) (NN tide)))))))
    (, ,)
    (CC And)
    (S
      (S
        (VP
          (VP (VBN pinched))
          (CC and)
          (VP
            (ADJP (JJ white))
            (PP (IN in)
              (NP (DT the) (NN clearing) (NN light))))))
      (NP (DT the) (NNS crews))
      (VP (VBD stared)
        (ADJP (JJ overside))))
    (. .)))

nsubj(ran-4, Silver-1)
cc(Silver-1, and-2)
conj:and(Silver-1, gray-3)
nsubj(ran-4, gray-3)
root(ROOT-0, ran-4)
dobj(ran-4, spit-5)
cc(spit-5, and-6)
dobj(ran-4, bay-7)
conj:and(spit-5, bay-7)
mark(meet-9, to-8)
advcl(ran-4, meet-9)
det(tide-12, the-10)
amod(tide-12, steel-backed-11)
dobj(meet-9, tide-12)
cc(ran-4, And-14)
dep(stared-24, pinched-15)
cc(pinched-15, and-16)
conj:and(pinched-15, white-17)
dep(stared-24, white-17)
case(light-21, in-18)
det(light-21, the-19)
compound(light-21, clearing-20)
nmod:in(white-17, light-21)
det(crews-23, the-22)
nsubj(stared-24, crews-23)
conj:and(ran-4, stared-24)
xcomp(stared-24, overside-25)

(ROOT
  (S
    (S
      (ADVP (RB O))
      (ADVP (RB rainbow-gay))
      (NP (DT the) (JJ red) (NNS pools))
      (VP
        (VP (VBD lay)
          (SBAR (IN that)
            (S
              (VP
                (VP (VBD swilled))
                (CC and)
                (VP (VBD spilled))))))
        (CC and)
        (VP (VBD spread))))
    (, ,)
    (CC And)
    (S
      (S
        (NP
          (NP (NN gold))
          (, ,)
          (NP (JJ raw) (NN gold))
          (, ,))
        (X
          (NP (DT the) (VBN spent) (NN shell)))
        (VP (VBD rolled)
          (PP (IN between)
            (NP
              (NP (DT the) (JJ careless) (NN dead))
              (: --)
              (NP
                (NP (DT The) (NN dead))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD rocked)
                      (ADJP (RB so) (JJ drunkenwise)
                        (S
                          (VP
                            (VP (TO to)
                              (VP (VB weather)))
                            (CC and)
                            (VP (TO to)
                              (VP (VB lee))))))))))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP they))
        (VP (VBD saw)
          (NP
            (NP (DT the) (NN work))
            (SBAR
              (S
                (NP (PRP$ their) (NNS hands))
                (VP (VBD had)
                  (VP (VBN done)
                    (SBAR (IN as)
                      (S
                        (NP (NNP God))
                        (VP (VBD had)
                          (VP (VBN bade)
                            (S
                              (NP (PRP them))
                              (VP (VB see)))))))))))))))
    (. .)))

advmod(lay-6, O-1)
advmod(lay-6, rainbow-gay-2)
det(pools-5, the-3)
amod(pools-5, red-4)
nsubj(lay-6, pools-5)
nsubj(spread-12, pools-5)
root(ROOT-0, lay-6)
mark(swilled-8, that-7)
ccomp(lay-6, swilled-8)
cc(swilled-8, and-9)
ccomp(lay-6, spilled-10)
conj:and(swilled-8, spilled-10)
cc(lay-6, and-11)
conj:and(lay-6, spread-12)
cc(lay-6, And-14)
nsubj(rolled-23, gold-15)
amod(gold-18, raw-17)
appos(gold-15, gold-18)
det(shell-22, the-20)
amod(shell-22, spent-21)
dep(rolled-23, shell-22)
conj:and(lay-6, rolled-23)
case(dead-27, between-24)
det(dead-27, the-25)
amod(dead-27, careless-26)
nmod:between(rolled-23, dead-27)
det(dead-30, The-29)
dep(dead-27, dead-30)
nsubj(rocked-32, dead-30)
ref(dead-30, that-31)
acl:relcl(dead-30, rocked-32)
advmod(drunkenwise-34, so-33)
xcomp(rocked-32, drunkenwise-34)
mark(weather-36, to-35)
dep(drunkenwise-34, weather-36)
cc(weather-36, and-37)
mark(lee-39, to-38)
dep(drunkenwise-34, lee-39)
conj:and(weather-36, lee-39)
cc(rolled-23, And-41)
nsubj(saw-43, they-42)
conj:and(lay-6, saw-43)
conj:and(rolled-23, saw-43)
det(work-45, the-44)
dobj(saw-43, work-45)
nmod:poss(hands-47, their-46)
nsubj(done-49, hands-47)
aux(done-49, had-48)
acl:relcl(work-45, done-49)
mark(bade-53, as-50)
nsubj(bade-53, God-51)
aux(bade-53, had-52)
advcl(done-49, bade-53)
nsubj(see-55, them-54)
ccomp(bade-53, see-55)

(ROOT
  (S (CC And)
    (S
      (NP (DT a) (JJ little) (NN breeze))
      (VP (VBD blew)
        (PP (IN over)
          (NP
            (NP (DT the) (NN rail))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD made)
                  (NP (DT the) (JJ headsails) (NN lift)))))))))
    (, ,)
    (CC But)
    (S
      (S
        (NP (DT no) (NN man))
        (VP (VBD stood)
          (PP (IN by)
            (NP (NN wheel)
              (CC or)
              (NN sheet)))))
      (, ,)
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBP let)
          (NP (DT the) (JJ schooners) (NN drift)))))
    (. .)))

cc(blew-5, And-1)
det(breeze-4, a-2)
amod(breeze-4, little-3)
nsubj(blew-5, breeze-4)
root(ROOT-0, blew-5)
case(rail-8, over-6)
det(rail-8, the-7)
nmod:over(blew-5, rail-8)
nsubj(made-10, rail-8)
ref(rail-8, that-9)
acl:relcl(rail-8, made-10)
det(lift-13, the-11)
amod(lift-13, headsails-12)
dobj(made-10, lift-13)
cc(blew-5, But-15)
neg(man-17, no-16)
nsubj(stood-18, man-17)
conj:but(blew-5, stood-18)
case(wheel-20, by-19)
nmod:by(stood-18, wheel-20)
cc(wheel-20, or-21)
nmod:by(stood-18, sheet-22)
conj:or(wheel-20, sheet-22)
cc(stood-18, and-24)
nsubj(let-26, they-25)
conj:but(blew-5, let-26)
conj:and(stood-18, let-26)
det(drift-29, the-27)
amod(drift-29, schooners-28)
dobj(let-26, drift-29)

(ROOT
  (S
    (S (CC And)
      (S
        (NP (DT the) (NN rattle))
        (VP (VBD rose)
          (PP (IN in)
            (NP
              (NP (NNP Reuben) (POS 's))
              (NN throat)))))
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD cast)
          (NP (PRP$ his) (NN soul))
          (PP (IN with)
            (NP (DT a) (NN cry))))))
    (, ,)
    (CC And)
    (S
      (VP (`` ``) (VB Gone)
        (ADVP (RB already))))
    (. ?) ('' '')))

cc(rose-4, And-1)
det(rattle-3, the-2)
nsubj(rose-4, rattle-3)
nsubj(Gone-20, rattle-3)
root(ROOT-0, rose-4)
case(throat-8, in-5)
nmod:poss(throat-8, Reuben-6)
case(Reuben-6, 's-7)
nmod:in(rose-4, throat-8)
cc(rose-4, and-9)
nsubj(cast-11, he-10)
conj:and(rose-4, cast-11)
nmod:poss(soul-13, his-12)
dobj(cast-11, soul-13)
case(cry-16, with-14)
det(cry-16, a-15)
nmod:with(cast-11, cry-16)
cc(rose-4, And-18)
conj:and(rose-4, Gone-20)
advmod(Gone-20, already-21)

(ROOT
  (S
    (NP (NNP Tom) (NNP Hall) (PRP he))
    (VP (VBD said))
    (. .)))

compound(Hall-2, Tom-1)
nsubj(said-4, Hall-2)
dep(Hall-2, he-3)
root(ROOT-0, said-4)

(ROOT
  (S (`` ``)
    (ADVP (RB Then))
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (NN time))
        (PP (IN for)
          (NP (PRP me)))
        (S
          (VP (TO to)
            (VP (VB die))))))
    (. .) ('' '')))

advmod(time-5, Then-2)
nsubj(time-5, it-3)
cop(time-5, 's-4)
root(ROOT-0, time-5)
case(me-7, for-6)
nmod:for(time-5, me-7)
mark(die-9, to-8)
acl(time-5, die-9)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NNS eyes))
      (VP (VBD were)
        (ADJP (JJ heavy)
          (PP (IN with)
            (NP (JJ great) (NN sleep)
              (CC and)
              (NN yearning))))
        (PP (IN for)
          (NP (DT the) (NN land)))))
    (, ,)
    (CC And)
    (S
      (NP (PRP he))
      (VP (VBD spoke)
        (PP (IN as)
          (NP
            (NP (DT a) (NN man))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ talks)
                  (PP (IN in)
                    (NP
                      (NP (NNS dreams))
                      (, ,)
                      (NP (PRP$ his) (NN wound))))
                  (PP (IN beneath)
                    (NP (PRP$ his) (NN hand))))))))))
    (. .)))

nmod:poss(eyes-2, His-1)
nsubj(heavy-4, eyes-2)
cop(heavy-4, were-3)
root(ROOT-0, heavy-4)
case(sleep-7, with-5)
amod(sleep-7, great-6)
nmod:with(heavy-4, sleep-7)
cc(sleep-7, and-8)
nmod:with(heavy-4, yearning-9)
conj:and(sleep-7, yearning-9)
case(land-12, for-10)
det(land-12, the-11)
nmod:for(heavy-4, land-12)
cc(heavy-4, And-14)
nsubj(spoke-16, he-15)
conj:and(heavy-4, spoke-16)
case(man-19, as-17)
det(man-19, a-18)
nmod:as(spoke-16, man-19)
nsubj(talks-21, man-19)
ref(man-19, that-20)
acl:relcl(man-19, talks-21)
case(dreams-23, in-22)
nmod:in(talks-21, dreams-23)
nmod:poss(wound-26, his-25)
appos(dreams-23, wound-26)
case(hand-29, beneath-27)
nmod:poss(hand-29, his-28)
nmod:beneath(talks-21, hand-29)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (S
        (S
          (NP (EX there))
          (VP (VBZ comes)
            (NP
              (NP (DT no) (JJ good) (NN o))
              ('' ')
              (SBAR
                (S
                  (NP (DT the) (NN westering))
                  (VP (VBP wind)
                    (SBAR (IN that)
                      (S
                        (VP (VBZ backs)
                          (PP (IN against)
                            (NP (DT the) (NN sun))))))))))))
        (: ;)
        (S
          (NP (NNP Wash))
          (PP (IN down)
            (NP (DT the) (NNS decks))))
        (: --)
        (S
          (NP (PRP they))
          (VP (VBP 're)
            (NP (DT all)
              (ADJP
                (ADJP (RB too) (JJ red))
                (PRN (: --)
                  (CC and)
                  (VP (VB share)
                    (NP
                      (NP (DT the) (NNS skins)
                        (CC and)
                        (NN run))
                      (, ,)
                      (NP (NNP _) (NNP Baltic) (NNP _))
                      (, ,)
                      (NP (NNP _) (NNP Stralsund) (NNP _))
                      (, ,)
                      (CC and)
                      (NP (NNP _) (NNP Northern) (NNP Light) (NNP _))))
                  (: --)))
              (JJ clean) (NN share)))))
      (CC and)
      (S
        (NP
          (NP (NN share))
          (PP (IN for)
            (NP (DT all))))
        (, ,)
        (NP (PRP You))
        (VP (MD 'll)
          (VP (VB find)
            (NP (DT the) (NNS fleets))
            (PP (IN off)
              (NP (NNP Tolstoi) (NNPS Mees)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD will) (RB not)
        (VP (VB find)
          (NP (NNP Tom) (NNP Hall)))))
    (. .)))

discourse(comes-5, Oh-2)
expl(comes-5, there-4)
root(ROOT-0, comes-5)
neg(o-8, no-6)
amod(o-8, good-7)
dobj(comes-5, o-8)
mark(backs-14, o-8)
det(westering-11, the-10)
nsubj(wind-12, westering-11)
acl:relcl(o-8, wind-12)
ref(o-8, that-13)
ccomp(wind-12, backs-14)
case(sun-17, against-15)
det(sun-17, the-16)
nmod:against(backs-14, sun-17)
parataxis(comes-5, Wash-19)
case(decks-22, down-20)
det(decks-22, the-21)
dep(Wash-19, decks-22)
nsubj(share-52, they-24)
cop(share-52, 're-25)
det(share-52, all-26)
advmod(red-28, too-27)
amod(share-52, red-28)
cc(share-31, and-30)
dep(red-28, share-31)
det(skins-33, the-32)
dobj(share-31, skins-33)
cc(skins-33, and-34)
dobj(share-31, run-35)
conj:and(skins-33, run-35)
compound(_-39, _-37)
compound(_-39, Baltic-38)
dobj(share-31, _-39)
conj:and(skins-33, _-39)
compound(_-43, _-41)
compound(_-43, Stralsund-42)
dobj(share-31, _-43)
conj:and(skins-33, _-43)
cc(skins-33, and-45)
compound(_-49, _-46)
compound(_-49, Northern-47)
compound(_-49, Light-48)
dobj(share-31, _-49)
conj:and(skins-33, _-49)
amod(share-52, clean-51)
parataxis(comes-5, share-52)
cc(comes-5, and-53)
nsubj(find-60, share-54)
case(all-56, for-55)
nmod:for(share-54, all-56)
nsubj(find-60, You-58)
aux(find-60, 'll-59)
conj:and(comes-5, find-60)
det(fleets-62, the-61)
dobj(find-60, fleets-62)
case(Mees-65, off-63)
compound(Mees-65, Tolstoi-64)
nmod:off(find-60, Mees-65)
cc(comes-5, but-67)
nsubj(find-71, you-68)
aux(find-71, will-69)
neg(find-71, not-70)
conj:and(comes-5, find-71)
compound(Hall-73, Tom-72)
dobj(find-71, Hall-73)

(ROOT
  (S
    (S
      (ADVP (RB Evil))
      (NP (PRP he))
      (VP (VBD did)
        (PP (IN in)
          (NP (NN shoal-water)
            (CC and)
            (NN blacker) (NN sin)))
        (PP (IN on)
          (NP (DT the) (JJ deep)))))
    (, ,)
    (CC But)
    (S
      (S
        (ADVP (RB now))
        (NP (PRP he))
        (VP (VBZ 's)
          (ADJP (JJ sick)
            (PP (IN of)
              (NP (NN watch)
                (CC and)
                (NN trick))))))
      (CC and)
      (S
        (ADVP (RB now))
        (NP (PRP he))
        (VP (MD 'll)
          (VP (VB turn)
            (CC and)
            (VB sleep)))))
    (. .)))

advmod(did-3, Evil-1)
nsubj(did-3, he-2)
root(ROOT-0, did-3)
case(sin-8, in-4)
compound(sin-8, shoal-water-5)
cc(shoal-water-5, and-6)
conj:and(shoal-water-5, blacker-7)
compound(sin-8, blacker-7)
nmod:in(did-3, sin-8)
case(deep-11, on-9)
det(deep-11, the-10)
nmod:on(did-3, deep-11)
cc(did-3, But-13)
advmod(sick-17, now-14)
nsubj(sick-17, he-15)
cop(sick-17, 's-16)
conj:but(did-3, sick-17)
case(watch-19, of-18)
nmod:of(sick-17, watch-19)
cc(watch-19, and-20)
nmod:of(sick-17, trick-21)
conj:and(watch-19, trick-21)
cc(sick-17, and-22)
advmod(turn-26, now-23)
nsubj(turn-26, he-24)
nsubj(sleep-28, he-24)
aux(turn-26, 'll-25)
conj:but(did-3, turn-26)
conj:and(sick-17, turn-26)
cc(turn-26, and-27)
conj:and(sick-17, sleep-28)
conj:and(turn-26, sleep-28)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD 'll)
        (VP (VB have)
          (NP
            (NP (RB no) (JJR more))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ crawling) (NN sea))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD made)
                      (SBAR
                        (S
                          (NP (PRP him))
                          (VP (VBP suffer)
                            (ADVP (RB so))))))))))))))
    (, ,)
    (CC But)
    (S
      (NP (PRP he))
      (VP (MD 'll)
        (VP (VB lie)
          (PRT (RP down))
          (PP (IN on)
            (NP (DT the) (NNS killing-grounds)))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (NN holluschickie))
              (VP (VBP go)))))))
    (. .)))

nsubj(have-3, He-1)
aux(have-3, 'll-2)
root(ROOT-0, have-3)
neg(more-5, no-4)
dobj(have-3, more-5)
case(sea-9, of-6)
det(sea-9, the-7)
amod(sea-9, crawling-8)
nmod:of(more-5, sea-9)
nsubj(made-11, sea-9)
ref(sea-9, that-10)
acl:relcl(sea-9, made-11)
nsubj(suffer-13, him-12)
ccomp(made-11, suffer-13)
advmod(suffer-13, so-14)
cc(have-3, But-16)
nsubj(lie-19, he-17)
aux(lie-19, 'll-18)
conj:but(have-3, lie-19)
compound:prt(lie-19, down-20)
case(killing-grounds-23, on-21)
det(killing-grounds-23, the-22)
nmod:on(lie-19, killing-grounds-23)
advmod(go-27, where-24)
det(holluschickie-26, the-25)
nsubj(go-27, holluschickie-26)
advcl(lie-19, go-27)

(ROOT
  (S
    (S (CC And)
      (ADVP (NN west))
      (NP (PRP you))
      (VP (MD 'll)
        (VP
          (ADJP
            (ADJP (JJ sail))
            (CC and)
            (ADVP (RB south) (RB again))
            (, ,))
          (PP (IN beyond)
            (NP
              (NP (DT the) (NN sea-fog) (POS 's))
              (NN rim))))))
    (, ,)
    (CC And)
    (S
      (VP (VB tell)
        (S
          (NP (DT the) (NNP Yoshiwara) (NNS girls))
          (VP (TO to)
            (VP (VB burn)
              (NP
                (NP (DT a) (NN stick))
                (PP (IN for)
                  (NP (PRP him)))))))))
    (. .)))

cc(sail-5, And-1)
advmod(sail-5, west-2)
nsubj(sail-5, you-3)
nsubj(tell-17, you-3)
aux(sail-5, 'll-4)
root(ROOT-0, sail-5)
cc(sail-5, and-6)
advmod(again-8, south-7)
advmod(sail-5, again-8)
case(rim-14, beyond-10)
det(sea-fog-12, the-11)
nmod:poss(rim-14, sea-fog-12)
case(sea-fog-12, 's-13)
nmod:beyond(sail-5, rim-14)
cc(sail-5, And-16)
conj:and(sail-5, tell-17)
det(girls-20, the-18)
compound(girls-20, Yoshiwara-19)
dobj(tell-17, girls-20)
nsubj:xsubj(burn-22, girls-20)
mark(burn-22, to-21)
xcomp(tell-17, burn-22)
det(stick-24, a-23)
dobj(burn-22, stick-24)
case(him-26, for-25)
nmod:for(stick-24, him-26)

(ROOT
  (S
    (S
      (S (CC And)
        (NP (PRP you))
        (VP (MD 'll) (RB not)
          (VP
            (VP (VB weight)
              (NP (PRP him))
              (PP (IN by)
                (NP (DT the) (NNS heels))))
            (CC and)
            (VP (VB dump)
              (S
                (NP (PRP him))
                (ADJP (JJ overside)))))))
      (, ,)
      (CC But)
      (S
        (S
          (S
            (VP (VB carry)
              (NP (PRP him))
              (ADVP (RB up)
                (PP (TO to)
                  (NP (DT the) (NN sand-hollows)
                    (S
                      (VP (TO to)
                        (VP (VB die)
                          (PP (IN as)
                            (NP (NNP Bering)))))))))))
          (VP (VBD died)))
        (, ,)
        (CC And)
        (S
          (S
            (VP (VB make)
              (NP
                (NP (DT a) (NN place))
                (PP (IN for)
                  (NP
                    (NP (NNP Reuben) (NNP Paine))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ knows)
                          (NP (DT the) (NN fight))))))))))
          (VP (VBD was)
            (ADJP (JJ fair))))))
    (, ,)
    (CC And)
    (S
      (VP (VB leave)
        (NP
          (NP (DT the) (CD two))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD did)
                (NP (DT the) (JJ wrong))
                (S
                  (VP (TO to)
                    (VP (VB talk)
                      (NP (PRP it))
                      (PP (IN over)
                        (NP (RB there))))))))))))
    (. !) ('' '')))

cc(weight-5, And-1)
nsubj(weight-5, you-2)
nsubj(dump-11, you-2)
nsubj(leave-43, you-2)
aux(weight-5, 'll-3)
neg(weight-5, not-4)
root(ROOT-0, weight-5)
dobj(weight-5, him-6)
case(heels-9, by-7)
det(heels-9, the-8)
nmod:by(weight-5, heels-9)
cc(weight-5, and-10)
conj:and(weight-5, dump-11)
nsubj(overside-13, him-12)
xcomp(dump-11, overside-13)
cc(weight-5, But-15)
csubj(died-26, carry-16)
dobj(carry-16, him-17)
advmod(carry-16, up-18)
case(sand-hollows-21, to-19)
det(sand-hollows-21, the-20)
nmod:to(up-18, sand-hollows-21)
mark(die-23, to-22)
acl(sand-hollows-21, die-23)
case(Bering-25, as-24)
nmod:as(die-23, Bering-25)
conj:but(weight-5, died-26)
cc(died-26, And-28)
csubj(fair-40, make-29)
det(place-31, a-30)
dobj(make-29, place-31)
case(Paine-34, for-32)
compound(Paine-34, Reuben-33)
nmod:for(place-31, Paine-34)
nsubj(knows-36, Paine-34)
ref(Paine-34, that-35)
acl:relcl(Paine-34, knows-36)
det(fight-38, the-37)
dobj(knows-36, fight-38)
cop(fair-40, was-39)
conj:but(weight-5, fair-40)
conj:and(died-26, fair-40)
cc(weight-5, And-42)
conj:but(weight-5, leave-43)
det(two-45, the-44)
dobj(leave-43, two-45)
nsubj(did-47, two-45)
ref(two-45, that-46)
acl:relcl(two-45, did-47)
det(wrong-49, the-48)
dobj(did-47, wrong-49)
mark(talk-51, to-50)
advcl(did-47, talk-51)
dobj(talk-51, it-52)
case(there-54, over-53)
nmod:over(talk-51, there-54)

(ROOT
  (S
    (S
      (NP (NNP Half-steam))
      (ADVP (RB ahead) (IN by))
      (VP (VB guess)
        (CC and)
        (VB lead) (, ,)
        (SBAR (IN for)
          (S
            (NP (DT the) (NN sun))
            (VP (VBZ is)
              (ADJP (RB mostly) (VBN veiled)))))))
    (: --)
    (S
      (PP (IN Through)
        (NP (NN fog)
          (S
            (VP (TO to)
              (VP (VB fog) (, ,)
                (PP (IN by)
                  (NP (NN luck)
                    (CC and)
                    (NN log))))))))
      (, ,)
      (NP
        (NP (JJ sail) (NNS ye))
        (PP (IN as)
          (NP (NNP Bering))))
      (VP (VBD sailed)))
    (: ;)
    (CC And)
    (S
      (SBAR (IN if)
        (S
          (NP (DT the) (NN light))
          (VP (MD shall)
            (VP (VB lift)
              (S
                (NP (NN aright))
                (VP (TO to)
                  (VP (VB give)
                    (NP (PRP$ your) (NN landfall))
                    (UCP
                      (ADJP (JJ plain) (, ,) (JJ North))
                      (CC and)
                      (PP (IN by)
                        (NP (NN west)))))))
              (, ,)
              (PP (IN from)
                (NP (NNP Zapne) (NNP Crest)))))))
      (, ,)
      (NP (PRP ye))
      (VP (VBP raise)
        (NP (DT the) (NNP Crosses) (NNP Twain))))
    (. .)))

nsubj(guess-4, Half-steam-1)
nsubj(lead-6, Half-steam-1)
advmod(guess-4, ahead-2)
case(ahead-2, by-3)
root(ROOT-0, guess-4)
cc(guess-4, and-5)
conj:and(guess-4, lead-6)
mark(veiled-13, for-8)
det(sun-10, the-9)
nsubjpass(veiled-13, sun-10)
auxpass(veiled-13, is-11)
advmod(veiled-13, mostly-12)
advcl(guess-4, veiled-13)
case(fog-16, Through-15)
nmod:through(sailed-29, fog-16)
mark(fog-18, to-17)
acl(fog-16, fog-18)
case(luck-21, by-20)
nmod:by(fog-18, luck-21)
cc(luck-21, and-22)
nmod:by(fog-18, log-23)
conj:and(luck-21, log-23)
amod(ye-26, sail-25)
nsubj(sailed-29, ye-26)
case(Bering-28, as-27)
nmod:as(ye-26, Bering-28)
conj:and(guess-4, sailed-29)
cc(guess-4, And-31)
mark(lift-36, if-32)
det(light-34, the-33)
nsubj(lift-36, light-34)
aux(lift-36, shall-35)
advcl(raise-54, lift-36)
dobj(lift-36, aright-37)
nsubj:xsubj(give-39, aright-37)
mark(give-39, to-38)
xcomp(lift-36, give-39)
nmod:poss(landfall-41, your-40)
dobj(give-39, landfall-41)
amod(North-44, plain-42)
xcomp(give-39, North-44)
cc(North-44, and-45)
case(west-47, by-46)
xcomp(give-39, west-47)
conj:and(North-44, west-47)
case(Crest-51, from-49)
compound(Crest-51, Zapne-50)
nmod:from(lift-36, Crest-51)
nsubj(raise-54, ye-53)
conj:and(guess-4, raise-54)
det(Twain-57, the-55)
compound(Twain-57, Crosses-56)
dobj(raise-54, Twain-57)

(ROOT
  (S
    (S
      (NP (NNP Fair) (NNS marks))
      (VP (VBP are)
        (NP (PRP they))
        (PP (TO to)
          (NP (DT the) (JJ inner) (NN bay)))))
    (, ,)
    (NP (DT the) (JJ reckless) (NN poacher))
    (VP (VBZ knows)
      (SBAR
        (WHNP (WDT What) (NN time))
        (S
          (NP (DT the) (VBN scarred) (NN see-catchie))
          (VP (VBP lead)
            (NP (PRP$ their) (JJ sleek) (NNS seraglios))))))
    (. .)))

compound(marks-2, Fair-1)
nsubj(they-4, marks-2)
cop(they-4, are-3)
ccomp(knows-13, they-4)
case(bay-8, to-5)
det(bay-8, the-6)
amod(bay-8, inner-7)
nmod:to(they-4, bay-8)
det(poacher-12, the-10)
amod(poacher-12, reckless-11)
nsubj(knows-13, poacher-12)
root(ROOT-0, knows-13)
det(time-15, What-14)
dobj(lead-19, time-15)
det(see-catchie-18, the-16)
amod(see-catchie-18, scarred-17)
nsubj(lead-19, see-catchie-18)
ccomp(knows-13, lead-19)
nmod:poss(seraglios-22, their-20)
amod(seraglios-22, sleek-21)
dobj(lead-19, seraglios-22)

(ROOT
  (S
    (S
      (ADVP (RB Ever))
      (NP (PRP they))
      (VP (VBP hear)
        (NP
          (NP (DT the)
            (ADJP (JJ floe-pack) (JJ clear)))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (NN blast))
            (PP (IN of)
              (NP (DT the) (JJ old) (NN bull-whale)))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT the) (JJ deep) (NN seal-roar))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ beats)))))
      (VP (VBP off-shore)
        (PP (IN above)
          (NP (DT the) (JJS loudest) (NN gale)))))
    (. .)))

advmod(hear-3, Ever-1)
nsubj(hear-3, they-2)
root(ROOT-0, hear-3)
det(clear-6, the-4)
amod(clear-6, floe-pack-5)
dobj(hear-3, clear-6)
cc(clear-6, and-8)
det(blast-10, the-9)
dobj(hear-3, blast-10)
conj:and(clear-6, blast-10)
case(bull-whale-14, of-11)
det(bull-whale-14, the-12)
amod(bull-whale-14, old-13)
nmod:of(blast-10, bull-whale-14)
cc(hear-3, And-16)
det(seal-roar-19, the-17)
amod(seal-roar-19, deep-18)
nsubj(beats-21, seal-roar-19)
nsubj(off-shore-22, seal-roar-19)
ref(seal-roar-19, that-20)
acl:relcl(seal-roar-19, beats-21)
conj:and(hear-3, off-shore-22)
case(gale-26, above-23)
det(gale-26, the-24)
amod(gale-26, loudest-25)
nmod:above(off-shore-22, gale-26)

(ROOT
  (S
    (ADVP (RB Ever))
    (NP (PRP they))
    (VP (VBP wait)
      (NP
        (NP (DT the) (NN winter) (POS 's))
        (NN hate))
      (PP (IN as)
        (NP
          (NP (DT the) (VBG thundering) (JJ _) (NN boorga))
          (NP
            (NP (JJ _) (NNS calls))
            (, ,)
            (SBAR
              (WHADVP (WRB Where))
              (S
                (ADVP (RB northward))
                (VP (VBP look)
                  (NP (PRP they))
                  (PP
                    (PP (TO to)
                      (NP (NNP St.) (NNP George)))
                    (, ,)
                    (CC and)
                    (ADVP (RB westward))
                    (PP (TO to)
                      (NP (NNP St.) (NNP Paul) (POS 's)))))))))))
    (. .)))

advmod(wait-3, Ever-1)
nsubj(wait-3, they-2)
root(ROOT-0, wait-3)
det(winter-5, the-4)
nmod:poss(hate-7, winter-5)
case(winter-5, 's-6)
dobj(wait-3, hate-7)
case(boorga-12, as-8)
det(boorga-12, the-9)
amod(boorga-12, thundering-10)
amod(boorga-12, _-11)
nmod:as(wait-3, boorga-12)
amod(calls-14, _-13)
dep(boorga-12, calls-14)
advmod(look-18, Where-16)
advmod(look-18, northward-17)
acl:relcl(calls-14, look-18)
acl:relcl(calls-14, look-18')
acl:relcl(calls-14, look-18'')
conj:and(look-18, look-18')
conj:and(look-18, look-18'')
dobj(look-18, they-19)
case(George-22, to-20)
compound(George-22, St.-21)
nmod:to(look-18, George-22)
cc(look-18, and-24)
advmod(Paul-28, westward-25)
case(Paul-28, to-26)
compound(Paul-28, St.-27)
nmod:'s(look-18', Paul-28)
case(Paul-28, 's-29)

(ROOT
  (S
    (ADVP (RB Ever))
    (NP (PRP they))
    (VP (VBP greet)
      (NP
        (NP (DT the) (JJ hunted) (NN fleet))
        (PRN (: --)
          (NP
            (NP (JJ lone) (NNS keels))
            (PP (IN off)
              (NP (JJ headlands) (NN drear))))
          (: --))
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (DT the) (NNS sealing-schooners))
            (VP (VBD flit)
              (NP (DT that) (NN way))
              (PP (IN at)
                (NP (NN hazard) (NN year)))
              (PP (IN by)
                (NP (NN year))))))))
    (. .)))

advmod(greet-3, Ever-1)
nsubj(greet-3, they-2)
root(ROOT-0, greet-3)
det(fleet-6, the-4)
amod(fleet-6, hunted-5)
dobj(greet-3, fleet-6)
det(way-19, fleet-6)
amod(keels-9, lone-8)
dep(fleet-6, keels-9)
case(drear-12, off-10)
amod(drear-12, headlands-11)
nmod:off(keels-9, drear-12)
advmod(flit-17, When-14)
det(sealing-schooners-16, the-15)
nsubj(flit-17, sealing-schooners-16)
acl:relcl(fleet-6, flit-17)
ref(fleet-6, that-18)
dobj(flit-17, way-19)
case(year-22, at-20)
compound(year-22, hazard-21)
nmod:at(flit-17, year-22)
case(year-24, by-23)
nmod:by(flit-17, year-24)

(ROOT
  (S
    (S
      (PP (RB Ever) (IN in)
        (NP (NNP Yokohama)))
      (NP (NN port) (NNS men))
      (VP (VBP tell)
        (S
          (NP (DT the) (NN tale))
          (ADVP (RB anew))
          (PP (IN Of)
            (NP
              (NP (DT a) (VBN hidden) (NN sea))
              (CC and)
              (NP (DT a) (VBN hidden) (NN fight)))))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (DT the) (NNP _) (NNP Baltic) (NNP _))
            (VP (VBD ran)
              (PP (IN from)
                (NP (DT the) (NNP _) (NNP Northern) (NNP Light) (NNP _))))))))
    (CC And)
    (S
      (NP (DT the) (NNP _) (NNP Stralsund) (NNP _))
      (VP (VBD fought)
        (NP (DT the) (CD two))))
    (. .)))

advmod(Yokohama-3, Ever-1)
case(Yokohama-3, in-2)
nmod:in(tell-6, Yokohama-3)
compound(men-5, port-4)
nsubj(tell-6, men-5)
root(ROOT-0, tell-6)
det(tale-8, the-7)
xcomp(tell-6, tale-8)
advmod(tale-8, anew-9)
case(sea-13, Of-10)
det(sea-13, a-11)
amod(sea-13, hidden-12)
dep(tale-8, sea-13)
cc(sea-13, and-14)
det(fight-17, a-15)
amod(fight-17, hidden-16)
dep(tale-8, fight-17)
conj:and(sea-13, fight-17)
advmod(ran-24, When-19)
det(_-23, the-20)
compound(_-23, _-21)
compound(_-23, Baltic-22)
nsubj(ran-24, _-23)
advcl(tell-6, ran-24)
case(_-30, from-25)
det(_-30, the-26)
compound(_-30, _-27)
compound(_-30, Northern-28)
compound(_-30, Light-29)
nmod:from(ran-24, _-30)
cc(tell-6, And-31)
det(_-35, the-32)
compound(_-35, _-33)
compound(_-35, Stralsund-34)
nsubj(fought-36, _-35)
conj:and(tell-6, fought-36)
det(two-38, the-37)
dobj(fought-36, two-38)

(ROOT
  (S
    (S
      (NP (DT THE) (NN DERELICT))
      (VP (VBZ _)))
    (CC And)
    (S
      (VP (VBZ reports)
        (NP (DT the) (JJ derelict) (NNP _) (NNP Mary) (NNP Pollock) (NNP _))
        (ADVP (RB still))
        (PP (IN at)
          (NP (NN sea)))))
    (. .)))

det(DERELICT-2, THE-1)
nsubj(_-3, DERELICT-2)
nsubj(reports-5, DERELICT-2)
root(ROOT-0, _-3)
cc(_-3, And-4)
conj:and(_-3, reports-5)
det(_-11, the-6)
amod(_-11, derelict-7)
compound(_-11, _-8)
compound(_-11, Mary-9)
compound(_-11, Pollock-10)
dobj(reports-5, _-11)
advmod(reports-5, still-12)
case(sea-14, at-13)
nmod:at(reports-5, sea-14)

(ROOT
  (NP (NNP _) (NNP SHIPPING) (NNP NEWS) (. .)))

compound(NEWS-3, _-1)
compound(NEWS-3, SHIPPING-2)
root(ROOT-0, NEWS-3)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJS staunchest))
          (PP (IN of)
            (NP (PRP$ our) (NN fleet))))
        (PP (IN Till)
          (NP (DT the) (NN sea)))))
    (VP (VBD rose)
      (PP (IN beneath)
        (NP (PRP$ our) (NNS feet))))
    (NP
      (NP (NNP Unheralded))
      (, ,)
      (PP (IN in)
        (NP
          (NP (NN hatred))
          (PP (IN past)
            (NP (DT all) (NN measure))))))
    (. .)))

nsubj(staunchest-4, I-1)
cop(staunchest-4, was-2)
det(staunchest-4, the-3)
dep(rose-11, staunchest-4)
case(fleet-7, of-5)
nmod:poss(fleet-7, our-6)
nmod:of(staunchest-4, fleet-7)
case(sea-10, Till-8)
det(sea-10, the-9)
nmod:till(staunchest-4, sea-10)
root(ROOT-0, rose-11)
case(feet-14, beneath-12)
nmod:poss(feet-14, our-13)
nmod:beneath(rose-11, feet-14)
nsubj(rose-11, Unheralded-15)
case(hatred-18, in-17)
nmod:in(Unheralded-15, hatred-18)
case(measure-21, past-19)
det(measure-21, all-20)
nmod:past(hatred-18, measure-21)

(ROOT
  (S
    (PP (IN Into)
      (NP (PRP$ his) (NNS pits)))
    (NP (PRP he))
    (VP (VBD stamped)
      (SBAR
        (S
          (NP
            (NP (PRP$ my) (NN crew))
            (, ,)
            (NP (NNP Buffeted))
            (, ,))
          (VP
            (VP (VBD blinded))
            (, ,)
            (VP (VBN bound))
            (CC and)
            (VP (VBD threw))
            (, ,)
            (S
              (VP (VBG Bidding)
                (SBAR
                  (S
                    (NP (PRP me))
                    (VP (VBZ eyeless)
                      (VP (VB wait)
                        (PP (IN upon)
                          (NP (PRP$ his) (NN pleasure)))))))))))))
    (. .)))

case(pits-3, Into-1)
nmod:poss(pits-3, his-2)
nmod:into(stamped-5, pits-3)
nsubj(stamped-5, he-4)
root(ROOT-0, stamped-5)
nmod:poss(crew-7, my-6)
nsubj(blinded-11, crew-7)
nsubj(bound-13, crew-7)
nsubj(threw-15, crew-7)
appos(crew-7, Buffeted-9)
ccomp(stamped-5, blinded-11)
ccomp(stamped-5, bound-13)
conj:and(blinded-11, bound-13)
cc(blinded-11, and-14)
ccomp(stamped-5, threw-15)
conj:and(blinded-11, threw-15)
advcl(blinded-11, Bidding-17)
nsubj(eyeless-19, me-18)
ccomp(Bidding-17, eyeless-19)
xcomp(eyeless-19, wait-20)
case(pleasure-23, upon-21)
nmod:poss(pleasure-23, his-22)
nmod:upon(wait-20, pleasure-23)

(ROOT
  (SINV
    (S
      (S
        (NP (NNP Man))
        (VP (VBD made)
          (NP (PRP me))))
      (, ,)
      (CC and)
      (S
        (NP (PRP$ my) (NN will))
        (VP (VBZ Is)
          (PP (TO to)
            (NP (PRP$ my) (NN maker)))
          (ADVP (RB still)))))
    (, ,)
    (VP (VBD Whom)
      (ADVP (RB now)))
    (NP
      (NP (DT the) (NNS currents) (NN con))
      (, ,)
      (NP (DT the) (NNS rollers)
        (S
          (S
            (VP (VB steer)))
          (: --)
          (S
            (VP (VBG Lifting)
              (NP (NN forlorn))
              (S
                (VP (TO to)
                  (VP (VB spy)
                    (NP (NNP Trailed) (NN smoke))
                    (PP (IN along)
                      (NP (DT the) (NN sky))))))))
          (, ,)
          (S
            (VP (VBG Falling)
              (ADJP (JJ afraid))
              (SBAR (IN lest)
                (S
                  (NP (DT any) (NN keel))
                  (VP (VBP come)
                    (ADJP (JJ near))))))))))
    (. !)))

nsubj(made-2, Man-1)
ccomp(Whom-14, made-2)
dobj(made-2, me-3)
cc(made-2, and-5)
nmod:poss(will-7, my-6)
nsubj(maker-11, will-7)
cop(maker-11, Is-8)
case(maker-11, to-9)
nmod:poss(maker-11, my-10)
conj:and(made-2, maker-11)
ccomp(Whom-14, maker-11)
advmod(maker-11, still-12)
root(ROOT-0, Whom-14)
advmod(Whom-14, now-15)
det(con-18, the-16)
compound(con-18, currents-17)
nsubj(Whom-14, con-18)
det(rollers-21, the-20)
appos(con-18, rollers-21)
dep(rollers-21, steer-22)
parataxis(steer-22, Lifting-24)
dobj(Lifting-24, forlorn-25)
mark(spy-27, to-26)
advcl(Lifting-24, spy-27)
compound(smoke-29, Trailed-28)
dobj(spy-27, smoke-29)
case(sky-32, along-30)
det(sky-32, the-31)
nmod:along(spy-27, sky-32)
parataxis(steer-22, Falling-34)
xcomp(Falling-34, afraid-35)
mark(come-39, lest-36)
det(keel-38, any-37)
nsubj(come-39, keel-38)
advcl(Falling-34, come-39)
xcomp(come-39, near-40)

(ROOT
  (S
    (S
      (S
        (S
          (VP (VBN Wrenched)
            (PP (IN as)
              (NP
                (NP (DT the) (NNS lips))
                (PP (IN of)
                  (NP
                    (NP (NN thirst))
                    (, ,)
                    (NP (NNP Wried))
                    (, ,)))))))
        (VP (VBD dried)))
      (, ,)
      (CC and)
      (S
        (NP
          (NP (NN split)
            (CC and)
            (NN burst))
          (, ,)
          (NP (JJ Bone-bleached) (PRP$ my) (NNS decks))
          (, ,))
        (VP (VBD wind-scoured)
          (PP (TO to)
            (NP (DT the) (NN graining))))))
    (: ;)
    (CC And)
    (SINV
      (VP (VBD jarred)
        (PP (IN at)
          (NP (DT every) (NN roll))))
      (NP (DT The) (NN gear)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD was)
              (VP
                (NP (PRP$ my) (NN soul) (NNS Answers))
                (NP
                  (NP (DT the) (NN anguish))
                  (PP (IN of)
                    (NP (PRP$ my)
                      (NX (NNP beams) (POS ')))))
                (S
                  (VP (VBG complaining)))))))))
    (. .)))

csubj(dried-10, Wrenched-1)
case(lips-4, as-2)
det(lips-4, the-3)
nmod:as(Wrenched-1, lips-4)
case(thirst-6, of-5)
nmod:of(lips-4, thirst-6)
appos(thirst-6, Wried-8)
root(ROOT-0, dried-10)
cc(dried-10, and-12)
nsubj(wind-scoured-21, split-13)
cc(split-13, and-14)
conj:and(split-13, burst-15)
nsubj(wind-scoured-21, burst-15)
amod(decks-19, Bone-bleached-17)
nmod:poss(decks-19, my-18)
appos(split-13, decks-19)
conj:and(dried-10, wind-scoured-21)
case(graining-24, to-22)
det(graining-24, the-23)
nmod:to(wind-scoured-21, graining-24)
cc(dried-10, And-26)
conj:and(dried-10, jarred-27)
case(roll-30, at-28)
det(roll-30, every-29)
nmod:at(jarred-27, roll-30)
det(gear-32, The-31)
nsubj(jarred-27, gear-32)
nsubj(Answers-37, that-33)
aux(Answers-37, was-34)
nmod:poss(Answers-37, my-35)
compound(Answers-37, soul-36)
ccomp(gear-32, Answers-37)
det(anguish-39, the-38)
dobj(Answers-37, anguish-39)
case(beams-42, of-40)
nmod:poss(beams-42, my-41)
nmod:of(anguish-39, beams-42)
dep(beams-42, '-43)
xcomp(Answers-37, complaining-44)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NN life))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD crammed)
              (S
                (NP (PRP me))
                (ADJP (JJ full))))))))
    (, ,)
    (NP
      (NP (NNP Gangs))
      (PP (IN of)
        (NP (DT the) (NN prying))))
    (VP (VBP gull)
      (SBAR
        (S
          (NP (DT That))
          (VP (VBP shriek)
            (CC and)
            (VBP scrabble)
            (PP (IN on)
              (NP (DT the) (NN riven) (NNS hatches)))))))
    (. !)))

case(life-2, For-1)
nsubj(crammed-4, life-2)
nmod:for(gull-12, life-2)
ref(life-2, that-3)
acl:relcl(life-2, crammed-4)
nsubj(full-6, me-5)
xcomp(crammed-4, full-6)
nsubj(gull-12, Gangs-8)
case(prying-11, of-9)
det(prying-11, the-10)
nmod:of(Gangs-8, prying-11)
root(ROOT-0, gull-12)
nsubj(shriek-14, That-13)
nsubj(scrabble-16, That-13)
ccomp(gull-12, shriek-14)
cc(shriek-14, and-15)
ccomp(gull-12, scrabble-16)
conj:and(shriek-14, scrabble-16)
case(hatches-20, on-17)
det(hatches-20, the-18)
compound(hatches-20, riven-19)
nmod:on(shriek-14, hatches-20)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NN roar))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD dumbed)
              (NP (DT the) (NN gale)))))))
    (, ,)
    (NP (PRP$ My) (JJ hawse-pipes) (NN guttering))
    (VP (VBD wail) (, ,)
      (S
        (VP (VBG Sobbing)
          (NP (PRP$ my) (NN heart))
          (PRT (RP out))
          (PP (IN through)
            (NP (DT the) (JJ uncounted) (NNS watches))))))
    (. !)))

case(roar-2, For-1)
nsubj(dumbed-4, roar-2)
nmod:for(wail-11, roar-2)
ref(roar-2, that-3)
acl:relcl(roar-2, dumbed-4)
det(gale-6, the-5)
dobj(dumbed-4, gale-6)
nmod:poss(guttering-10, My-8)
amod(guttering-10, hawse-pipes-9)
nsubj(wail-11, guttering-10)
root(ROOT-0, wail-11)
xcomp(wail-11, Sobbing-13)
nmod:poss(heart-15, my-14)
dobj(Sobbing-13, heart-15)
compound:prt(Sobbing-13, out-16)
case(watches-20, through-17)
det(watches-20, the-18)
amod(watches-20, uncounted-19)
nmod:through(Sobbing-13, watches-20)

(ROOT
  (S
    (NP
      (NP (NNP Blind))
      (PP (IN in)
        (NP (DT the) (JJ hot) (NN blue))))
    (VP (VBP ring)
      (SBAR
        (S
          (PP (IN Through)
            (NP (PDT all) (PRP$ my) (NNS points)))
          (NP (PRP I))
          (VP (VBP swing) (: --)
            (NP
              (NP (NN Swing)
                (CC and)
                (NN return))
              (SBAR
                (S
                  (VP (TO to)
                    (VP (VB shift)
                      (NP (DT the) (NN sun))
                      (ADVP (RB anew)))))))))))
    (. .)))

nsubj(ring-6, Blind-1)
case(blue-5, in-2)
det(blue-5, the-3)
amod(blue-5, hot-4)
nmod:in(Blind-1, blue-5)
root(ROOT-0, ring-6)
case(points-10, Through-7)
det:predet(points-10, all-8)
nmod:poss(points-10, my-9)
nmod:through(swing-12, points-10)
nsubj(swing-12, I-11)
ccomp(ring-6, swing-12)
dobj(swing-12, Swing-14)
cc(Swing-14, and-15)
dobj(swing-12, return-16)
conj:and(Swing-14, return-16)
mark(shift-18, to-17)
acl(Swing-14, shift-18)
det(sun-20, the-19)
dobj(shift-18, sun-20)
advmod(shift-18, anew-21)

(ROOT
  (NP
    (NP
      (NP (NNP Blind))
      (PP (IN in)
        (NP (PRP$ my) (JJ well-known) (NN sky))))
    (SBAR
      (S
        (NP (PRP I))
        (VP (VBP hear)
          (SBAR
            (S
              (NP (DT the) (NNS stars))
              (VP (VBP go)
                (PP (IN by))
                (, ,)
                (S
                  (VP (VBG Mocking)
                    (NP
                      (NP (DT the) (NN prow))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD can) (RB not)
                            (VP (VB hold)
                              (S
                                (NP (PRP one))
                                (ADJP (JJ true))))))))))))))))
    (. !)))

root(ROOT-0, Blind-1)
case(sky-5, in-2)
nmod:poss(sky-5, my-3)
amod(sky-5, well-known-4)
nmod:in(Blind-1, sky-5)
nsubj(hear-7, I-6)
acl:relcl(Blind-1, hear-7)
det(stars-9, the-8)
nsubj(go-10, stars-9)
ccomp(hear-7, go-10)
nmod(go-10, by-11)
xcomp(go-10, Mocking-13)
det(prow-15, the-14)
dobj(Mocking-13, prow-15)
nsubj(hold-19, prow-15)
ref(prow-15, that-16)
aux(hold-19, can-17)
neg(hold-19, not-18)
acl:relcl(prow-15, hold-19)
nsubj(true-21, one-20)
xcomp(hold-19, true-21)

(ROOT
  (S
    (NP
      (NP (NNP White))
      (PP (IN on)
        (NP (PRP$ my) (JJ wasted) (NN path))))
    (VP (VBP Wave)
      (SBAR (IN after)
        (S
          (NP
            (NP (NN wave))
            (PP (IN in)
              (NP (NN wrath) (NNS Frets))))
          (VP (`` `) (VBD gainst)
            (NP (PRP$ his) (NN fellow))
            (, ,)
            (S
              (VP (VBG warring)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (VP (TO to)
                      (VP (VB send)
                        (NP (PRP me))))))))))))
    (. .)))

nsubj(Wave-6, White-1)
case(path-5, on-2)
nmod:poss(path-5, my-3)
amod(path-5, wasted-4)
nmod:on(White-1, path-5)
root(ROOT-0, Wave-6)
mark(gainst-13, after-7)
nsubj(gainst-13, wave-8)
case(Frets-11, in-9)
compound(Frets-11, wrath-10)
nmod:in(wave-8, Frets-11)
advcl(Wave-6, gainst-13)
nmod:poss(fellow-15, his-14)
dobj(gainst-13, fellow-15)
advcl(gainst-13, warring-17)
advmod(send-20, where-18)
mark(send-20, to-19)
xcomp(warring-17, send-20)
dobj(send-20, me-21)

(ROOT
  (S
    (S
      (VP (VBG Flung)
        (ADVP (RB forward))))
    (, ,)
    (S
      (VP (VBN heaved)
        (ADVP (RB aside))))
    (, ,)
    (VP
      (VP (VBZ Witless))
      (CC and)
      (VP (VBD dazed)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP bide)
              (NP
                (NP (DT The) (NN mercy))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN comber))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD shall)
                          (VP (VB end)
                            (NP (PRP me))))))))))))))
    (. .)))

dep(Witless-7, Flung-1)
advmod(Flung-1, forward-2)
parataxis(Witless-7, heaved-4)
advmod(heaved-4, aside-5)
root(ROOT-0, Witless-7)
cc(Witless-7, and-8)
conj:and(Witless-7, dazed-9)
nsubj(bide-11, I-10)
ccomp(dazed-9, bide-11)
det(mercy-13, The-12)
dobj(bide-11, mercy-13)
case(comber-16, of-14)
det(comber-16, the-15)
nmod:of(mercy-13, comber-16)
nsubj(end-19, comber-16)
ref(comber-16, that-17)
aux(end-19, shall-18)
acl:relcl(comber-16, end-19)
dobj(end-19, me-20)

(ROOT
  (S
    (NP
      (NP (NNP North))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (NNS bergs))
          (VP (VB careen) (, ,)
            (S
              (NP
                (NP (DT The) (NN spray))
                (PP (IN of)
                  (NP (NNS seas))))
              (ADJP (JJ unseen)
                (SBAR
                  (S
                    (NP (NNP Smokes))
                    (VP
                      (VP (VBP round)
                        (NP (PRP$ my) (NN head)))
                      (CC and)
                      (VP (VBZ freezes)
                        (PP (IN in)
                          (NP (DT the) (VBG falling))))))))))))
      (: ;)
      (NP
        (NP (NNP South))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT the) (JJ corals) (NN breed))
              (, ,)
              (NP
                (NP (DT The) (NNS footless))
                (, ,)
                (NP (VBG floating) (NN weed))))
            (VP
              (VP (VBZ Folds)
                (NP (PRP me)))
              (CC and)
              (VP (VBZ fouls)
                (NP (PRP me)))))))
      (, ,))
    (VP (VBP strake)
      (PP (IN on)
        (NP (JJ strake) (NN upcrawling))))
    (. .)))

nsubj(strake-39, North-1)
advmod(careen-5, where-2)
det(bergs-4, the-3)
nsubj(careen-5, bergs-4)
acl:relcl(North-1, careen-5)
det(spray-8, The-7)
nsubj(unseen-11, spray-8)
case(seas-10, of-9)
nmod:of(spray-8, seas-10)
xcomp(careen-5, unseen-11)
nsubj(round-13, Smokes-12)
nsubj(freezes-17, Smokes-12)
ccomp(unseen-11, round-13)
nmod:poss(head-15, my-14)
dobj(round-13, head-15)
cc(round-13, and-16)
ccomp(unseen-11, freezes-17)
conj:and(round-13, freezes-17)
case(the-19, in-18)
nmod:in(freezes-17, the-19)
amod(the-19, falling-20)
dep(North-1, South-22)
advmod(Folds-33, where-23)
det(breed-26, the-24)
amod(breed-26, corals-25)
nsubj(Folds-33, breed-26)
nsubj(fouls-36, breed-26)
det(footless-29, The-28)
appos(breed-26, footless-29)
amod(weed-32, floating-31)
appos(footless-29, weed-32)
acl:relcl(South-22, Folds-33)
dobj(Folds-33, me-34)
cc(Folds-33, and-35)
acl:relcl(South-22, fouls-36)
conj:and(Folds-33, fouls-36)
dobj(fouls-36, me-37)
root(ROOT-0, strake-39)
case(upcrawling-42, on-40)
amod(upcrawling-42, strake-41)
nmod:on(strake-39, upcrawling-42)

(ROOT
  (S
    (NP (PRP I))
    (PRN
      (S
        (NP (DT that))
        (VP (VBD was)
          (ADJP (JJ clean)
            (S
              (VP (TO to)
                (VP (VB run)
                  (NP (PRP$ My) (NN race))
                  (PP (IN against)
                    (NP
                      (NP (DT the) (NN sun))
                      (: --)
                      (NP
                        (NP (NNP Strength))
                        (PP (IN on)
                          (NP (DT the) (JJ deep))))))))))))
      (, ,))
    (VP (VBP am)
      (VP
        (VP (VBN bawd)
          (PP (TO to)
            (NP (DT all) (NN disaster))))
        (: --)
        (VP (VBN Whipped)
          (ADVP (RB forth)
            (PP (IN by)
              (NP (NN night))))
          (S
            (VP (TO to)
              (VP (VB meet)
                (NP
                  (NP (PRP$ My) (NN sister) (POS 's))
                  (JJ careless) (NNS feet))))))
        (, ,)
        (FRAG (CC And)
          (PP (IN with)
            (NP (DT a) (NN kiss)
              (S
                (VP (VB betray)
                  (NP (PRP her))
                  (PP (TO to)
                    (NP (PRP$ my) (NN master))))))))))
    (. !)))

nsubj(bawd-19, I-1)
nsubj(clean-4, that-2)
nsubj:xsubj(run-6, that-2)
cop(clean-4, was-3)
parataxis(bawd-19, clean-4)
mark(run-6, to-5)
xcomp(clean-4, run-6)
nmod:poss(race-8, My-7)
dobj(run-6, race-8)
case(sun-11, against-9)
det(sun-11, the-10)
nmod:against(run-6, sun-11)
dep(sun-11, Strength-13)
case(deep-16, on-14)
det(deep-16, the-15)
nmod:on(Strength-13, deep-16)
aux(bawd-19, am-18)
root(ROOT-0, bawd-19)
case(disaster-22, to-20)
det(disaster-22, all-21)
nmod:to(bawd-19, disaster-22)
dep(bawd-19, Whipped-24)
advmod(Whipped-24, forth-25)
case(night-27, by-26)
nmod:by(forth-25, night-27)
mark(meet-29, to-28)
xcomp(Whipped-24, meet-29)
nmod:poss(sister-31, My-30)
nmod:poss(feet-34, sister-31)
case(sister-31, 's-32)
amod(feet-34, careless-33)
dobj(meet-29, feet-34)
dep(bawd-19, And-36)
case(kiss-39, with-37)
det(kiss-39, a-38)
nmod:with(And-36, kiss-39)
dep(kiss-39, betray-40)
dobj(betray-40, her-41)
case(master-44, to-42)
nmod:poss(master-44, my-43)
nmod:to(betray-40, master-44)

(ROOT
  (S
    (S
      (S
        (NP (NNP Man))
        (VP (VBD made)
          (NP (PRP me))))
      (, ,)
      (CC and)
      (S
        (NP (PRP$ my) (NN will))
        (VP (VBZ Is)
          (PP (TO to)
            (NP (PRP$ my) (NN maker)))
          (ADVP
            (ADVP (RB still))
            (: --)
            (PP (TO To)
              (NP (PRP him))))))
      (CC and)
      (S
        (NP (PRP$ his))
        (, ,)
        (NP
          (NP (PRP$ our) (NNS peoples))
          (PP (IN at)
            (NP (PRP$ their) (NN pier))))))
    (: :)
    (S
      (NP (NNP Lifting))
      (ADVP (RB in))
      (VP (VBP hope)
        (S
          (VP (TO to)
            (VP (VB spy)
              (NP (NNP Trailed) (NN smoke))
              (PP (IN along)
                (NP (DT the) (NN sky)))
              (, ,)
              (S
                (VP (VBG Falling)
                  (ADJP (JJ afraid))
                  (SBAR (IN lest)
                    (S
                      (NP (DT any) (NN keel))
                      (VP (VBP come)
                        (ADJP (JJ near))))))))))))
    (. !)))

nsubj(made-2, Man-1)
root(ROOT-0, made-2)
dobj(made-2, me-3)
cc(made-2, and-5)
nmod:poss(will-7, my-6)
nsubj(maker-11, will-7)
cop(maker-11, Is-8)
case(maker-11, to-9)
nmod:poss(maker-11, my-10)
conj:and(made-2, maker-11)
advmod(maker-11, still-12)
case(him-15, To-14)
nmod:to(still-12, him-15)
cc(made-2, and-16)
dep(peoples-20, his-17)
nmod:poss(peoples-20, our-19)
conj:and(made-2, peoples-20)
case(pier-23, at-21)
nmod:poss(pier-23, their-22)
nmod:at(peoples-20, pier-23)
nsubj(hope-27, Lifting-25)
nsubj:xsubj(spy-29, Lifting-25)
advmod(hope-27, in-26)
parataxis(made-2, hope-27)
mark(spy-29, to-28)
xcomp(hope-27, spy-29)
compound(smoke-31, Trailed-30)
dobj(spy-29, smoke-31)
case(sky-34, along-32)
det(sky-34, the-33)
nmod:along(spy-29, sky-34)
advcl(spy-29, Falling-36)
xcomp(Falling-36, afraid-37)
mark(come-41, lest-38)
det(keel-40, any-39)
nsubj(come-41, keel-40)
advcl(Falling-36, come-41)
xcomp(come-41, near-42)

(ROOT
  (S
    (NP
      (NP (DT THE) (NNP ANSWER) (NNP A) (NNP Rose))
      (, ,)
      (PP (IN in)
        (NP
          (NP (NNS tatters))
          (PP (IN on)
            (NP (DT the) (NN garden) (NN path)))))
      (, ,))
    (VP
      (VP (VBD Cried)
        (PRT (RP out))
        (PP (TO to)
          (NP (NNP God))))
      (CC and)
      (VP (VBD murmured)
        (SBAR
          (S (`` `)
            (S
              (VP (VB gainst)
                (NP (PRP$ His) (NN Wrath))))
            (, ,)
            (PP (IN Because)
              (NP
                (NP (DT a) (JJ sudden) (NN wind))
                (PP (IN at)
                  (NP
                    (NP (NN twilight) (POS 's))
                    (NN hush)))))
            (VP (VBD Had)
              (VP (VBN snapped)
                (S
                  (NP (PRP her))
                  (VP (VB stem)
                    (ADVP (RB alone))
                    (PP (IN of)
                      (NP (PDT all) (DT the) (NN bush)))))))))))
    (. .)))

det(Rose-4, THE-1)
compound(Rose-4, ANSWER-2)
compound(Rose-4, A-3)
nsubj(Cried-13, Rose-4)
nsubj(murmured-18, Rose-4)
case(tatters-7, in-6)
nmod:in(Rose-4, tatters-7)
case(path-11, on-8)
det(path-11, the-9)
compound(path-11, garden-10)
nmod:on(tatters-7, path-11)
root(ROOT-0, Cried-13)
compound:prt(Cried-13, out-14)
case(God-16, to-15)
nmod:to(Cried-13, God-16)
cc(Cried-13, and-17)
conj:and(Cried-13, murmured-18)
ccomp(snapped-33, gainst-20)
nmod:poss(Wrath-22, His-21)
dobj(gainst-20, Wrath-22)
case(wind-27, Because-24)
det(wind-27, a-25)
amod(wind-27, sudden-26)
nmod:because(snapped-33, wind-27)
case(hush-31, at-28)
nmod:poss(hush-31, twilight-29)
case(twilight-29, 's-30)
nmod:at(wind-27, hush-31)
aux(snapped-33, Had-32)
ccomp(murmured-18, snapped-33)
nsubj(stem-35, her-34)
ccomp(snapped-33, stem-35)
advmod(stem-35, alone-36)
case(bush-40, of-37)
det:predet(bush-40, all-38)
det(bush-40, the-39)
nmod:of(stem-35, bush-40)

(ROOT
  (S (CC And)
    (NP
      (NP (NNP God))
      (, ,)
      (SBAR
        (WHNP (WP Who))
        (S
          (VP (VBZ hears)
            (NP
              (NP (DT both) (JJ sun-dried) (NN dust))
              (CC and)
              (NP (NN sun))))))
      (, ,))
    (VP (VBD Had)
      (NP
        (NP (NN pity))
        (, ,)
        (VP (VBG whispering)
          (PP (TO to)
            (NP (DT that) (JJ luckless) (NN one))))
        (, ,) (`` ``)
        (NP
          (NP
            (NP (NNP Sister))
            (, ,)
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT that)))
              (S
                (NP (PRP thou))
                (VP (VBP sayest)
                  (SBAR
                    (S
                      (NP (PRP We))
                      (VP (VBD did)
                        (ADVP (RB not) (RB well)))))))))
          (: --)
          (SBAR
            (WHNP (WP What))
            (S
              (VP (VBZ voices)
                (VP (VB heardst)
                  (NP (PRP thou))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP$ thy) (NNS petals))
                      (VP (VBD fell)))))))))))
    (. ?) ('' '')))

cc(Had-12, And-1)
nsubj(hears-5, God-2)
nsubj(Had-12, God-2)
ref(God-2, Who-4)
acl:relcl(God-2, hears-5)
det(dust-8, both-6)
amod(dust-8, sun-dried-7)
dobj(hears-5, dust-8)
cc(dust-8, and-9)
dobj(hears-5, sun-10)
conj:and(dust-8, sun-10)
root(ROOT-0, Had-12)
dobj(Had-12, pity-13)
acl(pity-13, whispering-15)
case(one-19, to-16)
det(one-19, that-17)
amod(one-19, luckless-18)
nmod:to(whispering-15, one-19)
dep(pity-13, Sister-22)
nmod:in(sayest-27, Sister-22)
nsubj(voices-34, Sister-22)
case(that-25, in-24)
ref(Sister-22, that-25)
nsubj(sayest-27, thou-26)
acl:relcl(Sister-22, sayest-27)
nsubj(did-29, We-28)
ccomp(sayest-27, did-29)
dep(well-31, not-30)
advmod(did-29, well-31)
ref(Sister-22, What-33)
acl:relcl(Sister-22, voices-34)
xcomp(voices-34, heardst-35)
dobj(heardst-35, thou-36)
advmod(fell-40, when-37)
nmod:poss(petals-39, thy-38)
nsubj(fell-40, petals-39)
advcl(heardst-35, fell-40)

(ROOT
  (S (CC And)
    (NP (DT the) (NNP Rose))
    (VP (VBD answered) (, ,) (`` ``)
      (S
        (S
          (PP (IN In)
            (NP (DT that) (JJ evil) (NN hour)))
          (NP (DT A) (NN voice))
          (VP (VBD said) (, ,) (`` `)
            (INTJ (UH Father))))
        (, ,)
        (S
          (NP (NN wherefore))
          (VP (VBZ falls)
            (NP (DT the) (NN flower))))))
    (. ?)))

cc(answered-4, And-1)
det(Rose-3, the-2)
nsubj(answered-4, Rose-3)
root(ROOT-0, answered-4)
case(hour-10, In-7)
det(hour-10, that-8)
amod(hour-10, evil-9)
nmod:in(said-13, hour-10)
det(voice-12, A-11)
nsubj(said-13, voice-12)
xcomp(answered-4, said-13)
discourse(said-13, Father-16)
nsubj(falls-19, wherefore-18)
parataxis(said-13, falls-19)
det(flower-21, the-20)
dobj(falls-19, flower-21)

(ROOT
  (S
    (PP (IN For)
      (NP (NN lo)))
    (, ,)
    (NP (DT the) (JJ very) (NNS gossamers))
    (VP (VBP are)
      (ADVP (RB still)))
    (. .) ('' ')))

case(lo-2, For-1)
nmod:for(are-7, lo-2)
det(gossamers-6, the-4)
amod(gossamers-6, very-5)
nsubj(are-7, gossamers-6)
root(ROOT-0, are-7)
advmod(are-7, still-8)

(ROOT
  (S (CC And)
    (NP (DT a) (NN voice))
    (VP (VBD answered) (, ,) (`` `)
      (ADJP (JJ Son))
      (, ,)
      (PP (IN by)
        (NP
          (NP (NNP Allah) (POS 's))
          (NN will))))
    (. !) ('' ') ('' '')))

cc(answered-4, And-1)
det(voice-3, a-2)
nsubj(answered-4, voice-3)
root(ROOT-0, answered-4)
xcomp(answered-4, Son-7)
case(will-12, by-9)
nmod:poss(will-12, Allah-10)
case(Allah-10, 's-11)
nmod:by(answered-4, will-12)

(ROOT
  (SINV (RB Then)
    (ADVP
      (ADVP (RB softly))
      (PP (IN as)
        (NP
          (NP (DT a) (NN rain-mist))
          (PP (IN on)
            (NP (DT the) (NN sward))))))
    (, ,)
    (VP (VBP Came)
      (PP (TO to)
        (NP (DT the) (NNP Rose))))
    (NP
      (NP (DT the) (NN Answer))
      (PP (IN of)
        (NP (DT the) (NNP Lord))))
    (: :) (`` ``)
    (S
      (NP (NNP Sister))
      (, ,)
      (SBAR (IN before)
        (S
          (NP (PRP We))
          (VP (VBP smote)
            (NP
              (NP (DT the) (NN dark))
              (PP (IN in)
                (NP (NN twain)))))))
      (, ,)
      (NP (NNP Ere))
      (ADVP (RB yet))
      (NP (DT the) (NNS stars))
      (VP (VBD saw)
        (NP (CD one))
        (S
          (NP (DT another) (NN plain))
          (, ,)
          (NP (NNP Time) (, ,) (NNP Tide) (, ,)
            (CC and)
            (NNP Space))
          (, ,)
          (NP (PRP We))
          (ADVP (RB bound))
          (VP (VB unto)
            (NP (DT the) (NN task))
            (SBAR (IN That)
              (S
                (S
                  (NP (PRP thou))
                  (VP (VBD shouldst)
                    (NP (NN fall))))
                (, ,)
                (CC and)
                (S
                  (NP (PDT such) (DT an) (NN one))
                  (VP (MD should)
                    (VP (VB ask))))))))))
    (. .) ('' '')))

advmod(Came-10, Then-1)
advmod(Came-10, softly-2)
case(rain-mist-5, as-3)
det(rain-mist-5, a-4)
nmod:as(softly-2, rain-mist-5)
case(sward-8, on-6)
det(sward-8, the-7)
nmod:on(rain-mist-5, sward-8)
root(ROOT-0, Came-10)
case(Rose-13, to-11)
det(Rose-13, the-12)
nmod:to(Came-10, Rose-13)
det(Answer-15, the-14)
nsubj(Came-10, Answer-15)
case(Lord-18, of-16)
det(Lord-18, the-17)
nmod:of(Answer-15, Lord-18)
nsubj(saw-35, Sister-21)
mark(smote-25, before-23)
nsubj(smote-25, We-24)
advcl(saw-35, smote-25)
det(dark-27, the-26)
dobj(smote-25, dark-27)
case(twain-29, in-28)
nmod:in(dark-27, twain-29)
nsubj(saw-35, Ere-31)
advmod(saw-35, yet-32)
det(stars-34, the-33)
nsubj(saw-35, stars-34)
ccomp(Came-10, saw-35)
dobj(saw-35, one-36)
det(plain-38, another-37)
nsubj(unto-49, plain-38)
nsubj(unto-49, Time-40)
conj:and(Time-40, Tide-42)
nsubj(unto-49, Tide-42)
cc(Time-40, and-44)
conj:and(Time-40, Space-45)
nsubj(unto-49, Space-45)
nsubj(unto-49, We-47)
advmod(unto-49, bound-48)
dep(saw-35, unto-49)
det(task-51, the-50)
dobj(unto-49, task-51)
mark(shouldst-54, That-52)
nsubj(shouldst-54, thou-53)
ccomp(unto-49, shouldst-54)
nmod:tmod(shouldst-54, fall-55)
cc(shouldst-54, and-57)
det:predet(one-60, such-58)
det(one-60, an-59)
nsubj(ask-62, one-60)
aux(ask-62, should-61)
ccomp(unto-49, ask-62)
conj:and(shouldst-54, ask-62)

(ROOT
  (S
    (NP
      (NP (JJ Whereat) (DT the) (JJ withered) (NN flower))
      (, ,)
      (NP (DT all) (NN content))
      (, ,))
    (VP (VBD Died)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBP die)
            (SBAR
              (WHNP (WP$ whose) (NNS days))
              (S
                (VP (VBP are)
                  (ADJP (JJ innocent))))))
          (: ;)
          (SBAR (IN While)
            (S
              (NP
                (NP (PRP he))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD questioned)
                      (SBAR
                        (WHADVP (WRB why))
                        (S
                          (NP (DT the) (NN flower))
                          (VP (VBD fell)
                            (NP (NNP Caught)))))))))
              (VP
                (VP (VBP hold)
                  (PP (IN of)
                    (NP (NNP God))))
                (CC and)
                (VP (VBD saved)
                  (NP (PRP$ his) (NN soul))
                  (PP (IN from)
                    (NP (NNP Hell))))))))))
    (. .)))

amod(flower-4, Whereat-1)
det(flower-4, the-2)
amod(flower-4, withered-3)
nsubj(Died-9, flower-4)
det(content-7, all-6)
appos(flower-4, content-7)
root(ROOT-0, Died-9)
mark(die-12, as-10)
nsubj(die-12, they-11)
advcl(Died-9, die-12)
nmod:poss(days-14, whose-13)
nsubj(innocent-16, days-14)
cop(innocent-16, are-15)
ccomp(die-12, innocent-16)
mark(hold-27, While-18)
nsubj(questioned-21, he-19)
nsubj(hold-27, he-19)
nsubj(saved-31, he-19)
ref(he-19, who-20)
acl:relcl(he-19, questioned-21)
advmod(fell-25, why-22)
det(flower-24, the-23)
nsubj(fell-25, flower-24)
advcl(questioned-21, fell-25)
dobj(fell-25, Caught-26)
parataxis(die-12, hold-27)
case(God-29, of-28)
nmod:of(hold-27, God-29)
cc(hold-27, and-30)
parataxis(die-12, saved-31)
conj:and(hold-27, saved-31)
nmod:poss(soul-33, his-32)
dobj(saved-31, soul-33)
case(Hell-35, from-34)
nmod:from(saved-31, Hell-35)

(ROOT
  (S
    (S
      (NP
        (NP (DT THE) (NNP SONG))
        (PP (IN OF)
          (NP (DT THE) (NN BANJO))))
      (NP (PRP You))
      (VP (MD could) (RB n't)
        (VP (VB pack)
          (NP
            (NP
              (NP (DT a) (NNP Broadwood) (NN half))
              (NP (DT a) (NN mile)))
            (PRN (: --)
              (S
                (NP (PRP You))
                (VP (MD must) (RB n't)
                  (VP (VB leave)
                    (NP
                      (NP (DT a) (NN fiddle))
                      (PP (IN in)
                        (NP (DT the) (JJ damp)))))))
              (: --))))))
    (PRN
      (S
        (NP (PRP You))
        (VP (MD could) (RB n't)
          (VP (VB raft)
            (NP (DT an) (NN organ))
            (PP (IN up)
              (NP (DT the) (NNP Nile))))))
      (, ,))
    (CC And)
    (S
      (VP (VB play)
        (NP (PRP it))
        (PP (IN in)
          (NP (DT an) (NNP Equatorial) (NNP swamp)))))
    (. .)))

det(SONG-2, THE-1)
nsubj(pack-9, SONG-2)
nsubj(play-37, SONG-2)
case(BANJO-5, OF-3)
det(BANJO-5, THE-4)
nmod:of(SONG-2, BANJO-5)
nsubj(pack-9, You-6)
aux(pack-9, could-7)
neg(pack-9, n't-8)
root(ROOT-0, pack-9)
det(half-12, a-10)
compound(half-12, Broadwood-11)
dobj(pack-9, half-12)
det(mile-14, a-13)
dep(half-12, mile-14)
nsubj(leave-19, You-16)
aux(leave-19, must-17)
neg(leave-19, n't-18)
dep(half-12, leave-19)
det(fiddle-21, a-20)
dobj(leave-19, fiddle-21)
case(damp-24, in-22)
det(damp-24, the-23)
nmod:in(fiddle-21, damp-24)
nsubj(raft-29, You-26)
aux(raft-29, could-27)
neg(raft-29, n't-28)
dep(pack-9, raft-29)
det(organ-31, an-30)
dobj(raft-29, organ-31)
case(Nile-34, up-32)
det(Nile-34, the-33)
nmod:up(raft-29, Nile-34)
cc(pack-9, And-36)
conj:and(pack-9, play-37)
dobj(play-37, it-38)
case(swamp-42, in-39)
det(swamp-42, an-40)
compound(swamp-42, Equatorial-41)
nmod:in(play-37, swamp-42)

(ROOT
  (S
    (S
      (VP (VBG _)
        (S
          (NP (PRP I))
          (ADJP (JJ _) (NN travel)
            (PP (IN with)
              (NP (DT the) (NNS cooking-pots)
                (CC and)
                (NNS pails)))))
        (: --)
        (S
          (S
            (ADVP (RB _))
            (NP (PRP I))
            (VP (VBP 'm)
              (VP (VBG _)
                (S
                  (ADJP (RB sandwiched) (`` `) (JJ tween))
                  (NP
                    (NP (DT the) (NN coffee))
                    (CC and)
                    (NP (DT the) (NN pork)))))))
          (: --)
          (CC And)
          (FRAG
            (WHADVP (WRB when)
              (NP
                (NP (DT the) (JJ dusty) (NN column))
                (NP (NNS checks)
                  (CC and)
                  (NNS tails))))))))
    (, ,)
    (NP (PRP You))
    (VP (MD should)
      (VP (VB hear)
        (S
          (NP (PRP me))
          (VP (VB spur)
            (NP (DT the) (NN rear-guard))
            (PP (TO to)
              (NP (DT a) (NN walk)))))))
    (. !)))

advcl(hear-35, _-1)
nsubj(travel-4, I-2)
dep(travel-4, _-3)
xcomp(_-1, travel-4)
case(cooking-pots-7, with-5)
det(cooking-pots-7, the-6)
nmod:with(travel-4, cooking-pots-7)
cc(cooking-pots-7, and-8)
nmod:with(travel-4, pails-9)
conj:and(cooking-pots-7, pails-9)
advmod(_-14, _-11)
nsubj(_-14, I-12)
aux(_-14, 'm-13)
parataxis(_-1, _-14)
advmod(tween-17, sandwiched-15)
xcomp(_-14, tween-17)
det(coffee-19, the-18)
dep(tween-17, coffee-19)
cc(coffee-19, and-20)
det(pork-22, the-21)
dep(tween-17, pork-22)
conj:and(coffee-19, pork-22)
cc(_-14, And-24)
parataxis(_-1, when-25)
conj:and(_-14, when-25)
det(column-28, the-26)
amod(column-28, dusty-27)
dep(when-25, column-28)
dep(column-28, checks-29)
cc(checks-29, and-30)
dep(column-28, tails-31)
conj:and(checks-29, tails-31)
nsubj(hear-35, You-33)
aux(hear-35, should-34)
root(ROOT-0, hear-35)
nsubj(spur-37, me-36)
ccomp(hear-35, spur-37)
det(rear-guard-39, the-38)
dobj(spur-37, rear-guard-39)
case(walk-42, to-40)
det(walk-42, a-41)
nmod:to(spur-37, walk-42)

(ROOT
  (S
    (FRAG
      (PP (IN With)
        (NP (PRP$ my))))
    ('' '')
    (NP (NNP _) (NNP Pilly-willy-winky-winky))
    (VP (VBZ popp))
    (. !)))

case(my-2, With-1)
dep(popp-6, my-2)
compound(Pilly-willy-winky-winky-5, _-4)
nsubj(popp-6, Pilly-willy-winky-winky-5)
root(ROOT-0, popp-6)

(ROOT
  (SINV
    (VP (VBN _) ('' ''))
    (VP (VBZ -LSB-)
      (S
        (INTJ (UH Oh))
        (, ,)
        (NP (PRP it))
        (VP (VBZ 's)
          (NP
            (NP (DT any) (NN tune))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ comes)
                  (PP (IN into)
                    (NP (PRP$ my) (NN head))))))))))
    (NP (NNP !) (NNP -RSB-))))

root(ROOT-0, _-1)
dep(_-1, -LSB--3)
discourse(tune-9, Oh-4)
nsubj(tune-9, it-6)
cop(tune-9, 's-7)
det(tune-9, any-8)
ccomp(-LSB--3, tune-9)
nsubj(comes-11, tune-9)
ref(tune-9, that-10)
acl:relcl(tune-9, comes-11)
case(head-14, into-12)
nmod:poss(head-14, my-13)
nmod:into(comes-11, head-14)
compound(-RSB--16, !-15)
nsubj(_-1, -RSB--16)

(ROOT
  (S (CC So)
    (S
      (NP (PRP I))
      (VP (VBP keep)
        (S
          (NP (PRP 'em))
          (VP (VBG moving)
            (ADVP (RB forward))
            (SBAR (IN till)
              (S
                (NP (PRP they))
                (VP (VBP drop))))))))
    (: ;) (RB So)
    (S
      (NP (PRP I))
      (VP (VBP play)
        (NP (PRP 'em))
        (PRT (RP up))
        (PP
          (PP (TO to)
            (NP (NN water)))
          (CC and)
          (PP (TO to)
            (NP (NN bed))))))
    (. .)))

cc(keep-3, So-1)
nsubj(keep-3, I-2)
root(ROOT-0, keep-3)
nsubj(moving-5, 'em-4)
dep(keep-3, moving-5)
advmod(moving-5, forward-6)
mark(drop-9, till-7)
nsubj(drop-9, they-8)
advcl(moving-5, drop-9)
advmod(keep-3, So-11)
nsubj(play-13, I-12)
nsubj(play-13', I-12)
dep(keep-3, play-13)
dep(keep-3, play-13')
conj:and(play-13, play-13')
dobj(play-13, 'em-14)
compound:prt(play-13, up-15)
case(water-17, to-16)
nmod:to(play-13, water-17)
cc(play-13, and-18)
case(bed-20, to-19)
nmod:to(play-13', bed-20)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN silence))
        (PP (IN of)
          (NP
            (NP (DT the) (NN camp))
            (PP (IN before)
              (NP (DT the) (NN fight)))))))
    (, ,)
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (ADJP (JJ good)
            (S
              (VP (TO to)
                (VP
                  (VP (VB make)
                    (NP (PRP$ your) (NN will)))
                  (CC and)
                  (VP (VB say)
                    (NP (PRP$ your) (NN prayer))))))))))
    (, ,)
    (NP (PRP You))
    (VP (MD can)
      (VP (VB hear)
        (NP (PRP$ my) (JJ _) (JJ strumpty-tumpty) (NN _))
        (ADVP (RB overnight))
        (S
          (VP (VBG Explaining)
            (NP
              (NP (CD ten) (TO to) (CD one))
              (SBAR
                (S
                  (VP (VBD was)
                    (ADVP (RB always))
                    (ADJP (JJ fair))))))))))
    (. .)))

case(silence-3, In-1)
det(silence-3, the-2)
nmod:in(hear-26, silence-3)
case(camp-6, of-4)
det(camp-6, the-5)
nmod:of(silence-3, camp-6)
case(fight-9, before-7)
det(fight-9, the-8)
nmod:before(camp-6, fight-9)
advmod(good-14, When-11)
nsubj(good-14, it-12)
nsubj:xsubj(make-16, it-12)
nsubj:xsubj(say-20, it-12)
cop(good-14, 's-13)
advcl(hear-26, good-14)
mark(make-16, to-15)
xcomp(good-14, make-16)
nmod:poss(will-18, your-17)
dobj(make-16, will-18)
cc(make-16, and-19)
xcomp(good-14, say-20)
conj:and(make-16, say-20)
nmod:poss(prayer-22, your-21)
dobj(say-20, prayer-22)
nsubj(hear-26, You-24)
aux(hear-26, can-25)
root(ROOT-0, hear-26)
nmod:poss(_-30, my-27)
amod(_-30, _-28)
amod(_-30, strumpty-tumpty-29)
dobj(hear-26, _-30)
advmod(hear-26, overnight-31)
xcomp(hear-26, Explaining-32)
nummod(one-35, ten-33)
dep(one-35, to-34)
dobj(Explaining-32, one-35)
cop(fair-38, was-36)
advmod(fair-38, always-37)
acl:relcl(one-35, fair-38)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (NP
          (NP (DT the) (NN Prophet))
          (PP (IN of)
            (NP (DT the) (NNP Utterly) (NNP Absurd))))
        (, ,)
        (PP (IN Of)
          (NP
            (NP (DT the) (NNP Patently) (NNP Impossible))
            (CC and)
            (NP (NNP Vain))))))
    (: --)
    (CC And)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP
            (NP (DT the) (NN Thing))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD Could) (RB n't)))))
          (VP (VBZ has)
            (VP (VBN occurred)))))
      (, ,)
      (VP
        (VP (VB Give)
          (NP (PRP me))
          (NP (NN time)
            (S
              (VP (TO to)
                (VP (VB change)
                  (NP (PRP$ my) (NN leg)))))))
        (CC and)
        (VP (VB go)
          (ADVP (RB again)))))
    (. .)))

nsubj(Prophet-4, I-1)
nsubj(Give-27, I-1)
cop(Prophet-4, 'm-2)
det(Prophet-4, the-3)
root(ROOT-0, Prophet-4)
case(Absurd-8, of-5)
det(Absurd-8, the-6)
compound(Absurd-8, Utterly-7)
nmod:of(Prophet-4, Absurd-8)
case(Impossible-13, Of-10)
det(Impossible-13, the-11)
compound(Impossible-13, Patently-12)
nmod:of(Prophet-4, Impossible-13)
cc(Impossible-13, and-14)
nmod:of(Prophet-4, Vain-15)
conj:and(Impossible-13, Vain-15)
cc(Prophet-4, And-17)
advmod(occurred-25, when-18)
det(Thing-20, the-19)
nsubj(Could-22, Thing-20)
nsubj(occurred-25, Thing-20)
ref(Thing-20, that-21)
acl:relcl(Thing-20, Could-22)
neg(Could-22, n't-23)
aux(occurred-25, has-24)
advcl(Give-27, occurred-25)
conj:and(Prophet-4, Give-27)
iobj(Give-27, me-28)
dobj(Give-27, time-29)
mark(change-31, to-30)
acl(time-29, change-31)
nmod:poss(leg-33, my-32)
dobj(change-31, leg-33)
cc(Give-27, and-34)
conj:and(Prophet-4, go-35)
conj:and(Give-27, go-35)
advmod(go-35, again-36)

(ROOT
  (S
    (FRAG
      (PP (IN With)
        (NP (PRP$ my))))
    ('' '')
    (NP (NNP _) (NNP Tumpa-tumpa-tumpa-tum-pa))
    (VP (VBZ tump))
    (. !)))

case(my-2, With-1)
dep(tump-6, my-2)
compound(Tumpa-tumpa-tumpa-tum-pa-5, _-4)
nsubj(tump-6, Tumpa-tumpa-tumpa-tum-pa-5)
root(ROOT-0, tump-6)

(ROOT
  (S
    (S
      (VP (VBG _) ('' '')
        (PP (IN In)
          (NP (DT the) (NN desert)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (JJ dung-fed) (NN camp-smoke))
            (VP (VBD curled)
              (SBAR
                (S
                  (NP (EX There))
                  (VP (VBD was)
                    (ADVP (RB never))
                    (NP
                      (NP (NN voice))
                      (PP (IN before)
                        (NP (PRP us))))
                    (SBAR (IN till)
                      (S
                        (NP (PRP I))
                        (VP (VBD led)
                          (NP (PRP$ our) (JJ lonely) (NN chorus)))))))))))))
    (, ,)
    (NP (PRP I)
      (PRN (: --)
        (NP
          (NP (DT the) (NN war-drum))
          (PP (IN of)
            (NP (DT the) (NNP White) (NN Man))))))
    (VP (VBP round)
      (NP (DT the) (NN world)))
    (. !)))

advcl(round-32, _-1)
case(desert-5, In-3)
det(desert-5, the-4)
nmod:in(_-1, desert-5)
advmod(curled-10, where-6)
det(camp-smoke-9, the-7)
amod(camp-smoke-9, dung-fed-8)
nsubj(curled-10, camp-smoke-9)
advcl(_-1, curled-10)
expl(was-12, There-11)
ccomp(curled-10, was-12)
neg(was-12, never-13)
nsubj(was-12, voice-14)
case(us-16, before-15)
nmod:before(voice-14, us-16)
mark(led-19, till-17)
nsubj(led-19, I-18)
advcl(was-12, led-19)
nmod:poss(chorus-22, our-20)
amod(chorus-22, lonely-21)
dobj(led-19, chorus-22)
nsubj(round-32, I-24)
det(war-drum-27, the-26)
dep(I-24, war-drum-27)
case(Man-31, of-28)
det(Man-31, the-29)
compound(Man-31, White-30)
nmod:of(war-drum-27, Man-31)
root(ROOT-0, round-32)
det(world-34, the-33)
dobj(round-32, world-34)

(ROOT
  (S
    (PP (IN By)
      (NP (DT the) (JJ bitter) (NN road)))
    (PRN
      (S
        (NP (DT the) (NNP Younger) (NNP Son))
        (VP (MD must)
          (VP (VB tread))
          (, ,)
          (VP (VB Ere)
            (S
              (NP (PRP he))
              (VP (VB win)
                (PP (TO to)
                  (NP
                    (NP (NN hearth)
                      (CC and)
                      (NN saddle))
                    (PP (IN of)
                      (NP (PRP$ his) (JJ own))))))))))
      (, ,))
    (: --) (`` `)
    (S
      (VP (VBG Mid)
        (NP
          (NP (DT the) (NN riot))
          (PP (IN of)
            (NP
              (NP (DT the) (NNS shearers))
              (PP (IN at)
                (NP (DT the) (NN shed))))))
        (PRN (, ,)
          (PP (IN In)
            (NP
              (NP (DT the) (NN silence))
              (PP (IN of)
                (NP
                  (NP
                    (NP
                      (NP (DT the) (NN herder) (POS 's))
                      (NN hut))
                    (ADVP (RB alone)))
                  (PRN (: --)
                    (PP (IN In)
                      (NP (DT the) (NN twilight)))
                    (, ,)
                    (PP (IN on)
                      (NP (DT a) (NN bucket))))))))
          (ADVP (RB upside) (RB down))
          (, ,))
        (S
          (VP (VB Hear)
            (S
              (NP (PRP me))
              (ADJP (JJ babble))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT the) (JJS weakest))
                  (VP (MD wo) (RB n't)
                    (VP (VB confess))))))))))
    (PRN (: --)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (NP
            (NP (NN Memory))
            (CC and)
            (NP (NNP Torment)))))
      (: --))
    (NP (PRP I))
    (VP (VBP am)
      (NP (NNP Town)))
    (. !)))

case(road-4, By-1)
det(road-4, the-2)
amod(road-4, bitter-3)
nmod:by(Town-72, road-4)
det(Son-7, the-5)
compound(Son-7, Younger-6)
nsubj(tread-9, Son-7)
aux(tread-9, must-8)
parataxis(Town-72, tread-9)
dep(tread-9, Ere-11)
nsubj(win-13, he-12)
ccomp(Ere-11, win-13)
case(hearth-15, to-14)
nmod:to(win-13, hearth-15)
cc(hearth-15, and-16)
nmod:to(win-13, saddle-17)
conj:and(hearth-15, saddle-17)
case(own-20, of-18)
nmod:poss(own-20, his-19)
nmod:of(hearth-15, own-20)
dep(Town-72, Mid-24)
det(riot-26, the-25)
dobj(Mid-24, riot-26)
case(shearers-29, of-27)
det(shearers-29, the-28)
nmod:of(riot-26, shearers-29)
case(shed-32, at-30)
det(shed-32, the-31)
nmod:at(shearers-29, shed-32)
case(silence-36, In-34)
det(silence-36, the-35)
dep(Mid-24, silence-36)
case(hut-41, of-37)
det(herder-39, the-38)
nmod:poss(hut-41, herder-39)
case(herder-39, 's-40)
nmod:of(silence-36, hut-41)
advmod(hut-41, alone-42)
case(twilight-46, In-44)
det(twilight-46, the-45)
nmod:in(hut-41, twilight-46)
case(bucket-50, on-48)
det(bucket-50, a-49)
nmod:on(twilight-46, bucket-50)
advmod(down-52, upside-51)
dep(silence-36, down-52)
dep(Mid-24, Hear-54)
nsubj(confess-62, me-55)
dep(confess-62, babble-56)
dobj(confess-62, what-57)
det(weakest-59, the-58)
nsubj(confess-62, weakest-59)
aux(confess-62, wo-60)
neg(confess-62, n't-61)
xcomp(Hear-54, confess-62)
nsubj(Memory-66, I-64)
cop(Memory-66, am-65)
parataxis(Town-72, Memory-66)
cc(Memory-66, and-67)
conj:and(Memory-66, Torment-68)
parataxis(Town-72, Torment-68)
nsubj(Town-72, I-70)
cop(Town-72, am-71)
root(ROOT-0, Town-72)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (NP
        (NP (DT all))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB ever))
            (VP (VBD went)
              (PP (IN with)
                (NP (NN evening) (NN dress))))))))
    (. !)))

nsubj(all-3, I-1)
cop(all-3, am-2)
root(ROOT-0, all-3)
nsubj(went-6, all-3)
ref(all-3, that-4)
advmod(went-6, ever-5)
acl:relcl(all-3, went-6)
case(dress-9, with-7)
compound(dress-9, evening-8)
nmod:with(went-6, dress-9)

(ROOT
  (S
    (FRAG
      (PP (IN With)
        (NP (PRP$ my))))
    ('' '')
    (NP (NNP _) (NNP Tunk-a))
    (VP (VBZ tunka-tunka-tunka-tunk))
    (. !)))

case(my-2, With-1)
dep(tunka-tunka-tunka-tunk-6, my-2)
compound(Tunk-a-5, _-4)
nsubj(tunka-tunka-tunka-tunk-6, Tunk-a-5)
root(ROOT-0, tunka-tunka-tunka-tunk-6)

(ROOT
  (S
    (NP (NNP _) ('' '') (NNP -LSB-))
    (VP
      (ADVP (RB So)
        (NP
          (NP (DT the) (NNS lights))
          (PRN (: --)
            (NP (DT the) (NNP London) (NNS Lights))
            (: --))))
      (VBP grow)
      (NP
        (UCP
          (NP (JJ near))
          (CC and)
          (ADJP (JJ plain) (. !)))
        (NNS -RSB-)))))

compound(-LSB--3, _-1)
nsubj(grow-12, -LSB--3)
advmod(grow-12, So-4)
det(lights-6, the-5)
nmod:npmod(So-4, lights-6)
det(Lights-10, the-8)
compound(Lights-10, London-9)
dep(lights-6, Lights-10)
root(ROOT-0, grow-12)
compound(-RSB--17, near-13)
cc(near-13, and-14)
conj:and(near-13, plain-15)
compound(-RSB--17, plain-15)
dobj(grow-12, -RSB--17)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBP rowel)
      (SBAR
        (S
          (NP (PRP 'em))
          (VP (VBP afresh)
            (PP (IN towards)
              (NP
                (NP (DT the) (NNP Devil))
                (CC and)
                (NP (DT the) (NN Flesh))))
            (, ,)
            (PP (IN Till)
              (S
                (NP (PRP I))
                (VP (VB bring)
                  (NP (PRP$ my) (JJ broken) (NNS rankers) (NN home))
                  (ADVP (RB again)))))))))
    (. .)))

dep(rowel-3, So-1)
nsubj(rowel-3, I-2)
root(ROOT-0, rowel-3)
nsubj(afresh-5, 'em-4)
ccomp(rowel-3, afresh-5)
case(Devil-8, towards-6)
det(Devil-8, the-7)
nmod:towards(afresh-5, Devil-8)
cc(Devil-8, and-9)
det(Flesh-11, the-10)
nmod:towards(afresh-5, Flesh-11)
conj:and(Devil-8, Flesh-11)
mark(bring-15, Till-13)
nsubj(bring-15, I-14)
advcl(afresh-5, bring-15)
nmod:poss(home-19, my-16)
amod(home-19, broken-17)
compound(home-19, rankers-18)
dobj(bring-15, home-19)
advmod(bring-15, again-20)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN desire))
        (PP (IN of)
          (NP
            (NP (JJ many) (NNS marvels))
            (PP (IN over)
              (NP (NN sea)))))))
    (, ,)
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP (DT the) (JJ new-raised) (JJ tropic) (NN city))
        (VP
          (VP (VBZ sweats))
          (CC and)
          (VP (VBZ roars)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN sailed)
        (PP (IN with)
          (NP
            (NP (NNP Young) (NNP Ulysses))
            (PP (IN from)
              (NP (DT the) (NN quay)))))
        (PP (IN Till)
          (NP
            (NP (DT the) (NN anchor))
            (VP (VBD rumbled)
              (PRT (RP down))
              (PP (IN on)
                (NP (NN stranger) (NNS shores))))))))
    (. .)))

case(desire-2, In-1)
nmod:in(sailed-20, desire-2)
case(marvels-5, of-3)
amod(marvels-5, many-4)
nmod:of(desire-2, marvels-5)
case(sea-7, over-6)
nmod:over(marvels-5, sea-7)
advmod(sweats-14, Where-9)
det(city-13, the-10)
amod(city-13, new-raised-11)
amod(city-13, tropic-12)
nsubj(sweats-14, city-13)
nsubj(roars-16, city-13)
advcl(sailed-20, sweats-14)
cc(sweats-14, and-15)
conj:and(sweats-14, roars-16)
advcl(sailed-20, roars-16)
nsubj(sailed-20, I-18)
aux(sailed-20, have-19)
root(ROOT-0, sailed-20)
case(Ulysses-23, with-21)
compound(Ulysses-23, Young-22)
nmod:with(sailed-20, Ulysses-23)
case(quay-26, from-24)
det(quay-26, the-25)
nmod:from(Ulysses-23, quay-26)
case(anchor-29, Till-27)
det(anchor-29, the-28)
nmod:till(sailed-20, anchor-29)
acl(anchor-29, rumbled-30)
compound:prt(rumbled-30, down-31)
case(shores-34, on-32)
compound(shores-34, stranger-33)
nmod:on(rumbled-30, shores-34)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (VP (VBN blooded)
          (PP (TO to)
            (NP
              (NP (DT the) (NN open))
              (CC and)
              (NP (DT the) (NN sky)))))))
    (, ,)
    (NP (PRP He))
    (VP (VBZ is)
      (VP (VBN taken)
        (PP (IN in)
          (NP
            (NP (DT a) (NN snare))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD shall) (RB not)
                  (VP (VB fail)
                    (PRN (, ,)
                      (S
                        (NP (PRP He))
                        (VP (MD shall)
                          (VP (VB hear)
                            (S
                              (NP (PRP me))
                              (VP (VBG singing)
                                (ADVP (RB strongly)))))))
                      (, ,))
                    (SBAR (IN till)
                      (S
                        (NP (PRP he))
                        (VP (VB die) (, ,)
                          (PP (IN Like)
                            (NP
                              (NP (DT the) (NN shouting))
                              (PP (IN of)
                                (NP (DT a) (NN backstay)))))
                          (PP (IN in)
                            (NP (DT a) (NN gale))))))))))))))
    (. .)))

nsubjpass(blooded-3, He-1)
auxpass(blooded-3, is-2)
ccomp(taken-13, blooded-3)
case(open-6, to-4)
det(open-6, the-5)
nmod:to(blooded-3, open-6)
cc(open-6, and-7)
det(sky-9, the-8)
nmod:to(blooded-3, sky-9)
conj:and(open-6, sky-9)
nsubjpass(taken-13, He-11)
auxpass(taken-13, is-12)
root(ROOT-0, taken-13)
case(snare-16, in-14)
det(snare-16, a-15)
nmod:in(taken-13, snare-16)
nsubj(fail-20, snare-16)
ref(snare-16, that-17)
aux(fail-20, shall-18)
neg(fail-20, not-19)
acl:relcl(snare-16, fail-20)
nsubj(hear-24, He-22)
aux(hear-24, shall-23)
parataxis(fail-20, hear-24)
nsubj(singing-26, me-25)
dep(hear-24, singing-26)
advmod(singing-26, strongly-27)
mark(die-31, till-29)
nsubj(die-31, he-30)
advcl(fail-20, die-31)
case(shouting-35, Like-33)
det(shouting-35, the-34)
nmod:like(die-31, shouting-35)
case(backstay-38, of-36)
det(backstay-38, a-37)
nmod:of(shouting-35, backstay-38)
case(gale-41, in-39)
det(gale-41, a-40)
nmod:in(die-31, gale-41)

(ROOT
  (FRAG
    (PP (IN With)
      (NP
        (NP (JJ my) ('' '') (NNS _))
        (VP (VBN Hya))))
    (. !)))

case(_-4, With-1)
amod(_-4, my-2)
root(ROOT-0, _-4)
acl(_-4, Hya-5)

(ROOT
  (FRAG
    (NP (NNP Heeya))
    (. !)))

root(ROOT-0, Heeya-1)

(ROOT
  (FRAG
    (NP (NNP Heeya))
    (. !)))

root(ROOT-0, Heeya-1)

(ROOT
  (S
    (VP (VB Hullah))
    (. !)))

root(ROOT-0, Hullah-1)

(ROOT
  (S
    (VP (VB Haul))
    (. !)))

root(ROOT-0, Haul-1)

(ROOT
  (NP
    (NP (NNP _) ('' '') (NNP -LSB-) (NNP O))
    (NP
      (NP (DT the) (NN green))
      (NP (DT that) (JJ thunders)
        (NAC (NNP aft)
          (PP (IN along)
            (NP (DT the) (NN deck))
            (. !)))
        (NN -RSB-)))))

compound(O-4, _-1)
compound(O-4, -LSB--3)
root(ROOT-0, O-4)
det(green-6, the-5)
dep(O-4, green-6)
det(-RSB--14, that-7)
amod(-RSB--14, thunders-8)
dep(-RSB--14, aft-9)
case(deck-12, along-10)
det(deck-12, the-11)
nmod:along(aft-9, deck-12)
dep(green-6, -RSB--14)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (ADJP (JJ sick)
      (S
        (VP (VBG o) ('' ')
          (NP (NNS towns)
            (CC and)
            (NNS men)))))
    (. ?)))

cop(sick-3, Are-1)
nsubj(sick-3, you-2)
root(ROOT-0, sick-3)
dep(sick-3, o-4)
dobj(o-4, towns-6)
cc(towns-6, and-7)
dobj(o-4, men-8)
conj:and(towns-6, men-8)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD must)
        (VP (VB sign)
          (CC and)
          (VB sail)
          (ADVP (RB again)))))
    (, ,) (IN For)
    (S
      (NP (PRP it))
      (VP (VBZ 's) (`` ``)
        (NP
          (NP (NNP Johnny) (NNP Bowlegs))
          (, ,)
          (NP (NN pack) (PRP$ your) (NN kit))
          (CC and)
          (NP (NN trek)))))
    (. !) ('' '')))

nsubj(sign-3, You-1)
nsubj(sail-5, You-1)
aux(sign-3, must-2)
root(ROOT-0, sign-3)
cc(sign-3, and-4)
conj:and(sign-3, sail-5)
advmod(sign-3, again-6)
dep(sign-3, For-8)
nsubj(Bowlegs-13, it-9)
cop(Bowlegs-13, 's-10)
compound(Bowlegs-13, Johnny-12)
parataxis(sign-3, Bowlegs-13)
compound(kit-17, pack-15)
nmod:poss(kit-17, your-16)
parataxis(sign-3, kit-17)
conj:and(Bowlegs-13, kit-17)
cc(Bowlegs-13, and-18)
parataxis(sign-3, trek-19)
conj:and(Bowlegs-13, trek-19)

(ROOT
  (S
    (PP (IN Through)
      (NP
        (NP (DT the) (NN gorge))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ gives)
              (NP
                (NP (DT the) (NNS stars))
                (PP (IN at)
                  (NP (NN noon-day))))
              (NP
                (NP
                  (ADJP
                    (ADJP (JJ clear))
                    (PRN (: --)
                      (PP (IN Up)
                        (NP
                          (NP (DT the) (NN pass))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBZ packs)
                                (NP (DT the) (NN scud))
                                (PP (IN beneath)
                                  (NP (PRP$ our) (NN wheel))))))))
                      (: --)))
                  (NNP Round))
                (NP
                  (NP (DT the) (NN bluff))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ sinks)
                        (NP (PRP$ her) (CD thousand) (NN fathom) (NN sheer))))))
                (: --)
                (NP (NNP Down)
                  (NX
                    (NP
                      (NP (DT the) (NN valley))
                      (PP (IN with)
                        (NP (PRP$ our) (JJ guttering) (NNS brakes) (NN asqueal))))
                    (: :)
                    (SBAR
                      (WHADVP (WRB Where))
                      (S
                        (NP (DT the) (NN trestle))
                        (VP (VBZ groans))))))
                (CC and)
                (NP
                  (NP (NNS quivers))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN snow))
                      (, ,)
                      (SBAR
                        (WHADVP (WRB Where))
                        (S
                          (S
                            (NP (DT the) (JJ many-shedded) (NNS levels))
                            (VP (VBP loop)
                              (CC and)
                              (VBP twine)))
                          (, ,) (IN So)
                          (S
                            (NP (PRP I))
                            (VP (VBP lead)
                              (NP (PRP$ my) (JJ reckless) (NNS children))
                              (PP (IN from)
                                (PP (IN below)
                                  (NP (NNP Till)))))))))))))))))
    (NP (PRP we))
    (VP (VBP sing)
      (NP
        (NP (DT the) (NN Song))
        (PP (IN of)
          (NP (NNP Roland))))
      (PP (TO to)
        (NP (DT the) (NN pine))))
    (. .)))

case(gorge-3, Through-1)
det(gorge-3, the-2)
nsubj(gives-5, gorge-3)
nmod:through(sing-70, gorge-3)
ref(gorge-3, that-4)
acl:relcl(gorge-3, gives-5)
det(stars-7, the-6)
iobj(gives-5, stars-7)
case(noon-day-9, at-8)
nmod:at(stars-7, noon-day-9)
amod(Round-23, clear-10)
case(pass-14, Up-12)
det(pass-14, the-13)
dep(clear-10, pass-14)
nsubj(packs-16, pass-14)
ref(pass-14, that-15)
acl:relcl(pass-14, packs-16)
det(scud-18, the-17)
dobj(packs-16, scud-18)
case(wheel-21, beneath-19)
nmod:poss(wheel-21, our-20)
nmod:beneath(packs-16, wheel-21)
dobj(gives-5, Round-23)
det(bluff-25, the-24)
dep(Round-23, bluff-25)
nsubj(sinks-27, bluff-25)
ref(bluff-25, that-26)
acl:relcl(bluff-25, sinks-27)
nmod:poss(sheer-31, her-28)
nummod(sheer-31, thousand-29)
compound(sheer-31, fathom-30)
dobj(sinks-27, sheer-31)
dep(valley-35, Down-33)
det(valley-35, the-34)
dobj(gives-5, valley-35)
conj:and(Round-23, valley-35)
case(asqueal-40, with-36)
nmod:poss(asqueal-40, our-37)
amod(asqueal-40, guttering-38)
compound(asqueal-40, brakes-39)
nmod:with(valley-35, asqueal-40)
advmod(groans-45, Where-42)
det(trestle-44, the-43)
nsubj(groans-45, trestle-44)
dep(valley-35, groans-45)
cc(Round-23, and-46)
dobj(gives-5, quivers-47)
conj:and(Round-23, quivers-47)
case(snow-50, in-48)
det(snow-50, the-49)
nmod:in(quivers-47, snow-50)
advmod(loop-56, Where-52)
det(levels-55, the-53)
amod(levels-55, many-shedded-54)
nsubj(loop-56, levels-55)
nsubj(twine-58, levels-55)
acl:relcl(snow-50, loop-56)
cc(loop-56, and-57)
acl:relcl(snow-50, twine-58)
conj:and(loop-56, twine-58)
dep(loop-56, So-60)
nsubj(lead-62, I-61)
parataxis(loop-56, lead-62)
nmod:poss(children-65, my-63)
amod(children-65, reckless-64)
dobj(lead-62, children-65)
case(Till-68, from-66)
case(Till-68, below-67)
nmod:below(lead-62, Till-68)
nsubj(sing-70, we-69)
root(ROOT-0, sing-70)
det(Song-72, the-71)
dobj(sing-70, Song-72)
case(Roland-74, of-73)
nmod:of(Song-72, Roland-74)
case(pine-77, to-75)
det(pine-77, the-76)
nmod:to(sing-70, pine-77)

(ROOT
  (S
    (FRAG
      (PP (IN With)
        (NP (PRP$ my))))
    ('' '')
    (NP (NNP _))
    (VP (VBZ Tinka-tinka-tinka-tinka-tink))
    (. !)))

case(my-2, With-1)
dep(Tinka-tinka-tinka-tinka-tink-5, my-2)
nsubj(Tinka-tinka-tinka-tinka-tink-5, _-4)
root(ROOT-0, Tinka-tinka-tinka-tinka-tink-5)

(ROOT
  (S
    (NP
      (NP (NNP _) ('' '') (NNP -LSB-))
      (SBAR
        (FRAG (CC And)
          (NP (DT the) (NN axe)
            (SBAR
              (S
                (VP (VBZ has)
                  (VP (VBN cleared)
                    (NP (DT the) (NN mountain) (, ,) (NN croup)
                      (CC and)
                      (NN crest)))))))
          (. !))))
    (VP (VBZ -RSB-))))

compound(-LSB--3, _-1)
nsubj(-RSB--16, -LSB--3)
cc(axe-6, And-4)
det(axe-6, the-5)
dep(-LSB--3, axe-6)
aux(cleared-8, has-7)
ccomp(axe-6, cleared-8)
det(mountain-10, the-9)
dobj(cleared-8, mountain-10)
dobj(cleared-8, croup-12)
conj:and(mountain-10, croup-12)
cc(mountain-10, and-13)
dobj(cleared-8, crest-14)
conj:and(mountain-10, crest-14)
root(ROOT-0, -RSB--16)

(ROOT
  (S (IN So)
    (NP (PRP we))
    (VP (VBP ride)
      (SBAR
        (S
          (NP (DT the) (NN iron))
          (VP (VBZ stallions)
            (PRT (RP down))
            (S
              (VP (TO to)
                (VP (VB drink) (, ,)
                  (PP (IN Through)
                    (NP (DT the) (NNS canyons)))
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NNS waters))
                      (PP (IN of)
                        (NP (DT the) (NNP West))))))))))))
    (. !)))

dep(ride-3, So-1)
nsubj(ride-3, we-2)
root(ROOT-0, ride-3)
det(iron-5, the-4)
nsubj(stallions-6, iron-5)
nsubj:xsubj(drink-9, iron-5)
ccomp(ride-3, stallions-6)
compound:prt(stallions-6, down-7)
mark(drink-9, to-8)
xcomp(stallions-6, drink-9)
case(canyons-13, Through-11)
det(canyons-13, the-12)
nmod:through(drink-9, canyons-13)
case(waters-16, to-14)
det(waters-16, the-15)
nmod:to(drink-9, waters-16)
case(West-19, of-17)
det(West-19, the-18)
nmod:of(waters-16, West-19)

(ROOT
  (S (CC And)
    (S
      (NP
        (NP (DT the) (NNS tunes))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP mean)
              (ADVP (RB so) (RB much))
              (PP (TO to)
                (NP (PRP you)))
              (ADVP (RB alone)))))
        (: --)
        (NP
          (NP (JJ Common) (NNS tunes))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP make)
                (S
                  (NP (PRP you))
                  (VP (VB choke)
                    (CC and)
                    (VB blow)
                    (NP (PRP$ your) (NN nose))))))))
        (, ,)
        (NP
          (NP (NNP Vulgar) (NNS tunes))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP bring)
                (NP
                  (NP (DT the) (NN laugh))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ brings)
                        (NP
                          (NP (DT the) (NN groan))
                          (: --)
                          (S
                            (NP (PRP I))
                            (VP (MD can)
                              (VP (VB rip)
                                (NP (PRP$ your) (JJ very) (NNS heartstrings))
                                (PRT (RP out))
                                (PP (IN with)
                                  (NP (DT those)))))))))))))))
        (: ;))
      (PP (IN With)
        (NP
          (NP (DT the) (NN feasting))
          (, ,)
          (CC and)
          (NP (DT the) (NN folly))
          (, ,)
          (CC and)
          (NP (DT the) (NN fun))
          (: --))))
    (CC And)
    (S
      (NP
        (NP
          (NP (DT the) (NN lying))
          (, ,)
          (CC and)
          (NP (DT the) (NN lusting))
          (, ,))
        (CC and)
        (NP (DT the) (NN drink)))
      (, ,)
      (CC And)
      (NP (DT the) (NN merry))
      (VP (VBP play)
        (SBAR (IN that)
          (S
            (VP (VBZ drops)
              (NP (PRP you))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (VBP 're)
                    (VP (VBN done)))))
              (, ,)
              (PP (TO To)
                (NP
                  (NP (DT the) (NNS thoughts))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP burn)
                        (PP (IN like)
                          (NP (NNS irons)))
                        (SBAR (IN if)
                          (S
                            (NP (PRP you))
                            (VP (VBP think))))))))))))))
    (. .)))

cc(tunes-3, And-1)
det(tunes-3, the-2)
root(ROOT-0, tunes-3)
nsubj(mean-5, tunes-3)
ref(tunes-3, that-4)
acl:relcl(tunes-3, mean-5)
advmod(much-7, so-6)
advmod(mean-5, much-7)
case(you-9, to-8)
nmod:to(mean-5, you-9)
advmod(mean-5, alone-10)
amod(tunes-13, Common-12)
dep(tunes-3, tunes-13)
nsubj(make-15, tunes-13)
ref(tunes-13, that-14)
acl:relcl(tunes-13, make-15)
nsubj(choke-17, you-16)
nsubj(blow-19, you-16)
ccomp(make-15, choke-17)
cc(choke-17, and-18)
ccomp(make-15, blow-19)
conj:and(choke-17, blow-19)
nmod:poss(nose-21, your-20)
dobj(choke-17, nose-21)
compound(tunes-24, Vulgar-23)
appos(tunes-3, tunes-24)
nsubj(bring-26, tunes-24)
ref(tunes-24, that-25)
acl:relcl(tunes-24, bring-26)
det(laugh-28, the-27)
dobj(bring-26, laugh-28)
nsubj(brings-30, laugh-28)
ref(laugh-28, that-29)
acl:relcl(laugh-28, brings-30)
det(groan-32, the-31)
dobj(brings-30, groan-32)
nsubj(rip-36, I-34)
aux(rip-36, can-35)
dep(groan-32, rip-36)
nmod:poss(heartstrings-39, your-37)
amod(heartstrings-39, very-38)
dobj(rip-36, heartstrings-39)
compound:prt(rip-36, out-40)
case(those-42, with-41)
nmod:with(rip-36, those-42)
case(feasting-46, With-44)
det(feasting-46, the-45)
dep(tunes-3, feasting-46)
cc(feasting-46, and-48)
det(folly-50, the-49)
dep(tunes-3, folly-50)
conj:and(feasting-46, folly-50)
cc(feasting-46, and-52)
det(fun-54, the-53)
dep(tunes-3, fun-54)
conj:and(feasting-46, fun-54)
cc(tunes-3, And-56)
det(lying-58, the-57)
nsubj(play-71, lying-58)
cc(lying-58, and-60)
det(lusting-62, the-61)
conj:and(lying-58, lusting-62)
nsubj(play-71, lusting-62)
cc(lying-58, and-64)
det(drink-66, the-65)
conj:and(lying-58, drink-66)
nsubj(play-71, drink-66)
cc(play-71, And-68)
det(merry-70, the-69)
conj:and(tunes-3, merry-70)
conj:and(play-71, merry-70)
conj:and(tunes-3, play-71)
nsubj(mean-5, play-71)
mark(drops-73, that-72)
ccomp(play-71, drops-73)
dobj(drops-73, you-74)
advmod(done-79, when-76)
nsubjpass(done-79, you-77)
auxpass(done-79, 're-78)
advcl(drops-73, done-79)
case(thoughts-83, To-81)
det(thoughts-83, the-82)
nmod:to(drops-73, thoughts-83)
nsubj(burn-85, thoughts-83)
ref(thoughts-83, that-84)
acl:relcl(thoughts-83, burn-85)
case(irons-87, like-86)
nmod:like(burn-85, irons-87)
mark(think-90, if-88)
nsubj(think-90, you-89)
advcl(burn-85, think-90)

(ROOT
  (S
    (FRAG
      (PP (IN With)
        (NP (PRP$ my))))
    ('' '')
    (NP (NNP _))
    (VP (VBZ Plunka-lunka-lunka-lunka-lunk))
    (. !)))

case(my-2, With-1)
dep(Plunka-lunka-lunka-lunka-lunk-5, my-2)
nsubj(Plunka-lunka-lunka-lunka-lunk-5, _-4)
root(ROOT-0, Plunka-lunka-lunka-lunka-lunk-5)

(ROOT
  (SINV
    (VP (VBN _) ('' '')
      (NP (RB Here)))
    (VP (VBZ 's)
      (VP
        (NP (DT a) (RB trifle))
        (PP (IN on)
          (NP
            (NP (NN account))
            (PP (IN of)
              (NP
                (NP (NN pleasure) (NN past))
                (, ,)
                (NP (NNP Ere))))))))
    (NP (DT the) (NN wit)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD made)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP win)
                  (SBAR
                    (S
                      (VP (VBZ gives)
                        (NP (PRP you))
                        (NP (NNS eyes)
                          (S
                            (VP (TO to)
                              (VP (VB see)
                                (NP (PRP$ your) (NN sin))
                                (FRAG (CC And)
                                  (NP
                                    (NP (DT the) (JJR heavier) (NN repentance))
                                    (PP (IN at)
                                      (NP (DT the) (JJ last))))
                                  (. !))))))))))))))))))

root(ROOT-0, _-1)
dobj(_-1, Here-3)
aux(trifle-6, 's-4)
det(trifle-6, a-5)
auxpass(_-1, trifle-6)
case(past-11, on-7)
mwe(on-7, account-8)
mwe(on-7, of-9)
compound(past-11, pleasure-10)
nmod:on_account_of(trifle-6, past-11)
appos(past-11, Ere-13)
det(wit-15, the-14)
nsubjpass(_-1, wit-15)
nsubj(made-17, that-16)
ccomp(wit-15, made-17)
nsubj(win-19, you-18)
ccomp(made-17, win-19)
ccomp(win-19, gives-20)
iobj(gives-20, you-21)
dobj(gives-20, eyes-22)
mark(see-24, to-23)
acl(eyes-22, see-24)
nmod:poss(sin-26, your-25)
dobj(see-24, sin-26)
cc(repentance-30, And-27)
det(repentance-30, the-28)
amod(repentance-30, heavier-29)
dep(see-24, repentance-30)
case(last-33, at-31)
det(last-33, the-32)
nmod:at(repentance-30, last-33)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (DT the) (NN organ))
          (VP (VB moan)
            (NP (PRP$ her) (NN sorrow))
            (PP (TO to)
              (NP (DT the) (NN roof)))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN told)
          (S
            (NP (DT the) (JJ naked) (NNS stars))
            (NP
              (NP (DT the) (NN Grief))
              (PP (IN of)
                (NP (NN Man))))))))
    (. !)))

root(ROOT-0, Let-1)
det(organ-3, the-2)
nsubj(moan-4, organ-3)
ccomp(Let-1, moan-4)
nmod:poss(sorrow-6, her-5)
dobj(moan-4, sorrow-6)
case(roof-9, to-7)
det(roof-9, the-8)
nmod:to(moan-4, roof-9)
nsubj(told-13, I-11)
aux(told-13, have-12)
parataxis(Let-1, told-13)
det(stars-16, the-14)
amod(stars-16, naked-15)
nsubj(Grief-18, stars-16)
det(Grief-18, the-17)
xcomp(told-13, Grief-18)
case(Man-20, of-19)
nmod:of(Grief-18, Man-20)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (DT the) (NN trumpets))
          (VP (VB snare)
            (NP (DT the) (NN foeman))
            (PP (TO to)
              (NP (DT the) (NN proof)))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP
          (VP (VBN known)
            (NP (NNP Defeat)))
          (, ,)
          (CC and)
          (VP (VBN mocked)
            (NP (PRP it))
            (SBAR (IN as)
              (S
                (NP (PRP we))
                (VP (VBD ran))))))))
    (. !)))

root(ROOT-0, Let-1)
det(trumpets-3, the-2)
nsubj(snare-4, trumpets-3)
ccomp(Let-1, snare-4)
det(foeman-6, the-5)
dobj(snare-4, foeman-6)
case(proof-9, to-7)
det(proof-9, the-8)
nmod:to(snare-4, proof-9)
nsubj(known-13, I-11)
nsubj(mocked-17, I-11)
aux(known-13, have-12)
parataxis(Let-1, known-13)
dobj(known-13, Defeat-14)
cc(known-13, and-16)
parataxis(Let-1, mocked-17)
conj:and(known-13, mocked-17)
dobj(mocked-17, it-18)
mark(ran-21, as-19)
nsubj(ran-21, we-20)
advcl(mocked-17, ran-21)

(ROOT
  (SQ
    (S
      (S
        (NP (PRP$ My) (JJ bray) (NN ye))
        (VP (MD may) (RB not)
          (VP (VB alter)
            (NP (CC nor)
              (NN mistake))
            (SBAR
              (WHADVP (WRB When))
              (S
                (NP (PRP I))
                (VP (VBP stand)
                  (S
                    (VP (TO to)
                      (VP (VB jeer)
                        (NP
                          (NP (DT the) (JJ fatted) (NN Soul))
                          (PP (IN of)
                            (NP (NNS Things)))))))))))))
      (, ,)
      (CC But)
      (S
        (NP
          (NP (DT the) (NN Song))
          (PP (IN of)
            (NP (NNP Lost))))
        (VP (VBZ Endeavour)
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBP make)))))))
    (, ,)
    (SQ (VBZ Is)
      (NP (PRP it))
      (VP (VBN hidden)
        (PP (IN in)
          (NP
            (NP (DT the) (NN twanging))
            (PP (IN of)
              (NP (DT the) (NNS strings)))))))
    (. ?)))

nmod:poss(ye-3, My-1)
amod(ye-3, bray-2)
nsubj(alter-6, ye-3)
aux(alter-6, may-4)
neg(alter-6, not-5)
dep(hidden-32, alter-6)
cc(mistake-8, nor-7)
dobj(alter-6, mistake-8)
advmod(stand-11, When-9)
nsubj(stand-11, I-10)
nsubj:xsubj(jeer-13, I-10)
advcl(alter-6, stand-11)
mark(jeer-13, to-12)
xcomp(stand-11, jeer-13)
det(Soul-16, the-14)
amod(Soul-16, fatted-15)
dobj(jeer-13, Soul-16)
case(Things-18, of-17)
nmod:of(Soul-16, Things-18)
cc(alter-6, But-20)
det(Song-22, the-21)
nsubj(Endeavour-25, Song-22)
case(Lost-24, of-23)
nmod:of(Song-22, Lost-24)
conj:but(alter-6, Endeavour-25)
dep(hidden-32, Endeavour-25)
mark(make-28, that-26)
nsubj(make-28, I-27)
ccomp(Endeavour-25, make-28)
auxpass(hidden-32, Is-30)
nsubjpass(hidden-32, it-31)
root(ROOT-0, hidden-32)
case(twanging-35, in-33)
det(twanging-35, the-34)
nmod:in(hidden-32, twanging-35)
case(strings-38, of-36)
det(strings-38, the-37)
nmod:of(twanging-35, strings-38)

(ROOT
  (S
    (FRAG
      (PP (IN With)
        (NP (PRP$ my))))
    ('' '')
    (NP (NNP _))
    (VP (VBZ Ta-ra-rara-rara-ra-ra-rrrp))
    (. !)))

case(my-2, With-1)
dep(Ta-ra-rara-rara-ra-ra-rrrp-5, my-2)
nsubj(Ta-ra-rara-rara-ra-ra-rrrp-5, _-4)
root(ROOT-0, Ta-ra-rara-rara-ra-ra-rrrp-5)

(ROOT
  (VP
    (VP (VB _) ('' '')
      (NP
        (NP (NNP -LSB-))
        (S
          (VP (NNP Is)
            (S
              (NP (PRP it))
              (ADJP (JJ naught)
                (PP (TO to)
                  (NP (PRP you)))))))))
    (IN that)
    (VP (VB hear)
      (CC and)
      (VB pass)
      (NP (PRP me))
      (PP (IN by)))
    (. ?)
    (FRAG
      (ADJP (JJ -RSB-)))))

root(ROOT-0, _-1)
dobj(_-1, -LSB--3)
dep(-LSB--3, Is-4)
nsubj(naught-6, it-5)
xcomp(Is-4, naught-6)
case(you-8, to-7)
nmod:to(naught-6, you-8)
dep(_-1, that-9)
dep(_-1, hear-10)
cc(hear-10, and-11)
dep(_-1, pass-12)
conj:and(hear-10, pass-12)
dobj(hear-10, me-13)
nmod(hear-10, by-14)
dep(_-1, -RSB--16)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP (DT the) (NN word))
        (: --)
        (NP (DT the) (NN word)))
      (VP (VBZ is)
        (NP
          (NP (NN mine))
          (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT the) (NN order))
              (VP (VBZ moves)
                (NP (DT the) (NN line))))))))
    (CC And)
    (S
      (NP (DT the)
        (ADJP (JJ lean) (, ,) (VBN locked))
        (NNS ranks))
      (VP (VBP go)
        (ADVP (RB roaring) (RB down))
        (S
          (VP (TO to)
            (VP (VB die))))))
    (. .)))

cc(mine-8, But-1)
det(word-3, the-2)
nsubj(mine-8, word-3)
det(word-6, the-5)
dep(word-3, word-6)
cop(mine-8, is-7)
root(ROOT-0, mine-8)
advmod(moves-13, when-10)
det(order-12, the-11)
nsubj(moves-13, order-12)
acl:relcl(mine-8, moves-13)
det(line-15, the-14)
dobj(moves-13, line-15)
cc(mine-8, And-16)
det(ranks-21, the-17)
dep(locked-20, lean-18)
amod(ranks-21, locked-20)
nsubj(go-22, ranks-21)
nsubj:xsubj(die-26, ranks-21)
conj:but(mine-8, go-22)
advmod(down-24, roaring-23)
advmod(go-22, down-24)
mark(die-26, to-25)
xcomp(go-22, die-26)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP
          (NP (DT the)
            (ADJP (JJ driven))
            (NN dust))
          (PP (IN of)
            (NP (NN speech)))))
      (NP (PRP I))
      (VP (VBP make)
        (NP (DT a) (NN flame))))
    (CC And)
    (S
      (NP
        (NP (DT a) (NN scourge))
        (PP (IN of)
          (NP
            (NP (JJ broken) (NNS withes))
            (SBAR (IN that)
              (S
                (NP (NNS men))
                (VP (VBD let)))))))
      (VP (VBP fall)
        (PRN (: :)
          (PP (IN For)
            (NP
              (NP (DT the) (NNS words))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD had)
                    (NP (DT no) (NN honour))
                    (SBAR (IN till)
                      (S
                        (NP (PRP I))
                        (VP (VBD came)))))))))
          (: --))
        (NP (NNP Lo))))
    (. !)))

case(dust-4, Of-1)
det(dust-4, the-2)
amod(dust-4, driven-3)
nmod:of(make-8, dust-4)
case(speech-6, of-5)
nmod:of(dust-4, speech-6)
nsubj(make-8, I-7)
root(ROOT-0, make-8)
det(flame-10, a-9)
dobj(make-8, flame-10)
cc(make-8, And-11)
det(scourge-13, a-12)
nsubj(fall-20, scourge-13)
case(withes-16, of-14)
amod(withes-16, broken-15)
nmod:of(scourge-13, withes-16)
mark(let-19, that-17)
nsubj(let-19, men-18)
dep(withes-16, let-19)
conj:and(make-8, fall-20)
case(words-24, For-22)
det(words-24, the-23)
dep(fall-20, words-24)
nsubj(had-26, words-24)
ref(words-24, that-25)
acl:relcl(words-24, had-26)
neg(honour-28, no-27)
dobj(had-26, honour-28)
mark(came-31, till-29)
nsubj(came-31, I-30)
advcl(had-26, came-31)
dobj(fall-20, Lo-33)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP raise)
      (NP (PRP them))
      (PP (IN into)
        (NP
          (NP (NN honour))
          (PP (IN over)
            (NP (DT all))))))
    (. !)))

nsubj(raise-2, I-1)
root(ROOT-0, raise-2)
dobj(raise-2, them-3)
case(honour-5, into-4)
nmod:into(raise-2, honour-5)
case(all-7, over-6)
nmod:over(honour-5, all-7)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP
          (NP (DT the) (NN wisdom))
          (PP (IN of)
            (NP (DT the) (NNS centuries)))))
      (NP (PRP I))
      (VP (VBP speak)
        (PRN (: --)
          (PP (TO To)
            (NP
              (NP (DT the) (NN tune))
              (PP (IN of)
                (NP
                  (NP (NN yestermorn))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBD set)
                        (NP (DT the) (NN truth)))))))))
          (: --))
        (NP (PRP I))))
    (, ,)
    (S
      (NP
        (NP (DT the) (NN joy))
        (PP (IN of)
          (NP
            (NP (NN life) (NN unquestioned))
            (PRN (: --)
              (NP
                (NP (PRP I))
                (, ,)
                (NP (DT the) (JJ Greek)))
              (: --)))))
      (NP (PRP I)))
    (, ,)
    (S
      (NP (DT the) (JJ everlasting) (JJ Wonder) (NN Song))
      (PP (IN of)
        (NP (NNP Youth))))
    (. !)))

case(wisdom-3, By-1)
det(wisdom-3, the-2)
nmod:by(speak-8, wisdom-3)
case(centuries-6, of-4)
det(centuries-6, the-5)
nmod:of(wisdom-3, centuries-6)
nsubj(speak-8, I-7)
root(ROOT-0, speak-8)
case(tune-12, To-10)
det(tune-12, the-11)
dep(speak-8, tune-12)
case(yestermorn-14, of-13)
nmod:of(tune-12, yestermorn-14)
nsubj(set-16, I-15)
acl:relcl(yestermorn-14, set-16)
det(truth-18, the-17)
dobj(set-16, truth-18)
dobj(speak-8, I-20)
det(joy-23, the-22)
dep(I-33, joy-23)
case(unquestioned-26, of-24)
compound(unquestioned-26, life-25)
nmod:of(joy-23, unquestioned-26)
dep(unquestioned-26, I-28)
det(Greek-31, the-30)
appos(I-28, Greek-31)
parataxis(speak-8, I-33)
det(Song-38, the-35)
amod(Song-38, everlasting-36)
amod(Song-38, Wonder-37)
parataxis(speak-8, Song-38)
case(Youth-40, of-39)
dep(Song-38, Youth-40)

(ROOT
  (S
    (FRAG
      (PP (IN With)
        (NP (PRP$ my))))
    ('' '')
    (NP (NNP _))
    (VP (VBZ Tinka-tinka-tinka-tinka-tink))
    (. !)))

case(my-2, With-1)
dep(Tinka-tinka-tinka-tinka-tink-5, my-2)
nsubj(Tinka-tinka-tinka-tinka-tink-5, _-4)
root(ROOT-0, Tinka-tinka-tinka-tinka-tink-5)

(ROOT
  (SQ
    (VP (VB _) ('' '')
      (NP
        (NP (NNP -LSB-))
        (SBAR
          (WHNP (WP What))
          (S
            (VP (VBP d'ye)
              (NP (NN lack))))))
      (, ,)
      (NP (PRP$ my) (JJ noble) (NNS masters)))
    (. ?)))

root(ROOT-0, _-1)
dobj(_-1, -LSB--3)
nsubj(d'ye-5, -LSB--3)
ref(-LSB--3, What-4)
acl:relcl(-LSB--3, d'ye-5)
dobj(d'ye-5, lack-6)
nmod:poss(masters-10, my-8)
amod(masters-10, noble-9)
dobj(_-1, masters-10)

(ROOT
  (X
    (X (WP What))
    (NP
      (SQ
        (VP (VB d'ye)
          (NP (NN lack)))
        (. ?))
      (VP (VB -RSB-)))))

dep(d'ye-2, What-1)
root(ROOT-0, d'ye-2)
dobj(d'ye-2, lack-3)
dep(d'ye-2, -RSB--5)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBP draw)
      (SBAR
        (S
          (NP (DT the) (NN world))
          (ADVP (RB together))
          (VP (VBP link)
            (PP (IN by)
              (NP (NN link)))
            (: :)
            (UCP
              (NP (NNP Yea))
              (, ,)
              (PP (IN from)
                (NP
                  (NP (NNP Delos))
                  (ADVP (RB up)
                    (PP (TO to)
                      (NP (NNP Limerick))))))
              (CC and)
              (ADVP (RB back)))))))
    (. !)))

dep(draw-3, So-1)
nsubj(draw-3, I-2)
root(ROOT-0, draw-3)
det(world-5, the-4)
nsubj(link-7, world-5)
advmod(link-7, together-6)
ccomp(draw-3, link-7)
case(link-9, by-8)
nmod:by(link-7, link-9)
dobj(link-7, Yea-11)
case(Delos-14, from-13)
dobj(link-7, Delos-14)
conj:and(Yea-11, Delos-14)
advmod(Delos-14, up-15)
case(Limerick-17, to-16)
nmod:to(up-15, Limerick-17)
cc(Yea-11, and-18)
advmod(Yea-11, back-19)

(ROOT
  (S
    (S
      (NP (DT THE) (NNP LINER) (NNP SHE))
      (VP (VBZ 'S)
        (NP
          (NP
            (NP (DT A) (NNP LADY) (NNP The) (NNP Liner))
            (SBAR
              (S
                (NP (PRP she))
                (VP
                  (VP (VBZ 's)
                    (NP (DT a) (NN lady)))
                  (, ,)
                  (NP
                    (NP (DT an))
                    ('' ')
                    (SBAR
                      (S
                        (NP (PRP she))
                        (ADVP (RB never))
                        (VP
                          (VP (VBZ looks))
                          (CC nor)
                          (`` `)
                          (VP (VBZ eeds))))))))))
          (: --)
          (NP (DT The)
            (NP (NNP Man-o) (POS '))))))
    (: -)
    (S
      (NP
        (NP (NNP War) (POS 's))
        (`` `)
        (VP (VBN er) (`` `)
          (NP
            (NP (NN usband))
            (, ,)
            (NP (DT an)))
          ('' '))
        ('' ') (NN e))
      (VP (VBZ gives) (`` `)
        (NP
          (NP (NN er))
          (SBAR
            (WHNP (DT all))
            (S
              (NP (PRP she))
              (VP (VBZ needs)))))))
    (: ;)
    (CC But)
    (, ,)
    (S
      (INTJ (UH oh))
      (, ,)
      (NP
        (NP (DT the) (JJ little) (NNS cargo-boats))
        (, ,)
        (NP (DT that)))
      (VP (VBP sail)
        (NP (DT the) (JJ wet) (JJ seas) (NN roun) ('' '))))
    (, ,)
    (S
      (NP (PRP They))
      (VP (VBP 're)
        (NP
          (NP (RB just) (DT the) (JJ same))
          (PP (IN as)
            (NP (PRP you) (DT an)))
          ('' ')
          (NP
            (NP (PRP me))
            (NP
              (NP (NN a-plyin) (POS '))
              (QP (RB up) (DT an))))
          ('' ')
          (ADVP (IN down)))))
    (. !)))

det(SHE-3, THE-1)
compound(SHE-3, LINER-2)
nsubj(Liner-8, SHE-3)
cop(Liner-8, 'S-4)
det(Liner-8, A-5)
compound(Liner-8, LADY-6)
compound(Liner-8, The-7)
root(ROOT-0, Liner-8)
nsubj(lady-12, she-9)
cop(lady-12, 's-10)
det(lady-12, a-11)
acl:relcl(Liner-8, lady-12)
dobj(lady-12, an-14)
nsubj(looks-18, she-16)
nsubj(eeds-21, she-16)
neg(looks-18, never-17)
acl:relcl(an-14, looks-18)
cc(looks-18, nor-19)
acl:relcl(an-14, eeds-21)
conj:nor(looks-18, eeds-21)
det(Man-o-24, The-23)
dep(Liner-8, Man-o-24)
case(Man-o-24, '-25)
nmod:poss(e-37, War-27)
case(War-27, 's-28)
acl(e-37, er-30)
dobj(er-30, usband-32)
appos(usband-32, an-34)
nsubj(gives-38, e-37)
conj:But(Liner-8, gives-38)
dobj(gives-38, er-40)
dobj(needs-43, all-41)
nsubj(needs-43, she-42)
acl:relcl(er-40, needs-43)
cc(Liner-8, But-45)
discourse(sail-54, oh-47)
det(cargo-boats-51, the-49)
amod(cargo-boats-51, little-50)
nsubj(sail-54, cargo-boats-51)
appos(cargo-boats-51, that-53)
conj:But(Liner-8, sail-54)
det(roun-58, the-55)
amod(roun-58, wet-56)
amod(roun-58, seas-57)
dobj(sail-54, roun-58)
nsubj(same-65, They-61)
cop(same-65, 're-62)
advmod(same-65, just-63)
det(same-65, the-64)
conj:But(Liner-8, same-65)
case(you-67, as-66)
nmod:as(same-65, you-67)
dep(you-67, an-68)
dep(same-65, me-70)
dep(me-70, a-plyin-71)
case(a-plyin-71, '-72)
advmod(an-74, up-73)
nummod(a-plyin-71, an-74)
advmod(same-65, down-76)

(ROOT
  (NP
    (NP
      (NP
        (NP (NNP Plyin) (POS '))
        (ADJP (RB up) (DT an))
        ('' ') (NN down))
      (, ,)
      (NP
        (NP (NNP Jenny))
        (, ,)
        (NP
          (NP (`` `) (JJ angin) ('' ') (NN round))
          (NP (DT the) (NNP Yard))
          (, ,)
          (ADVP (RB All)
            (NP (DT the) (NN way))
            (PP (IN by)
              (NP
                (NP (NNP Fratton) (NNP tram))
                (ADVP (RB down)
                  (PP (TO to)
                    (NP
                      (NP (NNP Portsmouth))
                      (`` `)
                      (NP (NNP Ard))
                      (: ;)
                      (NP (NNP Anythin))
                      ('' ')
                      (PP (IN for)
                        (NP (NN business)))))))))))
      (, ,))
    (, an) ('' ')
    (PRN
      (S
        (NP (PRP we))
        (VP (VBP 're)
          (VP (VBG growin) ('' ')
            (NP
              (NP (JJ old))
              (: --)
              (NP
                (NP (NNP Plyin) (POS '))
                (QP (RB up) (DT an)))
              ('' '))
            (PP (RP down))))))
    (, ,)
    (NP (NNP Jenny))
    (, ,)
    (VP (VBN waitin) ('' ')
      (PP (IN in)
        (NP (DT the) (NN cold))))
    (. !)))

nmod:poss(down-6, Plyin-1)
case(Plyin-1, '-2)
advmod(an-4, up-3)
amod(down-6, an-4)
root(ROOT-0, down-6)
appos(down-6, Jenny-8)
amod(round-13, angin-11)
appos(Jenny-8, round-13)
det(Yard-15, the-14)
dep(round-13, Yard-15)
advmod(round-13, All-17)
det(way-19, the-18)
nmod:npmod(All-17, way-19)
case(tram-22, by-20)
compound(tram-22, Fratton-21)
nmod:by(All-17, tram-22)
advmod(tram-22, down-23)
case(Portsmouth-25, to-24)
nmod:to(down-23, Portsmouth-25)
dep(Portsmouth-25, Ard-27)
dep(Portsmouth-25, Anythin-29)
case(business-32, for-31)
nmod:for(Portsmouth-25, business-32)
nsubj(growin-38, we-36)
aux(growin-38, 're-37)
parataxis(waitin-51, growin-38)
dobj(growin-38, old-40)
dep(old-40, Plyin-42)
case(Plyin-42, '-43)
advmod(an-45, up-44)
nummod(Plyin-42, an-45)
advcl(growin-38, down-47)
appos(down-6, Jenny-49)
acl(down-6, waitin-51)
case(cold-55, in-53)
det(cold-55, the-54)
nmod:in(waitin-51, cold-55)

(ROOT
  (FRAG
    (NP (DT The) (NN Liner)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBZ 's)
            (NP
              (NP (DT a) (NN lady))
              (PP (IN by)
                (NP
                  (NP (DT the) (NN paint))
                  (PP (IN upon)
                    (NP (`` `)
                      (NP
                        (NP (NN er) (NN face))
                        (, ,)
                        (NP (NNP An)))
                      ('' ')
                      (SBAR (IN if)
                        (S
                          (NP (PRP she))
                          (VP (VBZ meets)
                            (NP
                              (NP (DT an) (NN accident))
                              (SBAR
                                (S
                                  (NP (PRP they))
                                  (VP (VBP count)
                                    (S
                                      (NP (PRP it))
                                      (NP
                                        (NP (JJ sore) (NN disgrace))
                                        (: :)
                                        (NP (DT The) (NN Man-o))
                                        ('' ')))))))))))))))))))
    (: -)
    (S
      (S
        (NP
          (NP (NNP War) (POS 's))
          (`` `) (NN er))
        (`` `)
        (VP (VBD usband)))
      (, ,)
      (CC and)
      (S (`` `)
        (NP (NNP e))
        (VP (VBZ 's)
          (ADVP (RB always))
          (`` `)
          (ADJP (JJ andy)
            (PP (IN by)))
          (, ,)
          (ADVP (CC But))
          (, ,)
          (FRAG
            (INTJ (UH oh))
            (, ,)
            (NP (DT the) (JJ little) (NNS cargo-boats))))))
    (. !)))

det(Liner-2, The-1)
root(ROOT-0, Liner-2)
nsubj(lady-6, she-3)
cop(lady-6, 's-4)
det(lady-6, a-5)
ccomp(Liner-2, lady-6)
case(paint-9, by-7)
det(paint-9, the-8)
nmod:by(lady-6, paint-9)
case(face-13, upon-10)
compound(face-13, er-12)
nmod:upon(paint-9, face-13)
appos(face-13, An-15)
mark(meets-19, if-17)
nsubj(meets-19, she-18)
dep(face-13, meets-19)
det(accident-21, an-20)
dobj(meets-19, accident-21)
nsubj(count-23, they-22)
acl:relcl(accident-21, count-23)
nsubj(disgrace-26, it-24)
amod(disgrace-26, sore-25)
xcomp(count-23, disgrace-26)
det(Man-o-29, The-28)
dep(disgrace-26, Man-o-29)
nmod:poss(er-35, War-32)
case(War-32, 's-33)
nsubj(usband-37, er-35)
parataxis(Liner-2, usband-37)
cc(usband-37, and-39)
nsubj(andy-45, e-41)
cop(andy-45, 's-42)
advmod(andy-45, always-43)
parataxis(Liner-2, andy-45)
conj:and(usband-37, andy-45)
nmod(andy-45, by-46)
advmod(andy-45, But-48)
discourse(cargo-boats-54, oh-50)
det(cargo-boats-54, the-52)
amod(cargo-boats-54, little-53)
dep(andy-45, cargo-boats-54)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP 've)
      (VP (VBN got)
        (S
          (VP (TO to)
            (VP (VB load)
              (CC or)
              (VB die))))))
    (. .)))

nsubj(got-3, they-1)
nsubj:xsubj(load-5, they-1)
nsubj:xsubj(die-7, they-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
mark(load-5, to-4)
xcomp(got-3, load-5)
cc(load-5, or-6)
xcomp(got-3, die-7)
conj:or(load-5, die-7)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (DT The) (NN Liner))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBZ 's)
                (NP (DT a) (NN lady))))))
        (, ,)
        (CC and)
        (`` `)
        (NP
          (NP (NN er) (NN route))
          (SBAR
            (S
              (VP (VBZ is)
                (VP (VBN cut))))))
        (, an) ('' '))
      (VP (VBD dried)))
    (: ;)
    (S
      (NP (DT The)
        (NAC
          (NP (NNP Man-o) (POS '))
          (PP (IN -)
            (NP
              (NP (NNP War) (POS 's))
              (`` `) (NN er) (`` `)
              (NP
                (NP (NN usband))
                (, ,)
                (NP (DT an)))
              ('' '))))
        ('' ') (NN e))
      (ADVP (RB always))
      (VP (VBZ keeps)
        (PP (IN beside))))
    (: ;)
    (CC But)
    (, ,)
    (S
      (INTJ (UH oh))
      (, ,)
      (S
        (ADJP
          (ADJP
            (NP (DT the) (RB little))
            (JJ cargo-boats))
          (SBAR (IN that)
            (SINV
              (VP (`` `) (VB ave) (RB n't))
              (NP (DT any) (NN man))))))
      (, ,)
      (NP (PRP They))
      (VP (VBP 've)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP
                (VP (VB do)
                  (NP (PRP$ their) (NN business))
                  (ADVP (RB first)))
                (, ,)
                (CC and)
                (VP (VB make)
                  (NP
                    (NP (DT the) (JJS most))
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (MD can))))))))))))
    (. !)))

det(Liner-2, The-1)
nsubj(dried-16, Liner-2)
nsubj(lady-6, she-3)
cop(lady-6, 's-4)
det(lady-6, a-5)
acl:relcl(Liner-2, lady-6)
cc(Liner-2, and-8)
compound(route-11, er-10)
conj:and(Liner-2, route-11)
auxpass(cut-13, is-12)
acl:relcl(route-11, cut-13)
root(ROOT-0, dried-16)
det(e-32, The-18)
dep(e-32, Man-o-19)
case(Man-o-19, '-20)
case(er-25, --21)
nmod:poss(er-25, War-22)
case(War-22, 's-23)
nmod:-(Man-o-19, er-25)
dep(er-25, usband-27)
appos(usband-27, an-29)
nsubj(keeps-34, e-32)
advmod(keeps-34, always-33)
conj:But(dried-16, keeps-34)
nmod(keeps-34, beside-35)
cc(dried-16, But-37)
discourse(got-53, oh-39)
det(little-42, the-41)
nmod:npmod(cargo-boats-43, little-42)
ccomp(got-53, cargo-boats-43)
mark(ave-46, that-44)
dep(cargo-boats-43, ave-46)
neg(ave-46, n't-47)
det(man-49, any-48)
nsubj(ave-46, man-49)
nsubj(got-53, They-51)
nsubj:xsubj(do-55, They-51)
nsubj:xsubj(make-61, They-51)
aux(got-53, 've-52)
conj:But(dried-16, got-53)
mark(do-55, to-54)
xcomp(got-53, do-55)
nmod:poss(business-57, their-56)
dobj(do-55, business-57)
advmod(do-55, first-58)
cc(do-55, and-60)
xcomp(got-53, make-61)
conj:and(do-55, make-61)
det(most-63, the-62)
dobj(make-61, most-63)
nsubj(can-65, they-64)
acl:relcl(most-63, can-65)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN Liner))
        (SBAR
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBZ 's)
                (NP (DT a) (NN lady)))))
          (, ,)
          (CC and)
          (SBAR (IN if)
            (S
              (S
                (NP (DT a) (NN war))
                (VP (MD should)
                  (VP (VB come) (, ,)
                    (NP (DT The) (NN Man-o))
                    ('' '))))
              (: -)
              (S
                (NP
                  (NP (NNP War) (POS 's))
                  (`` `) (NN er))
                (`` `)
                (VP (VBD usband)))
              (, ,)
              (CC and)
              (`` `)
              (S
                (NP (NNP e))
                (VP (MD 'd)
                  (VP (VB bid) (`` `)
                    (NP (NN er)))))))))
      (VP (VBP stay)
        (PP (IN at)
          (NP (NN home)))))
    (: ;)
    (CC But)
    (, ,)
    (S
      (FRAG
        (INTJ (UH oh))
        (, ,)
        (NP (DT the) (JJ little) (NNS cargo-boats)))
      (NP (DT that))
      (VP (VBP fill)
        (PP (IN with)
          (NP (DT every) (NN tide)))))
    (. !)))

det(Liner-2, The-1)
nsubj(stay-33, Liner-2)
nsubj(lady-6, she-3)
cop(lady-6, 's-4)
det(lady-6, a-5)
dep(Liner-2, lady-6)
cc(lady-6, and-8)
mark(come-13, if-9)
det(war-11, a-10)
nsubj(come-13, war-11)
aux(come-13, should-12)
dep(Liner-2, come-13)
conj:and(lady-6, come-13)
det(Man-o-16, The-15)
dobj(come-13, Man-o-16)
nmod:poss(er-22, War-19)
case(War-19, 's-20)
nsubj(usband-24, er-22)
conj:and(lady-6, usband-24)
conj:and(come-13, usband-24)
cc(come-13, and-26)
nsubj(bid-30, e-28)
aux(bid-30, 'd-29)
conj:and(lady-6, bid-30)
conj:and(come-13, bid-30)
dobj(bid-30, er-32)
root(ROOT-0, stay-33)
case(home-35, at-34)
nmod:at(stay-33, home-35)
cc(stay-33, But-37)
discourse(cargo-boats-43, oh-39)
det(cargo-boats-43, the-41)
amod(cargo-boats-43, little-42)
dep(fill-45, cargo-boats-43)
nsubj(fill-45, that-44)
conj:But(stay-33, fill-45)
case(tide-48, with-46)
det(tide-48, every-47)
nmod:with(fill-45, tide-48)

(ROOT
  (S (`` `)
    (NP (NNP E))
    (VP (MD 'd) (`` `)
      (ADVP
        (ADVP (RB ave))
        (PP (TO to)
          (NP
            (QP (RB up) (DT an)))))
      ('' ')
      (VP (VB fight)
        (PP (IN for)
          (NP (PRP them)))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (NP
                (NP (NNP England) (POS 's))
                (NN pride)))))))
    (. .)))

nsubj(fight-10, E-2)
aux(fight-10, 'd-3)
advmod(fight-10, ave-5)
case(an-8, to-6)
advmod(an-8, up-7)
nmod:to(ave-5, an-8)
root(ROOT-0, fight-10)
case(them-12, for-11)
nmod:for(fight-10, them-12)
mark(pride-19, for-14)
nsubj(pride-19, they-15)
cop(pride-19, are-16)
nmod:poss(pride-19, England-17)
case(England-17, 's-18)
advcl(fight-10, pride-19)

(ROOT
  (S
    (S
      (NP (NNP The) (NNP Liner) (PRP she))
      (VP (VBZ 's)
        (NP (DT a) (NN lady))))
    (, ,)
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP she))
          (VP (VBD was) (RB n't)
            (VP (VBN made)))))
      (, ,)
      (NP (EX There))
      (ADVP (RB still))
      (VP (MD would)
        (VP (VB be)
          (NP (DT the)
            (ADJP (JJ cargo-boats)
              (PP (IN for) (`` `)
                (NP (NN ome) (DT an))
                ('' ')))
            (JJ foreign) (NN trade)))))
    (. .)))

compound(Liner-2, The-1)
nsubj(lady-6, Liner-2)
dep(Liner-2, she-3)
cop(lady-6, 's-4)
det(lady-6, a-5)
root(ROOT-0, lady-6)
cc(lady-6, but-8)
mark(made-13, if-9)
nsubjpass(made-13, she-10)
auxpass(made-13, was-11)
neg(made-13, n't-12)
advcl(trade-27, made-13)
expl(trade-27, There-15)
advmod(trade-27, still-16)
aux(trade-27, would-17)
cop(trade-27, be-18)
det(trade-27, the-19)
amod(trade-27, cargo-boats-20)
case(ome-23, for-21)
nmod:for(cargo-boats-20, ome-23)
dep(ome-23, an-24)
amod(trade-27, foreign-26)
conj:but(lady-6, trade-27)

(ROOT
  (S
    (NP
      (NP (DT The) (NN Man-o))
      ('' ') (: -)
      (SBAR
        (SBAR
          (S
            (NP
              (NP (NNP War) (POS 's))
              (`` `) (NN er))
            (`` `)
            (VP (VBD usband))))
        (, ,)
        (CC but)
        (SBAR (IN if)
          (S
            (NP (PRP we))
            (VP (VBD was) (RB n't)
              (NP (`` `)
                (NP (NN ere))
                (, ,) ('' ')
                (NP (NN E))))))))
    (VP (MD would) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB fight)
              (PP (IN at)
                (NP
                  (NP (DT all))
                  (PP (IN for)
                    (NP (`` `)
                      (NP (NN ome) (DT an))
                      ('' ') (NNS friends)))))
              (SBAR (RB so)
                (S
                  (ADJP (RB dear)))))))))
    (. .)))

det(Man-o-2, The-1)
nsubj(have-24, Man-o-2)
nsubj:xsubj(fight-26, Man-o-2)
nmod:poss(er-8, War-5)
case(War-5, 's-6)
nsubj(usband-10, er-8)
dep(Man-o-2, usband-10)
cc(usband-10, but-12)
mark(ere-18, if-13)
nsubj(ere-18, we-14)
cop(ere-18, was-15)
neg(ere-18, n't-16)
dep(Man-o-2, ere-18)
conj:but(usband-10, ere-18)
dep(ere-18, E-21)
aux(have-24, would-22)
neg(have-24, n't-23)
root(ROOT-0, have-24)
mark(fight-26, to-25)
xcomp(have-24, fight-26)
case(all-28, at-27)
nmod:at(fight-26, all-28)
case(friends-34, for-29)
compound(friends-34, ome-31)
dep(ome-31, an-32)
nmod:for(all-28, friends-34)
advmod(dear-36, so-35)
dep(fight-26, dear-36)

(ROOT
  (S
    (NP (`` `)
      (NP (NNP Ome))
      (, an) ('' ')
      (NP
        (NP (NNS friends))
        (ADJP (RB so) (VBN dear))))
    (, ,)
    (NP
      (NP (NNP Jenny))
      (, ,)
      (NP
        (NP (`` `) (JJ angin) ('' ') (NN round))
        (NP (DT the) (NNP Yard))
        (, ,)
        (ADVP (RB All)
          (NP (DT the) (NN way))
          (PP (IN by)
            (NP (NNP Fratton))))))
    (VP (VB tram)
      (ADVP (RB down)
        (PP (TO to)
          (NP (NNP Portsmouth))))
      (NP (`` `)
        (NP (NNP Ard))
        (: ;)
        (NP (NNP Anythin))
        ('' '))
      (PP (IN for)
        (NP (NN business)))
      (, ,)
      (NP
        (NP (DT an))
        ('' ')
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (NP
                (NP
                  (NP (NN growin) (POS '))
                  (JJ old))
                (: --)
                (NP (`` `)
                  (NP (NNP Ome))
                  (, an) ('' ')
                  (NP
                    (NP
                      (NP (NNS friends))
                      (ADJP (RB so) (JJ dear)))
                    (, ,)
                    (NP (NNP Jenny))
                    (, ,)
                    (VP (VBN waitin) ('' ')
                      (PP (IN in)
                        (NP (DT the) (NN cold))))))))))))
    (. !)))

nsubj(tram-23, Ome-2)
dep(Ome-2, friends-5)
advmod(dear-7, so-6)
amod(friends-5, dear-7)
nsubj(tram-23, Jenny-9)
amod(round-14, angin-12)
appos(Jenny-9, round-14)
det(Yard-16, the-15)
dep(round-14, Yard-16)
advmod(round-14, All-18)
det(way-20, the-19)
nmod:npmod(All-18, way-20)
case(Fratton-22, by-21)
nmod:by(All-18, Fratton-22)
root(ROOT-0, tram-23)
advmod(tram-23, down-24)
case(Portsmouth-26, to-25)
nmod:to(down-24, Portsmouth-26)
dobj(tram-23, Ard-28)
dep(Ard-28, Anythin-30)
case(business-33, for-32)
nmod:for(tram-23, business-33)
dobj(tram-23, an-35)
nsubj(growin-39, we-37)
cop(growin-39, 're-38)
acl:relcl(an-35, growin-39)
case(growin-39, '-40)
amod(growin-39, old-41)
dep(growin-39, Ome-44)
dep(Ome-44, friends-47)
advmod(dear-49, so-48)
amod(friends-47, dear-49)
appos(friends-47, Jenny-51)
acl(friends-47, waitin-53)
case(cold-57, in-55)
det(cold-57, the-56)
nmod:in(waitin-53, cold-57)

(ROOT
  (S
    (NP (NNP MULHOLLAND) (POS 'S))
    (VP (VBP CONTRACT)
      (SBAR
        (S
          (NP (DT The) (NN fear))
          (VP (VBD was)
            (NP (RB on)
              (NP
                (NP (DT the) (NNS cattle))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (DT the) (NN gale))
                    (VP
                      (VP (VBD was)
                        (PP (IN on)
                          (NP (DT the) (NN sea))))
                      (, ,)
                      (NP
                        (NP (NNP An))
                        ('' ')
                        (SBAR
                          (S
                            (NP (DT the) (NNS pens))
                            (VP (VBD broke)
                              (PRT (RP up))
                              (PP (IN on)
                                (NP (DT the) (JJR lower) (NN deck))))))
                        (, an) ('' ')
                        (S
                          (VP
                            (VP (VB let)
                              (S
                                (NP (DT the) (NNS creatures))
                                (ADJP (JJ free))))
                            (: --)
                            (NP
                              (NP (NNP An))
                              ('' ')
                              (SBAR
                                (S
                                  (NP (DT the) (NNS lights))
                                  (VP (VBD went)
                                    (PRT (RP out))
                                    (PP (IN on)
                                      (NP (DT the) (JJR lower) (NN deck)))))))))))))
                (, ,))
              (, an) ('' ')
              (NP
                (NP (DT no) (NN one))
                (PP (RB near) (IN but)
                  (NP (PRP me)))))))))
    (. .)))

nsubj(CONTRACT-3, MULHOLLAND-1)
case(MULHOLLAND-1, 'S-2)
root(ROOT-0, CONTRACT-3)
det(fear-5, The-4)
nsubj(cattle-9, fear-5)
cop(cattle-9, was-6)
advmod(cattle-9, on-7)
det(cattle-9, the-8)
ccomp(CONTRACT-3, cattle-9)
mark(sea-17, for-11)
det(gale-13, the-12)
nsubj(sea-17, gale-13)
cop(sea-17, was-14)
case(sea-17, on-15)
det(sea-17, the-16)
dep(cattle-9, sea-17)
dobj(sea-17, An-19)
det(pens-22, the-21)
nsubj(broke-23, pens-22)
acl:relcl(An-19, broke-23)
compound:prt(broke-23, up-24)
case(deck-28, on-25)
det(deck-28, the-26)
amod(deck-28, lower-27)
nmod:on(broke-23, deck-28)
dep(An-19, let-31)
det(creatures-33, the-32)
nsubj(free-34, creatures-33)
xcomp(let-31, free-34)
dobj(let-31, An-36)
det(lights-39, the-38)
nsubj(went-40, lights-39)
acl:relcl(An-36, went-40)
compound:prt(went-40, out-41)
case(deck-45, on-42)
det(deck-45, the-43)
amod(deck-45, lower-44)
nmod:on(went-40, deck-45)
neg(one-50, no-49)
dep(cattle-9, one-50)
advmod(me-53, near-51)
case(me-53, but-52)
nmod:but(one-50, me-53)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBD had)
          (VP (VBN been)
            (VP (VBN singin) ('' ')
              (PP (TO to)
                (NP (PRP them)))
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (S
                      (NP (PRP 'em))
                      (ADJP (JJ quiet))
                      (ADVP (RB there))))))))))
      (, ,) (IN For)
      (S
        (NP (DT the) (JJR lower) (NN deck))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN dangerousest))
            (, ,)
            (NP
              (NP (NN requirin) (POS '))
              (JJ constant) (NN care))))))
    (, ,)
    (NP (NNP An) (POS '))
    (VP (VBP give)
      (PP (TO to)
        (NP (PRP me)))
      (PP (IN as)
        (NP (DT the) (JJS strongest) (NN man)))
      (PRN (, ,) (IN though)
        (S
          (VP (VBN used))))
      (S
        (VP (TO to)
          (VP (VB drink)
            (CC and)
            (VB swear)))))
    (. .)))

nsubjpass(singin-4, I-1)
nsubj:xsubj(keep-9, I-1)
aux(singin-4, had-2)
auxpass(singin-4, been-3)
ccomp(give-29, singin-4)
case(them-7, to-6)
nmod:to(singin-4, them-7)
mark(keep-9, to-8)
xcomp(singin-4, keep-9)
nsubj(quiet-11, 'em-10)
xcomp(keep-9, quiet-11)
advmod(quiet-11, there-12)
dep(singin-4, For-14)
det(deck-17, the-15)
amod(deck-17, lower-16)
nsubj(dangerousest-20, deck-17)
cop(dangerousest-20, is-18)
det(dangerousest-20, the-19)
parataxis(singin-4, dangerousest-20)
nmod:poss(care-25, requirin-22)
case(requirin-22, '-23)
amod(care-25, constant-24)
appos(dangerousest-20, care-25)
nsubj(give-29, An-27)
nsubj:xsubj(drink-40, An-27)
nsubj:xsubj(swear-42, An-27)
case(An-27, '-28)
root(ROOT-0, give-29)
case(me-31, to-30)
nmod:to(give-29, me-31)
case(man-35, as-32)
det(man-35, the-33)
amod(man-35, strongest-34)
nmod:as(give-29, man-35)
dep(used-38, though-37)
parataxis(give-29, used-38)
mark(drink-40, to-39)
xcomp(give-29, drink-40)
cc(drink-40, and-41)
xcomp(give-29, swear-42)
conj:and(drink-40, swear-42)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP see)
        (SBAR
          (S
            (NP (PRP$ my) (NN chance))
            (VP
              (VP (VBD was)
                (ADJP (JJ certain))
                (PP (IN of)
                  (NP
                    (NP (NN bein) (POS '))
                    (NN horned))))
              (CC or)
              (VP (VBD trod)))))))
    (, ,) (IN For)
    (S
      (NP (DT the) (JJR lower) (NN deck))
      (VP (VBD was)
        (VP (VBN packed)
          (PP (IN with)
            (S
              (VP (VBG steers)
                (SBAR
                  (S
                    (NP
                      (NP (JJR thicker))
                      (CC 'n)
                      (NP
                        (NP (NNS peas))
                        (PP (IN in)
                          (NP (DT a) (NN pod))))
                      (, ,)
                      (NP
                        (NP (NNP An) (POS '))
                        (JJR more) (NNS pens)))
                    (VP (VBD broke)
                      (PP (IN at)
                        (NP (DT every) (NN roll)))
                      (: --)
                      (SBAR (IN so)
                        (S
                          (NP (PRP I))
                          (VP (VBD made)
                            (NP (DT a) (NN Contract))
                            (PP (IN with)
                              (NP (NNP God)))))))))))))))
    (. .)))

nsubj(see-2, I-1)
root(ROOT-0, see-2)
nmod:poss(chance-4, my-3)
nsubj(certain-6, chance-4)
nsubj(trod-12, chance-4)
cop(certain-6, was-5)
ccomp(see-2, certain-6)
case(horned-10, of-7)
nmod:poss(horned-10, bein-8)
case(bein-8, '-9)
nmod:of(certain-6, horned-10)
cc(certain-6, or-11)
ccomp(see-2, trod-12)
conj:or(certain-6, trod-12)
dep(see-2, For-14)
det(deck-17, the-15)
amod(deck-17, lower-16)
nsubjpass(packed-19, deck-17)
auxpass(packed-19, was-18)
parataxis(see-2, packed-19)
mark(steers-21, with-20)
advcl(packed-19, steers-21)
nsubj(broke-33, thicker-22)
cc(thicker-22, 'n-23)
conj:'n(thicker-22, peas-24)
nsubj(broke-33, peas-24)
case(pod-27, in-25)
det(pod-27, a-26)
nmod:in(peas-24, pod-27)
nmod:poss(pens-32, An-29)
case(An-29, '-30)
amod(pens-32, more-31)
conj:'n(thicker-22, pens-32)
nsubj(broke-33, pens-32)
ccomp(steers-21, broke-33)
case(roll-36, at-34)
det(roll-36, every-35)
nmod:at(broke-33, roll-36)
mark(made-40, so-38)
nsubj(made-40, I-39)
advcl(broke-33, made-40)
det(Contract-42, a-41)
dobj(made-40, Contract-42)
case(God-44, with-43)
nmod:with(made-40, God-44)

(ROOT
  (S
    (NP
      (NP (NNP An) (POS '))
      (PP (IN by)
        (NP
          (NP (DT the) (NNS terms))
          (PP (IN of)
            (NP (DT the) (NN Contract))))))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN read)
            (NP (DT the) (JJ same))))))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (PRP He))
        (VP (VBD got)
          (NP (PRP me))
          (PP (TO to)
            (NP (NN port))))))
    (ADVP (RB alive))
    (NP (PRP I))
    (VP (MD would)
      (VP (VB exalt)
        (NP
          (NP (PRP$ His) (NN Name))
          (, ,)
          (NP
            (NP
              (NP (NNP An) (POS '))
              (NN praise))
            (NP (PRP$ His) (JJ Holy) (NN Majesty))))
        (SBAR (IN till)
          (S
            (NP (JJ further) (NNS orders))
            (VP (VBD came))))))
    (. .)))

nsubj(exalt-26, An-1)
case(An-1, '-2)
case(terms-5, by-3)
det(terms-5, the-4)
nmod:by(An-1, terms-5)
case(Contract-8, of-6)
det(Contract-8, the-7)
nmod:of(terms-5, Contract-8)
mark(read-13, as-10)
nsubj(read-13, I-11)
aux(read-13, have-12)
advcl(exalt-26, read-13)
det(same-15, the-14)
dobj(read-13, same-15)
mark(got-19, If-17)
nsubj(got-19, He-18)
advcl(exalt-26, got-19)
dobj(got-19, me-20)
case(port-22, to-21)
nmod:to(got-19, port-22)
advmod(exalt-26, alive-23)
nsubj(exalt-26, I-24)
aux(exalt-26, would-25)
root(ROOT-0, exalt-26)
nmod:poss(Name-28, His-27)
dobj(exalt-26, Name-28)
nmod:poss(praise-32, An-30)
case(An-30, '-31)
appos(Name-28, praise-32)
nmod:poss(Majesty-35, His-33)
amod(Majesty-35, Holy-34)
dep(praise-32, Majesty-35)
mark(came-39, till-36)
amod(orders-38, further-37)
nsubj(came-39, orders-38)
advcl(exalt-26, came-39)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD saved)
      (NP (PRP me))
      (PP (IN from)
        (NP
          (NP (DT the) (NNS cattle))
          (, an) ('' ')
          (PRN
            (S
              (NP (PRP He))
              (VP (VBD saved)
                (NP (PRP me))
                (PP (IN from)
                  (NP (DT the) (NN sea)))
                (, ,)
                (SBAR (IN For)
                  (S
                    (NP (PRP they))
                    (VP (VBD found)
                      (SBAR
                        (S
                          (NP (PRP me))
                          (`` `)
                          (VP (VB tween)
                            (NP
                              (NP
                                (NP (CD two) (JJ drownded) (NNS ones))
                                (SBAR
                                  (WHADVP (WRB where))
                                  (S
                                    (NP (DT the) (NN roll))
                                    (VP (VBD had)
                                      (VP (VBN landed)
                                        (NP (PRP me)))))))
                              (: --)
                              (NP
                                (NP (NNP An) (POS '))
                                (NP
                                  (NP (DT a) (JJ four-inch) (NN crack))
                                  (PP (IN on)
                                    (NP
                                      (NP (NN top))
                                      (PP (IN of)
                                        (NP (PRP$ my) (NN head)))))))))))))))))
          (, ,)
          (ADJP (RB as) (JJ crazy))
          (SBAR (IN as)
            (S
              (VP (MD could)
                (VP (VB be))))))))
    (. .)))

nsubj(saved-2, He-1)
root(ROOT-0, saved-2)
dobj(saved-2, me-3)
case(cattle-6, from-4)
det(cattle-6, the-5)
nmod:from(saved-2, cattle-6)
nsubj(saved-10, He-9)
dep(cattle-6, saved-10)
dobj(saved-10, me-11)
case(sea-14, from-12)
det(sea-14, the-13)
nmod:from(saved-10, sea-14)
mark(found-18, For-16)
nsubj(found-18, they-17)
advcl(saved-10, found-18)
nsubj(tween-21, me-19)
ccomp(found-18, tween-21)
nummod(ones-24, two-22)
amod(ones-24, drownded-23)
dobj(tween-21, ones-24)
advmod(landed-29, where-25)
det(roll-27, the-26)
nsubj(landed-29, roll-27)
aux(landed-29, had-28)
acl:relcl(ones-24, landed-29)
dobj(landed-29, me-30)
dep(ones-24, An-32)
case(An-32, '-33)
det(crack-36, a-34)
amod(crack-36, four-inch-35)
dep(An-32, crack-36)
case(head-41, on-37)
mwe(on-37, top-38)
mwe(on-37, of-39)
nmod:poss(head-41, my-40)
nmod:on_top_of(crack-36, head-41)
advmod(crazy-44, as-43)
amod(cattle-6, crazy-44)
mark(be-47, as-45)
aux(be-47, could-46)
dep(cattle-6, be-47)

(ROOT
  (S (CC But)
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBD were)
          (VP (VBN done)
            (PP (IN by)
              (NP
                (NP (DT a) (NN stanchion))
                (, ,)
                (NP (DT an))))
            ('' ')
            (PP (RB not) (IN by)
              (NP
                (NP (DT a) (NN bullock))
                (PP (IN at)
                  (NP (DT all)))))))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (NN I))
    (VP (VBD lay)
      (ADVP (RB still))
      (PP (IN for)
        (NP
          (NP
            (NP (CD seven) (NNS weeks) (JJ convalessing))
            (PP (IN of)
              (NP
                (NP (DT the) (NN fall))
                (, ,)
                (NP
                  (NP (NNP An) (POS '))
                  (NN readin))))
            (POS '))
          (NP (DT the) (JJ shiny) (NNP Scripture) (NNS texts))
          (PP (IN in)
            (NP
              (NP (DT the) (NNP Seaman) (POS 's))
              (NN Hospital))))))
    (. .)))

cc(lay-21, But-1)
nsubjpass(done-4, that-2)
auxpass(done-4, were-3)
advcl(lay-21, done-4)
case(stanchion-7, by-5)
det(stanchion-7, a-6)
nmod:by(done-4, stanchion-7)
appos(stanchion-7, an-9)
neg(bullock-14, not-11)
case(bullock-14, by-12)
det(bullock-14, a-13)
nmod:by(done-4, bullock-14)
case(all-16, at-15)
nmod:at(bullock-14, all-16)
nmod:poss(I-20, An-18)
case(An-18, '-19)
nsubj(lay-21, I-20)
root(ROOT-0, lay-21)
advmod(lay-21, still-22)
case(weeks-25, for-23)
nummod(weeks-25, seven-24)
nmod:for(lay-21, weeks-25)
amod(weeks-25, convalessing-26)
case(fall-29, of-27)
det(fall-29, the-28)
nmod:of(weeks-25, fall-29)
nmod:poss(readin-33, An-31)
case(An-31, '-32)
appos(fall-29, readin-33)
case(weeks-25, '-34)
det(texts-38, the-35)
amod(texts-38, shiny-36)
compound(texts-38, Scripture-37)
dep(weeks-25, texts-38)
case(Hospital-43, in-39)
det(Seaman-41, the-40)
nmod:poss(Hospital-43, Seaman-41)
case(Seaman-41, 's-42)
nmod:in(weeks-25, Hospital-43)

(ROOT
  (S
    (NP
      (NP (NNP An) (POS '))
      (NN I))
    (VP
      (VP (VBD spoke)
        (PP (TO to)
          (NP
            (NP (NNP God))
            (PP (IN of)
              (NP (PRP$ our) (NN Contract))))))
      (, ,)
      (NP
        (NP (DT an))
        ('' ')
        (SBAR
          (S
            (NP (PRP He))
            (VP (VBZ says)
              (PP (TO to)
                (NP (PRP$ my) (NN prayer)))
              (: :) (`` ``)
              (S
                (NP (PRP I))
                (ADVP (RB never))
                (VP (VBZ puts)
                  (PRT (RP on))
                  (NP (PRP$ My) (NNS ministers))
                  (ADVP (DT no) (RBR more))
                  (SBAR (IN than)
                    (S
                      (NP (PRP they))
                      (VP (MD can)
                        (VP (VB bear))))))))))))
    (. .)))

nmod:poss(I-3, An-1)
case(An-1, '-2)
nsubj(spoke-4, I-3)
root(ROOT-0, spoke-4)
case(God-6, to-5)
nmod:to(spoke-4, God-6)
case(Contract-9, of-7)
nmod:poss(Contract-9, our-8)
nmod:of(God-6, Contract-9)
dobj(spoke-4, an-11)
nsubj(says-14, He-13)
acl:relcl(an-11, says-14)
case(prayer-17, to-15)
nmod:poss(prayer-17, my-16)
nmod:to(says-14, prayer-17)
nsubj(puts-22, I-20)
neg(puts-22, never-21)
ccomp(says-14, puts-22)
compound:prt(puts-22, on-23)
nmod:poss(ministers-25, My-24)
dobj(puts-22, ministers-25)
neg(more-27, no-26)
advmod(puts-22, more-27)
mark(bear-31, than-28)
nsubj(bear-31, they-29)
aux(bear-31, can-30)
advcl(puts-22, bear-31)

(ROOT
  (S (CC So)
    (S
      (ADVP (RB back))
      (NP (PRP you))
      (VP (VBP go)
        (PP (TO to)
          (NP (DT the) (JJ cattle-boats) (DT an)))))
    ('' ')
    (VP (VBP preach)
      (NP (PRP$ My) (NN Gospel)))
    (NP (EX there))
    (. .)))

cc(preach-10, So-1)
advmod(go-4, back-2)
nsubj(go-4, you-3)
csubj(preach-10, go-4)
case(cattle-boats-7, to-5)
det(cattle-boats-7, the-6)
nmod:to(go-4, cattle-boats-7)
dep(cattle-boats-7, an-8)
root(ROOT-0, preach-10)
nmod:poss(Gospel-12, My-11)
dobj(preach-10, Gospel-12)
expl(preach-10, there-13)

(ROOT
  (S
    (S (`` ``) (IN For)
      (NP (JJ human) (NN life))
      (VP (VBZ is)
        (ADVP (RB chancy))
        (PP (IN at)
          (NP
            (NP (DT any) (NN kind))
            (PP (IN of)
              (NP (NN trade)))))))
    (, ,)
    (CC But)
    (S
      (NP
        (NP (JJS most))
        (PP (IN of)
          (NP (DT all)))
        (, ,)
        (SBAR (IN as)
          (S
            (S
              (ADVP (RB well))
              (NP (PRP you))
              (VP (VBP know)))
            (, ,)
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (DT the) (NN steers))
                  (VP (VBP are)
                    (ADJP (JJ mad-afraid)))))
              (: ;)
              (ADVP (RB So))
              (NP (PRP you))
              (VP (VBP go)
                (ADVP (RB back))
                (PP (TO to)
                  (NP (DT the) (NNS cattle-boats)))))))
        (, an) ('' '))
      (VP (VBP preach)
        (NP (PRP 'em))
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBD said)))))))
    (. .)))

dep(kind-9, For-2)
amod(life-4, human-3)
nsubj(kind-9, life-4)
cop(kind-9, is-5)
advmod(kind-9, chancy-6)
case(kind-9, at-7)
det(kind-9, any-8)
root(ROOT-0, kind-9)
case(trade-11, of-10)
nmod:of(kind-9, trade-11)
cc(kind-9, But-13)
nsubj(preach-38, most-14)
case(all-16, of-15)
nmod:of(most-14, all-16)
mark(know-21, as-18)
advmod(know-21, well-19)
nsubj(know-21, you-20)
dep(most-14, know-21)
advmod(mad-afraid-27, when-23)
det(steers-25, the-24)
nsubj(mad-afraid-27, steers-25)
cop(mad-afraid-27, are-26)
advcl(go-31, mad-afraid-27)
advmod(go-31, So-29)
nsubj(go-31, you-30)
parataxis(know-21, go-31)
advmod(go-31, back-32)
case(cattle-boats-35, to-33)
det(cattle-boats-35, the-34)
nmod:to(go-31, cattle-boats-35)
conj:but(kind-9, preach-38)
dobj(preach-38, 'em-39)
mark(said-43, as-40)
nsubj(said-43, I-41)
aux(said-43, 've-42)
advcl(preach-38, said-43)

(ROOT
  (S (`` ``)
    (NP (PRP They))
    (VP (MD must)
      (VP (VB quit)
        (NP
          (NP (NN drinkin) ('' '))
          (, an) ('' ')
          (PRN
            (S
              (S
                (S
                  (NP (NNP swearin) (POS ')))
                (, ,)
                (NP (PRP they))
                (VP (MD must) (RB n't)
                  (VP (VB knife)
                    (PP (IN on)
                      (NP (DT a) (NN blow))))))
              (, ,)
              (S
                (NP (PRP They))
                (VP (MD must)
                  (VP (VB quit)
                    (VP (VB gamblin) ('' ')
                      (NP (PRP$ their) (NNS wages))))))
              (, ,)
              (CC and)
              (S
                (NP (PRP you))
                (VP (MD must)
                  (VP (VB preach)
                    (NP (PRP it))
                    (ADVP (RB so)))))))
          (: ;)
          (SBAR
            (S
              (PP (IN For)
                (NP (RB now)))
              (NP (DT those) (NNS boats))
              (VP (VBP are)
                (ADJP (JJR more)
                  (PP (IN like)
                    (NP (NNP Hell)))
                  (PP (IN than)
                    (NP
                      (NP (NN anything) (RB else))
                      (SBAR
                        (S
                          (NP (PRP I))
                          (VP (VBP know)))))))))))))
    (. .) ('' '')))

nsubj(quit-4, They-2)
aux(quit-4, must-3)
root(ROOT-0, quit-4)
dobj(quit-4, drinkin-5)
ccomp(knife-15, swearin-9)
case(swearin-9, '-10)
nsubj(knife-15, they-12)
aux(knife-15, must-13)
neg(knife-15, n't-14)
dep(drinkin-5, knife-15)
case(blow-18, on-16)
det(blow-18, a-17)
nmod:on(knife-15, blow-18)
nsubj(quit-22, They-20)
aux(quit-22, must-21)
ccomp(knife-15, quit-22)
xcomp(quit-22, gamblin-23)
nmod:poss(wages-26, their-25)
dobj(gamblin-23, wages-26)
cc(knife-15, and-28)
nsubj(preach-31, you-29)
aux(preach-31, must-30)
dep(drinkin-5, preach-31)
conj:and(knife-15, preach-31)
dobj(preach-31, it-32)
advmod(preach-31, so-33)
case(now-36, For-35)
nmod:for(more-40, now-36)
det(boats-38, those-37)
nsubj(more-40, boats-38)
cop(more-40, are-39)
acl:relcl(drinkin-5, more-40)
case(Hell-42, like-41)
nmod:like(more-40, Hell-42)
case(anything-44, than-43)
nmod:than(more-40, anything-44)
advmod(anything-44, else-45)
nsubj(know-47, I-46)
acl:relcl(anything-44, know-47)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (PRP it)))))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (PRP I))
            (VP (VBD knew)
              (NP
                (SBAR
                  (WHNP (WP what))
                  (S
                    (S
                      (NP (PRP I))
                      (VP (MD should)
                        (VP (VB get))))
                    (, ,)
                    (S
                      (NP
                        (NP (NNP An) (POS '))
                        (NN I))
                      (VP (VBD wanted)
                        (PP (TO to)
                          (NP
                            (NP (NNP preach) (NNP Religion))
                            (, ,)
                            (NP
                              (NP (JJ handsome) (DT an))
                              ('' ')
                              (PP (RB out) (IN of)
                                (NP (DT the) (JJ wet))))))))
                    (, ,)
                    (CC But)
                    (S
                      (NP
                        (NP (DT the) (NNP Word))
                        (PP (IN of)
                          (NP (DT the) (NNP Lord))))
                      (VP (VBD were)
                        (VP (VBN lain)
                          (PP (IN on)
                            (NP (PRP me))))))))
                (, ,)
                (NP (DT an))
                ('' ')
                (NP
                  (NP (PRP I))
                  (VP (VBN done)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP I))
                        (VP (VBD was)
                          (VP (VBN set)))))))))))))
    (. .)))

nsubj(want-4, I-1)
nsubj:xsubj(do-6, I-1)
aux(want-4, did-2)
neg(want-4, n't-3)
root(ROOT-0, want-4)
mark(do-6, to-5)
xcomp(want-4, do-6)
dobj(do-6, it-7)
mark(knew-11, for-9)
nsubj(knew-11, I-10)
advcl(want-4, knew-11)
dep(get-15, what-12)
nsubj(get-15, I-13)
aux(get-15, should-14)
dep(an-44, get-15)
nmod:poss(I-19, An-17)
case(An-17, '-18)
nsubj(wanted-20, I-19)
ccomp(get-15, wanted-20)
case(Religion-23, to-21)
compound(Religion-23, preach-22)
nmod:to(wanted-20, Religion-23)
appos(Religion-23, handsome-25)
dep(handsome-25, an-26)
case(wet-31, out-28)
mwe(out-28, of-29)
det(wet-31, the-30)
nmod:out_of(handsome-25, wet-31)
cc(get-15, But-33)
det(Word-35, the-34)
nsubjpass(lain-40, Word-35)
case(Lord-38, of-36)
det(Lord-38, the-37)
nmod:of(Word-35, Lord-38)
auxpass(lain-40, were-39)
conj:but(get-15, lain-40)
dep(an-44, lain-40)
case(me-42, on-41)
nmod:on(lain-40, me-42)
dobj(knew-11, an-44)
dep(an-44, I-46)
acl(I-46, done-47)
dobj(set-51, what-48)
nsubjpass(set-51, I-49)
auxpass(set-51, was-50)
ccomp(done-47, set-51)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN been)
          (NP
            (NP (NN smit))
            (, an) ('' ')
            (PRN
              (S
                (NP (NNS bruis))
                (VP (VBD -RSB-)
                  (NP (JJ \) (NN ed))
                  (, ,)
                  (SBAR (IN as)
                    (S
                      (S
                        (VP (VBN warned)))
                      (VP (MD would)
                        (VP (VB be)
                          (NP (DT the) (NN case)))))))))
            (, ,)
            (S
              (NP (NNP An) (POS '))
              (VP (VBD turned)
                (NP (PRP$ my) (NN cheek))
                (PP (TO to)
                  (NP (DT the) (NN smiter)))
                (SBAR
                  (ADVP (RB exactly))
                  (IN as)
                  (S
                    (NP (NNP Scripture))
                    (VP (VBZ says))))))))))
    (: ;)
    (CC But)
    (S
      (PP (VBG following)
        (NP (DT that)))
      (, ,)
      (NP (PRP I))
      (VP (VBD knocked)
        (SBAR
          (S
            (NP (PRP him))
            (ADVP (IN down) (DT an))
            (VP (`` ') (VBD led)
              (NP (PRP him))
              (PRT (RP up))
              (PP (TO to)
                (NP (NNP Grace))))))))
    (. .)))

nsubj(smit-4, I-1)
aux(smit-4, have-2)
cop(smit-4, been-3)
root(ROOT-0, smit-4)
nsubj(-RSB--8, bruis-7)
dep(smit-4, -RSB--8)
amod(ed-10, \-9)
dobj(-RSB--8, ed-10)
mark(case-17, as-12)
csubj(case-17, warned-13)
aux(case-17, would-14)
cop(case-17, be-15)
det(case-17, the-16)
advcl(-RSB--8, case-17)
nsubj(turned-21, An-19)
case(An-19, '-20)
dep(smit-4, turned-21)
nmod:poss(cheek-23, my-22)
dobj(turned-21, cheek-23)
case(smiter-26, to-24)
det(smiter-26, the-25)
nmod:to(turned-21, smiter-26)
advmod(says-30, exactly-27)
mark(says-30, as-28)
nsubj(says-30, Scripture-29)
advcl(turned-21, says-30)
cc(smit-4, But-32)
case(that-34, following-33)
nmod:following(knocked-37, that-34)
nsubj(knocked-37, I-36)
conj:but(smit-4, knocked-37)
nsubj(led-42, him-38)
case(an-40, down-39)
advmod(led-42, an-40)
ccomp(knocked-37, led-42)
dobj(led-42, him-43)
compound:prt(led-42, up-44)
case(Grace-46, to-45)
nmod:to(led-42, Grace-46)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP we))
    (VP (VBP have)
      (S
        (VP (VBG preaching)
          (PP (IN on)
            (NP (NNP Sundays)))
          (SBAR
            (WHADVP (WRB whenever))
            (S
              (S
                (NP (DT the) (NN sea))
                (VP (VBZ is)
                  (ADJP (JJ calm))))
              (, ,)
              (S
                (NP
                  (NP (NNP An) (POS '))
                  (NN I))
                (VP (VBP use)
                  (NP
                    (NP (DT no) (NN knife)
                      (CC or)
                      (NN pistol))
                    (, an) ('' ')
                    (SBAR
                      (S
                        (NP (PRP I))
                        (ADVP (RB never))
                        (VP (VB take)
                          (NP (DT no) (NN harm))))))))
              (, ,)
              (PP (IN For)
                (NP
                  (NP (DT the) (NNP Lord) (NN abideth) (NN back))
                  (PP (IN of)
                    (NP (PRP me)))))))))
      (S
        (VP (TO to)
          (VP (VB guide)
            (NP (PRP$ my) (NN fighting) (NN arm))))))
    (. .)))

dep(have-4, An-1)
case(An-1, '-2)
nsubj(have-4, we-3)
nsubj:xsubj(guide-38, we-3)
root(ROOT-0, have-4)
xcomp(have-4, preaching-5)
case(Sundays-7, on-6)
nmod:on(preaching-5, Sundays-7)
advmod(calm-12, whenever-8)
det(sea-10, the-9)
nsubj(calm-12, sea-10)
cop(calm-12, is-11)
advcl(preaching-5, calm-12)
nmod:poss(I-16, An-14)
case(An-14, '-15)
nsubj(use-17, I-16)
parataxis(calm-12, use-17)
neg(knife-19, no-18)
dobj(use-17, knife-19)
cc(knife-19, or-20)
dobj(use-17, pistol-21)
conj:or(knife-19, pistol-21)
nsubj(take-26, I-24)
neg(take-26, never-25)
acl:relcl(knife-19, take-26)
neg(harm-28, no-27)
dobj(take-26, harm-28)
case(back-34, For-30)
det(back-34, the-31)
compound(back-34, Lord-32)
compound(back-34, abideth-33)
nmod:for(calm-12, back-34)
case(me-36, of-35)
nmod:of(back-34, me-36)
mark(guide-38, to-37)
xcomp(have-4, guide-38)
nmod:poss(arm-41, my-39)
compound(arm-41, fighting-40)
dobj(guide-38, arm-41)

(ROOT
  (S
    (NP
      (NP (NNP An) (POS '))
      (NN I)
      (S
        (VP
          (VP (VB sign)
            (PP (IN for)
              (NP (NN four-pound-ten)))
            (NP (DT a) (NN month)))
          (CC and)
          (VP (VB save)
            (S
              (S
                (NP (DT the) (NN money))
                (ADJP (JJ clear)))
              (, ,)
              (S
                (NP (NNP An) (POS '))
                (NP (PRP I))))))))
    (VP (VBP am)
      (PP (IN in)
        (NP
          (NP (NN charge))
          (PP (IN of)
            (NP (DT the) (JJR lower) (NN deck)))))
      (, ,)
      (NP
        (NP (DT an))
        ('' ')
        (SBAR
          (S
            (S
              (NP (PRP I))
              (ADVP (RB never))
              (VP (VBP lose)
                (NP (DT a) (NN steer))))
            (: ;)
            (S
              (NP
                (NP (NNP An) (POS '))
                (NN I))
              (VP (VBP believe)
                (PP (IN in)
                  (NP (NNP Almighty) (NNP God)))))))
        (, an) ('' ')
        (VP (VBG preach)
          (NP (PRP$ His) (NN Gospel))
          (ADVP (RB here)))))
    (. .)))

nmod:poss(I-3, An-1)
case(An-1, '-2)
nsubj(an-26, I-3)
dep(I-3, sign-4)
case(four-pound-ten-6, for-5)
nmod:for(sign-4, four-pound-ten-6)
det(month-8, a-7)
nmod:tmod(sign-4, month-8)
cc(sign-4, and-9)
dep(I-3, save-10)
conj:and(sign-4, save-10)
det(money-12, the-11)
dep(clear-13, money-12)
xcomp(save-10, clear-13)
dep(I-17, An-15)
case(An-15, '-16)
parataxis(clear-13, I-17)
cop(an-26, am-18)
case(charge-20, in-19)
nmod:in(an-26, charge-20)
case(deck-24, of-21)
det(deck-24, the-22)
amod(deck-24, lower-23)
nmod:of(charge-20, deck-24)
root(ROOT-0, an-26)
nsubj(lose-30, I-28)
neg(lose-30, never-29)
acl:relcl(an-26, lose-30)
det(steer-32, a-31)
dobj(lose-30, steer-32)
nmod:poss(I-36, An-34)
case(An-34, '-35)
nsubj(believe-37, I-36)
parataxis(lose-30, believe-37)
case(God-40, in-38)
compound(God-40, Almighty-39)
nmod:in(believe-37, God-40)
acl(an-26, preach-43)
nmod:poss(Gospel-45, His-44)
dobj(preach-43, Gospel-45)
advmod(preach-43, here-46)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNS skippers))
        (VP (VBP say)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (ADJP (JJ crazy)))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB prove)
            (S
              (NP (PRP 'em))
              (ADJP (JJ wrong)))))))
    (, ,) (IN For)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (PP (IN in)
          (NP
            (NP (NN charge))
            (PP (IN of)
              (NP
                (NP (DT the) (JJR lower) (NN deck))
                (PP (IN with)
                  (NP (DT all)))))))))
    (PRN
      (S
        (NP (DT that) (NN doth))
        (VP (VBP belong) (: --)
          (NP
            (NP (NNP _))
            (SBAR
              (WHNP (WDT Which))
              (S
                (NP (PRP they))
                (VP (MD would) (RB not)
                  (VP (VB give)
                    (PP (TO to)
                      (NP (DT a) (NN lunatic))))))))))
      (, ,))
    (CC and)
    (S
      (NP (DT the) (NN competition))
      (ADJP (RB so) (JJ strong)))
    (. !)))

det(skippers-2, The-1)
nsubj(say-3, skippers-2)
nsubj(strong-44, skippers-2)
root(ROOT-0, say-3)
nsubj(crazy-6, I-4)
cop(crazy-6, 'm-5)
ccomp(say-3, crazy-6)
cc(say-3, but-8)
nsubj(prove-11, I-9)
aux(prove-11, can-10)
conj:but(say-3, prove-11)
nsubj(wrong-13, 'em-12)
xcomp(prove-11, wrong-13)
dep(say-3, For-15)
nsubj(charge-19, I-16)
cop(charge-19, am-17)
case(charge-19, in-18)
dep(say-3, charge-19)
case(deck-23, of-20)
det(deck-23, the-21)
amod(deck-23, lower-22)
nmod:of(charge-19, deck-23)
case(all-25, with-24)
nmod:with(deck-23, all-25)
det(doth-27, that-26)
nsubj(belong-28, doth-27)
dep(say-3, belong-28)
dobj(belong-28, _-30)
dobj(give-35, _-30)
ref(_-30, Which-31)
nsubj(give-35, they-32)
aux(give-35, would-33)
neg(give-35, not-34)
acl:relcl(_-30, give-35)
case(lunatic-38, to-36)
det(lunatic-38, a-37)
nmod:to(give-35, lunatic-38)
cc(say-3, and-40)
det(competition-42, the-41)
dep(strong-44, competition-42)
advmod(strong-44, so-43)
conj:and(say-3, strong-44)

(ROOT
  (NP (NNP _) (NNP ANCHOR) (NNP SONG) (NNP Heh) (. !)))

compound(Heh-4, _-1)
compound(Heh-4, ANCHOR-2)
compound(Heh-4, SONG-3)
root(ROOT-0, Heh-4)

(ROOT
  (S
    (VP (VBP Walk)
      (NP (PRP$ her) (NN round)))
    (. .)))

root(ROOT-0, Walk-1)
nmod:poss(round-3, her-2)
dobj(Walk-1, round-3)

(ROOT
  (S
    (ADVP (RB Heave))
    (, ,)
    (NP (NN ah))
    (VP (VBP heave)
      (NP (PRP her))
      (ADVP (RB short) (RB again)))
    (. !)))

advmod(heave-4, Heave-1)
nsubj(heave-4, ah-3)
root(ROOT-0, heave-4)
dobj(heave-4, her-5)
advmod(again-7, short-6)
advmod(heave-4, again-7)

(ROOT
  (S
    (PP (IN Over))
    (, ,)
    (VP
      (VP (VB snatch)
        (NP (PRP her))
        (PP (IN over)
          (PRN (, ,)
            (ADVP (RB there))
            (, ,))))
      (CC and)
      (VP (VB hold)
        (NP (PRP her))
        (PP (IN on)
          (NP (DT the) (NN pawl)))))
    (. .)))

nmod(snatch-3, Over-1)
root(ROOT-0, snatch-3)
dobj(snatch-3, her-4)
case(there-7, over-5)
advcl(snatch-3, there-7)
cc(snatch-3, and-9)
conj:and(snatch-3, hold-10)
dobj(hold-10, her-11)
case(pawl-14, on-12)
det(pawl-14, the-13)
nmod:on(hold-10, pawl-14)

(ROOT
  (FRAG
    (S
      (VP (VB Loose)
        (NP (DT all) (NN sail)))
      (, ,)
      (CC and)
      (VP (VB brace)
        (NP (PRP$ your) (NNS yards))
        (ADVP (JJ back)
          (CC and)
          (JJ full))))
    (: --)
    (NP
      (NP (NNP Ready) (NNP jib))
      (SBAR
        (S
          (VP (TO to)
            (VP
              (VP (VB pay)
                (NP (PRP her))
                (PRT (RP off)))
              (CC and)
              (VP (VB heave)
                (ADVP (RB short) (RB all))))))))
    (. !)))

dep(jib-14, Loose-1)
det(sail-3, all-2)
dobj(Loose-1, sail-3)
cc(Loose-1, and-5)
conj:and(Loose-1, brace-6)
dep(jib-14, brace-6)
nmod:poss(yards-8, your-7)
dobj(brace-6, yards-8)
advmod(brace-6, back-9)
cc(back-9, and-10)
advmod(brace-6, full-11)
conj:and(back-9, full-11)
compound(jib-14, Ready-13)
root(ROOT-0, jib-14)
mark(pay-16, to-15)
acl(jib-14, pay-16)
dobj(pay-16, her-17)
compound:prt(pay-16, off-18)
cc(pay-16, and-19)
acl(jib-14, heave-20)
conj:and(pay-16, heave-20)
advmod(all-22, short-21)
advmod(heave-20, all-22)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (S
        (S
          (NP (NN ah))
          (VP (VBP fare)
            (NP (PRP you))
            (ADVP (RB well))))
        (: ;)
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB stay)
              (ADVP
                (ADVP (RB no) (RBR more))
                (PP (IN with)
                  (NP
                    (NP (PRP you))
                    (, ,)
                    (NP (PRP$ my) (NN love)))))
              (PRN (: --)
                (ADVP (RB Down))
                (, ,)
                (VP (VBD set)
                  (PRT (RP down))
                  (NP
                    (NP (PRP$ your) (NN liquor))
                    (CC and)
                    (NP (PRP$ your) (NN girl)))
                  (PP (IN from)
                    (PP (IN off)
                      (NP (PRP$ your) (NN knee)))))
                (: ;))))))
      (IN For)
      (S
        (NP (DT the) (NN wind))
        (VP (VBZ has)
          (VP (VBN come)
            (S
              (VP (TO to)
                (VP (VB say))))))))
    (: :) (`` ``)
    (S
      (NP (PRP You))
      (VP (MD must)
        (VP (VB take)
          (NP (PRP me))
          (SBAR (IN while)
            (S
              (NP (PRP you))
              (VP (MD may))
              (, ,)
              (SBAR (IN If)
                (S
                  (NP (PRP you))
                  (VP (MD 'd)
                    (VP (VB go)
                      (PP (TO to)
                        (NP
                          (NP (NNP Mother) (NNP Carey))
                          (PRN (-LRB- -LRB-)
                            (SQ
                              (VP (VBP Walk))
                              (NP (PRP her))
                              (ADVP (RB down)
                                (PP (TO to)
                                  (NP (NNP Mother))))
                              (NP (NNP Carey))
                              (. !))
                            (-RRB- -RRB-)))))))))))))))

discourse(fare-4, Well-1)
nsubj(fare-4, ah-3)
root(ROOT-0, fare-4)
dobj(fare-4, you-5)
advmod(fare-4, well-6)
nsubj(stay-10, we-8)
aux(stay-10, can-9)
parataxis(fare-4, stay-10)
neg(more-12, no-11)
advmod(stay-10, more-12)
case(you-14, with-13)
nmod:with(more-12, you-14)
nmod:poss(love-17, my-16)
appos(you-14, love-17)
dep(set-21, Down-19)
dep(stay-10, set-21)
compound:prt(set-21, down-22)
nmod:poss(liquor-24, your-23)
dobj(set-21, liquor-24)
cc(liquor-24, and-25)
nmod:poss(girl-27, your-26)
dobj(set-21, girl-27)
conj:and(liquor-24, girl-27)
case(knee-31, from-28)
case(knee-31, off-29)
nmod:poss(knee-31, your-30)
nmod:off(set-21, knee-31)
dep(fare-4, For-33)
det(wind-35, the-34)
nsubj(come-37, wind-35)
nsubj:xsubj(say-39, wind-35)
aux(come-37, has-36)
parataxis(fare-4, come-37)
mark(say-39, to-38)
xcomp(come-37, say-39)
nsubj(take-44, You-42)
aux(take-44, must-43)
parataxis(fare-4, take-44)
dobj(take-44, me-45)
mark(may-48, while-46)
nsubj(may-48, you-47)
advcl(take-44, may-48)
mark(go-53, If-50)
nsubj(go-53, you-51)
aux(go-53, 'd-52)
dep(may-48, go-53)
case(Carey-56, to-54)
compound(Carey-56, Mother-55)
nmod:to(go-53, Carey-56)
dep(Carey-56, Walk-58)
dep(Walk-58, her-59)
advmod(Walk-58, down-60)
case(Mother-62, to-61)
nmod:to(down-60, Mother-62)
dep(Walk-58, Carey-63)

(ROOT
  (S
    (SBAR
      (PRN (, ,)
        (INTJ (UH Oh))
        (, ,))
      (S
        (NP (PRP we))
        (VP (VBP 're)
          (ADJP (VBN bound)
            (PP (TO to)
              (NP (NNP Mother)))))))
    (VP (VBZ Carey)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP she))
          (VP (VBZ feeds)
            (NP (PRP$ her) (NNS chicks))
            (PP (IN at)
              (NP (NN sea)))))))
    (. !) ('' '')))

discourse(bound-6, Oh-2)
nsubjpass(bound-6, we-4)
auxpass(bound-6, 're-5)
csubj(Carey-9, bound-6)
case(Mother-8, to-7)
nmod:to(bound-6, Mother-8)
root(ROOT-0, Carey-9)
advmod(feeds-12, where-10)
nsubj(feeds-12, she-11)
advcl(Carey-9, feeds-12)
nmod:poss(chicks-14, her-13)
dobj(feeds-12, chicks-14)
case(sea-16, at-15)
nmod:at(feeds-12, sea-16)

(ROOT
  (S
    (VP (VB Heh))
    (. !)))

root(ROOT-0, Heh-1)

(ROOT
  (S
    (VP (VBP Walk)
      (NP (PRP$ her) (NN round)))
    (. .)))

root(ROOT-0, Walk-1)
nmod:poss(round-3, her-2)
dobj(Walk-1, round-3)

(ROOT
  (S
    (ADVP (RB Break))
    (, ,)
    (NP (NN ah))
    (VP (VBP break)
      (NP (PRP it))
      (PP (IN out)
        (NP
          (NP (NNP o) (POS '))
          (NP (DT that)))))
    (. !)))

advmod(break-4, Break-1)
nsubj(break-4, ah-3)
root(ROOT-0, break-4)
dobj(break-4, it-5)
case(o-7, out-6)
nmod:'(break-4, o-7)
case(o-7, '-8)
dep(o-7, that-9)

(ROOT
  (S
    (VP
      (VP (VB Break)
        (NP (PRP$ our) (NN starboard-bower))
        (PRT (RP out)))
      (, ,)
      (VP (VB apeak) (, ,) (VB awash) (, ,)
        (CC and)
        (VB clear)))
    (. .)))

root(ROOT-0, Break-1)
nmod:poss(starboard-bower-3, our-2)
dobj(Break-1, starboard-bower-3)
compound:prt(Break-1, out-4)
dep(Break-1, apeak-6)
dep(Break-1, awash-8)
conj:and(apeak-6, awash-8)
cc(apeak-6, and-10)
dep(Break-1, clear-11)
conj:and(apeak-6, clear-11)

(ROOT
  (NP
    (NP (NNP Port))
    (: --)
    (NP
      (NP (NN port))
      (SBAR
        (S
          (S
            (NP (PRP she))
            (VP (VBZ casts) (, ,)
              (PP (IN with)
                (NP (DT the) (NN harbour-mud)))
              (PP (IN beneath)
                (NP (PRP$ her) (NN foot)))))
          (, ,)
          (CC And)
          (S
            (NP (DT that))
            (VP (VBZ 's)
              (NP
                (NP
                  (NP (DT the) (JJ last) (NN o) (POS '))
                  (NN bottom))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (MD shall)
                      (VP (VB see)
                        (NP (DT this) (NN year))))))))))))
    (. !)))

root(ROOT-0, Port-1)
dep(Port-1, port-3)
nsubj(bottom-21, port-3)
nsubj(casts-5, she-4)
acl:relcl(port-3, casts-5)
case(harbour-mud-9, with-7)
det(harbour-mud-9, the-8)
nmod:with(casts-5, harbour-mud-9)
case(foot-12, beneath-10)
nmod:poss(foot-12, her-11)
nmod:beneath(casts-5, foot-12)
cc(casts-5, And-14)
ref(port-3, that-15)
cop(bottom-21, 's-16)
det(o-19, the-17)
amod(o-19, last-18)
nmod:poss(bottom-21, o-19)
case(o-19, '-20)
acl:relcl(port-3, bottom-21)
conj:and(casts-5, bottom-21)
nsubj(see-24, we-22)
aux(see-24, shall-23)
acl:relcl(bottom-21, see-24)
det(year-26, this-25)
nmod:tmod(see-24, year-26)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (NN ah))
    (VP (VBP fare)
      (NP (PRP you))
      (ADVP (RB well))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP we))
          (VP (VBP 've)
            (VP (VBN got)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB take)
                      (NP (PRP her))
                      (PRT (RP out))
                      (ADVP (RB again)))
                    (: --)
                    (VP (VB Take)
                      (NP (PRP her))
                      (PRT (RP out))
                      (PP (IN in)
                        (NP (NN ballast)))
                      (, ,)
                      (S
                        (VP (VBG riding)
                          (ADJP (JJ light)
                            (CC and)
                            (JJ cargo-free)))))))))))))
    (. .)))

discourse(fare-4, Well-1)
nsubj(fare-4, ah-3)
root(ROOT-0, fare-4)
dobj(fare-4, you-5)
advmod(fare-4, well-6)
mark(got-11, for-8)
nsubj(got-11, we-9)
nsubj:xsubj(take-13, we-9)
aux(got-11, 've-10)
advcl(fare-4, got-11)
mark(take-13, to-12)
xcomp(got-11, take-13)
dobj(take-13, her-14)
compound:prt(take-13, out-15)
advmod(take-13, again-16)
dep(take-13, Take-18)
dobj(Take-18, her-19)
compound:prt(Take-18, out-20)
case(ballast-22, in-21)
nmod:in(Take-18, ballast-22)
advcl(Take-18, riding-24)
xcomp(riding-24, light-25)
cc(light-25, and-26)
xcomp(riding-24, cargo-free-27)
conj:and(light-25, cargo-free-27)

(ROOT
  (S (CC And)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (NN time)
          (S
            (VP (TO to)
              (VP (VB clear)
                (CC and)
                (VB quit)
                (SBAR
                  (WHADVP (WRB When))
                  (S
                    (NP (DT the) (NN hawser))
                    (VP (VBZ grips)
                      (NP (DT the) (NN bitt)))))))))))
    (, ,) (IN So)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB pay)
          (NP (PRP you))
          (PP (IN with)
            (NP
              (NP (DT the) (NN foresheet))
              (CC and)
              (NP (DT a) (NN promise))))
          (PP (IN from)
            (NP (DT the) (NN sea))))))
    (. !)))

cc(time-4, And-1)
nsubj(time-4, it-2)
cop(time-4, 's-3)
root(ROOT-0, time-4)
mark(clear-6, to-5)
acl(time-4, clear-6)
cc(clear-6, and-7)
acl(time-4, quit-8)
conj:and(clear-6, quit-8)
advmod(grips-12, When-9)
det(hawser-11, the-10)
nsubj(grips-12, hawser-11)
advcl(clear-6, grips-12)
det(bitt-14, the-13)
dobj(grips-12, bitt-14)
dep(time-4, So-16)
nsubj(pay-19, we-17)
aux(pay-19, 'll-18)
parataxis(time-4, pay-19)
dobj(pay-19, you-20)
case(foresheet-23, with-21)
det(foresheet-23, the-22)
nmod:with(pay-19, foresheet-23)
cc(foresheet-23, and-24)
det(promise-26, a-25)
nmod:with(pay-19, promise-26)
conj:and(foresheet-23, promise-26)
case(sea-29, from-27)
det(sea-29, the-28)
nmod:from(pay-19, sea-29)

(ROOT
  (S
    (VP (VB Heh))
    (. !)))

root(ROOT-0, Heh-1)

(ROOT
  (NP (CD Tally) (RB on) (. .)))

root(ROOT-0, Tally-1)
advmod(Tally-1, on-2)

(ROOT
  (S
    (VP
      (VP (VB Aft))
      (CC and)
      (VP (VB walk)
        (PRT (RP away))
        (PP (IN with)
          (NP (PRP her)))))
    (. !)))

root(ROOT-0, Aft-1)
cc(Aft-1, and-2)
conj:and(Aft-1, walk-3)
compound:prt(walk-3, away-4)
case(her-6, with-5)
nmod:with(walk-3, her-6)

(ROOT
  (NP
    (NP
      (NP (NNP Handsome))
      (PP (TO to)
        (NP
          (NP (DT the) (NN cathead))
          (, ,)
          (ADVP (RB now)))))
    (: ;)
    (NP
      (NP (NNP O) (NNP tally))
      (PP (IN on)
        (NP (DT the) (NN fall))))
    (. !)))

root(ROOT-0, Handsome-1)
case(cathead-4, to-2)
det(cathead-4, the-3)
nmod:to(Handsome-1, cathead-4)
advmod(cathead-4, now-6)
compound(tally-9, O-8)
dep(Handsome-1, tally-9)
case(fall-12, on-10)
det(fall-12, the-11)
nmod:on(tally-9, fall-12)

(ROOT
  (S
    (VP
      (VP (VB Stop) (, ,) (VB seize)
        (CC and)
        (VB fish))
      (, ,)
      (CC and)
      (VP (VB easy)
        (PP (IN on)
          (NP (DT the) (NN davit-guy)))))
    (. .)))

root(ROOT-0, Stop-1)
conj:and(Stop-1, seize-3)
cc(Stop-1, and-4)
conj:and(Stop-1, fish-5)
cc(Stop-1, and-7)
conj:and(Stop-1, easy-8)
case(davit-guy-11, on-9)
det(davit-guy-11, the-10)
nmod:on(easy-8, davit-guy-11)

(ROOT
  (FRAG
    (INTJ (UH Up))
    (, ,)
    (ADVP (RB well)
      (PP (IN up)
        (NP
          (NP
            (NP (DT the) (NN fluke))
            (PP (IN of)
              (NP (PRP her))))
          (, ,)
          (CC and)
          (NP (JJ inboard) (NN haul)))))
    (. !)))

discourse(well-3, Up-1)
root(ROOT-0, well-3)
case(fluke-6, up-4)
det(fluke-6, the-5)
nmod:up(well-3, fluke-6)
case(her-8, of-7)
nmod:of(fluke-6, her-8)
cc(fluke-6, and-10)
amod(haul-12, inboard-11)
nmod:up(well-3, haul-12)
conj:and(fluke-6, haul-12)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (NN ah))
    (VP (VBP fare)
      (NP (PRP you))
      (ADVP (RB well))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (DT the) (NNP Channel) (NN wind))
          (VP (VBZ 's)
            (VP (VBD took)
              (NP
                (NP (NN hold))
                (PP (IN of)
                  (NP (PRP us)))
                (, ,)
                (VP (VBG Choking)
                  (PRT (RP down))
                  (NP (PRP$ our) (NNS voices))
                  (SBAR (IN as)
                    (S
                      (NP (PRP we))
                      (VP (VB snatch)
                        (S
                          (NP (DT the) (NNS gaskets))
                          (ADJP (JJ free)))))))))))))
    (. .)))

discourse(fare-4, Well-1)
nsubj(fare-4, ah-3)
root(ROOT-0, fare-4)
dobj(fare-4, you-5)
advmod(fare-4, well-6)
mark(took-13, for-8)
det(wind-11, the-9)
compound(wind-11, Channel-10)
nsubjpass(took-13, wind-11)
auxpass(took-13, 's-12)
advcl(fare-4, took-13)
dobj(took-13, hold-14)
case(us-16, of-15)
nmod:of(hold-14, us-16)
acl(hold-14, Choking-18)
compound:prt(Choking-18, down-19)
nmod:poss(voices-21, our-20)
dobj(Choking-18, voices-21)
mark(snatch-24, as-22)
nsubj(snatch-24, we-23)
advcl(Choking-18, snatch-24)
det(gaskets-26, the-25)
nsubj(free-27, gaskets-26)
xcomp(snatch-24, free-27)

(ROOT
  (S (CC And)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (VP (VBG blowing)
          (PRT (RP up))
          (PP (IN for)
            (NP (NN night))))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (PRP she))
        (VP (VBZ 's)
          (VP (VBG dropping)
            (NP
              (NP (NNP Light))
              (PP (IN on)
                (NP (NNP Light)))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP she))
        (VP (VBZ 's)
          (VP (VBG snorting)
            (PP (IN under)
              (NP
                (NP (NNS bonnets))
                (PP (IN for)
                  (NP
                    (NP (DT a) (NN breath))
                    (PP (IN of)
                      (NP
                        (NP (JJ open) (NN sea))
                        (, ,)
                        (NP (NN Wheel))
                        (, ,)))
                    (UCP
                      (ADJP (JJ full))
                      (CC and)
                      (PP (IN by)))))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP she))
      (VP (MD 'll)
        (VP (VB smell)
          (S
            (NP (PRP$ her) (NN road))
            (ADJP (RB alone) (JJ to-night))))))
    (. .)))

cc(blowing-4, And-1)
nsubj(blowing-4, it-2)
aux(blowing-4, 's-3)
root(ROOT-0, blowing-4)
compound:prt(blowing-4, up-5)
case(night-7, for-6)
nmod:for(blowing-4, night-7)
cc(blowing-4, And-9)
nsubj(dropping-12, she-10)
aux(dropping-12, 's-11)
conj:and(blowing-4, dropping-12)
dobj(dropping-12, Light-13)
case(Light-15, on-14)
nmod:on(Light-13, Light-15)
cc(dropping-12, And-17)
nsubj(snorting-20, she-18)
aux(snorting-20, 's-19)
conj:and(blowing-4, snorting-20)
conj:and(dropping-12, snorting-20)
case(bonnets-22, under-21)
nmod:under(snorting-20, bonnets-22)
case(breath-25, for-23)
det(breath-25, a-24)
nmod:for(bonnets-22, breath-25)
case(sea-28, of-26)
amod(sea-28, open-27)
nmod:of(breath-25, sea-28)
appos(sea-28, Wheel-30)
amod(breath-25, full-32)
cc(full-32, and-33)
amod(breath-25, by-34)
conj:and(full-32, by-34)
cc(blowing-4, but-36)
nsubj(smell-39, she-37)
aux(smell-39, 'll-38)
conj:and(blowing-4, smell-39)
nmod:poss(road-41, her-40)
nsubj(to-night-43, road-41)
advmod(to-night-43, alone-42)
xcomp(smell-39, to-night-43)

(ROOT
  (S
    (VP (VB Sick)
      (SBAR
        (S
          (NP (PRP she))
          (VP
            (VP (VBZ is))
            (CC and)
            (VP (VBD harbour-sick) (: --)
              (S
                (NP (NNP O))
                (ADJP (JJ sick)
                  (S
                    (VP (TO to)
                      (VP (VB clear)
                        (NP (DT the) (NN land))))))))))))
    (. !)))

root(ROOT-0, Sick-1)
nsubj(is-3, she-2)
nsubj(harbour-sick-5, she-2)
ccomp(Sick-1, is-3)
cc(is-3, and-4)
ccomp(Sick-1, harbour-sick-5)
conj:and(is-3, harbour-sick-5)
nsubj(sick-8, O-7)
nsubj:xsubj(clear-10, O-7)
parataxis(harbour-sick-5, sick-8)
mark(clear-10, to-9)
xcomp(sick-8, clear-10)
det(land-12, the-11)
dobj(clear-10, land-12)

(ROOT
  (S
    (VP
      (VP (VB Roll)
        (ADVP (RB down)
          (PP (TO to)
            (NP (NNP Brest))))
        (PP (IN with)
          (NP
            (NP (DT the) (JJ old) (NNP Red) (NNP Ensign))
            (PP (IN over)
              (NP (PRP us)))))
        (: --)
        (ADVP (RB Carry))
        (PP (IN on)))
      (CC and)
      (VP (VB thrash)
        (NP (PRP her))
        (PRT (RP out))
        (PP (IN with)
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP (PRP she))
                (VP (MD 'll)
                  (VP (VB stand)))))))))
    (. !)))

root(ROOT-0, Roll-1)
advmod(Roll-1, down-2)
case(Brest-4, to-3)
nmod:to(down-2, Brest-4)
case(Ensign-9, with-5)
det(Ensign-9, the-6)
amod(Ensign-9, old-7)
compound(Ensign-9, Red-8)
nmod:on(Roll-1, Ensign-9)
case(us-11, over-10)
nmod:over(Ensign-9, us-11)
advmod(Roll-1, Carry-13)
case(Ensign-9, on-14)
cc(Roll-1, and-15)
conj:and(Roll-1, thrash-16)
dobj(thrash-16, her-17)
compound:prt(thrash-16, out-18)
case(all-20, with-19)
nmod:with(thrash-16, all-20)
nsubj(stand-23, she-21)
aux(stand-23, 'll-22)
acl:relcl(all-20, stand-23)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (NN ah))
      (VP (VBP fare)
        (NP (PRP you))
        (ADVP (RB well))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (PRP it) (POS 's))
          (NNP Ushant))
        (VP (VBZ slams)
          (NP
            (NP (DT the) (NN door))
            (PP (IN on)
              (NP (PRP us))))
          (, ,)
          (S
            (VP (VBG Whirling)
              (PP (IN like)
                (NP (DT a) (NN windmill)))
              (PP (IN through)
                (NP
                  (NP (DT the) (JJ dirty) (NN scud))
                  (PP (TO to)
                    (NP (NN lee)))))
              (: :)
              (PP (IN Till)
                (NP
                  (NP (DT the) (JJ last) (, ,) (JJ last) (NN flicker))
                  (VP (VBZ goes))))
              (PP (IN From)
                (NP (DT the) (VBG tumbling) (NNS water-rows)))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP we))
        (VP (VBP 're)
          (ADJP (RP off))
          (PP (TO to)
            (NP
              (NP (NNP Mother) (NNP Carey))
              (PRN (-LRB- -LRB-)
                (SQ
                  (VP (VBP Walk))
                  (NP (PRP her))
                  (ADVP (RB down)
                    (PP (TO to)
                      (NP (NNP Mother))))
                  (NP (NNP Carey))
                  (. !))
                (-RRB- -RRB-)))))))))

discourse(fare-4, Well-1)
nsubj(fare-4, ah-3)
root(ROOT-0, fare-4)
dobj(fare-4, you-5)
advmod(fare-4, well-6)
cc(fare-4, and-8)
nmod:poss(Ushant-11, it-9)
case(it-9, 's-10)
nsubj(slams-12, Ushant-11)
conj:and(fare-4, slams-12)
det(door-14, the-13)
dobj(slams-12, door-14)
case(us-16, on-15)
nmod:on(door-14, us-16)
advcl(slams-12, Whirling-18)
case(windmill-21, like-19)
det(windmill-21, a-20)
nmod:like(Whirling-18, windmill-21)
case(scud-25, through-22)
det(scud-25, the-23)
amod(scud-25, dirty-24)
nmod:through(Whirling-18, scud-25)
case(lee-27, to-26)
nmod:to(scud-25, lee-27)
case(flicker-34, Till-29)
det(flicker-34, the-30)
amod(flicker-34, last-31)
amod(flicker-34, last-33)
nmod:till(Whirling-18, flicker-34)
dep(flicker-34, goes-35)
case(water-rows-39, From-36)
det(water-rows-39, the-37)
amod(water-rows-39, tumbling-38)
nmod:from(Whirling-18, water-rows-39)
cc(slams-12, And-41)
nsubj(off-44, we-42)
cop(off-44, 're-43)
conj:and(fare-4, off-44)
conj:and(slams-12, off-44)
case(Carey-47, to-45)
compound(Carey-47, Mother-46)
nmod:to(off-44, Carey-47)
dep(Carey-47, Walk-49)
dep(Walk-49, her-50)
advmod(Walk-49, down-51)
case(Mother-53, to-52)
nmod:to(down-51, Mother-53)
dep(Walk-49, Carey-54)

(ROOT
  (S
    (SBAR
      (PRN (, ,)
        (INTJ (UH Oh))
        (, ,))
      (S
        (NP (PRP we))
        (VP (VBP 're)
          (VP (VBN bound)
            (PP (IN for)
              (NP (NNP Mother)))))))
    (VP (VBZ Carey)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP she))
          (VP (VBZ feeds)
            (NP (PRP$ her) (NNS chicks))
            (PP (IN at)
              (NP (NN sea)))))))
    (. !)))

discourse(bound-6, Oh-2)
nsubjpass(bound-6, we-4)
auxpass(bound-6, 're-5)
csubj(Carey-9, bound-6)
case(Mother-8, for-7)
nmod:for(bound-6, Mother-8)
root(ROOT-0, Carey-9)
advmod(feeds-12, where-10)
nsubj(feeds-12, she-11)
advcl(Carey-9, feeds-12)
nmod:poss(chicks-14, her-13)
dobj(feeds-12, chicks-14)
case(sea-16, at-15)
nmod:at(feeds-12, sea-16)

(ROOT
  (S
    (S
      (NP (DT THE) (NNP LOST) (NNP LEGION))
      (ADVP (RB There))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NNP Legion))
          (SBAR
            (WHNP (WDT that))
            (S
              (ADVP (RB never))
              (VP (VBD was) (`` `)
                (VP (VBN listed))))))))
    (, ,)
    (S
      (NP (DT That))
      (VP (VBZ carries)
        (NP
          (NP (DT no) (NNS colours))
          (CC or)
          (NP (NN crest)))))
    (, ,)
    (S (CC But)
      (, ,)
      (S
        (VP (VBN split)
          (PP (IN in)
            (NP (DT a) (CD thousand) (NNS detachments)))))
      (, ,)
      (VP (VBZ Is)
        (VP (VBG breaking)
          (NP
            (NP (DT the) (NN road))
            (PP (IN for)
              (NP (DT the) (NN rest)))))))
    (. .)))

det(LEGION-3, THE-1)
compound(LEGION-3, LOST-2)
nsubj(Legion-7, LEGION-3)
advmod(Legion-7, There-4)
cop(Legion-7, 's-5)
det(Legion-7, a-6)
root(ROOT-0, Legion-7)
nsubjpass(listed-12, Legion-7)
ref(Legion-7, that-8)
neg(listed-12, never-9)
auxpass(listed-12, was-10)
acl:relcl(Legion-7, listed-12)
nsubj(carries-15, That-14)
parataxis(Legion-7, carries-15)
neg(colours-17, no-16)
dobj(carries-15, colours-17)
cc(colours-17, or-18)
dobj(carries-15, crest-19)
conj:or(colours-17, crest-19)
cc(breaking-30, But-21)
dep(breaking-30, split-23)
case(detachments-27, in-24)
det(detachments-27, a-25)
nummod(detachments-27, thousand-26)
nmod:in(split-23, detachments-27)
aux(breaking-30, Is-29)
parataxis(Legion-7, breaking-30)
det(road-32, the-31)
dobj(breaking-30, road-32)
case(rest-35, for-33)
det(rest-35, the-34)
nmod:for(road-32, rest-35)

(ROOT
  (FRAG
    (NP
      (NP (PRP$ Our) (NNS fathers))
      (SBAR
        (S
          (S
            (NP (PRP they))
            (VP (VBD left)
              (S
                (NP (PRP us))
                (NP (PRP$ their) (NN blessing)))))
          (: --)
          (S
            (NP (PRP They))
            (VP
              (VP (VBD taught)
                (NP (PRP us)))
              (, ,)
              (CC and)
              (VP (VBD groomed)
                (NP (PRP us)))
              (, ,)
              (CC and)
              (VP (VBD crammed))))
          (: ;)
          (S (CC But)
            (NP (PRP we))
            (VP (VBP 've)
              (VP (VBN shaken)
                (S
                  (NP
                    (NP (DT the) (NNS Clubs))
                    (CC and)
                    (NP (DT the) (NNPS Messes)))
                  (VP (TO To)
                    (VP
                      (VP (VB go))
                      (CC and)
                      (VP
                        (VP (VB find)
                          (PRT (RP out)))
                        (CC and)
                        (VP (VB be)
                          (ADJP (JJ damned))
                          (PRN (-LRB- -LRB-)
                            (ADVP (RB Dear))
                            (ADJP (FW boys) (. !))
                            (-RRB- -RRB-)))))))))))))))

nmod:poss(fathers-2, Our-1)
root(ROOT-0, fathers-2)
nsubj(left-4, they-3)
acl:relcl(fathers-2, left-4)
nsubj(blessing-7, us-5)
nmod:poss(blessing-7, their-6)
xcomp(left-4, blessing-7)
nsubj(taught-10, They-9)
nsubj(groomed-14, They-9)
nsubj(crammed-18, They-9)
parataxis(left-4, taught-10)
dobj(taught-10, us-11)
cc(taught-10, and-13)
parataxis(left-4, groomed-14)
conj:and(taught-10, groomed-14)
dobj(groomed-14, us-15)
cc(taught-10, and-17)
parataxis(left-4, crammed-18)
conj:and(taught-10, crammed-18)
cc(shaken-23, But-20)
nsubj(shaken-23, we-21)
aux(shaken-23, 've-22)
parataxis(left-4, shaken-23)
det(Clubs-25, the-24)
dobj(shaken-23, Clubs-25)
nsubj:xsubj(go-30, Clubs-25)
nsubj:xsubj(find-32, Clubs-25)
cc(Clubs-25, and-26)
det(Messes-28, the-27)
dobj(shaken-23, Messes-28)
conj:and(Clubs-25, Messes-28)
nsubj:xsubj(go-30, Messes-28)
mark(go-30, To-29)
xcomp(shaken-23, go-30)
cc(go-30, and-31)
xcomp(shaken-23, find-32)
conj:and(go-30, find-32)
compound:prt(find-32, out-33)
cc(find-32, and-34)
cop(damned-36, be-35)
conj:and(go-30, damned-36)
conj:and(find-32, damned-36)
dep(boys-39, Dear-38)
dep(damned-36, boys-39)

(ROOT
  (S
    (VP
      (VP (, ,)
        (S
          (VP (TO To)
            (VP (VB go)
              (CC and)
              (VB get)
              (NP (NN shot))))))
      (CC and)
      (VP (VB be)
        (ADJP (JJ damned))))
    (. .)))

mark(go-3, To-2)
root(ROOT-0, go-3)
cc(go-3, and-4)
conj:and(go-3, get-5)
dobj(go-3, shot-6)
cc(go-3, and-7)
cop(damned-9, be-8)
conj:and(go-3, damned-9)

(ROOT
  (S
    (S
      (S (CC So)
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP (PRP us))))
        (VP (VBP chivy)
          (NP (DT the) (NN slaver))))
      (, ,)
      (CC And)
      (S
        (S
          (NP
            (NP (DT some))
            (PP (IN of)
              (NP (PRP us))))
          (VP (VBP cherish)
            (NP (DT the) (JJ black))))
        (, ,)
        (CC And)
        (S
          (NP
            (NP (DT some))
            (PP (IN of)
              (NP (PRP us))))
          (VP (VBZ hunt)
            (PRT (RP on))
            (NP (DT the)
              (NP (NNP Oil) (NNP Coast))
              (, ,)
              (CC And)
              (NP
                (NP (DT some))
                (PP (IN on)))
              (: --)
              (NP (DT the) (NNP Wallaby) (NN track)))))))
    (: :)
    (S (CC And)
      (S
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP (PRP us))))
        (VP (VB drift)
          (PP (TO to)
            (NP (NNP Sarawak)))))
      (, ,)
      (CC And)
      (S
        (S
          (NP
            (NP (DT some))
            (PP (IN of)
              (NP (PRP us))))
          (VP (VB drift)
            (PRT (RP up))
            (NP (DT The) (NN Fly))))
        (, ,)
        (CC And)
        (S
          (NP (DT some))
          (VP (VBP share)
            (NP
              (NP
                (NP (PRP$ our) (NN tucker))
                (PP (IN with)
                  (NP (NNS tigers))))
              (, ,)
              (CC And)
              (NP
                (NP (DT some))
                (PP (IN with)
                  (NP
                    (NP (DT the) (JJ gentle) (NNP Masai))
                    (PRN (-LRB- -LRB-)
                      (INTJ (UH Dear) (UH boys))
                      (. !) (-RRB- -RRB-))))))))))))

cc(chivy-5, So-1)
nsubj(chivy-5, some-2)
case(us-4, of-3)
nmod:of(some-2, us-4)
root(ROOT-0, chivy-5)
det(slaver-7, the-6)
dobj(chivy-5, slaver-7)
cc(chivy-5, And-9)
nsubj(cherish-13, some-10)
case(us-12, of-11)
nmod:of(some-10, us-12)
conj:and(chivy-5, cherish-13)
det(black-15, the-14)
dobj(cherish-13, black-15)
cc(cherish-13, And-17)
nsubj(hunt-21, some-18)
case(us-20, of-19)
nmod:of(some-18, us-20)
conj:and(chivy-5, hunt-21)
conj:and(cherish-13, hunt-21)
compound:prt(hunt-21, on-22)
dep(Coast-25, the-23)
compound(Coast-25, Oil-24)
dobj(hunt-21, Coast-25)
cc(Coast-25, And-27)
dobj(hunt-21, some-28)
conj:and(Coast-25, some-28)
acl(some-28, on-29)
det(track-33, the-31)
compound(track-33, Wallaby-32)
dobj(hunt-21, track-33)
conj:and(Coast-25, track-33)
cc(drift-39, And-35)
nsubj(drift-39, some-36)
case(us-38, of-37)
nmod:of(some-36, us-38)
parataxis(chivy-5, drift-39)
case(Sarawak-41, to-40)
nmod:to(drift-39, Sarawak-41)
cc(drift-39, And-43)
nsubj(drift-47, some-44)
case(us-46, of-45)
nmod:of(some-44, us-46)
parataxis(chivy-5, drift-47)
conj:and(drift-39, drift-47)
compound:prt(drift-47, up-48)
det(Fly-50, The-49)
dobj(drift-47, Fly-50)
cc(drift-47, And-52)
nsubj(share-54, some-53)
conj:and(drift-39, share-54)
conj:and(drift-47, share-54)
nmod:poss(tucker-56, our-55)
dobj(share-54, tucker-56)
case(tigers-58, with-57)
nmod:with(tucker-56, tigers-58)
cc(tucker-56, And-60)
dobj(share-54, some-61)
conj:and(tucker-56, some-61)
case(Masai-65, with-62)
det(Masai-65, the-63)
amod(Masai-65, gentle-64)
nmod:with(some-61, Masai-65)
dep(Masai-65, Dear-67)
dep(Dear-67, boys-68)

(ROOT
  (NP
    (NP (, ,) (JJ Take) (NN tea))
    (PP (IN with)
      (NP (DT the) (JJ giddy) (NNP Masai)))
    (. .)))

amod(tea-3, Take-2)
root(ROOT-0, tea-3)
case(Masai-7, with-4)
det(Masai-7, the-5)
amod(Masai-7, giddy-6)
nmod:with(tea-3, Masai-7)

(ROOT
  (S
    (S
      (S
        (NP (PRP We))
        (VP (VBP 've)
          (VP (VBN painted)
            (NP (DT The) (NNP Islands) (NN vermilion)))))
      (, ,)
      (S
        (NP (PRP We))
        (VP (VBP 've)
          (VP (VBN pearled)
            (PP (IN on)
              (NP
                (NP (NNS half-shares))
                (PP (IN in)
                  (NP (DT the) (NNP Bay))))))))
      (, ,)
      (S
        (NP (PRP We))
        (VP (VBP 've)
          (VP (VBD shouted)
            (PP (IN on)
              (NP (JJ seven-ounce) (NNS nuggets))))))
      (, ,)
      (S
        (NP (PRP We))
        (VP (VBP 've)
          (VP (VBN starved)
            (PP (IN on)
              (NP
                (NP (DT a) (NNP Seedeeboy) (POS 's))
                (NN pay)))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN laughed)
          (PP (IN at)
            (NP (DT the) (NN world)))
          (SBAR (IN as)
            (S
              (NP (PRP we))
              (VP (VBD found)
                (NP
                  (NP (PRP it))
                  (PRN (: --)
                    (NP
                      (NP (PRP$ Its) (NNS women)
                        (CC and)
                        (NNS cities))
                      (CC and)
                      (NP (NNS men)))
                    (: --)))
                (PP (IN From)
                  (NP
                    (NP (NNP Sayyid) (NNP Burgash))
                    (PP (IN in)
                      (NP (DT a) (NN tantrum)))))
                (PP (TO To)
                  (NP
                    (NP (DT the) (JJ smoke-reddened) (NNS eyes))
                    (PP (IN of)
                      (NP
                        (NP (NNP Loben))
                        (PRN (-LRB- -LRB-)
                          (INTJ (UH Dear) (UH boys))
                          (. !) (-RRB- -RRB-))))))))))))))

nsubj(painted-3, We-1)
aux(painted-3, 've-2)
root(ROOT-0, painted-3)
det(vermilion-6, The-4)
compound(vermilion-6, Islands-5)
dobj(painted-3, vermilion-6)
nsubj(pearled-10, We-8)
aux(pearled-10, 've-9)
parataxis(painted-3, pearled-10)
case(half-shares-12, on-11)
nmod:on(pearled-10, half-shares-12)
case(Bay-15, in-13)
det(Bay-15, the-14)
nmod:in(half-shares-12, Bay-15)
nsubj(shouted-19, We-17)
aux(shouted-19, 've-18)
parataxis(painted-3, shouted-19)
case(nuggets-22, on-20)
amod(nuggets-22, seven-ounce-21)
nmod:on(shouted-19, nuggets-22)
nsubj(starved-26, We-24)
aux(starved-26, 've-25)
parataxis(painted-3, starved-26)
case(pay-31, on-27)
det(Seedeeboy-29, a-28)
nmod:poss(pay-31, Seedeeboy-29)
case(Seedeeboy-29, 's-30)
nmod:on(starved-26, pay-31)
nsubj(laughed-35, We-33)
aux(laughed-35, 've-34)
parataxis(painted-3, laughed-35)
case(world-38, at-36)
det(world-38, the-37)
nmod:at(laughed-35, world-38)
mark(found-41, as-39)
nsubj(found-41, we-40)
advcl(laughed-35, found-41)
dobj(found-41, it-42)
nmod:poss(women-45, Its-44)
dep(it-42, women-45)
cc(women-45, and-46)
dep(it-42, cities-47)
conj:and(women-45, cities-47)
cc(women-45, and-48)
dep(it-42, men-49)
conj:and(women-45, men-49)
case(Burgash-53, From-51)
compound(Burgash-53, Sayyid-52)
nmod:from(found-41, Burgash-53)
case(tantrum-56, in-54)
det(tantrum-56, a-55)
nmod:in(Burgash-53, tantrum-56)
case(eyes-60, To-57)
det(eyes-60, the-58)
amod(eyes-60, smoke-reddened-59)
nmod:to(found-41, eyes-60)
case(Loben-62, of-61)
nmod:of(eyes-60, Loben-62)
dep(Loben-62, Dear-64)
dep(Dear-64, boys-65)

(ROOT
  (PRN (, ,)
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (NP (DT a) (JJ little) (NN account))
        (PP (IN with)
          (FRAG
            (NP (NNP Loben))
            (. .)))))))

nsubj('ve-3, We-2)
root(ROOT-0, 've-3)
det(account-6, a-4)
amod(account-6, little-5)
dobj('ve-3, account-6)
case(Loben-8, with-7)
advcl('ve-3, Loben-8)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS ends) (NN o) ('' '))
        (NP (DT the) (NN Earth)))
      (VP (VBD were)
        (NP (PRP$ our) (NN portion))))
    (, ,)
    (NP (DT The) (NN ocean))
    (ADVP (IN at) (JJ large))
    (VP (VBD was)
      (NP (PRP$ our) (NN share)))
    (. .)))

det(o-3, The-1)
compound(o-3, ends-2)
nsubj(portion-9, o-3)
det(Earth-6, the-5)
dep(o-3, Earth-6)
cop(portion-9, were-7)
nmod:poss(portion-9, our-8)
ccomp(share-17, portion-9)
det(ocean-12, The-11)
nsubj(share-17, ocean-12)
case(large-14, at-13)
advmod(share-17, large-14)
cop(share-17, was-15)
nmod:poss(share-17, our-16)
root(ROOT-0, share-17)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (ADVP (RB never))
        (NP (DT a) (NN skirmish)
          (S
            (VP (TO to)
              (VP (VB windward)))))))
    (CC But)
    (S
      (NP (DT the) (NNP Leaderless) (NNP Legion))
      (VP (VBD was)
        (NP
          (NP (RB there))
          (: :)
          (ADVP (RB Yes)))
        (, ,)
        (ADVP (RB somehow))))
    (CC and)
    (S
      (ADVP (RB somewhere)
        (CC and)
        (RB always))
      (NP (PRP We))
      (VP (VBD were)
        (ADJP (JJ first))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN trouble))
            (VP (VBD began) (, ,)
              (PP (IN From)
                (NP
                  (NP (DT a) (NN lottery-row))
                  (PP (IN in)
                    (NP (NNP Manila)))))
              (, ,)
              (PP (TO To)
                (NP
                  (NP (DT an) (NNP I.D.B.) (NN race))
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NNP Pan))
                      (PRN (-LRB- -LRB-)
                        (INTJ (UH Dear) (UH boys))
                        (. !) (-RRB- -RRB-)))))))))))))

expl(was-2, There-1)
root(ROOT-0, was-2)
neg(was-2, never-3)
det(skirmish-5, a-4)
nsubj(was-2, skirmish-5)
mark(windward-7, to-6)
acl(skirmish-5, windward-7)
cc(was-2, But-8)
det(Legion-11, the-9)
compound(Legion-11, Leaderless-10)
nsubj(there-13, Legion-11)
cop(there-13, was-12)
conj:but(was-2, there-13)
advmod(there-13, Yes-15)
advmod(there-13, somehow-17)
cc(was-2, and-18)
advmod(first-24, somewhere-19)
cc(somewhere-19, and-20)
conj:and(somewhere-19, always-21)
advmod(first-24, always-21)
nsubj(first-24, We-22)
cop(first-24, were-23)
conj:but(was-2, first-24)
advmod(began-28, when-25)
det(trouble-27, the-26)
nsubj(began-28, trouble-27)
advcl(first-24, began-28)
case(lottery-row-32, From-30)
det(lottery-row-32, a-31)
nmod:from(began-28, lottery-row-32)
case(Manila-34, in-33)
nmod:in(lottery-row-32, Manila-34)
case(race-39, To-36)
det(race-39, an-37)
compound(race-39, I.D.B.-38)
nmod:to(began-28, race-39)
case(Pan-42, on-40)
det(Pan-42, the-41)
nmod:on(race-39, Pan-42)
dep(Pan-42, Dear-44)
dep(Dear-44, boys-45)

(ROOT
  (NP
    (NP
      (NP
        (PRN (, ,)
          (PP (IN With)
            (NP (DT the) (NNP Mounted))))
        (NNS Police))
      (PP (IN on)
        (NP (DT the) (NNP Pan))))
    (. .)))

case(Mounted-4, With-2)
det(Mounted-4, the-3)
nmod:with(Police-5, Mounted-4)
root(ROOT-0, Police-5)
case(Pan-8, on-6)
det(Pan-8, the-7)
nmod:on(Police-5, Pan-8)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP preach)
        (PP (IN in)
          (NP
            (NP (NN advance))
            (PP (IN of)
              (NP (DT the) (NNP Army)))))))
    (, ,)
    (NP (PRP We))
    (VP (VBD skirmish)
      (ADVP (RB ahead))
      (PP (IN of)
        (NP (DT the) (NNP Church)))
      (, ,)
      (PP (IN With)
        (ADVP (RB never))
        (NP (DT a) (NN gunboat)
          (S
            (VP (TO to)
              (VP (VB help)
                (NP (PRP us))
                (SBAR
                  (WHADVP (WRB When))
                  (S
                    (NP (PRP we))
                    (VP (VBP 're)
                      (VP (VBN scuppered)
                        (CC and)
                        (VBN left)
                        (PP (IN in)
                          (NP (DT the) (NN lurch)))))))))))))
    (. .)))

nsubj(preach-2, We-1)
ccomp(skirmish-10, preach-2)
case(advance-4, in-3)
nmod:in(preach-2, advance-4)
case(Army-7, of-5)
det(Army-7, the-6)
nmod:of(advance-4, Army-7)
nsubj(skirmish-10, We-9)
root(ROOT-0, skirmish-10)
advmod(skirmish-10, ahead-11)
case(Church-14, of-12)
det(Church-14, the-13)
nmod:of(skirmish-10, Church-14)
case(gunboat-19, With-16)
advmod(gunboat-19, never-17)
det(gunboat-19, a-18)
nmod:with(skirmish-10, gunboat-19)
mark(help-21, to-20)
acl(gunboat-19, help-21)
dobj(help-21, us-22)
advmod(scuppered-26, When-23)
nsubjpass(scuppered-26, we-24)
nsubjpass(left-28, we-24)
auxpass(scuppered-26, 're-25)
advcl(help-21, scuppered-26)
cc(scuppered-26, and-27)
advcl(help-21, left-28)
conj:and(scuppered-26, left-28)
case(lurch-31, in-29)
det(lurch-31, the-30)
nmod:in(scuppered-26, lurch-31)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP know)
      (SBAR (IN as)
        (S
          (S
            (S
              (NP (DT the) (NNS cartridges))
              (VP (VBP finish)))
            (, ,)
            (CC And)
            (S
              (NP (PRP we))
              (VP (VBP 're)
                (VP (VBN filed)
                  (PP (IN on)
                    (NP (PRP$ our) (JJ last) (JJ little) (NNS shelves)))))))
          (, ,)
          (S
            (NP (DT That))
            (VP
              (NP
                (NP (DT the) (NNP Legion))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (ADVP (RB never))
                    (VP (VBD was) (`` `)
                      (VP (VBN listed)
                        (S
                          (NP (NNP Will))
                          (VP (VB send)
                            (S
                              (NP (PRP us))
                              (ADJP (RB as) (JJ good)
                                (PP (IN as)
                                  (NP (PRP ourselves))))))))))))
              (PRN (-LRB- -LRB-)
                (FRAG
                  (NP (JJ Good) (NNS men))
                  (. !))
                (-RRB- -RRB-)))))))))

cc(know-3, But-1)
nsubj(know-3, we-2)
root(ROOT-0, know-3)
mark(finish-7, as-4)
det(cartridges-6, the-5)
nsubj(finish-7, cartridges-6)
advcl(know-3, finish-7)
cc(finish-7, And-9)
nsubjpass(filed-12, we-10)
auxpass(filed-12, 're-11)
advcl(know-3, filed-12)
conj:and(finish-7, filed-12)
case(shelves-17, on-13)
nmod:poss(shelves-17, our-14)
amod(shelves-17, last-15)
amod(shelves-17, little-16)
nmod:on(filed-12, shelves-17)
nsubj(Legion-21, That-19)
det(Legion-21, the-20)
parataxis(finish-7, Legion-21)
nsubjpass(listed-26, Legion-21)
ref(Legion-21, that-22)
neg(listed-26, never-23)
auxpass(listed-26, was-24)
acl:relcl(Legion-21, listed-26)
nsubj(send-28, Will-27)
ccomp(listed-26, send-28)
nsubj(good-31, us-29)
advmod(good-31, as-30)
xcomp(send-28, good-31)
case(ourselves-33, as-32)
nmod:as(good-31, ourselves-33)
amod(men-36, Good-35)
dep(Legion-21, men-36)

(ROOT
  (FRAG
    (FRAG (, ,)
      (NP (CD Five)))
    (: hundred)
    (FRAG
      (ADJP (RB as) (JJ good)
        (PP (IN as)
          (NP (PRP ourselves))))
      (. .))))

root(ROOT-0, Five-2)
advmod(good-5, as-4)
parataxis(Five-2, good-5)
case(ourselves-7, as-6)
nmod:as(good-5, ourselves-7)

(ROOT
  (S (RB Then)
    (NP
      (NP (DT a) (NN health))
      (PRN (-LRB- -LRB-)
        (S
          (NP (PRP we))
          (VP (MD must)
            (VP (VB drink)
              (NP (PRP it))
              (PP (IN in)
                (NP (NNS whispers))))))
        (-RRB- -RRB-))
      (PP (TO To)
        (NP
          (NP (PRP$ our)
            (ADJP (RB wholly) (JJ unauthorised))
            (NN horde))
          (SBAR
            (S
              (PRN (: --)
                (PP (TO To)
                  (NP
                    (NP (DT the) (NN line))
                    (PP (IN of)
                      (NP (PRP$ our) (JJ dusty) (NNS foreloopers)))))
                (, ,)
                (ADVP
                  (NP (DT The) (JJ Gentlemen) (NNS Rovers))
                  (RB abroad))
                (: --))
              (S
                (INTJ (UH Yes))
                (, ,)
                (NP
                  (NP (DT a) (NN health))
                  (PP (TO to)
                    (NP (PRP ourselves))))
                (VP (VBP ere)
                  (S
                    (NP (PRP we))
                    (ADJP (JJ scatter)))))
              (, ,) (IN For)
              (S
                (NP (DT the) (NN steamer))
                (VP (MD wo) (RB n't)
                  (VP (VB wait)
                    (PP (IN for)
                      (NP (DT the) (NN train))))))
              (, ,)
              (CC And)
              (S
                (NP (DT the) (NNP Legion))
                (ADVP (RB that) (RB never))
                (VP (VBD was) (`` `)
                  (VP (VBN listed)))))))))
    (VP (VBZ Goes)
      (ADVP (RB back))
      (PP (IN into)
        (NP (NNS quarters)))
      (ADVP (RB again)))
    (. !)))

advmod(Goes-59, Then-1)
det(health-3, a-2)
nsubj(Goes-59, health-3)
nsubj(drink-7, we-5)
aux(drink-7, must-6)
dep(health-3, drink-7)
dobj(drink-7, it-8)
case(whispers-10, in-9)
nmod:in(drink-7, whispers-10)
case(horde-16, To-12)
nmod:poss(horde-16, our-13)
advmod(unauthorised-15, wholly-14)
amod(horde-16, unauthorised-15)
nmod:to(health-3, horde-16)
case(line-20, To-18)
det(line-20, the-19)
dep(ere-37, line-20)
case(foreloopers-24, of-21)
nmod:poss(foreloopers-24, our-22)
amod(foreloopers-24, dusty-23)
nmod:of(line-20, foreloopers-24)
det(Rovers-28, The-26)
amod(Rovers-28, Gentlemen-27)
nmod:npmod(abroad-29, Rovers-28)
dep(line-20, abroad-29)
discourse(ere-37, Yes-31)
det(health-34, a-33)
nsubj(ere-37, health-34)
case(ourselves-36, to-35)
nmod:to(health-34, ourselves-36)
acl:relcl(horde-16, ere-37)
nsubj(scatter-39, we-38)
xcomp(ere-37, scatter-39)
dep(ere-37, For-41)
det(steamer-43, the-42)
nsubj(wait-46, steamer-43)
aux(wait-46, wo-44)
neg(wait-46, n't-45)
ccomp(ere-37, wait-46)
case(train-49, for-47)
det(train-49, the-48)
nmod:for(wait-46, train-49)
cc(ere-37, And-51)
det(Legion-53, the-52)
nsubjpass(listed-58, Legion-53)
advmod(never-55, that-54)
neg(listed-58, never-55)
auxpass(listed-58, was-56)
acl:relcl(horde-16, listed-58)
conj:and(ere-37, listed-58)
root(ROOT-0, Goes-59)
advmod(Goes-59, back-60)
case(quarters-62, into-61)
nmod:into(Goes-59, quarters-62)
advmod(Goes-59, again-63)

(ROOT
  (S (`` `)
    (VP (VB Regards))
    (. !)))

root(ROOT-0, Regards-2)

(ROOT
  (S
    (VP (VBZ Goes)
      (ADVP (RB back))
      (PP (IN under)
        (NP (NN canvas)))
      (ADVP (RB again)))
    (. .)))

root(ROOT-0, Goes-1)
advmod(Goes-1, back-2)
case(canvas-4, under-3)
nmod:under(Goes-1, canvas-4)
advmod(Goes-1, again-5)

(ROOT
  (S
    (VP (VB Hurrah))
    (. !)))

root(ROOT-0, Hurrah-1)

(ROOT
  (S
    (NP
      (NP (DT The) (NN swag))
      (CC and)
      (NP (DT the)))
    (VP (VBP billy)
      (ADVP (RB again)))
    (. .)))

det(swag-2, The-1)
nsubj(billy-5, swag-2)
cc(swag-2, and-3)
conj:and(swag-2, the-4)
nsubj(billy-5, the-4)
root(ROOT-0, billy-5)
advmod(billy-5, again-6)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ 's)
      (NP (WRB how)))
    (. !)))

nsubj(how-3, Here-1)
cop(how-3, 's-2)
root(ROOT-0, how-3)

(ROOT
  (S
    (NP
      (NP (DT The) (NN trail))
      (CC and)
      (NP (DT the)))
    (VP (VBP packhorse)
      (ADVP (RB again)))
    (. .)))

det(trail-2, The-1)
nsubj(packhorse-5, trail-2)
cc(trail-2, and-3)
conj:and(trail-2, the-4)
nsubj(packhorse-5, the-4)
root(ROOT-0, packhorse-5)
advmod(packhorse-5, again-6)

(ROOT
  (S
    (VP (VB Salue))
    (. !)))

root(ROOT-0, Salue-1)

(ROOT
  (S
    (NP
      (NP (DT The) (NN trek))
      (CC and)
      (NP (DT the)))
    (VP (VBP laager)
      (ADVP (RB again)))
    (. .)))

det(trek-2, The-1)
nsubj(laager-5, trek-2)
cc(trek-2, and-3)
conj:and(trek-2, the-4)
nsubj(laager-5, the-4)
root(ROOT-0, laager-5)
advmod(laager-5, again-6)

(ROOT
  (S
    (S
      (S
        (NP (DT THE) (NN SEA-WIFE))
        (ADVP (RB There))
        (VP (VBZ dwells)
          (NP (DT a) (NN wife))
          (PP (IN by)
            (NP (DT the) (NNP Northern) (NNP Gate)))))
      (, ,)
      (CC And)
      (S
        (NP (DT a) (JJ wealthy) (NN wife))
        (VP (VBZ is)
          (NP (PRP she)))))
    (: ;)
    (S
      (NP (PRP She))
      (VP (VBZ breeds)
        (NP
          (NP
            (NP (DT a) (NN breed) (NN o) (POS '))
            (NN rovin) ('' ') (NNS men))
          (SBAR (CC And)
            (S
              (VP (VBZ casts)
                (NP (PRP them))
                (PP (IN over)
                  (NP (NN sea)))))))))
    (. .)))

det(SEA-WIFE-2, THE-1)
nsubj(dwells-4, SEA-WIFE-2)
advmod(dwells-4, There-3)
root(ROOT-0, dwells-4)
det(wife-6, a-5)
dobj(dwells-4, wife-6)
case(Gate-10, by-7)
det(Gate-10, the-8)
compound(Gate-10, Northern-9)
nmod:by(dwells-4, Gate-10)
cc(dwells-4, And-12)
det(wife-15, a-13)
amod(wife-15, wealthy-14)
nsubj(she-17, wife-15)
cop(she-17, is-16)
conj:and(dwells-4, she-17)
nsubj(breeds-20, She-19)
parataxis(dwells-4, breeds-20)
det(o-23, a-21)
compound(o-23, breed-22)
nmod:poss(men-27, o-23)
case(o-23, '-24)
compound(men-27, rovin-25)
dobj(breeds-20, men-27)
cc(casts-29, And-28)
dep(men-27, casts-29)
dobj(casts-29, them-30)
case(sea-32, over-31)
nmod:over(casts-29, sea-32)

(ROOT
  (S (CC And)
    (S
      (S
        (NP (DT some))
        (VP (VBP are)
          (VP (VBN drowned)
            (PP (IN in)
              (NP (JJ deep) (NN water))))))
      (, ,)
      (CC And)
      (S
        (S
          (NP
            (NP (DT some))
            (PP (IN in)
              (NP (NN sight))))
          (VP (VBP o)
            (S
              (NP (POS '))
              (VP (NN shore)))))
        (, ,)
        (CC And)
        (S
          (NP (NN word))
          (VP (VBZ goes)
            (PRT (RP back))
            (PP (TO to)
              (NP (DT the) (JJ weary) (NN wife)))))))
    (CC And)
    (ADVP (RB ever))
    (S
      (NP (PRP she))
      (VP (VBZ sends)
        (ADJP (JJR more))))
    (. .)))

cc(drowned-4, And-1)
nsubjpass(drowned-4, some-2)
auxpass(drowned-4, are-3)
root(ROOT-0, drowned-4)
case(water-7, in-5)
amod(water-7, deep-6)
nmod:in(drowned-4, water-7)
cc(drowned-4, And-9)
nsubj(o-13, some-10)
case(sight-12, in-11)
nmod:in(some-10, sight-12)
conj:and(drowned-4, o-13)
nsubj(shore-15, '-14)
ccomp(o-13, shore-15)
cc(o-13, And-17)
nsubj(goes-19, word-18)
conj:and(drowned-4, goes-19)
conj:and(o-13, goes-19)
compound:prt(goes-19, back-20)
case(wife-24, to-21)
det(wife-24, the-22)
amod(wife-24, weary-23)
nmod:to(goes-19, wife-24)
cc(drowned-4, And-25)
advmod(sends-28, ever-26)
nsubj(sends-28, she-27)
conj:and(drowned-4, sends-28)
xcomp(sends-28, more-29)

(ROOT
  (S (IN For)
    (SBAR (IN since)
      (S
        (NP (DT that) (NN wife))
        (VP
          (VP (VBD had)
            (NP
              (NP (NN gate)
                (CC or)
                (NN gear))
              (, ,)
              (CC Or)
              (NP (NN hearth)
                (CC or)
                (NN garth))))
          (CC or)
          (VP (VBD bield)))))
    (, ,)
    (S
      (NP (PRP She))
      (VP (VBD willed)
        (NP (PRP$ her) (NNS sons))
        (PP (TO to)
          (NP (DT the) (JJ white) (NN harvest)))))
    (, ,)
    (CC And)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (NP (DT a) (JJ bitter) (NN yield))))
    (. .)))

dep(willed-18, For-1)
mark(had-5, since-2)
det(wife-4, that-3)
nsubj(had-5, wife-4)
nsubj(bield-15, wife-4)
dep(willed-18, had-5)
dobj(had-5, gate-6)
cc(gate-6, or-7)
dobj(had-5, gear-8)
conj:or(gate-6, gear-8)
cc(gate-6, Or-10)
dobj(had-5, hearth-11)
conj:or(gate-6, hearth-11)
cc(hearth-11, or-12)
conj:or(gate-6, garth-13)
conj:or(hearth-11, garth-13)
cc(had-5, or-14)
conj:or(had-5, bield-15)
dep(willed-18, bield-15)
nsubj(willed-18, She-17)
root(ROOT-0, willed-18)
nmod:poss(sons-20, her-19)
dobj(willed-18, sons-20)
case(harvest-24, to-21)
det(harvest-24, the-22)
amod(harvest-24, white-23)
nmod:to(willed-18, harvest-24)
cc(willed-18, And-26)
nsubj(yield-31, that-27)
cop(yield-31, is-28)
det(yield-31, a-29)
amod(yield-31, bitter-30)
conj:and(willed-18, yield-31)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD wills)
        (NP (PRP$ her) (NNS sons))
        (PP (TO to)
          (NP (DT the) (JJ wet) (NN ploughing)))
        (, ,)
        (S
          (VP (TO To)
            (VP (VB ride)
              (NP
                (NP (DT the) (NN horse))
                (PP (IN of)
                  (NP (NN tree)))))))))
    (, ,)
    (CC And)
    (S
      (ADVP (RB syne))
      (NP (PRP$ her) (NNS sons))
      (VP (VBP come)
        (ADVP (RB back) (RB again))
        (PP
          (ADVP (RB Far-spent))
          (IN from) (IN out)
          (NP (DT the) (NN sea)))))
    (. .)))

nsubj(wills-2, She-1)
root(ROOT-0, wills-2)
nmod:poss(sons-4, her-3)
dobj(wills-2, sons-4)
case(ploughing-8, to-5)
det(ploughing-8, the-6)
amod(ploughing-8, wet-7)
nmod:to(wills-2, ploughing-8)
mark(ride-11, To-10)
advcl(wills-2, ride-11)
det(horse-13, the-12)
dobj(ride-11, horse-13)
case(tree-15, of-14)
nmod:of(horse-13, tree-15)
cc(wills-2, And-17)
advmod(come-21, syne-18)
nmod:poss(sons-20, her-19)
nsubj(come-21, sons-20)
conj:and(wills-2, come-21)
advmod(again-23, back-22)
advmod(come-21, again-23)
advmod(sea-28, Far-spent-24)
case(sea-28, from-25)
case(sea-28, out-26)
det(sea-28, the-27)
nmod:out(come-21, sea-28)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ good) (NN wife) (POS 's))
        (NNS sons))
      (VP (VBP come)
        (S
          (NP (NN home))
          (ADVP (RB again))
          (PP (IN With)
            (NP (RB little))))
        (PP (IN into)
          (NP (PRP$ their) (NNS hands)))))
    (, ,)
    (CC But)
    (S
      (NP
        (NP (DT the) (NN lore))
        (PP (IN of)
          (NP (NNS men)))
        (SBAR (IN that)
          (S
            (NP (NNP ha) (POS '))
            (VP (VBN dealt)
              (PP (IN with)
                (NP (NNS men)))))))
      (PP (IN In)
        (NP (DT the) (JJ new)
          (CC and)
          (JJ naked) (NNS lands))))
    (: ;)
    (CC But)
    (S
      (S
        (NP
          (NP (DT the) (NN faith))
          (PP (IN of)
            (NP
              (NP (NNS men))
              (NP (DT that) (NN ha) (POS ')))))
        (VP (VBD brothered)
          (S
            (NP (NNS men))
            (PP (IN By)
              (NP
                (ADJP (RBR more) (IN than) (JJ easy))
                (NN breath))))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP
            (NP (DT the) (NNS eyes) (NN o) (POS '))
            (NNS men))
          (SBAR (IN that)
            (S
              (NP (NNP ha) (POS '))
              (VP (VBD read)
                (NP
                  (NP (NNP wi) (POS '))
                  (NNS men))))))
        (PP (IN In)
          (NP
            (NP (DT the) (JJ open) (NNS books))
            (PP (IN of)
              (NP (NN death)))))))
    (. .)))

det(wife-3, The-1)
amod(wife-3, good-2)
nmod:poss(sons-5, wife-3)
case(wife-3, 's-4)
nsubj(come-6, sons-5)
root(ROOT-0, come-6)
xcomp(come-6, home-7)
advmod(home-7, again-8)
case(little-10, With-9)
dep(home-7, little-10)
case(hands-13, into-11)
nmod:poss(hands-13, their-12)
nmod:into(come-6, hands-13)
cc(come-6, But-15)
det(lore-17, the-16)
conj:but(come-6, lore-17)
case(men-19, of-18)
nmod:of(lore-17, men-19)
mark(dealt-23, that-20)
nsubj(dealt-23, ha-21)
case(ha-21, '-22)
dep(lore-17, dealt-23)
case(men-25, with-24)
nmod:with(dealt-23, men-25)
case(lands-31, In-26)
det(lands-31, the-27)
amod(lands-31, new-28)
cc(new-28, and-29)
conj:and(new-28, naked-30)
amod(lands-31, naked-30)
dep(lore-17, lands-31)
cc(come-6, But-33)
det(faith-35, the-34)
nsubj(brothered-41, faith-35)
case(men-37, of-36)
nmod:of(faith-35, men-37)
det(ha-39, that-38)
nmod:poss(men-37, ha-39)
case(ha-39, '-40)
conj:but(come-6, brothered-41)
xcomp(brothered-41, men-42)
case(breath-47, By-43)
advmod(easy-46, more-44)
dep(easy-46, than-45)
amod(breath-47, easy-46)
dep(men-42, breath-47)
cc(brothered-41, And-49)
det(o-52, the-50)
compound(o-52, eyes-51)
nmod:poss(men-54, o-52)
case(o-52, '-53)
conj:but(come-6, men-54)
conj:and(brothered-41, men-54)
mark(read-58, that-55)
nsubj(read-58, ha-56)
case(ha-56, '-57)
dep(men-54, read-58)
nmod:poss(men-61, wi-59)
case(wi-59, '-60)
dobj(read-58, men-61)
case(books-65, In-62)
det(books-65, the-63)
amod(books-65, open-64)
dep(men-54, books-65)
case(death-67, of-66)
nmod:of(books-65, death-67)

(ROOT
  (S
    (S
      (NP (NNP Rich))
      (VP (VBP are)
        (NP (PRP they))
        (, ,)
        (S
          (ADJP (JJ rich)
            (PP (IN in)
              (NP
                (NP (NNS wonders))
                (VP (VBN seen))))))))
    (, ,)
    (CC But)
    (S
      (NP
        (NP (JJ poor))
        (PP (IN in)
          (NP
            (NP
              (NP (DT the) (NNS goods) (NN o) (POS '))
              (NNS men))
            (: ;)
            (SBAR
              (WHNP
                (ADVP (RB So))
                (WP what))
              (S
                (NP (PRP they))
                (VP (VBP ha)))))))
      (VP (`` ') (VBD got)
        (PP (IN by)
          (NP (DT the) (NN skin) (NN o)))
        ('' ')
        (NP
          (NP (PRP$ their) (NNS teeth))
          (SBAR
            (S
              (NP (PRP They))
              (VP (VBP sell)
                (PP (IN for)
                  (NP (PRP$ their) (NNS teeth)))
                (ADVP (RB again))))))))
    (. .)))

nsubj(they-3, Rich-1)
cop(they-3, are-2)
root(ROOT-0, they-3)
xcomp(they-3, rich-5)
case(wonders-7, in-6)
nmod:in(rich-5, wonders-7)
acl(wonders-7, seen-8)
cc(they-3, But-10)
nsubj(got-24, poor-11)
case(men-17, in-12)
det(o-15, the-13)
compound(o-15, goods-14)
nmod:poss(men-17, o-15)
case(o-15, '-16)
nmod:in(poor-11, men-17)
dobj(ha-22, men-17)
advmod(what-20, So-19)
ref(men-17, what-20)
nsubj(ha-22, they-21)
acl:relcl(men-17, ha-22)
conj:but(they-3, got-24)
case(o-28, by-25)
det(o-28, the-26)
compound(o-28, skin-27)
nmod:by(got-24, o-28)
nmod:poss(teeth-31, their-30)
dobj(got-24, teeth-31)
nsubj(sell-33, They-32)
acl:relcl(teeth-31, sell-33)
case(teeth-36, for-34)
nmod:poss(teeth-36, their-35)
nmod:for(sell-33, teeth-36)
advmod(sell-33, again-37)

(ROOT
  (S
    (PP (IN For)
      (SBAR (IN whether)
        (S
          (S
            (NP (PRP they))
            (VP (VBP lose)
              (PP (TO to)
                (NP (DT the) (JJ naked) (NN life)))))
          (S (CC Or)
            (VP (VB win)
              (PP (TO to)
                (NP
                  (NP (PRP$ their) (NNS hearts) (POS '))
                  (NN desire))))))))
    (, ,)
    (NP (PRP They))
    (VP (VBP tell)
      (NP (PRP it))
      (ADVP (RB all)
        (PP (TO to)
          (NP (DT the) (JJ weary) (NN wife))))
      (SBAR
        (S
          (NP (DT That))
          (VP (VBZ nods)
            (PP (IN beside)
              (NP (DT the) (NN fire)))))))
    (. .)))

mark(lose-4, For-1)
mark(lose-4, whether-2)
nsubj(lose-4, they-3)
advcl(tell-18, lose-4)
case(life-8, to-5)
det(life-8, the-6)
amod(life-8, naked-7)
nmod:to(lose-4, life-8)
cc(win-10, Or-9)
parataxis(lose-4, win-10)
case(desire-15, to-11)
nmod:poss(hearts-13, their-12)
nmod:poss(desire-15, hearts-13)
case(hearts-13, '-14)
nmod:to(win-10, desire-15)
nsubj(tell-18, They-17)
root(ROOT-0, tell-18)
dobj(tell-18, it-19)
advmod(tell-18, all-20)
case(wife-24, to-21)
det(wife-24, the-22)
amod(wife-24, weary-23)
nmod:to(all-20, wife-24)
nsubj(nods-26, That-25)
ccomp(tell-18, nods-26)
case(fire-29, beside-27)
det(fire-29, the-28)
nmod:beside(nods-26, fire-29)

(ROOT
  (S
    (S
      (NP (PRP$ Her) (NN hearth))
      (VP (VBZ is)
        (ADJP (JJ wide)
          (PP (TO to)
            (NP (DT every) (NN wind))))
        (S
          (S
            (NP (DT That))
            (VP (VBZ makes)
              (NP (DT the)
                (ADJP (JJ white) (JJ ash))
                (NN spin))))
          (: ;)
          (CC And)
          (FRAG
            (NP (NNS tide)
              (CC and)
              (NN tide))))))
    (CC and)
    (S (`` `)
      (S
        (S
          (VP (VB tween)
            (SBAR
              (SBAR
                (X (DT the)
                  (ADJP (JJ tides)))
                (S
                  (NP (PRP$ Her) (NNS sons))
                  (VP (VBP go)
                    (PRT (RP out)
                      (CC and)
                      (RP in)))))
              (: ;)
              (PRN (-LRB- -LRB-)
                (PP (IN Out)
                  (PP (IN with)
                    (NP
                      (NP (JJ great) (NN mirth))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP do)
                            (NP
                              (NP (NN desire) (NN Hazard))
                              (PP (IN of)
                                (NP (JJ trackless) (NNS ways))))
                            (, ,)
                            (PP (RBR In) (IN with)
                              (VP (VB content)
                                (SBAR
                                  (S
                                    (S
                                      (VP (TO to)
                                        (VP (VB wait)
                                          (NP (PRP$ their) (NN watch)))))
                                    (CC And)
                                    (S
                                      (VP (VB warm)
                                        (PP (IN before)
                                          (NP (DT the) (NN blaze)))))))))))))))
                (-RRB- -RRB-))))
          (: ;))
        (CC And)
        (S
          (NP (DT some) (NN return))
          (PP (IN by)
            (NP (JJ failing) (NN light)))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP (DT some))
          (PP (IN in)
            (NP (NN waking))))
        (VP (VBP dream)))
      (, ,)
      (S
        (SBAR (IN For)
          (S
            (NP (PRP she))
            (VP (VBZ hears)
              (NP
                (NP (DT the) (NNS heels))
                (PP (IN of)
                  (NP (DT the) (JJ dripping) (NNS ghosts)))))))
        (NP (DT That))
        (VP (VBP ride)
          (NP (DT the) (JJ rough) (NN roof-beam)))))
    (. .)))

nmod:poss(hearth-2, Her-1)
nsubj(wide-4, hearth-2)
nsubj(tween-21, hearth-2)
cop(wide-4, is-3)
root(ROOT-0, wide-4)
case(wind-7, to-5)
det(wind-7, every-6)
nmod:to(wide-4, wind-7)
nsubj(makes-9, That-8)
xcomp(wide-4, makes-9)
det(spin-13, the-10)
amod(ash-12, white-11)
amod(spin-13, ash-12)
dobj(makes-9, spin-13)
cc(makes-9, And-15)
xcomp(wide-4, tide-16)
conj:and(makes-9, tide-16)
cc(tide-16, and-17)
conj:and(makes-9, tide-18)
conj:and(tide-16, tide-18)
cc(wide-4, and-19)
conj:and(wide-4, tween-21)
det(tides-23, the-22)
dep(go-26, tides-23)
nmod:poss(sons-25, Her-24)
nsubj(go-26, sons-25)
dep(tween-21, go-26)
compound:prt(go-26, out-27)
cc(out-27, and-28)
dep(out-27, in-29)
case(mirth-35, Out-32)
case(mirth-35, with-33)
amod(mirth-35, great-34)
dep(go-26, mirth-35)
nsubj(do-37, mirth-35)
ref(mirth-35, that-36)
acl:relcl(mirth-35, do-37)
compound(Hazard-39, desire-38)
dobj(do-37, Hazard-39)
case(ways-42, of-40)
amod(ways-42, trackless-41)
nmod:of(Hazard-39, ways-42)
advmod(content-46, In-44)
case(content-46, with-45)
advcl(do-37, content-46)
mark(wait-48, to-47)
dep(content-46, wait-48)
nmod:poss(watch-50, their-49)
dobj(wait-48, watch-50)
cc(wait-48, And-51)
dep(content-46, warm-52)
conj:and(wait-48, warm-52)
case(blaze-55, before-53)
det(blaze-55, the-54)
nmod:before(warm-52, blaze-55)
cc(tween-21, And-58)
det(return-60, some-59)
conj:and(wide-4, return-60)
conj:and(tween-21, return-60)
case(light-63, by-61)
amod(light-63, failing-62)
dep(return-60, light-63)
cc(tween-21, And-65)
nsubj(dream-69, some-66)
case(waking-68, in-67)
nmod:in(some-66, waking-68)
conj:and(wide-4, dream-69)
conj:and(tween-21, dream-69)
mark(hears-73, For-71)
nsubj(hears-73, she-72)
advcl(ride-81, hears-73)
det(heels-75, the-74)
dobj(hears-73, heels-75)
case(ghosts-79, of-76)
det(ghosts-79, the-77)
amod(ghosts-79, dripping-78)
nmod:of(heels-75, ghosts-79)
nsubj(ride-81, That-80)
conj:and(wide-4, ride-81)
conj:and(tween-21, ride-81)
det(roof-beam-84, the-82)
amod(roof-beam-84, rough-83)
dobj(ride-81, roof-beam-84)

(ROOT
  (S
    (S
      (NP (NNP Home))
      (, ,)
      (NP (PRP they))
      (VP (VBP come)
        (NP (NN home))
        (PP (IN from)
          (NP
            (NP (PDT all) (DT the) (NNS ports))
            (, ,)
            (NP (DT The) (NN living))
            (CC and)
            (NP (DT the) (NN dead))))))
    (: ;)
    (S
      (NP
        (NP (DT The) (JJ good) (NN wife) (POS 's))
        (NNS sons))
      (VP (VBP come)
        (S
          (NP (NN home))
          (ADVP (RB again))
          (PP (IN For)
            (NP
              (NP (PRP$ her) (NN blessing))
              (PP (IN on)
                (NP (PRP$ their) (NN head))))))))
    (. !)))

nsubj(come-4, Home-1)
nsubj(come-4, they-3)
root(ROOT-0, come-4)
dobj(come-4, home-5)
case(ports-9, from-6)
det:predet(ports-9, all-7)
det(ports-9, the-8)
nmod:from(come-4, ports-9)
det(living-12, The-11)
nmod:from(come-4, living-12)
conj:and(ports-9, living-12)
cc(ports-9, and-13)
det(dead-15, the-14)
nmod:from(come-4, dead-15)
conj:and(ports-9, dead-15)
det(wife-19, The-17)
amod(wife-19, good-18)
nmod:poss(sons-21, wife-19)
case(wife-19, 's-20)
nsubj(come-22, sons-21)
parataxis(come-4, come-22)
xcomp(come-22, home-23)
advmod(home-23, again-24)
case(blessing-27, For-25)
nmod:poss(blessing-27, her-26)
dep(home-23, blessing-27)
case(head-30, on-28)
nmod:poss(head-30, their-29)
nmod:on(blessing-27, head-30)

(ROOT
  (FRAG
    (NP
      (NP (NNP HYMN) (NNP BEFORE) (NNP ACTION))
      (SBAR
        (S
          (S
            (NP (DT The) (NN earth))
            (VP (VBZ is)
              (ADJP (JJ full)
                (PP (IN of)
                  (NP (NN anger))))))
          (, ,)
          (S
            (NP (DT The) (NNS seas))
            (VP (VBP are)
              (ADJP (JJ dark)
                (PP (IN with)
                  (NP (NN wrath))))))
          (, ,)
          (S
            (NP
              (NP (DT The) (NNPS Nations))
              (PP (IN in)
                (NP (PRP$ their) (NN harness))))
            (VP (VB Go)
              (PRT (RP up))
              (PP (IN against)
                (NP (PRP$ our) (NN path))))))))
    (: :)
    (S
      (SBAR
        (NP (NNP Ere))
        (RB yet)
        (S
          (NP (PRP we))
          (VP (VBZ loose)
            (NP (DT the) (NNS legions)))))
      (: --)
      (ADVP
        (NP (NNP Ere))
        (RB yet))
      (NP (PRP we))
      (VP (VBP draw)
        (S
          (NP
            (NP (DT the) (NN blade))
            (, ,)
            (NP
              (NP (NNP Jehovah))
              (PP (IN of)
                (NP (DT the) (NNPS Thunders))))
            (, ,))
          (NP
            (NP (NNP Lord) (NNP God))
            (PP (IN of)
              (NP
                (NP (NNP Battles))
                (, ,)
                (NP (NN aid))))))))
    (. !)))

compound(ACTION-3, HYMN-1)
compound(ACTION-3, BEFORE-2)
root(ROOT-0, ACTION-3)
det(earth-5, The-4)
nsubj(full-7, earth-5)
cop(full-7, is-6)
acl:relcl(ACTION-3, full-7)
case(anger-9, of-8)
nmod:of(full-7, anger-9)
det(seas-12, The-11)
nsubj(dark-14, seas-12)
cop(dark-14, are-13)
parataxis(full-7, dark-14)
case(wrath-16, with-15)
nmod:with(dark-14, wrath-16)
det(Nations-19, The-18)
nsubj(Go-23, Nations-19)
case(harness-22, in-20)
nmod:poss(harness-22, their-21)
nmod:in(Nations-19, harness-22)
parataxis(full-7, Go-23)
compound:prt(Go-23, up-24)
case(path-27, against-25)
nmod:poss(path-27, our-26)
nmod:against(Go-23, path-27)
dep(loose-32, Ere-29)
advmod(loose-32, yet-30)
nsubj(loose-32, we-31)
advcl(draw-39, loose-32)
det(legions-34, the-33)
dobj(loose-32, legions-34)
dep(yet-37, Ere-36)
advmod(draw-39, yet-37)
nsubj(draw-39, we-38)
parataxis(ACTION-3, draw-39)
det(blade-41, the-40)
nsubj(God-49, blade-41)
appos(blade-41, Jehovah-43)
case(Thunders-46, of-44)
det(Thunders-46, the-45)
nmod:of(Jehovah-43, Thunders-46)
compound(God-49, Lord-48)
xcomp(draw-39, God-49)
case(Battles-51, of-50)
nmod:of(God-49, Battles-51)
appos(Battles-51, aid-53)

(ROOT
  (NP
    (NP (JJ High) (NN lust)
      (CC and)
      (NN froward) (NN bearing))
    (, ,)
    (NP (NNP Proud) (NN heart))
    (, ,)
    (NP (JJ rebellious) (NN brow))
    (: --)
    (NP
      (NP (NNP Deaf) (NNP ear))
      (CC and)
      (NP (NN soul) (NN uncaring)))
    (, ,)
    (S
      (NP (PRP We))
      (VP (VB seek)
        (NP (NNP Thy) (NN mercy))
        (ADVP (RB now))))
    (. !)))

amod(lust-2, High-1)
root(ROOT-0, lust-2)
cc(lust-2, and-3)
compound(bearing-5, froward-4)
conj:and(lust-2, bearing-5)
compound(heart-8, Proud-7)
appos(lust-2, heart-8)
amod(brow-11, rebellious-10)
appos(lust-2, brow-11)
compound(ear-14, Deaf-13)
dep(lust-2, ear-14)
cc(ear-14, and-15)
compound(uncaring-17, soul-16)
dep(lust-2, uncaring-17)
conj:and(ear-14, uncaring-17)
nsubj(seek-20, We-19)
dep(lust-2, seek-20)
compound(mercy-22, Thy-21)
dobj(seek-20, mercy-22)
advmod(seek-20, now-23)

(ROOT
  (S
    (NP
      (NP (DT The) (NN sinner))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP forswore)
            (NP
              (NP (NNP Thee))
              (, ,)
              (NP
                (NP (DT The) (NN fool))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD passed)
                      (NP (NNP Thee))
                      (PP (IN by)))))))))))
    (, ,)
    (S
      (NP (PRP$ Our) (NNS times))
      (VP (VBP are)
        (VP (VBN known)
          (PP (IN before)
            (NP (NNP Thee))))))
    (: --)
    (S
      (INTJ (UH Lord))
      (, ,)
      (VP (VB grant)
        (NP (PRP us))
        (NP (NN strength)
          (S
            (VP (TO to)
              (VP (VB die)))))))
    (. !)))

det(sinner-2, The-1)
nsubj(forswore-4, sinner-2)
dep(known-17, sinner-2)
ref(sinner-2, that-3)
acl:relcl(sinner-2, forswore-4)
dobj(forswore-4, Thee-5)
det(fool-8, The-7)
appos(Thee-5, fool-8)
nsubj(passed-10, fool-8)
ref(fool-8, that-9)
acl:relcl(fool-8, passed-10)
dobj(passed-10, Thee-11)
nmod(passed-10, by-12)
nmod:poss(times-15, Our-14)
nsubjpass(known-17, times-15)
auxpass(known-17, are-16)
root(ROOT-0, known-17)
case(Thee-19, before-18)
nmod:before(known-17, Thee-19)
discourse(grant-23, Lord-21)
parataxis(known-17, grant-23)
iobj(grant-23, us-24)
dobj(grant-23, strength-25)
mark(die-27, to-26)
acl(strength-25, die-27)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (ADJP (JJ kneel)
              (PP (IN beside)
                (NP (PRP us))))
            (PP (IN At)
              (NP (NNS altars)))
            (SBAR (RB not)
              (S
                (NP (NNP Thine))
                (VP (VBP own)
                  (PRN (, ,)
                    (SBAR
                      (WHNP (WP Who))
                      (S
                        (VP (VBP lack)
                          (NP
                            (NP (DT the) (NNS lights))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VB guide)
                                  (NP (PRP us)))))))))
                    (, ,))
                  (NP (NNP Lord)))))))))
    (, ,)
    (VP (VB let)
      (NP (PRP$ their) (NN faith) (NN atone)))
    (. .)))

case(those-2, For-1)
dep(own-11, those-2)
nmod:for(let-23, those-2)
ref(those-2, who-3)
dep(own-11, kneel-4)
case(us-6, beside-5)
nmod:beside(kneel-4, us-6)
case(altars-8, At-7)
dep(own-11, altars-8)
dep(own-11, not-9)
nsubj(own-11, Thine-10)
acl:relcl(those-2, own-11)
nsubj(lack-14, Who-13)
parataxis(own-11, lack-14)
det(lights-16, the-15)
dobj(lack-14, lights-16)
nsubj(guide-18, lights-16)
ref(lights-16, that-17)
acl:relcl(lights-16, guide-18)
dobj(guide-18, us-19)
dobj(own-11, Lord-21)
root(ROOT-0, let-23)
nmod:poss(atone-26, their-24)
compound(atone-26, faith-25)
dobj(let-23, atone-26)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (ADVP (RB wrong))
        (NP (PRP we))
        (VP (VBD did)
          (S
            (VP (TO to)
              (VP (VB call)
                (NP (PRP them))))))))
    (, ,)
    (S
      (PP (IN By)
        (NP (NN honour) (NNS bound)))
      (NP (PRP they))
      (VP (VBD came)))
    (: ;)
    (S
      (S
        (S
          (VP (VB Let) (RB not)
            (VP (VB Thy)
              (NP (NN Wrath)))))
        (VP (VBP befall)
          (NP (PRP them))))
      (, ,)
      (CC But)
      (S
        (NP
          (NP (NN deal))
          (PP (TO to)
            (NP (PRP us) (DT the))))
        (VP (VBP blame))))
    (. .)))

mark(did-4, If-1)
advmod(did-4, wrong-2)
nsubj(did-4, we-3)
nsubj:xsubj(call-6, we-3)
advcl(came-13, did-4)
mark(call-6, to-5)
xcomp(did-4, call-6)
dobj(call-6, them-7)
case(bound-11, By-9)
compound(bound-11, honour-10)
nmod:by(came-13, bound-11)
nsubj(came-13, they-12)
root(ROOT-0, came-13)
csubj(befall-19, Let-15)
neg(Let-15, not-16)
dep(Let-15, Thy-17)
dobj(Thy-17, Wrath-18)
parataxis(came-13, befall-19)
dobj(befall-19, them-20)
cc(befall-19, But-22)
nsubj(blame-27, deal-23)
case(us-25, to-24)
nmod:to(deal-23, us-25)
dep(us-25, the-26)
parataxis(came-13, blame-27)
conj:but(befall-19, blame-27)

(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (NN panic) (, ,) (NN pride) (, ,)
          (CC and)
          (NN terror))
        (, ,)
        (NP
          (NP (NN Revenge))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ knows)
                (NP (DT no) (NN rein) (, ,) (JJ Light) (NN haste)
                  (CC and)
                  (NNS lawless) (NN error))))))))
    (, ,)
    (VP (VB Protect)
      (NP (PRP us))
      (ADVP (RB yet) (RB again)))
    (. .)))

case(panic-2, From-1)
nmod:from(Protect-21, panic-2)
conj:and(panic-2, pride-4)
nmod:from(Protect-21, pride-4)
cc(panic-2, and-6)
conj:and(panic-2, terror-7)
nmod:from(Protect-21, terror-7)
appos(panic-2, Revenge-9)
nsubj(knows-11, Revenge-9)
ref(Revenge-9, that-10)
acl:relcl(Revenge-9, knows-11)
neg(haste-16, no-12)
compound(haste-16, rein-13)
amod(haste-16, Light-15)
dobj(knows-11, haste-16)
cc(haste-16, and-17)
compound(error-19, lawless-18)
dobj(knows-11, error-19)
conj:and(haste-16, error-19)
root(ROOT-0, Protect-21)
dobj(Protect-21, us-22)
advmod(again-24, yet-23)
advmod(Protect-21, again-24)

(ROOT
  (S
    (VP
      (VP (VB Cloak)
        (S
          (NP (PRP Thou))
          (NP
            (NP (PRP$ our) (NN undeserving))
            (, ,)
            (NP
              (NP (JJ Make) (NN firm))
              (NP (DT the) (JJ shuddering) (NN breath)))
            (, ,))
          (PP (IN In)
            (NP (NN silence)))))
      (CC and)
      (VP (VB unswerving)
        (S
          (VP (TO To)
            (VP (VB taste)
              (NP (NNP Thy))))))
      (NP (JJR lesser) (NN death)))
    (. !)))

root(ROOT-0, Cloak-1)
nsubj(undeserving-4, Thou-2)
nmod:poss(undeserving-4, our-3)
xcomp(Cloak-1, undeserving-4)
amod(firm-7, Make-6)
appos(undeserving-4, firm-7)
det(breath-10, the-8)
amod(breath-10, shuddering-9)
dep(firm-7, breath-10)
case(silence-13, In-12)
dep(undeserving-4, silence-13)
cc(Cloak-1, and-14)
conj:and(Cloak-1, unswerving-15)
mark(taste-17, To-16)
xcomp(unswerving-15, taste-17)
dobj(taste-17, Thy-18)
amod(death-20, lesser-19)
dobj(Cloak-1, death-20)

(ROOT
  (S
    (INTJ (UH Ah))
    (, ,)
    (NP (NNP Mary))
    (VP
      (VP (VB pierced)
        (PP (IN with)
          (NP (NN sorrow))))
      (, ,)
      (VP (VB Remember) (, ,) (VB reach)
        (CC and)
        (VB save)
        (NP
          (NP (DT The) (NN soul))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ comes)
                (S
                  (NP (NN to-morrow))
                  (PP (IN Before)
                    (NP (DT the) (NNP God))))
                (SBAR (IN that)
                  (S
                    (VP (VBD gave))))))))))
    (. !)))

discourse(pierced-4, Ah-1)
nsubj(pierced-4, Mary-3)
root(ROOT-0, pierced-4)
case(sorrow-6, with-5)
nmod:with(pierced-4, sorrow-6)
dep(pierced-4, Remember-8)
dep(pierced-4, reach-10)
conj:and(Remember-8, reach-10)
cc(Remember-8, and-11)
dep(pierced-4, save-12)
conj:and(Remember-8, save-12)
det(soul-14, The-13)
dobj(Remember-8, soul-14)
nsubj(comes-16, soul-14)
ref(soul-14, that-15)
acl:relcl(soul-14, comes-16)
xcomp(comes-16, to-morrow-17)
case(God-20, Before-18)
det(God-20, the-19)
dep(to-morrow-17, God-20)
mark(gave-22, that-21)
ccomp(comes-16, gave-22)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (DT each))
        (VP (VBD was)
          (VP (VBN born)
            (PP (IN of)
              (NP (NN woman)))))))
    (, ,)
    (PP (IN For)
      (NP
        (NP
          (NP
            (NP (DT each))
            (PP (IN at)
              (NP (JJ utter) (NN need))))
          (: --)
          (NP
            (NP (NNP True) (NNP comrade))
            (CC and)
            (NP (JJ true) (NN foeman))))
        (: --)
        (NP (NNP Madonna))))
    (, ,)
    (VP (VBP intercede))
    (. !)))

mark(born-4, Since-1)
nsubjpass(born-4, each-2)
auxpass(born-4, was-3)
advcl(intercede-22, born-4)
case(woman-6, of-5)
nmod:of(born-4, woman-6)
case(each-9, For-8)
nmod:for(intercede-22, each-9)
case(need-12, at-10)
amod(need-12, utter-11)
nmod:at(each-9, need-12)
compound(comrade-15, True-14)
dep(each-9, comrade-15)
cc(comrade-15, and-16)
amod(foeman-18, true-17)
dep(each-9, foeman-18)
conj:and(comrade-15, foeman-18)
dep(each-9, Madonna-20)
root(ROOT-0, intercede-22)

(ROOT
  (S
    (S
      (VP (VBN E'en)
        (S
          (S
            (ADVP (RB now))
            (NP (PRP$ their) (NN vanguard) (NNS gathers)))
          (, ,)
          (S
            (NP (NNP E'en))
            (ADVP (RB now))))))
    (NP (PRP we))
    (VP (VBP face)
      (NP
        (NP (DT the) (NN fray))
        (: --)
        (S
          (SBAR (IN As)
            (S
              (NP (PRP Thou))
              (VP (VBP didst)
                (VP (VB help)
                  (NP (PRP$ our) (NNS fathers))))))
          (, ,)
          (VP (VB Help)
            (S
              (NP (PRP Thou))
              (NP (PRP$ our) (NN host) (NN to-day)))))))
    (. !)))

dep(face-10, E'en-1)
advmod(gathers-5, now-2)
nmod:poss(gathers-5, their-3)
compound(gathers-5, vanguard-4)
xcomp(E'en-1, gathers-5)
parataxis(gathers-5, E'en-7)
advmod(E'en-7, now-8)
nsubj(face-10, we-9)
root(ROOT-0, face-10)
det(fray-12, the-11)
dobj(face-10, fray-12)
mark(didst-16, As-14)
nsubj(didst-16, Thou-15)
advcl(Help-21, didst-16)
xcomp(didst-16, help-17)
nmod:poss(fathers-19, our-18)
dobj(help-17, fathers-19)
dep(fray-12, Help-21)
nsubj(to-day-25, Thou-22)
nmod:poss(to-day-25, our-23)
compound(to-day-25, host-24)
xcomp(Help-21, to-day-25)

(ROOT
  (S
    (NP
      (NP (NNP Fulfilled))
      (PP (IN of)
        (NP (NNS signs)
          (CC and)
          (NNS wonders))))
    (, ,)
    (PP (IN In)
      (NP (NN life)))
    (, ,)
    (PP (IN in)
      (NP
        (NP
          (NP (NN death))
          (VP (VBN made)
            (S
              (ADJP (JJ clear)))))
        (: --)
        (NP
          (NP (NNP Jehovah))
          (PP (IN of)
            (NP (DT the) (NNPS Thunders))))
        (, ,)
        (NP
          (NP (NNP Lord) (NNP God))
          (PP (IN of)
            (NP (NNP Battles))))))
    (, ,)
    (VP (VBP hear))
    (. !)))

nsubj(hear-25, Fulfilled-1)
case(signs-3, of-2)
nmod:of(Fulfilled-1, signs-3)
cc(signs-3, and-4)
nmod:of(Fulfilled-1, wonders-5)
conj:and(signs-3, wonders-5)
case(life-8, In-7)
nmod:in(hear-25, life-8)
case(death-11, in-10)
nmod:in(hear-25, death-11)
acl(death-11, made-12)
xcomp(made-12, clear-13)
dep(death-11, Jehovah-15)
case(Thunders-18, of-16)
det(Thunders-18, the-17)
nmod:of(Jehovah-15, Thunders-18)
compound(God-21, Lord-20)
appos(death-11, God-21)
case(Battles-23, of-22)
nmod:of(God-21, Battles-23)
root(ROOT-0, hear-25)

(ROOT
  (S
    (SBAR (IN TO)
      (S
        (S
          (NP (DT THE) (NNP TRUE) (NNP ROMANCE) (NNP Thy) (NN face))
          (VP (VBZ is)
            (ADVP (RB far)
              (PP (IN from)
                (NP (DT this))))
            (NP
              (NP (PRP$ our) (NN war))
              (, ,)
              (NP (PRP$ Our) (NN call))
              (CC and)
              (NP (NN counter-cry)))))
        (, ,)
        (S
          (NP (PRP I))
          (VP (MD shall) (RB not)
            (VP (VB find)
              (S
                (NP (NNP Thee))
                (ADJP (JJ quick)
                  (CC and)
                  (JJ kind))))))
        (, ,)
        (S
          (S (CC Nor)
            (VP (VB know)
              (NP (NNP Thee))
              (SBAR (IN till)
                (S
                  (NP (PRP I))
                  (VP (VBP die) (, ,)
                    (S
                      (NP
                        (NP (NNP Enough))
                        (PP (IN for)
                          (NP
                            (NP (PRP me))
                            (PP (IN in)
                              (NP (NNS dreams))))))
                      (VP (TO to)
                        (VP (VB see)))))))))
          (CC And)
          (S
            (NP (NN touch) (NNP Thy) (NNP garments) (POS '))
            (NP (NN hem))))
        (: :)
        (S
          (NP (NNP Thy) (NNS feet))
          (VP (VBP have)
            (VP (VBN trod)
              (ADVP (RB so) (RB near))
              (PP (TO to)
                (NP (NNP God))))))))
    (NP (PRP I))
    (VP (MD may) (RB not)
      (VP (VB follow)
        (NP (PRP them))))
    (. .)))

mark(war-12, TO-1)
det(face-6, THE-2)
compound(face-6, TRUE-3)
compound(face-6, ROMANCE-4)
compound(face-6, Thy-5)
nsubj(war-12, face-6)
cop(war-12, is-7)
case(this-10, far-8)
mwe(far-8, from-9)
nmod:far_from(war-12, this-10)
nmod:poss(war-12, our-11)
advcl(follow-60, war-12)
nmod:poss(call-15, Our-14)
conj:and(war-12, call-15)
advcl(follow-60, call-15)
cc(war-12, and-16)
conj:and(war-12, counter-cry-17)
advcl(follow-60, counter-cry-17)
nsubj(find-22, I-19)
aux(find-22, shall-20)
neg(find-22, not-21)
parataxis(war-12, find-22)
nsubj(quick-24, Thee-23)
nsubj(kind-26, Thee-23)
xcomp(find-22, quick-24)
cc(quick-24, and-25)
xcomp(find-22, kind-26)
conj:and(quick-24, kind-26)
cc(know-29, Nor-28)
parataxis(war-12, know-29)
dobj(know-29, Thee-30)
mark(die-33, till-31)
nsubj(die-33, I-32)
advcl(know-29, die-33)
dobj(die-33, Enough-35)
nsubj:xsubj(see-41, Enough-35)
case(me-37, for-36)
nmod:for(Enough-35, me-37)
case(dreams-39, in-38)
nmod:in(me-37, dreams-39)
mark(see-41, to-40)
xcomp(die-33, see-41)
cc(know-29, And-42)
compound(garments-45, touch-43)
compound(garments-45, Thy-44)
dep(hem-47, garments-45)
case(garments-45, '-46)
parataxis(war-12, hem-47)
conj:nor(know-29, hem-47)
compound(feet-50, Thy-49)
nsubj(trod-52, feet-50)
aux(trod-52, have-51)
parataxis(war-12, trod-52)
advmod(near-54, so-53)
advmod(trod-52, near-54)
case(God-56, to-55)
nmod:to(trod-52, God-56)
nsubj(follow-60, I-57)
aux(follow-60, may-58)
neg(follow-60, not-59)
root(ROOT-0, follow-60)
dobj(follow-60, them-61)

(ROOT
  (S
    (S
      (S
        (PP (IN Through)
          (NP
            (NP (NNS wantonness))
            (SBAR (IN if)
              (S
                (NP (NNS men))
                (VP (VBP profess)
                  (S
                    (NP (PRP They))
                    (ADJP (JJ weary)
                      (PP (IN of)
                        (NP (NNP Thy) (NNS parts))))))))))
        (, ,)
        (NP (NNP E'en))
        (VP (VBD let)
          (SBAR
            (S
              (NP (PRP them))
              (VP (VBP die)
                (PP (IN at)
                  (NP (NN blasphemy))))))))
      (CC And)
      (S
        (S
          (VP (VB perish)
            (PP (IN with)
              (NP (PRP$ their) (NNS arts))))
          (: ;))
        (CC But)
        (S
          (NP (PRP we))
          (NP (DT that) (NN love)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we) (DT that))
      (VP (VBP prove)
        (NP (NNP Thine))
        (NP (JJ excellence) (NNP august))
        (, ,)
        (SBAR
          (SBAR (IN While)
            (S
              (NP (PRP we))
              (ADVP (RB adore))
              (VP (VBP discover)
                (NP
                  (NP (JJR more) (NN Thee))
                  (ADJP (JJ perfect) (, ,) (JJ wise))))))
          (, ,)
          (CC and)
          (FRAG
            (ADVP (RB just))))))
    (. .)))

case(wantonness-2, Through-1)
nmod:through(let-13, wantonness-2)
mark(profess-5, if-3)
nsubj(profess-5, men-4)
acl:relcl(wantonness-2, profess-5)
nsubj(weary-7, They-6)
xcomp(profess-5, weary-7)
case(parts-10, of-8)
compound(parts-10, Thy-9)
nmod:of(weary-7, parts-10)
nsubj(let-13, E'en-12)
nsubj(perish-19, E'en-12)
root(ROOT-0, let-13)
nsubj(die-15, them-14)
ccomp(let-13, die-15)
case(blasphemy-17, at-16)
nmod:at(die-15, blasphemy-17)
cc(let-13, And-18)
conj:and(let-13, perish-19)
case(arts-22, with-20)
nmod:poss(arts-22, their-21)
nmod:with(perish-19, arts-22)
cc(perish-19, But-24)
dep(love-27, we-25)
det(love-27, that-26)
conj:and(let-13, love-27)
conj:but(perish-19, love-27)
cc(let-13, but-29)
nsubj(prove-32, we-30)
dep(we-30, that-31)
conj:but(let-13, prove-32)
dobj(prove-32, Thine-33)
amod(august-35, excellence-34)
nmod:tmod(prove-32, august-35)
mark(discover-40, While-37)
nsubj(discover-40, we-38)
advmod(discover-40, adore-39)
advcl(prove-32, discover-40)
amod(Thee-42, more-41)
dobj(discover-40, Thee-42)
amod(wise-45, perfect-43)
amod(Thee-42, wise-45)
cc(discover-40, and-47)
advcl(prove-32, just-48)
conj:and(discover-40, just-48)

(ROOT
  (S
    (S
      (PP (IN Since)
        (NP (JJ spoken) (NN word)))
      (S
        (NP
          (NP (NNP Man) (POS 's))
          (NN Spirit))
        (VP (VBD stirred)
          (SBAR
            (S
              (PP (IN Beyond)
                (NP
                  (NP
                    (NP (PRP$ his) (NN belly-need))
                    (, ,)
                    (SBAR
                      (WHNP (WP What))
                      (S
                        (VP (VBZ is)
                          (SQ (VBZ is)
                            (NP
                              (NP (NNP Thine))
                              (PP (IN of)
                                (NP (JJ fair) (NN design))))
                            (PP (IN In)
                              (NP (NN thought)
                                (CC and)
                                (NN craft)
                                (CC and)
                                (NN deed))))))))
                  (: ;)
                  (NP
                    (NP (DT Each) (NN stroke) (NN aright))
                    (PP (IN of)
                      (NP (NN toil)
                        (CC and)
                        (NN fight))))))
              (, ,)
              (NP (DT That))
              (VP (VBD was))))))
      (CC and)
      (S
        (NP (DT that))
        (VP (MD shall)
          (VP (VB be)))))
    (, ,)
    (CC And)
    (S
      (VP
        (VP (VB hope)
          (ADJP (RB too) (JJ high)))
        (, ,)
        (VP (VB wherefore)
          (S
            (NP (PRP we))
            (VP (VB die))))
        (, ,)
        (VP (VB Has)
          (NP (NN birth)
            (CC and)
            (NN worth))
          (PP (IN in)
            (NP (NNP Thee))))))
    (. .)))

case(word-3, Since-1)
amod(word-3, spoken-2)
nmod:since(stirred-7, word-3)
nmod:poss(Spirit-6, Man-4)
case(Man-4, 's-5)
nsubj(stirred-7, Spirit-6)
nsubj(hope-42, Spirit-6)
root(ROOT-0, stirred-7)
case(belly-need-10, Beyond-8)
nmod:poss(belly-need-10, his-9)
nsubj(is-13, belly-need-10)
nmod:beyond(was-35, belly-need-10)
ref(belly-need-10, What-12)
acl:relcl(belly-need-10, is-13)
dep(is-13, is-14)
nsubj(is-14, Thine-15)
case(design-18, of-16)
amod(design-18, fair-17)
nmod:of(Thine-15, design-18)
case(thought-20, In-19)
nmod:in(is-14, thought-20)
cc(thought-20, and-21)
nmod:in(is-14, craft-22)
conj:and(thought-20, craft-22)
cc(thought-20, and-23)
nmod:in(is-14, deed-24)
conj:and(thought-20, deed-24)
det(aright-28, Each-26)
compound(aright-28, stroke-27)
dep(belly-need-10, aright-28)
case(toil-30, of-29)
nmod:of(aright-28, toil-30)
cc(toil-30, and-31)
nmod:of(aright-28, fight-32)
conj:and(toil-30, fight-32)
nsubj(was-35, That-34)
ccomp(stirred-7, was-35)
cc(stirred-7, and-36)
nsubj(be-39, that-37)
aux(be-39, shall-38)
conj:and(stirred-7, be-39)
cc(stirred-7, And-41)
conj:and(stirred-7, hope-42)
advmod(high-44, too-43)
xcomp(hope-42, high-44)
dep(hope-42, wherefore-46)
nsubj(die-48, we-47)
ccomp(wherefore-46, die-48)
dep(hope-42, Has-50)
dobj(Has-50, birth-51)
cc(birth-51, and-52)
dobj(Has-50, worth-53)
conj:and(birth-51, worth-53)
case(Thee-55, in-54)
nmod:in(Has-50, Thee-55)

(ROOT
  (S
    (S
      (SBAR
        (WHNP (WP Who))
        (S
          (VP (VBZ holds)
            (PP (IN by)
              (NP (NNP Thee))))))
      (VP (VBD hath)
        (NP (NNP Heaven))
        (PP (IN in)
          (NP (NN fee)))
        (S
          (VP (TO To)
            (VP (VB gild)
              (NP (PRP$ his) (NNS dross))
              (ADVP (RB thereby)))))))
    (, ,)
    (CC And)
    (S
      (NP (NN knowledge))
      (ADJP (JJ sure)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (VBP endure)
              (NP (DT A) (NN child))
              (SBAR (IN until)
                (S
                  (NP (PRP he))
                  (VP (VBP die)
                    (PRN (: --)
                      (PP (IN For)
                        (S
                          (VP (TO to)
                            (VP (VB make)
                              (UCP
                                (ADJP
                                  (ADJP (JJ plain))
                                  (SBAR (IN that)
                                    (S
                                      (NP
                                        (NP (NN man) (POS 's))
                                        (NN disdain))
                                      (VP (VBZ Is)))))
                                (CC but)
                                (NP
                                  (NP (JJ new) (NN Beauty) (POS 's))
                                  (NN birth)))))))
                      (: --))
                    (SBAR
                      (PP (IN For))
                      (S
                        (VP (TO to)
                          (VP (VB possess)
                            (PP (IN in)
                              (NP (NNS loneliness)))
                            (NP
                              (NP (DT The) (NN joy))
                              (PP (IN of)
                                (NP (PDT all) (DT the) (NN earth))))))))))))))))
    (. .)))

nsubj(holds-2, Who-1)
csubj(hath-5, holds-2)
csubj(sure-17, holds-2)
case(Thee-4, by-3)
nmod:by(holds-2, Thee-4)
root(ROOT-0, hath-5)
dobj(hath-5, Heaven-6)
case(fee-8, in-7)
nmod:in(hath-5, fee-8)
mark(gild-10, To-9)
advcl(hath-5, gild-10)
nmod:poss(dross-12, his-11)
dobj(gild-10, dross-12)
advmod(gild-10, thereby-13)
cc(hath-5, And-15)
dep(sure-17, knowledge-16)
conj:and(hath-5, sure-17)
mark(endure-20, that-18)
nsubj(endure-20, he-19)
ccomp(sure-17, endure-20)
det(child-22, A-21)
dobj(endure-20, child-22)
mark(die-25, until-23)
nsubj(die-25, he-24)
advcl(endure-20, die-25)
mark(make-29, For-27)
mark(make-29, to-28)
dep(die-25, make-29)
xcomp(make-29, plain-30)
mark(Is-35, that-31)
nmod:poss(disdain-34, man-32)
case(man-32, 's-33)
nsubj(Is-35, disdain-34)
ccomp(plain-30, Is-35)
cc(plain-30, but-36)
amod(Beauty-38, new-37)
nmod:poss(birth-40, Beauty-38)
case(Beauty-38, 's-39)
xcomp(make-29, birth-40)
conj:but(plain-30, birth-40)
nmod(possess-44, For-42)
mark(possess-44, to-43)
ccomp(die-25, possess-44)
case(loneliness-46, in-45)
nmod:in(possess-44, loneliness-46)
det(joy-48, The-47)
dobj(possess-44, joy-48)
case(earth-52, of-49)
det:predet(earth-52, all-50)
det(earth-52, the-51)
nmod:of(joy-48, earth-52)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (JJ Thou) (NN didst))
        (VP (VBP teach)
          (SBAR
            (S
              (NP (PDT all)
                (NP (NNS lovers) (NN speech))
                (CC And)
                (NP
                  (NP (NNP Life))
                  (NP (DT all) (NN mystery))
                  (, ,)
                  (ADVP (RB So))))
              (VP (MD shalt)
                (VP (VB Thou)
                  (NP (NN rule))
                  (PP (IN by)
                    (NP (DT every) (NN school)))
                  (PP (IN Till)
                    (NP
                      (NP (NN love)
                        (CC and)
                        (NN longing) (NNS die))
                      (, ,)
                      (SBAR
                        (WHNP (WP Who))
                        (S
                          (NP
                            (NP (NN wast))
                            (CC or)
                            (NP (RB yet) (DT the) (NNS Lights)))
                          (VP (VBD were)
                            (VP (VBN set))))))))))))))
    (, ,)
    (NP
      (NP (DT A) (NN whisper))
      (PP (IN in)
        (NP
          (NP (DT the) (NNP Void))
          (, ,)
          (SBAR
            (WHNP (WP Who))
            (S
              (VP (MD shalt)
                (VP (VB be)
                  (VP (VBN sung)
                    (PP (IN through)
                      (NP
                        (NP (NNS planets) (JJ young))
                        (SBAR
                          (WHADVP (WRB When))
                          (S
                            (NP (DT this))
                            (VP (VBZ is)
                              (ADJP (JJ clean)))))))))))))))
    (VP (VBD destroyed))
    (. .)))

mark(teach-4, As-1)
amod(didst-3, Thou-2)
nsubj(teach-4, didst-3)
advcl(destroyed-52, teach-4)
dep(speech-7, all-5)
compound(speech-7, lovers-6)
nsubj(Thou-15, speech-7)
cc(speech-7, And-8)
conj:and(speech-7, Life-9)
nsubj(Thou-15, Life-9)
det(mystery-11, all-10)
dep(Life-9, mystery-11)
advmod(Life-9, So-13)
aux(Thou-15, shalt-14)
ccomp(teach-4, Thou-15)
dobj(Thou-15, rule-16)
case(school-19, by-17)
det(school-19, every-18)
nmod:by(Thou-15, school-19)
case(die-24, Till-20)
compound(die-24, love-21)
cc(love-21, and-22)
conj:and(love-21, longing-23)
compound(die-24, longing-23)
nmod:till(Thou-15, die-24)
dobj(set-33, die-24)
ref(die-24, Who-26)
nsubjpass(set-33, wast-27)
cc(wast-27, or-28)
advmod(Lights-31, yet-29)
det(Lights-31, the-30)
conj:or(wast-27, Lights-31)
nsubjpass(set-33, Lights-31)
auxpass(set-33, were-32)
acl:relcl(die-24, set-33)
det(whisper-36, A-35)
nsubj(destroyed-52, whisper-36)
case(Void-39, in-37)
det(Void-39, the-38)
nmod:in(whisper-36, Void-39)
nsubjpass(sung-44, Void-39)
ref(Void-39, Who-41)
aux(sung-44, shalt-42)
auxpass(sung-44, be-43)
acl:relcl(Void-39, sung-44)
case(planets-46, through-45)
nmod:through(sung-44, planets-46)
amod(planets-46, young-47)
advmod(clean-51, When-48)
nsubj(clean-51, this-49)
cop(clean-51, is-50)
acl:relcl(planets-46, clean-51)
root(ROOT-0, destroyed-52)

(ROOT
  (S
    (PP (IN Beyond)
      (NP (DT the) (NNS bounds)))
    (NP (PRP$ our) (JJ staring) (NNS rounds))
    (, ,)
    (PP (IN Across)
      (NP (DT the)
        (ADJP (VBG pressing))
        (NN dark)))
    (, ,)
    (NP (DT The) (NNS children))
    (VP (VBD wise)
      (PP (IN of)
        (NP (JJ outer) (NNS skies)))
      (S
        (VP
          (VP (VB Look)
            (ADJP (JJ hitherward)))
          (CC and)
          (VP (VB mark)
            (NP
              (NP
                (NP (DT A) (NN light))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ shifts)))))
              (, ,)
              (NP
                (NP (DT a) (NN glare))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ drifts) (, ,)
                      (S
                        (VP (VBG Rekindling)
                          (ADVP (RB thus)
                            (CC and)
                            (RB thus))))))))
              (, ,) (RB Not)
              (NP
                (NP (DT all) (NN forlorn))
                (, ,)
                (PP (IN for)
                  (NP
                    (NP (JJ Thou) (NN hast))
                    (VP (VBN borne)
                      (NP (JJ Strange) (NNS tales))
                      (PP (TO to)
                        (NP
                          (NP (PRP them))
                          (PP (IN of)
                            (NP (PRP us))))))))))))))
    (. .)))

case(bounds-3, Beyond-1)
det(bounds-3, the-2)
nmod:beyond(wise-15, bounds-3)
nmod:poss(rounds-6, our-4)
amod(rounds-6, staring-5)
nsubj(wise-15, rounds-6)
case(dark-11, Across-8)
det(dark-11, the-9)
amod(dark-11, pressing-10)
nmod:across(wise-15, dark-11)
det(children-14, The-13)
nsubj(wise-15, children-14)
root(ROOT-0, wise-15)
case(skies-18, of-16)
amod(skies-18, outer-17)
nmod:of(wise-15, skies-18)
ccomp(wise-15, Look-19)
xcomp(Look-19, hitherward-20)
cc(Look-19, and-21)
ccomp(wise-15, mark-22)
conj:and(Look-19, mark-22)
det(light-24, A-23)
dobj(mark-22, light-24)
nsubj(shifts-26, light-24)
ref(light-24, that-25)
acl:relcl(light-24, shifts-26)
det(glare-29, a-28)
appos(light-24, glare-29)
nsubj(drifts-31, glare-29)
ref(glare-29, that-30)
acl:relcl(glare-29, drifts-31)
xcomp(drifts-31, Rekindling-33)
advmod(Rekindling-33, thus-34)
cc(thus-34, and-35)
advmod(Rekindling-33, thus-36)
conj:and(thus-34, thus-36)
neg(light-24, Not-38)
det(forlorn-40, all-39)
dep(light-24, forlorn-40)
case(hast-44, for-42)
amod(hast-44, Thou-43)
nmod:for(forlorn-40, hast-44)
acl(hast-44, borne-45)
amod(tales-47, Strange-46)
dobj(borne-45, tales-47)
case(them-49, to-48)
nmod:to(borne-45, them-49)
case(us-51, of-50)
nmod:of(them-49, us-51)

(ROOT
  (S
    (S
      (S
        (NP (NNP Time))
        (VP
          (VP (VBP hath)
            (NP (DT no) (NN tide)))
          (CC but)
          (VP (MD must)
            (VP (VB abide)
              (NP
                (NP (DT The) (NN servant))
                (PP (IN of)
                  (NP (NNP Thy) (NN will))))))))
      (: ;)
      (S
        (NP (NNP Tide))
        (VP (VBD hath)
          (NP (DT no) (NN time))
          (, ,)
          (PP (IN for)
            (PP (TO to)
              (NP
                (NP (NNP Thy) (NNP rhyme) (NNP The))
                (VP (VBG ranging)
                  (S
                    (NP (NNS stars))
                    (VP
                      (VP (VB stand)
                        (ADVP (RB still)))
                      (: --)
                      (NP
                        (NP (NNP Regent))
                        (PP (IN of)
                          (NP
                            (NP (NNS spheres))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBP lock)
                                  (NP (PRP$ our) (NNS fears)))))))))))))))))
    (, ,)
    (S
      (NP (PRP$ Our) (NNS hopes))
      (ADJP (JJ invisible)))
    (, ,)
    (S
      (INTJ (UH Oh))
      (NP (NN 't))
      (VP (VBD was)
        (NP
          (NP (NNS certes))
          (PP (IN at)
            (NP (NNP Thy) (NNS decrees)))
          (SBAR
            (S
              (NP (PRP We))
              (VP (VBN fashioned)
                (NP (NNP Heaven)
                  (CC and)
                  (NNP Hell))))))))
    (. !)))

nsubj(hath-2, Time-1)
nsubj(abide-7, Time-1)
root(ROOT-0, hath-2)
neg(tide-4, no-3)
dobj(hath-2, tide-4)
cc(hath-2, but-5)
aux(abide-7, must-6)
conj:but(hath-2, abide-7)
det(servant-9, The-8)
dobj(abide-7, servant-9)
case(will-12, of-10)
compound(will-12, Thy-11)
nmod:of(servant-9, will-12)
nsubj(hath-15, Tide-14)
parataxis(hath-2, hath-15)
neg(time-17, no-16)
dobj(hath-15, time-17)
case(The-23, for-19)
case(The-23, to-20)
compound(The-23, Thy-21)
compound(The-23, rhyme-22)
nmod:to(hath-15, The-23)
acl(The-23, ranging-24)
nsubj(stand-26, stars-25)
ccomp(ranging-24, stand-26)
advmod(stand-26, still-27)
dobj(stand-26, Regent-29)
case(spheres-31, of-30)
nmod:of(Regent-29, spheres-31)
nsubj(lock-33, spheres-31)
ref(spheres-31, that-32)
acl:relcl(spheres-31, lock-33)
nmod:poss(fears-35, our-34)
dobj(lock-33, fears-35)
nmod:poss(hopes-38, Our-37)
dep(invisible-39, hopes-38)
parataxis(hath-2, invisible-39)
discourse(certes-44, Oh-41)
nsubj(certes-44, 't-42)
cop(certes-44, was-43)
parataxis(hath-2, certes-44)
case(decrees-47, at-45)
compound(decrees-47, Thy-46)
nmod:at(certes-44, decrees-47)
nsubj(fashioned-49, We-48)
acl:relcl(certes-44, fashioned-49)
dobj(fashioned-49, Heaven-50)
cc(Heaven-50, and-51)
dobj(fashioned-49, Hell-52)
conj:and(Heaven-50, Hell-52)

(ROOT
  (S
    (S
      (S
        (NP (NNP Pure) (NNP Wisdom))
        (VP (VBP hath)
          (NP
            (NP (DT no) (JJ certain) (NN path))
            (SBAR
              (S
                (NP (DT That))
                (VP (VBZ lacks)
                  (NP (PRP$ thy) (NN morning-eyne))))))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP (NNS captains))
          (ADJP (JJ bold)
            (PP (IN by)
              (NP (NNP Thee)))))
        (VP (VBD controlled)
          (SBAR
            (S
              (NP (JJS Most))
              (VP (VBP like)
                (S
                  (VP (TO to)
                    (VP (VB Gods)
                      (NP (NN design)))))))))))
    (: ;)
    (S
      (S
        (NP (PRP Thou))
        (VP (VBP art)
          (S
            (NP (DT the) (NNP Voice))
            (VP (TO to)
              (VP (VB kingly)
                (S
                  (NP (NNS boys))
                  (VP (TO To)
                    (VP (VB lift)
                      (NP (PRP them))
                      (PP (IN through)
                        (NP (DT the) (NN fight)))))))))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP (NNP Comfortress))
          (PP (IN of)
            (NP (NNP Unsuccess))))
        (, ,)
        (S
          (VP (TO To)
            (VP (VB give)
              (NP
                (NP (DT the) (JJ dead) (NN good-night))
                (PRN (: --)
                  (NP (DT A) (NN veil)
                    (S
                      (VP (TO to)
                        (VP (VB draw) (`` `)
                          (NP
                            (NP
                              (NP (NN twixt))
                              (PP (NNP God)
                                (NP (PRP$ His) (NN Law))))
                            (CC And)
                            (NP
                              (NP
                                (NP (NNP Man) (POS 's))
                                (NN infirmity))
                              (, ,)
                              (NP (DT A) (NN shadow) (NN kind))))
                          (PP (TO to)
                            (NP
                              (ADJP (JJ dumb)
                                (CC and)
                                (JJ blind))
                              (DT The) (NN shambles)))
                          (SBAR
                            (WHADVP (WRB where))
                            (S
                              (NP (PRP we))
                              (VP (NN die) (: ;)
                                (S
                                  (NP (DT A) (NN rule))
                                  (VP (TO to)
                                    (VP (VB trick)
                                      (NP
                                        (NP
                                          (NP (NNP th) (POS '))
                                          (ADJP (NNP arithmetic) (NNP Too))
                                          (NN base))
                                        (PP (IN of)
                                          (NP (VBG leaguing) (NNS odds))))))))))))))
                  (: --)))
              (NP
                (NP (DT The) (NN spur))
                (PP (IN of)
                  (NP
                    (NP (NN trust))
                    (, ,)
                    (NP
                      (NP (DT the) (NN curb))
                      (PP (IN of)
                        (NP (NN lust))))))))))
        (, ,)
        (NP (PRP Thou))
        (VP (VBD handmaid)
          (PP (IN of)
            (NP (DT the) (NNS Gods))))))
    (. !)))

compound(Wisdom-2, Pure-1)
nsubj(hath-3, Wisdom-2)
root(ROOT-0, hath-3)
neg(path-6, no-4)
amod(path-6, certain-5)
dobj(hath-3, path-6)
nsubj(lacks-8, path-6)
ref(path-6, That-7)
acl:relcl(path-6, lacks-8)
nmod:poss(morning-eyne-10, thy-9)
dobj(lacks-8, morning-eyne-10)
cc(hath-3, And-12)
nsubj(controlled-17, captains-13)
amod(captains-13, bold-14)
case(Thee-16, by-15)
nmod:by(bold-14, Thee-16)
conj:and(hath-3, controlled-17)
nsubj(like-19, Most-18)
nsubj:xsubj(Gods-21, Most-18)
ccomp(controlled-17, like-19)
mark(Gods-21, to-20)
xcomp(like-19, Gods-21)
dobj(Gods-21, design-22)
nsubj(art-25, Thou-24)
parataxis(hath-3, art-25)
det(Voice-27, the-26)
dobj(art-25, Voice-27)
nsubj:xsubj(kingly-29, Voice-27)
mark(kingly-29, to-28)
xcomp(art-25, kingly-29)
dobj(kingly-29, boys-30)
nsubj:xsubj(lift-32, boys-30)
mark(lift-32, To-31)
xcomp(kingly-29, lift-32)
dobj(lift-32, them-33)
case(fight-36, through-34)
det(fight-36, the-35)
nmod:through(lift-32, fight-36)
cc(art-25, And-38)
nsubj(handmaid-100, Comfortress-39)
case(Unsuccess-41, of-40)
nmod:of(Comfortress-39, Unsuccess-41)
mark(give-44, To-43)
advcl(handmaid-100, give-44)
det(good-night-47, the-45)
amod(good-night-47, dead-46)
iobj(give-44, good-night-47)
det(veil-50, A-49)
dep(good-night-47, veil-50)
mark(draw-52, to-51)
acl(veil-50, draw-52)
dobj(draw-52, twixt-54)
dep(Law-57, God-55)
nmod:poss(Law-57, His-56)
nmod(twixt-54, Law-57)
cc(twixt-54, And-58)
nmod:poss(infirmity-61, Man-59)
case(Man-59, 's-60)
dobj(draw-52, infirmity-61)
conj:and(twixt-54, infirmity-61)
det(kind-65, A-63)
compound(kind-65, shadow-64)
appos(infirmity-61, kind-65)
case(shambles-71, to-66)
amod(shambles-71, dumb-67)
cc(dumb-67, and-68)
conj:and(dumb-67, blind-69)
amod(shambles-71, blind-69)
det(shambles-71, The-70)
nmod:to(draw-52, shambles-71)
advmod(die-74, where-72)
nsubj(die-74, we-73)
advcl(draw-52, die-74)
det(rule-77, A-76)
dobj(die-74, rule-77)
mark(trick-79, to-78)
parataxis(die-74, trick-79)
nmod:poss(base-84, th-80)
case(th-80, '-81)
amod(Too-83, arithmetic-82)
amod(base-84, Too-83)
dobj(trick-79, base-84)
case(odds-87, of-85)
amod(odds-87, leaguing-86)
nmod:of(base-84, odds-87)
det(spur-90, The-89)
dobj(give-44, spur-90)
case(trust-92, of-91)
nmod:of(spur-90, trust-92)
det(curb-95, the-94)
appos(trust-92, curb-95)
case(lust-97, of-96)
nmod:of(curb-95, lust-97)
nsubj(handmaid-100, Thou-99)
parataxis(hath-3, handmaid-100)
conj:and(art-25, handmaid-100)
case(Gods-103, of-101)
det(Gods-103, the-102)
nmod:of(handmaid-100, Gods-103)

(ROOT
  (S
    (NP
      (NP (NNP O) (NNP Charity))
      (, ,)
      (NP (DT all) (JJ patiently) (NN Abiding)))
    (VP (VBP wrack)
      (CC and)
      (VBP scaith))
    (. !)))

compound(Charity-2, O-1)
nsubj(wrack-7, Charity-2)
nsubj(scaith-9, Charity-2)
det(Abiding-6, all-4)
amod(Abiding-6, patiently-5)
appos(Charity-2, Abiding-6)
root(ROOT-0, wrack-7)
cc(wrack-7, and-8)
conj:and(wrack-7, scaith-9)

(ROOT
  (S
    (NP
      (NP (NNP O) (NNP Faith))
      (, ,)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ meets)
            (NP
              (QP (CD ten) (CD thousand))
              (NNS cheats))))))
    (ADVP (RB Yet))
    (VP (VBZ drops)
      (NP
        (NP (DT no) (NN jot))
        (PP (IN of)
          (NP (NN faith)))))
    (. !)))

compound(Faith-2, O-1)
nsubj(meets-5, Faith-2)
nsubj(drops-10, Faith-2)
ref(Faith-2, that-4)
acl:relcl(Faith-2, meets-5)
compound(thousand-7, ten-6)
nummod(cheats-8, thousand-7)
dobj(meets-5, cheats-8)
advmod(drops-10, Yet-9)
root(ROOT-0, drops-10)
neg(jot-12, no-11)
dobj(drops-10, jot-12)
case(faith-14, of-13)
nmod:of(jot-12, faith-14)

(ROOT
  (FRAG
    (NP
      (ADJP (JJ Devil)
        (CC and)
        (JJ brute))
      (JJ Thou) (NN dost))
    (ADJP (JJ transmute)
      (PP (TO To)
        (NP
          (NP (JJR higher))
          (, ,)
          (NP (NN lordlier) (NN show))
          (, ,)
          (SBAR
            (WHNP (WP Who))
            (S
              (VP (VBP art)
                (PP (IN in)
                  (NP (NN sooth)))
                (SBAR (IN that)
                  (S
                    (NP (JJ lovely))
                    (VP (VBP Truth)
                      (SBAR
                        (S
                          (NP (DT The) (JJ careless) (NNS angels))
                          (VP (VBP know)))))))))))))
    (. !)))

amod(dost-5, Devil-1)
cc(Devil-1, and-2)
conj:and(Devil-1, brute-3)
amod(dost-5, brute-3)
amod(dost-5, Thou-4)
root(ROOT-0, dost-5)
dep(dost-5, transmute-6)
case(higher-8, To-7)
nmod:to(transmute-6, higher-8)
nsubj(sooth-16, higher-8)
compound(show-11, lordlier-10)
appos(higher-8, show-11)
ref(higher-8, Who-13)
cop(sooth-16, art-14)
case(sooth-16, in-15)
acl:relcl(higher-8, sooth-16)
mark(Truth-19, that-17)
nsubj(Truth-19, lovely-18)
ccomp(sooth-16, Truth-19)
det(angels-22, The-20)
amod(angels-22, careless-21)
nsubj(know-23, angels-22)
ccomp(Truth-19, know-23)

(ROOT
  (S
    (S
      (NP (NNP Thy) (NN face))
      (VP (VBZ is)
        (ADVP (RB far)
          (PP (IN from)
            (NP (DT this))))
        (NP
          (NP (PRP$ our) (NN war))
          (, ,)
          (NP (PRP$ Our) (NN call))
          (CC and)
          (NP (NN counter-cry)))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (MD may) (RB not)
          (VP (VB find)
            (S
              (NP (NNP Thee))
              (ADJP (JJ quick)
                (CC and)
                (JJ kind))))))
      (, ,))
    (CC Nor)
    (S
      (VP (VB know)
        (NP (NNP Thee))
        (SBAR (IN till)
          (S
            (NP (PRP I))
            (VP (VBP die))))))
    (. .)))

compound(face-2, Thy-1)
nsubj(war-8, face-2)
nsubj(know-25, face-2)
cop(war-8, is-3)
case(this-6, far-4)
mwe(far-4, from-5)
nmod:far_from(war-8, this-6)
nmod:poss(war-8, our-7)
root(ROOT-0, war-8)
nmod:poss(call-11, Our-10)
conj:nor(war-8, call-11)
cc(war-8, and-12)
conj:and(war-8, counter-cry-13)
nsubj(find-18, I-15)
aux(find-18, may-16)
neg(find-18, not-17)
dep(war-8, find-18)
nsubj(quick-20, Thee-19)
nsubj(kind-22, Thee-19)
xcomp(find-18, quick-20)
cc(quick-20, and-21)
xcomp(find-18, kind-22)
conj:and(quick-20, kind-22)
cc(war-8, Nor-24)
conj:and(war-8, know-25)
dobj(know-25, Thee-26)
mark(die-29, till-27)
nsubj(die-29, I-28)
advcl(know-25, die-29)

(ROOT
  (S (CC Yet)
    (S
      (S
        (S
          (VP (MD may)))
        (NP (PRP I))
        (VP (VBP look)
          (PP (IN with)
            (NP (NN heart) (NN unshook)))
          (UCP
            (PP (IN On)
              (NP
                (NP (NN blow))
                (VP (VBN brought)
                  (ADVP (RB home)))))
            (CC or)
            (VP (VBN missed)))))
      (: --) (RB Yet)
      (S
        (S
          (SINV (MD may)
            (NP (PRP I))
            (VP (VB hear)
              (PP (IN with)
                (NP (JJ equal) (NN ear)))
              (NP
                (NP (DT The) (NNS clarions))
                (PP (IN down)
                  (NP (DT the) (NN List))))))
          (: ;)
          (FRAG
            (VP
              (ADVP (RB Yet))
              (VBN set)
              (NP (PRP$ my) (NN lance))
              (PP (IN above)
                (NP (NN mischance))))))
        (CC And)
        (S
          (NP (NN ride))
          (NP (DT the) (NN barriere)))))
    (: --)
    (S
      (INTJ (UH Oh))
      (, ,)
      (VP (VB hit)
        (CC or)
        (VB miss) (, ,)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (JJ little) (NN 't))
            (VP (VBZ is) (, ,)
              (SBAR
                (S
                  (NP (PRP$ My) (NN Lady))
                  (VP (VBZ is) (RB not)
                    (NP (RB there))))))))))
    (. !)))

cc(look-4, Yet-1)
dep(look-4, may-2)
nsubj(look-4, I-3)
root(ROOT-0, look-4)
case(unshook-7, with-5)
compound(unshook-7, heart-6)
nmod:with(look-4, unshook-7)
case(blow-9, On-8)
dep(look-4, blow-9)
acl(blow-9, brought-10)
advmod(brought-10, home-11)
cc(blow-9, or-12)
dep(look-4, missed-13)
conj:or(blow-9, missed-13)
advmod(look-4, Yet-15)
aux(hear-18, may-16)
nsubj(hear-18, I-17)
dep(set-29, hear-18)
case(ear-21, with-19)
amod(ear-21, equal-20)
nmod:with(hear-18, ear-21)
det(clarions-23, The-22)
dobj(hear-18, clarions-23)
case(List-26, down-24)
det(List-26, the-25)
nmod:down(clarions-23, List-26)
advmod(set-29, Yet-28)
parataxis(look-4, set-29)
nmod:poss(lance-31, my-30)
dobj(set-29, lance-31)
case(mischance-33, above-32)
nmod:above(set-29, mischance-33)
cc(set-29, And-34)
dep(barriere-37, ride-35)
det(barriere-37, the-36)
parataxis(look-4, barriere-37)
conj:and(set-29, barriere-37)
discourse(hit-41, Oh-39)
parataxis(look-4, hit-41)
cc(hit-41, or-42)
parataxis(look-4, miss-43)
conj:or(hit-41, miss-43)
advmod(is-48, how-45)
amod('t-47, little-46)
nsubj(is-48, 't-47)
ccomp(hit-41, is-48)
nmod:poss(Lady-51, My-50)
nsubj(there-54, Lady-51)
cop(there-54, is-52)
neg(there-54, not-53)
ccomp(is-48, there-54)

(ROOT
  (NP
    (NP (DT THE) (NNS FLOWERS))
    (PP (TO To)
      (NP (PRP$ our) (JJ private) (NN taste)))
    (, ,)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (ADVP (RB always))
        (NP
          (NP (NN something))
          (ADJP
            (NP (DT a) (RB little))
            (JJ exotic)))))
    (, ,)
    (NP (RB almost) (JJ artificial))
    (, ,)
    (PP (IN in)
      (NP
        (NP (NNS songs))
        (SBAR
          (WHNP (WDT which))
          (S (, ,)
            (PP (IN under)
              (NP (DT an) (JJ English) (NN aspect)
                (CC and)
                (NN dress)))
            (, ,)
            (VP (VBP are)
              (ADVP (RB yet))
              (NP
                (NP
                  (ADJP (RB so) (JJ manifestly))
                  (DT the) (NN product))
                (PP (IN of)
                  (NP (JJ other) (NNS skies)))))))))
    (. .)))

det(FLOWERS-2, THE-1)
root(ROOT-0, FLOWERS-2)
case(taste-6, To-3)
nmod:poss(taste-6, our-4)
amod(taste-6, private-5)
nmod:to(FLOWERS-2, taste-6)
expl(is-9, there-8)
dep(FLOWERS-2, is-9)
advmod(is-9, always-10)
nsubj(is-9, something-11)
det(little-13, a-12)
nmod:npmod(exotic-14, little-13)
amod(something-11, exotic-14)
advmod(artificial-17, almost-16)
appos(FLOWERS-2, artificial-17)
case(songs-20, in-19)
nmod:in(FLOWERS-2, songs-20)
nsubj(product-35, songs-20)
ref(songs-20, which-21)
case(aspect-26, under-23)
det(aspect-26, an-24)
amod(aspect-26, English-25)
nmod:under(product-35, aspect-26)
cc(aspect-26, and-27)
conj:and(aspect-26, dress-28)
nmod:under(product-35, dress-28)
cop(product-35, are-30)
advmod(product-35, yet-31)
advmod(manifestly-33, so-32)
amod(product-35, manifestly-33)
det(product-35, the-34)
acl:relcl(songs-20, product-35)
case(skies-38, of-36)
amod(skies-38, other-37)
nmod:of(product-35, skies-38)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP affect)
        (NP (PRP us))
        (PP (IN like)
          (NP (NNS translations)))))
    (: ;)
    (S
      (NP
        (NP (DT the) (JJ very) (NNS fauna))
        (CC and)
        (NP (NNS flora)))
      (VP (VBP are)
        (ADJP (JJ alien))
        (, ,)
        (ADVP (RB remote))))
    (: ;)
    (S
      (NP (DT the) (NN dog))
      (VP (VBZ 's)))
    (: -)
    (S
      (S
        (NP (NN tooth) (NN violet))
        (VP (VBZ is)
          (ADVP (CC but))
          (NP
            (NP (DT an) (JJ ill) (NN substitute))
            (PP (IN for)
              (NP (DT the) (JJ rathe) (NN primrose))))))
      (, ,)
      (CC nor)
      (SQ (MD can)
        (NP (PRP we))
        (VP
          (ADVP (RB ever))
          (VB believe)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN wood-robin))
              (VP (VBZ sings)
                (PP (IN as)
                  (NP
                    (NP (NN sweetly))
                    (PP (IN in)
                      (NP (NNP April)))))
                (PP (IN as)
                  (NP (DT the) (JJ English) (NN thrush)))))))))
    (. .)))

nsubj(affect-2, They-1)
root(ROOT-0, affect-2)
dobj(affect-2, us-3)
case(translations-5, like-4)
nmod:like(affect-2, translations-5)
det(fauna-9, the-7)
amod(fauna-9, very-8)
nsubj(alien-13, fauna-9)
cc(fauna-9, and-10)
conj:and(fauna-9, flora-11)
nsubj(alien-13, flora-11)
cop(alien-13, are-12)
parataxis(affect-2, alien-13)
advmod(alien-13, remote-15)
det(dog-18, the-17)
nsubj('s-19, dog-18)
parataxis(affect-2, 's-19)
compound(violet-22, tooth-21)
nsubj(substitute-27, violet-22)
cop(substitute-27, is-23)
advmod(substitute-27, but-24)
det(substitute-27, an-25)
amod(substitute-27, ill-26)
parataxis(affect-2, substitute-27)
case(primrose-31, for-28)
det(primrose-31, the-29)
amod(primrose-31, rathe-30)
nmod:for(substitute-27, primrose-31)
cc(substitute-27, nor-33)
aux(believe-37, can-34)
nsubj(believe-37, we-35)
advmod(believe-37, ever-36)
parataxis(affect-2, believe-37)
conj:nor(substitute-27, believe-37)
mark(sings-41, that-38)
det(wood-robin-40, the-39)
nsubj(sings-41, wood-robin-40)
ccomp(believe-37, sings-41)
case(sweetly-43, as-42)
nmod:as(sings-41, sweetly-43)
case(April-45, in-44)
nmod:in(sweetly-43, April-45)
case(thrush-49, as-46)
det(thrush-49, the-47)
amod(thrush-49, English-48)
nmod:as(sings-41, thrush-49)

(ROOT
  (NP (: --) (NNP THE) (NNP ATHENAEUM) (. .)))

compound(ATHENAEUM-3, THE-2)
root(ROOT-0, ATHENAEUM-3)

(ROOT
  (S
    (VP (VB Buy)
      (NP (PRP$ my) (JJ English) (NNS posies)))
    (. !)))

root(ROOT-0, Buy-1)
nmod:poss(posies-4, my-2)
amod(posies-4, English-3)
dobj(Buy-1, posies-4)

(ROOT
  (S
    (S
      (NP (NNP Kent)
        (CC and)
        (NNP Surrey))
      (VP (MD may)
        (PRN (: --)
          (S
            (NP
              (NP (NNP Violets))
              (PP (IN of)
                (NP
                  (NP
                    (NP (DT the) (NNP Undercliff) (NNP Wet))
                    (PP (IN with)
                      (NP (NNP Channel) (NN spray))))
                  (: ;)
                  (NP
                    (NP (NNP Cowslips))
                    (PP (IN from)
                      (NP (DT a) (NNP Devon) (NN combe))))
                  (: --))))
            (NP (NNP Midland) (NN furze) (NNS afire)))
          (: --))
        (VP (VB Buy)
          (NP (PRP$ my) (JJ English) (NNS posies)))))
    (CC And)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB sell)
          (NP
            (NP (PRP$ your) (NN heart) (POS 's))
            (NN desire)))))
    (. !)))

nsubj(Buy-25, Kent-1)
cc(Kent-1, and-2)
conj:and(Kent-1, Surrey-3)
nsubj(Buy-25, Surrey-3)
aux(Buy-25, may-4)
dep(afire-23, Violets-6)
case(Wet-10, of-7)
det(Wet-10, the-8)
compound(Wet-10, Undercliff-9)
nmod:of(Violets-6, Wet-10)
case(spray-13, with-11)
compound(spray-13, Channel-12)
nmod:with(Wet-10, spray-13)
dep(Wet-10, Cowslips-15)
case(combe-19, from-16)
det(combe-19, a-17)
compound(combe-19, Devon-18)
nmod:from(Cowslips-15, combe-19)
compound(afire-23, Midland-21)
compound(afire-23, furze-22)
parataxis(Buy-25, afire-23)
root(ROOT-0, Buy-25)
nmod:poss(posies-28, my-26)
amod(posies-28, English-27)
dobj(Buy-25, posies-28)
cc(Buy-25, And-29)
nsubj(sell-32, I-30)
aux(sell-32, 'll-31)
conj:and(Buy-25, sell-32)
nmod:poss(heart-34, your-33)
nmod:poss(desire-36, heart-34)
case(heart-34, 's-35)
dobj(sell-32, desire-36)

(ROOT
  (S
    (VP (VB Buy)
      (NP (PRP$ my) (JJ English) (NNS posies)))
    (. !)))

root(ROOT-0, Buy-1)
nmod:poss(posies-4, my-2)
amod(posies-4, English-3)
dobj(Buy-1, posies-4)

(ROOT
  (SQ
    (S
      (NP (PRP You) (DT that))
      (VP (VBP scorn)
        (NP (DT the) (MD May))))
    (, ,)
    (SQ (MD Wo) (RB n't)
      (NP (PRP you))
      (VP (VB greet)
        (NP (DT a) (NN friend))
        (PP (IN from)
          (NP (NN home))
          (ADVP
            (NP (PDT Half) (DT the) (NN world))
            (RB away)))))
    (. ?)))

nsubj(scorn-3, You-1)
dep(You-1, that-2)
dep(greet-10, scorn-3)
dobj(scorn-3, the-4)
dep(the-4, May-5)
aux(greet-10, Wo-7)
neg(greet-10, n't-8)
nsubj(greet-10, you-9)
root(ROOT-0, greet-10)
det(friend-12, a-11)
dobj(greet-10, friend-12)
case(home-14, from-13)
nmod:from(greet-10, home-14)
det:predet(world-17, Half-15)
det(world-17, the-16)
nmod:npmod(away-18, world-17)
advmod(home-14, away-18)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Green))
        (PP (IN against)
          (NP
            (NP (DT the) (JJ draggled) (NN drift))
            (, ,)
            (NP (NNP Faint)
              (CC and)
              (NNP frail))
            (CC and)
            (NP (JJ first))
            (: --))))
      (VP (VB Buy)
        (NP (PRP$ my) (JJ Northern) (NN blood-root))))
    (CC And)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP you))
              (VP (VBD were)
                (VP (VBD nursed) (: :)
                  (S
                    (VP (VBG Robin)
                      (PRT (RP down))
                      (NP (DT the) (JJ logging-road) (NN whistles))
                      (, ,) (`` ``)
                      (PP (VBN Come)
                        (PP (TO to)
                          (NP (PRP me)))))))))))))
    (. !) ('' '')))

nsubj(Buy-13, Green-1)
case(drift-5, against-2)
det(drift-5, the-3)
amod(drift-5, draggled-4)
nmod:against(Green-1, drift-5)
nmod:against(Green-1, Faint-7)
conj:and(drift-5, Faint-7)
cc(Faint-7, and-8)
conj:and(drift-5, frail-9)
conj:and(Faint-7, frail-9)
cc(drift-5, and-10)
nmod:against(Green-1, first-11)
conj:and(drift-5, first-11)
root(ROOT-0, Buy-13)
nmod:poss(blood-root-16, my-14)
amod(blood-root-16, Northern-15)
dobj(Buy-13, blood-root-16)
cc(Buy-13, And-17)
nsubj(know-20, I-18)
aux(know-20, 'll-19)
conj:and(Buy-13, know-20)
advmod(nursed-24, where-21)
nsubjpass(nursed-24, you-22)
auxpass(nursed-24, were-23)
ccomp(know-20, nursed-24)
parataxis(nursed-24, Robin-26)
compound:prt(Robin-26, down-27)
det(whistles-30, the-28)
amod(whistles-30, logging-road-29)
dobj(Robin-26, whistles-30)
case(me-35, Come-33)
case(me-35, to-34)
advcl(Robin-26, me-35)

(ROOT
  (S
    (S
      (S
        (NP (NNP Spring))
        (VP (VBZ has)
          (VP (VBN found)
            (NP (DT the) (NN maple-grove)))))
      (, ,)
      (NP (DT the) (NN sap))
      (VP (VBZ is)
        (VP (VBG running)
          (ADJP (JJ free)))))
    (: ;)
    (S
      (NP
        (NP (PDT All) (DT the) (NNS winds))
        (PP (IN of)
          (NP (NNP Canada))))
      (VP (VBP call)
        (NP (DT the) (NN ploughing-rain))))
    (. .)))

nsubj(found-3, Spring-1)
aux(found-3, has-2)
ccomp(running-10, found-3)
det(maple-grove-5, the-4)
dobj(found-3, maple-grove-5)
det(sap-8, the-7)
nsubj(running-10, sap-8)
aux(running-10, is-9)
root(ROOT-0, running-10)
xcomp(running-10, free-11)
det:predet(winds-15, All-13)
det(winds-15, the-14)
nsubj(call-18, winds-15)
case(Canada-17, of-16)
nmod:of(winds-15, Canada-17)
parataxis(running-10, call-18)
det(ploughing-rain-20, the-19)
dobj(call-18, ploughing-rain-20)

(ROOT
  (S
    (VP
      (VP (VB Take)
        (NP (DT the) (NN flower)))
      (CC and)
      (VP (VB turn)
        (NP (DT the) (NN hour)))
      (, ,)
      (CC and)
      (VP (VB kiss)
        (NP (PRP$ your) (NN love))
        (ADVP (RB again))))
    (. !)))

root(ROOT-0, Take-1)
det(flower-3, the-2)
dobj(Take-1, flower-3)
cc(Take-1, and-4)
conj:and(Take-1, turn-5)
det(hour-7, the-6)
dobj(turn-5, hour-7)
cc(Take-1, and-9)
conj:and(Take-1, kiss-10)
nmod:poss(love-12, your-11)
dobj(kiss-10, love-12)
advmod(kiss-10, again-13)

(ROOT
  (S
    (VP (VB Buy)
      (NP (PRP$ my) (JJ English) (NNS posies)))
    (. !)))

root(ROOT-0, Buy-1)
nmod:poss(posies-4, my-2)
amod(posies-4, English-3)
dobj(Buy-1, posies-4)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP
        (VP (VBZ 's)
          (S
            (VP (TO to)
              (VP (VB match)
                (NP (PRP$ your) (NN need))))))
        (PRN (: --)
          (S
            (VP
              (VP (VB Buy)
                (NP
                  (NP (DT a) (NN tuft))
                  (PP (IN of)
                    (NP (JJ royal) (NN heath)))))
              (, ,)
              (VP (VB Buy)
                (NP
                  (NP (DT a) (NN bunch))
                  (PP (IN of)
                    (NP (NNP weed) (NNP White))))
                (PP (IN as)
                  (NP
                    (NP (NN sand))
                    (PP (IN of)
                      (NP (NNP Muysenberg) (NNP Spun)))))
                (PP (IN before)
                  (NP (DT the) (NN gale))))))
          (: --))
        (VP (VB Buy)
          (NP (PRP$ my) (NN heath)
            (CC and)
            (NNS lilies)))))
    (CC And)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB tell)
          (S
            (NP (PRP you))
            (VP (VB whence)
              (S
                (NP (PRP you))
                (VP (VB hail))))))))
    (. !)))

nsubj('s-2, Here-1)
nsubj:xsubj(match-4, Here-1)
root(ROOT-0, 's-2)
mark(match-4, to-3)
xcomp('s-2, match-4)
nmod:poss(need-6, your-5)
dobj(match-4, need-6)
parataxis('s-2, Buy-8)
det(tuft-10, a-9)
dobj(Buy-8, tuft-10)
case(heath-13, of-11)
amod(heath-13, royal-12)
nmod:of(tuft-10, heath-13)
dep(Buy-8, Buy-15)
det(bunch-17, a-16)
dobj(Buy-15, bunch-17)
case(White-20, of-18)
compound(White-20, weed-19)
nmod:of(bunch-17, White-20)
case(sand-22, as-21)
nmod:as(Buy-15, sand-22)
case(Spun-25, of-23)
compound(Spun-25, Muysenberg-24)
nmod:of(sand-22, Spun-25)
case(gale-28, before-26)
det(gale-28, the-27)
nmod:before(Buy-15, gale-28)
dep('s-2, Buy-30)
nmod:poss(heath-32, my-31)
dobj(Buy-30, heath-32)
cc(heath-32, and-33)
dobj(Buy-30, lilies-34)
conj:and(heath-32, lilies-34)
cc('s-2, And-35)
nsubj(tell-38, I-36)
aux(tell-38, 'll-37)
conj:and('s-2, tell-38)
nsubj(whence-40, you-39)
ccomp(tell-38, whence-40)
nsubj(hail-42, you-41)
ccomp(whence-40, hail-42)

(ROOT
  (S
    (PP (IN Under)
      (NP (JJ hot) (NNP Constantia)))
    (S
      (ADJP (JJ broad)))
    (NP (DT the) (NNS vineyards))
    (VP (VBP lie) (: --)
      (NP
        (NP
          (ADJP (JJ Throned)
            (CC and)
            (JJ thorned))
          (DT the))
        (VP (VBG aching)
          (S
            (VP (VBG berg)
              (NP
                (NP (NNS props))
                (NP (DT the) (JJ speckless) (NN sky)))
              (PRN (: --)
                (S
                  (NP
                    (NP (NNP Slow))
                    (PP (IN below)
                      (NP (DT the) (NNP Wynberg) (NNS firs) (NNS trails))))
                  (NP (DT the) (JJ tilted) (NN wain)))
                (: --))
              (S
                (VP
                  (VP (VB Take)
                    (NP (DT the) (NN flower)))
                  (CC and)
                  (VP (VB turn)
                    (NP (DT the) (NN hour)))
                  (, ,)
                  (CC and)
                  (VP (VB kiss)
                    (NP (PRP$ your) (NN love))
                    (ADVP (RB again))))))))))
    (. !)))

case(Constantia-3, Under-1)
amod(Constantia-3, hot-2)
nmod:under(lie-7, Constantia-3)
dep(lie-7, broad-4)
det(vineyards-6, the-5)
nsubj(lie-7, vineyards-6)
root(ROOT-0, lie-7)
dobj(lie-7, Throned-9)
cc(Throned-9, and-10)
dobj(lie-7, thorned-11)
conj:and(Throned-9, thorned-11)
dep(Throned-9, the-12)
acl(Throned-9, aching-13)
advcl(aching-13, berg-14)
dobj(berg-14, props-15)
det(sky-18, the-16)
amod(sky-18, speckless-17)
dep(props-15, sky-18)
dep(wain-28, Slow-20)
case(trails-25, below-21)
det(trails-25, the-22)
compound(trails-25, Wynberg-23)
compound(trails-25, firs-24)
nmod:below(Slow-20, trails-25)
det(wain-28, the-26)
amod(wain-28, tilted-27)
parataxis(berg-14, wain-28)
dep(berg-14, Take-30)
det(flower-32, the-31)
dobj(Take-30, flower-32)
cc(Take-30, and-33)
dep(berg-14, turn-34)
conj:and(Take-30, turn-34)
det(hour-36, the-35)
dobj(turn-34, hour-36)
cc(Take-30, and-38)
dep(berg-14, kiss-39)
conj:and(Take-30, kiss-39)
nmod:poss(love-41, your-40)
dobj(kiss-39, love-41)
advmod(kiss-39, again-42)

(ROOT
  (S
    (VP (VB Buy)
      (NP (PRP$ my) (JJ English) (NNS posies)))
    (. !)))

root(ROOT-0, Buy-1)
nmod:poss(posies-4, my-2)
amod(posies-4, English-3)
dobj(Buy-1, posies-4)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (PRP You))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD will) (RB not)
                (VP (VB turn))))))
        (PRN (: --)
          (S
            (VP
              (VP (VB Buy)
                (NP (PRP$ my) (JJ hot-wood) (NNS clematis)))
              (, ,)
              (VP (VB Buy)
                (NP
                  (NP (DT a) (JJ frond) (NN o) (POS '))
                  (NN fern))
                (NP
                  (NP (NNP Gathered))
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (DT the) (NNP Erskine))
                      (VP (VBZ leaps)
                        (ADVP (RB Down)))))))
              (NP (DT the) (NN road))
              (PP (TO to)
                (NP (NNP Lorne)))))
          (: --)))
      (VP (VB Buy)
        (NP (PRP$ my) (NNP Christmas) (NN creeper))))
    (CC And)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB say)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP you))
              (VP (VBD were)
                (VP (VBN born))))))))
    (. !)))

nsubj(turn-5, You-1)
nsubj(Buy-29, You-1)
ref(You-1, that-2)
aux(turn-5, will-3)
neg(turn-5, not-4)
acl:relcl(You-1, turn-5)
dep(You-1, Buy-7)
nmod:poss(clematis-10, my-8)
amod(clematis-10, hot-wood-9)
dobj(Buy-7, clematis-10)
dep(Buy-7, Buy-12)
det(o-15, a-13)
amod(o-15, frond-14)
nmod:poss(fern-17, o-15)
case(o-15, '-16)
iobj(Buy-12, fern-17)
dobj(Buy-12, Gathered-18)
advmod(leaps-22, where-19)
det(Erskine-21, the-20)
nsubj(leaps-22, Erskine-21)
acl:relcl(Gathered-18, leaps-22)
advmod(leaps-22, Down-23)
det(road-25, the-24)
dobj(Buy-7, road-25)
case(Lorne-27, to-26)
nmod:to(Buy-7, Lorne-27)
root(ROOT-0, Buy-29)
nmod:poss(creeper-32, my-30)
compound(creeper-32, Christmas-31)
dobj(Buy-29, creeper-32)
cc(Buy-29, And-33)
nsubj(say-36, I-34)
aux(say-36, 'll-35)
conj:and(Buy-29, say-36)
advmod(born-40, where-37)
nsubjpass(born-40, you-38)
auxpass(born-40, were-39)
advcl(say-36, born-40)

(ROOT
  (S
    (NP (NNP West))
    (ADVP (RB away)
      (PP (IN from)
        (NP (NNP Melbourne) (NN dust) (NNS holidays))))
    (VP (VBP begin) (: --)
      (NP
        (NP (PRP They))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD mock)
              (PP (IN at)
                (NP (NNP Paradise) (NNP woo)))
              (PP (IN at)
                (NP (NNP Cora) (NNP Lynn)))
              (PRN (: --)
                (PP (IN Through)
                  (NP
                    (NP (DT the) (JJ great) (NNP South) (NNP Otway) (NNS gums))
                    (SBAR
                      (S
                        (VP (VBZ sings)
                          (NP (DT the) (JJ great) (NNP South) (NNP Main)))))))
                (: --))
              (S
                (VP
                  (VP (VB Take)
                    (NP (DT the) (NN flower)))
                  (CC and)
                  (VP (VB turn)
                    (NP (DT the) (NN hour)))
                  (, ,)
                  (CC and)
                  (VP (VB kiss)
                    (NP (PRP$ your) (NN love))
                    (ADVP (RB again))))))))))
    (. !)))

nsubj(begin-7, West-1)
case(holidays-6, away-2)
mwe(away-2, from-3)
compound(holidays-6, Melbourne-4)
compound(holidays-6, dust-5)
nmod:away_from(begin-7, holidays-6)
root(ROOT-0, begin-7)
dobj(begin-7, They-9)
nsubj(mock-11, They-9)
ref(They-9, that-10)
acl:relcl(They-9, mock-11)
case(woo-14, at-12)
compound(woo-14, Paradise-13)
nmod:at(mock-11, woo-14)
case(Lynn-17, at-15)
compound(Lynn-17, Cora-16)
nmod:at(mock-11, Lynn-17)
case(gums-24, Through-19)
det(gums-24, the-20)
amod(gums-24, great-21)
compound(gums-24, South-22)
compound(gums-24, Otway-23)
dep(mock-11, gums-24)
acl:relcl(gums-24, sings-25)
det(Main-29, the-26)
amod(Main-29, great-27)
compound(Main-29, South-28)
dobj(sings-25, Main-29)
ccomp(mock-11, Take-31)
det(flower-33, the-32)
dobj(Take-31, flower-33)
cc(Take-31, and-34)
ccomp(mock-11, turn-35)
conj:and(Take-31, turn-35)
det(hour-37, the-36)
dobj(turn-35, hour-37)
cc(Take-31, and-39)
ccomp(mock-11, kiss-40)
conj:and(Take-31, kiss-40)
nmod:poss(love-42, your-41)
dobj(kiss-40, love-42)
advmod(kiss-40, again-43)

(ROOT
  (S
    (VP (VB Buy)
      (NP (PRP$ my) (JJ English) (NNS posies)))
    (. !)))

root(ROOT-0, Buy-1)
nmod:poss(posies-4, my-2)
amod(posies-4, English-3)
dobj(Buy-1, posies-4)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ 's)
      (NP (PRP$ your) (NN choice) (NN unsold)))
    (. !)))

nsubj(unsold-5, Here-1)
cop(unsold-5, 's-2)
nmod:poss(unsold-5, your-3)
compound(unsold-5, choice-4)
root(ROOT-0, unsold-5)

(ROOT
  (S
    (S
      (VP
        (VP (VB Buy)
          (NP (DT a) (JJ blood-red) (NN myrtle-bloom)))
        (, ,)
        (VP (VB Buy)
          (NP
            (NP
              (NP (DT the) (NN kowhai) (POS 's))
              (JJ gold) (NN Flung))
            (PP (IN for)
              (NP (NN gift))))
          (PP (IN on)
            (NP
              (NP (NNP Taupo) (POS 's))
              (NN face))))))
    (, ,)
    (NP (NNP Sign))
    (NP (DT that) (NN spring))
    (VP (VBZ is)
      (VP (VBN come)
        (PRN (: --)
          (S
            (VP (VB Buy)
              (NP (PRP$ my) (VBG clinging) (NN myrtle)))))
        (SBAR (CC And)
          (S
            (NP (PRP I))
            (VP (MD 'll)
              (VP (VB give)
                (NP (PRP you))
                (ADVP (RB back))
                (NP (PRP$ your) (NN home))))))))
    (. !)))

ccomp(come-23, Buy-1)
det(myrtle-bloom-4, a-2)
amod(myrtle-bloom-4, blood-red-3)
dobj(Buy-1, myrtle-bloom-4)
dep(Buy-1, Buy-6)
det(kowhai-8, the-7)
nmod:poss(Flung-11, kowhai-8)
case(kowhai-8, 's-9)
amod(Flung-11, gold-10)
dobj(Buy-6, Flung-11)
case(gift-13, for-12)
nmod:for(Flung-11, gift-13)
case(face-17, on-14)
nmod:poss(face-17, Taupo-15)
case(Taupo-15, 's-16)
nmod:on(Buy-6, face-17)
nsubjpass(come-23, Sign-19)
det(spring-21, that-20)
nsubjpass(come-23, spring-21)
auxpass(come-23, is-22)
root(ROOT-0, come-23)
parataxis(come-23, Buy-25)
nmod:poss(myrtle-28, my-26)
amod(myrtle-28, clinging-27)
dobj(Buy-25, myrtle-28)
cc(give-32, And-29)
nsubj(give-32, I-30)
aux(give-32, 'll-31)
ccomp(come-23, give-32)
dobj(give-32, you-33)
advmod(give-32, back-34)
nmod:poss(home-36, your-35)
dobj(give-32, home-36)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Broom))
        (PP (IN behind)
          (NP (DT the) (JJ windy) (NN town))))
      (: ;)
      (NP (NN pollen) (NN o))
      ('' ')
      (NP (DT the) (NN pine))
      (: --))
    (VP (VBD Bell-bird)
      (PP (IN in)
        (NP (DT the) (JJ leafy) (JJ deep)))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP
            (NP (DT the)
              (ADJP
                (NP (CD _) (NNS ratas))
                (JJ _))
              (NN twine))
            (PRN (: --)
              (NP
                (NP (NNP Fern))
                (PP (IN above)
                  (NP
                    (NP (DT the) (NN saddle-bow))
                    (, ,)
                    (NP
                      (NP (NN flax))
                      (PP (IN upon)
                        (NP (DT the) (NN plain)))))))
              (: --)))
          (VP
            (VP (VB Take)
              (NP (DT the) (NN flower)))
            (CC and)
            (VP (VB turn)
              (NP (DT the) (NN hour)))
            (, ,)
            (CC and)
            (VP (VB kiss)
              (NP (PRP$ your) (NN love))
              (ADVP (RB again)))))))
    (. !)))

nsubj(Bell-bird-13, Broom-1)
case(town-5, behind-2)
det(town-5, the-3)
amod(town-5, windy-4)
nmod:behind(Broom-1, town-5)
compound(o-8, pollen-7)
dep(Broom-1, o-8)
det(pine-11, the-10)
dep(Broom-1, pine-11)
root(ROOT-0, Bell-bird-13)
case(deep-17, in-14)
det(deep-17, the-15)
amod(deep-17, leafy-16)
nmod:in(Bell-bird-13, deep-17)
advmod(Take-35, where-18)
det(twine-23, the-19)
nummod(ratas-21, _-20)
nmod:npmod(_-22, ratas-21)
amod(twine-23, _-22)
nsubj(Take-35, twine-23)
nsubj(turn-39, twine-23)
nsubj(kiss-44, twine-23)
dep(twine-23, Fern-25)
case(saddle-bow-28, above-26)
det(saddle-bow-28, the-27)
nmod:above(Fern-25, saddle-bow-28)
appos(saddle-bow-28, flax-30)
case(plain-33, upon-31)
det(plain-33, the-32)
nmod:upon(flax-30, plain-33)
advcl(Bell-bird-13, Take-35)
det(flower-37, the-36)
dobj(Take-35, flower-37)
cc(Take-35, and-38)
advcl(Bell-bird-13, turn-39)
conj:and(Take-35, turn-39)
det(hour-41, the-40)
dobj(turn-39, hour-41)
cc(Take-35, and-43)
advcl(Bell-bird-13, kiss-44)
conj:and(Take-35, kiss-44)
nmod:poss(love-46, your-45)
dobj(kiss-44, love-46)
advmod(kiss-44, again-47)

(ROOT
  (S
    (VP (VB Buy)
      (NP (PRP$ my) (JJ English) (NNS posies)))
    (. !)))

root(ROOT-0, Buy-1)
nmod:poss(posies-4, my-2)
amod(posies-4, English-3)
dobj(Buy-1, posies-4)

(ROOT
  (S
    (NP
      (NP (PRP Ye))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP have)
            (NP (PRP$ your) (JJ own))))))
    (VP (VB Buy)
      (NP (PRP them))
      (PP (IN for)
        (NP
          (NP (DT a) (NN brother) (POS 's))
          (NN sake)))
      (ADVP (RB Overseas))
      (, ,)
      (ADVP (RB alone)))
    (. .)))

nsubj(have-3, Ye-1)
nsubj(Buy-6, Ye-1)
ref(Ye-1, that-2)
acl:relcl(Ye-1, have-3)
nmod:poss(own-5, your-4)
dobj(have-3, own-5)
root(ROOT-0, Buy-6)
dobj(Buy-6, them-7)
case(sake-12, for-8)
det(brother-10, a-9)
nmod:poss(sake-12, brother-10)
case(brother-10, 's-11)
nmod:for(Buy-6, sake-12)
advmod(Buy-6, Overseas-13)
advmod(Buy-6, alone-15)

(ROOT
  (S
    (NP (NNP Weed) (NNP ye))
    (VP (VBP trample)
      (S
        (S
          (NP (NN underfoot))
          (VP (VBZ Floods)
            (NP (PRP$ his) (NN heart) (NN abrim))))
        (: --)
        (S
          (NP (NNP Bird) (NNP ye))
          (ADVP (RB never))
          (VP (VBD heeded)))
        (, ,)
        (INTJ (UH Oh))
        (, ,)
        (S
          (NP (PRP she))
          (VP (VBZ calls)
            (NP (PRP$ his) (NN dead))
            (PP (TO to)
              (NP (PRP him)))))))
    (. !)))

compound(ye-2, Weed-1)
nsubj(trample-3, ye-2)
root(ROOT-0, trample-3)
nsubj(Floods-5, underfoot-4)
xcomp(trample-3, Floods-5)
nmod:poss(abrim-8, his-6)
compound(abrim-8, heart-7)
dobj(Floods-5, abrim-8)
compound(ye-11, Bird-10)
nsubj(heeded-13, ye-11)
neg(heeded-13, never-12)
parataxis(Floods-5, heeded-13)
discourse(Floods-5, Oh-15)
nsubj(calls-18, she-17)
parataxis(Floods-5, calls-18)
nmod:poss(dead-20, his-19)
dobj(calls-18, dead-20)
case(him-22, to-21)
nmod:to(calls-18, him-22)

(ROOT
  (S
    (ADVP (RB Far)
      (CC and)
      (RB far))
    (NP (PRP$ our) (NNS homes))
    (VP (VBP are)
      (VP (VBN set)
        (S
          (VP (VB round)
            (NP
              (NP (DT the) (CD Seven) (NNS Seas))
              (: ;)
              (NP
                (NP (NNP Woe))
                (PP (IN for)
                  (NP (PRP us)))))
            (SBAR (IN if)
              (S
                (NP (PRP we))
                (VP (VBP forget))))
            (, ,)
            (NP (PRP we))))
        (SBAR (IN that)
          (S
            (VP (VBP hold)
              (PP (IN by)
                (NP (DT these))))))))
    (. !)))

advmod(set-7, Far-1)
cc(Far-1, and-2)
conj:and(Far-1, far-3)
advmod(set-7, far-3)
nmod:poss(homes-5, our-4)
nsubjpass(set-7, homes-5)
auxpass(set-7, are-6)
root(ROOT-0, set-7)
ccomp(set-7, round-8)
det(Seas-11, the-9)
nummod(Seas-11, Seven-10)
dobj(round-8, Seas-11)
dep(Seas-11, Woe-13)
case(us-15, for-14)
nmod:for(Woe-13, us-15)
mark(forget-18, if-16)
nsubj(forget-18, we-17)
advcl(round-8, forget-18)
dobj(round-8, we-20)
mark(hold-22, that-21)
ccomp(set-7, hold-22)
case(these-24, by-23)
nmod:by(hold-22, these-24)

(ROOT
  (S
    (S
      (VP
        (VP (VBG Unto)
          (NP (DT each)
            (NP (PRP$ his) (NN mother-beach))
            (, ,)
            (NP (NN bloom))
            (CC and)
            (NP (NN bird)
              (CC and)
              (NN land))
            (: --)
            (NP
              (NP (NN Masters))
              (PP (IN of)
                (NP (DT the) (CD Seven) (NNS Seas))))))
        (PRN (, ,)
          (INTJ (UH oh))
          (, ,))))
    (VP (VBP love)
      (CC and)
      (VBP understand))
    (. .)))

csubj(love-20, Unto-1)
csubj(understand-22, Unto-1)
dep(mother-beach-4, each-2)
nmod:poss(mother-beach-4, his-3)
dobj(Unto-1, mother-beach-4)
dobj(Unto-1, bloom-6)
conj:and(mother-beach-4, bloom-6)
cc(mother-beach-4, and-7)
dobj(Unto-1, bird-8)
conj:and(mother-beach-4, bird-8)
cc(bird-8, and-9)
conj:and(mother-beach-4, land-10)
conj:and(bird-8, land-10)
dobj(Unto-1, Masters-12)
conj:and(mother-beach-4, Masters-12)
case(Seas-16, of-13)
det(Seas-16, the-14)
nummod(Seas-16, Seven-15)
nmod:of(Masters-12, Seas-16)
discourse(Unto-1, oh-18)
root(ROOT-0, love-20)
cc(love-20, and-21)
conj:and(love-20, understand-22)

(ROOT
  (S
    (S
      (NP
        (NP (DT THE) (NNP LAST) (NNP RHYME))
        (PP (IN OF)
          (ADJP (JJ TRUE))))
      (VP (VBZ THOMAS)
        (SBAR
          (S
            (NP (DT The) (NNP King))
            (VP (VBZ has)
              (VP (VBN called)
                (PP (IN for)
                  (NP (NN priest)
                    (CC and)
                    (NN cup)))))))))
    (PRN (, ,)
      (S
        (NP (DT The) (NNP King))
        (VP (VBZ has)
          (VP (VBN taken)
            (S
              (VP
                (VP (VB spur))
                (CC and)
                (VP (VB blade)
                  (S
                    (VP (TO To)
                      (VP (VB dub)
                        (NP (NNP True) (NNP Thomas))))))
                (NP (DT a) (JJ belted) (NN knight)))))))
      (, ,))
    (CC And)
    (S
      (ADVP (DT all)
        (PP (IN for)
          (NP
            (NP (DT the) (NN sake) (NN o) (POS '))
            (NP (DT the) (NNS songs)))))
      (NP (PRP he))
      (VP (VBD made)))
    (. .)))

det(RHYME-3, THE-1)
compound(RHYME-3, LAST-2)
nsubj(THOMAS-6, RHYME-3)
case(TRUE-5, OF-4)
acl(RHYME-3, TRUE-5)
root(ROOT-0, THOMAS-6)
det(King-8, The-7)
nsubj(called-10, King-8)
aux(called-10, has-9)
ccomp(THOMAS-6, called-10)
case(priest-12, for-11)
nmod:for(called-10, priest-12)
cc(priest-12, and-13)
nmod:for(called-10, cup-14)
conj:and(priest-12, cup-14)
det(King-17, The-16)
nsubj(taken-19, King-17)
aux(taken-19, has-18)
dep(THOMAS-6, taken-19)
ccomp(taken-19, spur-20)
cc(spur-20, and-21)
ccomp(taken-19, blade-22)
conj:and(spur-20, blade-22)
mark(dub-24, To-23)
xcomp(blade-22, dub-24)
compound(Thomas-26, True-25)
dobj(dub-24, Thomas-26)
det(knight-29, a-27)
amod(knight-29, belted-28)
dobj(spur-20, knight-29)
cc(THOMAS-6, And-31)
advmod(made-41, all-32)
case(o-36, for-33)
det(o-36, the-34)
compound(o-36, sake-35)
nmod:'(all-32, o-36)
case(o-36, '-37)
det(songs-39, the-38)
dep(o-36, songs-39)
nsubj(made-41, he-40)
conj:and(THOMAS-6, made-41)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP have)
        (VP (VBN sought)
          (S
            (NP (PRP him))
            (ADJP (JJ high))))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (VP (VBN sought)
          (S
            (NP (PRP him))
            (ADJP (JJ low))))))
    (, ,)
    (S
      (NP (PRP They))
      (VP (VBP have)
        (VP (VBN sought)
          (NP (PRP him))
          (PP (IN over)
            (NP (NN down)
              (CC and)
              (NN lea))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (VBP have)
        (VP (VBN found)
          (NP (PRP him))
          (PP (IN by)
            (NP
              (NP (DT the) (JJ milk-white) (NN thorn))
              (SBAR
                (S
                  (NP (DT That))
                  (VP (VBZ guards)
                    (NP
                      (NP (DT the) (NNS gates) (NN o) (POS '))
                      (NN Faerie))))))))))
    (. .)))

nsubj(sought-3, They-1)
aux(sought-3, have-2)
root(ROOT-0, sought-3)
nsubj(high-5, him-4)
xcomp(sought-3, high-5)
nsubj(sought-9, they-7)
aux(sought-9, have-8)
dep(sought-3, sought-9)
nsubj(low-11, him-10)
xcomp(sought-9, low-11)
nsubj(sought-15, They-13)
aux(sought-15, have-14)
dep(sought-3, sought-15)
dobj(sought-15, him-16)
case(down-18, over-17)
nmod:over(sought-15, down-18)
cc(down-18, and-19)
nmod:over(sought-15, lea-20)
conj:and(down-18, lea-20)
nsubj(found-24, They-22)
aux(found-24, have-23)
parataxis(sought-3, found-24)
dobj(found-24, him-25)
case(thorn-29, by-26)
det(thorn-29, the-27)
amod(thorn-29, milk-white-28)
nmod:by(found-24, thorn-29)
nsubj(guards-31, thorn-29)
ref(thorn-29, That-30)
acl:relcl(thorn-29, guards-31)
det(o-34, the-32)
compound(o-34, gates-33)
nmod:poss(Faerie-36, o-34)
case(o-34, '-35)
dobj(guards-31, Faerie-36)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (ADJP
          (ADJP (JJ bent)
            (PP (IN beneath)))
          (CC and)
          (ADJP (JJ blue) (JJ above)))))
    (, ,)
    (S
      (NP (PRP$ Their) (NNS eyes))
      (VP (VBD were)
        (VP (VBN held)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (MD might) (RB not)
                (VP (VB see)
                  (NP
                    (NP (DT The) (NN kine))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD grazed)
                          (PP (IN beneath)
                            (NP (DT the) (NNS knowes))))))))))))))
    (, ,)
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (PRP they))
      (VP (VBD were)
        (NP
          (NP (DT the) (NNP Queens) (NN o) (POS '))
          (NN Faerie))))
    (. !)))

nsubj(bent-3, 'T-1)
nsubj(above-7, 'T-1)
cop(bent-3, was-2)
root(ROOT-0, bent-3)
nmod(bent-3, beneath-4)
cc(bent-3, and-5)
amod(above-7, blue-6)
conj:and(bent-3, above-7)
nmod:poss(eyes-10, Their-9)
nsubjpass(held-12, eyes-10)
auxpass(held-12, were-11)
parataxis(bent-3, held-12)
mark(see-17, that-13)
nsubj(see-17, they-14)
aux(see-17, might-15)
neg(see-17, not-16)
ccomp(held-12, see-17)
det(kine-19, The-18)
dobj(see-17, kine-19)
nsubj(grazed-21, kine-19)
ref(kine-19, that-20)
acl:relcl(kine-19, grazed-21)
case(knowes-24, beneath-22)
det(knowes-24, the-23)
nmod:beneath(grazed-21, knowes-24)
discourse(Faerie-34, Oh-26)
nsubj(Faerie-34, they-28)
cop(Faerie-34, were-29)
det(o-32, the-30)
compound(o-32, Queens-31)
nmod:poss(Faerie-34, o-32)
case(o-32, '-33)
parataxis(bent-3, Faerie-34)

(ROOT
  (S
    (S (`` ``)
      (S
        (ADVP (RB Now))
        (VP (VB cease)
          (NP (PRP$ your) (NN song))))
      (, ,) ('' '')
      (NP (NNP the) (NNP King) (PRP he))
      (VP
        (VP (VBD said) (, ,) (`` ``)
          (S
            (INTJ (UH Oh))
            (, ,)
            (VP
              (VP (VB cease)
                (NP (PRP$ your) (NN song)))
              (CC and)
              (VP (VB get)
                (S
                  (NP (PRP you))
                  (ADJP (JJ dight)
                    (S
                      (VP (TO To)
                        (VP (VB vow)
                          (NP (PRP$ your) (NN vow)))))))))))
        (CC and)
        (VP (VBP watch)
          (NP (PRP$ your) (NNS arms)))))
    (, ,) (IN For)
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB dub)
          (S
            (NP (PRP you))
            (NP (DT a) (JJ belted) (NN knight))))))
    (. .)))

advmod(cease-3, Now-2)
ccomp(said-11, cease-3)
nmod:poss(song-5, your-4)
dobj(cease-3, song-5)
compound(King-9, the-8)
nsubj(said-11, King-9)
nsubj(watch-28, King-9)
dep(King-9, he-10)
root(ROOT-0, said-11)
discourse(cease-16, Oh-14)
ccomp(said-11, cease-16)
nmod:poss(song-18, your-17)
dobj(cease-16, song-18)
cc(cease-16, and-19)
ccomp(said-11, get-20)
conj:and(cease-16, get-20)
nsubj(dight-22, you-21)
nsubj:xsubj(vow-24, you-21)
xcomp(get-20, dight-22)
mark(vow-24, To-23)
xcomp(dight-22, vow-24)
nmod:poss(vow-26, your-25)
dobj(vow-24, vow-26)
cc(said-11, and-27)
conj:and(said-11, watch-28)
nmod:poss(arms-30, your-29)
dobj(watch-28, arms-30)
dep(said-11, For-32)
nsubj(dub-35, I-33)
aux(dub-35, will-34)
parataxis(said-11, dub-35)
nsubj(knight-39, you-36)
det(knight-39, a-37)
amod(knight-39, belted-38)
xcomp(dub-35, knight-39)

(ROOT
  (S (`` ``)
    (S (IN For)
      (NP (PRP I))
      (VP (MD will)
        (VP (VB give)
          (NP (PRP you))
          (NP
            (NP
              (NP
                (NP
                  (NP (DT a) (NN horse) (NN o) (POS '))
                  (NN pride))
                (, ,)
                (NP
                  (NP (NNP Wi) (POS '))
                  (NN blazon))
                (CC and)
                (NP
                  (NP (NN spur))
                  (CC and)
                  (NP (NN page)
                    (CC and)
                    (NN squire))))
              (: ;)
              (S
                (NP (NNP Wi) (POS '))
                (VP (VBP keep))))
            (CC and)
            (NP
              (NP (NN tail))
              (CC and)
              (NP (NN seizin)
                (CC and)
                (NN law)))))))
    (, ,)
    (CC And)
    (S
      (NP (NN land))
      (VP (TO to)
        (VP (VB hold)
          (PP (IN at)
            (NP (PRP$ your) (NN desire))))))
    (. .) ('' '')))

dep(give-5, For-2)
nsubj(give-5, I-3)
aux(give-5, will-4)
root(ROOT-0, give-5)
iobj(give-5, you-6)
det(o-9, a-7)
compound(o-9, horse-8)
nmod:poss(pride-11, o-9)
case(o-9, '-10)
dobj(give-5, pride-11)
nmod:poss(blazon-15, Wi-13)
case(Wi-13, '-14)
dobj(give-5, blazon-15)
conj:and(pride-11, blazon-15)
cc(pride-11, and-16)
dobj(give-5, spur-17)
conj:and(pride-11, spur-17)
cc(spur-17, and-18)
conj:and(pride-11, page-19)
conj:and(spur-17, page-19)
cc(page-19, and-20)
conj:and(spur-17, squire-21)
conj:and(page-19, squire-21)
nsubj(keep-25, Wi-23)
case(Wi-23, '-24)
parataxis(pride-11, keep-25)
cc(pride-11, and-26)
dobj(give-5, tail-27)
conj:and(pride-11, tail-27)
cc(tail-27, and-28)
conj:and(pride-11, seizin-29)
conj:and(tail-27, seizin-29)
cc(seizin-29, and-30)
conj:and(tail-27, law-31)
conj:and(seizin-29, law-31)
cc(give-5, And-33)
nsubj(hold-36, land-34)
mark(hold-36, to-35)
conj:and(give-5, hold-36)
case(desire-39, at-37)
nmod:poss(desire-39, your-38)
nmod:at(hold-36, desire-39)

(ROOT
  (S
    (S
      (NP (NNP True) (NNP Thomas))
      (VP (VBD smiled)
        (PP (IN above)
          (NP (PRP$ his) (NN harp)))))
    (, ,)
    (CC And)
    (S
      (S
        (VP (VBN turned)
          (NP (PRP$ his) (NN face))
          (PP (TO to)
            (NP (DT the) (JJ naked) (NN sky)))
          (, ,)
          (FRAG
            (WHADVP (WRB Where)))))
      (, ,)
      (S
        (VP (VBN blown)
          (PP (IN before)
            (NP
              (NP (DT the) (JJ wastrel) (NN wind))
              (, ,)
              (NP
                (NP (DT The) (NN thistle-down))
                (SBAR
                  (S
                    (NP (PRP she))
                    (VP (VBD floated)
                      (PP (IN by)))))))))))
    (. .)))

compound(Thomas-2, True-1)
nsubj(smiled-3, Thomas-2)
nsubj(turned-9, Thomas-2)
root(ROOT-0, smiled-3)
case(harp-6, above-4)
nmod:poss(harp-6, his-5)
nmod:above(smiled-3, harp-6)
cc(smiled-3, And-8)
conj:and(smiled-3, turned-9)
nmod:poss(face-11, his-10)
dobj(turned-9, face-11)
case(sky-15, to-12)
det(sky-15, the-13)
amod(sky-15, naked-14)
nmod:to(turned-9, sky-15)
dep(turned-9, Where-17)
parataxis(turned-9, blown-19)
case(wind-23, before-20)
det(wind-23, the-21)
amod(wind-23, wastrel-22)
nmod:before(blown-19, wind-23)
det(thistle-down-26, The-25)
appos(wind-23, thistle-down-26)
nsubj(floated-28, she-27)
acl:relcl(thistle-down-26, floated-28)
nmod(floated-28, by-29)

(ROOT
  (SINV (`` ``)
    (S
      (S
        (NP (PRP I))
        (VP (VBP ha)
          (SBAR
            (S
              (NP (POS '))
              (VP (VBD vowed)
                (NP (PRP$ my) (NN vow))
                (PP (IN in)
                  (NP (DT another) (NN place))))))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP (JJ bitter) (NN oath))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (PP (IN on)
                  (NP (PRP me)))))))
        (, ,)
        (NP (PRP I))
        (VP (VBP ha))))
    ('' ')
    (VP (VBD watched)
      (NP (PRP$ my) (NNS arms)))
    (NP
      (NP (DT the) (JJ lee-long) (NN night))
      (, ,)
      (SBAR
        (WHADVP (WRB Where))
        (S
          (NP (JJ five-score) (NN fighting) (NNS men))
          (VP (MD would)
            (VP (VB flee))))))
    (. .)))

nsubj(ha-3, I-2)
ccomp(watched-23, ha-3)
nsubj(vowed-5, '-4)
ccomp(ha-3, vowed-5)
nmod:poss(vow-7, my-6)
dobj(vowed-5, vow-7)
case(place-10, in-8)
det(place-10, another-9)
nmod:in(vowed-5, place-10)
cc(ha-3, And-12)
amod(oath-14, bitter-13)
nsubj(ha-21, oath-14)
nsubj(me-18, it-15)
cop(me-18, was-16)
case(me-18, on-17)
acl:relcl(oath-14, me-18)
nsubj(ha-21, I-20)
conj:and(ha-3, ha-21)
ccomp(watched-23, ha-21)
root(ROOT-0, watched-23)
nmod:poss(arms-25, my-24)
dobj(watched-23, arms-25)
det(night-28, the-26)
amod(night-28, lee-long-27)
nsubj(watched-23, night-28)
advmod(flee-35, Where-30)
amod(men-33, five-score-31)
compound(men-33, fighting-32)
nsubj(flee-35, men-33)
aux(flee-35, would-34)
acl:relcl(night-28, flee-35)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My) (NN lance))
      (VP (VBZ is)
        (VP (VBN tipped)
          (NP
            (NP (NNP o) (POS '))
            (NP (DT the) (JJ hammered) (NN flame))))))
    (, ,)
    (NP (PRP$ My) (NN shield))
    (VP (VBZ is)
      (VP (VBN beat)
        (NP
          (NP (NNP o) (POS '))
          (NP (DT the) (JJ moonlight) (NN cold)))))
    (: ;)
    (CC And)
    (S
      (NP (PRP I))
      (VP (VBD won)
        (NP (PRP$ my) (NN spurs))
        (PP (IN in)
          (NP
            (NP (DT the) (NNP Middle) (NNP World))
            (, ,)
            (NP (DT A) (CD thousand) (NN fathom))))
        (PP (IN beneath)
          (NP (DT the) (NN mould)))))
    (. .)))

nmod:poss(lance-3, My-2)
nsubjpass(tipped-5, lance-3)
auxpass(tipped-5, is-4)
ccomp(beat-15, tipped-5)
dobj(tipped-5, o-6)
case(o-6, '-7)
det(flame-10, the-8)
amod(flame-10, hammered-9)
dep(o-6, flame-10)
nmod:poss(shield-13, My-12)
nsubjpass(beat-15, shield-13)
auxpass(beat-15, is-14)
root(ROOT-0, beat-15)
dobj(beat-15, o-16)
case(o-16, '-17)
det(cold-20, the-18)
amod(cold-20, moonlight-19)
dep(o-16, cold-20)
cc(beat-15, And-22)
nsubj(won-24, I-23)
conj:and(beat-15, won-24)
nmod:poss(spurs-26, my-25)
dobj(won-24, spurs-26)
case(World-30, in-27)
det(World-30, the-28)
compound(World-30, Middle-29)
nmod:in(won-24, World-30)
det(fathom-34, A-32)
nummod(fathom-34, thousand-33)
appos(World-30, fathom-34)
case(mould-37, beneath-35)
det(mould-37, the-36)
nmod:beneath(won-24, mould-37)

(ROOT
  (S (`` ``)
    (S (CC And)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (MD should)
            (SBAR
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP make)
                    (VP (VB wi) (`` ')
                      (NP
                        (NP (DT a) (NN horse) (NN o) (POS '))
                        (NN pride))))))
              (, ,)
              (CC And)
              (SBAR
                (WHNP (WP what))
                (SINV (MD should)
                  (NP (PRP I))
                  (VP (VB make)
                    (NP (NNP wi) (POS '))
                    (ADVP
                      (NP (DT a) (NN sword))
                      (RB so)))))))))
      (VP (VBZ brown)))
    (, ,)
    (CC But)
    (SQ (VBD spill)
      (NP (DT the) (JJ rings) (NN o) ('' '))
      (NP
        (NP (DT the) (JJ Gentle) (NN Folk))
        (SBAR
          (FRAG (CC And)
            (VP (VB flyte)
              (NP (PRP$ my) (NN kin))
              (PP (IN in)
                (NP (DT the) (NNP Fairy) (NNP Town))))
            (. ?)))))))

cc(brown-25, And-2)
nsubj(should-4, what-3)
csubj(brown-25, should-4)
nsubj(make-6, I-5)
dep(should-4, make-6)
xcomp(make-6, wi-7)
det(o-11, a-9)
compound(o-11, horse-10)
nmod:poss(pride-13, o-11)
case(o-11, '-12)
dobj(wi-7, pride-13)
cc(make-6, And-15)
dep(make-19, what-16)
aux(make-19, should-17)
nsubj(make-19, I-18)
dep(should-4, make-19)
conj:and(make-6, make-19)
dobj(make-19, wi-20)
case(wi-20, '-21)
det(sword-23, a-22)
nmod:npmod(so-24, sword-23)
advmod(make-19, so-24)
root(ROOT-0, brown-25)
cc(brown-25, But-27)
conj:but(brown-25, spill-28)
det(o-31, the-29)
amod(o-31, rings-30)
nsubj(spill-28, o-31)
det(Folk-35, the-33)
amod(Folk-35, Gentle-34)
dep(spill-28, Folk-35)
cc(flyte-37, And-36)
dep(Folk-35, flyte-37)
nmod:poss(kin-39, my-38)
dobj(flyte-37, kin-39)
case(Town-43, in-40)
det(Town-43, the-41)
compound(Town-43, Fairy-42)
nmod:in(flyte-37, Town-43)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (WDT what))
    (VP (MD should)
      (SBAR
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP make)
              (NP
                (NP
                  (NP
                    (NP (NNP wi) (POS '))
                    (NN blazon)
                    (CC and)
                    (NN belt))
                  (, ,)
                  (S
                    (NP (NNP Wi) (POS '))
                    (VP (VBP keep))))
                (CC and)
                (NP
                  (NP (NN tail))
                  (CC and)
                  (NP (NN seizin)
                    (CC and)
                    (NN fee)))))))
        (, ,)
        (CC And)
        (SBAR
          (WHNP (WP what))
          (SINV (MD should)
            (NP (PRP I))
            (VP
              (VP (VB do)
                (NP
                  (NP (NNP wi) (POS '))
                  (NN page)))
              (CC and)
              (VP (VB squire)
                (SBAR
                  (S
                    (NP (DT That))
                    (VP (VBP am)
                      (NP
                        (NP (DT a) (NN king))
                        (PP (IN in)
                          (NP (PRP$ my) (JJ own) (NN countrie)))))))))))))
    (. ?)))

cc(should-4, And-2)
nsubj(should-4, what-3)
root(ROOT-0, should-4)
nsubj(make-6, I-5)
dep(should-4, make-6)
nmod:poss(blazon-9, wi-7)
case(wi-7, '-8)
dobj(make-6, blazon-9)
cc(blazon-9, and-10)
dobj(make-6, belt-11)
conj:and(blazon-9, belt-11)
nsubj(keep-15, Wi-13)
case(Wi-13, '-14)
dep(blazon-9, keep-15)
cc(blazon-9, and-16)
dobj(make-6, tail-17)
conj:and(blazon-9, tail-17)
cc(tail-17, and-18)
conj:and(blazon-9, seizin-19)
conj:and(tail-17, seizin-19)
cc(seizin-19, and-20)
conj:and(tail-17, fee-21)
conj:and(seizin-19, fee-21)
cc(make-6, And-23)
dep(do-27, what-24)
aux(do-27, should-25)
nsubj(do-27, I-26)
nsubj(squire-32, I-26)
dep(should-4, do-27)
conj:and(make-6, do-27)
nmod:poss(page-30, wi-28)
case(wi-28, '-29)
dobj(do-27, page-30)
cc(do-27, and-31)
conj:and(make-6, squire-32)
conj:and(do-27, squire-32)
nsubj(king-36, That-33)
cop(king-36, am-34)
det(king-36, a-35)
ccomp(squire-32, king-36)
case(countrie-40, in-37)
nmod:poss(countrie-40, my-38)
amod(countrie-40, own-39)
nmod:in(king-36, countrie-40)

(ROOT
  (S
    (S
      (S (`` ``) (IN For)
        (NP (PRP I))
        (VP (VBP send)
          (ADVP (RB east))))
      (CC and)
      (S
        (S
          (NP (PRP I))
          (VP (VBP send)
            (ADVP (NN west))))
        (, ,)
        (CC And)
        (S
          (NP (PRP I))
          (VP (VBP send)
            (ADVP (RB far))
            (SBAR (IN as)
              (S
                (NP (PRP$ my) (NN will))
                (VP (MD may)
                  (VP (VB flee))))))
          (, ,)))
      (PP (IN By)
        (NP
          (NP (NN dawn)
            (CC and)
            (NN dusk))
          (CC and)
          (NP (DT the) (NN drinking) (NN rain)))))
    (, ,)
    (CC And)
    (S
      (VP (VB syne)
        (NP (PRP$ my) (NNP Sendings) (NN return))
        (PP (TO to)
          (NP (PRP me)))))
    (. .)))

dep(send-4, For-2)
nsubj(send-4, I-3)
nsubj(syne-31, I-3)
root(ROOT-0, send-4)
advmod(send-4, east-5)
cc(send-4, and-6)
nsubj(send-8, I-7)
conj:and(send-4, send-8)
advmod(send-8, west-9)
cc(send-8, And-11)
nsubj(send-13, I-12)
conj:and(send-4, send-13)
conj:and(send-8, send-13)
advmod(send-13, far-14)
mark(flee-19, as-15)
nmod:poss(will-17, my-16)
nsubj(flee-19, will-17)
aux(flee-19, may-18)
advcl(send-13, flee-19)
case(dawn-22, By-21)
nmod:by(send-4, dawn-22)
cc(dawn-22, and-23)
nmod:by(send-4, dusk-24)
conj:and(dawn-22, dusk-24)
cc(dawn-22, and-25)
det(rain-28, the-26)
compound(rain-28, drinking-27)
nmod:by(send-4, rain-28)
conj:and(dawn-22, rain-28)
cc(send-4, And-30)
conj:and(send-4, syne-31)
nmod:poss(return-34, my-32)
compound(return-34, Sendings-33)
dobj(syne-31, return-34)
case(me-36, to-35)
nmod:to(syne-31, me-36)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP They))
      (VP (VBP come)
        (NP
          (NP
            (NP (NNP wi) (POS '))
            (NN news))
          (PP (IN of)
            (NP
              (NP (DT the) (NN groanin) (POS '))
              (NN earth))))))
    (PRN (, ,)
      (S
        (NP (PRP They))
        (VP (VBP come)
          (NP
            (NP
              (NP
                (NP (NNP wi) (POS '))
                (NN news) (NN o) ('' '))
              (NP
                (NP (DT the) (NN roarin) (POS '))
                (NN sea)))
            (, ,)
            (NP
              (NP
                (NP (NNP Wi) (POS '))
                (NN word))
              (PP (IN of)
                (NP (NN Spirit)
                  (CC and)
                  (NN Ghost))))
            (CC and)
            (NP (NN Flesh)))))
      (, ,))
    (CC And)
    (S
      (INTJ (UH man))
      (, ,)
      (NP (DT that))
      (VP (VBZ 's)
        (VP (VBN mazed)
          (PP (IN among)
            (NP (DT the) (CD three))))))
    (. .) ('' '')))

nsubj(come-3, They-2)
root(ROOT-0, come-3)
nmod:poss(news-6, wi-4)
case(wi-4, '-5)
dobj(come-3, news-6)
case(earth-11, of-7)
det(groanin-9, the-8)
nmod:poss(earth-11, groanin-9)
case(groanin-9, '-10)
nmod:of(news-6, earth-11)
nsubj(come-14, They-13)
dep(come-3, come-14)
nmod:poss(o-18, wi-15)
case(wi-15, '-16)
compound(o-18, news-17)
dobj(come-14, o-18)
det(roarin-21, the-20)
nmod:poss(sea-23, roarin-21)
case(roarin-21, '-22)
dep(o-18, sea-23)
nmod:poss(word-27, Wi-25)
case(Wi-25, '-26)
dobj(come-14, word-27)
conj:and(o-18, word-27)
case(Spirit-29, of-28)
nmod:of(word-27, Spirit-29)
cc(Spirit-29, and-30)
nmod:of(word-27, Ghost-31)
conj:and(Spirit-29, Ghost-31)
cc(o-18, and-32)
dobj(come-14, Flesh-33)
conj:and(o-18, Flesh-33)
cc(come-3, And-35)
discourse(mazed-40, man-36)
nsubjpass(mazed-40, that-38)
auxpass(mazed-40, 's-39)
conj:and(come-3, mazed-40)
case(three-43, among-41)
det(three-43, the-42)
nmod:among(mazed-40, three-43)

(ROOT
  (FRAG
    (NP (DT The) (NNP King))
    (SBAR
      (S
        (NP (PRP he))
        (VP (VBD bit)
          (NP
            (NP (PRP$ his) (NN nether) (NN lip))
            (, ,)
            (SBAR (CC And)
              (S
                (VP (VBP smote)
                  (NP (PRP$ his) (NN hand))
                  (PP (IN upon)
                    (NP (PRP$ his) (NN knee))))))))))
    (: :) (`` ``)
    (S
      (PP (IN By)
        (NP
          (NP (DT the) (NN faith) (NN o) (POS '))
          (NP
            (NP (PRP$ my) (NN soul))
            (, ,)
            (NP (NNP True) (NNP Thomas))
            (, ,) ('' ''))))
      (NP (PRP he))
      (VP (VBD said) (, ,) (`` ``)
        (S
          (NP (PRP Ye))
          (VP (VB waste)
            (NP (DT no) (NN wit))
            (PP (IN in)
              (NP (NN courtesie)))))))
    (. !)))

det(King-2, The-1)
root(ROOT-0, King-2)
nsubj(bit-4, he-3)
dep(King-2, bit-4)
nmod:poss(lip-7, his-5)
compound(lip-7, nether-6)
dobj(bit-4, lip-7)
cc(smote-10, And-9)
dep(lip-7, smote-10)
nmod:poss(hand-12, his-11)
dobj(smote-10, hand-12)
case(knee-15, upon-13)
nmod:poss(knee-15, his-14)
nmod:upon(smote-10, knee-15)
case(o-21, By-18)
det(o-21, the-19)
compound(o-21, faith-20)
nmod:'(said-31, o-21)
case(o-21, '-22)
nmod:poss(soul-24, my-23)
dep(o-21, soul-24)
compound(Thomas-27, True-26)
appos(soul-24, Thomas-27)
nsubj(said-31, he-30)
dep(King-2, said-31)
nsubj(waste-35, Ye-34)
ccomp(said-31, waste-35)
neg(wit-37, no-36)
dobj(waste-35, wit-37)
case(courtesie-39, in-38)
nmod:in(waste-35, courtesie-39)

(ROOT
  (SQ (`` ``)
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBP desire))))
    (PRN (, ,)
      (S
        (VP (VBG unto)
          (NP (PRP$ my) (NN pride))))
      (, ,))
    (MD Can)
    (NP (PRP I))
    (VP (VB make)
      (NP (NNS Earls))
      (PP (IN by)
        (NP (CD three)
          (CC and)
          (CD three)))
      (, ,)
      (SBAR
        (S
          (S
            (VP (TO To)
              (VP
                (VP (VB run)
                  (ADVP (RB before)))
                (CC and)
                (VP (VB ride)
                  (PRT (RP behind))))))
          (CC And)
          (S
            (VP (VB serve)
              (NP
                (NP (DT the) (NNS sons) (NN o) (POS '))
                (JJ my) (NN body)))))))
    (. .) ('' '')))

mark(desire-4, As-2)
nsubj(desire-4, I-3)
advcl(make-12, desire-4)
parataxis(make-12, unto-6)
nmod:poss(pride-8, my-7)
dobj(unto-6, pride-8)
aux(make-12, Can-10)
nsubj(make-12, I-11)
root(ROOT-0, make-12)
dobj(make-12, Earls-13)
case(three-15, by-14)
nmod:by(make-12, three-15)
cc(three-15, and-16)
nmod:by(make-12, three-17)
conj:and(three-15, three-17)
mark(run-20, To-19)
dep(make-12, run-20)
advmod(run-20, before-21)
cc(run-20, and-22)
dep(make-12, ride-23)
conj:and(run-20, ride-23)
compound:prt(ride-23, behind-24)
cc(run-20, And-25)
dep(make-12, serve-26)
conj:and(run-20, serve-26)
det(o-29, the-27)
compound(o-29, sons-28)
nmod:poss(body-32, o-29)
case(o-29, '-30)
amod(body-32, my-31)
dobj(serve-26, body-32)

(ROOT
  (S (`` ``)
    (S (CC And)
      (NP (WDT what))
      (VP (VBP care)
        (NP (PRP I))
        (PP (IN for)
          (NP (PRP$ your) (JJ row-foot) (NNS earls)))))
    (, ,)
    (CC Or)
    (S
      (NP (PDT all) (DT the) (NNS sons))
      (VP (VBP o) (`` ')
        (NP (PRP$ your) (NN body))))
    (. ?)))

cc(care-4, And-2)
nsubj(care-4, what-3)
root(ROOT-0, care-4)
dobj(care-4, I-5)
case(earls-9, for-6)
nmod:poss(earls-9, your-7)
amod(earls-9, row-foot-8)
nmod:for(care-4, earls-9)
cc(care-4, Or-11)
det:predet(sons-14, all-12)
det(sons-14, the-13)
nsubj(o-15, sons-14)
conj:or(care-4, o-15)
nmod:poss(body-18, your-17)
dobj(o-15, body-18)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (PRP they))
        (VP (VBP win)
          (PP (TO to)
            (NP
              (NP (DT the) (NNP Pride) (NN o) (POS '))
              (NN Name))))))
    (, ,)
    (NP (PRP I))
    (VP (VBD trow)
      (S
        (NP (PRP they))
        (RB all)
        (VP (VB ask)
          (VP (VB leave)
            (NP
              (NP (NNP o) (POS '))
              (NX (FW me)))))))
    (. .)))

mark(win-3, Before-1)
nsubj(win-3, they-2)
advcl(trow-12, win-3)
case(Name-9, to-4)
det(o-7, the-5)
compound(o-7, Pride-6)
nmod:poss(Name-9, o-7)
case(o-7, '-8)
nmod:to(win-3, Name-9)
nsubj(trow-12, I-11)
root(ROOT-0, trow-12)
nsubj(ask-15, they-13)
advmod(ask-15, all-14)
ccomp(trow-12, ask-15)
xcomp(ask-15, leave-16)
nmod:poss(me-19, o-17)
case(o-17, '-18)
dobj(leave-16, me-19)

(ROOT
  (S
    (S (`` ``) (IN For)
      (NP (PRP I))
      (VP (VBP make)
        (NP
          (NP (NNP Honour) (NNP wi) (POS '))
          (JJ muckle) (NN mouth))
        (, ,)
        (SBAR (IN As)
          (S
            (NP (PRP I))
            (VP (VBP make)
              (NP
                (NP
                  (NP (NNP Shame) (NNP wi) (POS '))
                  (NN mincin) (POS '))
                (NNS feet))
              (, ,)
              (S
                (VP (TO To)
                  (VP (VB sing)
                    (ADVP (RB wi))
                    ('' ')
                    (NP (DT the) (NNS priests))
                    (PP (IN at)
                      (NP (DT the) (NNS market-cross)))))))))))
    (, ,)
    (CC Or)
    (S
      (NP (NN run))
      (VP (VBP wi) ('' ')
        (NP (DT the) (NNS dogs))
        (PP (IN in)
          (NP (DT the) (JJ naked) (NN street)))))
    (. .)))

dep(make-4, For-2)
nsubj(make-4, I-3)
root(ROOT-0, make-4)
compound(wi-6, Honour-5)
nmod:poss(mouth-9, wi-6)
case(wi-6, '-7)
amod(mouth-9, muckle-8)
dobj(make-4, mouth-9)
mark(make-13, As-11)
nsubj(make-13, I-12)
advcl(make-4, make-13)
compound(wi-15, Shame-14)
nmod:poss(mincin-17, wi-15)
case(wi-15, '-16)
nmod:poss(feet-19, mincin-17)
case(mincin-17, '-18)
dobj(make-13, feet-19)
mark(sing-22, To-21)
advcl(make-13, sing-22)
advmod(sing-22, wi-23)
det(priests-26, the-25)
dobj(sing-22, priests-26)
case(market-cross-29, at-27)
det(market-cross-29, the-28)
nmod:at(sing-22, market-cross-29)
cc(make-4, Or-31)
nsubj(wi-33, run-32)
conj:or(make-4, wi-33)
det(dogs-36, the-35)
dobj(wi-33, dogs-36)
case(street-40, in-37)
det(street-40, the-38)
amod(street-40, naked-39)
nmod:in(wi-33, street-40)

(ROOT
  (S (`` ``)
    (S (CC And)
      (NP (DT some) (PRP they))
      (VP (VBP give)
        (NP (PRP me))
        (NP (DT the) (JJ good) (JJ red) (NN gold))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (DT some) (PRP they))
        (VP (VBP give)
          (NP (PRP me))
          (NP (DT the) (JJ white) (NN money))))
      (, ,)
      (CC And)
      (S
        (NP (DT some) (PRP they))
        (VP (VBP give)
          (NP (PRP me))
          (NP
            (NP (DT a) (NN clout) (NN o) (POS '))
            (NN meal))))
      (, ,)
      (PP (IN For)
        (S
          (NP (PRP they))
          (VP (VB be)
            (S
              (NP (NNS people))
              (NP
                (NP (NNP o) (POS '))
                (JJ low) (NN degree)))))))
    (. .)))

cc(give-5, And-2)
det(they-4, some-3)
nsubj(give-5, they-4)
root(ROOT-0, give-5)
iobj(give-5, me-6)
det(gold-10, the-7)
amod(gold-10, good-8)
amod(gold-10, red-9)
dobj(give-5, gold-10)
cc(give-5, And-12)
det(they-14, some-13)
nsubj(give-15, they-14)
conj:and(give-5, give-15)
iobj(give-15, me-16)
det(money-19, the-17)
amod(money-19, white-18)
dobj(give-15, money-19)
cc(give-15, And-21)
det(they-23, some-22)
nsubj(give-24, they-23)
conj:and(give-5, give-24)
conj:and(give-15, give-24)
iobj(give-24, me-25)
det(o-28, a-26)
compound(o-28, clout-27)
nmod:poss(meal-30, o-28)
case(o-28, '-29)
dobj(give-24, meal-30)
mark(be-34, For-32)
nsubj(be-34, they-33)
advcl(give-15, be-34)
nsubj(degree-39, people-35)
nmod:poss(degree-39, o-36)
case(o-36, '-37)
amod(degree-39, low-38)
xcomp(be-34, degree-39)

(ROOT
  (S (`` ``)
    (S (CC And)
      (NP
        (NP (DT the) (NN song))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP sing)
              (PP (IN for)
                (NP
                  (NP (DT the) (JJ counted) (NN gold))
                  (NP (DT The) (JJ same) (NN I))))))))
      (VP (VBP sing)
        (PP (IN for)
          (NP (DT the) (JJ white) (NN money)))))
    (, ,)
    (CC But)
    (S
      (ADVP (RB best))
      (NP (PRP I))
      (VP (VBP sing)
        (PP (IN for)
          (NP
            (NP (DT the) (NN clout) (NN o) (POS '))
            (NN meal)))
        (NP
          (NP (DT That) (JJ simple) (NNS people))
          (VP (VBN given)
            (NP (PRP me))))))
    (. .) ('' '')))

cc(sing-14, And-2)
det(song-4, the-3)
nsubj(sing-14, song-4)
nsubj(sing-6, I-5)
acl:relcl(song-4, sing-6)
case(gold-10, for-7)
det(gold-10, the-8)
amod(gold-10, counted-9)
nmod:for(sing-6, gold-10)
det(I-13, The-11)
amod(I-13, same-12)
dep(gold-10, I-13)
root(ROOT-0, sing-14)
case(money-18, for-15)
det(money-18, the-16)
amod(money-18, white-17)
nmod:for(sing-14, money-18)
cc(sing-14, But-20)
advmod(sing-23, best-21)
nsubj(sing-23, I-22)
conj:but(sing-14, sing-23)
case(meal-29, for-24)
det(o-27, the-25)
compound(o-27, clout-26)
nmod:poss(meal-29, o-27)
case(o-27, '-28)
nmod:for(sing-23, meal-29)
det(people-32, That-30)
amod(people-32, simple-31)
dobj(sing-23, people-32)
acl(people-32, given-33)
dobj(given-33, me-34)

(ROOT
  (S
    (NP (DT The) (NNP King))
    (VP (VBD cast)
      (PRT (RP down))
      (NP (DT a) (JJ silver) (NN groat)))
    (PRN (, ,)
      (S
        (NP (DT A) (NN silver))
        (VP (VBP groat)
          (NP
            (NP (NNP o) (POS '))
            (NNP Scots) (NN money))))
      (, ,))
    (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP come)
          (SBAR
            (S
              (NP
                (NP (NNP wi) (POS '))
                (NP (DT a) (JJ poor) (NN man) (POS 's))
                (NNP dole))
              (PRN (, ,) ('' '')
                (S
                  (NP (PRP he))
                  (VP (VBD said) (, ,) (`` ``)
                    (INTJ (UH True) (UH Thomas))))
                (, ,))
              (VP (MD will)
                (VP (VB ye)
                  (NP (NN harp))
                  (PP (TO to)
                    (NP (PRP me))))))))))
    (. ?) ('' '')))

det(King-2, The-1)
nsubj(cast-3, King-2)
root(ROOT-0, cast-3)
compound:prt(cast-3, down-4)
det(groat-7, a-5)
amod(groat-7, silver-6)
dobj(cast-3, groat-7)
det(silver-10, A-9)
nsubj(groat-11, silver-10)
parataxis(cast-3, groat-11)
nmod:poss(money-15, o-12)
case(o-12, '-13)
compound(money-15, Scots-14)
dobj(groat-11, money-15)
mark(come-20, If-18)
nsubj(come-20, I-19)
dep(cast-3, come-20)
nmod:poss(dole-27, wi-21)
case(wi-21, '-22)
det(man-25, a-23)
amod(man-25, poor-24)
nmod:poss(dole-27, man-25)
case(man-25, 's-26)
nsubj(ye-38, dole-27)
nsubj(said-31, he-30)
parataxis(ye-38, said-31)
discourse(said-31, True-34)
dep(True-34, Thomas-35)
aux(ye-38, will-37)
ccomp(come-20, ye-38)
dobj(ye-38, harp-39)
case(me-41, to-40)
nmod:to(ye-38, me-41)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Whenas) (NNP I))
      (VP (VB harp)
        (PP (TO to)
          (NP
            (NP (DT the) (NNS children))
            (ADJP (JJ small))))))
    (, ,)
    (NP (PRP They))
    (VP (VBP press)
      (S
        (NP (PRP me))
        (VP (VB close)
          (PP (IN on)
            (NP (DT either) (NN hand))))))
    (. .)))

compound(I-3, Whenas-2)
nsubj(harp-4, I-3)
ccomp(press-11, harp-4)
case(children-7, to-5)
det(children-7, the-6)
nmod:to(harp-4, children-7)
amod(children-7, small-8)
nsubj(press-11, They-10)
root(ROOT-0, press-11)
nsubj(close-13, me-12)
ccomp(press-11, close-13)
case(hand-16, on-14)
det(hand-16, either-15)
nmod:on(close-13, hand-16)

(ROOT
  (SBARQ (CC And)
    (WHNP (WP who))
    (SQ
      (VP (VBP are))
      (NP (PRP you))
      (PRN (, ,) ('' '')
        (S
          (NP (NNP True) (NNP Thomas))
          (VP (VBD said)))
        (, ,))
      (`` ``)
      (SBAR (IN That)
        (S
          (NP (PRP you))
          (VP (MD should)
            (VP (VB ride)
              (SBAR (IN while)
                (S
                  (NP (PRP they))
                  (VP (MD must)
                    (VP (VB stand))))))))))
    (. ?)))

cc(are-3, And-1)
nsubj(are-3, who-2)
root(ROOT-0, are-3)
dep(are-3, you-4)
compound(Thomas-8, True-7)
nsubj(said-9, Thomas-8)
parataxis(are-3, said-9)
mark(ride-15, That-12)
nsubj(ride-15, you-13)
aux(ride-15, should-14)
dep(are-3, ride-15)
mark(stand-19, while-16)
nsubj(stand-19, they-17)
aux(stand-19, must-18)
advcl(ride-15, stand-19)

(ROOT
  (S (`` ``)
    (ADVP
      (NP (NNP Light))
      (RB down))
    (, ,)
    (S
      (S
        (VP (VB light)
          (PRT (RP down))
          (PP (IN from)
            (NP
              (NP (PRP$ your) (NN horse) (NN o) (POS '))
              (NN pride)))))
      (, ,)
      (NP (PRP I))
      (VP (VBD trow)
        (SBAR
          (S
            (NP (PRP ye))
            (VP (VBP talk)
              (ADJP (RB too) (JJ loud)
                (CC and)
                (JJ hie)))))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (PRP I))
        (VP (MD will)
          (VP (VB make)
            (S
              (NP (PRP you))
              (NP (DT a) (JJ triple) (NN word))))))
      (, ,)
      (CC And)
      (S
        (ADVP (RB syne))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (PRP ye))
            (VP (VBP dare))))
        (, ,)
        (NP (PRP ye))
        (VP (MD shall) (`` `)
          (VP (VB noble)
            (NP (PRP me))))))
    (. .) ('' '')))

dep(down-3, Light-2)
advmod(trow-15, down-3)
ccomp(trow-15, light-5)
compound:prt(light-5, down-6)
case(pride-12, from-7)
nmod:poss(o-10, your-8)
compound(o-10, horse-9)
nmod:poss(pride-12, o-10)
case(o-10, '-11)
nmod:from(light-5, pride-12)
nsubj(trow-15, I-14)
root(ROOT-0, trow-15)
nsubj(talk-17, ye-16)
ccomp(trow-15, talk-17)
advmod(loud-19, too-18)
xcomp(talk-17, loud-19)
cc(loud-19, and-20)
xcomp(talk-17, hie-21)
conj:and(loud-19, hie-21)
cc(trow-15, And-23)
nsubj(make-26, I-24)
aux(make-26, will-25)
conj:and(trow-15, make-26)
nsubj(word-30, you-27)
det(word-30, a-28)
amod(word-30, triple-29)
xcomp(make-26, word-30)
cc(make-26, And-32)
advmod(noble-42, syne-33)
mark(dare-37, if-35)
nsubj(dare-37, ye-36)
advcl(noble-42, dare-37)
nsubj(noble-42, ye-39)
aux(noble-42, shall-40)
conj:and(trow-15, noble-42)
conj:and(make-26, noble-42)
dobj(noble-42, me-43)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN lighted)
          (PRT (RP down))
          (PP (IN from)
            (NP
              (NP (PRP$ his) (NN horse) (NN o) (POS '))
              (NN pride))))))
    (, ,)
    (CC And)
    (S
      (VP (VB set)
        (NP (PRP$ his) (NN back))
        (PP (IN against)
          (NP (DT the) (NN stone)))))
    (. .)))

nsubj(lighted-3, He-1)
nsubj(set-13, He-1)
aux(lighted-3, has-2)
root(ROOT-0, lighted-3)
compound:prt(lighted-3, down-4)
case(pride-10, from-5)
nmod:poss(o-8, his-6)
compound(o-8, horse-7)
nmod:poss(pride-10, o-8)
case(o-8, '-9)
nmod:from(lighted-3, pride-10)
cc(lighted-3, And-12)
conj:and(lighted-3, set-13)
nmod:poss(back-15, his-14)
dobj(set-13, back-15)
case(stone-18, against-16)
det(stone-18, the-17)
nmod:against(set-13, stone-18)

(ROOT
  (S (`` ``)
    (S
      (NP (RB Now))
      (VP (VBP guard)
        (NP (PRP you))
        (ADVP (RB well))))
    (, ,) ('' '')
    (PRN
      (S
        (NP (NNP True) (NNP Thomas))
        (VP (VBD said))))
    (, ,) (`` ``)
    (NP (NNP Ere) (NNP I))
    (VP (VBP rax)
      (NP (PRP$ your) (NN heart))
      (PP (IN from)
        (NP (PRP$ your) (NN breast-bone))))
    (. !) ('' '')))

nsubj(guard-3, Now-2)
ccomp(rax-15, guard-3)
dobj(guard-3, you-4)
advmod(guard-3, well-5)
compound(Thomas-9, True-8)
nsubj(said-10, Thomas-9)
parataxis(rax-15, said-10)
compound(I-14, Ere-13)
nsubj(rax-15, I-14)
root(ROOT-0, rax-15)
nmod:poss(heart-17, your-16)
dobj(rax-15, heart-17)
case(breast-bone-20, from-18)
nmod:poss(breast-bone-20, your-19)
nmod:from(rax-15, breast-bone-20)

(ROOT
  (S
    (S
      (NP (NNP True) (NNP Thomas))
      (VP (VBD played)
        (PP (IN upon)
          (NP
            (NP (PRP$ his) (NN harp))
            (, ,)
            (NP (DT The) (NN fairy) (NN harp))))
        (SBAR (IN that)
          (S
            (NP (NN couldna))
            (VP (VBP lee))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT the) (JJ first) (JJS least) (NN word))
        (NP (DT the) (JJ proud) (NN King)))
      (VP (VBD heard) (, ,)
        (S
          (NP (PRP It))
          (VP (VB harpit)
            (S
              (NP (DT the) (NN salt))
              (VP (VB tear)
                (PRT (RP out))
                (NP
                  (NP (NNP o) (POS '))
                  (NP (PRP$ his) (NN ee)))))))))
    (. .)))

compound(Thomas-2, True-1)
nsubj(played-3, Thomas-2)
root(ROOT-0, played-3)
case(harp-6, upon-4)
nmod:poss(harp-6, his-5)
nmod:upon(played-3, harp-6)
det(harp-10, The-8)
compound(harp-10, fairy-9)
appos(harp-6, harp-10)
mark(lee-13, that-11)
nsubj(lee-13, couldna-12)
ccomp(played-3, lee-13)
cc(played-3, And-15)
det(word-19, the-16)
amod(word-19, first-17)
amod(word-19, least-18)
nsubj(heard-23, word-19)
det(King-22, the-20)
amod(King-22, proud-21)
dep(word-19, King-22)
conj:and(played-3, heard-23)
nsubj(harpit-26, It-25)
ccomp(heard-23, harpit-26)
det(salt-28, the-27)
nsubj(tear-29, salt-28)
ccomp(harpit-26, tear-29)
compound:prt(tear-29, out-30)
dobj(tear-29, o-31)
case(o-31, '-32)
nmod:poss(ee-34, his-33)
dep(o-31, ee-34)

(ROOT
  (S (`` ``)
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP I))
    (VP (VBP see)
      (NP (DT the) (NN love))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD lost)
            (NP (JJ long) (NN syne))
            (, ,)
            (S
              (NP (PRP I))
              (VP (VB touch)
                (NP (DT the) (NN hope))
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP (PRP I))
                      (VP (MD may) (RB not)
                        (VP (VB see)))))
                  (, ,)
                  (CC And)
                  (SBAR
                    (ADVP (DT all))
                    (IN that)
                    (S
                      (NP (PRP I))
                      (VP (VBD did)
                        (SBAR
                          (S
                            (NP
                              (NP (NNP o) (POS '))
                              (JJ hidden) (NN shame))
                            (, ,)
                            (PP (IN Like)
                              (NP (JJ little) (NNS snakes)))
                            (NP (PRP they))
                            (VP (VBZ hiss)
                              (PP (IN at)
                                (NP (PRP me))))))))))))))))
    (. .)))

discourse(see-5, Oh-2)
nsubj(see-5, I-4)
root(ROOT-0, see-5)
det(love-7, the-6)
dobj(see-5, love-7)
mark(lost-10, that-8)
nsubj(lost-10, I-9)
ccomp(see-5, lost-10)
amod(syne-12, long-11)
dobj(lost-10, syne-12)
nsubj(touch-15, I-14)
dep(lost-10, touch-15)
det(hope-17, the-16)
dobj(touch-15, hope-17)
mark(see-22, that-18)
nsubj(see-22, I-19)
aux(see-22, may-20)
neg(see-22, not-21)
ccomp(touch-15, see-22)
cc(see-22, And-24)
advmod(did-28, all-25)
mark(did-28, that-26)
nsubj(did-28, I-27)
ccomp(touch-15, did-28)
conj:and(see-22, did-28)
nmod:poss(shame-32, o-29)
case(o-29, '-30)
amod(shame-32, hidden-31)
nsubj(hiss-38, shame-32)
case(snakes-36, Like-34)
amod(snakes-36, little-35)
nmod:like(hiss-38, snakes-36)
nsubj(hiss-38, they-37)
ccomp(did-28, hiss-38)
case(me-40, at-39)
nmod:at(hiss-38, me-40)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN sun))
    (VP (VBZ is)
      (VP (VBN lost)
        (PP (IN at)
          (NP (NN noon)))
        (: --)
        (PP (IN at)
          (NP (NN noon)))))
    (. !)))

det(sun-3, The-2)
nsubjpass(lost-5, sun-3)
auxpass(lost-5, is-4)
root(ROOT-0, lost-5)
case(noon-7, at-6)
nmod:at(lost-5, noon-7)
case(noon-10, at-9)
nmod:at(lost-5, noon-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN dread) (NN o) (POS '))
      (NN doom))
    (VP (VBZ has)
      (VP (VBN grippit)
        (NP (PRP me))))
    (. .)))

det(o-3, The-1)
compound(o-3, dread-2)
nmod:poss(doom-5, o-3)
case(o-3, '-4)
nsubj(grippit-7, doom-5)
aux(grippit-7, has-6)
root(ROOT-0, grippit-7)
dobj(grippit-7, me-8)

(ROOT
  (S
    (NP (NNP True) (NNP Thomas))
    (, ,)
    (S
      (VP (VB hide)
        (NP (PRP me))
        (PP (IN under)
          (NP
            (NP (PRP$ your) (NN cloak))
            (, ,)
            (NP (NNP God) (NNP wot))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB little) (JJ fit)
        (S
          (VP (TO to)
            (VP (VB dee))))))
    (. !) ('' '')))

compound(Thomas-2, True-1)
nsubj(fit-16, Thomas-2)
nsubj:xsubj(dee-18, Thomas-2)
ccomp(fit-16, hide-4)
dobj(hide-4, me-5)
case(cloak-8, under-6)
nmod:poss(cloak-8, your-7)
nmod:under(hide-4, cloak-8)
compound(wot-11, God-10)
appos(cloak-8, wot-11)
nsubj(fit-16, I-13)
nsubj:xsubj(dee-18, I-13)
cop(fit-16, 'm-14)
advmod(fit-16, little-15)
root(ROOT-0, fit-16)
mark(dee-18, to-17)
xcomp(fit-16, dee-18)

(ROOT
  (S
    (NP (PRP 'T))
    (VP (VBD was)
      (ADJP
        (ADJP (JJ bent)
          (PP (IN beneath)))
        (CC and)
        (ADJP (JJ blue) (JJ above))
        (PRN (: --)
          (S
            (NP (PRP 'T))
            (VP (VBD was)
              (NP
                (NP (JJ open) (NN field))
                (CC and)
                (NP (VBG running) (NN flood)))))
          (: --)))
      (SBAR
        (WHADVP (WRB Where))
        (, ,)
        (S
          (NP
            (NP
              (NP (JJ hot))
              (PP (IN on)
                (NP (NN heath)
                  (CC and)
                  (NN dike))))
            (CC and)
            (NP
              (NP (NN wall))
              (, ,)
              (NP (DT The) (JJ high) (NN sun))))
          (VP (VBD warmed)
            (NP
              (NP (DT the) (NN adder) (POS 's))
              (NN brood))))))
    (. .)))

nsubj(bent-3, 'T-1)
nsubj(above-7, 'T-1)
cop(bent-3, was-2)
root(ROOT-0, bent-3)
nmod(bent-3, beneath-4)
cc(bent-3, and-5)
amod(above-7, blue-6)
conj:and(bent-3, above-7)
nsubj(field-12, 'T-9)
cop(field-12, was-10)
amod(field-12, open-11)
dep(bent-3, field-12)
cc(field-12, and-13)
amod(flood-15, running-14)
dep(bent-3, flood-15)
conj:and(field-12, flood-15)
advmod(warmed-30, Where-17)
nsubj(warmed-30, hot-19)
case(heath-21, on-20)
nmod:on(hot-19, heath-21)
cc(heath-21, and-22)
nmod:on(hot-19, dike-23)
conj:and(heath-21, dike-23)
cc(hot-19, and-24)
conj:and(hot-19, wall-25)
nsubj(warmed-30, wall-25)
det(sun-29, The-27)
amod(sun-29, high-28)
appos(wall-25, sun-29)
advcl(bent-3, warmed-30)
det(adder-32, the-31)
nmod:poss(brood-34, adder-32)
case(adder-32, 's-33)
dobj(warmed-30, brood-34)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (VBG Lie)
          (PRT (RP down))))
      (, ,)
      (S
        (VP (VB lie)
          (PRT (RP down)))))
    (, ,) ('' '')
    (NP (NNP True) (NNP Thomas))
    (VP (VBD said))
    (. .)))

ccomp(said-11, Lie-2)
compound:prt(Lie-2, down-3)
parataxis(Lie-2, lie-5)
compound:prt(lie-5, down-6)
compound(Thomas-10, True-9)
nsubj(said-11, Thomas-10)
root(ROOT-0, said-11)

(ROOT
  (S (`` ``)
    (NP (DT The) (NNP God))
    (VP (MD shall)
      (VP (VB judge)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT all))
            (VP (VBZ is)
              (VP (VBN done)))))))
    (. .)))

det(God-3, The-2)
nsubj(judge-5, God-3)
aux(judge-5, shall-4)
root(ROOT-0, judge-5)
advmod(done-9, when-6)
nsubjpass(done-9, all-7)
auxpass(done-9, is-8)
advcl(judge-5, done-9)

(ROOT
  (S
    (S (CC But)
      (NP (PRP I))
      (VP (MD will)
        (VP (VB bring)
          (NP (PRP you))
          (NP (DT a) (JJR better) (NN word)))))
    (CC And)
    (S
      (VP (VB lift)
        (NP (DT the) (NN cloud))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBD laid)
              (PRT (RP on)))))))
    (. .) ('' '')))

cc(bring-4, But-1)
nsubj(bring-4, I-2)
nsubj(lift-10, I-2)
aux(bring-4, will-3)
root(ROOT-0, bring-4)
iobj(bring-4, you-5)
det(word-8, a-6)
amod(word-8, better-7)
dobj(bring-4, word-8)
cc(bring-4, And-9)
conj:and(bring-4, lift-10)
det(cloud-12, the-11)
dobj(lift-10, cloud-12)
mark(laid-15, that-13)
nsubj(laid-15, I-14)
ccomp(lift-10, laid-15)
compound:prt(laid-15, on-16)

(ROOT
  (S
    (S
      (S
        (NP (NNP True) (NNP Thomas))
        (VP (VBD played)
          (PP (IN upon)
            (NP
              (NP (PRP$ his) (NN harp))
              (, ,)
              (NP
                (NP (DT That))
                (VP (VBN birled)
                  (CC and)
                  (VBN brattled)
                  (PP (TO to)
                    (NP (PRP$ his) (NN hand)))))))))
      (, ,)
      (CC And)
      (S
        (NP (DT the)
          (ADJP (JJ next) (JJS least))
          (NN word) (NNP True) (NNP Thomas))
        (VP (VBD made))))
    (, ,)
    (NP (PRP It))
    (VP (VBD garred)
      (SBAR
        (S
          (NP (DT the) (NNP King))
          (VP (VBP take)
            (NP (NN horse)
              (CC and)
              (NN brand))))))
    (. .)))

compound(Thomas-2, True-1)
nsubj(played-3, Thomas-2)
ccomp(garred-26, played-3)
case(harp-6, upon-4)
nmod:poss(harp-6, his-5)
nmod:upon(played-3, harp-6)
appos(harp-6, That-8)
acl(That-8, birled-9)
cc(birled-9, and-10)
acl(That-8, brattled-11)
conj:and(birled-9, brattled-11)
case(hand-14, to-12)
nmod:poss(hand-14, his-13)
nmod:to(birled-9, hand-14)
cc(played-3, And-16)
det(Thomas-22, the-17)
amod(Thomas-22, next-18)
dep(next-18, least-19)
compound(Thomas-22, word-20)
compound(Thomas-22, True-21)
nsubj(made-23, Thomas-22)
conj:and(played-3, made-23)
ccomp(garred-26, made-23)
nsubj(garred-26, It-25)
root(ROOT-0, garred-26)
det(King-28, the-27)
nsubj(take-29, King-28)
ccomp(garred-26, take-29)
dobj(take-29, horse-30)
cc(horse-30, and-31)
dobj(take-29, brand-32)
conj:and(horse-30, brand-32)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (PRP I))
      (VP (VBP hear)
        (S
          (NP (DT the) (JJ tread) (NN o) ('' '))
          (NP (DT the) (VBG fighting) (NNS men)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP see)
      (NP
        (NP (DT the) (NN sun))
        (PP (IN on)
          (NP (NN splent)
            (CC and)
            (NN spear)))))
    (. .)))

discourse(hear-5, Oh-2)
nsubj(hear-5, I-4)
ccomp(see-15, hear-5)
det(o-8, the-6)
amod(o-8, tread-7)
nsubj(men-12, o-8)
det(men-12, the-10)
amod(men-12, fighting-11)
xcomp(hear-5, men-12)
nsubj(see-15, I-14)
root(ROOT-0, see-15)
det(sun-17, the-16)
dobj(see-15, sun-17)
case(splent-19, on-18)
nmod:on(sun-17, splent-19)
cc(splent-19, and-20)
nmod:on(sun-17, spear-21)
conj:and(splent-19, spear-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mark)
      (S
        (NP (DT the) (NN arrow))
        (VP (VB outen)
          (NP
            (NP (DT the) (NN fern))
            (SBAR
              (S
                (NP (DT That))
                (VP
                  (VP (VBZ flies)
                    (ADJP (RB so) (JJ low)))
                  (CC and)
                  (VP (VBZ sings)
                    (ADJP (RB so) (JJ clear))))))))))
    (. !)))

nsubj(mark-2, I-1)
root(ROOT-0, mark-2)
det(arrow-4, the-3)
nsubj(outen-5, arrow-4)
ccomp(mark-2, outen-5)
det(fern-7, the-6)
dobj(outen-5, fern-7)
nsubj(flies-9, fern-7)
nsubj(sings-13, fern-7)
ref(fern-7, That-8)
acl:relcl(fern-7, flies-9)
advmod(low-11, so-10)
xcomp(flies-9, low-11)
cc(flies-9, and-12)
acl:relcl(fern-7, sings-13)
conj:and(flies-9, sings-13)
advmod(clear-15, so-14)
xcomp(sings-13, clear-15)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (NNP Advance))
        (UCP
          (NP
            (NP (PRP$ my) (NNS standards))
            (PP (TO to)
              (NP (DT that) (NN war))))
          (, ,)
          (CC And)
          (VP (VBN bid)
            (NP (PRP$ my) (JJ good) (NNS knights)))))
      (VP (VBP prick)
        (CC and)
        (VBP ride)))
    (: ;)
    (S
      (NP (DT The) (NN gled))
      (VP (MD shall)
        (VP (VB watch)
          (SBAR (IN as)
            (S
              (NP (JJ fierce) (DT a) (NN fight))
              (PP (IN As)
                (NP (NN e'er)))
              (VP (VBD was)
                (VP (VBN fought)
                  (PP (IN on)
                    (NP (DT the) (NNP Border) (NN side))))))))))
    (. !) ('' '')))

nsubj(prick-14, Advance-2)
nsubj(ride-16, Advance-2)
nmod:poss(standards-4, my-3)
dep(Advance-2, standards-4)
case(war-7, to-5)
det(war-7, that-6)
nmod:to(standards-4, war-7)
cc(standards-4, And-9)
acl(standards-4, bid-10)
nmod:poss(knights-13, my-11)
amod(knights-13, good-12)
dobj(bid-10, knights-13)
root(ROOT-0, prick-14)
cc(prick-14, and-15)
conj:and(prick-14, ride-16)
det(gled-19, The-18)
nsubj(watch-21, gled-19)
aux(watch-21, shall-20)
parataxis(prick-14, watch-21)
mark(fought-29, as-22)
amod(fight-25, fierce-23)
det(fight-25, a-24)
nsubjpass(fought-29, fight-25)
case(e'er-27, As-26)
nmod:as(fought-29, e'er-27)
auxpass(fought-29, was-28)
advcl(watch-21, fought-29)
case(side-33, on-30)
det(side-33, the-31)
compound(side-33, Border-32)
nmod:on(fought-29, side-33)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (ADJP
          (ADJP (JJ bent)
            (PP (IN beneath)))
          (CC and)
          (ADJP (JJ blue) (JJ above)))))
    (, ,)
    (NP (PRP 'T))
    (VP (VBD was)
      (VP (VBG nodding)
        (NP
          (NP (NN grass))
          (CC and)
          (ADVP (JJ naked) (NN sky))
          (, ,)
          (SBAR
            (WHADVP (WRB Where))
            (PRN (, ,)
              (S
                (VP (VB ringing)
                  (PRT (RP up))
                  (NP (DT the) (JJ wastrel) (NN wind))))
              (, ,))
            (S
              (NP (DT The) (NNS eyas))
              (VP (VBD stooped)
                (PP (IN upon)
                  (NP (DT the) (NN pie)))))))))
    (. .)))

nsubj(bent-3, 'T-1)
nsubj(above-7, 'T-1)
cop(bent-3, was-2)
ccomp(nodding-11, bent-3)
nmod(bent-3, beneath-4)
cc(bent-3, and-5)
amod(above-7, blue-6)
conj:and(bent-3, above-7)
ccomp(nodding-11, above-7)
nsubj(nodding-11, 'T-9)
aux(nodding-11, was-10)
root(ROOT-0, nodding-11)
dobj(nodding-11, grass-12)
cc(grass-12, and-13)
dobj(nodding-11, naked-14)
conj:and(grass-12, naked-14)
dep(naked-14, sky-15)
advmod(stooped-27, Where-17)
dep(stooped-27, ringing-19)
compound:prt(ringing-19, up-20)
det(wind-23, the-21)
amod(wind-23, wastrel-22)
dobj(ringing-19, wind-23)
det(eyas-26, The-25)
nsubj(stooped-27, eyas-26)
dep(naked-14, stooped-27)
case(pie-30, upon-28)
det(pie-30, the-29)
nmod:upon(stooped-27, pie-30)

(ROOT
  (S
    (S
      (NP (NNP True) (NNP Thomas))
      (VP (VBD sighed)
        (PP (IN above)
          (NP (PRP$ his) (NN harp)))))
    (, ,)
    (CC And)
    (S
      (VP (VBN turned)
        (NP
          (NP (DT the) (NN song))
          (PP (IN on)
            (NP (DT the) (JJ midmost) (NN string))))))
    (: ;)
    (S (CC And)
      (NP (DT the)
        (ADJP (JJ last) (JJS least))
        (NN word) (NNP True) (NNP Thomas))
      (VP (VBD made) (, ,)
        (S
          (NP (PRP He))
          (VP (VB harpit)
            (NP (PRP$ his) (JJ dead) (NN youth))
            (ADVP (RB back))
            (PP (TO to)
              (NP (DT the) (NNP King)))))))
    (. .)))

compound(Thomas-2, True-1)
nsubj(sighed-3, Thomas-2)
nsubj(turned-9, Thomas-2)
root(ROOT-0, sighed-3)
case(harp-6, above-4)
nmod:poss(harp-6, his-5)
nmod:above(sighed-3, harp-6)
cc(sighed-3, And-8)
conj:and(sighed-3, turned-9)
det(song-11, the-10)
dobj(turned-9, song-11)
case(string-15, on-12)
det(string-15, the-13)
amod(string-15, midmost-14)
nmod:on(song-11, string-15)
cc(made-24, And-17)
det(Thomas-23, the-18)
amod(Thomas-23, last-19)
dep(last-19, least-20)
compound(Thomas-23, word-21)
compound(Thomas-23, True-22)
nsubj(made-24, Thomas-23)
conj:and(sighed-3, made-24)
nsubj(harpit-27, He-26)
ccomp(made-24, harpit-27)
nmod:poss(youth-30, his-28)
amod(youth-30, dead-29)
dobj(harpit-27, youth-30)
advmod(harpit-27, back-31)
case(King-34, to-32)
det(King-34, the-33)
nmod:to(harpit-27, King-34)

(ROOT
  (S (`` ``)
    (S
      (S
        (ADVP (RB Now))
        (NP (PRP I))
        (VP (VBP am)
          (NP (NN prince))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP do)
          (ADVP (RB well))
          (S
            (VP (TO To)
              (VP (VB love)
                (NP
                  (NP (PRP$ my) (NN love) (NN withouten) (NN fear))
                  (: ;)
                  (S
                    (VP (TO To)
                      (VP (VB walk)
                        (NP
                          (NP
                            (NP (NNP wi) (POS '))
                            (NN man))
                          (PP (IN in)
                            (NP (NN fellowship))))))))))))))
    (, ,)
    (CC And)
    (S
      (VP (VB breathe)
        (NP (PRP$ my) (NN horse))
        (PP (IN behind)
          (NP (DT the) (NNS deer)))))
    (. .)))

advmod(prince-5, Now-2)
nsubj(prince-5, I-3)
nsubj(breathe-27, I-3)
cop(prince-5, am-4)
root(ROOT-0, prince-5)
cc(prince-5, and-7)
nsubj(do-9, I-8)
nsubj:xsubj(love-12, I-8)
conj:and(prince-5, do-9)
advmod(do-9, well-10)
mark(love-12, To-11)
xcomp(do-9, love-12)
nmod:poss(fear-16, my-13)
compound(fear-16, love-14)
compound(fear-16, withouten-15)
dobj(love-12, fear-16)
mark(walk-19, To-18)
acl(fear-16, walk-19)
nmod:poss(man-22, wi-20)
case(wi-20, '-21)
dobj(walk-19, man-22)
case(fellowship-24, in-23)
nmod:in(man-22, fellowship-24)
cc(prince-5, And-26)
conj:and(prince-5, breathe-27)
nmod:poss(horse-29, my-28)
dobj(breathe-27, horse-29)
case(deer-32, behind-30)
det(deer-32, the-31)
nmod:behind(breathe-27, deer-32)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ My))
      (VP (VBZ hounds)
        (S
          (NP (PRP they))
          (NP
            (NP (NN bay) (NN unto))
            (NP (DT the) (NN death))))))
    (, ,)
    (NP (DT The) (NN buck))
    (VP (VBZ has)
      (VP (VBN couched)
        (PP (IN beyond)
          (NP
            (NP (DT the) (NN burn))
            (, ,)
            (NP
              (NP (PRP$ My) (NN love))
              (SBAR
                (S
                  (NP (PRP she))
                  (VP (VBZ waits)
                    (PP (IN at)
                      (NP (PRP$ her) (NN window)
                        (S
                          (VP (TO To)
                            (VP (VB wash)
                              (NP (PRP$ my) (NNS hands))
                              (SBAR
                                (WHADVP (WRB when))
                                (S
                                  (NP (PRP I))
                                  (VP (VBP return)))))))))))))))))
    (. .)))

nsubj(hounds-3, My-2)
ccomp(couched-13, hounds-3)
nsubj(unto-6, they-4)
compound(unto-6, bay-5)
xcomp(hounds-3, unto-6)
det(death-8, the-7)
dep(unto-6, death-8)
det(buck-11, The-10)
nsubj(couched-13, buck-11)
aux(couched-13, has-12)
root(ROOT-0, couched-13)
case(burn-16, beyond-14)
det(burn-16, the-15)
nmod:beyond(couched-13, burn-16)
nmod:poss(love-19, My-18)
appos(burn-16, love-19)
nsubj(waits-21, she-20)
acl:relcl(love-19, waits-21)
case(window-24, at-22)
nmod:poss(window-24, her-23)
nmod:at(waits-21, window-24)
mark(wash-26, To-25)
acl(window-24, wash-26)
nmod:poss(hands-28, my-27)
dobj(wash-26, hands-28)
advmod(return-31, when-29)
nsubj(return-31, I-30)
advcl(wash-26, return-31)

(ROOT
  (S (`` ``)
    (PP (IN For)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP live)))))
    (VP (VBP am)
      (NP
        (NP (PRP I))
        (NP (NNP content) (-LRB- -LRB-) (NNP Oh))))
    (. !)))

mark(live-5, For-2)
mark(live-5, that-3)
nsubj(live-5, I-4)
advcl(I-7, live-5)
cop(I-7, am-6)
root(ROOT-0, I-7)
compound(Oh-10, content-8)
dep(I-7, Oh-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN seen)
          (PRN
            (S
              (NP (PRP$ my) (JJ true) (NN love))
              (VP (VBZ 's)
                (NP (NNS eyes))))
            (-RRB- -RRB-))
          (S
            (VP (TO To)
              (VP (VB stand)
                (NP
                  (NP
                    (NP (NNP wi) (POS '))
                    (NNP Adam))
                  (PP (IN in)
                    (NP (NNP Eden-glade))))))))))
    (, ,)
    (CC And)
    (S
      (VP (VBN run)
        (PP (IN in)
          (NP
            (NP (DT the) (NNS woods) (NN o) (POS '))
            (NNP Paradise)))))
    (. !) ('' '')))

nsubj(seen-3, I-1)
nsubj:xsubj(stand-11, I-1)
nsubj(run-19, I-1)
aux(seen-3, have-2)
root(ROOT-0, seen-3)
nmod:poss(love-6, my-4)
amod(love-6, true-5)
nsubj(eyes-8, love-6)
cop(eyes-8, 's-7)
parataxis(seen-3, eyes-8)
mark(stand-11, To-10)
xcomp(seen-3, stand-11)
nmod:poss(Adam-14, wi-12)
case(wi-12, '-13)
dobj(stand-11, Adam-14)
case(Eden-glade-16, in-15)
nmod:in(Adam-14, Eden-glade-16)
cc(seen-3, And-18)
conj:and(seen-3, run-19)
case(Paradise-25, in-20)
det(o-23, the-21)
compound(o-23, woods-22)
nmod:poss(Paradise-25, o-23)
case(o-23, '-24)
nmod:in(run-19, Paradise-25)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (UCP
          (ADVP (JJ naked) (NN sky))
          (CC and)
          (VP (VBG nodding)
            (NP (NN grass))))))
    (, ,)
    (NP (PRP 'T))
    (VP (VBD was)
      (VP (VBG running)
        (NP
          (NP (NN flood)
            (CC and)
            (NN wastrel) (NN wind))
          (, ,)
          (SBAR
            (WHADVP (WRB Where))
            (PRN (, ,)
              (S
                (VP (VBN checked)
                  (PP (IN against)
                    (NP (DT the) (JJ open) (NN pass)))))
              (, ,))
            (S
              (NP (DT The) (JJ red) (NNS deer))
              (VP (VBD belled)
                (S
                  (VP (TO to)
                    (VP (VB call)
                      (NP (DT the) (NN hind)))))))))))
    (. .)))

nsubj(was-2, 'T-1)
ccomp(running-11, was-2)
advmod(and-5, naked-3)
dep(naked-3, sky-4)
advmod(was-2, and-5)
conj(and-5, nodding-6)
dobj(nodding-6, grass-7)
nsubj(running-11, 'T-9)
aux(running-11, was-10)
root(ROOT-0, running-11)
compound(wind-15, flood-12)
cc(flood-12, and-13)
conj:and(flood-12, wastrel-14)
compound(wind-15, wastrel-14)
dobj(running-11, wind-15)
advmod(belled-28, Where-17)
dep(belled-28, checked-19)
case(pass-23, against-20)
det(pass-23, the-21)
amod(pass-23, open-22)
nmod:against(checked-19, pass-23)
det(deer-27, The-25)
amod(deer-27, red-26)
nsubj(belled-28, deer-27)
nsubj:xsubj(call-30, deer-27)
acl:relcl(wind-15, belled-28)
mark(call-30, to-29)
xcomp(belled-28, call-30)
det(hind-32, the-31)
dobj(call-30, hind-32)

(ROOT
  (S
    (S
      (NP (NNP True) (NNP Thomas))
      (VP (VBD laid)
        (NP (PRP$ his) (NN harp))
        (ADVP (RB away))))
    (, ,)
    (CC And)
    (S
      (VP (VBN louted)
        (S
          (ADJP (JJ low)))
        (PP (IN at)
          (NP (DT the) (NN saddle-side)))))
    (: ;)
    (S
      (NP (PRP He))
      (VP (VBZ has)
        (VP (VBN taken)
          (UCP
            (NP
              (NP (NN stirrup))
              (CC and)
              (NP (NN hauden) (NN rein)))
            (, ,)
            (CC And)
            (VP (VBN set)
              (NP
                (NP (DT the) (NNP King))
                (PP (IN on)
                  (NP
                    (NP (PRP$ his) (NN horse) (NN o) (POS '))
                    (NN pride)))))))))
    (. .)))

compound(Thomas-2, True-1)
nsubj(laid-3, Thomas-2)
nsubj(louted-9, Thomas-2)
root(ROOT-0, laid-3)
nmod:poss(harp-5, his-4)
dobj(laid-3, harp-5)
advmod(laid-3, away-6)
cc(laid-3, And-8)
conj:and(laid-3, louted-9)
xcomp(louted-9, low-10)
case(saddle-side-13, at-11)
det(saddle-side-13, the-12)
nmod:at(louted-9, saddle-side-13)
nsubj(taken-17, He-15)
aux(taken-17, has-16)
conj:and(laid-3, taken-17)
dobj(taken-17, stirrup-18)
cc(stirrup-18, and-19)
compound(rein-21, hauden-20)
dobj(taken-17, rein-21)
conj:and(stirrup-18, rein-21)
cc(stirrup-18, And-23)
acl(stirrup-18, set-24)
det(King-26, the-25)
dobj(set-24, King-26)
case(pride-32, on-27)
nmod:poss(o-30, his-28)
compound(o-30, horse-29)
nmod:poss(pride-32, o-30)
case(o-30, '-31)
nmod:on(King-26, pride-32)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Sleep))
      (VP (VBP ye)
        (CC or)
        (VBP wake)))
    (, ,) ('' '')
    (NP (NNP True) (NNP Thomas))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (NP (DT That))
        (VP (VBP sit)
          (ADVP (RB so))
          (ADVP (RB still))
          (, ,)
          (SBAR (IN that)
            (S
              (S
                (VP (VB muse)
                  (ADVP (RB so) (RB long)))
                (: ;))
              (VP (VBP Sleep)
                (NP (NN ye)
                  (CC or)
                  (NN wake))))))))
    (. ?)))

nsubj(ye-3, Sleep-2)
nsubj(wake-5, Sleep-2)
ccomp(said-10, ye-3)
cc(ye-3, or-4)
conj:or(ye-3, wake-5)
ccomp(said-10, wake-5)
compound(Thomas-9, True-8)
nsubj(said-10, Thomas-9)
root(ROOT-0, said-10)
nsubj(sit-14, That-13)
ccomp(said-10, sit-14)
advmod(sit-14, so-15)
advmod(sit-14, still-16)
mark(Sleep-23, that-18)
csubj(Sleep-23, muse-19)
advmod(long-21, so-20)
advmod(muse-19, long-21)
ccomp(sit-14, Sleep-23)
dobj(Sleep-23, ye-24)
cc(ye-24, or-25)
dobj(Sleep-23, wake-26)
conj:or(ye-24, wake-26)

(ROOT
  (S (: --)
    (PP (IN till)
      (NP (DT the) (JJ latter) (NN sleep)))
    (NP (PRP I))
    (VP (VBD trow)
      (SBAR
        (S
          (NP (PRP ye))
          (VP (MD 'll) (RB not)
            (VP (VB forget)
              (NP (PRP$ my) (NN song)))))))
    (. .)))

case(sleep-5, till-2)
det(sleep-5, the-3)
amod(sleep-5, latter-4)
nmod:till(trow-7, sleep-5)
nsubj(trow-7, I-6)
root(ROOT-0, trow-7)
nsubj(forget-11, ye-8)
aux(forget-11, 'll-9)
neg(forget-11, not-10)
ccomp(trow-7, forget-11)
nmod:poss(song-13, my-12)
dobj(forget-11, song-13)

(ROOT
  (SINV (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP ha)))
    ('' ')
    (VP (VBP harpit)
      (NP (DT a) (NN shadow))
      (PP (IN out)
        (NP (NNP o) (POS '))))
    (NP (DT the) (NN sun)
      (S
        (VP (TO To)
          (VP (VB stand)
            (PP (IN before)
              (NP
                (NP (PRP$ your) (NN face)
                  (CC and)
                  (NN cry))
                (: ;)
                (NP
                  (NP
                    (NP
                      (NP (NNP I) (NNP ha) (POS '))
                      (JJ armed)
                      (UCP
                        (NP
                          (NP (DT the) (NN earth))
                          (PP (IN beneath)
                            (NP (PRP$ your) (NN heel))))
                        (, ,)
                        (CC And)
                        (PP (IN over)
                          (NP (PRP$ your) (NN head) (NN I))))
                      (NN ha) (POS '))
                    (NN dusked))
                  (NP (DT the) (NN sky)))))))))
    (. .)))

nsubj(ha-3, I-2)
ccomp(harpit-5, ha-3)
root(ROOT-0, harpit-5)
det(shadow-7, a-6)
dobj(harpit-5, shadow-7)
case(o-9, out-8)
nmod:'(harpit-5, o-9)
case(o-9, '-10)
det(sun-12, the-11)
nsubj(harpit-5, sun-12)
mark(stand-14, To-13)
acl(sun-12, stand-14)
case(face-17, before-15)
nmod:poss(face-17, your-16)
nmod:before(stand-14, face-17)
cc(face-17, and-18)
nmod:before(stand-14, cry-19)
conj:and(face-17, cry-19)
compound(ha-22, I-21)
nmod:poss(ha-36, ha-22)
case(ha-22, '-23)
amod(ha-36, armed-24)
det(earth-26, the-25)
compound(ha-36, earth-26)
case(heel-29, beneath-27)
nmod:poss(heel-29, your-28)
nmod:beneath(earth-26, heel-29)
cc(earth-26, And-31)
case(I-35, over-32)
nmod:poss(I-35, your-33)
compound(I-35, head-34)
conj:and(earth-26, I-35)
compound(ha-36, I-35)
nmod:poss(dusked-38, ha-36)
case(ha-36, '-37)
dep(face-17, dusked-38)
det(sky-40, the-39)
dep(dusked-38, sky-40)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP ha) ('' ')
        (NP (JJ harpit) (NNS ye))
        (ADVP (RB up)
          (PP (TO to)
            (NP
              (NP (DT the) (NN throne) (NN o) (POS '))
              (NNP God))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP ha)
      (S
        (NP (POS '))
        (VP (VB harpit)
          (NP
            (NP (PRP$ your) (JJ midmost) (NN soul))
            (PP (IN in)
              (NP (CD three)))
            (PRN (: ;)
              (S
                (S
                  (NP (PRP I))
                  (VP (VBP ha) ('' ')
                    (NP (JJ harpit) (NNS ye))
                    (ADVP (RB down)
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NNP Hinges) (NN o) (POS '))
                          (NN Hell))))))
                (, ,)
                (CC And)
                (S
                  (NP
                    (PRN (: --)
                      (NP (PRP ye))
                      (: --)))
                  (VP (MD would) (: --)
                    (VP (VB make)))))
              (: --))
            (NP
              (NP (DT a) (NNP Knight) (NN o) (POS '))
              (NX (FW me)))))))
    (. !) ('' '')))

nsubj(ha-3, I-2)
ccomp(ha-16, ha-3)
amod(ye-6, harpit-5)
dobj(ha-3, ye-6)
advmod(ha-3, up-7)
case(God-13, to-8)
det(o-11, the-9)
compound(o-11, throne-10)
nmod:poss(God-13, o-11)
case(o-11, '-12)
nmod:to(up-7, God-13)
nsubj(ha-16, I-15)
root(ROOT-0, ha-16)
nsubj(harpit-18, '-17)
ccomp(ha-16, harpit-18)
nmod:poss(soul-21, your-19)
amod(soul-21, midmost-20)
dobj(harpit-18, soul-21)
case(three-23, in-22)
nmod:in(soul-21, three-23)
nsubj(ha-26, I-25)
dep(soul-21, ha-26)
amod(ye-29, harpit-28)
dobj(ha-26, ye-29)
advmod(ha-26, down-30)
case(Hell-36, to-31)
det(o-34, the-32)
compound(o-34, Hinges-33)
nmod:poss(Hell-36, o-34)
case(o-34, '-35)
nmod:to(down-30, Hell-36)
cc(ha-26, And-38)
nsubj(make-44, ye-40)
aux(make-44, would-42)
dep(soul-21, make-44)
conj:And(ha-26, make-44)
det(o-48, a-46)
compound(o-48, Knight-47)
nmod:poss(me-50, o-48)
case(o-48, '-49)
dep(soul-21, me-50)

(ROOT
  (S
    (PP (IN IN)
      (NP (DT THE) (NNP NEOLITHIC) (NNP AGE)))
    (S
      (PP (IN In)
        (NP (DT the) (NNP Neolithic) (NNP Age)))
      (NP (JJ savage) (NN warfare))
      (VP (VBD did)
        (SBAR
          (S
            (NP (PRP I))
            (PP
              (NP (NN wage))
              (IN For)
              (NP
                (NP
                  (NP (NN food))
                  (CC and)
                  (NN fame)
                  (CC and)
                  (NP (JJ woolly) (NNS horses))
                  (POS '))
                (NN pelt)))
            (: ;)
            (NP (PRP I))
            (VP (VBD was)
              (NP (NN singer))
              (PP (TO to)
                (NP
                  (NP (PRP$ my) (NN clan))
                  (PP (IN in)
                    (NP (DT that) (NN dim)))))
              (, ,)
              (NP
                (NP (JJ red) (NN Dawn))
                (PP (IN of)
                  (NP (NN Man)))))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP I))
      (VP
        (VP (VBD sang)
          (PP (IN of)
            (NP
              (NP (DT all))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP
                    (VP (VBD fought))
                    (CC and)
                    (VP (VBD feared))))))))
        (CC and)
        (VP (VBD felt))))
    (. .)))

case(AGE-4, IN-1)
det(AGE-4, THE-2)
compound(AGE-4, NEOLITHIC-3)
nmod:in(did-11, AGE-4)
case(Age-8, In-5)
det(Age-8, the-6)
compound(Age-8, Neolithic-7)
nmod:in(did-11, Age-8)
amod(warfare-10, savage-9)
nsubj(did-11, warfare-10)
root(ROOT-0, did-11)
nsubj(singer-26, I-12)
nmod:for(singer-26, wage-13)
case(wage-13, For-14)
nmod:poss(pelt-22, food-15)
cc(food-15, and-16)
conj:and(food-15, fame-17)
nmod:poss(pelt-22, fame-17)
cc(food-15, and-18)
amod(horses-20, woolly-19)
conj:and(food-15, horses-20)
nmod:poss(pelt-22, horses-20)
case(food-15, '-21)
dep(wage-13, pelt-22)
nsubj(singer-26, I-24)
cop(singer-26, was-25)
ccomp(did-11, singer-26)
case(clan-29, to-27)
nmod:poss(clan-29, my-28)
nmod:to(singer-26, clan-29)
case(dim-32, in-30)
det(dim-32, that-31)
nmod:in(clan-29, dim-32)
amod(Dawn-35, red-34)
dep(singer-26, Dawn-35)
case(Man-37, of-36)
nmod:of(Dawn-35, Man-37)
cc(did-11, And-39)
nsubj(sang-41, I-40)
nsubj(felt-49, I-40)
conj:and(did-11, sang-41)
case(all-43, of-42)
nmod:of(sang-41, all-43)
nsubj(fought-45, we-44)
nsubj(feared-47, we-44)
acl:relcl(all-43, fought-45)
cc(fought-45, and-46)
acl:relcl(all-43, feared-47)
conj:and(fought-45, feared-47)
cc(sang-41, and-48)
conj:and(did-11, felt-49)
conj:and(sang-41, felt-49)

(ROOT
  (S
    (ADVP (RB Yea))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBD sang)
        (SBAR (IN as)
          (S
            (ADVP (RB now))
            (NP (PRP I))
            (VP (VBP sing))))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NNP Prehistoric) (NN spring))
            (VP
              (VP (VBN Made)
                (S
                  (S
                    (NP (DT the) (NNP piled) (NNP Biscayan) (NN ice-pack))
                    (VP (VB split)
                      (CC and)
                      (VB shove)))
                  (: ;)
                  (CC And)
                  (FRAG
                    (ADJP (DT the) (JJ troll)
                      (CC and)
                      (JJ gnome)))))
              (CC and)
              (VP (VBG dwerg)))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NNS Gods))
        (PP (IN of)
          (NP (NNP Cliff)
            (CC and)
            (NNP Berg))))
      (VP (VBD Were)
        (UCP
          (PP
            (PP (IN about)
              (NP (PRP me)))
            (CC and)
            (PP (IN beneath)
              (NP (PRP me))))
          (CC and)
          (ADVP (RB above)))))
    (. .)))

advmod(sang-4, Yea-1)
nsubj(sang-4, I-3)
root(ROOT-0, sang-4)
mark(sing-8, as-5)
advmod(sing-8, now-6)
nsubj(sing-8, I-7)
advcl(sang-4, sing-8)
advmod(Made-14, when-10)
det(spring-13, the-11)
compound(spring-13, Prehistoric-12)
nsubj(Made-14, spring-13)
nsubj(dwerg-29, spring-13)
advcl(sang-4, Made-14)
det(ice-pack-18, the-15)
compound(ice-pack-18, piled-16)
compound(ice-pack-18, Biscayan-17)
nsubj(split-19, ice-pack-18)
nsubj(shove-21, ice-pack-18)
nsubj(troll-25, ice-pack-18)
xcomp(Made-14, split-19)
cc(split-19, and-20)
xcomp(Made-14, shove-21)
conj:and(split-19, shove-21)
cc(split-19, And-23)
dep(troll-25, the-24)
xcomp(Made-14, troll-25)
conj:and(split-19, troll-25)
cc(troll-25, and-26)
conj:and(split-19, gnome-27)
conj:and(troll-25, gnome-27)
cc(Made-14, and-28)
advcl(sang-4, dwerg-29)
conj:and(Made-14, dwerg-29)
cc(sang-4, and-31)
det(Gods-33, the-32)
nsubj(me-40, Gods-33)
case(Cliff-35, of-34)
nmod:of(Gods-33, Cliff-35)
cc(Cliff-35, and-36)
nmod:of(Gods-33, Berg-37)
conj:and(Cliff-35, Berg-37)
cop(me-40, Were-38)
case(me-40, about-39)
conj:and(sang-4, me-40)
cc(me-40, and-41)
case(me-43, beneath-42)
conj:and(sang-4, me-43)
conj:and(me-40, me-43)
cc(me-40, and-44)
conj:and(sang-4, above-45)
conj:and(me-40, above-45)

(ROOT
  (S (CC But)
    (NP
      (NP (DT a) (NN rival))
      (, ,)
      (PP (IN of)
        (NP
          (NP (NNP Solutr) (NNP -RSB-) (NNP /))
          (X (SYM e))))
      (, ,))
    (VP (VBD told)
      (NP
        (NP (DT the) (NN tribe))
        (SBAR
          (S
            (NP (PRP$ my) (NN style))
            (VP (VBD was)
              (VP (VBN _)
                (NP
                  (NP (NN outr) (NNS -RSB-))
                  (PRN (: /)
                    (NP (NNP e) (NNP _))
                    (: --)))
                (`` `)
                (S
                  (NP (NNP Neath))
                  (NP
                    (NP (DT a) (NN tomahawk))
                    (PP (IN of)
                      (NP
                        (NP (NN diorite))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBD fell))))))))))))))
    (. .)))

cc(told-11, But-1)
det(rival-3, a-2)
nsubj(told-11, rival-3)
case(/-8, of-5)
compound(/-8, Solutr-6)
compound(/-8, -RSB--7)
nmod:of(rival-3, /-8)
dep(/-8, e-9)
root(ROOT-0, told-11)
det(tribe-13, the-12)
dobj(told-11, tribe-13)
nmod:poss(style-15, my-14)
nsubjpass(_-17, style-15)
auxpass(_-17, was-16)
acl:relcl(tribe-13, _-17)
compound(-RSB--19, outr-18)
dobj(_-17, -RSB--19)
compound(_-22, e-21)
dep(-RSB--19, _-22)
nsubj(tomahawk-27, Neath-25)
det(tomahawk-27, a-26)
xcomp(_-17, tomahawk-27)
case(diorite-29, of-28)
nmod:of(tomahawk-27, diorite-29)
nsubj(fell-31, he-30)
acl:relcl(diorite-29, fell-31)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBD left)
      (NP
        (NP
          (NP (PRP$ my) (NNS views))
          (PP (IN on)
            (NP (NNP Art))))
        (, ,)
        (ADJP (JJ barbed)
          (CC and)
          (JJ tanged))
        (, ,))
      (PP (IN below)
        (NP
          (NP (DT the) (NN heart))
          (PP (IN Of)
            (NP (DT a) (JJ mammothistic) (NN etcher)))))
      (PP (IN at)
        (NP (NNP Grenelle))))
    (. .)))

cc(left-3, And-1)
nsubj(left-3, I-2)
root(ROOT-0, left-3)
nmod:poss(views-5, my-4)
dobj(left-3, views-5)
case(Art-7, on-6)
nmod:on(views-5, Art-7)
amod(views-5, barbed-9)
cc(barbed-9, and-10)
amod(views-5, tanged-11)
conj:and(barbed-9, tanged-11)
case(heart-15, below-13)
det(heart-15, the-14)
nmod:below(left-3, heart-15)
case(etcher-19, Of-16)
det(etcher-19, a-17)
amod(etcher-19, mammothistic-18)
nmod:of(heart-15, etcher-19)
case(Grenelle-21, at-20)
nmod:at(left-3, Grenelle-21)

(ROOT
  (S
    (ADVP (RB Then))
    (PRN
      (S
        (S
          (NP (PRP I))
          (VP (VBD stripped)
            (NP
              (NP (PRP them))
              (, ,)
              (NP
                (NP (NN scalp))
                (PP (IN from)
                  (NP (NN skull))))
              (, ,)
              (CC and)
              (NP
                (NP (PRP$ my) (NN hunting) (NNS dogs))
                (VP (VBN fed)
                  (S
                    (ADJP (JJ full))))))))
        (, ,)
        (CC And)
        (S
          (S
            (NP (PRP$ their) (NNS teeth) (NN I))
            (VP (VBD threaded)
              (ADVP (RB neatly))
              (PP (IN on)
                (NP (DT a) (NN thong)))))
          (: ;)
          (CC And)
          (S
            (NP (PRP I))
            (VP
              (VP (VBD wiped)
                (NP (PRP$ my) (NN mouth)))
              (CC and)
              (VP (VBD said))))))
      (, ,))
    (`` ``)
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADVP (RB well))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (ADJP (JJ dead)))))))
    (, ,) (IN For)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP$ my) (NN work))
            (VP (VBZ is)
              (ADJP (JJ right)))))))
    (CC and)
    (S
      (NP (PRP theirs))
      (VP (VBD was)
        (ADJP (JJ wrong))))
    (. .) ('' '')))

advmod(is-37, Then-1)
nsubj(stripped-3, I-2)
dep(is-37, stripped-3)
dobj(stripped-3, them-4)
dobj(stripped-3, scalp-6)
conj:and(them-4, scalp-6)
case(skull-8, from-7)
nmod:from(scalp-6, skull-8)
cc(them-4, and-10)
nmod:poss(dogs-13, my-11)
compound(dogs-13, hunting-12)
dobj(stripped-3, dogs-13)
conj:and(them-4, dogs-13)
acl(dogs-13, fed-14)
xcomp(fed-14, full-15)
cc(stripped-3, And-17)
nmod:poss(I-20, their-18)
compound(I-20, teeth-19)
nsubj(threaded-21, I-20)
conj:and(stripped-3, threaded-21)
dep(is-37, threaded-21)
advmod(threaded-21, neatly-22)
case(thong-25, on-23)
det(thong-25, a-24)
nmod:on(threaded-21, thong-25)
cc(threaded-21, And-27)
nsubj(wiped-29, I-28)
nsubj(said-33, I-28)
conj:and(stripped-3, wiped-29)
conj:and(threaded-21, wiped-29)
nmod:poss(mouth-31, my-30)
dobj(wiped-29, mouth-31)
cc(wiped-29, and-32)
conj:and(threaded-21, said-33)
conj:and(wiped-29, said-33)
nsubj(is-37, It-36)
root(ROOT-0, is-37)
advmod(is-37, well-38)
mark(dead-42, that-39)
nsubj(dead-42, they-40)
cop(dead-42, are-41)
ccomp(is-37, dead-42)
dep(is-37, For-44)
nsubj(know-46, I-45)
dep(is-37, know-46)
nmod:poss(work-48, my-47)
nsubj(right-50, work-48)
cop(right-50, is-49)
ccomp(know-46, right-50)
cc(is-37, and-51)
nsubj(wrong-54, theirs-52)
cop(wrong-54, was-53)
conj:and(is-37, wrong-54)

(ROOT
  (S (CC But)
    (S
      (NP (PRP$ my) (NN Totem))
      (VP (VBD saw)
        (NP (DT the) (NN shame))))
    (: ;)
    (SINV
      (PP (IN from)
        (NP (PRP$ his) (NN ridgepole)))
      (VP (VBD shrine)
        (SBAR
          (S
            (S
              (NP (PRP he))
              (VP (VBD came)))
            (, ,)
            (CC And)
            (S
              (NP (PRP he))
              (VP (VBD told))))))
      (NP (PRP me))
      (PP (IN in)
        (NP
          (NP (DT a) (NN vision))
          (PP (IN of)
            (FRAG
              (NP
                (NP (DT the) (NN night))
                (: :) (: --)
                (S (`` ``)
                  (NP (EX There))
                  (VP (VBP are)
                    (FRAG
                      (NP (CD nine))
                      (CC and)
                      (S
                        (S
                          (NP
                            (NP (JJ sixty) (NNS ways))
                            (PP (IN of)
                              (S
                                (VP (VBG constructing)
                                  (NP (NN tribal))))))
                          (VP (VBZ lays)))
                        (, ,)
                        (CC And)
                        (S
                          (NP
                            (NP (DT every) (JJ single) (NN one))
                            (PP (IN of)
                              (NP (PRP them))))
                          (VP (VBZ is)
                            (ADJP (JJ right)))))
                      (. !) ('' '')))
                  (. .))
                (. .)))))
        (. .))
      (. .))
    (. .)))

cc(saw-4, But-1)
nmod:poss(Totem-3, my-2)
nsubj(saw-4, Totem-3)
root(ROOT-0, saw-4)
det(shame-6, the-5)
dobj(saw-4, shame-6)
case(ridgepole-10, from-8)
nmod:poss(ridgepole-10, his-9)
nmod:from(shrine-11, ridgepole-10)
parataxis(saw-4, shrine-11)
nsubj(came-13, he-12)
dep(shrine-11, came-13)
cc(came-13, And-15)
nsubj(told-17, he-16)
dep(shrine-11, told-17)
conj:and(came-13, told-17)
nsubj(shrine-11, me-18)
case(vision-21, in-19)
det(vision-21, a-20)
nmod:in(shrine-11, vision-21)
case(night-24, of-22)
det(night-24, the-23)
acl(vision-21, night-24)
expl(are-29, There-28)
dep(night-24, are-29)
dep(are-29, nine-30)
cc(nine-30, and-31)
amod(ways-33, sixty-32)
nsubj(lays-37, ways-33)
mark(constructing-35, of-34)
acl(ways-33, constructing-35)
dobj(constructing-35, tribal-36)
dep(nine-30, lays-37)
cc(lays-37, And-39)
det(one-42, every-40)
amod(one-42, single-41)
nsubj(right-46, one-42)
case(them-44, of-43)
nmod:of(one-42, them-44)
cop(right-46, is-45)
dep(nine-30, right-46)
conj:and(lays-37, right-46)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Then))
        (NP (DT the) (NN silence))
        (VP (VBD closed)
          (PP (IN upon)
            (NP (PRP me)))
          (SBAR (IN till)
            (S
              (NP (PRP They))
              (VP (VBD put)
                (NP (JJ new) (NN clothing))
                (PP (IN on)
                  (NP (PRP me)))
                (PP (IN Of)
                  (NP (NN whiter))))))))
      (, ,)
      (S
        (NP
          (NP (JJR weaker) (NN flesh))
          (CC and)
          (NP (NN bone)))
        (ADJP (RBR more) (JJ frail)))
      (: ;)
      (S (CC And)
        (NP (PRP I))
        (VP (VBD stepped)
          (PP (IN beneath)
            (NP
              (NP
                (NP (NNP Time) (POS 's))
                (NN finger))
              (, ,)
              (ADVP (RB once) (RB again))
              (NP (DT a) (JJ tribal) (NN singer) (NN -LSB-)))))))
    (CC And)
    (S
      (NP (DT a) (JJ minor) (NN poet))
      (VP (VBN certified)
        (PP (IN by)
          (NP
            (NP (NNP Tr))
            (: --)
            (NP (NN ll) (NNS -RSB-))))))
    (. .)))

advmod(closed-4, Then-1)
det(silence-3, the-2)
nsubj(closed-4, silence-3)
root(ROOT-0, closed-4)
case(me-6, upon-5)
nmod:upon(closed-4, me-6)
mark(put-9, till-7)
nsubj(put-9, They-8)
advcl(closed-4, put-9)
amod(clothing-11, new-10)
dobj(put-9, clothing-11)
case(me-13, on-12)
nmod:on(put-9, me-13)
case(whiter-15, Of-14)
nmod:of(put-9, whiter-15)
amod(flesh-18, weaker-17)
dep(frail-22, flesh-18)
cc(flesh-18, and-19)
conj:and(flesh-18, bone-20)
dep(frail-22, bone-20)
advmod(frail-22, more-21)
dep(closed-4, frail-22)
cc(stepped-26, And-24)
nsubj(stepped-26, I-25)
parataxis(closed-4, stepped-26)
case(finger-30, beneath-27)
nmod:poss(finger-30, Time-28)
case(Time-28, 's-29)
nmod:beneath(stepped-26, finger-30)
advmod(again-33, once-32)
advmod(finger-30, again-33)
det(-LSB--37, a-34)
amod(-LSB--37, tribal-35)
compound(-LSB--37, singer-36)
dep(finger-30, -LSB--37)
cc(closed-4, And-38)
det(poet-41, a-39)
amod(poet-41, minor-40)
nsubj(certified-42, poet-41)
conj:and(closed-4, certified-42)
case(Tr-44, by-43)
nmod:by(certified-42, Tr-44)
compound(-RSB--47, ll-46)
dep(Tr-44, -RSB--47)

(ROOT
  (S
    (S
      (ADVP (RB Still))
      (NP (PRP they))
      (VP (VBZ skirmish)
        (ADVP (TO to)
          (CC and)
          (RB fro))
        (, ,)
        (S
          (NP (NNS men))
          (NP
            (NP (PRP$ my) (NNS messmates))
            (PP (IN on)
              (NP (DT the) (NN snow)))))
        (, ,)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP we))
            (VP (VBD headed)
              (PRT (RP off))
              (NP
                (NP (DT the) (JJ aurochs) (NN turn))
                (PP (IN for)
                  (NP (NN turn)))))
            (: ;)
            (SBAR
              (WHADVP (WRB When))
              (S
                (NP (DT the) (JJ rich) (NNS Allobrogenses))
                (ADVP (RB never))
                (VP (VBD kept)
                  (NP (NNS amanuenses)))))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP$ our) (JJ only) (NNS plots))
      (VP (VBD were)
        (VP (VBN piled)
          (PP (IN in)
            (NP
              (NP (NNS lakes))
              (PP (IN at)
                (NP (NNP Berne))))))))
    (. .)))

advmod(skirmish-3, Still-1)
nsubj(skirmish-3, they-2)
root(ROOT-0, skirmish-3)
advmod(skirmish-3, to-4)
cc(to-4, and-5)
advmod(skirmish-3, fro-6)
conj:and(to-4, fro-6)
nsubj(messmates-10, men-8)
nmod:poss(messmates-10, my-9)
xcomp(skirmish-3, messmates-10)
case(snow-13, on-11)
det(snow-13, the-12)
nmod:on(messmates-10, snow-13)
advmod(headed-17, When-15)
nsubj(headed-17, we-16)
advcl(skirmish-3, headed-17)
compound:prt(headed-17, off-18)
det(turn-21, the-19)
amod(turn-21, aurochs-20)
dobj(headed-17, turn-21)
case(turn-23, for-22)
nmod:for(turn-21, turn-23)
advmod(kept-30, When-25)
det(Allobrogenses-28, the-26)
amod(Allobrogenses-28, rich-27)
nsubj(kept-30, Allobrogenses-28)
neg(kept-30, never-29)
parataxis(headed-17, kept-30)
dobj(kept-30, amanuenses-31)
cc(skirmish-3, And-33)
nmod:poss(plots-36, our-34)
amod(plots-36, only-35)
nsubjpass(piled-38, plots-36)
auxpass(piled-38, were-37)
conj:and(skirmish-3, piled-38)
case(lakes-40, in-39)
nmod:in(piled-38, lakes-40)
case(Berne-42, at-41)
nmod:at(lakes-40, Berne-42)

(ROOT
  (S
    (S
      (ADVP (RB Still))
      (NP (DT a) (JJ cultured) (JJ Christian) (NN age))
      (VP (VBZ sees)
        (S
          (NP (PRP us))
          (NP
            (NP (NN scuffle) (, ,) (NN squeak) (, ,)
              (CC and)
              (NN rage) (, ,))
            (RRC
              (ADVP (RB Still))
              (NP
                (NP (PRP we))
                (NP
                  (NP (NN pinch)
                    (CC and)
                    (NN slap))
                  (CC and)
                  (NP (NN jabber) (, ,) (NN scratch)
                    (CC and)
                    (NN dirk)))))))))
    (: ;)
    (S
      (ADVP (RB Still))
      (NP (PRP we))
      (VP (VBP let)
        (NP (PRP$ our) (NN business) (NN slide))
        (PRN (: --)
          (SBAR (IN as)
            (S
              (NP (PRP we))
              (VP (VBD dropped)
                (NP (DT the) (JJ half-dressed) (NN hide)))))
          (: --))
        (S
          (VP (TO To)
            (VP (VB show)
              (NP (DT a) (NN fellow-savage))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (VP (TO to)
                    (VP (VB work))))))))))
    (. .)))

advmod(sees-6, Still-1)
det(age-5, a-2)
amod(age-5, cultured-3)
amod(age-5, Christian-4)
nsubj(sees-6, age-5)
root(ROOT-0, sees-6)
nsubj(squeak-10, us-7)
compound(squeak-10, scuffle-8)
xcomp(sees-6, squeak-10)
cc(squeak-10, and-12)
xcomp(sees-6, rage-13)
conj:and(squeak-10, rage-13)
advmod(we-16, Still-15)
acl:relcl(squeak-10, we-16)
dep(we-16, pinch-17)
cc(pinch-17, and-18)
dep(we-16, slap-19)
conj:and(pinch-17, slap-19)
cc(pinch-17, and-20)
dep(we-16, jabber-21)
conj:and(pinch-17, jabber-21)
conj:and(pinch-17, scratch-23)
conj:and(jabber-21, scratch-23)
cc(jabber-21, and-24)
conj:and(pinch-17, dirk-25)
conj:and(jabber-21, dirk-25)
advmod(let-29, Still-27)
nsubj(let-29, we-28)
parataxis(sees-6, let-29)
nmod:poss(slide-32, our-30)
compound(slide-32, business-31)
dobj(let-29, slide-32)
mark(dropped-36, as-34)
nsubj(dropped-36, we-35)
parataxis(let-29, dropped-36)
det(hide-39, the-37)
amod(hide-39, half-dressed-38)
dobj(dropped-36, hide-39)
mark(show-42, To-41)
advcl(let-29, show-42)
det(fellow-savage-44, a-43)
dobj(show-42, fellow-savage-44)
nsubj:xsubj(work-47, fellow-savage-44)
advmod(work-47, how-45)
mark(work-47, to-46)
xcomp(show-42, work-47)

(ROOT
  (S
    (S
      (ADVP (RB Still))
      (NP (DT the) (NN world))
      (VP (VBZ is)
        (ADVP (RB wondrous))
        (ADJP (JJ large) (, ,)
          (PRN (: --)
            (NP
              (NP (CD seven) (NNS seas))
              (PP (IN from)
                (NP (NN marge))))))
        (S
          (VP (TO to)
            (VP (VB marge)))))
      (, ,))
    (: --)
    (S (CC And)
      (NP (PRP it))
      (VP (VBZ holds)
        (NP
          (NP (DT a) (JJ vast))
          (PP (IN of)
            (NP
              (NP (JJ various) (NNS kinds))
              (PP (IN of)
                (NP (NN man))))))))
    (: ;)
    (CC And)
    (S
      (S
        (NP
          (NP (DT the) (JJ wildest) (NNS dreams))
          (PP (IN of)
            (NP (NNP Kew))))
        (VP (VBP are)
          (NP
            (NP (DT the) (NNS facts))
            (PP (IN of)
              (NP (NNP Khatmandhu))))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP (DT the) (NNS crimes))
          (PP (IN of)
            (NP (NNP Clapham))))
        (VP (VBZ chaste)
          (PP (IN in)
            (NP (NNP Martaban))))))
    (. .)))

advmod(large-6, Still-1)
det(world-3, the-2)
nsubj(large-6, world-3)
nsubj:xsubj(marge-14, world-3)
cop(large-6, is-4)
advmod(large-6, wondrous-5)
root(ROOT-0, large-6)
nummod(seas-10, seven-9)
dep(large-6, seas-10)
case(marge-12, from-11)
nmod:from(seas-10, marge-12)
mark(marge-14, to-13)
xcomp(large-6, marge-14)
cc(holds-19, And-17)
nsubj(holds-19, it-18)
conj:and(large-6, holds-19)
det(vast-21, a-20)
dobj(holds-19, vast-21)
case(kinds-24, of-22)
amod(kinds-24, various-23)
nmod:of(vast-21, kinds-24)
case(man-26, of-25)
nmod:of(kinds-24, man-26)
cc(large-6, And-28)
det(dreams-31, the-29)
amod(dreams-31, wildest-30)
nsubj(facts-36, dreams-31)
case(Kew-33, of-32)
nmod:of(dreams-31, Kew-33)
cop(facts-36, are-34)
det(facts-36, the-35)
conj:and(large-6, facts-36)
case(Khatmandhu-38, of-37)
nmod:of(facts-36, Khatmandhu-38)
cc(facts-36, And-40)
det(crimes-42, the-41)
nsubj(chaste-45, crimes-42)
case(Clapham-44, of-43)
nmod:of(crimes-42, Clapham-44)
conj:and(large-6, chaste-45)
conj:and(facts-36, chaste-45)
case(Martaban-47, in-46)
nmod:in(chaste-45, Martaban-47)

(ROOT
  (S
    (SINV
      (ADVP (RB Here))
      (VP (VBZ 's)
        (NP (PRP$ my) (NN wisdom))
        (PP (IN for)
          (NP (PRP$ your) (NN use)))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBD learned)
              (NP (PRP it))))))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP
            (NP (DT the) (NN moose))
            (CC And)
            (NP (DT the) (NN reindeer)))
          (VP (VBD roared)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (NNP Paris))
                (VP (VBZ roars)
                  (ADJP (JJ to-night))))))))
      (: :))
    (: --)
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (CD nine))
          (CC and)
          (NP
            (NP (JJ sixty) (NNS ways))
            (PP (IN of)
              (S
                (VP (VBG constructing)
                  (NP
                    (NP (JJ tribal) (NNS lays))
                    (, ,)
                    (CC And)
                    (PRN (: --)
                      (S
                        (NP
                          (NP
                            (ADJP (DT every)
                              (PRN (: --)
                                (NP (JJ single))
                                (: --)))
                            (NN one))
                          (PRN (: --)
                            (ADVP (RB of) (: --))
                            (NP (PRP them))
                            (: --)))
                        (VP (VBZ is)))
                      (: --))
                    (ADJP (RB right))))))))))
    (. !)))

advmod(wisdom-4, Here-1)
cop(wisdom-4, 's-2)
nmod:poss(wisdom-4, my-3)
dep(are-27, wisdom-4)
case(use-7, for-5)
nmod:poss(use-7, your-6)
nmod:for(wisdom-4, use-7)
mark(learned-11, as-9)
nsubj(learned-11, I-10)
advcl(wisdom-4, learned-11)
dobj(learned-11, it-12)
advmod(roared-19, when-13)
det(moose-15, the-14)
nsubj(roared-19, moose-15)
cc(moose-15, And-16)
det(reindeer-18, the-17)
conj:and(moose-15, reindeer-18)
nsubj(roared-19, reindeer-18)
dep(wisdom-4, roared-19)
advmod(roars-22, where-20)
nsubj(roars-22, Paris-21)
advcl(roared-19, roars-22)
xcomp(roars-22, to-night-23)
expl(are-27, There-26)
root(ROOT-0, are-27)
nsubj(are-27, nine-28)
cc(nine-28, and-29)
amod(ways-31, sixty-30)
nsubj(are-27, ways-31)
conj:and(nine-28, ways-31)
mark(constructing-33, of-32)
acl(ways-31, constructing-33)
amod(lays-35, tribal-34)
dobj(constructing-33, lays-35)
cc(lays-35, And-37)
amod(one-43, every-39)
dep(every-39, single-41)
nsubj(is-49, one-43)
dep(them-47, of-45)
dep(one-43, them-47)
dep(right-51, is-49)
dobj(constructing-33, right-51)
conj:And(lays-35, right-51)

(ROOT
  (S
    (NP
      (NP (DT THE) (NN STORY))
      (PP (IN OF)
        (NP (NNP UNG) (NNP Once))))
    (, ,)
    (PP (IN on)
      (NP
        (NP (DT a) (JJ glittering) (NN ice-field))
        (, ,)
        (ADVP
          (NP (NNS ages)
            (CC and)
            (NNS ages))
          (RB ago))))
    (, ,)
    (NP
      (NP (NNP Ung))
      (, ,)
      (NP
        (NP (DT a) (NN maker))
        (PP (IN of)
          (NP (NNS pictures))))
      (, ,))
    (VP (VBN fashioned)
      (NP
        (NP (DT an) (NN image))
        (PP (IN of)
          (NP (NN snow)))))
    (. .)))

det(STORY-2, THE-1)
nsubj(fashioned-24, STORY-2)
case(Once-5, OF-3)
compound(Once-5, UNG-4)
nmod:of(STORY-2, Once-5)
case(ice-field-10, on-7)
det(ice-field-10, a-8)
amod(ice-field-10, glittering-9)
nmod:on(fashioned-24, ice-field-10)
nmod:npmod(ago-15, ages-12)
cc(ages-12, and-13)
conj:and(ages-12, ages-14)
nmod:npmod(ago-15, ages-14)
advmod(ice-field-10, ago-15)
nsubj(fashioned-24, Ung-17)
det(maker-20, a-19)
appos(Ung-17, maker-20)
case(pictures-22, of-21)
nmod:of(maker-20, pictures-22)
root(ROOT-0, fashioned-24)
det(image-26, an-25)
dobj(fashioned-24, image-26)
case(snow-28, of-27)
nmod:of(image-26, snow-28)

(ROOT
  (S
    (VP (VB Fashioned)
      (NP
        (NP (DT the) (NN form))
        (PP (IN of)
          (NP
            (NP (DT a) (NN tribesman))
            (PRN (: --)
              (ADVP (RB gaily))
              (NP (PRP he)))
            (VP (VBN whistled)
              (CC and)
              (VBN sung) (, ,)
              (S
                (VP (VBG Working)
                  (NP (DT the) (NN snow))
                  (PP (IN with)
                    (NP (PRP$ his) (NNS fingers))))))))))
    (. .)))

root(ROOT-0, Fashioned-1)
det(form-3, the-2)
dobj(Fashioned-1, form-3)
case(tribesman-6, of-4)
det(tribesman-6, a-5)
nmod:of(form-3, tribesman-6)
dep(he-9, gaily-8)
dep(tribesman-6, he-9)
acl(tribesman-6, whistled-10)
cc(whistled-10, and-11)
acl(tribesman-6, sung-12)
conj:and(whistled-10, sung-12)
xcomp(whistled-10, Working-14)
det(snow-16, the-15)
dobj(Working-14, snow-16)
case(fingers-19, with-17)
nmod:poss(fingers-19, his-18)
nmod:with(Working-14, fingers-19)

(ROOT
  (S
    (NP (NNP _) (NNP Read))
    (VP (VBZ ye)
      (NP
        (NP (DT the) (NNP Story))
        (PP (IN of)
          (NP (NNP Ung)))))
    (. !)))

compound(Read-2, _-1)
nsubj(ye-3, Read-2)
root(ROOT-0, ye-3)
det(Story-5, the-4)
dobj(ye-3, Story-5)
case(Ung-7, of-6)
nmod:of(Story-5, Ung-7)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP Pleased))
      (VP
        (VP (VBD was)
          (NP (PRP$ his) (NN tribe))
          (PP (IN with)
            (NP (DT that) (NN image))))
        (: --)
        (VP (VBD came)
          (PP (IN in)
            (NP (PRP$ their) (NNS hundreds)))
          (S
            (VP (TO to)
              (VP (VB scan)))))
        (: --)
        (VP (VBN Handled)
          (NP (PRP it)))
        (, ,)
        (VP (NN smelt)
          (NP (PRP it)))
        (, ,)
        (CC and)
        (VP (VBD grunted))))
    (: :)
    (S (`` ``)
      (ADVP (RB Verily))
      (, ,)
      (NP (DT this))
      (VP (VBZ is)
        (NP (DT a) (NN man))))
    (. !)))

compound(Pleased-2, _-1)
nsubj(tribe-5, Pleased-2)
nsubj(came-10, Pleased-2)
nsubj:xsubj(scan-15, Pleased-2)
nsubj(Handled-17, Pleased-2)
nsubj(grunted-24, Pleased-2)
cop(tribe-5, was-3)
nmod:poss(tribe-5, his-4)
root(ROOT-0, tribe-5)
case(image-8, with-6)
det(image-8, that-7)
nmod:with(tribe-5, image-8)
conj:and(tribe-5, came-10)
case(hundreds-13, in-11)
nmod:poss(hundreds-13, their-12)
nmod:in(came-10, hundreds-13)
mark(scan-15, to-14)
xcomp(came-10, scan-15)
conj:and(tribe-5, Handled-17)
dobj(Handled-17, it-18)
conj:and(tribe-5, smelt-20)
dobj(smelt-20, it-21)
cc(tribe-5, and-23)
conj:and(tribe-5, grunted-24)
advmod(man-32, Verily-27)
nsubj(man-32, this-29)
cop(man-32, is-30)
det(man-32, a-31)
parataxis(tribe-5, man-32)

(ROOT
  (S (RB Thus)
    (VP (VB do)
      (SBAR
        (S
          (NP (PRP we))
          (VP
            (VP (VBP carry)
              (NP (PRP$ our) (NNS lances)))
            (: --) (RB thus)
            (VP (VBZ is)
              (NP (DT a) (JJ war-belt) (NN slung)))))))
    (. .)))

advmod(do-2, Thus-1)
root(ROOT-0, do-2)
nsubj(carry-4, we-3)
ccomp(do-2, carry-4)
nmod:poss(lances-6, our-5)
dobj(carry-4, lances-6)
advmod(carry-4, thus-8)
cop(slung-12, is-9)
det(slung-12, a-10)
amod(slung-12, war-belt-11)
dep(carry-4, slung-12)

(ROOT
  (S
    (VP (VB Lo))
    (. !)))

root(ROOT-0, Lo-1)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (SBAR (RB even) (IN as)
        (S
          (NP (PRP we))
          (VP (VBP are)))))
    (. .)))

nsubj(is-2, it-1)
root(ROOT-0, is-2)
advmod(are-6, even-3)
mark(are-6, as-4)
nsubj(are-6, we-5)
advcl(is-2, are-6)

(ROOT
  (FRAG
    (NP
      (NP (NN Glory)
        (CC and)
        (NN honour))
      (PP (TO to)
        (NP (NNP Ung))))
    (. !) ('' '')))

root(ROOT-0, Glory-1)
cc(Glory-1, and-2)
conj:and(Glory-1, honour-3)
case(Ung-5, to-4)
nmod:to(Glory-1, Ung-5)

(ROOT
  (S
    (ADVP (RB Later))
    (NP (PRP he))
    (VP (VBD pictured)
      (NP (DT an) (NNS aurochs))
      (PRN (: --)
        (S
          (ADVP (RB later))
          (NP (PRP he))
          (VP (VBD pictured)
            (SBAR
              (S
                (NP
                  (NP (DT a) (NN bear))
                  (PRN (: --)
                    (VP (VBN Pictured)
                      (NP (DT the) (JJ sabre-tooth) (NN tiger))
                      (S
                        (VP (VBG dragging)
                          (NP (DT a) (NN man))
                          (PP (TO to)
                            (NP (PRP$ his) (NN lair))))))
                    (: --)))
                (VP (VBD Pictured)
                  (NP (DT the)
                    (NAC (NNP mountainous) (NNP mammoth) (, ,) (NNP hairy) (, ,))
                    (NN abhorrent))
                  (, ,)
                  (ADVP (RB alone)))))))
        (: --))
      (SBAR
        (ADVP (RB Out)
          (PP (IN of)
            (NP (DT the) (NN love))))
        (IN that)
        (S
          (NP (PRP he))
          (VP (VBD bore)
            (NP (PRP them))
            (, ,)
            (S
              (VP (VBG scribing)
                (NP (PRP them))
                (ADVP (RB clearly))
                (PP (IN on)
                  (NP (NN bone)))))))))
    (. .)))

advmod(pictured-3, Later-1)
nsubj(pictured-3, he-2)
root(ROOT-0, pictured-3)
det(aurochs-5, an-4)
dobj(pictured-3, aurochs-5)
advmod(pictured-9, later-7)
nsubj(pictured-9, he-8)
parataxis(pictured-3, pictured-9)
det(bear-11, a-10)
nsubj(Pictured-24, bear-11)
dep(bear-11, Pictured-13)
det(tiger-16, the-14)
amod(tiger-16, sabre-tooth-15)
dobj(Pictured-13, tiger-16)
xcomp(Pictured-13, dragging-17)
det(man-19, a-18)
dobj(dragging-17, man-19)
case(lair-22, to-20)
nmod:poss(lair-22, his-21)
nmod:to(dragging-17, lair-22)
ccomp(pictured-9, Pictured-24)
det(abhorrent-31, the-25)
dep(abhorrent-31, mountainous-26)
compound(mountainous-26, mammoth-27)
dep(mountainous-26, hairy-29)
dobj(Pictured-24, abhorrent-31)
advmod(Pictured-24, alone-33)
case(love-38, Out-35)
mwe(Out-35, of-36)
det(love-38, the-37)
nmod:out_of(bore-41, love-38)
mark(bore-41, that-39)
nsubj(bore-41, he-40)
dep(pictured-3, bore-41)
dobj(bore-41, them-42)
advcl(bore-41, scribing-44)
dobj(scribing-44, them-45)
advmod(scribing-44, clearly-46)
case(bone-48, on-47)
nmod:on(scribing-44, bone-48)

(ROOT
  (S
    (S
      (NP (NNP Swift))
      (VP (VBD came)
        (NP (DT the) (NN tribe)
          (S
            (VP (TO to)
              (VP (VB behold)
                (NP (PRP them))))))
        (, ,)
        (S
          (VP
            (VP (VBG peering)
              (CC and)
              (VBG pushing))
            (CC and)
            (ADVP
              (ADVP (RB still))
              (PRN (: --)
                (NP
                  (NP
                    (NP (NNS Men))
                    (PP (IN of)
                      (NP (DT the) (JJ berg-battered) (NNS beaches))))
                  (, ,)
                  (NP
                    (NP
                      (NP (NNS men))
                      (PP (IN of)
                        (NP (DT the) (JJ boulder-hatched) (NN hill))))
                    (: --)
                    (NP
                      (NP (NNP Hunters))
                      (CC and)
                      (NP (NNS fishers))))
                  (CC and)
                  (NP
                    (NP (NNS trappers))
                    (, ,)
                    (ADVP (RB presently))))))
            (VP (VBG whispering)
              (ADJP (JJ low)))))))
    (: :) (`` ``)
    (S
      (S
        (S
          (ADJP (JJ Yea)))
        (, ,)
        (NP (PRP they))
        (VP (VBP are)
          (ADJP (JJ like))))
      (: --)
      (CC and)
      (S
        (NP (PRP it))
        (VP (MD may)
          (VP (VB be) (: --)
            (SBARQ (CC But)
              (WHADVP (WRB how))
              (SQ (VBZ does)
                (NP (DT the) (NNP Picture-man))
                (VP (VB know)))
              (. ?) ('' ''))))))))

nsubj(came-2, Swift-1)
root(ROOT-0, came-2)
det(tribe-4, the-3)
dobj(came-2, tribe-4)
mark(behold-6, to-5)
acl(tribe-4, behold-6)
dobj(behold-6, them-7)
dep(came-2, peering-9)
cc(peering-9, and-10)
dep(came-2, pushing-11)
conj:and(peering-9, pushing-11)
cc(peering-9, and-12)
advmod(peering-9, still-13)
dep(still-13, Men-15)
case(beaches-19, of-16)
det(beaches-19, the-17)
amod(beaches-19, berg-battered-18)
nmod:of(Men-15, beaches-19)
dep(still-13, men-21)
conj:and(Men-15, men-21)
case(hill-25, of-22)
det(hill-25, the-23)
amod(hill-25, boulder-hatched-24)
nmod:of(men-21, hill-25)
dep(men-21, Hunters-27)
cc(Hunters-27, and-28)
dep(men-21, fishers-29)
conj:and(Hunters-27, fishers-29)
cc(Men-15, and-30)
dep(still-13, trappers-31)
conj:and(Men-15, trappers-31)
advmod(trappers-31, presently-33)
dep(came-2, whispering-34)
conj:and(peering-9, whispering-34)
xcomp(whispering-34, low-35)
ccomp(like-42, Yea-38)
nsubj(like-42, they-40)
cop(like-42, are-41)
parataxis(came-2, like-42)
cc(like-42, and-44)
nsubj(be-47, it-45)
aux(be-47, may-46)
parataxis(came-2, be-47)
conj:and(like-42, be-47)
cc(know-54, But-49)
advmod(know-54, how-50)
aux(know-54, does-51)
det(Picture-man-53, the-52)
nsubj(know-54, Picture-man-53)
ccomp(be-47, know-54)

(ROOT
  (S (`` ``)
    (NP (NNP Ung))
    (PRN (: --)
      (S
        (VP (VBD hath)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD slept)
                (PP (IN with)
                  (NP (DT the) (NNPS Aurochs))))))))
      (: --))
    (VP (VBD watched)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (NNP Mastodon))
          (VP (VBP roam)))))
    (. ?)))

nsubj(watched-11, Ung-2)
parataxis(watched-11, hath-4)
nsubj(slept-6, he-5)
ccomp(hath-4, slept-6)
case(Aurochs-9, with-7)
det(Aurochs-9, the-8)
nmod:with(slept-6, Aurochs-9)
root(ROOT-0, watched-11)
advmod(roam-15, where-12)
det(Mastodon-14, the-13)
nsubj(roam-15, Mastodon-14)
advcl(watched-11, roam-15)

(ROOT
  (SBARQ
    (WHNP
      (NP (JJ Spoke))
      (PP (IN on)
        (NP
          (NP (DT the) (NN ice))
          (PP (IN with)
            (NP (DT the) (JJ Bow-head))))
        (: --)))
    (SQ
      (VP (VBD followed)
        (NP (DT the) (JJ Sabre-tooth) (NN home))))
    (. ?)))

nsubj(followed-9, Spoke-1)
case(ice-4, on-2)
det(ice-4, the-3)
nmod:on(Spoke-1, ice-4)
case(Bow-head-7, with-5)
det(Bow-head-7, the-6)
nmod:with(ice-4, Bow-head-7)
root(ROOT-0, followed-9)
det(home-12, the-10)
amod(home-12, Sabre-tooth-11)
dobj(followed-9, home-12)

(ROOT
  (S
    (VP (VB Nay))
    (. !)))

root(ROOT-0, Nay-1)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are)
      (NP
        (NP (NNS toys))
        (PP (IN of)
          (NP (PRP$ his) (NN fancy)))))
    (. !)))

nsubj(toys-3, These-1)
cop(toys-3, are-2)
root(ROOT-0, toys-3)
case(fancy-6, of-4)
nmod:poss(fancy-6, his-5)
nmod:of(toys-3, fancy-6)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBP have)
          (VP (VBD cheated)
            (NP (PRP us))
            (ADVP (RB so))))))
    (, ,)
    (WHADVP (WRB How))
    (SQ (NNS is)
      (NP (EX there))
      (NP
        (NP (NN truth))
        (PP (IN in)
          (NP
            (NP (PRP$ his) (NN image))
            (: --)
            (NP
              (NP (DT the) (NN man))
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBN fashioned)
                    (PP (IN of)
                      (NP (NN snow)))))))))))
    (. ?) ('' '')))

mark(cheated-4, If-1)
nsubj(cheated-4, he-2)
aux(cheated-4, have-3)
advcl(is-9, cheated-4)
dobj(cheated-4, us-5)
advmod(cheated-4, so-6)
advmod(is-9, How-8)
root(ROOT-0, is-9)
expl(is-9, there-10)
nsubj(is-9, truth-11)
case(image-14, in-12)
nmod:poss(image-14, his-13)
nmod:in(truth-11, image-14)
det(man-17, the-16)
dep(image-14, man-17)
mark(fashioned-20, that-18)
nsubj(fashioned-20, he-19)
dep(man-17, fashioned-20)
case(snow-22, of-21)
nmod:of(fashioned-20, snow-22)

(ROOT
  (S
    (S
      (NP (NNP Wroth))
      (VP (VBD was)
        (NP
          (NP (DT that) (NN maker))
          (PP (IN of)
            (NP (NNS pictures))))))
    (: --)
    (S
      (ADVP (RB hotly))
      (NP (PRP he))
      (VP (VBD answered)
        (NP (DT the) (NN call))
        (: :) (`` ``)
        (S
          (NP
            (NP (NNS Hunters)
              (CC and)
              (NNS fishers))
            (CC and)
            (NP (NNS trappers) (, ,) (NNS children)
              (CC and)
              (NNS fools)))
          (VP (VBP are)
            (VP (VBG ye)
              (NP (DT all)))))))
    (. !)))

nsubj(maker-4, Wroth-1)
cop(maker-4, was-2)
det(maker-4, that-3)
root(ROOT-0, maker-4)
case(pictures-6, of-5)
nmod:of(maker-4, pictures-6)
advmod(answered-10, hotly-8)
nsubj(answered-10, he-9)
parataxis(maker-4, answered-10)
det(call-12, the-11)
dobj(answered-10, call-12)
nsubj(ye-25, Hunters-15)
cc(Hunters-15, and-16)
conj:and(Hunters-15, fishers-17)
nsubj(ye-25, fishers-17)
cc(Hunters-15, and-18)
conj:and(Hunters-15, trappers-19)
nsubj(ye-25, trappers-19)
conj:and(Hunters-15, children-21)
conj:and(trappers-19, children-21)
cc(trappers-19, and-22)
conj:and(Hunters-15, fools-23)
conj:and(trappers-19, fools-23)
aux(ye-25, are-24)
dep(answered-10, ye-25)
dobj(ye-25, all-26)

(ROOT
  (S
    (VP (VB Look)
      (PP (IN at)
        (NP (DT the) (NNS beasts)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP ye))
          (VP (VBZ hunt)
            (NP (PRP them))))))
    (. !) ('' '')))

root(ROOT-0, Look-1)
case(beasts-4, at-2)
det(beasts-4, the-3)
nmod:at(Look-1, beasts-4)
advmod(hunt-7, when-5)
nsubj(hunt-7, ye-6)
advcl(Look-1, hunt-7)
dobj(hunt-7, them-8)

(ROOT
  (S
    (NP
      (NP (NNP Swift))
      (PP (IN from)
        (NP
          (NP (DT the) (NN tumult))
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD broke)))))))
    (, ,)
    (VP
      (VP (VBN Ran)
        (PP (TO to)
          (NP
            (NP (DT the) (NN cave))
            (PP (IN of)
              (NP (PRP$ his) (NN father))))))
      (CC and)
      (VP (VBN told)
        (S
          (NP (PRP him))
          (NP (DT the) (NN shame)))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBD spoke))))))
    (. .)))

nsubj(Ran-8, Swift-1)
nsubj(told-16, Swift-1)
case(tumult-4, from-2)
det(tumult-4, the-3)
nmod:from(Swift-1, tumult-4)
nsubj(broke-6, he-5)
acl:relcl(tumult-4, broke-6)
root(ROOT-0, Ran-8)
case(cave-11, to-9)
det(cave-11, the-10)
nmod:to(Ran-8, cave-11)
case(father-14, of-12)
nmod:poss(father-14, his-13)
nmod:of(cave-11, father-14)
cc(Ran-8, and-15)
conj:and(Ran-8, told-16)
nsubj(shame-19, him-17)
det(shame-19, the-18)
xcomp(told-16, shame-19)
mark(spoke-22, that-20)
nsubj(spoke-22, they-21)
ccomp(told-16, spoke-22)

(ROOT
  (S (CC And)
    (S
      (NP
        (NP (DT the) (NN father))
        (PP (IN of)
          (NP (NNP Ung))))
      (VP (VBD gave)
        (NP
          (NP (NN answer))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD was)
                (ADJP (JJ old)
                  (CC and)
                  (JJ wise))))))
        (PP (IN in)
          (NP (DT the) (NN craft)))
        (, ,)
        (NP
          (NP (NNP Maker))
          (PP (IN of)
            (NP (NNS pictures) (NN aforetime))))))
    (PRN (, ,)
      (S
        (NP (PRP he))
        (VP
          (VP (VBD leaned)
            (PP (IN on)
              (NP (PRP$ his) (NN lance))))
          (CC and)
          (VP (VBD laughed) (: :) (`` ``)
            (S
              (SBAR (IN If)
                (S
                  (NP (PRP they))
                  (VP (MD could)
                    (VP (VB see)
                      (SBAR (IN as)
                        (S
                          (NP (PRP thou))
                          (VP (VBP seest))))))))
              (NP (PRP they))
              (VP (MD would)
                (VP (VB do)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP thou))
                      (VP (VBP hast)
                        (ADJP (VBN done)))))))))))
      (, ,))
    (CC And)
    (S
      (NP (DT each) (NN man))
      (VP (MD would)
        (VP (VB make)
          (NP (PRP him))
          (NP
            (NP (DT a) (NN picture))
            (, ,)
            (CC and)
            (PRN (: --)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (MD would)
                    (VP (VB become))))))
            (PP (IN of)
              (NP (PRP$ my) (NN son)))))))
    (. ?)))

cc(gave-6, And-1)
det(father-3, the-2)
nsubj(gave-6, father-3)
case(Ung-5, of-4)
nmod:of(father-3, Ung-5)
root(ROOT-0, gave-6)
dobj(gave-6, answer-7)
nsubj(old-11, answer-7)
nsubj(wise-13, answer-7)
ref(answer-7, that-9)
cop(old-11, was-10)
acl:relcl(answer-7, old-11)
cc(old-11, and-12)
acl:relcl(answer-7, wise-13)
conj:and(old-11, wise-13)
case(craft-16, in-14)
det(craft-16, the-15)
nmod:in(gave-6, craft-16)
dobj(gave-6, Maker-18)
case(aforetime-21, of-19)
compound(aforetime-21, pictures-20)
nmod:of(Maker-18, aforetime-21)
nsubj(leaned-24, he-23)
nsubj(laughed-29, he-23)
dep(gave-6, leaned-24)
case(lance-27, on-25)
nmod:poss(lance-27, his-26)
nmod:on(leaned-24, lance-27)
cc(leaned-24, and-28)
dep(gave-6, laughed-29)
conj:and(leaned-24, laughed-29)
mark(see-35, If-32)
nsubj(see-35, they-33)
aux(see-35, could-34)
advcl(do-41, see-35)
mark(seest-38, as-36)
nsubj(seest-38, thou-37)
advcl(see-35, seest-38)
nsubj(do-41, they-39)
aux(do-41, would-40)
ccomp(laughed-29, do-41)
dobj(done-45, what-42)
nsubj(hast-44, thou-43)
ccomp(do-41, hast-44)
xcomp(hast-44, done-45)
cc(gave-6, And-47)
det(man-49, each-48)
nsubj(make-51, man-49)
aux(make-51, would-50)
conj:and(gave-6, make-51)
iobj(make-51, him-52)
det(picture-54, a-53)
dobj(make-51, picture-54)
cc(picture-54, and-56)
nsubj(become-60, what-58)
aux(become-60, would-59)
dobj(make-51, become-60)
conj:and(picture-54, become-60)
case(son-63, of-61)
nmod:poss(son-63, my-62)
nmod:of(become-60, son-63)

(ROOT
  (S (`` ``)
    (NP (EX There))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT no) (NNS pelts))
          (PP (IN of)
            (NP (DT the) (NN reindeer)))
          (, ,)
          (VP (VBG flung)
            (PRT (RP down))
            (PP (IN at)
              (NP
                (NP (PRP$ thy) (NN cave))
                (PP (IN for)
                  (NP (DT a) (NN gift)))))
            (, ,)
            (NP
              (NP (NNP Nor) (NNP dole))
              (PP (IN of)
                (NP
                  (NP
                    (NP
                      (NP (DT the) (JJ oily) (NN timber))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ comes)
                            (PP (IN on)
                              (NP (DT the) (JJ Baltic) (NN drift)))))))
                    (: ;)
                    (NP
                      (NP
                        (NP (DT No) (NN store))
                        (PP (IN of)
                          (NP (JJ well-drilled) (NNS needles))))
                      (, ,)
                      (CC nor)
                      (NP
                        (NP (NNS ouches))
                        (PP (IN of)
                          (NP (NN amber) (NN pale)))))
                    (: ;)
                    (NP
                      (NP (DT No) (JJ new-cut) (NNS tongues))
                      (PP (IN of)
                        (NP (DT the) (NN bison)))))
                  (, ,)
                  (CC nor)
                  (NP
                    (NP (NN meat))
                    (PP (IN of)
                      (NP (DT the) (JJ stranded) (NN whale)))))))))))
    (. .) ('' '')))

expl(pelts-6, There-2)
aux(pelts-6, would-3)
cop(pelts-6, be-4)
neg(pelts-6, no-5)
root(ROOT-0, pelts-6)
case(reindeer-9, of-7)
det(reindeer-9, the-8)
nmod:of(pelts-6, reindeer-9)
acl(pelts-6, flung-11)
compound:prt(flung-11, down-12)
case(cave-15, at-13)
nmod:poss(cave-15, thy-14)
nmod:at(flung-11, cave-15)
case(gift-18, for-16)
det(gift-18, a-17)
nmod:for(cave-15, gift-18)
compound(dole-21, Nor-20)
dobj(flung-11, dole-21)
case(timber-25, of-22)
det(timber-25, the-23)
amod(timber-25, oily-24)
nmod:of(dole-21, timber-25)
nsubj(comes-27, timber-25)
ref(timber-25, that-26)
acl:relcl(timber-25, comes-27)
case(drift-31, on-28)
det(drift-31, the-29)
amod(drift-31, Baltic-30)
nmod:on(comes-27, drift-31)
neg(store-34, No-33)
dep(timber-25, store-34)
case(needles-37, of-35)
amod(needles-37, well-drilled-36)
nmod:of(store-34, needles-37)
cc(store-34, nor-39)
dep(timber-25, ouches-40)
conj:nor(store-34, ouches-40)
case(pale-43, of-41)
compound(pale-43, amber-42)
nmod:of(ouches-40, pale-43)
neg(tongues-47, No-45)
amod(tongues-47, new-cut-46)
dep(timber-25, tongues-47)
case(bison-50, of-48)
det(bison-50, the-49)
nmod:of(tongues-47, bison-50)
cc(timber-25, nor-52)
nmod:of(dole-21, meat-53)
conj:nor(timber-25, meat-53)
nsubj(comes-27, meat-53)
case(whale-57, of-54)
det(whale-57, the-55)
amod(whale-57, stranded-56)
nmod:of(meat-53, whale-57)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP Thou) (NNP _))
      (VP (VBP hast) (RB not)
        (VP (VB toiled)
          (PP (IN at)
            (NP (DT the) (NN fishing)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT the) (NN sodden))
              (VP (VBZ trammels)
                (NP (NN freeze))))))))
    (PRN (, ,)
      (S
        (NP (NNP Nor))
        (VP (VBD worked)
          (NP (DT the) (JJ war-boats) (NN outward))
          (PP (IN through)
            (NP
              (NP (DT the) (NN rush))
              (PP (IN of)
                (NP (DT the) (JJ rock-staked) (NNS seas)))))))
      (, ,))
    (CC Yet)
    (S
      (S
        (NP (PRP they))
        (S
          (VP (VB bring)
            (S
              (NP (PRP thee))
              (NP
                (NP (NN fish)
                  (CC and)
                  (NN plunder))
                (PRN (: --)
                  (NP
                    (NP (JJ full) (NN meal))
                    (CC and)
                    (NP (DT an) (JJ easy) (NN bed)))
                  (: --)))))))
      (CC And)
      (S
        (NP (DT all))
        (PP (IN for)
          (NP
            (NP (DT the) (NN sake))
            (PP (IN of)
              (NP (PRP$ thy) (NNS pictures)))))))
    (. .) ('' '')))

compound(_-3, _-1)
compound(_-3, Thou-2)
nsubj(hast-4, _-3)
nsubj(bring-31, _-3)
root(ROOT-0, hast-4)
neg(hast-4, not-5)
dep(hast-4, toiled-6)
case(fishing-9, at-7)
det(fishing-9, the-8)
nmod:at(toiled-6, fishing-9)
advmod(trammels-13, when-10)
det(sodden-12, the-11)
nsubj(trammels-13, sodden-12)
advcl(toiled-6, trammels-13)
dobj(trammels-13, freeze-14)
nsubj(worked-17, Nor-16)
dep(hast-4, worked-17)
det(outward-20, the-18)
amod(outward-20, war-boats-19)
dobj(worked-17, outward-20)
case(rush-23, through-21)
det(rush-23, the-22)
nmod:through(worked-17, rush-23)
case(seas-27, of-24)
det(seas-27, the-25)
amod(seas-27, rock-staked-26)
nmod:of(rush-23, seas-27)
cc(hast-4, Yet-29)
dep(bring-31, they-30)
conj:yet(hast-4, bring-31)
nsubj(fish-33, thee-32)
xcomp(bring-31, fish-33)
cc(fish-33, and-34)
xcomp(bring-31, plunder-35)
conj:and(fish-33, plunder-35)
amod(meal-38, full-37)
dep(fish-33, meal-38)
cc(meal-38, and-39)
det(bed-42, an-40)
amod(bed-42, easy-41)
dep(fish-33, bed-42)
conj:and(meal-38, bed-42)
cc(bring-31, And-44)
conj:yet(hast-4, all-45)
conj:and(bring-31, all-45)
case(sake-48, for-46)
det(sake-48, the-47)
dep(all-45, sake-48)
case(pictures-51, of-49)
nmod:poss(pictures-51, thy-50)
nmod:of(sake-48, pictures-51)

(ROOT
  (S (CC And)
    (NP (NNP Ung))
    (VP (VBD held)
      (PRT (RP down))
      (NP (PRP$ his) (NN head)))
    (. .) ('' '')))

cc(held-3, And-1)
nsubj(held-3, Ung-2)
root(ROOT-0, held-3)
compound:prt(held-3, down-4)
nmod:poss(head-6, his-5)
dobj(held-3, head-6)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP Thou))
      (ADVP
        (NP (CD _) (NN hast))
        (RB not))
      (VP (VBD stood)
        (PP (TO to)
          (NP (DT the) (NNPS Aurochs)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (JJ red) (NN snow))
            (VP (VBZ reeks)
              (PP (IN of)
                (NP (DT the) (NN fight))))))))
    (: ;)
    (S
      (NP (NNS Men))
      (VP (VBP have)
        (NP
          (NP (DT no) (NN time))
          (PP (IN at)
            (NP (DT the)
              (ADJP (JJ houghing)
                (S
                  (VP (TO to)
                    (VP (VB count)
                      (NP (PRP$ his) (NNS curls))))))
              (NN aright))))))
    (. .)))

compound(Thou-2, _-1)
nsubj(stood-6, Thou-2)
nummod(hast-4, _-3)
nmod:npmod(not-5, hast-4)
neg(stood-6, not-5)
root(ROOT-0, stood-6)
case(Aurochs-9, to-7)
det(Aurochs-9, the-8)
nmod:to(stood-6, Aurochs-9)
advmod(reeks-14, when-10)
det(snow-13, the-11)
amod(snow-13, red-12)
nsubj(reeks-14, snow-13)
advcl(stood-6, reeks-14)
case(fight-17, of-15)
det(fight-17, the-16)
nmod:of(reeks-14, fight-17)
nsubj(have-20, Men-19)
parataxis(stood-6, have-20)
neg(time-22, no-21)
dobj(have-20, time-22)
case(aright-30, at-23)
det(aright-30, the-24)
amod(aright-30, houghing-25)
mark(count-27, to-26)
xcomp(houghing-25, count-27)
nmod:poss(curls-29, his-28)
dobj(count-27, curls-29)
nmod:at(time-22, aright-30)

(ROOT
  (S (CC And)
    (S
      (S
        (NP
          (NP (DT the) (NN heart))
          (PP (IN of)
            (NP (DT the) (JJ hairy) (NN Mammoth)))))
      (, ,)
      (NP (PRP thou))
      (VP (VBP sayest)))
    (PRN (, ,)
      (S
        (NP (PRP they))
        (VP (VBP do) (RB not)
          (VP (VB see))))
      (, ,))
    (CC Yet)
    (S
      (NP (PRP they))
      (VP
        (VP (VB save)
          (S
            (NP (PRP it))
            (ADJP (JJ whole)
              (PP (IN from)
                (NP (DT the) (NNS beaches))))))
        (CC and)
        (VP (VB broil)
          (NP
            (NP (DT the) (JJS best))
            (PP (IN for)
              (NP (PRP thee)))))))
    (. .)))

cc(sayest-10, And-1)
det(heart-3, the-2)
ccomp(sayest-10, heart-3)
case(Mammoth-7, of-4)
det(Mammoth-7, the-5)
amod(Mammoth-7, hairy-6)
nmod:of(heart-3, Mammoth-7)
nsubj(sayest-10, thou-9)
root(ROOT-0, sayest-10)
nsubj(see-15, they-12)
aux(see-15, do-13)
neg(see-15, not-14)
dep(sayest-10, see-15)
cc(sayest-10, Yet-17)
nsubj(save-19, they-18)
nsubj(broil-26, they-18)
conj:yet(sayest-10, save-19)
nsubj(whole-21, it-20)
xcomp(save-19, whole-21)
case(beaches-24, from-22)
det(beaches-24, the-23)
nmod:from(whole-21, beaches-24)
cc(save-19, and-25)
conj:yet(sayest-10, broil-26)
conj:and(save-19, broil-26)
det(best-28, the-27)
dobj(broil-26, best-28)
case(thee-30, for-29)
nmod:for(best-28, thee-30)

(ROOT
  (S (`` ``)
    (S (CC And)
      (NP (RB now))
      (VP (VBP do)
        (S
          (NP (PRP they))
          (VP (VB press)
            (PP (TO to)
              (NP (PRP$ thy) (NNS pictures)))))
        (, ,)
        (PP (IN with)
          (NP (VBN opened) (NN mouth)
            (CC and)
            (NN eye)))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT a) (JJ little) (NN gift))
        (PP (IN in)
          (NP
            (NP (DT the) (NN doorway))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NN praise))
              (NP (DT no) (NN gift))))))
      (VP (MD can)
        (VP (VB buy))))
    (: :)
    (CC But)
    (S
      (S
        (NP
          (PRN (: --)
            (ADVP (RB sure))
            (NP (PRP they))))
        (VP (VBP have)
          (VP (VBD doubted)
            (NP (PRP$ thy) (NNS pictures)))))
      (, ,)
      (CC and)
      (S
        (NP (DT that))
        (VP (VBZ is)
          (NP
            (NP (DT a) (JJ grievous) (NN stain))
            (: --)
            (NP
              (NP (NNP Son))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD can)
                    (VP (VB see)
                      (ADVP (RB so))
                      (ADVP (RB clearly)))
                    (, ,)
                    (VP (VB return)
                      (S
                        (NP (PRP them))
                        (NP (PRP$ their) (NNS gifts)))
                      (ADVP (RB again)))))))))))
    (. !) ('' '')))

cc(do-4, And-2)
nsubj(do-4, now-3)
root(ROOT-0, do-4)
nsubj(press-6, they-5)
ccomp(do-4, press-6)
case(pictures-9, to-7)
nmod:poss(pictures-9, thy-8)
nmod:to(press-6, pictures-9)
case(mouth-13, with-11)
amod(mouth-13, opened-12)
nmod:with(do-4, mouth-13)
cc(mouth-13, and-14)
nmod:with(do-4, eye-15)
conj:and(mouth-13, eye-15)
cc(do-4, And-17)
det(gift-20, a-18)
amod(gift-20, little-19)
nsubj(buy-31, gift-20)
case(doorway-23, in-21)
det(doorway-23, the-22)
nmod:in(gift-20, doorway-23)
cc(doorway-23, and-25)
det(praise-27, the-26)
nmod:in(gift-20, praise-27)
conj:and(doorway-23, praise-27)
neg(gift-29, no-28)
dep(praise-27, gift-29)
aux(buy-31, can-30)
conj:and(do-4, buy-31)
cc(do-4, But-33)
dep(they-36, sure-35)
nsubj(doubted-38, they-36)
aux(doubted-38, have-37)
conj:and(do-4, doubted-38)
nmod:poss(pictures-40, thy-39)
dobj(doubted-38, pictures-40)
cc(doubted-38, and-42)
nsubj(stain-47, that-43)
cop(stain-47, is-44)
det(stain-47, a-45)
amod(stain-47, grievous-46)
conj:and(do-4, stain-47)
conj:and(doubted-38, stain-47)
dep(stain-47, Son-49)
nsubj(see-52, Son-49)
ref(Son-49, that-50)
aux(see-52, can-51)
acl:relcl(Son-49, see-52)
advmod(see-52, so-53)
advmod(see-52, clearly-54)
dep(see-52, return-56)
nsubj(gifts-59, them-57)
nmod:poss(gifts-59, their-58)
xcomp(return-56, gifts-59)
advmod(return-56, again-60)

(ROOT
  (S
    (S (CC And)
      (NP (NNP Ung))
      (VP (VBD looked)
        (PRT (RP down))
        (PP (IN at)
          (NP
            (NP (PRP$ his) (NNS deerskins))
            (: --)
            (NP (PRP$ their) (JJ broad) (JJ shell-tasselled) (NNS bands))))))
    (: --)
    (S (CC And)
      (NP (NNP Ung))
      (VP
        (VP (VBD drew)
          (ADVP (RB downward))
          (NP (PRP$ his) (NN mitten)))
        (CC and)
        (VP (VBD looked)
          (PP (IN at)
            (NP (PRP$ his) (JJ naked) (NNS hands))))))
    (: ;)
    (S
      (S (CC And)
        (NP (PRP he))
        (VP
          (VP (VBD gloved)
            (NP (PRP himself)))
          (CC and)
          (VP (VBD departed))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBD heard)
          (NP (PRP$ his) (NN father))
          (, ,)
          (ADVP (RB behind)))))
    (: :) (`` ``)
    (S
      (NP
        (NP (NNP Son))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB see)
                (ADVP (RB so))
                (ADVP (RB clearly)))))))
      (, ,)
      (VP (VBP rejoice)
        (SBAR (IN that)
          (S
            (NP (PRP$ thy) (NN tribe))
            (VP (VBZ is)
              (ADJP (JJ blind)))))))
    (. !) ('' '')))

cc(looked-3, And-1)
nsubj(looked-3, Ung-2)
root(ROOT-0, looked-3)
compound:prt(looked-3, down-4)
case(deerskins-7, at-5)
nmod:poss(deerskins-7, his-6)
nmod:at(looked-3, deerskins-7)
nmod:poss(bands-12, their-9)
amod(bands-12, broad-10)
amod(bands-12, shell-tasselled-11)
dep(deerskins-7, bands-12)
cc(drew-16, And-14)
nsubj(drew-16, Ung-15)
nsubj(looked-21, Ung-15)
parataxis(looked-3, drew-16)
advmod(drew-16, downward-17)
nmod:poss(mitten-19, his-18)
dobj(drew-16, mitten-19)
cc(drew-16, and-20)
parataxis(looked-3, looked-21)
conj:and(drew-16, looked-21)
case(hands-25, at-22)
nmod:poss(hands-25, his-23)
amod(hands-25, naked-24)
nmod:at(looked-21, hands-25)
cc(gloved-29, And-27)
nsubj(gloved-29, he-28)
nsubj(departed-32, he-28)
parataxis(looked-3, gloved-29)
dobj(gloved-29, himself-30)
cc(gloved-29, and-31)
parataxis(looked-3, departed-32)
conj:and(gloved-29, departed-32)
cc(gloved-29, and-34)
nsubj(heard-36, he-35)
parataxis(looked-3, heard-36)
conj:and(gloved-29, heard-36)
nmod:poss(father-38, his-37)
dobj(heard-36, father-38)
advmod(heard-36, behind-40)
nsubj(see-46, Son-43)
nsubj(rejoice-50, Son-43)
ref(Son-43, that-44)
aux(see-46, can-45)
acl:relcl(Son-43, see-46)
advmod(see-46, so-47)
advmod(see-46, clearly-48)
parataxis(looked-3, rejoice-50)
mark(blind-55, that-51)
nmod:poss(tribe-53, thy-52)
nsubj(blind-55, tribe-53)
cop(blind-55, is-54)
ccomp(rejoice-50, blind-55)

(ROOT
  (S
    (S
      (VP (VB Straight)
        (PP (IN on)
          (NP (DT the) (JJ glittering) (NN ice-field)))
        (, ,)
        (PP (IN by)
          (NP
            (NP (DT the) (NNS caves))
            (PP (IN of)
              (NP (DT the) (VBN lost) (NN Dordogne)))))))
    (, ,)
    (NP
      (NP (NNP Ung))
      (, ,)
      (NP
        (NP (DT a) (NN maker))
        (PP (IN of)
          (NP (NNS pictures))))
      (, ,))
    (VP (VBD fell)
      (PP (TO to)
        (NP
          (NP (PRP$ his) (NN scribing))
          (PP (IN on)
            (NP (NN bone) (RB Even)))))
      (PP (TO to)
        (NP (JJ mammoth) (NNS editions))))
    (. .)))

ccomp(fell-22, Straight-1)
case(ice-field-5, on-2)
det(ice-field-5, the-3)
amod(ice-field-5, glittering-4)
nmod:on(Straight-1, ice-field-5)
case(caves-9, by-7)
det(caves-9, the-8)
nmod:by(Straight-1, caves-9)
case(Dordogne-13, of-10)
det(Dordogne-13, the-11)
amod(Dordogne-13, lost-12)
nmod:of(caves-9, Dordogne-13)
nsubj(fell-22, Ung-15)
det(maker-18, a-17)
appos(Ung-15, maker-18)
case(pictures-20, of-19)
nmod:of(maker-18, pictures-20)
root(ROOT-0, fell-22)
case(scribing-25, to-23)
nmod:poss(scribing-25, his-24)
nmod:to(fell-22, scribing-25)
case(bone-27, on-26)
nmod:on(scribing-25, bone-27)
advmod(bone-27, Even-28)
case(editions-31, to-29)
amod(editions-31, mammoth-30)
nmod:to(fell-22, editions-31)

(ROOT
  (S
    (ADVP (RB Gaily))
    (NP (PRP he))
    (VP
      (VP (VBZ whistled))
      (CC and)
      (VP (VBN sung) (, ,)
        (S
          (VP (VBG Blessing)
            (NP (PRP$ his) (NN tribe))
            (PP (IN for)
              (NP (PRP$ their) (NN blindness)))))))
    (. .)))

advmod(whistled-3, Gaily-1)
nsubj(whistled-3, he-2)
nsubj(sung-5, he-2)
root(ROOT-0, whistled-3)
cc(whistled-3, and-4)
conj:and(whistled-3, sung-5)
xcomp(sung-5, Blessing-7)
nmod:poss(tribe-9, his-8)
dobj(Blessing-7, tribe-9)
case(blindness-12, for-10)
nmod:poss(blindness-12, their-11)
nmod:for(Blessing-7, blindness-12)

(ROOT
  (S
    (NP (NNP _) (NNP Heed))
    (VP (VBZ ye)
      (NP
        (NP (DT the) (NNP Story))
        (PP (IN of)
          (NP (NNP Ung)))))
    (. !)))

compound(Heed-2, _-1)
nsubj(ye-3, Heed-2)
root(ROOT-0, ye-3)
det(Story-5, the-4)
dobj(ye-3, Story-5)
case(Ung-7, of-6)
nmod:of(Story-5, Ung-7)

(ROOT
  (S
    (S
      (VP (VBG _)
        (NP (DT THE) (NN THREE-DECKER) ('' '') (NN _))))
    (NP (DT The) (JJ three-volume) (NN novel))
    (VP (VBZ is)
      (ADJP (JJ extinct)))
    (. .)))

dep(extinct-10, _-1)
det(_-5, THE-2)
compound(_-5, THREE-DECKER-3)
dobj(_-1, _-5)
det(novel-8, The-6)
amod(novel-8, three-volume-7)
nsubj(extinct-10, novel-8)
cop(extinct-10, is-9)
root(ROOT-0, extinct-10)

(ROOT
  (S
    (FRAG
      (ADJP (JJ _)))
    ('' '')
    (NP (NNP Full) (NNP thirty))
    (VP (VBP foot)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD towered)
            (PP (IN from)
              (NP (NN waterline)))
            (PP (TO to)
              (NP (NN rail)))))))
    (. .)))

dep(foot-5, _-1)
compound(thirty-4, Full-3)
nsubj(foot-5, thirty-4)
root(ROOT-0, foot-5)
nsubj(towered-7, she-6)
ccomp(foot-5, towered-7)
case(waterline-9, from-8)
nmod:from(towered-7, waterline-9)
case(rail-11, to-10)
nmod:to(towered-7, rail-11)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD cost)
        (NP (DT a) (NN watch)
          (S
            (VP (TO to)
              (VP
                (VP (VB steer)
                  (NP (PRP her)))
                (, ,)
                (CC and)
                (VP
                  (NP (DT a) (NN week))
                  (S
                    (VP (TO to)
                      (VP (VB shorten)
                        (ADJP (JJ sail))))))))))))
    (: ;)
    (CC But)
    (, ,)
    (S
      (VP (NNP spite)
        (NP (DT all) (JJ modern) (NNS notions))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBD found)
        (NP
          (NP
            (NP (PRP$ her) (JJ first))
            (CC and)
            (NP (JJS best)))
          (: --)
          (NP
            (NP (DT The) (RB only) (JJ certain) (NN packet))
            (PP (IN for)
              (NP
                (NP (DT the) (NNPS Islands))
                (PP (IN of)
                  (NP (DT the) (NNP Blest)))))))))
    (. .)))

nsubj(cost-2, It-1)
root(ROOT-0, cost-2)
det(watch-4, a-3)
dobj(cost-2, watch-4)
mark(steer-6, to-5)
acl(watch-4, steer-6)
dobj(steer-6, her-7)
cc(steer-6, and-9)
det(week-11, a-10)
acl(watch-4, week-11)
conj:and(steer-6, week-11)
mark(shorten-13, to-12)
advcl(week-11, shorten-13)
xcomp(shorten-13, sail-14)
cc(cost-2, But-16)
dep(notions-21, spite-18)
det(notions-21, all-19)
amod(notions-21, modern-20)
conj:But(cost-2, notions-21)
nsubj(found-24, I-23)
conj:But(cost-2, found-24)
nmod:poss(first-26, her-25)
dobj(found-24, first-26)
cc(first-26, and-27)
dobj(found-24, best-28)
conj:and(first-26, best-28)
det(packet-33, The-30)
advmod(packet-33, only-31)
amod(packet-33, certain-32)
dep(first-26, packet-33)
case(Islands-36, for-34)
det(Islands-36, the-35)
nmod:for(packet-33, Islands-36)
case(Blest-39, of-37)
det(Blest-39, the-38)
nmod:of(Islands-36, Blest-39)

(ROOT
  (S
    (S
      (NP (NNP Fair))
      (VP (VBD held)
        (NP (DT the) (NN breeze))
        (PP (IN behind)
          (NP (PRP us)))))
    (: --)
    (S
      (NP (NN 't))
      (VP (VBD was)
        (ADJP (JJ warm)
          (PP (IN with)
            (NP
              (NP (NNS lovers) (POS '))
              (NNS prayers))))))
    (. .)))

nsubj(held-2, Fair-1)
root(ROOT-0, held-2)
det(breeze-4, the-3)
dobj(held-2, breeze-4)
case(us-6, behind-5)
nmod:behind(held-2, us-6)
nsubj(warm-10, 't-8)
cop(warm-10, was-9)
parataxis(held-2, warm-10)
case(prayers-14, with-11)
nmod:poss(prayers-14, lovers-12)
case(lovers-12, '-13)
nmod:with(warm-10, prayers-14)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD 'd)
      (NP
        (NP
          (NP (VBN stolen) (NNS wills))
          (PP (IN for)
            (NP (NN ballast))))
        (CC and)
        (NP
          (NP (DT a) (NN crew))
          (PP (IN of)
            (NP (VBG missing) (NNS heirs))))))
    (. .)))

nsubj('d-2, We-1)
root(ROOT-0, 'd-2)
amod(wills-4, stolen-3)
dobj('d-2, wills-4)
case(ballast-6, for-5)
nmod:for(wills-4, ballast-6)
cc(wills-4, and-7)
det(crew-9, a-8)
dobj('d-2, crew-9)
conj:and(wills-4, crew-9)
case(heirs-12, of-10)
amod(heirs-12, missing-11)
nmod:of(crew-9, heirs-12)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD shipped)
        (PP (IN as)
          (NP (NNP Able) (NNPS Bastards)))
        (SBAR (IN till)
          (S
            (NP (DT the) (NNP Wicked) (NN Nurse))
            (VP (VBD confessed))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP they))
      (VP (VBD worked)
        (NP (DT the) (JJ old) (NN three-decker))
        (PP (TO to)
          (NP
            (NP (DT the) (NNPS Islands))
            (PP (IN of)
              (NP (DT the) (NNP Blest)))))))
    (. .)))

nsubj(shipped-2, They-1)
root(ROOT-0, shipped-2)
case(Bastards-5, as-3)
compound(Bastards-5, Able-4)
nmod:as(shipped-2, Bastards-5)
mark(confessed-10, till-6)
det(Nurse-9, the-7)
compound(Nurse-9, Wicked-8)
nsubj(confessed-10, Nurse-9)
advcl(shipped-2, confessed-10)
cc(shipped-2, And-12)
nsubj(worked-14, they-13)
conj:and(shipped-2, worked-14)
det(three-decker-17, the-15)
amod(three-decker-17, old-16)
dobj(worked-14, three-decker-17)
case(Islands-20, to-18)
det(Islands-20, the-19)
nmod:to(worked-14, Islands-20)
case(Blest-23, of-21)
det(Blest-23, the-22)
nmod:of(Islands-20, Blest-23)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP (NNS ways)))
      (NP (DT no) (NN gaze))
      (VP (MD could)
        (VP (VB follow)
          (PRN (, ,)
            (S
              (NP (DT a) (NN course))
              (VP (VBD unspoiled)
                (PP (IN of)
                  (NP
                    (ADJP (JJ Cook) (, ,) (IN Per) (JJ Fancy) (, ,))
                    (NN fleetest)))
                (PP (IN in)
                  (NP (NN man)))))
            (, ,))
          (NP
            (NP (PRP$ our) (VBN titled) (NNS berths))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBD took)))))
          (PP (IN With)
            (NP
              (NP (NNS maids))
              (PP (IN of)
                (NP
                  (NP (NNS matchless) (NN beauty)
                    (CC and)
                    (NN parentage))
                  (VP (VBN unguessed)))))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT a) (NN Church))
        (PP (IN of)
          (NP (NNP England))))
      (VP (VBN parson)
        (PP (IN for)
          (NP
            (NP (DT the) (NNPS Islands))
            (PP (IN of)
              (NP (DT the) (NNP Blest)))))))
    (. .)))

case(ways-2, By-1)
nmod:by(follow-6, ways-2)
neg(gaze-4, no-3)
nsubj(follow-6, gaze-4)
aux(follow-6, could-5)
root(ROOT-0, follow-6)
det(course-9, a-8)
nsubj(unspoiled-10, course-9)
parataxis(follow-6, unspoiled-10)
case(fleetest-17, of-11)
amod(Fancy-15, Cook-12)
dep(Fancy-15, Per-14)
amod(fleetest-17, Fancy-15)
nmod:of(unspoiled-10, fleetest-17)
case(man-19, in-18)
nmod:in(unspoiled-10, man-19)
nmod:poss(berths-23, our-21)
amod(berths-23, titled-22)
dobj(follow-6, berths-23)
nsubj(took-25, we-24)
acl:relcl(berths-23, took-25)
case(maids-27, With-26)
nmod:with(follow-6, maids-27)
case(beauty-30, of-28)
compound(beauty-30, matchless-29)
nmod:of(maids-27, beauty-30)
cc(beauty-30, and-31)
nmod:of(maids-27, parentage-32)
conj:and(beauty-30, parentage-32)
acl(beauty-30, unguessed-33)
cc(follow-6, And-35)
det(Church-37, a-36)
nsubj(parson-40, Church-37)
case(England-39, of-38)
nmod:of(Church-37, England-39)
conj:and(follow-6, parson-40)
case(Islands-43, for-41)
det(Islands-43, the-42)
nmod:for(parson-40, Islands-43)
case(Blest-46, of-44)
det(Blest-46, the-45)
nmod:of(Islands-43, Blest-46)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD asked)
        (NP (DT no) (JJ social) (NNS questions))))
    (: --)
    (S
      (NP (PRP we))
      (VP (VBD pumped)
        (NP (DT no) (JJ hidden) (NN shame))))
    (: --)
    (S
      (NP (PRP We))
      (ADVP (RB never))
      (VP (VBD talked)
        (NP (NNS obstetrics))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NNP Little) (NNP Stranger))
            (VP (VBD came))))))
    (: :)
    (S
      (NP (PRP We))
      (VP (VBD left)
        (NP (DT the) (NN Lord))
        (PP (IN in)
          (NP (NNP Heaven)))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBD left)
        (NP (DT the) (NNS fiends))
        (PP (IN in)
          (NP (NNP Hell)))))
    (. .)))

nsubj(asked-2, We-1)
root(ROOT-0, asked-2)
neg(questions-5, no-3)
amod(questions-5, social-4)
dobj(asked-2, questions-5)
nsubj(pumped-8, we-7)
parataxis(asked-2, pumped-8)
neg(shame-11, no-9)
amod(shame-11, hidden-10)
dobj(pumped-8, shame-11)
nsubj(talked-15, We-13)
neg(talked-15, never-14)
parataxis(asked-2, talked-15)
dobj(talked-15, obstetrics-16)
advmod(came-21, when-17)
det(Stranger-20, the-18)
compound(Stranger-20, Little-19)
nsubj(came-21, Stranger-20)
advcl(talked-15, came-21)
nsubj(left-24, We-23)
parataxis(asked-2, left-24)
det(Lord-26, the-25)
dobj(left-24, Lord-26)
case(Heaven-28, in-27)
nmod:in(left-24, Heaven-28)
nsubj(left-31, we-30)
parataxis(asked-2, left-31)
det(fiends-33, the-32)
dobj(left-31, fiends-33)
case(Hell-35, in-34)
nmod:in(left-31, Hell-35)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD were) (RB n't)
        (ADVP (RB exactly))
        (NP (NNS Yussufs))))
    (, ,)
    (CC but)
    (S
      (LST (: --))
      (NP (NNP Zuleika))
      (VP (VBD did) (RB n't)
        (VP (VB tell))))
    (. .)))

nsubj(Yussufs-5, We-1)
cop(Yussufs-5, were-2)
neg(Yussufs-5, n't-3)
advmod(Yussufs-5, exactly-4)
root(ROOT-0, Yussufs-5)
cc(Yussufs-5, but-7)
nsubj(tell-12, Zuleika-9)
aux(tell-12, did-10)
neg(tell-12, n't-11)
conj:but(Yussufs-5, tell-12)

(ROOT
  (S
    (S
      (NP (DT No) (JJ moral) (NN doubt))
      (VP (VBD assailed)
        (NP (PRP us))))
    (, ,) (IN so)
    (S
      (SBAR
        (WHADVP (WRB when)
          (NP (DT the) (NN port)))
        (S
          (NP (PRP we))
          (VP (VBD neared))))
      (, ,)
      (NP (DT The) (NN villain))
      (VP (VBD had)
        (NP
          (NP (PRP$ his) (NN flogging))
          (PP (IN at)
            (NP (DT the) (NN gangway))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBD cheered)))
    (. .)))

neg(doubt-3, No-1)
amod(doubt-3, moral-2)
nsubj(assailed-4, doubt-3)
root(ROOT-0, assailed-4)
dobj(assailed-4, us-5)
dep(assailed-4, so-7)
advmod(neared-12, when-8)
det(port-10, the-9)
dep(when-8, port-10)
nsubj(neared-12, we-11)
advcl(had-16, neared-12)
det(villain-15, The-14)
nsubj(had-16, villain-15)
ccomp(assailed-4, had-16)
nmod:poss(flogging-18, his-17)
dobj(had-16, flogging-18)
case(gangway-21, at-19)
det(gangway-21, the-20)
nmod:at(flogging-18, gangway-21)
cc(assailed-4, and-23)
nsubj(cheered-25, we-24)
conj:and(assailed-4, cheered-25)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (NP
          (NP
            (NP (NN fiddle))
            (PP (IN in)
              (NP
                (NP (DT the) (NN forc) (POS 's))
                (`` `) (NNP le))))
          (: --)
          (S
            (S
              (NP (NN 't))
              (VP (VBD was)
                (NP
                  (NP (NNS garlands))
                  (PP (IN on)
                    (NP (DT the) (NN mast))))))
            (, ,) (IN For)
            (S
              (NP (DT every) (NN one))
              (VP (VBD got)
                (ADJP (JJ married))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD went)
        (ADVP (RB ashore))
        (PP (IN at)
          (NP (JJ last)))))
    (. .)))

nsubj(fiddle-3, 'T-1)
cop(fiddle-3, was-2)
root(ROOT-0, fiddle-3)
case(le-9, in-4)
det(forc-6, the-5)
nmod:poss(le-9, forc-6)
case(forc-6, 's-7)
nmod:in(fiddle-3, le-9)
nsubj(garlands-13, 't-11)
cop(garlands-13, was-12)
parataxis(fiddle-3, garlands-13)
case(mast-16, on-14)
det(mast-16, the-15)
nmod:on(garlands-13, mast-16)
dep(garlands-13, For-18)
det(one-20, every-19)
nsubj(got-21, one-20)
parataxis(garlands-13, got-21)
xcomp(got-21, married-22)
cc(fiddle-3, and-24)
nsubj(went-26, I-25)
conj:and(fiddle-3, went-26)
advmod(went-26, ashore-27)
case(last-29, at-28)
nmod:at(went-26, last-29)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD left)
      (NP (PRP 'em))
      (PP (DT all) (IN in)
        (NP
          (NP (NNS couples))
          (VP (VBG a-kissing)
            (PP (IN on)
              (NP (DT the) (NNS decks)))))))
    (. .)))

nsubj(left-2, I-1)
root(ROOT-0, left-2)
dobj(left-2, 'em-3)
dep(couples-6, all-4)
case(couples-6, in-5)
nmod:in(left-2, couples-6)
acl(couples-6, a-kissing-7)
case(decks-10, on-8)
det(decks-10, the-9)
nmod:on(a-kissing-7, decks-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD left)
      (S
        (NP
          (NP (DT the) (NNS lovers) (NN loving))
          (CC and)
          (NP (DT the) (NNS parents)))
        (VP (VBG signing)
          (NP (NNS cheques)))))
    (. .)))

nsubj(left-2, I-1)
root(ROOT-0, left-2)
det(loving-5, the-3)
compound(loving-5, lovers-4)
nsubj(signing-9, loving-5)
cc(loving-5, and-6)
det(parents-8, the-7)
conj:and(loving-5, parents-8)
nsubj(signing-9, parents-8)
dep(left-2, signing-9)
dobj(signing-9, cheques-10)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (JJ endless) (JJ English) (NN comfort))
        (PP (IN by)
          (NP (JJ county-folk) (NN caressed)))))
    (, ,)
    (NP (PRP I))
    (VP (VBD left)
      (NP (DT the) (JJ old) (NN three-decker))
      (PP (IN at)
        (NP
          (NP (DT the) (NNPS Islands))
          (PP (IN of)
            (NP (DT the) (NNP Blest))))))
    (. !)))

case(comfort-4, In-1)
amod(comfort-4, endless-2)
amod(comfort-4, English-3)
nmod:in(left-10, comfort-4)
case(caressed-7, by-5)
amod(caressed-7, county-folk-6)
nmod:by(comfort-4, caressed-7)
nsubj(left-10, I-9)
root(ROOT-0, left-10)
det(three-decker-13, the-11)
amod(three-decker-13, old-12)
dobj(left-10, three-decker-13)
case(Islands-16, at-14)
det(Islands-16, the-15)
nmod:at(left-10, Islands-16)
case(Blest-19, of-17)
det(Blest-19, the-18)
nmod:of(Islands-16, Blest-19)

(ROOT
  (S
    (S
      (NP (DT That) (NN route))
      (VP (VBZ is)
        (VP (VBN barred)
          (PP (TO to)
            (NP (NNS steamers))))))
    (: :)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (ADVP (RB never))
        (VP (VB lift)
          (ADVP (RB again))
          (NP
            (NP (PRP$ Our) (JJ purple-painted) (NNS headlands))
            (CC or)
            (NP
              (NP (DT the) (JJ lordly) (NN keeps))
              (PP (IN of)
                (NP (NNP Spain))))))))
    (. .)))

det(route-2, That-1)
nsubjpass(barred-4, route-2)
auxpass(barred-4, is-3)
root(ROOT-0, barred-4)
case(steamers-6, to-5)
nmod:to(barred-4, steamers-6)
nsubj(lift-11, you-8)
aux(lift-11, 'll-9)
neg(lift-11, never-10)
parataxis(barred-4, lift-11)
advmod(lift-11, again-12)
nmod:poss(headlands-15, Our-13)
amod(headlands-15, purple-painted-14)
dobj(lift-11, headlands-15)
cc(headlands-15, or-16)
det(keeps-19, the-17)
amod(keeps-19, lordly-18)
dobj(lift-11, keeps-19)
conj:or(headlands-15, keeps-19)
case(Spain-21, of-20)
nmod:of(keeps-19, Spain-21)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're)
      (ADVP (RB just))
      (PP (IN beyond)
        (NP (PRP$ your) (NN skyline)))
      (, ,)
      (S
        (NP (NN howe'er))
        (ADJP (RB so) (JJ far)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP cruise)))))
        (PP (IN In)
          (NP
            (NP (DT a) (JJ ram-you-damn-you) (NN liner))
            (PP (IN with)
              (NP
                (NP (DT a) (NN brace))
                (PP (IN of)
                  (S
                    (VP (VBG bucking)
                      (NP (NNS screws)))))))))))
    (. .)))

nsubj(skyline-6, They-1)
cop(skyline-6, 're-2)
advmod(skyline-6, just-3)
case(skyline-6, beyond-4)
nmod:poss(skyline-6, your-5)
root(ROOT-0, skyline-6)
nsubj(far-10, howe'er-8)
advmod(far-10, so-9)
xcomp(skyline-6, far-10)
nsubj(cruise-12, you-11)
ccomp(far-10, cruise-12)
case(liner-16, In-13)
det(liner-16, a-14)
amod(liner-16, ram-you-damn-you-15)
dep(far-10, liner-16)
case(brace-19, with-17)
det(brace-19, a-18)
nmod:with(liner-16, brace-19)
mark(bucking-21, of-20)
acl(brace-19, bucking-21)
dobj(bucking-21, screws-22)

(ROOT
  (S
    (NP (NNP Swing))
    (VP (VBP round)
      (NP
        (NP (PRP$ your) (JJ aching) (NN search-light))
        (: --) (`` `)
        (NP
          (NP (JJ twill) (NN show))
          (NP
            (NP (DT no) (NN haven) (POS 's))
            (NN peace)))))
    (. .)))

nsubj(round-2, Swing-1)
root(ROOT-0, round-2)
nmod:poss(search-light-5, your-3)
amod(search-light-5, aching-4)
dobj(round-2, search-light-5)
amod(show-9, twill-8)
dep(search-light-5, show-9)
neg(haven-11, no-10)
nmod:poss(peace-13, haven-11)
case(haven-11, 's-12)
dep(show-9, peace-13)

(ROOT
  (S
    (VP (VB Ay) (, ,) (VB blow)
      (NP (PRP$ your) (JJ shrieking) (NNS sirens))
      (PP (TO to)
        (NP (DT the) (JJ deaf) (, ,) (JJ gray-bearded) (NNS seas))))
    (. !)))

root(ROOT-0, Ay-1)
dep(Ay-1, blow-3)
nmod:poss(sirens-6, your-4)
amod(sirens-6, shrieking-5)
dobj(Ay-1, sirens-6)
case(seas-12, to-7)
det(seas-12, the-8)
amod(seas-12, deaf-9)
amod(seas-12, gray-bearded-11)
nmod:to(Ay-1, seas-12)

(ROOT
  (S
    (S
      (VP (VB Boom)
        (PRT (RP out))
        (NP (DT the) (JJ dripping) (NNS oil-bags))
        (S
          (VP (TO to)
            (VP (VB skin)
              (NP
                (NP (DT the) (JJ deep) (POS 's))
                (NN unrest)))))))
    (: --)
    (S (CC And)
      (NP (PRP you))
      (VP (VBP are) (RB n't)
        (NP
          (NP (CD one) (NN knot))
          (NP
            (NP (DT the) (NN nearer))
            (PP (TO to)
              (NP (DT the) (NNPS Islands)))
            (PP (IN of)
              (NP (DT the) (NNP Blest)))))))
    (. !)))

root(ROOT-0, Boom-1)
compound:prt(Boom-1, out-2)
det(oil-bags-5, the-3)
amod(oil-bags-5, dripping-4)
dobj(Boom-1, oil-bags-5)
mark(skin-7, to-6)
advcl(Boom-1, skin-7)
det(deep-9, the-8)
nmod:poss(unrest-11, deep-9)
case(deep-9, 's-10)
dobj(skin-7, unrest-11)
cc(knot-18, And-13)
nsubj(knot-18, you-14)
cop(knot-18, are-15)
neg(knot-18, n't-16)
nummod(knot-18, one-17)
parataxis(Boom-1, knot-18)
det(nearer-20, the-19)
dep(knot-18, nearer-20)
case(Islands-23, to-21)
det(Islands-23, the-22)
nmod:to(nearer-20, Islands-23)
case(Blest-26, of-24)
det(Blest-26, the-25)
nmod:of(nearer-20, Blest-26)

(ROOT
  (S (CC But)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (VP
            (VP (VBG threshing))
            (, ,)
            (VP (VBN crippled) (, ,)
              (PP (IN with)
                (NP (JJ broken) (NN bridge)
                  (CC and)
                  (NN rail)))
              (, ,)
              (S
                (PP (IN At)
                  (NP
                    (NP (DT a) (NN drogue))
                    (PP (IN of)
                      (NP (JJ dead) (NNS convictions)))))
                (VP (TO to)
                  (VP (VB hold)
                    (S
                      (NP (PRP you))
                      (VP (VB head)
                        (PP (TO to)
                          (NP
                            (NP (NN gale))
                            (, ,)
                            (NP
                              (NP (NNP Calm))
                              (PP (IN as)
                                (NP (DT the) (NNP Flying) (NNP Dutchman)))))))))))
              (, ,)
              (PP (IN from)
                (NP (NN truck)
                  (S
                    (VP (TO to)
                      (VP (VB taffrail)
                        (VP (VBN dressed))))))))))))
    (, ,)
    (NP (PRP You))
    (VP (MD 'll)
      (VP (VB see)
        (NP (DT the) (JJ old) (NN three-decker))
        (PP (IN for)
          (NP
            (NP (DT the) (NNPS Islands))
            (PP (IN of)
              (NP (DT the) (NNP Blest)))))))
    (. .)))

cc(see-42, But-1)
advmod(threshing-5, when-2)
nsubj(threshing-5, you-3)
aux(threshing-5, 're-4)
advcl(see-42, threshing-5)
dep(threshing-5, crippled-7)
case(bridge-11, with-9)
amod(bridge-11, broken-10)
nmod:with(crippled-7, bridge-11)
cc(bridge-11, and-12)
nmod:with(crippled-7, rail-13)
conj:and(bridge-11, rail-13)
case(drogue-17, At-15)
det(drogue-17, a-16)
nmod:at(hold-22, drogue-17)
case(convictions-20, of-18)
amod(convictions-20, dead-19)
nmod:of(drogue-17, convictions-20)
mark(hold-22, to-21)
xcomp(crippled-7, hold-22)
nsubj(head-24, you-23)
ccomp(hold-22, head-24)
case(gale-26, to-25)
nmod:to(head-24, gale-26)
appos(gale-26, Calm-28)
case(Dutchman-32, as-29)
det(Dutchman-32, the-30)
compound(Dutchman-32, Flying-31)
nmod:as(Calm-28, Dutchman-32)
case(truck-35, from-34)
nmod:from(crippled-7, truck-35)
mark(taffrail-37, to-36)
acl(truck-35, taffrail-37)
dep(taffrail-37, dressed-38)
nsubj(see-42, You-40)
aux(see-42, 'll-41)
root(ROOT-0, see-42)
det(three-decker-45, the-43)
amod(three-decker-45, old-44)
dobj(see-42, three-decker-45)
case(Islands-48, for-46)
det(Islands-48, the-47)
nmod:for(see-42, Islands-48)
case(Blest-51, of-49)
det(Blest-51, the-50)
nmod:of(Islands-48, Blest-51)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB see)
          (NP (PRP$ her) (JJ tiering) (NN canvas))
          (PP (IN in)
            (NP (JJ sheeted) (NN silver) (NN spread))))))
    (: ;)
    (S
      (NP (PRP You))
      (VP (MD 'll)
        (VP (VB hear)
          (S
            (NP (DT the) (JJ long-drawn) (NN thunder))
            (VP (`` `) (VB neath)
              (S
                (NP (PRP her))
                (VP (VBG leaping)
                  (ADJP (JJ figure-head)))))))))
    (: ;)
    (S
      (SBAR (IN While)
        (FRAG
          (PP
            (ADVP (RB far))
            (, ,)
            (ADVP (RB so) (RB far))
            (IN above)
            (NP (PRP you)))))
      (, ,)
      (NP (PRP$ her) (JJ tall) (NNS poop-lanterns))
      (VP (VBP shine)
        (NP (NNP Unvexed))
        (PP (IN by)
          (NP (NN wind)
            (CC or)
            (NN weather)))
        (SBAR (IN like)
          (S
            (NP (DT the) (NNS candles))
            (VP (VBP round)
              (NP (DT a) (NN shrine)))))))
    (. !)))

nsubj(see-3, You-1)
aux(see-3, 'll-2)
root(ROOT-0, see-3)
nmod:poss(canvas-6, her-4)
amod(canvas-6, tiering-5)
dobj(see-3, canvas-6)
case(spread-10, in-7)
amod(spread-10, sheeted-8)
compound(spread-10, silver-9)
nmod:in(see-3, spread-10)
nsubj(hear-14, You-12)
aux(hear-14, 'll-13)
parataxis(see-3, hear-14)
det(thunder-17, the-15)
amod(thunder-17, long-drawn-16)
nsubj(neath-19, thunder-17)
ccomp(hear-14, neath-19)
nsubj(leaping-21, her-20)
dep(neath-19, leaping-21)
xcomp(leaping-21, figure-head-22)
mark(you-30, While-24)
advmod(you-30, far-25)
advmod(far-28, so-27)
advmod(you-30, far-28)
case(you-30, above-29)
advcl(shine-35, you-30)
nmod:poss(poop-lanterns-34, her-32)
amod(poop-lanterns-34, tall-33)
nsubj(shine-35, poop-lanterns-34)
parataxis(see-3, shine-35)
dobj(shine-35, Unvexed-36)
case(wind-38, by-37)
nmod:by(shine-35, wind-38)
cc(wind-38, or-39)
nmod:by(shine-35, weather-40)
conj:or(wind-38, weather-40)
mark(round-44, like-41)
det(candles-43, the-42)
nsubj(round-44, candles-43)
advcl(shine-35, round-44)
det(shrine-46, a-45)
dobj(round-44, shrine-46)

(ROOT
  (S
    (NP (NNP Hull))
    (ADVP (RB down))
    (PRN (: --)
      (S
        (VP (VB hull)
          (ADVP (IN down)
            (CC and)
            (IN under))))
      (: --))
    (NP (PRP she))
    (VP (VBZ dwindles)
      (PP (TO to)
        (NP
          (NP (DT a) (NN speck))
          (, ,)
          (UCP
            (PP (IN With)
              (NP
                (NP (NN noise))
                (PP (IN of)
                  (NP (JJ pleasant) (NN music)))))
            (CC and)
            (VP (VBG dancing)
              (PP (IN on)
                (NP (PRP$ her) (NN deck))))))))
    (. .)))

nsubj(dwindles-10, Hull-1)
advmod(dwindles-10, down-2)
parataxis(dwindles-10, hull-4)
case(and-6, down-5)
advmod(hull-4, and-6)
case(and-6, under-7)
nsubj(dwindles-10, she-9)
root(ROOT-0, dwindles-10)
case(speck-13, to-11)
det(speck-13, a-12)
nmod:to(dwindles-10, speck-13)
case(noise-16, With-15)
nmod:with(speck-13, noise-16)
case(music-19, of-17)
amod(music-19, pleasant-18)
nmod:of(noise-16, music-19)
cc(noise-16, and-20)
nmod:with(speck-13, dancing-21)
conj:and(noise-16, dancing-21)
case(deck-24, on-22)
nmod:poss(deck-24, her-23)
nmod:on(dancing-21, deck-24)

(ROOT
  (S
    (S
      (NP (DT All))
      (VP (VBZ 's)
        (ADVP (RB well))))
    (: --)
    (S
      (NP (DT all))
      (VP (VBZ 's)
        (ADVP (RB well))
        (PP (IN aboard)
          (NP (PRP her)))))
    (: --)
    (S
      (NP (PRP she))
      (VP (VBZ 's)
        (VP (VBN left)
          (NP (PRP you))
          (ADVP (RB far) (RB behind)))))
    (, ,)
    (PP (IN With)
      (NP
        (NP (DT a) (NN scent))
        (PP (IN of)
          (NP
            (NP (JJ old-world) (NNS roses))
            (PP (IN through)
              (NP
                (NP (DT the) (NN fog))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ ties)
                      (S
                        (NP (PRP you))
                        (ADJP (JJ blind))))))))))))
    (. .)))

nsubj('s-2, All-1)
root(ROOT-0, 's-2)
advmod('s-2, well-3)
nsubj(her-9, all-5)
cop(her-9, 's-6)
advmod(her-9, well-7)
case(her-9, aboard-8)
parataxis('s-2, her-9)
nsubjpass(left-13, she-11)
auxpass(left-13, 's-12)
parataxis('s-2, left-13)
dobj(left-13, you-14)
advmod(behind-16, far-15)
advmod(left-13, behind-16)
case(scent-20, With-18)
det(scent-20, a-19)
nmod:with('s-2, scent-20)
case(roses-23, of-21)
amod(roses-23, old-world-22)
nmod:of(scent-20, roses-23)
case(fog-26, through-24)
det(fog-26, the-25)
nmod:through(roses-23, fog-26)
nsubj(ties-28, fog-26)
ref(fog-26, that-27)
acl:relcl(fog-26, ties-28)
nsubj(blind-30, you-29)
xcomp(ties-28, blind-30)

(ROOT
  (S
    (NP (PRP$ Her) (NN crew))
    (VP (VBP are)
      (ADJP (JJ babes)
        (CC or)
        (JJ madmen)))
    (. ?)))

nmod:poss(crew-2, Her-1)
nsubj(babes-4, crew-2)
nsubj(madmen-6, crew-2)
cop(babes-4, are-3)
root(ROOT-0, babes-4)
cc(babes-4, or-5)
conj:or(babes-4, madmen-6)

(ROOT
  (S
    (NP (PRP$ Her) (NN port))
    (VP (VBZ is)
      (S (RB all)
        (VP (TO to)
          (VP (VB make)))))
    (. ?)))

nmod:poss(port-2, Her-1)
nsubj(is-3, port-2)
nsubj:xsubj(make-6, port-2)
root(ROOT-0, is-3)
advmod(make-6, all-4)
mark(make-6, to-5)
xcomp(is-3, make-6)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (VP (VBG manned)
          (PP (IN by)
            (NP (NNP Truth)
              (CC and)
              (NNP Science))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (NP
        (NP (NN steam))
        (PP (IN for)
          (NP
            (NP (NNP steaming) (POS 's))
            (NN sake)))))
    (. ?)))

nsubj(manned-3, You-1)
aux(manned-3, 're-2)
root(ROOT-0, manned-3)
case(Truth-5, by-4)
nmod:by(manned-3, Truth-5)
cc(Truth-5, and-6)
nmod:by(manned-3, Science-7)
conj:and(Truth-5, Science-7)
cc(manned-3, and-9)
dep(steam-11, you-10)
conj:and(manned-3, steam-11)
case(sake-15, for-12)
nmod:poss(sake-15, steaming-13)
case(steaming-13, 's-14)
nmod:for(steam-11, sake-15)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (VP (VB tinker)
      (PRT (RP up))
      (NP
        (NP (PRP$ your) (NNS engines))
        (PRN (: --)
          (S
            (NP (PRP you))
            (VP (VBP know)
              (NP (PRP$ your) (NN business))
              (ADVP (RBS best))))
          (: --))
        (VP (VBN _)
          (SBAR
            (S
              (NP (PRP She))
              (ADVP (RB _))
              (VP (VBZ 's)
                (VP (VBG taking)
                  (NP (JJ tired) (NNS people))
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NNPS Islands))
                      (PP (IN of)
                        (NP (DT the) (NNP Blest))))))))))))
    (. !)))

discourse(tinker-3, Well-1)
root(ROOT-0, tinker-3)
compound:prt(tinker-3, up-4)
nmod:poss(engines-6, your-5)
dobj(tinker-3, engines-6)
nsubj(know-9, you-8)
parataxis(_-14, know-9)
nmod:poss(business-11, your-10)
dobj(know-9, business-11)
advmod(know-9, best-12)
acl(engines-6, _-14)
nsubj(taking-18, She-15)
advmod(taking-18, _-16)
aux(taking-18, 's-17)
ccomp(_-14, taking-18)
amod(people-20, tired-19)
dobj(taking-18, people-20)
case(Islands-23, to-21)
det(Islands-23, the-22)
nmod:to(taking-18, Islands-23)
case(Blest-26, of-24)
det(Blest-26, the-25)
nmod:of(Islands-23, Blest-26)

(ROOT
  (FRAG
    (NP (DT AN) (NNP AMERICAN))
    (SBAR
      (S
        (NP (DT The) (JJ American) (NN Spirit))
        (VP (VBZ speaks))))
    (: :) (`` ``)
    (S
      (S
        (SBAR (IN If)
          (S
            (S
              (NP (DT the) (NNP Led) (NNP Striker))
              (VP (VBP call)
                (S
                  (NP (PRP it))
                  (NP (DT a) (NN strike)))))
            (, ,)
            (CC Or)
            (S
              (NP (DT the) (NNS papers))
              (VP (VBP call)
                (S
                  (NP (PRP it))
                  (NP (DT a) (NN war)))))))
        (, ,)
        (NP (PRP They))
        (VP (VBP know)
          (ADVP
            (ADVP (RB not) (RB much))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (ADJP (JJ like))))))))
      (, ,)
      (CC Nor)
      (S
        (X (WP what))
        (NP (PRP he))
        (VP (VBZ is) (, ,)
          (NP (PRP$ my) (NN Avatar)))))
    (. .) ('' '')))

det(AMERICAN-2, AN-1)
root(ROOT-0, AMERICAN-2)
det(Spirit-5, The-3)
amod(Spirit-5, American-4)
nsubj(speaks-6, Spirit-5)
dep(AMERICAN-2, speaks-6)
mark(call-13, If-9)
det(Striker-12, the-10)
compound(Striker-12, Led-11)
nsubj(call-13, Striker-12)
advcl(know-27, call-13)
nsubj(strike-16, it-14)
det(strike-16, a-15)
xcomp(call-13, strike-16)
cc(call-13, Or-18)
det(papers-20, the-19)
nsubj(call-21, papers-20)
conj:or(call-13, call-21)
advcl(know-27, call-21)
nsubj(war-24, it-22)
det(war-24, a-23)
xcomp(call-21, war-24)
nsubj(know-27, They-26)
dep(AMERICAN-2, know-27)
dep(much-29, not-28)
advmod(know-27, much-29)
dobj(like-33, what-30)
nsubj(like-33, I-31)
cop(like-33, am-32)
advcl(much-29, like-33)
cc(know-27, Nor-35)
dep(Avatar-41, what-36)
nsubj(Avatar-41, he-37)
cop(Avatar-41, is-38)
nmod:poss(Avatar-41, my-40)
dep(AMERICAN-2, Avatar-41)
conj:nor(know-27, Avatar-41)

(ROOT
  (S
    (PP (IN Through)
      (NP (JJ many) (NNS roads)))
    (, ,)
    (S
      (PP (IN by)
        (S
          (NP (PRP me))
          (VP (VBN possessed))))
      (, ,)
      (NP (PRP He))
      (VP (VBD shambles)
        (ADVP (RB forth))
        (PP (IN in)
          (NP (JJ cosmic) (NN guise)))))
    (: ;)
    (S
      (S
        (NP (PRP He))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN Jester))
            (CC and)
            (NP (DT the) (NN Jest)))))
      (, ,)
      (CC And)
      (S
        (NP (PRP he) (DT the))
        (VP (VBD Text)
          (SBAR
            (S
              (NP (PRP himself))
              (VP (VBZ applies)))))))
    (. .)))

case(roads-3, Through-1)
amod(roads-3, many-2)
nmod:through(shambles-10, roads-3)
mark(possessed-7, by-5)
nsubj(possessed-7, me-6)
advcl(shambles-10, possessed-7)
nsubj(shambles-10, He-9)
root(ROOT-0, shambles-10)
advmod(shambles-10, forth-11)
case(guise-14, in-12)
amod(guise-14, cosmic-13)
nmod:in(shambles-10, guise-14)
nsubj(Jester-19, He-16)
cop(Jester-19, is-17)
det(Jester-19, the-18)
parataxis(shambles-10, Jester-19)
cc(Jester-19, and-20)
det(Jest-22, the-21)
parataxis(shambles-10, Jest-22)
conj:and(Jester-19, Jest-22)
cc(Jester-19, And-24)
nsubj(Text-27, he-25)
dep(he-25, the-26)
parataxis(shambles-10, Text-27)
conj:and(Jester-19, Text-27)
nsubj(applies-29, himself-28)
ccomp(Text-27, applies-29)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNP Celt))
        (VP (VBZ is)
          (PP (IN in)
            (NP (PRP$ his) (NN heart)
              (CC and)
              (NN hand)))))
      (, ,)
      (NP (DT The) (NNP Gaul))
      (VP (VBZ is)
        (PP (IN in)
          (NP (PRP$ his) (NN brain)
            (CC and)
            (NN nerve)))))
    (: ;)
    (S
      (SBAR
        (WHADVP (WRB Where))
        (, ,)
        (S
          (NP (NN cosmopolitanly))
          (VP (VBD planned))))
      (, ,)
      (NP (PRP He))
      (VP (VBZ guards)
        (NP
          (NP (DT the) (NNP Redskin) (POS 's))
          (JJ dry) (NN reserve))))
    (. .)))

det(Celt-2, The-1)
nsubj(heart-6, Celt-2)
cop(heart-6, is-3)
case(heart-6, in-4)
nmod:poss(heart-6, his-5)
ccomp(brain-15, heart-6)
cc(heart-6, and-7)
conj:and(heart-6, hand-8)
ccomp(brain-15, hand-8)
det(Gaul-11, The-10)
nsubj(brain-15, Gaul-11)
cop(brain-15, is-12)
case(brain-15, in-13)
nmod:poss(brain-15, his-14)
root(ROOT-0, brain-15)
cc(brain-15, and-16)
conj:and(brain-15, nerve-17)
advmod(planned-22, Where-19)
nsubj(planned-22, cosmopolitanly-21)
advcl(guards-25, planned-22)
nsubj(guards-25, He-24)
parataxis(brain-15, guards-25)
det(Redskin-27, the-26)
nmod:poss(reserve-30, Redskin-27)
case(Redskin-27, 's-28)
amod(reserve-30, dry-29)
dobj(guards-25, reserve-30)

(ROOT
  (S
    (S
      (NP (PRP$ His) (JJ easy) (NN unswept))
      (VP (VBP hearth)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBZ lends)
              (PP (IN From)
                (NP (NNP Labrador)))
              (PP (TO to)
                (NP (NNP Guadeloupe))))))))
    (: ;)
    (S
      (INTJ (UH Till))
      (, ,)
      (S
        (VP (VBN elbowed)
          (PRT (RP out))
          (PP (IN by)
            (NP (NN sloven) (NNS friends)))))
      (, ,)
      (NP (PRP He))
      (VP (VBD camps) (, ,)
        (PP (IN at)
          (NP (NN sufferance)))
        (, ,)
        (PP (IN on)
          (NP (DT the) (NN stoop)))))
    (. .)))

nmod:poss(unswept-3, His-1)
amod(unswept-3, easy-2)
nsubj(hearth-4, unswept-3)
root(ROOT-0, hearth-4)
nsubj(lends-6, he-5)
ccomp(hearth-4, lends-6)
case(Labrador-8, From-7)
nmod:from(lends-6, Labrador-8)
case(Guadeloupe-10, to-9)
nmod:to(lends-6, Guadeloupe-10)
discourse(camps-21, Till-12)
advcl(camps-21, elbowed-14)
compound:prt(elbowed-14, out-15)
case(friends-18, by-16)
compound(friends-18, sloven-17)
nmod:by(elbowed-14, friends-18)
nsubj(camps-21, He-20)
parataxis(hearth-4, camps-21)
case(sufferance-24, at-23)
nmod:at(camps-21, sufferance-24)
case(stoop-28, on-26)
det(stoop-28, the-27)
nmod:on(camps-21, stoop-28)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Calm-eyed))
        (NP (PRP he))
        (VP (VBZ scoffs)
          (PP (IN at)
            (NP (NN sword)
              (CC and)
              (NN crown)))))
      (, ,)
      (CC Or)
      (S
        (S
          (NP (JJ panic-blinded) (NNS stabs)
            (CC and)
            (NNS slays))
          (: :)
          (ADVP (RB Blatant))
          (NP (PRP he))
          (VP (VBZ bids)
            (S
              (NP (DT the) (NN world))
              (VP (VB bow)
                (PRT (RP down))))))
        (, ,)
        (CC Or)
        (S
          (NP (NN cringing))
          (VP (VBZ begs)
            (NP
              (NP (DT a) (NN crust))
              (PP (IN of)
                (NP (NN praise))))))))
    (: ;)
    (CC Or)
    (, ,)
    (S
      (ADJP (JJ sombre-drunk)))
    (, ,)
    (S
      (PP (IN at)
        (NP (NN mine)
          (CC and)
          (NN mart)))
      (, ,)
      (NP (PRP He))
      (VP (VBZ dubs)
        (NP (PRP$ his) (JJ dreary) (NNS brethren) (NNS Kings))))
    (. .)))

advmod(scoffs-3, Calm-eyed-1)
nsubj(scoffs-3, he-2)
nsubj(sombre-drunk-33, he-2)
root(ROOT-0, scoffs-3)
case(sword-5, at-4)
nmod:at(scoffs-3, sword-5)
cc(sword-5, and-6)
nmod:at(scoffs-3, crown-7)
conj:and(sword-5, crown-7)
cc(scoffs-3, Or-9)
amod(stabs-11, panic-blinded-10)
nsubj(bids-17, stabs-11)
cc(stabs-11, and-12)
conj:and(stabs-11, slays-13)
nsubj(bids-17, slays-13)
advmod(bids-17, Blatant-15)
nsubj(bids-17, he-16)
conj:or(scoffs-3, bids-17)
det(world-19, the-18)
nsubj(bow-20, world-19)
ccomp(bids-17, bow-20)
compound:prt(bow-20, down-21)
cc(bids-17, Or-23)
nsubj(begs-25, cringing-24)
conj:or(scoffs-3, begs-25)
conj:or(bids-17, begs-25)
det(crust-27, a-26)
dobj(begs-25, crust-27)
case(praise-29, of-28)
nmod:of(crust-27, praise-29)
cc(scoffs-3, Or-31)
conj:Or(scoffs-3, sombre-drunk-33)
case(mine-36, at-35)
nmod:at(dubs-41, mine-36)
cc(mine-36, and-37)
conj:and(mine-36, mart-38)
nmod:at(dubs-41, mart-38)
nsubj(dubs-41, He-40)
conj:Or(scoffs-3, dubs-41)
nmod:poss(Kings-45, his-42)
amod(Kings-45, dreary-43)
compound(Kings-45, brethren-44)
dobj(dubs-41, Kings-45)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NNS hands))
      (VP (VBP are)
        (ADJP (JJ black)
          (PP (IN with)
            (NP (NN blood))))))
    (: --)
    (S
      (NP (PRP$ his) (NN heart))
      (VP (VBZ Leaps) (, ,)
        (PP (IN as)
          (NP (DT a) (NN babe) (POS 's)))
        (, ,)
        (PP (IN at)
          (NP (JJ little) (NNS things)))))
    (. .)))

nmod:poss(hands-2, His-1)
nsubj(black-4, hands-2)
cop(black-4, are-3)
root(ROOT-0, black-4)
case(blood-6, with-5)
nmod:with(black-4, blood-6)
nmod:poss(heart-9, his-8)
nsubj(Leaps-10, heart-9)
parataxis(black-4, Leaps-10)
case(babe-14, as-12)
det(babe-14, a-13)
nmod:'s(Leaps-10, babe-14)
case(babe-14, 's-15)
case(things-19, at-17)
amod(things-19, little-18)
nmod:at(Leaps-10, things-19)

(ROOT
  (SINV (CC But)
    (, ,)
    (PP (IN through)
      (NP
        (NP (DT the) (NN shift))
        (PP (IN of)
          (NP (NN mood)
            (CC and)
            (NN mood)))))
    (PRN (, ,)
      (S
        (NP (NNP Mine) (JJ ancient) (NN humour))
        (VP (VBZ saves)
          (NP (PRP him))
          (NP (NN whole))
          (: --)
          (NP
            (NP (DT The) (NNP cynic) (NNP devil))
            (PP (IN in)
              (NP (PRP$ his) (NN blood)))
            (SBAR
              (S
                (NP (DT That))
                (VP (VBZ bids)
                  (S
                    (S
                      (NP (PRP him))
                      (S
                        (VP (VB mock)
                          (NP (PRP$ his) (VBG hurrying) (NN soul))
                          (: ;)
                          (S
                            (S
                              (NP (DT That))
                              (VP (VBZ bids)
                                (S
                                  (NP (PRP him))
                                  (VP (VB flout)
                                    (NP
                                      (NP (DT the) (NN Law))
                                      (SBAR
                                        (S
                                          (NP (PRP he))
                                          (VP (VBZ makes)))))))))
                            (, ,)
                            (S
                              (NP (DT That))
                              (VP (VBZ bids)
                                (S
                                  (NP (PRP him))
                                  (VP (VB make)
                                    (NP
                                      (NP (DT the) (NN Law))
                                      (SBAR
                                        (S
                                          (NP (PRP he))
                                          (VP (VBZ flouts)))))))))
                            (, ,)
                            (INTJ (UH Till))
                            (, ,)
                            (S
                              (S
                                (VP (VBN dazed)
                                  (PP (IN by)
                                    (NP (JJ many) (NNS doubts)))))
                              (PRN (, ,)
                                (S
                                  (NP (PRP he))
                                  (VP (VBZ wakes)
                                    (NP (DT The) (JJ drumming) (NNS guns))
                                    (SBAR (IN that)
                                      (PRN (: --)
                                        (S
                                          (VP (VB have)
                                            (NP
                                              (NP (DT no) (NNS doubts))
                                              (: ;)
                                              (S
                                                (NP (DT That))
                                                (VP (VBZ checks)
                                                  (S
                                                    (NP (PRP him))
                                                    (ADJP (JJ foolish))))))))
                                        (: --))
                                      (S
                                        (S
                                          (ADJP (JJ hot)
                                            (CC and)
                                            (JJ fond)))
                                        (, ,)
                                        (NP (DT That))
                                        (VP (VBZ chuckles)
                                          (PP (IN through)
                                            (NP (PRP$ his) (JJS deepest) (NN ire))))))))
                                (, ,))
                              (NP (DT That))
                              (VP (VBZ gilds)
                                (NP
                                  (NP (DT the) (NN slough))
                                  (PP (IN of)
                                    (NP (PRP$ his) (NN despond))))))))))
                    (CC But)
                    (S
                      (SINV
                        (VP (VBZ dims))
                        (NP
                          (NP (DT the) (NN goal))
                          (PP (IN of)
                            (NP (PRP$ his) (NN desire)))))
                      (: ;)
                      (FRAG
                        (NP
                          (NP (NNP Inopportune))
                          (, ,)
                          (NP (JJ shrill-accented))
                          (, ,)
                          (NP
                            (NP (DT The) (JJ acrid) (JJ Asiatic) (NN mirth))
                            (SBAR
                              (S
                                (NP (DT That))
                                (VP (VBZ leaves)
                                  (NP (PRP him))))))))))))))))
      (, ,))
    (VP (VBZ careless) (`` `)
      (FRAG (RB mid)))
    (NP
      (NP (PRP$ his) (NN dead))
      (, ,)
      (NP
        (NP (DT The) (NN scandal))
        (PP (IN of)
          (NP (DT the) (JJR elder) (NN earth)))))
    (. .)))

cc(careless-111, But-1)
case(shift-5, through-3)
det(shift-5, the-4)
nmod:through(careless-111, shift-5)
case(mood-7, of-6)
nmod:of(shift-5, mood-7)
cc(mood-7, and-8)
nmod:of(shift-5, mood-9)
conj:and(mood-7, mood-9)
compound(humour-13, Mine-11)
amod(humour-13, ancient-12)
nsubj(saves-14, humour-13)
parataxis(careless-111, saves-14)
iobj(saves-14, him-15)
dobj(saves-14, whole-16)
det(devil-20, The-18)
compound(devil-20, cynic-19)
parataxis(saves-14, devil-20)
nsubj(bids-25, devil-20)
case(blood-23, in-21)
nmod:poss(blood-23, his-22)
nmod:in(devil-20, blood-23)
ref(devil-20, That-24)
acl:relcl(devil-20, bids-25)
dep(mock-27, him-26)
xcomp(bids-25, mock-27)
nmod:poss(soul-30, his-28)
amod(soul-30, hurrying-29)
dobj(mock-27, soul-30)
nsubj(bids-33, That-32)
parataxis(mock-27, bids-33)
nsubj(flout-35, him-34)
ccomp(bids-33, flout-35)
det(Law-37, the-36)
dobj(flout-35, Law-37)
nsubj(makes-39, he-38)
acl:relcl(Law-37, makes-39)
nsubj(bids-42, That-41)
parataxis(bids-33, bids-42)
nsubj(make-44, him-43)
ccomp(bids-42, make-44)
det(Law-46, the-45)
dobj(make-44, Law-46)
nsubj(flouts-48, he-47)
acl:relcl(Law-46, flouts-48)
discourse(bids-33, Till-50)
dep(gilds-85, dazed-52)
case(doubts-55, by-53)
amod(doubts-55, many-54)
nmod:by(dazed-52, doubts-55)
nsubj(wakes-58, he-57)
parataxis(gilds-85, wakes-58)
det(guns-61, The-59)
amod(guns-61, drumming-60)
dobj(wakes-58, guns-61)
mark(chuckles-78, that-62)
dep(chuckles-78, have-64)
neg(doubts-66, no-65)
dobj(have-64, doubts-66)
nsubj(checks-69, That-68)
dep(doubts-66, checks-69)
nsubj(foolish-71, him-70)
xcomp(checks-69, foolish-71)
ccomp(chuckles-78, hot-73)
cc(hot-73, and-74)
conj:and(hot-73, fond-75)
ccomp(chuckles-78, fond-75)
nsubj(chuckles-78, That-77)
ccomp(wakes-58, chuckles-78)
case(ire-82, through-79)
nmod:poss(ire-82, his-80)
amod(ire-82, deepest-81)
nmod:through(chuckles-78, ire-82)
nsubj(gilds-85, That-84)
parataxis(bids-33, gilds-85)
det(slough-87, the-86)
dobj(gilds-85, slough-87)
case(despond-90, of-88)
nmod:poss(despond-90, his-89)
nmod:of(slough-87, despond-90)
cc(mock-27, But-91)
dep(Inopportune-99, dims-92)
det(goal-94, the-93)
nsubj(dims-92, goal-94)
case(desire-97, of-95)
nmod:poss(desire-97, his-96)
nmod:of(goal-94, desire-97)
xcomp(bids-25, Inopportune-99)
conj:but(mock-27, Inopportune-99)
appos(Inopportune-99, shrill-accented-101)
det(mirth-106, The-103)
amod(mirth-106, acrid-104)
amod(mirth-106, Asiatic-105)
appos(Inopportune-99, mirth-106)
nsubj(leaves-108, mirth-106)
ref(mirth-106, That-107)
acl:relcl(mirth-106, leaves-108)
dobj(leaves-108, him-109)
root(ROOT-0, careless-111)
dep(careless-111, mid-113)
nmod:poss(dead-115, his-114)
nsubj(careless-111, dead-115)
det(scandal-118, The-117)
appos(dead-115, scandal-118)
case(earth-122, of-119)
det(earth-122, the-120)
amod(earth-122, elder-121)
nmod:of(scandal-118, earth-122)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBD shall)
      (NP (PRP he))
      (VP (VB clear)
        (NP (PRP himself))
        (, ,)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP
              (VP (VBP reach)
                (NP (PRP$ Your) (NN bar)))
              (CC or)
              (VP (VBD weighed)
                (SBAR
                  (S
                    (NP (NN defence))
                    (VP (VBP prefer))))))))))
    (. ?)))

advmod(clear-4, How-1)
aux(clear-4, shall-2)
nsubj(clear-4, he-3)
root(ROOT-0, clear-4)
dobj(clear-4, himself-5)
advmod(reach-8, how-7)
dep(clear-4, reach-8)
nmod:poss(bar-10, Your-9)
dobj(reach-8, bar-10)
cc(reach-8, or-11)
dep(clear-4, weighed-12)
conj:or(reach-8, weighed-12)
nsubj(prefer-14, defence-13)
ccomp(weighed-12, prefer-14)

(ROOT
  (S
    (S
      (NP (DT A) (NN brother))
      (VP (VBD hedged)
        (PP (IN with)
          (NP (JJ alien) (NN speech)))))
    (CC And)
    (S
      (VP (VBG lacking)
        (NP (DT all) (NN interpreter))))
    (. .)))

det(brother-2, A-1)
nsubj(hedged-3, brother-2)
nsubj(lacking-8, brother-2)
root(ROOT-0, hedged-3)
case(speech-6, with-4)
amod(speech-6, alien-5)
nmod:with(hedged-3, speech-6)
cc(hedged-3, And-7)
conj:and(hedged-3, lacking-8)
det(interpreter-10, all-9)
dobj(lacking-8, interpreter-10)

(ROOT
  (S
    (SBAR
      (WHNP (WDT Which))
      (S
        (NP (NN knowledge))
        (VP (VBZ vexes)
          (S
            (NP (PRP him))
            (NP (DT a) (NN space))))))
    (: ;)
    (S (CC But)
      (SBAR (IN while)
        (S
          (NP
            (NP (NNP Reproof))
            (PP (IN around)
              (NP (PRP him))))
          (VP (VBZ rings))))
      (, ,)
      (NP (PRP He))
      (VP (VBZ turns)
        (NP (DT a) (JJ keen) (JJ untroubled) (NN face) (NN Home))
        (, ,)
        (PP (TO to)
          (NP
            (NP (DT the) (JJ instant) (NN need))
            (PP (IN of)
              (NP (NNS things)))))))
    (. .)))

dobj(space-6, Which-1)
nsubj(vexes-3, knowledge-2)
dep(turns-16, vexes-3)
nsubj(space-6, him-4)
det(space-6, a-5)
xcomp(vexes-3, space-6)
cc(turns-16, But-8)
mark(rings-13, while-9)
nsubj(rings-13, Reproof-10)
case(him-12, around-11)
nmod:around(Reproof-10, him-12)
advcl(turns-16, rings-13)
nsubj(turns-16, He-15)
root(ROOT-0, turns-16)
det(Home-21, a-17)
amod(Home-21, keen-18)
amod(Home-21, untroubled-19)
compound(Home-21, face-20)
dobj(turns-16, Home-21)
case(need-26, to-23)
det(need-26, the-24)
amod(need-26, instant-25)
nmod:to(turns-16, need-26)
case(things-28, of-27)
nmod:of(need-26, things-28)

(ROOT
  (S
    (NP (NNP Enslaved))
    (, ,)
    (S
      (ADJP (JJ illogical)))
    (, ,)
    (ADVP (RB elate))
    (, ,)
    (NP (PRP He))
    (VP
      (VP (VBZ greets)
        (NP
          (NP (NNP th) (POS '))
          (JJ embarrassed) (NNS Gods)))
      (, ,)
      (CC nor)
      (VP (VBZ fears)
        (S
          (VP (TO To)
            (VP (VB shake)
              (NP
                (NP (DT the) (NN iron) (NN hand))
                (PP (IN of)
                  (NP (NNP Fate)
                    (CC Or)
                    (NNP match))))
              (PP (IN with)
                (NP
                  (NP (NNP Destiny))
                  (PP (IN for)
                    (NP (NNS beers))))))))))
    (. .)))

nsubj(greets-8, Enslaved-1)
nsubj(fears-15, Enslaved-1)
nsubj:xsubj(shake-17, Enslaved-1)
ccomp(greets-8, illogical-3)
advmod(greets-8, elate-5)
nsubj(greets-8, He-7)
root(ROOT-0, greets-8)
nmod:poss(Gods-12, th-9)
case(th-9, '-10)
amod(Gods-12, embarrassed-11)
dobj(greets-8, Gods-12)
cc(greets-8, nor-14)
conj:nor(greets-8, fears-15)
mark(shake-17, To-16)
xcomp(fears-15, shake-17)
det(hand-20, the-18)
compound(hand-20, iron-19)
dobj(shake-17, hand-20)
case(Fate-22, of-21)
nmod:of(hand-20, Fate-22)
cc(Fate-22, Or-23)
nmod:of(hand-20, match-24)
conj:or(Fate-22, match-24)
case(Destiny-26, with-25)
nmod:with(shake-17, Destiny-26)
case(beers-28, for-27)
nmod:for(Destiny-26, beers-28)

(ROOT
  (S
    (S
      (NP (NNP Lo))
      (, ,)
      (ADVP (RB imperturbable))
      (NP (PRP he))
      (VP (VBZ rules) (, ,)
        (S
          (NP
            (NP (NNP Unkempt))
            (, ,)
            (NP (NN disreputable))
            (, ,))
          (ADJP (JJ vast)))))
    (: --)
    (S
      (FRAG (CC And)
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT the) (NNS teeth))
            (PP (IN of)
              (NP (PDT all) (DT the) (NNS schools)))))
        (, ,)
        (NP (PRP I))
        (: --))
      (NP (PRP I))
      (VP (MD shall)
        (VP (VB save)
          (NP (PRP him))
          (PP (IN at)
            (NP (DT the) (JJ last))))))
    (. !)))

nsubj(rules-5, Lo-1)
advmod(he-4, imperturbable-3)
nsubj(rules-5, he-4)
root(ROOT-0, rules-5)
nsubj(vast-11, Unkempt-7)
appos(Unkempt-7, disreputable-9)
xcomp(rules-5, vast-11)
cc(I-23, And-13)
case(teeth-17, in-15)
det(teeth-17, the-16)
nmod:in(I-23, teeth-17)
case(schools-21, of-18)
det:predet(schools-21, all-19)
det(schools-21, the-20)
nmod:of(teeth-17, schools-21)
dep(save-27, I-23)
nsubj(save-27, I-25)
aux(save-27, shall-26)
parataxis(rules-5, save-27)
dobj(save-27, him-28)
case(last-31, at-29)
det(last-31, the-30)
nmod:at(save-27, last-31)

(ROOT
  (S
    (S
      (NP
        (NP (DT THE) (`` ``) (JJ MARY) (NN GLOSTER) ('' ''))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN paid)
                (PP (IN for)
                  (NP (PRP$ your) (NN sickest))))))))
      (VP (VBZ fancies)))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN humoured)
          (NP (PRP$ your) (NN crackedest) (NN whim)))))
    (: --)
    (S
      (NP (NNP Dick))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (PRP$ your) (NN daddy))
        (, ,)
        (S
          (VP (VBG dying)))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (VBP 've)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB listen)
                (PP (TO to)
                  (NP (PRP him)))))))))
    (. !)))

det(GLOSTER-4, THE-1)
amod(GLOSTER-4, MARY-3)
nsubj(fancies-12, GLOSTER-4)
nsubj(paid-8, I-6)
aux(paid-8, 've-7)
acl:relcl(GLOSTER-4, paid-8)
case(sickest-11, for-9)
nmod:poss(sickest-11, your-10)
nmod:for(paid-8, sickest-11)
root(ROOT-0, fancies-12)
nsubj(humoured-16, I-14)
aux(humoured-16, 've-15)
parataxis(fancies-12, humoured-16)
nmod:poss(whim-19, your-17)
compound(whim-19, crackedest-18)
dobj(humoured-16, whim-19)
nsubj(daddy-26, Dick-21)
nsubj(daddy-26, it-23)
cop(daddy-26, 's-24)
nmod:poss(daddy-26, your-25)
parataxis(fancies-12, daddy-26)
advcl(daddy-26, dying-28)
nsubj(got-32, you-30)
nsubj:xsubj(listen-34, you-30)
aux(got-32, 've-31)
parataxis(fancies-12, got-32)
mark(listen-34, to-33)
xcomp(got-32, listen-34)
case(him-36, to-35)
nmod:to(listen-34, him-36)

(ROOT
  (SBARQ
    (WHNP
      (WHNP (JJ Good))
      (PP (IN for)
        (NP (DT a) (NN fortnight))))
    (, ,)
    (SQ (VBP am)
      (NP (PRP I)))
    (. ?)))

dobj(am-6, Good-1)
case(fortnight-4, for-2)
det(fortnight-4, a-3)
nmod:for(Good-1, fortnight-4)
root(ROOT-0, am-6)
nsubj(am-6, I-7)

(ROOT
  (S
    (NP (DT The) (NN doctor))
    (VP (VBD told)
      (NP (PRP you)))
    (. ?)))

det(doctor-2, The-1)
nsubj(told-3, doctor-2)
root(ROOT-0, told-3)
dobj(told-3, you-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD lied))
    (. .)))

nsubj(lied-2, He-1)
root(ROOT-0, lied-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD shall)
      (VP
        (VP (VB go)
          (PP (IN under)
            (PP (IN by)
              (NP (NN morning)))))
        (, ,)
        (CC and)
        (VP
          (LST (: --))
          (VB Put)
          (NP (DT that))
          (S
            (VP (VBG nurse)
              (ADVP (RB outside)))))))
    (. .)))

nsubj(go-3, I-1)
nsubj(Put-10, I-1)
aux(go-3, shall-2)
root(ROOT-0, go-3)
case(morning-6, under-4)
case(morning-6, by-5)
nmod:by(go-3, morning-6)
cc(go-3, and-8)
conj:and(go-3, Put-10)
dobj(Put-10, that-11)
xcomp(Put-10, nurse-12)
advmod(nurse-12, outside-13)

(ROOT
  (S (`` `)
    (S
      (ADVP (RB Never))
      (VP (VBN seen)
        (S
          (NP (NN death))
          (ADVP (RB yet)))))
    (, ,)
    (VP (VBP Dickie))
    (. ?)))

neg(seen-3, Never-2)
dep(Dickie-7, seen-3)
xcomp(seen-3, death-4)
advmod(death-4, yet-5)
root(ROOT-0, Dickie-7)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (ADVP (RB now))
      (VP (VBZ is)
        (NP (PRP$ your) (NN time)
          (S
            (VP (TO to)
              (VP (VB learn)))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB wish)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBD held)
                (NP (PRP$ my) (NN record))
                (SBAR (IN before)
                  (S
                    (NP (PRP it))
                    (VP (VBZ comes)
                      (PP (TO to)
                        (NP (PRP$ your) (NN turn))))))))))))
    (. .)))

discourse(time-6, Well-1)
advmod(time-6, now-3)
cop(time-6, is-4)
nmod:poss(time-6, your-5)
root(ROOT-0, time-6)
mark(learn-8, to-7)
acl(time-6, learn-8)
cc(time-6, And-10)
nsubj(wish-13, you-11)
aux(wish-13, 'll-12)
conj:and(time-6, wish-13)
nsubj(held-15, you-14)
ccomp(wish-13, held-15)
nmod:poss(record-17, my-16)
dobj(held-15, record-17)
mark(comes-20, before-18)
nsubj(comes-20, it-19)
advcl(held-15, comes-20)
case(turn-23, to-21)
nmod:poss(turn-23, your-22)
nmod:to(comes-20, turn-23)

(ROOT
  (S
    (S (RB Not)
      (VP (VBG counting)
        (NP
          (NP (DT the) (NN Line))
          (CC and)
          (NP
            (NP (DT the) (NN Foundry))
            (, ,)
            (NP (DT the) (NNS yards))
            (CC and)
            (NP (DT the) (NN village))))))
    (, ,)
    (ADVP (RB too))
    (, ,)
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN made)
        (NP
          (NP (PRP myself))
          (CC and)
          (NP
            (QP (DT a) (CD million))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB damned)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD made)
                (NP (PRP you))))))))
    (. .)))

neg(counting-2, Not-1)
dep(made-19, counting-2)
det(Line-4, the-3)
dobj(counting-2, Line-4)
cc(Line-4, and-5)
det(Foundry-7, the-6)
dobj(counting-2, Foundry-7)
conj:and(Line-4, Foundry-7)
det(yards-10, the-9)
conj:and(Line-4, yards-10)
conj:and(Foundry-7, yards-10)
cc(Foundry-7, and-11)
det(village-13, the-12)
conj:and(Line-4, village-13)
conj:and(Foundry-7, village-13)
advmod(made-19, too-15)
nsubj(made-19, I-17)
aux(made-19, 've-18)
root(ROOT-0, made-19)
dobj(made-19, myself-20)
cc(myself-20, and-21)
advmod(million-23, a-22)
dobj(made-19, million-23)
conj:and(myself-20, million-23)
cc(made-19, but-25)
nsubj(damned-28, I-26)
cop(damned-28, 'm-27)
conj:but(made-19, damned-28)
mark(made-31, if-29)
nsubj(made-31, I-30)
ccomp(damned-28, made-31)
dobj(made-31, you-32)

(ROOT
  (NP
    (NP
      (NP
        (NP (NNP Master))
        (PP (IN at)
          (NP (NN two-and-twenty))))
      (, ,)
      (CC and)
      (NP
        (NP (JJ married))
        (PP (IN at)
          (NP (NN twenty-three)))))
    (: --)
    (NP
      (NP (CD Ten) (CD thousand) (NNS men))
      (PP (IN on)
        (NP (DT the) (NN pay-roll))))
    (, ,)
    (CC and)
    (NP
      (NP (JJ forty) (NNS freighters))
      (PP (IN at)
        (NP (NN sea))))
    (. !)))

root(ROOT-0, Master-1)
case(two-and-twenty-3, at-2)
nmod:at(Master-1, two-and-twenty-3)
cc(Master-1, and-5)
conj:and(Master-1, married-6)
case(twenty-three-8, at-7)
nmod:at(married-6, twenty-three-8)
nummod(men-12, Ten-10)
nummod(men-12, thousand-11)
conj:and(Master-1, men-12)
case(pay-roll-15, on-13)
det(pay-roll-15, the-14)
nmod:on(men-12, pay-roll-15)
cc(Master-1, and-17)
amod(freighters-19, forty-18)
conj:and(Master-1, freighters-19)
case(sea-21, at-20)
nmod:at(freighters-19, sea-21)

(ROOT
  (S
    (S
      (S
        (NP
          (NP
            (NP (CD Fifty) (NNS years))
            (PP (IN between)
              (NP (PRP 'em))))
          (, ,)
          (CC and)
          (NP
            (NP (DT every) (NN year))
            (PP (IN of)
              (NP (PRP it)))))
        (VP (VBP fight)))
      (, ,)
      (CC And)
      (S
        (ADVP (RB now))
        (NP (PRP I))
        (VP (VBP 'm)
          (NP
            (NP (NNP Sir) (NNP Anthony) (NNP Gloster))
            (, ,)
            (NP
              (NP (VBG dying))
              (, ,)
              (NP (DT a) (NN baronite)))))))
    (: :)
    (S
      (PP (IN For)
        (NP (PRP I)))
      (VP (VBD lunched)
        (PP (IN with)
          (NP
            (NP (PRP$ his) (JJ Royal) (`` `) (NNS Ighness))
            (: --)
            (SBARQ
              (WHNP (WP what))
              (SQ (VBD was)
                (NP (PRP it))
                (ADJP
                  (NP (DT the) (NNS papers))
                  (JJ a-had)))
              (. ?))))))))

nummod(years-2, Fifty-1)
nsubj(fight-11, years-2)
case('em-4, between-3)
nmod:between(years-2, 'em-4)
cc(years-2, and-6)
det(year-8, every-7)
conj:and(years-2, year-8)
nsubj(fight-11, year-8)
case(it-10, of-9)
nmod:of(year-8, it-10)
root(ROOT-0, fight-11)
cc(fight-11, And-13)
advmod(Gloster-19, now-14)
nsubj(Gloster-19, I-15)
cop(Gloster-19, 'm-16)
compound(Gloster-19, Sir-17)
compound(Gloster-19, Anthony-18)
conj:and(fight-11, Gloster-19)
appos(Gloster-19, dying-21)
det(baronite-24, a-23)
appos(dying-21, baronite-24)
case(I-27, For-26)
nmod:for(lunched-28, I-27)
parataxis(fight-11, lunched-28)
case(Ighness-33, with-29)
nmod:poss(Ighness-33, his-30)
amod(Ighness-33, Royal-31)
nmod:with(lunched-28, Ighness-33)
dobj(a-had-40, what-35)
cop(a-had-40, was-36)
nsubj(a-had-40, it-37)
det(papers-39, the-38)
nmod:npmod(a-had-40, papers-39)
dep(Ighness-33, a-had-40)

(ROOT
  (S (`` ``)
    (VP (VB Not)
      (NP
        (NP (JJS least))
        (PP (IN of)
          (NP (PRP$ our) (NNS merchant-princes)))))
    (. .) ('' '')))

root(ROOT-0, Not-2)
dobj(Not-2, least-3)
case(merchant-princes-6, of-4)
nmod:poss(merchant-princes-6, our-5)
nmod:of(least-3, merchant-princes-6)

(ROOT
  (S
    (ADVP (RB Dickie))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (NP
        (NP (PRP me))
        (, ,)
        (NP (PRP$ your) (NN dad))))
    (. !)))

advmod(me-5, Dickie-1)
nsubj(me-5, that-3)
cop(me-5, 's-4)
root(ROOT-0, me-5)
nmod:poss(dad-8, your-7)
appos(me-5, dad-8)

(ROOT
  (S
    (NP (NNP _) (NNP I) (NNP _))
    (VP (VBD did) (RB n't)
      (VP (VB begin)
        (PP (IN with)
          (NP (NNS askings)))))
    (. .)))

compound(_-3, _-1)
compound(_-3, I-2)
nsubj(begin-6, _-3)
aux(begin-6, did-4)
neg(begin-6, n't-5)
root(ROOT-0, begin-6)
case(askings-8, with-7)
nmod:with(begin-6, askings-8)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP I) (NNP _))
      (VP (VBD took)
        (NP (PRP$ my) (NN job))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD stuck)))
    (: ;)
    (CC And)
    (S
      (NP (PRP I))
      (VP (VBD took)
        (NP
          (NP (DT the) (NNS chances))
          (SBAR
            (S
              (NP (PRP they))
              (VP (MD would) (RB n't)))))
        (, ,)
        (FRAG (DT an))
        ('' ')
        (SBAR (RB now)
          (S
            (NP (PRP they))
            (VP (VBP 're)
              (VP (VBG calling)
                (NP (PRP it))
                (NP (NN luck))))))))
    (. .)))

compound(_-3, _-1)
compound(_-3, I-2)
nsubj(took-4, _-3)
root(ROOT-0, took-4)
nmod:poss(job-6, my-5)
dobj(took-4, job-6)
cc(took-4, and-7)
nsubj(stuck-9, I-8)
conj:and(took-4, stuck-9)
cc(took-4, And-11)
nsubj(took-13, I-12)
conj:and(took-4, took-13)
det(chances-15, the-14)
dobj(took-13, chances-15)
nsubj(would-17, they-16)
acl:relcl(chances-15, would-17)
neg(would-17, n't-18)
dep(took-13, an-20)
advmod(calling-25, now-22)
nsubj(calling-25, they-23)
aux(calling-25, 're-24)
dep(took-13, calling-25)
iobj(calling-25, it-26)
dobj(calling-25, luck-27)

(ROOT
  (NP
    (NP
      (NP (NNP Lord))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBD boats)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP 've)
                  (VP (VBN handled)))))))))
    (: --)
    (NP
      (NP (NNP rotten) (NNP and))
      (ADJP (JJ leaky)
        (CC and)
        (JJ old)))
    (. !)))

root(ROOT-0, Lord-1)
nsubj(boats-4, Lord-1)
ref(Lord-1, what-3)
acl:relcl(Lord-1, boats-4)
nsubj(handled-7, I-5)
aux(handled-7, 've-6)
ccomp(boats-4, handled-7)
compound(and-10, rotten-9)
dep(Lord-1, and-10)
amod(and-10, leaky-11)
cc(leaky-11, and-12)
amod(and-10, old-13)
conj:and(leaky-11, old-13)

(ROOT
  (FRAG
    (FRAG
      (NP (NNP Ran))
      (VP (VBZ 'em)))
    (, ,)
    (CC or)
    (FRAG (: --)
      (VP (VBD opened)
        (NP (DT the) (NN bilge-cock))
        (, ,)
        (ADVP (RB precisely))
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBN told))))))
      (. .))))

root(ROOT-0, Ran-1)
dep(Ran-1, 'em-2)
cc(Ran-1, or-4)
dep(Ran-1, opened-6)
det(bilge-cock-8, the-7)
dobj(opened-6, bilge-cock-8)
advmod(told-14, precisely-10)
mark(told-14, as-11)
nsubjpass(told-14, I-12)
auxpass(told-14, was-13)
advcl(opened-6, told-14)

(ROOT
  (S
    (VP (VB Grub)
      (SBAR (IN that)
        (S (`` `)
          (S
            (NP (NN ud))
            (VP (VBZ bind)
              (S
                (NP (PRP you))
                (ADJP (JJ crazy)))))
          (, ,)
          (CC and)
          (S
            (NP
              (NP (NNS crews))
              (NP (DT that) (`` `) (NN ud)))
            (VP (VBP turn)
              (S
                (NP (PRP you))
                (ADJP (JJ grey)))))
          (, ,)
          (CC And)
          (S
            (NP
              (NP (DT a) (JJ big) (JJ fat) (NN lump))
              (PP (IN of)
                (NP (NN insurance))))
            (VP (TO to)
              (VP (VB cover)
                (NP (DT the) (NN risk))
                (PP (IN on)
                  (NP (DT the) (NN way)))))))))
    (. .)))

root(ROOT-0, Grub-1)
mark(bind-5, that-2)
nsubj(bind-5, ud-4)
ccomp(Grub-1, bind-5)
nsubj(crazy-7, you-6)
xcomp(bind-5, crazy-7)
cc(bind-5, and-9)
nsubj(turn-14, crews-10)
det(ud-13, that-11)
dep(crews-10, ud-13)
ccomp(Grub-1, turn-14)
conj:and(bind-5, turn-14)
nsubj(grey-16, you-15)
xcomp(turn-14, grey-16)
cc(bind-5, And-18)
det(lump-22, a-19)
amod(lump-22, big-20)
amod(lump-22, fat-21)
nsubj(cover-26, lump-22)
case(insurance-24, of-23)
nmod:of(lump-22, insurance-24)
mark(cover-26, to-25)
ccomp(Grub-1, cover-26)
conj:and(bind-5, cover-26)
det(risk-28, the-27)
dobj(cover-26, risk-28)
case(way-31, on-29)
det(way-31, the-30)
nmod:on(cover-26, way-31)

(ROOT
  (NP
    (NP
      (NP (DT The) (NNS others))
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBZ durs) (RB n't)
            (VP (VB do)
              (NP (PRP it)))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD valued)
              (NP
                (NP (PRP$ their) (NN life))
                (PRN (-LRB- -LRB-)
                  (S
                    (NP (PRP They))
                    (VP (VBP 've)
                      (VP (VBN served)
                        (NP (PRP me))
                        (PP (IN since)
                          (PP (IN as)
                            (NP (NNS skippers)))))))
                  (-RRB- -RRB-))))))))
    (. .)))

det(others-2, The-1)
root(ROOT-0, others-2)
nsubj(durs-4, they-3)
acl:relcl(others-2, durs-4)
neg(durs-4, n't-5)
dep(durs-4, do-6)
dobj(do-6, it-7)
nsubj(said-10, they-9)
dep(others-2, said-10)
nsubj(valued-12, they-11)
ccomp(said-10, valued-12)
nmod:poss(life-14, their-13)
dobj(valued-12, life-14)
nsubj(served-18, They-16)
aux(served-18, 've-17)
dep(life-14, served-18)
dobj(served-18, me-19)
case(skippers-22, since-20)
case(skippers-22, as-21)
nmod:as(served-18, skippers-22)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP I) (NNP _))
      (VP (VBD went)))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD took)
        (NP (PRP$ my) (NN wife))))
    (. .)))

compound(_-3, _-1)
compound(_-3, I-2)
nsubj(went-4, _-3)
root(ROOT-0, went-4)
cc(went-4, and-6)
nsubj(took-8, I-7)
conj:and(went-4, took-8)
nmod:poss(wife-10, my-9)
dobj(took-8, wife-10)

(ROOT
  (S
    (S
      (PP (IN Over)
        (NP (DT the) (NN world)))
      (NP (PRP I))
      (VP
        (VP (VBD drove)
          (NP (PRP 'em)))
        (, ,)
        (VP (JJ married)
          (PP (IN at)
            (NP (NN twenty-three))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP$ your) (NN mother))
      (VP
        (VP (VBG saving)
          (NP (DT the) (NN money)))
        (CC and)
        (VP (VBG making)
          (NP
            (NP (DT a) (NN man))
            (PP (IN of)
              (NP (PRP me)))))))
    (. .)))

case(world-3, Over-1)
det(world-3, the-2)
nmod:over(drove-5, world-3)
nsubj(drove-5, I-4)
root(ROOT-0, drove-5)
dobj(drove-5, 'em-6)
dep(drove-5, married-8)
case(twenty-three-10, at-9)
nmod:at(married-8, twenty-three-10)
cc(drove-5, And-12)
nmod:poss(mother-14, your-13)
nsubj(saving-15, mother-14)
nsubj(making-19, mother-14)
conj:and(drove-5, saving-15)
det(money-17, the-16)
dobj(saving-15, money-17)
cc(saving-15, and-18)
conj:and(drove-5, making-19)
conj:and(saving-15, making-19)
det(man-21, a-20)
dobj(making-19, man-21)
case(me-23, of-22)
nmod:of(man-21, me-23)

(ROOT
  (S
    (S
      (NP (NNP _) (NNP I) (NNP _))
      (VP (VBD was)
        (ADJP (JJ content)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP (NN master))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (VBD said)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBD was)
              (ADVP (RBR better) (IN behind)))))))
    (: ;)
    (S
      (NP (PRP She))
      (VP (VBD took)
        (NP
          (NP (DT the) (NNS chances))
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD would) (RB n't)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD followed)
        (S
          (NP (PRP$ your) (NN mother))
          (ADJP (JJ blind)))))
    (. .)))

compound(_-3, _-1)
compound(_-3, I-2)
nsubj(content-5, _-3)
nsubj:xsubj(master-8, _-3)
cop(content-5, was-4)
root(ROOT-0, content-5)
mark(master-8, to-6)
cop(master-8, be-7)
xcomp(content-5, master-8)
cc(content-5, but-10)
nsubj(said-12, she-11)
conj:but(content-5, said-12)
expl(was-14, there-13)
ccomp(said-12, was-14)
advmod(was-14, better-15)
case(better-15, behind-16)
nsubj(took-19, She-18)
conj:but(content-5, took-19)
det(chances-21, the-20)
dobj(took-19, chances-21)
nsubj(would-23, I-22)
acl:relcl(chances-21, would-23)
neg(would-23, n't-24)
cc(content-5, and-26)
nsubj(followed-28, I-27)
conj:and(content-5, followed-28)
nmod:poss(mother-30, your-29)
nsubj(blind-31, mother-30)
xcomp(followed-28, blind-31)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBD egged)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB borrow)
            (NP
              (NP (DT the) (NN money))
              (, ,)
              (NP (DT an)))
            ('' ')
            (PRN
              (S
                (NP (PRP she))
                (VP (VBD helped)
                  (S
                    (NP (PRP me))
                    (VP (TO to)
                      (VP (VB clear)
                        (NP (DT the) (NN loan))))))))
            (, ,)
            (SBAR
              (WHADVP (WRB When))
              (S
                (NP (PRP we))
                (VP
                  (VP (VBD bought)
                    (NP (NN half) (NNS shares))
                    (PP (IN in)
                      (NP (DT a) (JJ cheap) (`` `) (NN un))))
                  (CC and)
                  (VP (VBD hoisted)
                    (NP
                      (NP (DT a) (NN flag))
                      (PP (IN of)
                        (NP (PRP$ our) (JJ own))))))))))))
    (. .)))

nsubj(egged-2, She-1)
root(ROOT-0, egged-2)
dobj(egged-2, me-3)
nsubj:xsubj(borrow-5, me-3)
mark(borrow-5, to-4)
xcomp(egged-2, borrow-5)
det(money-7, the-6)
dobj(borrow-5, money-7)
appos(money-7, an-9)
nsubj(helped-12, she-11)
parataxis(borrow-5, helped-12)
dobj(helped-12, me-13)
nsubj:xsubj(clear-15, me-13)
mark(clear-15, to-14)
xcomp(helped-12, clear-15)
det(loan-17, the-16)
dobj(clear-15, loan-17)
advmod(bought-21, When-19)
nsubj(bought-21, we-20)
nsubj(hoisted-30, we-20)
advcl(borrow-5, bought-21)
compound(shares-23, half-22)
dobj(bought-21, shares-23)
case(un-28, in-24)
det(un-28, a-25)
amod(un-28, cheap-26)
nmod:in(bought-21, un-28)
cc(bought-21, and-29)
advcl(borrow-5, hoisted-30)
conj:and(bought-21, hoisted-30)
det(flag-32, a-31)
dobj(hoisted-30, flag-32)
case(own-35, of-33)
nmod:poss(own-35, our-34)
nmod:of(flag-32, own-35)

(ROOT
  (S
    (S
      (S
        (VP
          (VP (VBG Patching))
          (CC and)
          (VP (VBG coaling)
            (PP (IN on)
              (NP (NN credit))))
          (, ,)
          (CC and)
          (VP (VBG living)
            (NP (DT the) (NN Lord)))))
      (VP (VBD knew)
        (SBAR
          (WHADVP (WRB how))
          (, ,)
          (S
            (NP (PRP We))
            (VP (VBD started)
              (NP (DT the) (NNP Red) (NNP Ox) (NNS freighters)))))))
    (: --)
    (S
      (NP (PRP we))
      (VP (VBP 've)
        (VP (VBN eight-and-thirty)
          (ADVP (RB now)))))
    (. .)))

csubj(knew-11, Patching-1)
cc(Patching-1, and-2)
conj:and(Patching-1, coaling-3)
csubj(knew-11, coaling-3)
case(credit-5, on-4)
nmod:on(coaling-3, credit-5)
cc(Patching-1, and-7)
conj:and(Patching-1, living-8)
csubj(knew-11, living-8)
det(Lord-10, the-9)
dobj(living-8, Lord-10)
root(ROOT-0, knew-11)
advmod(started-15, how-12)
nsubj(started-15, We-14)
ccomp(knew-11, started-15)
det(freighters-19, the-16)
compound(freighters-19, Red-17)
compound(freighters-19, Ox-18)
dobj(started-15, freighters-19)
nsubj(eight-and-thirty-23, we-21)
aux(eight-and-thirty-23, 've-22)
parataxis(knew-11, eight-and-thirty-23)
advmod(eight-and-thirty-23, now-24)

(ROOT
  (S
    (S
      (S (CC And)
        (NP (DT those))
        (VP (VBD were)
          (NP
            (NP (DT the) (NNS days))
            (PP (IN of)
              (NP (NNS clippers))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT the) (NNS freights))
          (VP (VBD were)
            (ADJP (JJ clipper-freights))))
        (, ,)
        (CC And)
        (S
          (S
            (NP (PRP we))
            (VP (VBD knew)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBD were)
                    (VP (VBG making)
                      (NP (PRP$ our) (NN fortune))))))))
          (, ,)
          (CC but)
          (S
            (NP (PRP she))
            (VP (VBD died)
              (PP (IN in)
                (NP
                  (NP (NNP Macassar) (NNP Straits))
                  (PRN (: --)
                    (PP (IN By)
                      (NP (DT the) (NNP Little) (NNPS Paternosters)))
                    (, ,)
                    (SBAR (IN as)
                      (S
                        (NP (PRP you))
                        (VP (VBP come)
                          (PP (TO to)
                            (NP (DT the) (NNP Union) (NNP Bank))))))
                    (: --)))))))))
    (CC And)
    (S
      (NP (PRP we))
      (VP (VBD dropped)
        (NP (PRP her))
        (PP (IN in)
          (NP (CD fourteen) (NN fathom)))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBD pricked)
        (NP (PRP it))
        (PP (IN off)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP she))
              (VP (VBD sank)))))))
    (. .)))

cc(days-5, And-1)
nsubj(days-5, those-2)
cop(days-5, were-3)
det(days-5, the-4)
root(ROOT-0, days-5)
case(clippers-7, of-6)
nmod:of(days-5, clippers-7)
cc(days-5, and-9)
det(freights-11, the-10)
nsubj(clipper-freights-13, freights-11)
cop(clipper-freights-13, were-12)
conj:and(days-5, clipper-freights-13)
cc(clipper-freights-13, And-15)
nsubj(knew-17, we-16)
conj:and(days-5, knew-17)
conj:and(clipper-freights-13, knew-17)
nsubj(making-20, we-18)
aux(making-20, were-19)
ccomp(knew-17, making-20)
nmod:poss(fortune-22, our-21)
dobj(making-20, fortune-22)
cc(knew-17, but-24)
nsubj(died-26, she-25)
conj:and(clipper-freights-13, died-26)
conj:but(knew-17, died-26)
case(Straits-29, in-27)
compound(Straits-29, Macassar-28)
nmod:in(died-26, Straits-29)
case(Paternosters-34, By-31)
det(Paternosters-34, the-32)
compound(Paternosters-34, Little-33)
nmod:by(come-38, Paternosters-34)
mark(come-38, as-36)
nsubj(come-38, you-37)
dep(Straits-29, come-38)
case(Bank-42, to-39)
det(Bank-42, the-40)
compound(Bank-42, Union-41)
nmod:to(come-38, Bank-42)
cc(days-5, And-44)
nsubj(dropped-46, we-45)
conj:and(days-5, dropped-46)
dobj(dropped-46, her-47)
case(fathom-50, in-48)
nummod(fathom-50, fourteen-49)
nmod:in(dropped-46, fathom-50)
nsubj(pricked-53, I-52)
dep(days-5, pricked-53)
dobj(pricked-53, it-54)
mark(sank-58, off-55)
advmod(sank-58, where-56)
nsubj(sank-58, she-57)
advcl(pricked-53, sank-58)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (NNS Owners))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD were)))))
        (, ,)
        (NP (JJ full) (NNS owners))
        (, ,)
        (CC and)
        (NP (DT the) (NN boat)))
      (VP (VBD was)
        (VP (VBN christened)
          (PP (IN for)
            (NP (PRP her))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP she))
      (VP (VBD died)
        (PP (IN in)
          (NP (DT the) (NNP _) (NNP Mary) (NNP Gloster) (NNP _)))))
    (. .)))

nsubjpass(christened-12, Owners-1)
nsubj(were-3, we-2)
acl:relcl(Owners-1, were-3)
amod(owners-6, full-5)
conj:and(Owners-1, owners-6)
nsubjpass(christened-12, owners-6)
cc(Owners-1, and-8)
det(boat-10, the-9)
conj:and(Owners-1, boat-10)
nsubjpass(christened-12, boat-10)
auxpass(christened-12, was-11)
root(ROOT-0, christened-12)
case(her-14, for-13)
nmod:for(christened-12, her-14)
cc(christened-12, And-16)
nsubj(died-18, she-17)
conj:and(christened-12, died-18)
case(_-24, in-19)
det(_-24, the-20)
compound(_-24, _-21)
compound(_-24, Mary-22)
compound(_-24, Gloster-23)
nmod:in(died-18, _-24)

(ROOT
  (FRAG
    (NP (PRP$ My) (NN heart))
    (, ,)
    (SBAR
      (WHADVP (WRB how)
        (ADJP (JJ young)))
      (S
        (NP (PRP we))
        (VP (VBD were))))
    (. !)))

nmod:poss(heart-2, My-1)
root(ROOT-0, heart-2)
advmod(were-7, how-4)
dep(how-4, young-5)
nsubj(were-7, we-6)
dep(heart-2, were-7)

(ROOT
  (S (IN So)
    (S
      (NP (PRP I))
      (VP (VBD went)
        (SBAR
          (S
            (S
              (S
                (PP (IN on)
                  (NP (DT a) (NN spree) (NN round)))
                (NP (NNP Java)
                  (CC and)
                  (NNP well-nigh))
                (VP (VBD ran)
                  (NP (PRP her))
                  (ADVP (RB ashore))))
              (, ,)
              (CC But)
              (S
                (NP (PRP$ your) (NN mother))
                (VP
                  (VP (VBD came))
                  (CC and)
                  (VP (VBD warned)
                    (NP (PRP me))))))
            (CC and)
            (S
              (NP (PRP I))
              (VP (MD would) (RB n't)
                (VP (VB liquor)
                  (ADVP (DT no) (RBR more)))))))))
    (: :)
    (S
      (VP
        (VP (VBG Strict)
          (S
            (S
              (NP (PRP I))
              (VP (VBD stuck)
                (PP (TO to)
                  (NP (PRP$ my) (NN business)))
                (, ,)
                (S
                  (ADJP (JJ afraid)
                    (S
                      (VP (TO to)
                        (VP (VB stop))))))))
            (CC or)
            (S
              (NP (PRP I))
              (VP (MD 'd)
                (VP (VB think))))))
        (, ,)
        (VP (VBG Saving)
          (NP
            (NP (DT the) (NN money))
            (PRN (-LRB- -LRB-)
              (S
                (NP (PRP she))
                (VP (VBD warned)
                  (NP (PRP me))))
              (-RRB- -RRB-))))
        (, ,)
        (CC and)
        (VP (VBG letting)
          (NP (DT the) (JJ other) (NNS men) (NN drink)))))
    (. .)))

dep(went-3, So-1)
nsubj(went-3, I-2)
root(ROOT-0, went-3)
case(round-7, on-4)
det(round-7, a-5)
compound(round-7, spree-6)
nmod:on(ran-11, round-7)
nsubj(ran-11, Java-8)
cc(Java-8, and-9)
conj:and(Java-8, well-nigh-10)
nsubj(ran-11, well-nigh-10)
dep(went-3, ran-11)
dobj(ran-11, her-12)
advmod(ran-11, ashore-13)
cc(ran-11, But-15)
nmod:poss(mother-17, your-16)
nsubj(came-18, mother-17)
nsubj(warned-20, mother-17)
dep(went-3, came-18)
conj:but(ran-11, came-18)
cc(came-18, and-19)
conj:but(ran-11, warned-20)
conj:and(came-18, warned-20)
dobj(warned-20, me-21)
cc(ran-11, and-22)
nsubj(liquor-26, I-23)
aux(liquor-26, would-24)
neg(liquor-26, n't-25)
dep(went-3, liquor-26)
conj:but(ran-11, liquor-26)
neg(more-28, no-27)
advmod(liquor-26, more-28)
parataxis(went-3, Strict-30)
nsubj(stuck-32, I-31)
xcomp(Strict-30, stuck-32)
case(business-35, to-33)
nmod:poss(business-35, my-34)
nmod:to(stuck-32, business-35)
xcomp(stuck-32, afraid-37)
mark(stop-39, to-38)
xcomp(afraid-37, stop-39)
cc(stuck-32, or-40)
nsubj(think-43, I-41)
aux(think-43, 'd-42)
xcomp(Strict-30, think-43)
conj:or(stuck-32, think-43)
parataxis(went-3, Saving-45)
conj:and(Strict-30, Saving-45)
det(money-47, the-46)
dobj(Saving-45, money-47)
nsubj(warned-50, she-49)
dep(money-47, warned-50)
dobj(warned-50, me-51)
cc(Strict-30, and-54)
parataxis(went-3, letting-55)
conj:and(Strict-30, letting-55)
det(drink-59, the-56)
amod(drink-59, other-57)
compound(drink-59, men-58)
dobj(letting-55, drink-59)

(ROOT
  (S (CC And)
    (S
      (NP (PRP I))
      (VP (VBD met)
        (NP
          (NP (NNP M'Cullough))
          (PP (IN in)
            (NP
              (NP (NNP London))
              (PRN (-LRB- -LRB-)
                (S
                  (NP (PRP I))
                  (VP (VBD 'd)
                    (VP (VBN turned)
                      (NP
                        (NP (CD five))
                        (`` `)
                        (VP (VBN undred)
                          (ADVP (RB then)))))))
                (-RRB- -RRB-)))))))
    (, ,)
    (CC And)
    (S (`` `)
      (S
        (VP (VB tween)
          (NP (PRP us))))
      (NP (PRP we))
      (VP (VBD started)
        (NP (DT the)
          (NP (NNP Foundry))
          (: --)
          (NP
            (NP (CD three) (NNS forges))
            (CC and)
            (NP (CD twenty) (NNS men)))
          (: :)
          (NP
            (NP (JJ Cheap) (NNS repairs))
            (PP (IN for)
              (NP (DT the) (JJ cheap) (`` `) (NN uns)))))))
    (. .)))

cc(met-3, And-1)
nsubj(met-3, I-2)
root(ROOT-0, met-3)
dobj(met-3, M'Cullough-4)
case(London-6, in-5)
nmod:in(M'Cullough-4, London-6)
nsubj(turned-10, I-8)
aux(turned-10, 'd-9)
dep(London-6, turned-10)
dobj(turned-10, five-11)
acl(five-11, undred-13)
advmod(undred-13, then-14)
cc(met-3, And-17)
dep(started-22, tween-19)
dobj(tween-19, us-20)
nsubj(started-22, we-21)
conj:And(met-3, started-22)
det(Foundry-24, the-23)
dobj(started-22, Foundry-24)
nummod(forges-27, three-26)
dep(Foundry-24, forges-27)
cc(forges-27, and-28)
nummod(men-30, twenty-29)
dep(Foundry-24, men-30)
conj:and(forges-27, men-30)
amod(repairs-33, Cheap-32)
dep(Foundry-24, repairs-33)
case(uns-38, for-34)
det(uns-38, the-35)
amod(uns-38, cheap-36)
nmod:for(repairs-33, uns-38)

(ROOT
  (S
    (S
      (S
        (NP (PRP It))
        (VP (VBD paid)))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN business))
        (VP (VBD grew))))
    (, ,) (IN For)
    (S
      (NP (PRP I))
      (VP (VBD bought)
        (S
          (NP (PRP me))
          (NP (DT a) (JJ steam-lathe) (NN patent)))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD was)
        (NP (DT a) (JJ gold) (NN mine))
        (ADVP (RB too))))
    (. .)))

nsubj(paid-2, It-1)
root(ROOT-0, paid-2)
cc(paid-2, and-4)
det(business-6, the-5)
nsubj(grew-7, business-6)
conj:and(paid-2, grew-7)
dep(paid-2, For-9)
nsubj(bought-11, I-10)
ccomp(paid-2, bought-11)
nsubj(patent-15, me-12)
det(patent-15, a-13)
amod(patent-15, steam-lathe-14)
xcomp(bought-11, patent-15)
cc(paid-2, and-17)
nsubj(mine-22, that-18)
cop(mine-22, was-19)
det(mine-22, a-20)
amod(mine-22, gold-21)
conj:and(paid-2, mine-22)
advmod(mine-22, too-23)

(ROOT
  (S
    (S (`` ``)
      (S
        (NP (NNP Cheaper))
        (S
          (VP (TO to)
            (VP (VB build)
              (S
                (NP (PRP 'em))
                (VP
                  (ADVP (IN than))
                  (VB buy)
                  (NP (PRP 'em))))))))
      (, ,) ('' '')
      (NP (NNP _) (NNP I) (NNP _))
      (VP
        (VP (VBD said))
        (, ,)
        (CC but)
        (VP (VBP M'Cullough)
          (SBAR
            (S
              (NP (PRP he))
              (VP (VBD shied)))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP we))
      (VP (VBD wasted)
        (NP (DT a) (NN year))
        (PP (IN in)
          (S
            (VP (VBG talking)
              (SBAR (IN before)
                (S
                  (NP (PRP we))
                  (VP (VBD moved)
                    (PP (TO to)
                      (NP (DT the) (NNP Clyde)))))))))))
    (. .)))

dep(build-4, Cheaper-2)
mark(build-4, to-3)
ccomp(said-14, build-4)
nsubj(buy-7, 'em-5)
advmod(buy-7, than-6)
ccomp(build-4, buy-7)
dobj(buy-7, 'em-8)
compound(_-13, _-11)
compound(_-13, I-12)
nsubj(said-14, _-13)
nsubj(M'Cullough-17, _-13)
root(ROOT-0, said-14)
cc(said-14, but-16)
conj:but(said-14, M'Cullough-17)
nsubj(shied-19, he-18)
ccomp(M'Cullough-17, shied-19)
cc(said-14, And-21)
nsubj(wasted-23, we-22)
conj:and(said-14, wasted-23)
det(year-25, a-24)
nmod:tmod(wasted-23, year-25)
mark(talking-27, in-26)
advcl(wasted-23, talking-27)
mark(moved-30, before-28)
nsubj(moved-30, we-29)
advcl(talking-27, moved-30)
case(Clyde-33, to-31)
det(Clyde-33, the-32)
nmod:to(moved-30, Clyde-33)

(ROOT
  (S (CC And)
    (S
      (NP (DT the) (NNPS Lines))
      (VP (VBD were) (RB all)
        (VP (VBG beginning))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (ADVP (DT all)
        (PP (IN of)
          (NP (PRP us))))
      (VP (VBD started)
        (ADJP (JJ fair))
        (, ,)
        (S
          (VP
            (VP (VBG Building)
              (NP (PRP$ our) (NNS engines))
              (PP (IN like)
                (NP (NNS houses))))
            (CC and)
            (VP (VBG staying)
              (NP (DT the) (NNS boilers) (NN square)))))))
    (. .)))

cc(beginning-6, And-1)
det(Lines-3, the-2)
nsubj(beginning-6, Lines-3)
aux(beginning-6, were-4)
advmod(beginning-6, all-5)
root(ROOT-0, beginning-6)
cc(beginning-6, and-8)
nsubj(started-13, we-9)
advmod(started-13, all-10)
case(us-12, of-11)
nmod:of(all-10, us-12)
conj:and(beginning-6, started-13)
xcomp(started-13, fair-14)
ccomp(started-13, Building-16)
nmod:poss(engines-18, our-17)
dobj(Building-16, engines-18)
case(houses-20, like-19)
nmod:like(Building-16, houses-20)
cc(Building-16, and-21)
ccomp(started-13, staying-22)
conj:and(Building-16, staying-22)
det(square-25, the-23)
compound(square-25, boilers-24)
dobj(staying-22, square-25)

(ROOT
  (S (CC But)
    (S
      (S
        (NP (NNP M'Cullough) (POS '))
        (X
          (X (SYM e))
          (NP
            (NP (JJ wanted) (NNS cabins))
            (PP (IN with)
              (NP
                (NP
                  (NP (NN marble)
                    (CC and)
                    (NN maple))
                  (CC and)
                  (NP (DT all)))
                (, ,)
                (CC And)
                (NP
                  (NP (NNP Brussels))
                  (, an) ('' ')
                  (VP (VBG Utrecht)
                    (NP
                      (NP (NN velvet))
                      (, ,)
                      (CC and)
                      (NP
                        (NP (NNS baths))
                        (CC and)
                        (NP (DT a) (NNP Social) (NNP Hall)))
                      (, ,)))))))))
      (CC And)
      (S
        (NP
          (NP (NNS pipes))
          (PP (IN for)
            (NP
              (NP
                (NP (NNS closets))
                (ADVP (DT all) (IN over)))
              (, ,)
              (CC and)
              (NP
                (NP (NN cutting))
                (NP (DT the) (NNS frames))))))
        (ADJP (RB too) (JJ light))))
    (, ,)
    (CC But)
    (S
      (NP (NNP M'Cullough) (PRP he))
      (VP (VBD died)
        (PP (IN in)
          (NP (DT the) (NNPS Sixties)))
        (, ,)
        (ADVP (CC and))))
    (: --)
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBG dying)
          (NP (NN to-night)))))
    (: ...) (. .)))

cc(M'Cullough-2, But-1)
root(ROOT-0, M'Cullough-2)
case(M'Cullough-2, '-3)
dep(cabins-6, e-4)
amod(cabins-6, wanted-5)
dep(M'Cullough-2, cabins-6)
case(marble-8, with-7)
nmod:with(cabins-6, marble-8)
cc(marble-8, and-9)
nmod:with(cabins-6, maple-10)
conj:and(marble-8, maple-10)
cc(marble-8, and-11)
nmod:with(cabins-6, all-12)
conj:and(marble-8, all-12)
cc(marble-8, And-14)
nmod:with(cabins-6, Brussels-15)
conj:and(marble-8, Brussels-15)
acl(Brussels-15, Utrecht-18)
dobj(Utrecht-18, velvet-19)
cc(velvet-19, and-21)
dobj(Utrecht-18, baths-22)
conj:and(velvet-19, baths-22)
cc(baths-22, and-23)
det(Hall-26, a-24)
compound(Hall-26, Social-25)
conj:and(velvet-19, Hall-26)
conj:and(baths-22, Hall-26)
cc(M'Cullough-2, And-28)
dep(light-40, pipes-29)
case(closets-31, for-30)
nmod:for(pipes-29, closets-31)
advmod(closets-31, all-32)
case(all-32, over-33)
cc(closets-31, and-35)
nmod:for(pipes-29, cutting-36)
conj:and(closets-31, cutting-36)
det(frames-38, the-37)
dep(cutting-36, frames-38)
advmod(light-40, too-39)
conj:and(M'Cullough-2, light-40)
cc(M'Cullough-2, But-42)
nsubj(died-45, M'Cullough-43)
dep(M'Cullough-43, he-44)
conj:and(M'Cullough-2, died-45)
case(Sixties-48, in-46)
det(Sixties-48, the-47)
nmod:in(died-45, Sixties-48)
advmod(died-45, and-50)
discourse(dying-56, Well-52)
nsubj(dying-56, I-54)
aux(dying-56, 'm-55)
conj:and(M'Cullough-2, dying-56)
dobj(dying-56, to-night-57)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD knew)))
    (: --)
    (S
      (NP (NNP _) (NNP I) (NNP _))
      (VP (VBD knew)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD was)
              (VP (VBG coming) (, ,)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP we))
                    (VP (VBD bid)
                      (PP (IN on)
                        (NP
                          (NP (DT the) (NNP _) (NNP Byfleet) (NNP _) (POS 's))
                          (NN keel))))))))))))
    (: --)
    (S
      (NP (PRP They))
      (VP (VBD piddled)
        (CC and)
        (VBD piffled)
        (PP (IN with)
          (NP (NN iron)))))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBD 'd)
        (VP (VBN given)
          (NP (PRP$ my) (NNS orders))
          (PP (IN for)
            (NP (NN steel))))))
    (. !)))

nsubj(knew-2, I-1)
root(ROOT-0, knew-2)
compound(_-6, _-4)
compound(_-6, I-5)
nsubj(knew-7, _-6)
parataxis(knew-2, knew-7)
nsubj(coming-10, what-8)
aux(coming-10, was-9)
ccomp(knew-7, coming-10)
advmod(bid-14, when-12)
nsubj(bid-14, we-13)
advcl(coming-10, bid-14)
case(keel-21, on-15)
det(_-19, the-16)
compound(_-19, _-17)
compound(_-19, Byfleet-18)
nmod:poss(keel-21, _-19)
case(_-19, 's-20)
nmod:on(bid-14, keel-21)
nsubj(piddled-24, They-23)
nsubj(piffled-26, They-23)
parataxis(knew-2, piddled-24)
cc(piddled-24, and-25)
parataxis(knew-2, piffled-26)
conj:and(piddled-24, piffled-26)
case(iron-28, with-27)
nmod:with(piddled-24, iron-28)
nsubj(given-32, I-30)
aux(given-32, 'd-31)
parataxis(knew-2, given-32)
nmod:poss(orders-34, my-33)
dobj(given-32, orders-34)
case(steel-36, for-35)
nmod:for(given-32, steel-36)

(ROOT
  (NP
    (NP
      (NP (NNP Steel))
      (CC and)
      (NP (DT the) (JJ first) (NNS expansions)))
    (. .)))

root(ROOT-0, Steel-1)
cc(Steel-1, and-2)
det(expansions-5, the-3)
amod(expansions-5, first-4)
conj:and(Steel-1, expansions-5)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD paid)))
    (, ,)
    (NP (PRP I))
    (VP (VBP tell)
      (NP (PRP you))
      (PRN (, ,)
        (S
          (NP (PRP it))
          (VP (VBD paid)))
        (, ,))
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP we))
          (VP
            (VP (VBD came)
              (PP (IN with)
                (NP (PRP$ our) (JJ nine-knot) (NNS freighters))))
            (CC and)
            (VP (VBD collared)
              (NP (DT the) (JJ long-run) (NN trade)))))))
    (. !)))

nsubj(paid-2, It-1)
ccomp(tell-5, paid-2)
nsubj(tell-5, I-4)
root(ROOT-0, tell-5)
dobj(tell-5, you-6)
nsubj(paid-9, it-8)
parataxis(tell-5, paid-9)
advmod(came-13, When-11)
nsubj(came-13, we-12)
nsubj(collared-19, we-12)
ccomp(tell-5, came-13)
case(freighters-17, with-14)
nmod:poss(freighters-17, our-15)
amod(freighters-17, nine-knot-16)
nmod:with(came-13, freighters-17)
cc(came-13, and-18)
ccomp(tell-5, collared-19)
conj:and(came-13, collared-19)
det(trade-22, the-20)
amod(trade-22, long-run-21)
dobj(collared-19, trade-22)

(ROOT
  (S (CC And)
    (NP (PRP they))
    (VP (VBD asked)
      (NP (PRP me))
      (SBAR
        (WHADVP (WRB how))
        (S
          (S
            (NP (PRP I))
            (VP (VBD did)
              (NP (PRP it))))
          (, ,)
          (CC and)
          (S
            (NP (PRP I))
            (VP (VBD gave)
              (NP (PRP 'em))
              (NP (DT the) (NNP Scripture) (NN text))))))
      (, ,) (`` ``)
      (S
        (NP (PRP You))
        (VP (VB keep)
          (NP (PRP$ your) (NN light))
          (ADVP (RB so)
            (VP (VBG shining)
              (PP
                (NP (DT a) (JJ little))
                (IN in)
                (NP (JJ front) (NN o)))
              ('' ')
              (NP (DT the) (JJ next)))))))
    (. !) ('' '')))

cc(asked-3, And-1)
nsubj(asked-3, they-2)
root(ROOT-0, asked-3)
dobj(asked-3, me-4)
advmod(did-7, how-5)
nsubj(did-7, I-6)
dep(asked-3, did-7)
dobj(did-7, it-8)
cc(did-7, and-10)
nsubj(gave-12, I-11)
dep(asked-3, gave-12)
conj:and(did-7, gave-12)
iobj(gave-12, 'em-13)
det(text-16, the-14)
compound(text-16, Scripture-15)
dobj(gave-12, text-16)
nsubj(keep-20, You-19)
dep(asked-3, keep-20)
nmod:poss(light-22, your-21)
dobj(keep-20, light-22)
advmod(keep-20, so-23)
dep(so-23, shining-24)
det(little-26, a-25)
nmod:in(shining-24, little-26)
case(little-26, in-27)
amod(o-29, front-28)
dep(little-26, o-29)
det(next-32, the-31)
dobj(shining-24, next-32)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBN copied)
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP they))
              (VP (MD could)
                (VP (VB follow))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP they))
        (VP (MD could) (RB n't)
          (VP (VB copy)
            (NP (PRP$ my) (NN mind)))))
      (, ,)
      (CC And)
      (S
        (NP (PRP I))
        (VP (VBD left)
          (S
            (NP (PRP 'em))
            (VP (VBG sweating)
              (CC and)
              (VBG stealing)
              (NP
                (NP (DT a) (NN year))
                (CC and)
                (NP (DT a) (JJ half) (NN behind))))))))
    (. .)))

nsubj(copied-2, They-1)
root(ROOT-0, copied-2)
dobj(copied-2, all-3)
nsubj(follow-6, they-4)
aux(follow-6, could-5)
acl:relcl(all-3, follow-6)
cc(copied-2, but-8)
nsubj(copy-12, they-9)
aux(copy-12, could-10)
neg(copy-12, n't-11)
conj:but(copied-2, copy-12)
nmod:poss(mind-14, my-13)
dobj(copy-12, mind-14)
cc(copy-12, And-16)
nsubj(left-18, I-17)
conj:but(copied-2, left-18)
conj:and(copy-12, left-18)
nsubj(sweating-20, 'em-19)
nsubj(stealing-22, 'em-19)
dep(left-18, sweating-20)
cc(sweating-20, and-21)
dep(left-18, stealing-22)
conj:and(sweating-20, stealing-22)
det(year-24, a-23)
dobj(sweating-20, year-24)
cc(year-24, and-25)
det(behind-28, a-26)
amod(behind-28, half-27)
dobj(sweating-20, behind-28)
conj:and(year-24, behind-28)

(ROOT
  (S
    (ADVP (RB Then))
    (SINV (VBD came)
      (NP (DT the) (NNS armour-contracts)))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD was)
            (NP
              (NP
                (NP (NNP M'Cullough) (POS 's))
                (NN side))
              (: ;)
              (S
                (NP (PRP He))
                (VP (VBD was)
                  (ADVP (RB always))
                  (ADJP
                    (ADJP
                      (ADJP (JJS best))
                      (PP (IN in)
                        (NP (DT the) (NNP Foundry))))
                    (, ,)
                    (CC but)
                    (ADJP (JJR better)))))))))
      (, ,)
      (ADVP (RB perhaps))
      (, ,)
      (NP (PRP he))
      (VP (VBD died)))
    (. .)))

advmod(came-2, Then-1)
root(ROOT-0, came-2)
det(armour-contracts-4, the-3)
nsubj(came-2, armour-contracts-4)
cc(came-2, but-6)
nsubj(side-11, that-7)
cop(side-11, was-8)
nmod:poss(side-11, M'Cullough-9)
case(M'Cullough-9, 's-10)
advcl(died-27, side-11)
nsubj(best-16, He-13)
nsubj(better-22, He-13)
cop(best-16, was-14)
advmod(best-16, always-15)
parataxis(side-11, best-16)
case(Foundry-19, in-17)
det(Foundry-19, the-18)
nmod:in(best-16, Foundry-19)
cc(best-16, but-21)
parataxis(side-11, better-22)
conj:but(best-16, better-22)
advmod(died-27, perhaps-24)
nsubj(died-27, he-26)
conj:but(came-2, died-27)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD went)
        (PP (IN through)
          (NP (PRP$ his) (JJ private) (NNS papers)))))
    (: ;)
    (S
      (NP (DT the) (NNS notes))
      (VP (VBD was)
        (ADJP (JJ plainer)
          (PP (IN than)
            (NP (NN print))))))
    (: ;)
    (CC And)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (NP (DT no) (NN fool)
          (S
            (VP (TO to)
              (VP (VB finish)
                (SBAR (IN if)
                  (S
                    (NP (DT a) (NN man))
                    (VP (MD 'll)
                      (VP (VB give)
                        (NP (PRP me))
                        (NP (DT a) (NN hint))))))))))))
    (. .)))

nsubj(went-2, I-1)
root(ROOT-0, went-2)
case(papers-6, through-3)
nmod:poss(papers-6, his-4)
amod(papers-6, private-5)
nmod:through(went-2, papers-6)
det(notes-9, the-8)
nsubj(plainer-11, notes-9)
cop(plainer-11, was-10)
conj:and(went-2, plainer-11)
case(print-13, than-12)
nmod:than(plainer-11, print-13)
cc(went-2, And-15)
nsubj(fool-19, I-16)
cop(fool-19, 'm-17)
neg(fool-19, no-18)
conj:and(went-2, fool-19)
mark(finish-21, to-20)
acl(fool-19, finish-21)
mark(give-26, if-22)
det(man-24, a-23)
nsubj(give-26, man-24)
aux(give-26, 'll-25)
advcl(finish-21, give-26)
iobj(give-26, me-27)
det(hint-29, a-28)
dobj(give-26, hint-29)

(ROOT
  (S (-LRB- -LRB-)
    (NP (PRP I))
    (VP (VBP remember)
      (SBAR
        (S
          (NP (PRP$ his) (NN widow))
          (VP (VBD was)
            (ADJP (JJ angry))))))
    (. .) (-RRB- -RRB-)))

nsubj(remember-3, I-2)
root(ROOT-0, remember-3)
nmod:poss(widow-5, his-4)
nsubj(angry-7, widow-5)
cop(angry-7, was-6)
ccomp(remember-3, angry-7)

(ROOT
  (S
    (S (IN So)
      (NP (PRP I))
      (VP (VBD saw)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT the) (NNS drawings))
            (VP (VBD meant))))))
    (, ,)
    (CC And)
    (S
      (S
        (NP (PRP I))
        (VP (VBD started)
          (NP (DT the) (JJ six-inch) (NNS rollers))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (PRP it))
          (VP (VBD paid)
            (NP (PRP me))
            (NP (NN sixty))
            (PP (IN per)
              (NP (NN cent)))
            (: --)
            (NP
              (NP (CD Sixty))
              (PP (IN per)
                (NP
                  (NP
                    (NP (NN cent) (NNS _))
                    (PP (IN with)
                      (NP (JJ _) (NNS failures))))
                  (, ,)
                  (CC and)
                  (NP
                    (QP (JJR more) (IN than) (RB twice)))))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (MD could)
                    (VP (VB do) (, ,)
                      (FRAG (CC And)
                        (NP (DT a)
                          (ADJP (JJ quarter-million)
                            (PP (TO to)))
                          (NN credit))))))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (VBD saved)
            (NP (PRP it))
            (PP (DT all) (IN for)
              (NP (PRP you)))))))
    (. !)))

dep(saw-3, So-1)
nsubj(saw-3, I-2)
root(ROOT-0, saw-3)
dobj(meant-7, what-4)
det(drawings-6, the-5)
nsubj(meant-7, drawings-6)
ccomp(saw-3, meant-7)
cc(saw-3, And-9)
nsubj(started-11, I-10)
conj:and(saw-3, started-11)
det(rollers-14, the-12)
amod(rollers-14, six-inch-13)
dobj(started-11, rollers-14)
cc(started-11, and-16)
nsubj(paid-18, it-17)
conj:and(saw-3, paid-18)
conj:and(started-11, paid-18)
iobj(paid-18, me-19)
dobj(paid-18, sixty-20)
case(cent-22, per-21)
nmod:per(paid-18, cent-22)
parataxis(paid-18, Sixty-24)
case(_-27, per-25)
compound(_-27, cent-26)
nmod:per(Sixty-24, _-27)
case(failures-30, with-28)
amod(failures-30, _-29)
nmod:with(_-27, failures-30)
cc(_-27, and-32)
advmod(twice-35, more-33)
mwe(more-33, than-34)
nmod:per(Sixty-24, twice-35)
conj:and(_-27, twice-35)
nsubj(do-38, we-36)
aux(do-38, could-37)
acl:relcl(Sixty-24, do-38)
cc(credit-44, And-40)
det(credit-44, a-41)
amod(credit-44, quarter-million-42)
nmod(quarter-million-42, to-43)
dep(do-38, credit-44)
cc(paid-18, and-46)
nsubj(saved-48, I-47)
conj:and(started-11, saved-48)
conj:and(paid-18, saved-48)
dobj(saved-48, it-49)
dep(you-52, all-50)
case(you-52, for-51)
nmod:for(saved-48, you-52)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD thought)))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (VP (VB matter))))
    (: --)
    (S
      (S
        (NP (PRP you))
        (VP (VBD seemed)
          (S
            (VP (TO to)
              (VP (VB favour)
                (NP (PRP$ your) (NN ma)))))))
      (, ,)
      (CC But)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (VP (VBG nearer)
            (ADVP (RB forty))
            (PP (IN than)
              (NP (CD thirty)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (DT the) (NN kind))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP are)))))))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(matter-7, it-4)
aux(matter-7, does-5)
neg(matter-7, n't-6)
conj:and(thought-2, matter-7)
nsubj(seemed-10, you-9)
nsubj:xsubj(favour-12, you-9)
conj:and(thought-2, seemed-10)
mark(favour-12, to-11)
xcomp(seemed-10, favour-12)
nmod:poss(ma-14, your-13)
dobj(favour-12, ma-14)
cc(seemed-10, But-16)
nsubj(nearer-19, you-17)
aux(nearer-19, 're-18)
conj:and(thought-2, nearer-19)
conj:but(seemed-10, nearer-19)
advmod(nearer-19, forty-20)
case(thirty-22, than-21)
nmod:than(nearer-19, thirty-22)
cc(thought-2, and-24)
nsubj(know-26, I-25)
conj:and(thought-2, know-26)
det(kind-28, the-27)
dobj(know-26, kind-28)
nsubj(are-30, you-29)
acl:relcl(kind-28, are-30)

(ROOT
  (NP
    (NP
      (NP (NNP Harrer))
      (, an) ('' ')
      (VP (VBG Trinity)
        (NP (NNP College))))
    (. !)))

root(ROOT-0, Harrer-1)
acl(Harrer-1, Trinity-4)
dobj(Trinity-4, College-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB ha)
            (S
              (S
                (NP (POS '))
                (VP (VBD sent)
                  (NP (PRP you))
                  (PP (TO to)
                    (NP (NN sea)))))
              (: --)
              (CC But)
              (S
                (NP (PRP I))
                (VP (VBD stood)
                  (S
                    (NP (PRP you))
                    (NP (DT an) (NN education)))
                  (, ,)
                  (FRAG (DT an))
                  ('' ')
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBP have)
                        (S
                          (NP (PRP you))
                          (VP (VBN done)
                            (PP (IN for)
                              (NP (PRP me)))))))))))))))
    (. ?)))

nsubj(ought-2, I-1)
nsubj:xsubj(ha-4, I-1)
root(ROOT-0, ought-2)
mark(ha-4, to-3)
xcomp(ought-2, ha-4)
nsubj(sent-6, '-5)
xcomp(ha-4, sent-6)
dobj(sent-6, you-7)
case(sea-9, to-8)
nmod:to(sent-6, sea-9)
cc(sent-6, But-11)
nsubj(stood-13, I-12)
xcomp(ha-4, stood-13)
conj:but(sent-6, stood-13)
nsubj(education-16, you-14)
det(education-16, an-15)
xcomp(stood-13, education-16)
dep(stood-13, an-18)
nsubj(have-21, what-20)
ccomp(stood-13, have-21)
nsubj(done-23, you-22)
ccomp(have-21, done-23)
case(me-25, for-24)
nmod:for(done-23, me-25)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS things))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD knew)))))
      (VP (VBD was)
        (ADJP (JJ proper)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD would) (RB n't)
                (VP (VB thank)
                  (S
                    (NP (PRP me))
                    (VP (TO to)
                      (VP (VB give)))))))))))
    (, ,)
    (CC And)
    (S
      (NP
        (NP (DT the) (NNS things))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD knew)))))
      (VP (VBD was)
        (ADJP (JJ rotten)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBD said)
                (SBAR
                  (S
                    (VP (VBD was)
                      (NP (DT the) (NN way)
                        (S
                          (VP (TO to)
                            (VP (VB live))))))))))))))
    (. .)))

det(things-2, The-1)
nsubj(proper-6, things-2)
nsubj(knew-4, I-3)
acl:relcl(things-2, knew-4)
cop(proper-6, was-5)
root(ROOT-0, proper-6)
nsubj(thank-10, you-7)
aux(thank-10, would-8)
neg(thank-10, n't-9)
ccomp(proper-6, thank-10)
dobj(thank-10, me-11)
nsubj:xsubj(give-13, me-11)
mark(give-13, to-12)
xcomp(thank-10, give-13)
cc(proper-6, And-15)
det(things-17, the-16)
nsubj(rotten-21, things-17)
nsubj(knew-19, I-18)
acl:relcl(things-17, knew-19)
cop(rotten-21, was-20)
conj:and(proper-6, rotten-21)
nsubj(said-23, you-22)
ccomp(rotten-21, said-23)
cop(way-26, was-24)
det(way-26, the-25)
ccomp(said-23, way-26)
mark(live-28, to-27)
acl(way-26, live-28)

(ROOT
  (S
    (S
      (S
        (PP (IN For)
          (S
            (NP (PRP you))
            (VP (VBN muddled)
              (PP (IN with)
                (NP
                  (NP (NNS books)
                    (CC and)
                    (NNS pictures))
                  (, ,)
                  (NP
                    (NP (DT an))
                    (POS ') (VBG china))
                  (, an) ('' '))))))
        (NP (NN etchin))
        (VP (VBZ 's)
          (NP
            (NP (DT an))
            (POS ') (NNS fans))))
      (, ,)
      (CC And)
      (S
        (NP
          (NP (PRP$ your) (NNS rooms))
          (PP (IN at)
            (NP (NN college))))
        (VP (VBD was)
          (ADVP (RB beastly)))))
    (: --)
    (S
      (ADVP (RBR more))
      (VP (VB like)
        (S
          (S
            (NP (DT a) (NN whore))
            (VP (VBZ 's)
              (SBAR (IN than)
                (S
                  (NP (DT a) (NN man))
                  (VP (VBZ 's) (: --)
                    (PP (IN Till)
                      (NP
                        (NP (PRP you))
                        (VP (VBN married)
                          (SBAR (IN that)
                            (S
                              (NP (JJ thin-flanked) (NN woman))
                              (, ,)
                              (S
                                (ADJP
                                  (ADJP (RB as) (JJ white))
                                  (CC and)
                                  (ADJP (RB as) (VBN stale)
                                    (PP (IN as)
                                      (NP
                                        (NP (DT a) (NN bone))
                                        (, ,)
                                        (NP (NNP An)))))))
                              ('' ')
                              (NP (PRP she))
                              (VP (VBD gave)
                                (NP (PRP you))
                                (NP (PRP$ your) (JJ social) (NN nonsense))))))))
                    (: ;))))))
          (CC but)
          (SBARQ
            (WHADVP (WRB where))
            (SQ (VBZ 's)
              (NP
                (NP (DT that) (NN kid) (NN o) (POS '))
                (NP (PRP$ your) (JJ own))))
            (. ?)))))))

mark(muddled-3, For-1)
nsubj(muddled-3, you-2)
advcl(fans-18, muddled-3)
case(books-5, with-4)
nmod:with(muddled-3, books-5)
cc(books-5, and-6)
nmod:with(muddled-3, pictures-7)
conj:and(books-5, pictures-7)
appos(books-5, an-9)
case(an-9, '-10)
amod(an-9, china-11)
nsubj(fans-18, etchin-14)
cop(fans-18, 's-15)
nmod:poss(fans-18, an-16)
case(fans-18, '-17)
root(ROOT-0, fans-18)
cc(fans-18, And-20)
nmod:poss(rooms-22, your-21)
nsubj(was-25, rooms-22)
case(college-24, at-23)
nmod:at(rooms-22, college-24)
conj:and(fans-18, was-25)
advmod(was-25, beastly-26)
advmod(like-29, more-28)
parataxis(fans-18, like-29)
det(whore-31, a-30)
nsubj('s-32, whore-31)
xcomp(like-29, 's-32)
mark(you-39, than-33)
det(man-35, a-34)
nsubj(you-39, man-35)
cop(you-39, 's-36)
case(you-39, Till-38)
advcl('s-32, you-39)
acl(you-39, married-40)
mark(gave-57, that-41)
amod(woman-43, thin-flanked-42)
nsubj(gave-57, woman-43)
advmod(white-46, as-45)
ccomp(gave-57, white-46)
cc(white-46, and-47)
advmod(stale-49, as-48)
conj:and(white-46, stale-49)
ccomp(gave-57, stale-49)
case(bone-52, as-50)
det(bone-52, a-51)
nmod:as(stale-49, bone-52)
appos(bone-52, An-54)
nsubj(gave-57, she-56)
ccomp(married-40, gave-57)
iobj(gave-57, you-58)
nmod:poss(nonsense-61, your-59)
amod(nonsense-61, social-60)
dobj(gave-57, nonsense-61)
cc('s-32, but-63)
advmod('s-65, where-64)
xcomp(like-29, 's-65)
conj:but('s-32, 's-65)
det(o-68, that-66)
compound(o-68, kid-67)
nsubj('s-65, o-68)
case(o-68, '-69)
nmod:poss(own-71, your-70)
dep(o-68, own-71)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN seen)
          (NP (PRP$ your) (NNS carriages))
          (S
            (VP (VBG blocking)
              (NP
                (NP (DT the) (NN half) (NN o) (POS '))
                (NP (DT the) (NNP Cromwell) (NNP Road))))))))
    (, ,)
    (CC But)
    (S
      (ADVP (RB never))
      (NP
        (NP (DT the) (NN doctor) (POS 's))
        (NN brougham)
        (S
          (VP (TO to)
            (VP (VB help)
              (NP (DT the) (NNS missus))))))
      (VP (VBP unload)))
    (. .)))

nsubj(seen-3, I-1)
aux(seen-3, 've-2)
root(ROOT-0, seen-3)
nmod:poss(carriages-5, your-4)
dobj(seen-3, carriages-5)
xcomp(seen-3, blocking-6)
det(o-9, the-7)
compound(o-9, half-8)
dobj(blocking-6, o-9)
case(o-9, '-10)
det(Road-13, the-11)
compound(Road-13, Cromwell-12)
dep(o-9, Road-13)
cc(seen-3, But-15)
neg(unload-25, never-16)
det(doctor-18, the-17)
nmod:poss(brougham-20, doctor-18)
case(doctor-18, 's-19)
nsubj(unload-25, brougham-20)
mark(help-22, to-21)
acl(brougham-20, help-22)
det(missus-24, the-23)
dobj(help-22, missus-24)
conj:but(seen-3, unload-25)

(ROOT
  (PRN (-LRB- -LRB-)
    (S
      (ADVP (RB So))
      (NP (EX there))
      (VP (VBZ is) (RB n't)
        (PP (RB even)
          (NP (DT a) (NN grandchild)))
        (, ,)
        (NP
          (NP (DT an))
          ('' ')
          (SBAR
            (S
              (NP (DT the) (NNP Gloster) (NN family))
              (VP (VBZ 's)
                (VP (VBN done))))))))
    (. .) (-RRB- -RRB-)))

advmod(is-4, So-2)
expl(is-4, there-3)
root(ROOT-0, is-4)
neg(is-4, n't-5)
advmod(grandchild-8, even-6)
det(grandchild-8, a-7)
nmod(is-4, grandchild-8)
nsubj(is-4, an-10)
det(family-14, the-12)
compound(family-14, Gloster-13)
nsubjpass(done-16, family-14)
auxpass(done-16, 's-15)
acl:relcl(an-10, done-16)

(ROOT
  (S
    (PP (RB Not) (IN like)
      (NP (PRP$ your) (NN mother)))
    (, ,)
    (NP (PRP she))
    (VP (VBZ is) (RB n't))
    (. .)))

neg(mother-4, Not-1)
case(mother-4, like-2)
nmod:poss(mother-4, your-3)
nmod:like(is-7, mother-4)
nsubj(is-7, she-6)
root(ROOT-0, is-7)
neg(is-7, n't-8)

(ROOT
  (S
    (NP (JJ _) (NN She) (NNS _))
    (VP (VBD carried)
      (S
        (NP (PRP$ her) (NN freight))
        (DT each)
        (VP (VB run))))
    (. .)))

amod(_-3, _-1)
compound(_-3, She-2)
nsubj(carried-4, _-3)
root(ROOT-0, carried-4)
nmod:poss(freight-6, her-5)
nsubj(run-8, freight-6)
dep(run-8, each-7)
ccomp(carried-4, run-8)

(ROOT
  (S (CC But)
    (NP (PRP they))
    (VP
      (VP (VBD died))
      (, ,)
      (NP (DT the) (JJ pore) (JJ little) (NNS beggars)))
    (. !)))

cc(died-3, But-1)
nsubj(died-3, they-2)
root(ROOT-0, died-3)
det(beggars-8, the-5)
amod(beggars-8, pore-6)
amod(beggars-8, little-7)
dobj(died-3, beggars-8)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (NN sea)))
      (NP (PRP she))
      (VP (VBD had)
        (NP (PRP 'em))))
    (: --)
    (S
      (NP (PRP they))
      (VP (VBD died)))
    (. .)))

case(sea-2, At-1)
nmod:at(had-4, sea-2)
nsubj(had-4, she-3)
root(ROOT-0, had-4)
dobj(had-4, 'em-5)
nsubj(died-8, they-7)
parataxis(had-4, died-8)

(ROOT
  (S
    (FRAG
      (NP
        (NP (RB Only) (NN you))
        (, ,)
        (NP (DT an))))
    ('' ')
    (NP (PRP you))
    (VP (VBD stood)
      (SBAR
        (S
          (NP (PRP it))
          (: ;)
          (NP (PRP you))
          (VP (VBP have) (RB n't)
            (VP (VBN stood)
              (ADVP (RB much))
              (PP (IN beside)))))))
    (. .)))

advmod(you-2, Only-1)
dep(stood-7, you-2)
appos(you-2, an-4)
nsubj(stood-7, you-6)
root(ROOT-0, stood-7)
nsubj(stood-13, it-8)
nsubj(stood-13, you-10)
aux(stood-13, have-11)
neg(stood-13, n't-12)
ccomp(stood-7, stood-13)
advmod(stood-13, much-14)
nmod(stood-13, beside-15)

(ROOT
  (S
    (VP
      (VP (VB Weak)
        (PRN (, ,)
          (NP (DT a) (NN liar))
          (, ,)))
      (CC and)
      (VP (VB idle))
      (, ,)
      (CC and)
      (VP (VB mean)
        (PP (IN as)
          (NP
            (NP (DT a) (NN collier) (POS 's))
            (NN whelp) (NN Nosing)))
        (PP (IN for)
          (NP
            (NP (NNS scraps))
            (PP (IN in)
              (NP (DT the) (NN galley)))))))
    (. .)))

root(ROOT-0, Weak-1)
det(liar-4, a-3)
dep(Weak-1, liar-4)
cc(Weak-1, and-6)
conj:and(Weak-1, idle-7)
cc(Weak-1, and-9)
conj:and(Weak-1, mean-10)
case(Nosing-16, as-11)
det(collier-13, a-12)
nmod:poss(Nosing-16, collier-13)
case(collier-13, 's-14)
compound(Nosing-16, whelp-15)
nmod:as(mean-10, Nosing-16)
case(scraps-18, for-17)
nmod:for(mean-10, scraps-18)
case(galley-21, in-19)
det(galley-21, the-20)
nmod:in(scraps-18, galley-21)

(ROOT
  (NP
    (NP (DT No) (NN help))
    (: --)
    (S
      (NP (PRP$ my) (NN son))
      (VP (VBD was)
        (NP (DT no) (NN help))))
    (. !)))

neg(help-2, No-1)
root(ROOT-0, help-2)
nmod:poss(son-5, my-4)
nsubj(help-8, son-5)
cop(help-8, was-6)
neg(help-8, no-7)
dep(help-2, help-8)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBZ gets)
      (NP
        (NP
          (NP (CD three))
          (VP (`` `) (VBN undred)
            (NP (CD thousand))
            (, ,)
            (PP (IN in)
              (NP (NN trust)))))
        (CC and)
        (NP
          (NP (DT the) (NN interest))
          (VP (VBN paid)))))
    (. .)))

dep(gets-3, So-1)
nsubj(gets-3, he-2)
root(ROOT-0, gets-3)
dobj(gets-3, three-4)
acl(three-4, undred-6)
dobj(undred-6, thousand-7)
case(trust-10, in-9)
nmod:in(undred-6, trust-10)
cc(three-4, and-11)
det(interest-13, the-12)
dobj(gets-3, interest-13)
conj:and(three-4, interest-13)
acl(interest-13, paid-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would) (RB n't)
        (VP (VB give)
          (NP (PRP it))
          (NP (PRP you))
          (, ,)
          (NP
            (NP (NNP Dickie))
            (: --)
            (S
              (NP (PRP you))
              (VP (VBP see)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBD made)
      (NP (PRP it))
      (PP (IN in)
        (NP (NN trade))))
    (. .)))

nsubj(give-4, I-1)
aux(give-4, would-2)
neg(give-4, n't-3)
ccomp(made-14, give-4)
iobj(give-4, it-5)
dobj(give-4, you-6)
dobj(give-4, Dickie-8)
nsubj(see-11, you-10)
parataxis(Dickie-8, see-11)
nsubj(made-14, I-13)
root(ROOT-0, made-14)
dobj(made-14, it-15)
case(trade-17, in-16)
nmod:in(made-14, trade-17)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (VP (VBN saved)
          (PP (IN from)
            (S
              (VP (VBG soiling)
                (NP (PRP$ your) (NNS fingers))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (NP (DT no) (NN child)))))
      (, ,)
      (NP (PRP It))
      (ADVP (DT all))
      (VP (VBZ comes)
        (PRT (RP back))
        (PP (TO to)
          (NP (DT the) (NN business)))))
    (. .)))

nsubjpass(saved-3, You-1)
auxpass(saved-3, 're-2)
root(ROOT-0, saved-3)
mark(soiling-5, from-4)
advcl(saved-3, soiling-5)
nmod:poss(fingers-7, your-6)
dobj(soiling-5, fingers-7)
cc(saved-3, and-9)
mark(have-12, if-10)
nsubj(have-12, you-11)
advcl(comes-18, have-12)
neg(child-14, no-13)
dobj(have-12, child-14)
nsubj(comes-18, It-16)
advmod(comes-18, all-17)
conj:and(saved-3, comes-18)
compound:prt(comes-18, back-19)
case(business-22, to-20)
det(business-22, the-21)
nmod:to(comes-18, business-22)

(ROOT
  (SQ
    (S
      (VP (VB Gad)))
    (, ,) (MD wo) (RB n't)
    (NP (PRP$ your) (NN wife))
    (VP (VB be)
      (ADJP (JJ wild)))
    (. !)))

dep(wild-8, Gad-1)
aux(wild-8, wo-3)
neg(wild-8, n't-4)
nmod:poss(wife-6, your-5)
nsubj(wild-8, wife-6)
cop(wild-8, be-7)
root(ROOT-0, wild-8)

(ROOT
  (NP (`` `)
    (NP
      (NP (NNS Calls)
        (CC and)
        (NNS calls))
      (PP (IN in)
        (NP (PRP$ her) (NN carriage))))
    (, ,)
    (NP
      (NP (PRP$ her) (`` `) (NN andkerchief))
      (ADVP (IN up))
      (S
        (VP (TO to) (`` `)
          (VP (VB er)
            (NP
              (NP (NN eye))
              (: :) (`` ``)
              (NP (NNP Daddy)))))))
    (. !)))

root(ROOT-0, Calls-2)
cc(Calls-2, and-3)
conj:and(Calls-2, calls-4)
case(carriage-7, in-5)
nmod:poss(carriage-7, her-6)
nmod:in(Calls-2, carriage-7)
nmod:poss(andkerchief-11, her-9)
appos(Calls-2, andkerchief-11)
advmod(andkerchief-11, up-12)
mark(er-15, to-13)
acl(andkerchief-11, er-15)
dobj(er-15, eye-16)
dep(eye-16, Daddy-19)

(ROOT
  (S
    (NP
      (ADJP (RB dear))
      (NN daddy))
    (VP (VBZ 's)
      (ADJP (JJ dyin) ('' ')))
    (. !) ('' '')))

amod(daddy-2, dear-1)
nsubj(dyin-4, daddy-2)
cop(dyin-4, 's-3)
root(ROOT-0, dyin-4)

(ROOT
  (S
    (VP (VB and)
      (S
        (VP (VBG doing)
          (NP (PRP$ her) (JJS best))
          (PP (TO to)
            (NP (NN cry))))))
    (. .)))

root(ROOT-0, and-1)
xcomp(and-1, doing-2)
nmod:poss(best-4, her-3)
dobj(doing-2, best-4)
case(cry-6, to-5)
nmod:to(doing-2, cry-6)

(ROOT
  (FRAG
    (NP (NNP Grateful))
    (. ?)))

root(ROOT-0, Grateful-1)

(ROOT
  (S
    (INTJ (UH Oh) (, ,) (UH yes))
    (, ,)
    (NP (PRP I))
    (VP
      (VP (VBP 'm)
        (ADJP (JJ grateful)))
      (, ,)
      (CC but)
      (VP (VBP keep)
        (NP (PRP her))
        (ADVP (RB away)
          (PP (IN from)
            (ADVP (RB here))))))
    (. .)))

discourse(grateful-7, Oh-1)
dep(Oh-1, yes-3)
nsubj(grateful-7, I-5)
nsubj(keep-10, I-5)
cop(grateful-7, 'm-6)
root(ROOT-0, grateful-7)
cc(grateful-7, but-9)
conj:but(grateful-7, keep-10)
dobj(keep-10, her-11)
advmod(keep-10, away-12)
case(here-14, from-13)
advcl(away-12, here-14)

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ Your) (NN mother))
        (`` `)
        (S
          (NP (NN ud))
          (ADVP (RB never))
          (VP (VBP ha)))
        ('' '))
      (VP (VBD stood) (`` `)
        (NP (NN er))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (ADJP (JJ anyhow)))
    (, ,)
    (S
      (NP (NNS women))
      (VP (VBP are)
        (ADJP (JJ queer))))
    (: ...) (. .)))

nmod:poss(mother-2, Your-1)
nsubj(stood-8, mother-2)
nsubj(anyhow-14, mother-2)
nsubj(ha-6, ud-4)
neg(ha-6, never-5)
dep(mother-2, ha-6)
root(ROOT-0, stood-8)
dobj(stood-8, er-10)
cc(stood-8, and-12)
conj:and(stood-8, anyhow-14)
nsubj(queer-18, women-16)
cop(queer-18, are-17)
conj:and(stood-8, queer-18)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (NNS women))
        (SBAR
          (S
            (VP (MD will)
              (VP (VB say)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP 've)
                      (VP (VBN married)
                        (NP (DT a) (JJ second) (NN time))))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
nsubj('s-2, women-3)
aux(say-5, will-4)
acl:relcl(women-3, say-5)
nsubj(married-8, I-6)
aux(married-8, 've-7)
ccomp(say-5, married-8)
det(time-11, a-9)
amod(time-11, second-10)
dobj(married-8, time-11)

(ROOT
  (FRAG (RB Not)
    (ADVP (RB quite) (. !))))

root(ROOT-0, Not-1)
dep(Not-1, quite-2)

(ROOT
  (S (CC But)
    (S
      (VP
        (VP (VB give)
          (NP (JJ pore) (NNS Aggie))
          (NP
            (QP (DT a) (CD hundred))))
        (, ,)
        (CC and)
        (VP (VB tell)
          (NP (PRP her))
          (NP (PRP$ your) (NNS lawyers)))))
    (VP (MD 'll)
      (VP (VB fight)))
    (. .)))

cc(fight-14, But-1)
csubj(fight-14, give-2)
amod(Aggie-4, pore-3)
iobj(give-2, Aggie-4)
advmod(hundred-6, a-5)
dobj(give-2, hundred-6)
cc(give-2, and-8)
conj:and(give-2, tell-9)
csubj(fight-14, tell-9)
iobj(tell-9, her-10)
nmod:poss(lawyers-12, your-11)
dobj(tell-9, lawyers-12)
aux(fight-14, 'll-13)
root(ROOT-0, fight-14)

(ROOT
  (S
    (S
      (NP (PRP She))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJS best) (NN o) (POS '))
          (NP (DT the) (NN boiling)))))
    (: --)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB meet)
          (NP (PRP her))
          (SBAR (IN before)
            (S
              (NP (PRP it))
              (VP (VBZ ends)))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (PP (IN in) (IN for)
          (NP
            (NP (DT a) (NN row))
            (PP (IN with)
              (NP (DT the) (NN mother)))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB leave)
          (S
            (NP (PRP you))
            (VP (VB settle)
              (NP (PRP$ my) (NNS friends)))))))
    (: :)
    (S
      (PP (IN For)
        (NP (DT a) (NN man)))
      (NP (PRP he))
      (VP (MD must)
        (VP (VB go)
          (PP (IN with)
            (NP
              (NP (DT a) (NN woman))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (NNS women))
                  (VP (VBP do) (RB n't)
                    (VP (VB understand))))))))))
    (: --)
    (CC Or)
    (S
      (NP
        (NP (DT the) (NN sort))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP say)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (MD can)
                    (VP (VB see)
                      (S
                        (NP (PRP it))
                        (NP (PRP they)))))))))))
      (VP (VBP are) (RB n't)
        (NP (DT the) (JJ marrying) (NN brand))))
    (. .)))

nsubj(o-5, She-1)
cop(o-5, was-2)
det(o-5, the-3)
amod(o-5, best-4)
root(ROOT-0, o-5)
case(o-5, '-6)
det(boiling-8, the-7)
dep(o-5, boiling-8)
nsubj(meet-12, you-10)
aux(meet-12, 'll-11)
conj:or(o-5, meet-12)
dobj(meet-12, her-13)
mark(ends-16, before-14)
nsubj(ends-16, it-15)
advcl(meet-12, ends-16)
nsubj(row-23, I-18)
cop(row-23, 'm-19)
case(row-23, in-20)
case(row-23, for-21)
det(row-23, a-22)
conj:or(o-5, row-23)
case(mother-26, with-24)
det(mother-26, the-25)
nmod:with(row-23, mother-26)
nsubj(leave-30, I-28)
aux(leave-30, 'll-29)
conj:or(o-5, leave-30)
nsubj(settle-32, you-31)
ccomp(leave-30, settle-32)
nmod:poss(friends-34, my-33)
dobj(settle-32, friends-34)
case(man-38, For-36)
det(man-38, a-37)
nmod:for(go-41, man-38)
nsubj(go-41, he-39)
aux(go-41, must-40)
conj:or(o-5, go-41)
case(woman-44, with-42)
det(woman-44, a-43)
nmod:with(go-41, woman-44)
dobj(understand-50, woman-44)
ref(woman-44, which-46)
nsubj(understand-50, women-47)
aux(understand-50, do-48)
neg(understand-50, n't-49)
acl:relcl(woman-44, understand-50)
cc(o-5, Or-52)
det(sort-54, the-53)
nsubj(say-56, sort-54)
nsubj(brand-66, sort-54)
ref(sort-54, that-55)
acl:relcl(sort-54, say-56)
nsubj(see-59, they-57)
aux(see-59, can-58)
ccomp(say-56, see-59)
nsubj(they-61, it-60)
xcomp(see-59, they-61)
cop(brand-66, are-62)
neg(brand-66, n't-63)
det(brand-66, the-64)
amod(brand-66, marrying-65)
conj:or(o-5, brand-66)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP
            (VP (VB speak)
              (ADVP (RB o))
              ('' ')
              (NP
                (NP
                  (NP (PRP$ your) (NN mother))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ 's)
                        (NP (NNP Lady) (NNP Gloster))
                        (ADVP (RB still))))))
                (: --)
                (S
                  (NP (PRP I))
                  (VP (VBP 'm)
                    (VP (VBG going)
                      (PP (TO to)
                        (ADVP (RB up))))))))
            (CC and)
            (VP (VB see)
              (NP (PRP her))))))
      (, ,)
      (PP (IN without)
        (S
          (NP (PRP it) (POS 's))
          (VP (VBG hurting)
            (NP (DT the) (NN will))))))
    (. .)))

cc(wanted-3, But-1)
nsubj(wanted-3, I-2)
nsubj:xsubj(speak-5, I-2)
nsubj:xsubj(see-22, I-2)
root(ROOT-0, wanted-3)
mark(speak-5, to-4)
xcomp(wanted-3, speak-5)
advmod(speak-5, o-6)
nmod:poss(mother-9, your-8)
dobj(speak-5, mother-9)
nsubj(Gloster-13, mother-9)
ref(mother-9, that-10)
cop(Gloster-13, 's-11)
compound(Gloster-13, Lady-12)
acl:relcl(mother-9, Gloster-13)
advmod(Gloster-13, still-14)
nsubj(going-18, I-16)
aux(going-18, 'm-17)
parataxis(mother-9, going-18)
case(up-20, to-19)
advcl(going-18, up-20)
cc(speak-5, and-21)
xcomp(wanted-3, see-22)
conj:and(speak-5, see-22)
dobj(see-22, her-23)
mark(hurting-28, without-25)
nsubj(hurting-28, it-26)
case(it-26, 's-27)
advcl(wanted-3, hurting-28)
det(will-30, the-29)
dobj(hurting-28, will-30)

(ROOT
  (FRAG
    (ADVP (RB Here))
    (. !)))

root(ROOT-0, Here-1)

(ROOT
  (S
    (VP (VB Take)
      (NP (PRP$ your) (NN hand))
      (PP (IN off)
        (NP (DT the) (NN bell-pull))))
    (. .)))

root(ROOT-0, Take-1)
nmod:poss(hand-3, your-2)
dobj(Take-1, hand-3)
case(bell-pull-6, off-4)
det(bell-pull-6, the-5)
nmod:off(Take-1, bell-pull-6)

(ROOT
  (S
    (S
      (NP (CD Five) (CD thousand))
      (VP (VBZ 's)
        (VP (VBG waiting)
          (PP (IN for)
            (NP (PRP you))))))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD 'll)
          (ADVP (RB only))
          (VP
            (VP (VB listen)
              (NP (DT a) (NN minute)))
            (, ,)
            (CC and)
            (VP (VB do)
              (SBAR (IN as)
                (S
                  (NP (PRP I))
                  (VP (VBD bid)
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP do))))))))))))
    (. .)))

nummod(thousand-2, Five-1)
nsubj(waiting-4, thousand-2)
aux(waiting-4, 's-3)
root(ROOT-0, waiting-4)
case(you-6, for-5)
nmod:for(waiting-4, you-6)
mark(listen-12, If-8)
nsubj(listen-12, you-9)
nsubj(do-17, you-9)
aux(listen-12, 'll-10)
advmod(listen-12, only-11)
dep(waiting-4, listen-12)
det(minute-14, a-13)
dobj(listen-12, minute-14)
cc(listen-12, and-16)
dep(waiting-4, do-17)
conj:and(listen-12, do-17)
mark(bid-20, as-18)
nsubj(bid-20, I-19)
advcl(do-17, bid-20)
nsubj(do-22, you-21)
ccomp(bid-20, do-22)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD 'll)
        (VP (VB try)
          (S
            (VP (TO to)
              (VP (VB prove)
                (S
                  (NP (PRP me))
                  (ADJP (JJ crazy)))))))))
    (, ,)
    (CC and)
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP bungle))))
      (, ,)
      (NP (PRP they))
      (VP (MD can)))
    (: ;)
    (CC And)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (S
          (NP (RB only) (PRP you))
          (VP (TO to)
            (VP (VB trust)
              (PP (TO to)))))))
    (. !)))

nsubj(try-3, They-1)
nsubj:xsubj(prove-5, They-1)
aux(try-3, 'll-2)
root(ROOT-0, try-3)
mark(prove-5, to-4)
xcomp(try-3, prove-5)
nsubj(crazy-7, me-6)
xcomp(prove-5, crazy-7)
cc(try-3, and-9)
mark(bungle-13, if-11)
nsubj(bungle-13, you-12)
advcl(can-16, bungle-13)
nsubj(can-16, they-15)
conj:and(try-3, can-16)
cc(try-3, And-18)
nsubj('ve-20, I-19)
conj:and(try-3, 've-20)
advmod(you-22, only-21)
dobj('ve-20, you-22)
mark(trust-24, to-23)
ccomp('ve-20, trust-24)
nmod(trust-24, to-25)

(ROOT
  (PRN (-LRB- -LRB-)
    (FRAG
      (NP (NNP O) (NNP God))
      (, ,)
      (SBAR
        (WHADVP (WRB why))
        (S
          (VP (VBP ai) (RB n't)
            (NP (PRP he)))
          (NP (DT a) (NN man))))
      (. ?))
    (-RRB- -RRB-)))

compound(God-3, O-2)
root(ROOT-0, God-3)
advmod(he-8, why-5)
cop(he-8, ai-6)
neg(he-8, n't-7)
dep(God-3, he-8)
det(man-10, a-9)
dep(he-8, man-10)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT some) (NN waste) (NN money))
          (PP (IN on)
            (NP
              (NP (NNS marbles))
              (, ,)
              (NP
                (NP
                  (NP (DT the) (JJ same))
                  (SBAR (IN as)
                    (S
                      (NP (NNP M'Cullough))
                      (VP (VBD tried)))))
                (: --)
                (NP
                  (NP (NNP Marbles))
                  (CC and)
                  (NP (NNS mausoleums)))))))))
    (: --)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP call)
        (NP (DT that) (JJ sinful) (NN pride))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(money-5, some-3)
compound(money-5, waste-4)
nsubj('s-2, money-5)
case(marbles-7, on-6)
nmod:on(money-5, marbles-7)
det(same-10, the-9)
appos(marbles-7, same-10)
mark(tried-13, as-11)
nsubj(tried-13, M'Cullough-12)
acl:relcl(same-10, tried-13)
dep(same-10, Marbles-15)
cc(Marbles-15, and-16)
dep(same-10, mausoleums-17)
conj:and(Marbles-15, mausoleums-17)
cc('s-2, but-19)
nsubj(call-21, I-20)
conj:but('s-2, call-21)
det(pride-24, that-22)
amod(pride-24, sinful-23)
dobj(call-21, pride-24)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT some) (NN ship) (NNS bodies))
          (PP (IN for)
            (NP (NN burial))))))
    (: --)
    (S
      (NP (PRP we))
      (VP (VBP 've)
        (VP
          (VP (VBN carried)
            (NP (PRP 'em)))
          (, ,)
          (VP (VBN soldered))
          (CC and)
          (VP (VBN packed)))))
    (: ;)
    (S
      (PP (IN Down)
        (PP (IN in)
          (NP (PRP$ their) (NNS wills))))
      (NP (PRP they))
      (VP (VBD wrote)
        (NP (PRP it))))
    (, ,)
    (CC and)
    (S
      (NP (NN nobody))
      (VP (VBD called)
        (S
          (VP (VBG _)
            (S
              (NP (PRP them))
              (ADJP (JJ _))
              (S
                (VP (VBN cracked))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(bodies-5, some-3)
compound(bodies-5, ship-4)
nsubj('s-2, bodies-5)
case(burial-7, for-6)
nmod:for(bodies-5, burial-7)
nsubj(carried-11, we-9)
nsubj(soldered-14, we-9)
nsubj(packed-16, we-9)
aux(carried-11, 've-10)
conj:and('s-2, carried-11)
dobj(carried-11, 'em-12)
conj:and('s-2, soldered-14)
conj:and(carried-11, soldered-14)
cc(carried-11, and-15)
conj:and('s-2, packed-16)
conj:and(carried-11, packed-16)
case(wills-21, Down-18)
case(wills-21, in-19)
nmod:poss(wills-21, their-20)
nmod:in(wrote-23, wills-21)
nsubj(wrote-23, they-22)
conj:and('s-2, wrote-23)
dobj(wrote-23, it-24)
cc('s-2, and-26)
nsubj(called-28, nobody-27)
conj:and('s-2, called-28)
xcomp(called-28, _-29)
nsubj(cracked-32, them-30)
dep(cracked-32, _-31)
xcomp(_-29, cracked-32)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP (PRP me))
        (: --)
        (NP (PRP I)))
      (VP (VBP 've)
        (NP
          (ADJP (RB too) (JJ much))
          (NN money))))
    (, ,)
    (CC and)
    (S
      (NP (NNS people))
      (VP (MD might)))
    (: ...) (. .)))

cc('ve-5, But-1)
nsubj('ve-5, me-2)
dep(me-2, I-4)
root(ROOT-0, 've-5)
advmod(much-7, too-6)
amod(money-8, much-7)
dobj('ve-5, money-8)
cc('ve-5, and-10)
nsubj(might-12, people-11)
conj:and('ve-5, might-12)

(ROOT
  (NP
    (NP (PDT All) (PRP$ my) (NN fault))
    (: :)
    (S
      (NP (PRP It))
      (VP (VBP come)
        (S
          (NP (NNP o) (POS '))
          (VP
            (VP (VBG hoping)
              (PP (IN for)
                (NP (NNS grandsons))))
            (CC and)
            (VP (VBG buying)
              (NP
                (NP (DT that) (NNP Wokin) (POS '))
                (NN vault)))))))
    (. .)))

det:predet(fault-3, All-1)
nmod:poss(fault-3, my-2)
root(ROOT-0, fault-3)
nsubj(come-6, It-5)
dep(fault-3, come-6)
nsubj(hoping-9, o-7)
nsubj(buying-13, o-7)
case(o-7, '-8)
ccomp(come-6, hoping-9)
case(grandsons-11, for-10)
nmod:for(hoping-9, grandsons-11)
cc(hoping-9, and-12)
ccomp(come-6, buying-13)
conj:and(hoping-9, buying-13)
det(Wokin-15, that-14)
nmod:poss(vault-17, Wokin-15)
case(Wokin-15, '-16)
dobj(buying-13, vault-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (NP
          (NP (JJ sick) (NN o) (POS '))
          (NP (DT the) (`` `) (NN ole) (NN dam) ('' ') (NN business)))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBG going)
          (PRT (RP back))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP I))
              (VP (VBD came)))))))
    (. .)))

nsubj(o-4, I-1)
cop(o-4, 'm-2)
amod(o-4, sick-3)
root(ROOT-0, o-4)
case(o-4, '-5)
det(business-11, the-6)
compound(business-11, ole-8)
compound(business-11, dam-9)
dep(o-4, business-11)
nsubj(going-15, I-13)
aux(going-15, 'm-14)
parataxis(o-4, going-15)
compound:prt(going-15, back-16)
advmod(came-19, where-17)
nsubj(came-19, I-18)
advcl(going-15, came-19)

(ROOT
  (S
    (ADVP (RB Dick))
    (, ,)
    (S
      (NP (PRP you))
      (VP (VBP 're)
        (NP
          (NP (DT the) (NN son) (NN o) (POS '))
          (JJ my) (NN body))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB take)
          (VP (VB charge)
            (NP (NN o) ('' '))
            (NP (DT the) (JJ same))))))
    (. !)))

advmod(body-10, Dick-1)
nsubj(body-10, you-3)
cop(body-10, 're-4)
det(o-7, the-5)
compound(o-7, son-6)
nmod:poss(body-10, o-7)
case(o-7, '-8)
amod(body-10, my-9)
root(ROOT-0, body-10)
cc(body-10, and-12)
nsubj(take-15, you-13)
aux(take-15, 'll-14)
conj:and(body-10, take-15)
xcomp(take-15, charge-16)
iobj(charge-16, o-17)
det(same-20, the-19)
dobj(charge-16, same-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB lie)
              (PP (IN by)
                (NP (PRP$ your) (NN mother)))
              (, ,)
              (ADVP
                (NP
                  (QP (CD ten) (CD thousand))
                  (NN mile))
                (RB away)))))))
    (, ,)
    (CC And)
    (S
      (NP (PRP they))
      (VP (MD 'll)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB send)
                (NP (PRP me))
                (PP (TO to)
                  (NP (NNP Woking)))))))))
    (: ;)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP you))
            (VP (MD 'll)
              (VP (VB earn)
                (NP (PRP$ your) (NN pay))))))))
    (. .)))

nsubj(want-2, I-1)
nsubj:xsubj(lie-4, I-1)
root(ROOT-0, want-2)
mark(lie-4, to-3)
xcomp(want-2, lie-4)
case(mother-7, by-5)
nmod:poss(mother-7, your-6)
nmod:by(lie-4, mother-7)
compound(thousand-10, ten-9)
nummod(mile-11, thousand-10)
nmod:npmod(away-12, mile-11)
advmod(lie-4, away-12)
cc(want-2, And-14)
nsubj(want-17, they-15)
nsubj:xsubj(send-19, they-15)
aux(want-17, 'll-16)
conj:and(want-2, want-17)
mark(send-19, to-18)
xcomp(want-17, send-19)
dobj(send-19, me-20)
case(Woking-22, to-21)
nmod:to(send-19, Woking-22)
cc(want-2, and-24)
nsubj('s-26, that-25)
conj:and(want-2, 's-26)
advmod(earn-30, where-27)
nsubj(earn-30, you-28)
aux(earn-30, 'll-29)
advcl('s-26, earn-30)
nmod:poss(pay-32, your-31)
dobj(earn-30, pay-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN thought)
        (NP (PRP it))
        (PP (RB out) (IN on)
          (NP
            (NP (DT the) (NN quiet))
            (, ,)
            (NP (DT the) (JJ same))))
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN done))))))))
        (: --)
        (S
          (NP
            (NP (NNP Quiet))
            (, ,)
            (CC and)
            (NP
              (NP
                (ADJP
                  (ADJP (JJ decent))
                  (, ,)
                  (CC and)
                  (ADJP (JJ proper))
                  (: --))
                (DT an))
              (SBAR
                (S
                  (NP (POS '))
                  (ADVP (RB here))
                  (VP (VBZ 's)
                    (NP (PRP$ your) (NNS orders))))))
            (, ,))
          (NP (PRP$ my) (NN son)))))
    (. .)))

nsubj(thought-3, I-1)
aux(thought-3, 've-2)
root(ROOT-0, thought-3)
dobj(thought-3, it-4)
advmod(quiet-8, out-5)
case(quiet-8, on-6)
det(quiet-8, the-7)
nmod:on(thought-3, quiet-8)
det(same-11, the-10)
appos(quiet-8, same-11)
mark(ought-14, as-12)
nsubj(ought-14, it-13)
nsubjpass:xsubj(done-17, it-13)
advcl(thought-3, ought-14)
mark(done-17, to-15)
auxpass(done-17, be-16)
xcomp(ought-14, done-17)
nsubj(son-35, Quiet-19)
cc(Quiet-19, and-21)
conj:and(Quiet-19, decent-22)
nsubj(son-35, decent-22)
cc(decent-22, and-24)
conj:and(Quiet-19, proper-25)
conj:and(decent-22, proper-25)
dep(decent-22, an-27)
nsubj(orders-32, '-28)
advmod(orders-32, here-29)
cop(orders-32, 's-30)
nmod:poss(orders-32, your-31)
acl:relcl(decent-22, orders-32)
nmod:poss(son-35, my-34)
parataxis(thought-3, son-35)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP know)
      (NP (DT the) (NN Line)))
    (. ?)))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
det(Line-4, the-3)
dobj(know-2, Line-4)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP do) (RB n't)))
    (, ,)
    (FRAG
      (ADVP (RB though)))
    (. .)))

nsubj(do-2, You-1)
root(ROOT-0, do-2)
neg(do-2, n't-3)
parataxis(do-2, though-5)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP write)
        (PP (TO to)
          (NP (DT the) (NNP Board)))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VB tell)
          (NP
            (NP
              (NP
                (NP (PRP$ Your) (NN father) (POS 's))
                (NN death))
              (SBAR
                (S
                  (VP (VBZ has)
                    (VP (VBN upset)
                      (NP
                        (NP (PRP you))
                        (, an) ('' ')
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP 're)
                              (ADJP (JJ goin) ('' ')
                                (PP (TO to)
                                  (NP
                                    (NP (NN cruise))
                                    (PP (IN for)
                                      (NP (DT a) (NN spell)))))))))))))))
            (, ,)
            (NP (NNP An) (POS ')))))
      (NP (PRP you))
      (VP (MD 'd)
        (VP (VB like)
          (NP (DT the) (NNP _) (NNP Mary) (NNP Gloster) (NNP _)))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN held)
          (S
            (NP (PRP her))
            (ADJP (JJ ready)
              (PP (IN for)
                (NP (DT this))))))))
    (: --)
    (S
      (NP (PRP They))
      (VP (MD 'll)
        (VP (VB put)
          (NP (PRP her))
          (PP (IN in)
            (S
              (VP (VBG working)
                (NP (NN order))))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB take)
          (NP (PRP her))
          (ADVP (RB out))
          (SBAR (IN as)
            (S
              (NP (PRP she))
              (VP (VBZ is)))))))
    (. .)))

nsubj(write-2, You-1)
root(ROOT-0, write-2)
case(Board-5, to-3)
det(Board-5, the-4)
nmod:to(write-2, Board-5)
cc(write-2, and-7)
dep(like-32, tell-8)
nmod:poss(father-10, Your-9)
nmod:poss(death-12, father-10)
case(father-10, 's-11)
dobj(tell-8, death-12)
aux(upset-14, has-13)
acl:relcl(death-12, upset-14)
dobj(upset-14, you-15)
nsubj(goin-20, you-18)
cop(goin-20, 're-19)
acl:relcl(you-15, goin-20)
case(cruise-23, to-22)
nmod:to(goin-20, cruise-23)
case(spell-26, for-24)
det(spell-26, a-25)
nmod:for(cruise-23, spell-26)
appos(death-12, An-28)
case(An-28, '-29)
nsubj(like-32, you-30)
aux(like-32, 'd-31)
conj:and(write-2, like-32)
det(_-37, the-33)
compound(_-37, _-34)
compound(_-37, Mary-35)
compound(_-37, Gloster-36)
dobj(like-32, _-37)
nsubj(held-41, I-39)
aux(held-41, 've-40)
conj:and(write-2, held-41)
nsubj(ready-43, her-42)
xcomp(held-41, ready-43)
case(this-45, for-44)
nmod:for(ready-43, this-45)
nsubj(put-49, They-47)
aux(put-49, 'll-48)
conj:and(write-2, put-49)
dobj(put-49, her-50)
mark(working-52, in-51)
advcl(put-49, working-52)
dobj(working-52, order-53)
cc(write-2, and-54)
nsubj(take-57, you-55)
aux(take-57, 'll-56)
conj:and(write-2, take-57)
dobj(take-57, her-58)
advmod(take-57, out-59)
mark(is-62, as-60)
nsubj(is-62, she-61)
advcl(take-57, is-62)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADJP
        (NP (NN money))
        (JJ idle)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP
              (VP (VBN patched)
                (NP (PRP her)))
              (CC and)
              (VP (VBN put)
                (NP (PRP her))
                (PP (RP aside)
                  (NP (-LRB- -LRB-)
                    (NP (NNP Thank) (NNP God))
                    (, ,)
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (MD can)
                          (VP (VB pay)
                            (PP (IN for)
                              (NP (PRP$ my) (NN fancies)))))))))))))))
    (. !) (-RRB- -RRB-)))

discourse(idle-6, Yes-1)
nsubj(idle-6, it-3)
cop(idle-6, was-4)
nmod:npmod(idle-6, money-5)
root(ROOT-0, idle-6)
advmod(patched-9, when-7)
nsubj(patched-9, I-8)
nsubj(put-12, I-8)
ccomp(idle-6, patched-9)
dobj(patched-9, her-10)
cc(patched-9, and-11)
ccomp(idle-6, put-12)
conj:and(patched-9, put-12)
dobj(put-12, her-13)
dep(God-17, aside-14)
compound(God-17, Thank-16)
nmod(put-12, God-17)
nsubj(pay-21, I-19)
aux(pay-21, can-20)
acl:relcl(God-17, pay-21)
case(fancies-24, for-22)
nmod:poss(fancies-24, my-23)
nmod:for(pay-21, fancies-24)

(ROOT
  (NP (: --)
    (NP (DT the) (NN boat))
    (SBAR
      (WHADVP (WRB where))
      (S
        (S
          (NP (PRP$ your) (NN mother))
          (VP (VBD died)))
        (, ,)
        (S
          (PP (IN By)
            (NP (DT the) (NNP Little) (NNPS Paternosters)))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP you))
              (VP (VBP come)
                (PP (TO to)
                  (NP (DT the) (NNP Union) (NNP Bank))))))
          (, ,)
          (NP (PRP We))
          (VP (VBD dropped)
            (NP (PRP her))
            (PRN (: --)
              (S
                (NP (PRP I))
                (VP (VBP think)
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBD told)
                        (NP (PRP you))
                        (PRN (: --)
                          (CC and)
                          (S
                            (NP (PRP I))
                            (VP (VBD pricked)
                              (NP (PRP it))
                              (PP (IN off)
                                (SBAR
                                  (WHADVP (WRB where))
                                  (S
                                    (NP (PRP she))
                                    (VP (VBD sank)))))))
                          (: --))
                        (S
                          (VP (VBG -LSB-) (`` `)
                            (NP
                              (NP (NNP Tiny))
                              (SBAR
                                (S
                                  (NP (PRP she))
                                  (VP (VBD looked)
                                    (PP (IN on)
                                      (NP (DT the) (NN grating))))))))))))))
              (: --))
            (SBAR (IN that)
              (S
                (NP
                  (NP (JJ oily) (, ,) (JJ treacly) (NN sea))
                  (: --)
                  (NP (JJ -RSB-) (`` `) (JJ Hundred)
                    (CC and)
                    (JJ eighteen) (NNS East))
                  (, ,))
                (VP (VBP remember))))))
        (, ,)
        (CC and)
        (S
          (NP (NNP South))
          (NP (RB just) (CD three)))))
    (. .)))

det(boat-3, the-2)
root(ROOT-0, boat-3)
advmod(died-7, where-4)
nmod:poss(mother-6, your-5)
nsubj(died-7, mother-6)
acl:relcl(boat-3, died-7)
case(Paternosters-12, By-9)
det(Paternosters-12, the-10)
compound(Paternosters-12, Little-11)
nmod:by(dropped-23, Paternosters-12)
mark(come-16, as-14)
nsubj(come-16, you-15)
advcl(dropped-23, come-16)
case(Bank-20, to-17)
det(Bank-20, the-18)
compound(Bank-20, Union-19)
nmod:to(come-16, Bank-20)
nsubj(dropped-23, We-22)
ccomp(died-7, dropped-23)
dobj(dropped-23, her-24)
nsubj(think-27, I-26)
parataxis(dropped-23, think-27)
nsubj(told-29, I-28)
ccomp(think-27, told-29)
dobj(told-29, you-30)
cc(pricked-34, and-32)
nsubj(pricked-34, I-33)
parataxis(told-29, pricked-34)
dobj(pricked-34, it-35)
mark(sank-39, off-36)
advmod(sank-39, where-37)
nsubj(sank-39, she-38)
advcl(pricked-34, sank-39)
xcomp(told-29, -LSB--41)
dobj(-LSB--41, Tiny-43)
nsubj(looked-45, she-44)
acl:relcl(Tiny-43, looked-45)
case(grating-48, on-46)
det(grating-48, the-47)
nmod:on(looked-45, grating-48)
mark(remember-63, that-50)
amod(sea-54, oily-51)
amod(sea-54, treacly-53)
nsubj(remember-63, sea-54)
amod(Hundred-58, -RSB--56)
dep(sea-54, Hundred-58)
cc(Hundred-58, and-59)
amod(East-61, eighteen-60)
dep(sea-54, East-61)
conj:and(Hundred-58, East-61)
ccomp(dropped-23, remember-63)
cc(died-7, and-65)
dep(three-68, South-66)
advmod(three-68, just-67)
acl:relcl(boat-3, three-68)
conj:and(died-7, three-68)

(ROOT
  (S
    (S
      (NP (NNP Easy))
      (VP (VBP bearings)
        (S
          (VP (TO to)
            (VP (VB carry))))
        (: --)
        (UCP
          (ADJP
            (NP (CD three))
            (JJ South))
          (: --)
          (NP
            (NP (CD three))
            (PP (TO to)
              (NP (DT the) (NN dot)))))))
    (: ;)
    (CC But)
    (S
      (NP (PRP I))
      (VP (VBD gave)
        (NP (NNP M'Andrew))
        (NP
          (NP (DT a) (NN copy))
          (PP (IN in)
            (NP
              (NP (NN case))
              (PP (IN of)
                (S
                  (VP (VBG dying)
                    (PRN (: --)
                      (CC or)
                      (ADVP (RB not)))))))))))
    (. .)))

nsubj(bearings-2, Easy-1)
nsubj:xsubj(carry-4, Easy-1)
root(ROOT-0, bearings-2)
mark(carry-4, to-3)
xcomp(bearings-2, carry-4)
nmod:npmod(South-7, three-6)
xcomp(bearings-2, South-7)
dep(South-7, three-9)
case(dot-12, to-10)
det(dot-12, the-11)
nmod:to(three-9, dot-12)
cc(bearings-2, But-14)
nsubj(gave-16, I-15)
conj:but(bearings-2, gave-16)
iobj(gave-16, M'Andrew-17)
det(copy-19, a-18)
dobj(gave-16, copy-19)
mark(dying-23, in-20)
mwe(in-20, case-21)
mwe(in-20, of-22)
acl(copy-19, dying-23)
cc(not-26, or-25)
dep(dying-23, not-26)

(ROOT
  (S
    (S (CC And)
      (SBAR (RB so)
        (S
          (NP (PRP you))
          (VP (MD 'll)
            (VP (VB write)
              (PP (TO to)
                (NP (NNP M'Andrew)))))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ 's)
        (NP
          (NP (NNP Chief))
          (PP (IN of)
            (NP (DT the) (NNP Maori) (NNP Line))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (MD 'll)
        (VP (VB give)
          (S
            (NP (PRP him))
            (VP (VB leave) (, ,)
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP
                    (VP (VBP ask)
                      (NP (PRP 'em)))
                    (CC and)
                    (VP (VBP say)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (NP
                              (NP (NN business) (NN o) (POS '))
                              (NN mine))))))))))))))
    (. .)))

cc(Chief-11, And-1)
advmod(write-5, so-2)
nsubj(write-5, you-3)
aux(write-5, 'll-4)
advcl(Chief-11, write-5)
case(M'Andrew-7, to-6)
nmod:to(write-5, M'Andrew-7)
nsubj(Chief-11, he-9)
cop(Chief-11, 's-10)
root(ROOT-0, Chief-11)
case(Line-15, of-12)
det(Line-15, the-13)
compound(Line-15, Maori-14)
nmod:of(Chief-11, Line-15)
nsubj(give-19, They-17)
aux(give-19, 'll-18)
parataxis(Chief-11, give-19)
nsubj(leave-21, him-20)
ccomp(give-19, leave-21)
mark(ask-25, if-23)
nsubj(ask-25, you-24)
nsubj(say-28, you-24)
advcl(leave-21, ask-25)
dobj(ask-25, 'em-26)
cc(ask-25, and-27)
advcl(leave-21, say-28)
conj:and(ask-25, say-28)
nsubj(mine-34, it-29)
cop(mine-34, 's-30)
compound(o-32, business-31)
nmod:poss(mine-34, o-32)
case(o-32, '-33)
ccomp(say-28, mine-34)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD built)
        (NP
          (NP (CD three) (NNS boats))
          (PP (IN for)
            (NP
              (NP (DT the) (NNPS Maoris))
              (, ,)
              (NP (DT an))))
          ('' ')
          (ADJP
            (ADVP (RB very) (RB well))
            (VBN pleased)))))
    (PRN
      (S
        (NP (PRP they))
        (VP (VBD were) (, ,)
          (SBAR
            (S
              (NP
                (NP (NNP An) (POS '))
                (NN I))
              (VP (VBP 've)
                (VP (VBN known)
                  (NP
                    (NP (NNP Mac))
                    (PP (IN since)
                      (NP (DT the) (NNPS Fifties))))))))))
      (, ,))
    (CC and)
    (S
      (NP (NNP Mac))
      (VP (VBD knew)
        (NP
          (NP (PRP me))
          (: --)
          (CC and)
          (NP (PRP her)))))
    (. .)))

nsubj(built-2, I-1)
root(ROOT-0, built-2)
nummod(boats-4, three-3)
dobj(built-2, boats-4)
case(Maoris-7, for-5)
det(Maoris-7, the-6)
nmod:for(boats-4, Maoris-7)
appos(Maoris-7, an-9)
advmod(well-12, very-11)
advmod(pleased-13, well-12)
amod(boats-4, pleased-13)
nsubj(were-15, they-14)
dep(built-2, were-15)
nmod:poss(I-19, An-17)
case(An-17, '-18)
nsubj(known-21, I-19)
aux(known-21, 've-20)
ccomp(were-15, known-21)
dobj(known-21, Mac-22)
case(Fifties-25, since-23)
det(Fifties-25, the-24)
nmod:since(Mac-22, Fifties-25)
cc(built-2, and-27)
nsubj(knew-29, Mac-28)
conj:and(built-2, knew-29)
dobj(knew-29, me-30)
cc(me-30, and-32)
dobj(knew-29, her-33)
conj:and(me-30, her-33)

(ROOT
  (S
    (S
      (SBAR (IN After)
        (S
          (NP (DT the) (JJ first) (NN stroke))
          (VP (VBD warned)
            (NP (PRP me)))))
      (NP (PRP I))
      (VP (VBD sent)
        (NP (PRP him))
        (NP (DT the) (NN money)
          (S
            (VP (TO to)
              (VP (VB keep)
                (S
                  (PP (IN Against)
                    (NP (DT the) (NN time)))
                  (NP (PRP you))
                  (VP (MD 'd)
                    (VP (VB claim)
                      (NP (PRP it)))))
                (, ,) (VB committin) ('' ')
                (NP (PRP$ your) (NN dad))
                (PP (TO to)
                  (NP (DT the) (JJ deep)))))))))
    (: ;)
    (S
      (S
        (SBAR (IN For)
          (S
            (S
              (NP (PRP you))
              (VP (VBP are)
                (NP
                  (NP (DT the) (NN son) (NN o) (POS '))
                  (JJ my) (NN body))))
            (, ,)
            (CC and)
            (S
              (NP (NNP Mac))
              (VP (VBD was)
                (NP (PRP$ my) (JJS oldest) (NN friend))))))
        (, ,)
        (NP (PRP I))
        (VP (VBP 've)
          (ADVP (RB never))
          (VP (VBN asked) (`` `)
            (NP
              (NP (NN im))
              (PP (TO to) (NN dinner))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP he))
        (VP (MD 'll)
          (VP (VB see)
            (NP (PRP it))
            (PRT (RP out))
            (PP (TO to)
              (NP (DT the) (NN end)))))))
    (. .)))

mark(warned-5, After-1)
det(stroke-4, the-2)
amod(stroke-4, first-3)
nsubj(warned-5, stroke-4)
advcl(sent-8, warned-5)
dobj(warned-5, me-6)
nsubj(sent-8, I-7)
root(ROOT-0, sent-8)
iobj(sent-8, him-9)
det(money-11, the-10)
dobj(sent-8, money-11)
mark(keep-13, to-12)
acl(money-11, keep-13)
case(time-16, Against-14)
det(time-16, the-15)
nmod:against(claim-19, time-16)
nsubj(claim-19, you-17)
aux(claim-19, 'd-18)
ccomp(keep-13, claim-19)
dobj(claim-19, it-20)
dep(keep-13, committin-22)
nmod:poss(dad-25, your-24)
dobj(keep-13, dad-25)
case(deep-28, to-26)
det(deep-28, the-27)
nmod:to(keep-13, deep-28)
mark(body-38, For-30)
nsubj(body-38, you-31)
cop(body-38, are-32)
det(o-35, the-33)
compound(o-35, son-34)
nmod:poss(body-38, o-35)
case(o-35, '-36)
amod(body-38, my-37)
advcl(asked-50, body-38)
cc(body-38, and-40)
nsubj(friend-45, Mac-41)
cop(friend-45, was-42)
nmod:poss(friend-45, my-43)
amod(friend-45, oldest-44)
conj:and(body-38, friend-45)
advcl(asked-50, friend-45)
nsubj(asked-50, I-47)
aux(asked-50, 've-48)
neg(asked-50, never-49)
parataxis(sent-8, asked-50)
dobj(asked-50, im-52)
case(dinner-54, to-53)
acl(im-52, dinner-54)
cc(asked-50, but-56)
nsubj(see-59, he-57)
aux(see-59, 'll-58)
parataxis(sent-8, see-59)
conj:but(asked-50, see-59)
dobj(see-59, it-60)
compound:prt(see-59, out-61)
case(end-64, to-62)
det(end-64, the-63)
nmod:to(see-59, end-64)

(ROOT
  (S
    (S
      (NP (NNP Stiff-necked) (NNP Glasgow))
      (VP (VBP beggar)))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (VP (VBN heard)
            (SBAR
              (S
                (NP (PRP he))
                (VP (VBZ 's)
                  (VP (VBN prayed)
                    (PP (IN for)
                      (NP (PRP$ my) (NN soul))))))))))
      (, ,))
    (CC But)
    (S
      (S
        (NP (PRP he))
        (VP (MD could) (RB n't)
          (VP (VB lie)
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBD paid)
                  (NP (PRP him))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP he))
        (VP (MD 'd)
          (VP (VB starve)
            (SBAR (IN before)
              (S
                (NP (PRP he))
                (VP (VBD stole))))))))
    (. !)))

compound(Glasgow-2, Stiff-necked-1)
nsubj(beggar-3, Glasgow-2)
root(ROOT-0, beggar-3)
nsubj(heard-7, I-5)
aux(heard-7, 've-6)
dep(beggar-3, heard-7)
nsubjpass(prayed-10, he-8)
auxpass(prayed-10, 's-9)
ccomp(heard-7, prayed-10)
case(soul-13, for-11)
nmod:poss(soul-13, my-12)
nmod:for(prayed-10, soul-13)
cc(beggar-3, But-15)
nsubj(lie-19, he-16)
aux(lie-19, could-17)
neg(lie-19, n't-18)
conj:but(beggar-3, lie-19)
mark(paid-22, if-20)
nsubj(paid-22, you-21)
advcl(lie-19, paid-22)
dobj(paid-22, him-23)
cc(lie-19, and-25)
nsubj(starve-28, he-26)
aux(starve-28, 'd-27)
conj:but(beggar-3, starve-28)
conj:and(lie-19, starve-28)
mark(stole-31, before-29)
nsubj(stole-31, he-30)
advcl(starve-28, stole-31)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD 'll)
        (VP (VB take)
          (NP
            (NP (DT the) (NNP _) (NNP Mary) (NNP _))
            (PP (IN in)
              (NP (NN ballast)))))))
    (: --)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB find)
          (NP (PRP her))
          (NP (DT a) (JJ lively) (NN ship)))))
    (: ;)
    (CC And)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB take)
          (NP
            (NP
              (NP (NNP Sir) (NNP Anthony) (NNP Gloster))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ goes)
                    (PRT (RP on))
                    (`` `)
                    (S
                      (S
                        (VP (VBZ is)
                          (NP
                            (NP (NN wedding-trip))
                            (, ,)
                            (NP
                              (NP (NNP Lashed))
                              (PP (IN in)
                                (NP
                                  (NP (PRP$ our) (JJ old) (NN deck-cabin))
                                  (PP (IN with)
                                    (NP (DT all) (CD three) (NNS port-holes)))))))))
                      (ADJP (JJ wide)))))))
            (, ,)
            (NP
              (NP (DT The) (NN kick) (NN o) (POS '))
              (NP (DT the) (NN screw))
              (PP (IN beneath)
                (NP (PRP him)))
              (CC and)
              (NP
                (NP (DT the) (NN round))
                (NP
                  (NP (JJ blue) (NNS seas))
                  (ADVP (IN outside)))))))))
    (. !)))

nsubj(take-3, He-1)
aux(take-3, 'll-2)
root(ROOT-0, take-3)
det(_-7, the-4)
compound(_-7, _-5)
compound(_-7, Mary-6)
dobj(take-3, _-7)
case(ballast-9, in-8)
nmod:in(_-7, ballast-9)
nsubj(find-13, you-11)
aux(find-13, 'll-12)
conj:and(take-3, find-13)
iobj(find-13, her-14)
det(ship-17, a-15)
amod(ship-17, lively-16)
dobj(find-13, ship-17)
cc(take-3, And-19)
nsubj(take-22, you-20)
aux(take-22, 'll-21)
conj:and(take-3, take-22)
compound(Gloster-25, Sir-23)
compound(Gloster-25, Anthony-24)
dobj(take-22, Gloster-25)
nsubj(goes-28, Gloster-25)
ref(Gloster-25, that-27)
acl:relcl(Gloster-25, goes-28)
compound:prt(goes-28, on-29)
cop(wedding-trip-32, is-31)
xcomp(goes-28, wedding-trip-32)
appos(wedding-trip-32, Lashed-34)
case(deck-cabin-38, in-35)
nmod:poss(deck-cabin-38, our-36)
amod(deck-cabin-38, old-37)
nmod:in(Lashed-34, deck-cabin-38)
case(port-holes-42, with-39)
det(port-holes-42, all-40)
nummod(port-holes-42, three-41)
nmod:with(deck-cabin-38, port-holes-42)
dep(wedding-trip-32, wide-43)
det(o-47, The-45)
compound(o-47, kick-46)
appos(Gloster-25, o-47)
case(o-47, '-48)
det(screw-50, the-49)
dep(o-47, screw-50)
case(him-52, beneath-51)
nmod:beneath(o-47, him-52)
cc(o-47, and-53)
det(round-55, the-54)
appos(Gloster-25, round-55)
conj:and(o-47, round-55)
amod(seas-57, blue-56)
dep(round-55, seas-57)
advmod(seas-57, outside-58)

(ROOT
  (NP
    (NP
      (NP (NNP Sir) (NNP Anthony))
      (NP
        (NP (NNP Gloster) (POS 's))
        (NN carriage)))
    (: --)
    (NP
      (NP (PRP$ our) (`` `) (JJ ouse-flag) (NN flyin) ('' '))
      (ADJP (JJ free)))
    (: --)
    (NP
      (NP (CD Ten) (CD thousand) (NNS men))
      (PP (IN on)
        (NP
          (NP (DT the) (JJ pay-roll)
            (CC and)
            (JJ forty) (NNS freighters))
          (PP (IN at)
            (NP (NN sea))))))
    (. !)))

compound(Anthony-2, Sir-1)
root(ROOT-0, Anthony-2)
nmod:poss(carriage-5, Gloster-3)
case(Gloster-3, 's-4)
dep(Anthony-2, carriage-5)
nmod:poss(flyin-10, our-7)
amod(flyin-10, ouse-flag-9)
dep(Anthony-2, flyin-10)
amod(flyin-10, free-12)
nummod(men-16, Ten-14)
nummod(men-16, thousand-15)
dep(Anthony-2, men-16)
case(freighters-22, on-17)
det(freighters-22, the-18)
amod(freighters-22, pay-roll-19)
cc(pay-roll-19, and-20)
conj:and(pay-roll-19, forty-21)
amod(freighters-22, forty-21)
nmod:on(men-16, freighters-22)
case(sea-24, at-23)
nmod:at(freighters-22, sea-24)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBD made)
        (NP
          (NP (PRP himself))
          (CC and)
          (NP
            (QP (DT a) (CD million))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (DT this) (NN world))
        (VP (VBZ is)
          (NP
            (NP (DT a) (NN fleetin) (POS '))
            (NN show))))
      (, ,)
      (CC And)
      (S
        (NP (PRP he))
        (VP (MD 'll)
          (VP (VB go)
            (PP (TO to)
              (NP
                (NP (DT the) (NN wife))
                (PP (IN of) (`` `)
                  (S
                    (VP (VBZ is)
                      (VP (VBG bosom)
                        (NP (DT the) (JJ same))
                        (SBAR (IN as)
                          (S
                            (NP (PRP he))
                            (VP (MD ought)
                              (S
                                (VP (TO to)
                                  (VP (VB go)
                                    (SBAR
                                      (S
                                        (PRN (: --)
                                          (PP (IN By)
                                            (NP
                                              (NP (DT the) (NN heel))
                                              (PP (IN of)
                                                (NP (DT the) (NNPS Paternosters)))))
                                          (: --))
                                        (S
                                          (NP (EX there))
                                          (VP (VBZ is) (RB n't)
                                            (NP (DT a) (NN chance))
                                            (PP (TO to)
                                              (NP (NN mistake)))))
                                        (: --)
                                        (S (CC And)
                                          (NP (NNP Mac))
                                          (VP (MD 'll)
                                            (VP (VB pay)
                                              (NP (PRP you))
                                              (NP
                                                (NP (DT the) (NN money))
                                                (CONJP (RB as) (RB soon) (IN as))
                                                (NP (DT the) (JJ bubbles) (NN break))))))))))))))))))))))))
    (. !)))

nsubj(made-2, He-1)
root(ROOT-0, made-2)
dobj(made-2, himself-3)
cc(himself-3, and-4)
advmod(million-6, a-5)
dobj(made-2, million-6)
conj:and(himself-3, million-6)
cc(made-2, but-8)
det(world-10, this-9)
nsubj(show-15, world-10)
cop(show-15, is-11)
det(fleetin-13, a-12)
nmod:poss(show-15, fleetin-13)
case(fleetin-13, '-14)
conj:but(made-2, show-15)
cc(show-15, And-17)
nsubj(go-20, he-18)
aux(go-20, 'll-19)
conj:but(made-2, go-20)
conj:and(show-15, go-20)
case(wife-23, to-21)
det(wife-23, the-22)
nmod:to(go-20, wife-23)
case(bosom-27, of-24)
aux(bosom-27, is-26)
acl(wife-23, bosom-27)
det(same-29, the-28)
dobj(bosom-27, same-29)
mark(ought-32, as-30)
nsubj(ought-32, he-31)
nsubj:xsubj(go-34, he-31)
advcl(bosom-27, ought-32)
mark(go-34, to-33)
xcomp(ought-32, go-34)
case(heel-38, By-36)
det(heel-38, the-37)
dep(is-44, heel-38)
case(Paternosters-41, of-39)
det(Paternosters-41, the-40)
nmod:of(heel-38, Paternosters-41)
expl(is-44, there-43)
dep(go-34, is-44)
neg(is-44, n't-45)
det(chance-47, a-46)
nsubj(is-44, chance-47)
case(mistake-49, to-48)
nmod:to(is-44, mistake-49)
cc(pay-54, And-51)
nsubj(pay-54, Mac-52)
aux(pay-54, 'll-53)
parataxis(is-44, pay-54)
iobj(pay-54, you-55)
det(money-57, the-56)
dobj(pay-54, money-57)
advmod(soon-59, as-58)
cc(money-57, soon-59)
dep(soon-59, as-60)
det(break-63, the-61)
amod(break-63, bubbles-62)
dobj(pay-54, break-63)
conj:soon(money-57, break-63)

(ROOT
  (FRAG
    (FRAG
      (NP (CD Five) (CD thousand))
      (PP (IN for)
        (NP
          (NP
            (NP (CD six) (NNS weeks))
            (POS ') (VBG cruising))
          (, ,)
          (NP
            (NP (DT the) (JJS staunchest) (NN freighter))
            (ADJP (RB afloat))))))
    (, ,)
    (FRAG (CC And)
      (NP
        (NP (NNP Mac))
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD 'll)
              (VP (VB give)
                (NP (PRP you))
                (NP
                  (NP (PRP$ your) (NN bonus))
                  (NP (DT the) (NN minute))))))))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (PP (IN out)
              (NP
                (NP (NNP o) (POS '))
                (DT the) (NN boat))))))
      (. !))))

nummod(thousand-2, Five-1)
root(ROOT-0, thousand-2)
case(weeks-5, for-3)
nummod(weeks-5, six-4)
nmod:'(thousand-2, weeks-5)
case(weeks-5, '-6)
amod(weeks-5, cruising-7)
det(freighter-11, the-9)
amod(freighter-11, staunchest-10)
appos(weeks-5, freighter-11)
amod(freighter-11, afloat-12)
cc(Mac-15, And-14)
parataxis(thousand-2, Mac-15)
nsubj(give-18, he-16)
aux(give-18, 'll-17)
acl:relcl(Mac-15, give-18)
iobj(give-18, you-19)
nmod:poss(bonus-21, your-20)
dobj(give-18, bonus-21)
det(minute-23, the-22)
dep(bonus-21, minute-23)
nsubj(boat-30, I-24)
cop(boat-30, 'm-25)
case(boat-30, out-26)
nmod:poss(boat-30, o-27)
case(o-27, '-28)
det(boat-30, the-29)
dep(Mac-15, boat-30)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD 'll)
        (VP (VB take)
          (NP (PRP you))
          (ADVP (RB round)
            (PP (TO to)
              (NP (NNP Macassar)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB come)
          (PRT (RP back))
          (ADVP (RB alone)))))
    (: ;)
    (S
      (NP (PRP He))
      (VP (VBZ knows)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP want)
              (NP
                (NP (NNP o) (POS '))
                (NP (DT the) (NNP _) (NNP Mary) (NNP _))))))))
    (: ...) (. .)))

nsubj(take-3, He-1)
aux(take-3, 'll-2)
root(ROOT-0, take-3)
dobj(take-3, you-4)
advmod(take-3, round-5)
case(Macassar-7, to-6)
nmod:to(round-5, Macassar-7)
cc(take-3, and-9)
nsubj(come-12, you-10)
aux(come-12, 'll-11)
conj:and(take-3, come-12)
compound:prt(come-12, back-13)
advmod(come-12, alone-14)
nsubj(knows-17, He-16)
conj:and(take-3, knows-17)
dobj(want-20, what-18)
nsubj(want-20, I-19)
ccomp(knows-17, want-20)
dobj(want-20, o-21)
case(o-21, '-22)
det(_-26, the-23)
compound(_-26, _-24)
compound(_-26, Mary-25)
dep(o-21, _-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB do)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP please)
              (PP (IN with)
                (NP (PRP$ my) (JJ own))))))))
    (. .)))

nsubj(do-3, I-1)
aux(do-3, 'll-2)
root(ROOT-0, do-3)
dobj(please-6, what-4)
nsubj(please-6, I-5)
ccomp(do-3, please-6)
case(own-9, with-7)
nmod:poss(own-9, my-8)
nmod:with(please-6, own-9)

(ROOT
  (S
    (S
      (NP (PRP$ Your) (NN mother) (`` `) (NN ud))
      (VP (VBP call)
        (S
          (NP (PRP it))
          (ADJP (JJ wasteful)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (NP (JJ seven-and-thirty) (JJR more))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP
          (VP (VB come)
            (PP (IN in)
              (NP (PRP$ my) (JJ private) (NN carriage))))
          (CC and)
          (VP (VB bid)
            (S
              (NP (PRP it))
              (VP (VB wait)
                (PP (IN at)
                  (NP (DT the) (NN door)))))))))
    (: ...) (. .)))

nmod:poss(ud-4, Your-1)
compound(ud-4, mother-2)
nsubj(call-5, ud-4)
root(ROOT-0, call-5)
nsubj(wasteful-7, it-6)
xcomp(call-5, wasteful-7)
cc(call-5, but-9)
nsubj('ve-11, I-10)
conj:but(call-5, 've-11)
amod(more-13, seven-and-thirty-12)
dobj('ve-11, more-13)
nsubj(come-17, I-15)
nsubj(bid-23, I-15)
aux(come-17, 'll-16)
conj:but(call-5, come-17)
case(carriage-21, in-18)
nmod:poss(carriage-21, my-19)
amod(carriage-21, private-20)
nmod:in(come-17, carriage-21)
cc(come-17, and-22)
conj:but(call-5, bid-23)
conj:and(come-17, bid-23)
nsubj(wait-25, it-24)
ccomp(bid-23, wait-25)
case(door-28, at-26)
det(door-28, the-27)
nmod:at(wait-25, door-28)

(ROOT
  (S (IN For)
    (S
      (S
        (NP
          (NP (PRP$ my) (NN son) (POS '))
          (NN e))
        (VP (VBD was)
          (ADVP (RB never))
          (NP
            (NP (DT a) (NN credit))
            (: :)
            (S
              (NP (POS '))
              (VP (VBD e)
                (VP (VBN muddled)
                  (PP (IN with)
                    (NP (NNS books)
                      (CC and)
                      (NN art)))))))))
      (, ,)
      (CC And)
      (S
        (NP (POS '))
        (ADVP (RB e))
        (VP (VBD lived)
          (PP (IN on)
            (NP
              (NP (NNP Sir) (NNP Anthony) (POS 's))
              (NN money))))))
    (CC and)
    (S
      (NP (POS '))
      (X
        (X (SYM e))
        (PP (VBN broke)
          (NP
            (NP (NNP Sir) (NNP Anthony) (POS 's))
            (NN heart)))))
    (. .)))

dep(credit-9, For-1)
nmod:poss(son-3, my-2)
nmod:poss(e-5, son-3)
case(son-3, '-4)
nsubj(credit-9, e-5)
cop(credit-9, was-6)
neg(credit-9, never-7)
det(credit-9, a-8)
root(ROOT-0, credit-9)
nsubj(e-12, '-11)
dep(credit-9, e-12)
dep(e-12, muddled-13)
case(books-15, with-14)
nmod:with(muddled-13, books-15)
cc(books-15, and-16)
nmod:with(muddled-13, art-17)
conj:and(books-15, art-17)
cc(credit-9, And-19)
nsubj(lived-22, '-20)
advmod(lived-22, e-21)
conj:and(credit-9, lived-22)
case(money-27, on-23)
compound(Anthony-25, Sir-24)
nmod:poss(money-27, Anthony-25)
case(Anthony-25, 's-26)
nmod:on(lived-22, money-27)
cc(credit-9, and-28)
conj:and(credit-9, '-29)
dep(heart-35, e-30)
case(heart-35, broke-31)
compound(Anthony-33, Sir-32)
nmod:poss(heart-35, Anthony-33)
case(Anthony-33, 's-34)
dep('-29, heart-35)

(ROOT
  (SINV
    (S
      (S
        (NP (EX There))
        (VP (VBZ is) (RB n't)
          (ADVP (RB even))
          (NP (DT a) (NN grandchild))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NNP Gloster) (NN family))
        (VP (VBZ 's)
          (VP (VBN done) (: --)
            (NP
              (NP (DT The) (JJ only) (NN one))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBD left)
                    (NP (PRP me))))))))))
    (, ,)
    (VP (VBP O))
    (NP
      (NP (NN mother))
      (, ,)
      (NP (DT the)
        (QP (RB only) (CD one))))
    (. !)))

expl(is-2, There-1)
ccomp(O-22, is-2)
neg(is-2, n't-3)
advmod(is-2, even-4)
det(grandchild-6, a-5)
nsubj(is-2, grandchild-6)
cc(is-2, and-8)
det(family-11, the-9)
compound(family-11, Gloster-10)
nsubjpass(done-13, family-11)
auxpass(done-13, 's-12)
conj:and(is-2, done-13)
ccomp(O-22, done-13)
det(one-17, The-15)
amod(one-17, only-16)
dobj(done-13, one-17)
nsubj(left-19, you-18)
acl:relcl(one-17, left-19)
dobj(left-19, me-20)
root(ROOT-0, O-22)
nsubj(O-22, mother-23)
det(one-27, the-25)
advmod(one-27, only-26)
appos(mother-23, one-27)

(ROOT
  (S
    (S
      (NP (NNP Harrer)
        (CC and)
        (NNP Trinity))
      (VP (VBP College)
        (PRN (: --)
          (S
            (NP (PRP me))
            (VP (VBP slavin) ('' ')
              (NP (RB early) (DT an))
              ('' ')))
          (ADJP (JJ late))
          (: --))
        (NP (NNP An))
        ('' ')))
    (PRN
      (S
        (NP (PRP he))
        (VP (VBZ thinks)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (VP (VBG dying)
                  (ADJP (JJ crazy))))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP 're)
        (PP (IN in)
          (NP (NNP Macassar) (NNP Strait)))))
    (. !)))

nsubj(College-4, Harrer-1)
cc(Harrer-1, and-2)
conj:and(Harrer-1, Trinity-3)
nsubj(College-4, Trinity-3)
root(ROOT-0, College-4)
nsubj(slavin-7, me-6)
parataxis(College-4, slavin-7)
advmod(an-10, early-9)
dobj(slavin-7, an-10)
dep(slavin-7, late-12)
dobj(College-4, An-14)
nsubj(thinks-17, he-16)
dep(College-4, thinks-17)
nsubj(dying-20, I-18)
aux(dying-20, 'm-19)
ccomp(thinks-17, dying-20)
xcomp(dying-20, crazy-21)
cc(College-4, and-23)
nsubj(Strait-28, you-24)
cop(Strait-28, 're-25)
case(Strait-28, in-26)
compound(Strait-28, Macassar-27)
conj:and(College-4, Strait-28)

(ROOT
  (NP
    (NP
      (NP
        (NP
          (NP (NNP Flesh) (NNP o) (POS '))
          (JJ my) (NN flesh))
        (, ,)
        (NP (PRP$ my) (NN dearie))
        (, ,))
      (PP (IN for)
        (NP
          (NP (RB ever) (DT an))
          ('' ')
          (VP
            (ADVP (RB ever))
            (VBN amen))
          (, ,)
          (NP
            (NP (DT That) (JJ first) (NN stroke))
            (VP (VBN come)
              (PP (IN for)
                (NP (DT a) (NN warning))))))))
    (: ;)
    (S
      (S
        (NP (PRP I))
        (VP (MD ought)
          (PP (TO to)
            (NP (NNP ha) (POS ')))
          (VP (VBN gone)
            (PP (TO to)
              (NP (PRP you)))
            (ADVP (RB then)))))
      (, ,)
      (CC But)
      (S
        (SBAR
          (PRN (: --)
            (NP
              (NP (JJ cheap) (NNS repairs))
              (PP (IN for)
                (NP (DT a) (JJ cheap) (`` `) (NN un))))
            (: --))
          (S
            (NP (DT the) (NNS doctors))
            (VP (VBD said)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD 'd)
                    (VP (VB do) (: :)
                      (NP
                        (NP (NNP Mary))
                        (, ,)
                        (SBAR
                          (WHADVP (WRB why))
                          (S
                            (VP (VBD did) (RB n't)
                              (VP (VB _)
                                (NP (PRP you))))))))))))))
        (NP (NNP _))
        (VP (VBP warn)
          (NP (PRP me)))))
    (. ?)))

compound(o-2, Flesh-1)
nmod:poss(flesh-5, o-2)
case(o-2, '-3)
amod(flesh-5, my-4)
root(ROOT-0, flesh-5)
nmod:poss(dearie-8, my-7)
appos(flesh-5, dearie-8)
case(an-12, for-10)
advmod(an-12, ever-11)
nmod:for(flesh-5, an-12)
advmod(amen-15, ever-14)
acl(an-12, amen-15)
det(stroke-19, That-17)
amod(stroke-19, first-18)
appos(an-12, stroke-19)
acl(stroke-19, come-20)
case(warning-23, for-21)
det(warning-23, a-22)
nmod:for(come-20, warning-23)
nsubj(gone-30, I-25)
aux(gone-30, ought-26)
case(ha-28, to-27)
nmod:'(gone-30, ha-28)
case(ha-28, '-29)
parataxis(flesh-5, gone-30)
case(you-32, to-31)
nmod:to(gone-30, you-32)
advmod(gone-30, then-33)
cc(gone-30, But-35)
amod(repairs-38, cheap-37)
dep(said-47, repairs-38)
case(un-43, for-39)
det(un-43, a-40)
amod(un-43, cheap-41)
nmod:for(repairs-38, un-43)
det(doctors-46, the-45)
nsubj(said-47, doctors-46)
advcl(warn-60, said-47)
nsubj(do-50, I-48)
aux(do-50, 'd-49)
ccomp(said-47, do-50)
dobj(do-50, Mary-52)
advmod(_-57, why-54)
aux(_-57, did-55)
neg(_-57, n't-56)
acl:relcl(Mary-52, _-57)
dobj(_-57, you-58)
nsubj(warn-60, _-59)
parataxis(flesh-5, warn-60)
conj:But(gone-30, warn-60)
dobj(warn-60, me-61)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (NP
          (NP
            (NP (NNS allus))
            (SBAR
              (S
                (VP (VBD heeded)
                  (PP (TO to)
                    (NP (PRP you)))))))
          (, ,)
          (NP (NNP Excep) (POS ')))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP know) (: --)
        (PP (IN about)
          (NP (NNS women)))
        (: ;)
        (CC but)
        (FRAG
          (S
            (NP (PRP you))
            (VP (VBP are)
              (NP (DT a) (NN spirit))
              (ADVP (RB now)))))))
    (: ;)
    (S
      (NP
        (NP (NNP An) (POS '))
        (, ,)
        (VP (VBN wife))
        (, ,))
      (NP (PRP they))
      (VP (VBD was)
        (NP (JJ only) (NNS women))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (NP (DT a) (NN man))))
    (. .)))

nsubj('ve-2, I-1)
root(ROOT-0, 've-2)
dobj('ve-2, allus-3)
acl:relcl(allus-3, heeded-4)
case(you-6, to-5)
nmod:to(heeded-4, you-6)
appos(allus-3, Excep-8)
case(Excep-8, '-9)
nsubj(know-12, I-11)
conj:and('ve-2, know-12)
case(women-15, about-14)
conj:and('ve-2, women-15)
conj:but(know-12, women-15)
cc(know-12, but-17)
nsubj(spirit-21, you-18)
cop(spirit-21, are-19)
det(spirit-21, a-20)
conj:and('ve-2, spirit-21)
conj:but(know-12, spirit-21)
advmod(spirit-21, now-22)
nsubj(women-32, An-24)
case(An-24, '-25)
acl(An-24, wife-27)
nsubj(women-32, they-29)
cop(women-32, was-30)
amod(women-32, only-31)
conj:and('ve-2, women-32)
cc('ve-2, and-34)
nsubj(man-38, I-35)
cop(man-38, was-36)
det(man-38, a-37)
conj:and('ve-2, man-38)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (WRB how)))
    (. .)))

nsubj(how-3, That-1)
cop(how-3, 's-2)
root(ROOT-0, how-3)

(ROOT
  (S
    (S
      (NP
        (NP (NNP An) (POS '))
        (NP (DT a) (NN man) (POS '))
        (NNP e))
      (VP (MD must)
        (VP (VB go)
          (PP (IN with)
            (NP (DT a) (NN woman)))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP you))
              (VP (MD could) (RB not)
                (VP (VB understand))))))))
    (: ;)
    (S (CC But)
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD talked)
        (NP (JJ 'em) (NNS secrets))))
    (. .)))

nmod:poss(e-6, An-1)
case(An-1, '-2)
det(man-4, a-3)
nmod:poss(e-6, man-4)
case(man-4, '-5)
nsubj(go-8, e-6)
aux(go-8, must-7)
root(ROOT-0, go-8)
case(woman-11, with-9)
det(woman-11, a-10)
nmod:with(go-8, woman-11)
mark(understand-17, as-13)
nsubj(understand-17, you-14)
aux(understand-17, could-15)
neg(understand-17, not-16)
advcl(go-8, understand-17)
cc(talked-22, But-19)
nsubj(talked-22, I-20)
neg(talked-22, never-21)
parataxis(go-8, talked-22)
amod(secrets-24, 'em-23)
dobj(talked-22, secrets-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD paid)
      (NP (PRP 'em))
      (PP (IN out)
        (NP
          (NP (NNP o) (POS '))
          (NN hand))))
    (. .)))

nsubj(paid-2, I-1)
root(ROOT-0, paid-2)
dobj(paid-2, 'em-3)
case(hand-7, out-4)
nmod:poss(hand-7, o-5)
case(o-5, '-6)
nmod:out(paid-2, hand-7)

(ROOT
  (S
    (S
      (VP (VB Thank)
        (NP (NNP Gawd))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB pay)
        (PP (IN for)
          (NP (PRP$ my) (NN fancies)))))
    (. !)))

ccomp(pay-6, Thank-1)
dobj(Thank-1, Gawd-2)
nsubj(pay-6, I-4)
aux(pay-6, can-5)
root(ROOT-0, pay-6)
case(fancies-9, for-7)
nmod:poss(fancies-9, my-8)
nmod:for(pay-6, fancies-9)

(ROOT
  (SBARQ
    (ADVP (RB Now))
    (WHNP (WP what))
    (SQ
      (VP (VBZ 's)
        (NP
          (NP
            (QP (CD five) (CD thousand)))
          (PP (TO to)
            (NP (PRP me)))
          (, ,)
          (PP (IN For)
            (NP
              (NP (DT a) (NN berth))
              (PP (IN off)
                (NP
                  (NP (DT the) (NNPS Paternosters))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN haven))
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (PRP I))
                          (VP (MD would)
                            (VP (VB be))))))))))))))
    (. ?)))

advmod(thousand-5, Now-1)
nsubj(thousand-5, what-2)
cop(thousand-5, 's-3)
compound(thousand-5, five-4)
root(ROOT-0, thousand-5)
case(me-7, to-6)
nmod:to(thousand-5, me-7)
case(berth-11, For-9)
det(berth-11, a-10)
nmod:for(thousand-5, berth-11)
case(Paternosters-14, off-12)
det(Paternosters-14, the-13)
nmod:off(berth-11, Paternosters-14)
case(haven-17, in-15)
det(haven-17, the-16)
nmod:in(Paternosters-14, haven-17)
advmod(be-21, where-18)
nsubj(be-21, I-19)
aux(be-21, would-20)
acl:relcl(haven-17, be-21)

(ROOT
  (S
    (S
      (S
        (NP (NNP _) (NNP I) (NNP _))
        (VP (VBP believe)
          (PP (IN in)
            (NP (DT the) (NNP Resurrection)))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBP read)
                (NP (PRP$ my) (NNP Bible) (NN plain)))))))
      (, ,)
      (CC But)
      (S
        (NP (PRP I))
        (VP (MD would) (RB n't)
          (VP (VB trust)
            (NP (PRP 'em))
            (PP (IN at)
              (NP (NNP Wokin) (POS ')))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBP 're)
        (ADJP
          (ADJP (JJR safer))
          (PP (IN at)
            (NP (NN sea))))
        (ADVP (RB again))))
    (. .)))

compound(_-3, _-1)
compound(_-3, I-2)
nsubj(believe-4, _-3)
root(ROOT-0, believe-4)
case(Resurrection-7, in-5)
det(Resurrection-7, the-6)
nmod:in(believe-4, Resurrection-7)
mark(read-11, if-9)
nsubj(read-11, I-10)
advcl(believe-4, read-11)
nmod:poss(plain-14, my-12)
compound(plain-14, Bible-13)
dobj(read-11, plain-14)
cc(believe-4, But-16)
nsubj(trust-20, I-17)
aux(trust-20, would-18)
neg(trust-20, n't-19)
conj:but(believe-4, trust-20)
dobj(trust-20, 'em-21)
case(Wokin-23, at-22)
nmod:'(trust-20, Wokin-23)
case(Wokin-23, '-24)
nsubj(safer-28, we-26)
cop(safer-28, 're-27)
parataxis(believe-4, safer-28)
case(sea-30, at-29)
nmod:at(safer-28, sea-30)
advmod(safer-28, again-31)

(ROOT
  (S
    (PP (IN For)
      (NP (DT the) (NN heart)))
    (NP (PRP it))
    (VP (MD shall)
      (VP
        (VP (VB go)
          (PP (IN with)
            (NP (DT the) (NN treasure))))
        (: --)
        (VP (VB go)
          (PRT (RP down))
          (PP (TO to)
            (NP
              (NP (DT the) (NN sea))
              (PP (IN in)
                (NP (NNS ships))))))))
    (. .)))

case(heart-3, For-1)
det(heart-3, the-2)
nmod:for(go-6, heart-3)
nsubj(go-6, it-4)
aux(go-6, shall-5)
root(ROOT-0, go-6)
case(treasure-9, with-7)
det(treasure-9, the-8)
nmod:with(go-6, treasure-9)
dep(go-6, go-11)
compound:prt(go-11, down-12)
case(sea-15, to-13)
det(sea-15, the-14)
nmod:to(go-11, sea-15)
case(ships-17, in-16)
nmod:in(sea-15, ships-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sick)
          (PP (IN of)
            (NP (DT the) (JJ hired) (NNS women))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB kiss)
          (NP (PRP$ my) (NN girl))
          (PP (IN on)
            (NP (PRP$ her) (NNS lips))))))
    (. !)))

nsubj(sick-3, I-1)
cop(sick-3, 'm-2)
root(ROOT-0, sick-3)
case(women-7, of-4)
det(women-7, the-5)
amod(women-7, hired-6)
nmod:of(sick-3, women-7)
nsubj(kiss-11, I-9)
aux(kiss-11, 'll-10)
parataxis(sick-3, kiss-11)
nmod:poss(girl-13, my-12)
dobj(kiss-11, girl-13)
case(lips-16, on-14)
nmod:poss(lips-16, her-15)
nmod:on(kiss-11, lips-16)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB be)
          (ADJP (JJ content)
            (PP (IN with)
              (NP (PRP$ my) (NN fountain)))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (MD 'll)
          (VP (VB drink)
            (PP (IN from)
              (NP (PRP$ my) (JJ own) (NN well))))))
      (, ,))
    (CC And)
    (S
      (NP
        (NP (DT the) (NN wife))
        (PP (IN of)
          (NP (PRP$ my) (NN youth))))
      (VP (MD shall)
        (VP (VB charm)
          (NP (PRP me))
          (: --)
          (NP
            (NP (DT an))
            ('' ')
            (SBAR
              (S
                (NP (DT the) (NN rest))
                (VP (MD can)
                  (VP (VB go)
                    (PP (TO to)
                      (NP (NNP Hell)))))))))))
    (. !)))

nsubj(content-4, I-1)
aux(content-4, 'll-2)
cop(content-4, be-3)
root(ROOT-0, content-4)
case(fountain-7, with-5)
nmod:poss(fountain-7, my-6)
nmod:with(content-4, fountain-7)
nsubj(drink-11, I-9)
aux(drink-11, 'll-10)
dep(content-4, drink-11)
case(well-15, from-12)
nmod:poss(well-15, my-13)
amod(well-15, own-14)
nmod:from(drink-11, well-15)
cc(content-4, And-17)
det(wife-19, the-18)
nsubj(charm-24, wife-19)
case(youth-22, of-20)
nmod:poss(youth-22, my-21)
nmod:of(wife-19, youth-22)
aux(charm-24, shall-23)
conj:and(content-4, charm-24)
dobj(charm-24, me-25)
parataxis(charm-24, an-27)
det(rest-30, the-29)
nsubj(go-32, rest-30)
aux(go-32, can-31)
acl:relcl(an-27, go-32)
case(Hell-34, to-33)
nmod:to(go-32, Hell-34)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Dickie) (, ,))
    (VP (VBD _)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBZ _)
            (NP
              (NP (NN will))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (ADJP (JJ certain))))))))))
    (. .) (-RRB- -RRB-)))

nsubj(_-4, Dickie-2)
root(ROOT-0, _-4)
nsubj(_-6, he-5)
ccomp(_-4, _-6)
dobj(_-6, will-7)
nsubj(certain-11, will-7)
ref(will-7, that-9)
cop(certain-11, 's-10)
acl:relcl(will-7, certain-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB lie)
          (PP (IN in)
            (NP (PRP$ our) (NN standin) ('' '))))))
    (: -)
    (S
      (NP
        (NP (NN bed))
        (, ,)
        (NP
          (NP (NNP An) (POS '))
          (NNP Mac)))
      (VP (MD 'll)
        (VP (VB take)
          (NP (PRP her))
          (PP (IN in)
            (NP (NN ballast)))
          (: --)
          (NP
            (NP (DT an))
            ('' ')
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBZ trims)
                  (ADVP (RBS best))
                  (PP (IN by)
                    (NP (DT the) (NN head))))))))))
    (: ...) (. .)))

nsubj(lie-3, I-1)
aux(lie-3, 'll-2)
root(ROOT-0, lie-3)
case(standin-6, in-4)
nmod:poss(standin-6, our-5)
nmod:in(lie-3, standin-6)
nsubj(take-15, bed-9)
nmod:poss(Mac-13, An-11)
case(An-11, '-12)
appos(bed-9, Mac-13)
aux(take-15, 'll-14)
parataxis(lie-3, take-15)
dobj(take-15, her-16)
case(ballast-18, in-17)
nmod:in(take-15, ballast-18)
parataxis(take-15, an-20)
nsubj(trims-23, she-22)
acl:relcl(an-20, trims-23)
advmod(trims-23, best-24)
case(head-27, by-25)
det(head-27, the-26)
nmod:by(trims-23, head-27)

(ROOT
  (S
    (S
      (PP (IN Down)
        (PP (IN by)
          (NP
            (NP (DT the) (NN head))
            (, an) ('' ')
            (NP (NN sinkin) ('' ')))))
      (, ,)
      (NP (PRP$ her) (NNS fires))
      (VP (VBP are)
        (UCP
          (VP (VBN drawn))
          (CC and)
          (ADJP (JJ cold)))))
    (, ,)
    (CC And)
    (S
      (NP (DT the) (NN water))
      (VP (VBZ 's)
        (NP
          (NP (NN splashin) (POS '))
          (ADJP (JJ hollow)
            (PP (IN on)
              (NP
                (NP (DT the) (NN skin))
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJ empty) (NN hold))
                    (: --)
                    (NP
                      (NP (NNP Churning))
                      (, an) ('' ')
                      (VP (VBG choking)
                        (CC and)
                        (VBG chuckling))))))))
          (, ,)
          (ADJP
            (ADJP (JJ quiet))
            (CC and)
            (ADJP (JJ scummy)
              (CC and)
              (JJ dark))
            (: --))
          (NN Full))
        (PP (TO to)
          (NP
            (NP (PRP$ her) (JJR lower) (NNS hatches))
            (CC and)
            (NP
              (NP (NN risin) (POS '))
              (JJ steady))))))
    (. .)))

case(head-4, Down-1)
case(head-4, by-2)
det(head-4, the-3)
nmod:by(drawn-13, head-4)
dep(head-4, sinkin-7)
nmod:poss(fires-11, her-10)
nsubj(drawn-13, fires-11)
nsubj(cold-15, fires-11)
cop(drawn-13, are-12)
root(ROOT-0, drawn-13)
cc(drawn-13, and-14)
conj:and(drawn-13, cold-15)
cc(drawn-13, And-17)
det(water-19, the-18)
nsubj(Full-45, water-19)
cop(Full-45, 's-20)
nmod:poss(Full-45, splashin-21)
case(splashin-21, '-22)
amod(Full-45, hollow-23)
case(skin-26, on-24)
det(skin-26, the-25)
nmod:on(hollow-23, skin-26)
case(hold-30, of-27)
det(hold-30, the-28)
amod(hold-30, empty-29)
nmod:of(skin-26, hold-30)
dep(hold-30, Churning-32)
acl(Churning-32, choking-35)
cc(choking-35, and-36)
acl(Churning-32, chuckling-37)
conj:and(choking-35, chuckling-37)
amod(Full-45, quiet-39)
cc(quiet-39, and-40)
conj:and(quiet-39, scummy-41)
amod(Full-45, scummy-41)
cc(scummy-41, and-42)
conj:and(quiet-39, dark-43)
conj:and(scummy-41, dark-43)
conj:and(drawn-13, Full-45)
conj:and(drawn-13, Full-45')
conj:and(Full-45, Full-45')
case(hatches-49, to-46)
nmod:poss(hatches-49, her-47)
amod(hatches-49, lower-48)
nmod:to(Full-45, hatches-49)
cc(Full-45, and-50)
nmod:'(Full-45', risin-51)
case(risin-51, '-52)
amod(risin-51, steady-53)

(ROOT
  (S
    (VP (VB Hark))
    (. !)))

root(ROOT-0, Hark-1)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (NP (DT the) (NN after-bulkhead)))
    (: ...) (. .)))

nsubj(after-bulkhead-4, That-1)
cop(after-bulkhead-4, was-2)
det(after-bulkhead-4, the-3)
root(ROOT-0, after-bulkhead-4)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ 's)
      (VP (VBN flooded)
        (PP (IN from)
          (NP (NN stem)))
        (PP (TO to)
          (ADJP (JJ stern)))))
    (: ...) (. .)))

nsubjpass(flooded-3, She-1)
auxpass(flooded-3, 's-2)
root(ROOT-0, flooded-3)
case(stem-5, from-4)
nmod:from(flooded-3, stem-5)
case(stern-7, to-6)
advcl(flooded-3, stern-7)

(ROOT
  (SINV
    (ADVP (RB Never))
    (VP (VBN seen))
    (NP
      (NP (NN death) (RB yet))
      (, ,)
      (NP (NNP Dickie)))
    (. ?)))

neg(seen-2, Never-1)
root(ROOT-0, seen-2)
nsubj(seen-2, death-3)
advmod(death-3, yet-4)
appos(death-3, Dickie-6)

(ROOT
  (S (: ...)
    (S
      (INTJ (UH Well))
      (, ,)
      (ADVP (RB now))
      (VP (VBZ is)
        (NP (PRP$ your) (NN time)
          (S
            (VP (TO to)
              (VP (VB learn)))))))
    (. !)))

discourse(time-7, Well-2)
advmod(time-7, now-4)
cop(time-7, is-5)
nmod:poss(time-7, your-6)
root(ROOT-0, time-7)
mark(learn-9, to-8)
acl(time-7, learn-9)

(ROOT
  (SINV
    (S
      (NP
        (NP (NNP SESTINA))
        (PP (IN OF)
          (NP
            (NP (DT THE) (NNP TRAMP-ROYAL) (NNP Speakin))
            ('' ')
            (PP (IN in)
              (NP
                (NP (NN general))
                (, ,)
                (NP (PRP I)))))))
      (`` `)
      (VP (VBP ave)))
    (VP (VBD tried)
      (NP (PRP 'em)))
    (NP
      (NP (DT all))
      (, ,)
      (NP
        (NP (DT The) (`` `) (NN appy) (NNS roads))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP take)
              (S
                (NP (PRP you))
                (VP (VB o'er)
                  (NP (DT the) (NN world)))))))))
    (. .)))

nsubj(ave-12, SESTINA-1)
case(Speakin-5, OF-2)
det(Speakin-5, THE-3)
compound(Speakin-5, TRAMP-ROYAL-4)
nmod:of(SESTINA-1, Speakin-5)
case(general-8, in-7)
nmod:in(Speakin-5, general-8)
appos(general-8, I-10)
dep(tried-13, ave-12)
root(ROOT-0, tried-13)
dobj(tried-13, 'em-14)
nsubj(tried-13, all-15)
det(roads-20, The-17)
compound(roads-20, appy-19)
appos(all-15, roads-20)
nsubj(take-22, roads-20)
ref(roads-20, that-21)
acl:relcl(roads-20, take-22)
nsubj(o'er-24, you-23)
ccomp(take-22, o'er-24)
det(world-26, the-25)
dobj(o'er-24, world-26)

(ROOT
  (S
    (S
      (NP (NNP Speakin) (POS '))
      (X
        (SBAR (IN in)
          (S
            (NP
              (NP (NN general))
              (, ,)
              (SBAR
                (SBAR
                  (S
                    (NP (PRP I))
                    (`` `)
                    (ADVP (RB ave))
                    (VP (VBD found)
                      (S
                        (NP (PRP them))
                        (ADJP (JJ good))
                        (PP (IN For)
                          (NP (JJ such)))))))
                (SBAR (IN as)
                  (S
                    (VP (MD can) (RB not)
                      (VP (VB use)
                        (NP (CD one) (NN bed))
                        (ADVP (RB too) (RB long)))))))
              (, ,))
            (ADVP (CC But))
            (VP (MD must)
              (VP (VB get) (`` `)
                (NP (NN ence))))))
        (, ,)
        (X (DT the)
          (ADJP (JJ same)
            (PP (IN as)
              (NP (PRP I)))))
        (NP
          (NP (`` `) (NN ave))
          (VP (VBN done)))))
    (, ,)
    (NP (NNP An) (POS '))
    (VP (VBP go)
      (NP
        (NP (NN observin) (POS '))
        (NNS matters))
      (SBAR (IN till)
        (S
          (NP (PRP they))
          (VP (VBP die)))))
    (. .)))

ccomp(go-39, Speakin-1)
case(Speakin-1, '-2)
mark(get-25, in-3)
nsubj(get-25, general-4)
nsubj(found-9, I-6)
advmod(found-9, ave-8)
dep(general-4, found-9)
nsubj(good-11, them-10)
xcomp(found-9, good-11)
case(such-13, For-12)
dep(good-11, such-13)
mark(use-17, as-14)
aux(use-17, can-15)
neg(use-17, not-16)
dep(found-9, use-17)
nummod(bed-19, one-18)
dobj(use-17, bed-19)
advmod(long-21, too-20)
advmod(use-17, long-21)
advmod(get-25, But-23)
aux(get-25, must-24)
dep(ave-34, get-25)
dobj(get-25, ence-27)
det(same-30, the-29)
dep(ave-34, same-30)
case(I-32, as-31)
nmod:as(same-30, I-32)
dep(Speakin-1, ave-34)
acl(ave-34, done-35)
nsubj(go-39, An-37)
case(An-37, '-38)
root(ROOT-0, go-39)
nmod:poss(matters-42, observin-40)
case(observin-40, '-41)
dobj(go-39, matters-42)
mark(die-45, till-43)
nsubj(die-45, they-44)
advcl(go-39, die-45)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP it))
      (VP
        (VP (VB matter)
          (SBARQ
            (WHADVP (WRB where))))
        (CC or)
        (VP (`` `)
          (VP (VB ow)
            (S
              (NP (PRP we))
              (VP (VB die))))
          (, ,)
          (ADVP
            (ADVP (RB So) (RB long))
            (SBAR (IN as)
              (S
                (NP (PRP we))
                (VP (VBP 've)
                  (NP (PRP$ our) (`` `)
                    (S
                      (VP (VB ealth)
                        (S
                          (VP (TO to)
                            (VP (VB watch)
                              (S
                                (NP (PRP it))
                                (NP
                                  (NP
                                    (NP (DT all))
                                    (: --)
                                    (NP
                                      (NP (DT The) (JJ different) (NNS ways))
                                      (SBAR (IN that)
                                        (S
                                          (NP (JJ different) (NNS things))
                                          (VP (VBP are)
                                            (VP (VBN done)))))))
                                  (, ,)
                                  (NP
                                    (NP (NNP An) (POS '))
                                    (NNS men))
                                  (, an))))))))
                    ('' ') (NNS women))))))
          (VP (VB lovin) ('' ')
            (PP (IN in)
              (NP (DT this) (NN world)))
            (: --)
            (S
              (VP (VBG Takin) ('' ')
                (NP
                  (NP
                    (NP (PRP$ our) (NNS chances))
                    (SBAR (IN as)
                      (S
                        (NP (PRP they))
                        (VP (VBP come)
                          (PRT (RP along))))))
                  (, ,)
                  (NP (NNP An) (POS ')))))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP ai) (RB n't)))))
          (, ,)
          (NP
            (NP (NN pretendin))
            ('' ')
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP are)
                  (ADJP (JJ good)))))))))
    (. ?)))

dobj(matter-4, What-1)
aux(matter-4, do-2)
nsubj(matter-4, it-3)
nsubj(ow-8, it-3)
root(ROOT-0, matter-4)
ccomp(matter-4, where-5)
cc(matter-4, or-6)
conj:or(matter-4, ow-8)
nsubj(die-10, we-9)
ccomp(ow-8, die-10)
advmod(long-13, So-12)
advmod(ow-8, long-13)
mark('ve-16, as-14)
nsubj('ve-16, we-15)
advcl(long-13, 've-16)
nmod:poss(women-39, our-17)
dep(women-39, ealth-19)
mark(watch-21, to-20)
xcomp(ealth-19, watch-21)
nsubj(all-23, it-22)
xcomp(watch-21, all-23)
det(ways-27, The-25)
amod(ways-27, different-26)
dep(all-23, ways-27)
mark(done-32, that-28)
amod(things-30, different-29)
nsubjpass(done-32, things-30)
auxpass(done-32, are-31)
dep(ways-27, done-32)
nmod:poss(men-36, An-34)
case(An-34, '-35)
appos(all-23, men-36)
dobj('ve-16, women-39)
dep(ow-8, lovin-40)
case(world-44, in-42)
det(world-44, this-43)
nmod:in(lovin-40, world-44)
parataxis(lovin-40, Takin-46)
nmod:poss(chances-49, our-48)
dobj(Takin-46, chances-49)
mark(come-52, as-50)
nsubj(come-52, they-51)
acl:relcl(chances-49, come-52)
compound:prt(come-52, along-53)
appos(chances-49, An-55)
case(An-55, '-56)
advmod(ai-59, when-57)
nsubj(ai-59, they-58)
dep(lovin-40, ai-59)
neg(ai-59, n't-60)
dobj(ow-8, pretendin-62)
nsubj(good-66, they-64)
cop(good-66, are-65)
acl:relcl(pretendin-62, good-66)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN cash)
          (CC or)
          (NN credit))
        (: --)
        (S
          (S
            (INTJ (UH no))
            (, ,)
            (S
              (NP (PRP it))
              (VP (VBP are) (RB n't)
                (ADJP (RB no) (JJ good))))
            (: ;)
            (S
              (NP (PRP You))
              (`` `)
              (VP (VBP ave)
                (S
                  (VP (TO to) (`` `)
                    (VP (VB ave)
                      (NP (DT the) (`` `) (NN abit)))))))
            (CC or)
            (S
              (NP (PRP you))
              (VP (MD 'd)
                (VP (VB die))))
            (, ,)
            (S
              (SBAR (IN Unless)
                (S
                  (NP (PRP you))
                  (VP (VBD lived)
                    (NP (PRP$ your) (NN life))
                    (PRN (CC but)
                      (ADVP
                        (NP (CD one) (NN day))
                        (RB long))))))
              (, ,)
              (NP (NNP Nor))
              (VP
                (VP (VBD did) (RB n't)
                  (VP (VB prophesy)))
                (CC nor)
                (VP (VBP fret)
                  (ADVP (IN at) (DT all))))))
          (, ,)
          (CC But)
          (S
            (S
              (VP (VBD drew)
                (NP (PRP$ your) (NN tucker))))
            (VP (VBD some'ow)
              (PP (IN from)
                (NP (DT the) (NN world))))))))
    (, ,)
    (NP (NNP An) (POS '))
    (ADVP (RB never))
    (VP (VBD bothered)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (MD might)
            (VP (VB ha)
              (SBAR
                (S
                  (NP (POS '))
                  (VP (VBN done)))))))))
    (. .)))

case(cash-2, In-1)
nmod:in(bothered-59, cash-2)
cc(cash-2, or-3)
conj:or(cash-2, credit-4)
nmod:in(bothered-59, credit-4)
discourse(good-12, no-6)
nsubj(good-12, it-8)
cop(good-12, are-9)
neg(good-12, n't-10)
neg(good-12, no-11)
dep(cash-2, good-12)
nsubj(ave-16, You-14)
nsubj:xsubj(ave-19, You-14)
dep(cash-2, ave-16)
conj:or(good-12, ave-16)
mark(ave-19, to-17)
xcomp(ave-16, ave-19)
det(abit-22, the-20)
dobj(ave-19, abit-22)
cc(good-12, or-23)
nsubj(die-26, you-24)
aux(die-26, 'd-25)
dep(cash-2, die-26)
conj:or(good-12, die-26)
mark(lived-30, Unless-28)
nsubj(lived-30, you-29)
advcl(prophesy-41, lived-30)
nmod:poss(life-32, your-31)
dobj(lived-30, life-32)
cc(long-36, but-33)
nummod(day-35, one-34)
nmod:npmod(long-36, day-35)
dep(lived-30, long-36)
nsubj(prophesy-41, Nor-38)
nsubj(fret-43, Nor-38)
aux(prophesy-41, did-39)
neg(prophesy-41, n't-40)
dep(cash-2, prophesy-41)
conj:or(good-12, prophesy-41)
cc(prophesy-41, nor-42)
conj:or(good-12, fret-43)
conj:nor(prophesy-41, fret-43)
case(all-45, at-44)
nmod:at(fret-43, all-45)
cc(good-12, But-47)
csubj(some'ow-51, drew-48)
nmod:poss(tucker-50, your-49)
dobj(drew-48, tucker-50)
dep(cash-2, some'ow-51)
conj:but(good-12, some'ow-51)
case(world-54, from-52)
det(world-54, the-53)
nmod:from(some'ow-51, world-54)
nsubj(bothered-59, An-56)
case(An-56, '-57)
neg(bothered-59, never-58)
root(ROOT-0, bothered-59)
dobj(ha-63, what-60)
nsubj(ha-63, you-61)
aux(ha-63, might-62)
ccomp(bothered-59, ha-63)
nsubj(done-65, '-64)
ccomp(ha-63, done-65)

(ROOT
  (S (CC But)
    (, ,)
    (S
      (NP
        (NP (NNP Gawd))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNS things))
            (VP (VBP are)
              (NP
                (NP (PRP they))
                (SBAR
                  (S
                    (NP (PRP I))
                    (`` `)
                    (VP (VBP ave) (RB n't)))))))))
      (VP (VBN done)))
    (. ?)))

cc(done-13, But-1)
dobj(they-8, Gawd-3)
nsubj(done-13, Gawd-3)
ref(Gawd-3, what-5)
nsubj(they-8, things-6)
cop(they-8, are-7)
acl:relcl(Gawd-3, they-8)
nsubj(ave-11, I-9)
acl:relcl(they-8, ave-11)
neg(ave-11, n't-12)
root(ROOT-0, done-13)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN turned)
          (NP
            (NP (PRP$ my) (`` `)
              (NX
                (NP (NNP and))
                (PP (TO to)
                  (NP
                    (NP (JJS most))
                    (, ,)
                    (NP (DT an)))))
              ('' '))
            (VP (VBN turned)
              (S
                (NP (PRP it))
                (ADJP (JJ good))))))))
    (, ,)
    (S
      (PP (IN In)
        (NP (JJ various) (NNS situations) (NN round)))
      (NP
        (NP (DT the) (NN world))
        (PRN (: --)
          (PP (IN For)
            (NP
              (NP (`` `) (NN im))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP doth) (RB not)
                    (VP (VB work)))))))))
      (VP (MD must)
        (ADVP (RB surely))
        (VP (VB die))))
    (: ;)
    (CC But)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP (DT no) (NN reason) (NN man))
        (SBAR (MD should)
          (S
            (NP
              (NP (NN labour))
              (ADVP (DT all)))
            (`` `)
            (VP (VBZ Is)
              (NP
                (NP
                  (NP (NN life))
                  (PP (IN on)
                    (NP (CD one) (JJ same) (NN shift))))
                (: ;)
                (NP
                  (NP
                    (NP (NN life) (POS 's))
                    (NN none))
                  (ADJP (RB so) (JJ long)))))))))
    (. .)))

nsubj(turned-3, I-1)
aux(turned-3, 've-2)
root(ROOT-0, turned-3)
nmod:poss(and-6, my-4)
dobj(turned-3, and-6)
case(most-8, to-7)
nmod:to(and-6, most-8)
appos(most-8, an-10)
acl(and-6, turned-12)
nsubj(good-14, it-13)
xcomp(turned-12, good-14)
case(round-19, In-16)
amod(round-19, various-17)
compound(round-19, situations-18)
nmod:in(die-32, round-19)
det(world-21, the-20)
nsubj(die-32, world-21)
case(im-25, For-23)
nmod:for(world-21, im-25)
nsubj(doth-27, im-25)
ref(im-25, that-26)
acl:relcl(im-25, doth-27)
neg(doth-27, not-28)
dep(doth-27, work-29)
aux(die-32, must-30)
advmod(die-32, surely-31)
conj:but(turned-3, die-32)
cc(turned-3, But-34)
nsubj(man-39, that-35)
cop(man-39, 's-36)
neg(man-39, no-37)
compound(man-39, reason-38)
conj:but(turned-3, man-39)
dep(life-45, should-40)
nsubj(life-45, labour-41)
advmod(labour-41, all-42)
cop(life-45, Is-44)
dep(man-39, life-45)
case(shift-49, on-46)
nummod(shift-49, one-47)
amod(shift-49, same-48)
nmod:on(life-45, shift-49)
nmod:poss(none-53, life-51)
case(life-51, 's-52)
dep(life-45, none-53)
advmod(long-55, so-54)
amod(none-53, long-55)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (PP
      (PP (IN from)
        (NP (NN job)))
      (PP (TO to)
        (NP (NN job))))
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN moved)
        (PRT (RP along))))
    (. .)))

advmod(moved-9, Therefore-1)
case(job-4, from-3)
nmod:from(moved-9, job-4)
case(job-6, to-5)
nmod:to(job-4, job-6)
nsubj(moved-9, I-7)
aux(moved-9, 've-8)
root(ROOT-0, moved-9)
compound:prt(moved-9, along-10)

(ROOT
  (S
    (S
      (NP (NNP Pay))
      (VP (MD could)
        (S
          (ADJP (RB n't) (`` `) (JJ old))
          (SBAR
            (S
              (NP
                (NP (PRP me))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP$ my) (NN time))
                    (VP (VBD was)
                      (VP (VBN done))))))
              (, ,)
              (PP (IN For)
                (NP
                  (NP (NN something))
                  (PP (IN in)
                    (NP
                      (NP (PRP$ my) (`` `) (NN ead))
                      (VP (VBN upset)
                        (NP (PRP me))
                        (ADVP (DT all))
                        (, ,)
                        (PP (IN Till)
                          (NP
                            (NP (PRP I))
                            (`` `)
                            (NX
                              (S
                                (NP (NN ad))
                                (VP (VBD dropped)
                                  (SBAR
                                    (WHNP (WDT whatever))
                                    (S
                                      (NP (NN 't))
                                      (VP (VBD was)
                                        (PP (IN for)
                                          (ADJP (JJ good))))))))))))))))
              (, ,)
              (NP
                (NP (NNP An) (POS '))
                (, ,)
                (RRC
                  (ADVP (RB out))
                  (PP (IN at)
                    (NP (NN sea))))
                (, ,))
              (VP (VBD be'eld)
                (SBAR
                  (S
                    (NP (DT the) (NNS dock-lights))
                    (VP (VBP die))))))))))
    (, ,)
    (NP (NNP An) (POS '))
    (VP (VBD met)
      (NP
        (NP (PRP$ my) (NN mate))
        (: --)
        (NP
          (NP (DT the) (NN wind))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ tramps)
                (NP (DT the) (NN world))))))))
    (. !)))

nsubj(could-2, Pay-1)
ccomp(met-48, could-2)
neg(old-5, n't-3)
dep(be'eld-41, old-5)
nsubj(be'eld-41, me-6)
advmod(done-11, when-7)
nmod:poss(time-9, my-8)
nsubjpass(done-11, time-9)
auxpass(done-11, was-10)
acl:relcl(me-6, done-11)
case(something-14, For-13)
nmod:for(be'eld-41, something-14)
case(ead-18, in-15)
nmod:poss(ead-18, my-16)
nmod:in(something-14, ead-18)
acl(ead-18, upset-19)
dobj(upset-19, me-20)
advmod(upset-19, all-21)
case(dropped-27, Till-23)
dep(dropped-27, I-24)
nsubj(dropped-27, ad-26)
nmod:till(upset-19, dropped-27)
dobj(good-32, whatever-28)
nsubj(good-32, 't-29)
cop(good-32, was-30)
case(good-32, for-31)
ccomp(dropped-27, good-32)
nsubj(be'eld-41, An-34)
case(An-34, '-35)
advmod(sea-39, out-37)
case(sea-39, at-38)
acl:relcl(An-34, sea-39)
xcomp(could-2, be'eld-41)
det(dock-lights-43, the-42)
nsubj(die-44, dock-lights-43)
ccomp(be'eld-41, die-44)
nsubj(met-48, An-46)
case(An-46, '-47)
root(ROOT-0, met-48)
nmod:poss(mate-50, my-49)
dobj(met-48, mate-50)
det(wind-53, the-52)
dep(mate-50, wind-53)
nsubj(tramps-55, wind-53)
ref(wind-53, that-54)
acl:relcl(wind-53, tramps-55)
det(world-57, the-56)
dobj(tramps-55, world-57)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (PP (IN like)
          (NP (DT a) (NN book)))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP think) (, ,)
          (NP
            (NP
              (NP (DT this) (NN bloomin) (POS '))
              (NN world))
            (, ,)
            (SBAR
              (WHNP (WDT Which))
              (S
                (NP (PRP you))
                (VP (MD can)
                  (VP (VB read)
                    (CC and)
                    (VB care)
                    (PP (IN for)
                      (NP
                        (QP (RB just) (RB so) (JJ long)))))))))))
      (, ,))
    (CC But)
    (S
      (ADVP (RB presently))
      (NP (PRP you))
      (VP (VBP feel)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD will)
              (VP (VB die)
                (S
                  (S
                    (SBAR (IN Unless)
                      (S
                        (NP (PRP you))
                        (VP (VBP get)
                          (NP
                            (NP (DT the) (NN page))
                            (SBAR
                              (S
                                (NP (PRP you))
                                (VP (VBP 're)
                                  (NP
                                    (NP (NN readin))
                                    ('' ')
                                    (VP (VBN done))))))))))
                    (, ,)
                    (NP (NNP An) (POS '))
                    (VP (VBP turn)
                      (NP
                        (NP (DT another))
                        (: --)
                        (ADJP (JJ likely)))
                      (FRAG (RB not)
                        (ADJP (RB so) (JJ good)))))
                  (: ;)
                  (CC But)
                  (S
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP you))
                        (VP (VBP 're)
                          (PP (IN after)))))
                    (VP (VBZ is)
                      (S
                        (VP (TO to)
                          (VP (VB turn)
                            (S
                              (NP (PRP 'em))
                              (NP (DT all)))))))))))))))
    (. .)))

nsubj(book-5, It-1)
cop(book-5, 's-2)
case(book-5, like-3)
det(book-5, a-4)
root(ROOT-0, book-5)
nsubj(think-8, I-7)
dep(book-5, think-8)
det(bloomin-11, this-10)
nmod:poss(world-13, bloomin-11)
case(bloomin-11, '-12)
dobj(think-8, world-13)
dobj(read-18, world-13)
ref(world-13, Which-15)
nsubj(read-18, you-16)
nsubj(care-20, you-16)
aux(read-18, can-17)
acl:relcl(world-13, read-18)
cc(read-18, and-19)
acl:relcl(world-13, care-20)
conj:and(read-18, care-20)
case(long-24, for-21)
advmod(long-24, just-22)
advmod(long-24, so-23)
nmod:for(read-18, long-24)
cc(book-5, But-26)
advmod(feel-29, presently-27)
nsubj(feel-29, you-28)
conj:but(book-5, feel-29)
mark(die-33, that-30)
nsubj(die-33, you-31)
aux(die-33, will-32)
ccomp(feel-29, die-33)
mark(get-36, Unless-34)
nsubj(get-36, you-35)
advcl(turn-47, get-36)
det(page-38, the-37)
dobj(get-36, page-38)
nsubj(readin-41, you-39)
cop(readin-41, 're-40)
acl:relcl(page-38, readin-41)
acl(readin-41, done-43)
nsubj(turn-47, An-45)
case(An-45, '-46)
xcomp(die-33, turn-47)
dobj(turn-47, another-48)
amod(another-48, likely-50)
dep(turn-47, not-51)
advmod(good-53, so-52)
dep(not-51, good-53)
cc(turn-47, But-55)
dobj(after-59, what-56)
nsubj(after-59, you-57)
cop(after-59, 're-58)
csubj(is-60, after-59)
xcomp(die-33, is-60)
conj:but(turn-47, is-60)
mark(turn-62, to-61)
xcomp(is-60, turn-62)
nsubj(all-64, 'em-63)
xcomp(turn-62, all-64)

(ROOT
  (S
    (NP (NNP Gawd))
    (VP (VB bless)
      (NP (DT this) (NN world)))
    (. !)))

nsubj(bless-2, Gawd-1)
root(ROOT-0, bless-2)
det(world-4, this-3)
dobj(bless-2, world-4)

(ROOT
  (S
    (SBAR
      (WHNP (WDT Whatever))
      (S
        (NP (PRP she))
        (`` `)
        (VP (VBP ath)
          (ADJP (VBN done)))))
    (PRN (: --)
      (S
        (VP (VB Excep)
          (S
            (NP (POS '))
            (ADJP (WRB when) (JJ awful))
            (ADVP (RB long)))))
      (: --))
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN found)
        (S
          (NP (PRP it))
          (ADJP (JJ good)))))
    (. .)))

dobj(done-5, Whatever-1)
nsubj(ath-4, she-2)
advcl(found-15, ath-4)
xcomp(ath-4, done-5)
parataxis(found-15, Excep-7)
nsubj(awful-10, '-8)
advmod(awful-10, when-9)
xcomp(Excep-7, awful-10)
advmod(awful-10, long-11)
nsubj(found-15, I-13)
aux(found-15, 've-14)
root(ROOT-0, found-15)
nsubj(good-17, it-16)
xcomp(found-15, good-17)

(ROOT
  (S
    (S
      (ADVP (RB So))
      (VP (VB write) (, ,)
        (SBAR (IN before)
          (S
            (NP (PRP I))
            (VP (VBP die))))))
    (, ,) ('' '') ('' ')
    (NP (NNP E))
    (VP (VBD liked)
      (S
        (NP (PRP it))
        (NP (DT all))))
    (. !) ('' '')))

advmod(write-2, So-1)
ccomp(liked-11, write-2)
mark(die-6, before-4)
nsubj(die-6, I-5)
advcl(write-2, die-6)
nsubj(liked-11, E-10)
root(ROOT-0, liked-11)
nsubj(all-13, it-12)
xcomp(liked-11, all-13)

(ROOT
  (S
    (S
      (NP
        (NP (NN BARRACK-ROOM) (NNS BALLADS))
        (SBAR
          (S
            (SBAR
              (WHADVP (WRB When))
              (S (`` `)
                (NP (NNP Omer) (NNP smote))
                (`` `)
                (VP (VBZ is)
                  (NP
                    (NP (NN bloomin) (POS '))
                    (NN lyre)))))
            (, ,)
            (NP (PRP He))
            (VP
              (VP (VBD 'd)
                (NP (`` `)
                  (S
                    (NP (JJ eard) (NNS men))
                    (VP (VBP sing)
                      (PP (IN by)
                        (NP (NN land) (DT an)))))
                  ('' ') (NN sea)))
              (: ;)
              (NP
                (NP (NNP An))
                ('' ')
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP he))
                    (VP (VBD thought) (`` ')
                      (X (SYM e))))))))))
      (VP (MD might)
        (VP (VB require))))
    (, ,) ('' ')
    (NP (NNP E))
    (VP (VBD went)
      (NP (DT an)
        (S
          (NP (POS '))
          (VP
            (VP (VBD took))
            (: --)
            (NP
              (NP (DT the) (JJ same))
              (PP (IN as)
                (NP (PRP me))))))))
    (. !)))

compound(BALLADS-2, BARRACK-ROOM-1)
dobj(thought-29, BALLADS-2)
nsubj(require-33, BALLADS-2)
advmod(lyre-11, When-3)
compound(smote-6, Omer-5)
nsubj(lyre-11, smote-6)
cop(lyre-11, is-8)
nmod:poss(lyre-11, bloomin-9)
case(bloomin-9, '-10)
advcl('d-14, lyre-11)
nsubj('d-14, He-13)
acl:relcl(BALLADS-2, 'd-14)
amod(men-17, eard-16)
nsubj(sing-18, men-17)
dep(sea-23, sing-18)
case(land-20, by-19)
nmod:by(sing-18, land-20)
dep(land-20, an-21)
dobj('d-14, sea-23)
dobj('d-14, An-25)
dobj(thought-29, An-25)
ref(BALLADS-2, what-27)
ref(An-25, what-27)
nsubj(thought-29, he-28)
acl:relcl(An-25, thought-29)
dep(thought-29, e-31)
aux(require-33, might-32)
ccomp(went-37, require-33)
nsubj(went-37, E-36)
root(ROOT-0, went-37)
dobj(went-37, an-38)
nsubj(took-40, '-39)
dep(an-38, took-40)
det(same-43, the-42)
dobj(took-40, same-43)
case(me-45, as-44)
nmod:as(same-43, me-45)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP
            (NP (DT The) (JJ market-girls) (DT an))
            (POS ') (VBG fishermen))
          (, ,)
          (NP (DT The) (NNS shepherds)))
        (, an) ('' ')
        (NP (DT the) (NNS sailors)))
      (, ,)
      (ADVP (RB too))
      (, ,)
      (NP (PRP They))
      (VP (`` `) (VBD eard)
        (NP (JJ old) (NNS songs))
        (S
          (VP (VB turn)
            (PRT (RP up))))
        (ADVP (RB again))))
    (, ,)
    (CC But)
    (S
      (VP
        (VP (VB kep) (`` ')
          (S
            (NP (PRP it))
            (ADJP (VB quiet))))
        (: --)
        (VP
          (ADJP (JJ same))
          (PP (IN as)
            (NP (PRP you))))))
    (. !)))

det(market-girls-2, The-1)
nsubj(eard-18, market-girls-2)
dep(market-girls-2, an-3)
case(market-girls-2, '-4)
amod(market-girls-2, fishermen-5)
det(shepherds-8, The-7)
appos(market-girls-2, shepherds-8)
det(sailors-12, the-11)
dep(market-girls-2, sailors-12)
advmod(eard-18, too-14)
nsubj(eard-18, They-16)
nsubj(kep-26, They-16)
root(ROOT-0, eard-18)
amod(songs-20, old-19)
dobj(eard-18, songs-20)
dep(eard-18, turn-21)
compound:prt(turn-21, up-22)
advmod(eard-18, again-23)
cc(eard-18, But-25)
conj:but(eard-18, kep-26)
nsubj(quiet-29, it-28)
xcomp(kep-26, quiet-29)
dep(kep-26, same-31)
case(you-33, as-32)
nmod:as(same-31, you-33)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBD knew) (`` ')
        (X
          (X (SYM e))
          (NP (CD stole)))))
    (: ;) ('' ')
    (S
      (NP (NNP e))
      (VP (VBD knew)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD knowed))))))
    (. .)))

nsubj(knew-2, They-1)
root(ROOT-0, knew-2)
dep(stole-5, e-4)
dep(knew-2, stole-5)
nsubj(knew-9, e-8)
dep(knew-2, knew-9)
nsubj(knowed-11, they-10)
ccomp(knew-9, knowed-11)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP
        (VP (VBD did) (RB n't)
          (VP (VB tell)))
        (, ,)
        (CC nor)
        (VP (VBP make)
          (NP (DT a) (NNS fuss)))))
    (, ,)
    (CC But)
    (S
      (S
        (VP (VBN winked)
          (PP (IN at)
            (NP (`` `)
              (NP
                (NP (NNP Omer))
                (ADVP (RB down)
                  (NP (DT the) (NN road))))
              (, ,)
              (NP
                (NP (NNP An) (POS '))
                ('' ') (NN e))))))
      (VP (VBD winked)
        (ADVP (RB back))
        (: --)
        (NP
          (NP (DT the) (JJ same))
          (PP (IN as)
            (NP (PRP us))))))
    (. !)))

nsubj(tell-4, They-1)
nsubj(make-7, They-1)
aux(tell-4, did-2)
neg(tell-4, n't-3)
root(ROOT-0, tell-4)
cc(tell-4, nor-6)
conj:nor(tell-4, make-7)
det(fuss-9, a-8)
dobj(make-7, fuss-9)
cc(tell-4, But-11)
csubj(winked-24, winked-12)
case(Omer-15, at-13)
nmod:at(winked-12, Omer-15)
advmod(Omer-15, down-16)
det(road-18, the-17)
nmod:npmod(down-16, road-18)
nmod:poss(e-23, An-20)
case(An-20, '-21)
appos(Omer-15, e-23)
conj:but(tell-4, winked-24)
advmod(winked-24, back-25)
det(same-28, the-27)
dobj(winked-24, same-28)
case(us-30, as-29)
nmod:as(same-28, us-30)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP BACK))
      (VP (VBP TO)
        (NP
          (NP (DT THE) (NNP ARMY) (NNP AGAIN))
          ('' '')
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 'm) (`` `)
                (ADJP (JJ ere)
                  (PP (IN in)
                    (NP
                      (NP (DT a) (JJ ticky) (NN ulster))
                      (, an) ('' ')
                      (NP (DT a) (JJ broken) (NN billycock))))
                  (`` `)
                  (PP (IN at)))))))
        (, ,)
        (S
          (ADJP (JJ A-layin) ('' ')
            (PP (IN on))
            (PP (TO to)
              (NP (DT the) (NN sergeant))))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP do) (RB n't)
                (VP (VB know)
                  (NP
                    (NP
                      (NP
                        (NP (DT a) (NN gun))
                        (PP (IN from)
                          (NP (DT a) (NN bat))))
                      (: ;)
                      (NP
                        (NP
                          (NP (PRP$ My) (NN shirt) (POS 's))
                          (NN doin) ('' ') (NN duty))
                        (PP (IN for)
                          (NP (NN jacket)))))
                    (, ,)
                    (NP
                      (NP (PRP$ my) (NN sock) (POS 's))
                      (NN stickin))
                    ('' '))
                  (PP (IN out)
                    (NP
                      (NP (NNP o) (POS '))
                      (NP
                        (NP (PRP$ my) (NNS boots))
                        (, ,)
                        (NP (NNP An))))))))))))
    ('' ')
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG learnin) ('' ')
        (NP (DT the)
          (ADJP (RB damned) (JJ old))
          (NN goose-step))
        (PP (IN along)
          (NP (NN o)))
        ('' ')
        (NP (DT the) (JJ new) (NNS recruits))))
    (. !)))

nsubj(TO-3, BACK-2)
ccomp(learnin-64, TO-3)
det(AGAIN-6, THE-4)
compound(AGAIN-6, ARMY-5)
dobj(TO-3, AGAIN-6)
nsubj(ere-11, I-8)
cop(ere-11, 'm-9)
acl:relcl(AGAIN-6, ere-11)
case(ulster-15, in-12)
det(ulster-15, a-13)
amod(ulster-15, ticky-14)
nmod:in(ere-11, ulster-15)
det(billycock-20, a-18)
amod(billycock-20, broken-19)
dep(ulster-15, billycock-20)
case(ulster-15, at-22)
dep(know-33, A-layin-24)
nmod(A-layin-24, on-26)
case(sergeant-29, to-27)
det(sergeant-29, the-28)
nmod:to(A-layin-24, sergeant-29)
nsubj(know-33, I-30)
aux(know-33, do-31)
neg(know-33, n't-32)
xcomp(TO-3, know-33)
det(gun-35, a-34)
dobj(know-33, gun-35)
case(bat-38, from-36)
det(bat-38, a-37)
nmod:from(gun-35, bat-38)
nmod:poss(shirt-41, My-40)
nmod:poss(duty-45, shirt-41)
case(shirt-41, 's-42)
compound(duty-45, doin-43)
dep(gun-35, duty-45)
case(jacket-47, for-46)
nmod:for(duty-45, jacket-47)
nmod:poss(sock-50, my-49)
nmod:poss(stickin-52, sock-50)
case(sock-50, 's-51)
appos(gun-35, stickin-52)
case(o-55, out-54)
nmod:'(know-33, o-55)
case(o-55, '-56)
nmod:poss(boots-58, my-57)
dep(o-55, boots-58)
appos(boots-58, An-60)
nsubj(learnin-64, I-62)
aux(learnin-64, 'm-63)
root(ROOT-0, learnin-64)
det(goose-step-69, the-66)
advmod(old-68, damned-67)
amod(goose-step-69, old-68)
dobj(learnin-64, goose-step-69)
case(o-71, along-70)
nmod:along(learnin-64, o-71)
det(recruits-75, the-73)
amod(recruits-75, new-74)
dobj(learnin-64, recruits-75)

(ROOT
  (S
    (ADVP (RB Back)
      (PP (TO to)
        (NP (DT the) (NNP Army))))
    (ADVP (RB again))
    (, ,)
    (VP (VBP sergeant) (, ,)
      (ADVP (RB Back)
        (PP (TO to)
          (NP (DT the) (NNP Army))))
      (ADVP (RB again)))
    (. .)))

advmod(sergeant-7, Back-1)
case(Army-4, to-2)
det(Army-4, the-3)
nmod:to(Back-1, Army-4)
advmod(sergeant-7, again-5)
root(ROOT-0, sergeant-7)
advmod(sergeant-7, Back-9)
case(Army-12, to-10)
det(Army-12, the-11)
nmod:to(Back-9, Army-12)
advmod(sergeant-7, again-13)

(ROOT
  (S
    (S
      (VP (VBP Do) (RB n't)
        (VP (VB look)
          (SBAR (IN so)
            (S
              (NP (`` `)
                (NP (NN ard))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP I))
                    (`` `)
                    (VP (VBP ave)))))
              (VP (RB n't)
                (NP (DT no) (NN card))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB back))
      (PP (TO to)
        (NP (DT the) (NNP Army)))
      (ADVP (RB again)))
    (. !)))

aux(look-3, Do-1)
neg(look-3, n't-2)
ccomp(Army-21, look-3)
mark(card-14, so-4)
nsubj(card-14, ard-6)
mark(ave-11, for-8)
nsubj(ave-11, I-9)
acl:relcl(ard-6, ave-11)
neg(card-14, n't-12)
neg(card-14, no-13)
advcl(look-3, card-14)
nsubj(Army-21, I-16)
cop(Army-21, 'm-17)
advmod(Army-21, back-18)
case(Army-21, to-19)
det(Army-21, the-20)
root(ROOT-0, Army-21)
advmod(Army-21, again-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBN done)
      (NP
        (NP (PRP$ my) (CD six) (NNS years) (POS '))
        (NN service)))
    (. .)))

nsubj(done-2, I-1)
root(ROOT-0, done-2)
nmod:poss(years-5, my-3)
nummod(years-5, six-4)
nmod:poss(service-7, years-5)
case(years-5, '-6)
dobj(done-2, service-7)

(ROOT
  (S (`` `)
    (S
      (S
        (NP (NNP Er) (NNP Majesty))
        (VP (VBP sez) (: :)
          (NP (`` ``)
            (NP
              (NP (NNP Good-day))
              (PRN (: --)
                (S
                  (NP (PRP You))
                  (VP (MD 'll)
                    (VP (VB please)
                      (S
                        (VP (TO to)
                          (VP (VB come)
                            (NP
                              (SBAR
                                (WHADVP (WRB when))
                                (S
                                  (NP (PRP you))
                                  (VP (VBP 're)
                                    (VP (VBN rung)
                                      (PP (IN for))))))
                              (, ,)
                              (NP (DT an))
                              ('' ')
                              (NP
                                (NP
                                  (NP (`` `) (NN ere))
                                  (SBAR
                                    (S
                                      (VP (VBZ 's)
                                        (NP (PRP$ your) (`` `) (NN ole) (NN back-pay))))))
                                (: ;)
                                (NP
                                  (NP
                                    (NP (NNP An) (POS '))
                                    (NN fourpence))
                                  (NP (DT a) (NN day))
                                  (PP (IN for)
                                    (NP (NN baccy))))))))))))
                (: --)))
            (, an) ('' ')
            (NP
              (NP
                (NP (NN bloomin) (POS '))
                (NN gen))
              (`` `)
              (NP
                (NP
                  (NP (NNS rous))
                  (, ,)
                  (ADVP (RB too)))
                (: ;)
                (NP
                  (NP (NNP An) (POS '))
                  (NP (RB now))))))))
      (NP (PRP you))
      (VP (MD can)
        (VP (VB make)
          (NP (PRP$ your) (NN fortune)))))
    (: --)
    (S
      (NP
        (NP (DT the) (JJ same))
        (PP (IN as)
          (NP
            (NP (PRP$ your) (NN orf))
            (`` `)
            (NP (NNS cers)))))
      (VP (VBP do)))
    (. .) ('' '')))

compound(Majesty-3, Er-2)
nsubj(sez-4, Majesty-3)
dep(make-53, sez-4)
dobj(sez-4, Good-day-7)
nsubj(please-11, You-9)
nsubj:xsubj(come-13, You-9)
aux(please-11, 'll-10)
dep(Good-day-7, please-11)
mark(come-13, to-12)
xcomp(please-11, come-13)
advmod(rung-17, when-14)
nsubjpass(rung-17, you-15)
auxpass(rung-17, 're-16)
dep(an-20, rung-17)
nmod(rung-17, for-18)
dobj(come-13, an-20)
dep(an-20, ere-23)
cop(back-pay-28, 's-24)
nmod:poss(back-pay-28, your-25)
compound(back-pay-28, ole-27)
acl:relcl(ere-23, back-pay-28)
nmod:poss(fourpence-32, An-30)
case(An-30, '-31)
dep(ere-23, fourpence-32)
det(day-34, a-33)
dep(fourpence-32, day-34)
case(baccy-36, for-35)
nmod:for(fourpence-32, baccy-36)
nmod:poss(gen-42, bloomin-40)
case(bloomin-40, '-41)
dep(Good-day-7, gen-42)
dep(gen-42, rous-44)
advmod(rous-44, too-46)
dep(rous-44, An-48)
case(An-48, '-49)
dep(An-48, now-50)
nsubj(make-53, you-51)
aux(make-53, can-52)
root(ROOT-0, make-53)
nmod:poss(fortune-55, your-54)
dobj(make-53, fortune-55)
det(same-58, the-57)
nsubj(do-64, same-58)
case(orf-61, as-59)
nmod:poss(orf-61, your-60)
nmod:as(same-58, orf-61)
dep(orf-61, cers-63)
parataxis(make-53, do-64)

(ROOT
  (S
    (ADVP (RB Back)
      (PP (TO to)
        (NP (DT the) (NNP Army))))
    (ADVP (RB again))
    (, ,)
    (VP (VBD sergeant) (, ,)
      (ADVP (RB Back)
        (PP (TO to)
          (NP
            (NP (DT the) (NNP Army))
            (ADVP (RB again)))))
      (: ;) (`` `)
      (S
        (NP (NNP Ow))
        (VP (VBD did)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP learn)
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (NP (JJ right-about) (NN turn)))))))))))
    (. ?)))

advmod(sergeant-7, Back-1)
case(Army-4, to-2)
det(Army-4, the-3)
nmod:to(Back-1, Army-4)
advmod(sergeant-7, again-5)
root(ROOT-0, sergeant-7)
advmod(sergeant-7, Back-9)
case(Army-12, to-10)
det(Army-12, the-11)
nmod:to(Back-9, Army-12)
advmod(Army-12, again-13)
nsubj(did-17, Ow-16)
ccomp(sergeant-7, did-17)
nsubj(learn-19, I-18)
nsubj:xsubj(do-21, I-18)
ccomp(did-17, learn-19)
mark(do-21, to-20)
xcomp(learn-19, do-21)
amod(turn-23, right-about-22)
dobj(do-21, turn-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB back))
      (PP (TO to)
        (NP (DT the) (NNP Army)))
      (ADVP (RB again)))
    (. !)))

nsubj(Army-6, I-1)
cop(Army-6, 'm-2)
advmod(Army-6, back-3)
case(Army-6, to-4)
det(Army-6, the-5)
root(ROOT-0, Army-6)
advmod(Army-6, again-7)

(ROOT
  (NP
    (NP (DT A) (NN man)
      (NP (NNP o) (POS '))
      (NN four-an) ('' '))
    (: -)
    (NP
      (NP (CD twenty))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (`` `)
            (ADVP (RB as) (RB n't))
            (VP (VBD learned)
              (PP (IN of)
                (NP (DT a) (NN trade)))
              (: --)
              (S
                (NP (NNP Beside))
                (NP (`` ``)
                  (NP (NNP Reserve))
                  ('' '')
                  (VP (VBN agin) ('' ')
                    (NP (PRP him))))))
            (: --) (`` `)
            (VP
              (ADVP (RB e))
              (MD 'd)
              (ADVP (RBR better))
              (VP (VB be)
                (VP
                  (ADVP (RB never))
                  (VBN made))))))))
    (. .)))

det(four-an-5, A-1)
compound(four-an-5, man-2)
nmod:poss(four-an-5, o-3)
case(o-3, '-4)
root(ROOT-0, four-an-5)
dep(four-an-5, twenty-8)
nsubj(learned-13, twenty-8)
ref(twenty-8, that-9)
advmod(n't-12, as-11)
neg(learned-13, n't-12)
acl:relcl(twenty-8, learned-13)
case(trade-16, of-14)
det(trade-16, a-15)
nmod:of(learned-13, trade-16)
nsubj(Reserve-20, Beside-18)
parataxis(learned-13, Reserve-20)
acl(Reserve-20, agin-22)
dobj(agin-22, him-24)
advmod(made-32, e-27)
aux(made-32, 'd-28)
advmod(made-32, better-29)
auxpass(made-32, be-30)
neg(made-32, never-31)
dep(learned-13, made-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD tried)
      (SBAR
        (S
          (NP
            (NP (PRP$ my) (NN luck))
            (PP (IN for)
              (NP
                (NP (DT a) (NN quarter))
                (, ,)
                (NP (DT an))))
            ('' ')
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was)
                  (ADJP (JJ enough)
                    (PP (IN for)
                      (NP
                        (NP (PRP me))
                        (, ,)
                        (NP
                          (NP
                            (NP (NNP An) (POS '))
                            (NN I))
                          (VP (VBN thought)
                            (PP (IN of) (`` `)
                              (NP
                                (NP (NNP Er) (NNP Majesty) (POS 's))
                                (NNS barricks)))))
                        (, ,)))))))
            (, an) ('' ')
            (NP
              (NP (PRP I))
              (SBAR
                (S
                  (VP (VBD thought)
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (MD 'd)
                          (VP (VB go)))))))))
            (, an) ('' '))
          (VP (VBP see)))))
    (. .)))

nsubj(tried-2, I-1)
root(ROOT-0, tried-2)
nmod:poss(luck-4, my-3)
nsubj(enough-13, luck-4)
nsubj(see-37, luck-4)
case(quarter-7, for-5)
det(quarter-7, a-6)
nmod:for(luck-4, quarter-7)
appos(quarter-7, an-9)
ref(luck-4, that-11)
cop(enough-13, was-12)
acl:relcl(luck-4, enough-13)
case(me-15, for-14)
nmod:for(enough-13, me-15)
nmod:poss(I-19, An-17)
case(An-17, '-18)
appos(me-15, I-19)
acl(I-19, thought-20)
case(barricks-26, of-21)
compound(Majesty-24, Er-23)
nmod:poss(barricks-26, Majesty-24)
case(Majesty-24, 's-25)
nmod:of(thought-20, barricks-26)
dep(luck-4, I-30)
acl:relcl(I-30, thought-31)
nsubj(go-34, I-32)
aux(go-34, 'd-33)
ccomp(thought-31, go-34)
ccomp(tried-2, see-37)

(ROOT
  (S
    (ADVP (RB Back)
      (PP (TO to)
        (NP (DT the) (NNP Army))))
    (ADVP (RB again))
    (, ,)
    (NP
      (NP (NN sergeant))
      (, ,)
      (ADVP (RB Back)
        (PP (TO to)
          (NP (DT the) (NNP Army)))))
    (ADVP (RB again))
    (PRN (: ;)
      (S
        (NP (PRP 'T))
        (VP (VBZ is) (RB n't)
          (NP (PRP$ my) (NN fault))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBP dress)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP I))
                    (`` `)
                    (VP (VBP alt)))))))))
      (: --))
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB back))
      (PP (TO to)
        (NP (DT the) (NNP Army)))
      (ADVP (RB again)))
    (. !)))

advmod(Army-33, Back-1)
case(Army-4, to-2)
det(Army-4, the-3)
nmod:to(Back-1, Army-4)
advmod(Army-33, again-5)
nsubj(Army-33, sergeant-7)
advmod(sergeant-7, Back-9)
case(Army-12, to-10)
det(Army-12, the-11)
nmod:to(Back-9, Army-12)
advmod(Army-33, again-13)
nsubj(fault-19, 'T-15)
cop(fault-19, is-16)
neg(fault-19, n't-17)
nmod:poss(fault-19, my-18)
parataxis(Army-33, fault-19)
mark(dress-22, if-20)
nsubj(dress-22, I-21)
advcl(fault-19, dress-22)
advmod(alt-26, when-23)
nsubj(alt-26, I-24)
advcl(dress-22, alt-26)
nsubj(Army-33, I-28)
cop(Army-33, 'm-29)
advmod(Army-33, back-30)
case(Army-33, to-31)
det(Army-33, the-32)
root(ROOT-0, Army-33)
advmod(Army-33, again-34)

(ROOT
  (S
    (S
      (NP (DT The) (NN sergeant))
      (VP (VBP arst)
        (NP (DT no) (NNS questions))))
    (, ,)
    (CC but)
    (S
      (NP (POS '))
      (X
        (X
          (X
            (X (SYM e))
            (NP (NN winked)))
          (NP (DT the) (JJ other) (NN eye) (, ,) ('' ')))
        (NP
          (NP (NN E))
          (VP (VBN sez)
            (PP (TO to)
              (NP
                (NP (PRP me))
                (, ,) ('' '') (`` `)
                (NP (NNP Shun))))))))
    (. !) ('' '')))

det(sergeant-2, The-1)
nsubj(arst-3, sergeant-2)
root(ROOT-0, arst-3)
neg(questions-5, no-4)
dobj(arst-3, questions-5)
cc(arst-3, but-7)
conj:but(arst-3, '-8)
dep(winked-10, e-9)
dep(eye-13, winked-10)
det(eye-13, the-11)
amod(eye-13, other-12)
dep(E-16, eye-13)
dep('-8, E-16)
acl(E-16, sez-17)
case(me-19, to-18)
nmod:to(sez-17, me-19)
dep(me-19, Shun-23)

(ROOT
  (S
    (FRAG
      (NP (DT an)))
    ('' ')
    (NP (PRP I))
    (VP (VBD shunted) (, ,)
      (PP
        (ADVP
          (NP (DT the) (JJ same))
          (RB as))
        (IN in)
        (NP
          (NP (NNS days))
          (VP (VBN gone)
            (SBAR (IN by)
              (S (: ;)
                (PP (IN For))
                ('' ')
                (NP (NNP e))
                (VP (VBD saw)
                  (NP
                    (NP (DT the) (NN set))
                    (VP (VBN o) ('' ')
                      (NP (PRP$ my) (NNS shoulders))
                      (, ,)))))))
          (, an) ('' ')
          (SBAR
            (S
              (NP (PRP I))
              (VP
                (VP (MD could) (RB n't) (`` `)
                  (VP (VB elp)
                    (ADJP (`` `) (JJ oldin) ('' '))
                    (ADVP (RB straight))
                    (SBAR
                      (WHADVP (WRB When))
                      (S
                        (NP (PRP me) (DT an)))))
                  ('' '))
                (NP
                  (NP (DT the) (JJ other) (NNS rookies))
                  (VP (VBN come)
                    (PP (IN under)
                      (NP (DT the) (NN barrick-gate)))))))))))
    (. .)))

dep(shunted-4, an-1)
nsubj(shunted-4, I-3)
root(ROOT-0, shunted-4)
det(same-7, the-6)
nmod:npmod(as-8, same-7)
advmod(days-10, as-8)
case(days-10, in-9)
nmod:in(shunted-4, days-10)
acl(days-10, gone-11)
mark(saw-17, by-12)
nmod(saw-17, For-14)
nsubj(saw-17, e-16)
advcl(gone-11, saw-17)
det(set-19, the-18)
dobj(saw-17, set-19)
acl(set-19, o-20)
nmod:poss(shoulders-23, my-22)
dobj(o-20, shoulders-23)
nsubj(elp-31, I-27)
aux(elp-31, could-28)
neg(elp-31, n't-29)
acl:relcl(days-10, elp-31)
xcomp(elp-31, oldin-33)
advmod(elp-31, straight-35)
advmod(me-37, When-36)
advcl(elp-31, me-37)
dep(me-37, an-38)
det(rookies-42, the-40)
amod(rookies-42, other-41)
dobj(elp-31, rookies-42)
acl(rookies-42, come-43)
case(barrick-gate-46, under-44)
det(barrick-gate-46, the-45)
nmod:under(come-43, barrick-gate-46)

(ROOT
  (S
    (ADVP (RB Back)
      (PP (TO to)
        (NP
          (NP (DT the) (NNP Army))
          (ADVP (RB again)))))
    (, ,)
    (NP
      (NP
        (NP
          (NP (NN sergeant))
          (, ,)
          (ADVP (RB Back)
            (PP (TO to)
              (NP (DT the) (NNP Army)))))
        (ADVP (RB again)))
      (, ;) (`` `)
      (S
        (NP (NNP Oo))
        (VP (MD would)
          (VP (VB ha))))
      ('' '))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP (VB carry)
              (NP
                (NP (DT an))
                (POS ') (NN port)))))))
    (. ?)))

advmod(thought-20, Back-1)
case(Army-4, to-2)
det(Army-4, the-3)
nmod:to(Back-1, Army-4)
advmod(Army-4, again-5)
nsubj(thought-20, sergeant-7)
advmod(sergeant-7, Back-9)
case(Army-12, to-10)
det(Army-12, the-11)
nmod:to(Back-9, Army-12)
advmod(sergeant-7, again-13)
nsubj(ha-18, Oo-16)
aux(ha-18, would-17)
dep(sergeant-7, ha-18)
root(ROOT-0, thought-20)
nsubj(carry-23, I-21)
aux(carry-23, could-22)
ccomp(thought-20, carry-23)
nmod:poss(port-26, an-24)
case(port-26, '-25)
dobj(carry-23, port-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB back))
      (PP (TO to)
        (NP (DT the) (NNP Army)))
      (ADVP (RB again)))
    (. !)))

nsubj(Army-6, I-1)
cop(Army-6, 'm-2)
advmod(Army-6, back-3)
case(Army-6, to-4)
det(Army-6, the-5)
root(ROOT-0, Army-6)
advmod(Army-6, again-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD took)
        (NP (PRP$ my) (NN bath))
        (, ,)
        (NP
          (NP (DT an))
          ('' ')
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD wallered)))))))
    (: --)
    (S
      (SBAR (IN for)
        (FRAG (, ,)
          (NP (NNP Gawd))))
      (, ,)
      (NP (PRP I))
      (VP (VBD needed)
        (NP (PRP it))
        (ADVP (RB so))))
    (. !)))

nsubj(took-2, I-1)
root(ROOT-0, took-2)
nmod:poss(bath-4, my-3)
dobj(took-2, bath-4)
dobj(took-2, an-6)
nsubj(wallered-9, I-8)
acl:relcl(an-6, wallered-9)
mark(Gawd-13, for-11)
advcl(needed-16, Gawd-13)
nsubj(needed-16, I-15)
parataxis(took-2, needed-16)
dobj(needed-16, it-17)
advmod(needed-16, so-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD smelt)
      (SBAR
        (S
          (NP (DT the) (NN smell))
          (VP (VBP o) ('' ')
            (NP (DT the) (NNS barricks))
            (, ,)
            (SBAR
              (S
                (NP (PRP I))
                (`` `)
                (VP (VBD eard)
                  (SBAR
                    (S
                      (NP (DT the) (NNS bugles))
                      (VP (VBP go)))))))))))
    (. .)))

nsubj(smelt-2, I-1)
root(ROOT-0, smelt-2)
det(smell-4, the-3)
nsubj(o-5, smell-4)
ccomp(smelt-2, o-5)
det(barricks-8, the-7)
dobj(o-5, barricks-8)
nsubj(eard-12, I-10)
dep(o-5, eard-12)
det(bugles-14, the-13)
nsubj(go-15, bugles-14)
ccomp(eard-12, go-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (`` `)
      (VP (VBD eard)
        (NP (DT the) (NNS feet))
        (PP (IN on)
          (NP (DT the) (NN gravel)))))
    (: --)
    (S
      (NP (DT the) (NNS feet))
      (VP
        (VP (VB o) ('' ')
          (NP
            (NP
              (NP (DT the) (NNS men))
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VB drill)))))
            (: --)
            (NP
              (NP
                (NP (NNP An) (POS '))
                (NN I) (NN sez))
              (TO to)
              (NP
                (NP (PRP$ my) (NN flutterin) (POS '))
                (`` `) (NNS eart-strings))))
          (PRN (, ,)
            (S
              (NP (PRP I))
              (VP (VBP sez)
                (PP (TO to)
                  (NP (PRP 'em)))))
            (, ,))
          (`` ``)
          (NP (NN Peace)))
        (, ,)
        (VP (VB be)
          (ADVP (RB still)))))
    (. !) ('' '')))

nsubj(eard-3, I-1)
root(ROOT-0, eard-3)
det(feet-5, the-4)
dobj(eard-3, feet-5)
case(gravel-8, on-6)
det(gravel-8, the-7)
nmod:on(eard-3, gravel-8)
det(feet-11, the-10)
nsubj(o-12, feet-11)
parataxis(eard-3, o-12)
det(men-15, the-14)
dobj(o-12, men-15)
nsubj(drill-17, men-15)
ref(men-15, what-16)
acl:relcl(men-15, drill-17)
nmod:poss(sez-22, An-19)
case(An-19, '-20)
compound(sez-22, I-21)
dep(men-15, sez-22)
dep(sez-22, to-23)
nmod:poss(flutterin-25, my-24)
nmod:poss(eart-strings-28, flutterin-25)
case(flutterin-25, '-26)
dep(sez-22, eart-strings-28)
nsubj(sez-31, I-30)
parataxis(o-12, sez-31)
case('em-33, to-32)
nmod:to(sez-31, 'em-33)
dobj(o-12, Peace-36)
dep(o-12, be-38)
advmod(be-38, still-39)

(ROOT
  (S
    (ADVP (RB Back)
      (PP (TO to)
        (NP (DT the) (NNP Army))))
    (ADVP (RB again))
    (, ,)
    (VP (VBD sergeant) (, ,)
      (ADVP (RB Back)
        (PP (TO to)
          (NP
            (NP (DT the) (NNP Army))
            (ADVP (RB again)))))
      (: ;) (`` `)
      (S
        (NP (NNP Oo))
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD knew)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (DT the) (NNP _) (NNP Jumner) (NNP _))
                    (VP (VBD was)
                      (ADJP (JJ due)))))))))))
    (. ?)))

advmod(sergeant-7, Back-1)
case(Army-4, to-2)
det(Army-4, the-3)
nmod:to(Back-1, Army-4)
advmod(sergeant-7, again-5)
root(ROOT-0, sergeant-7)
advmod(sergeant-7, Back-9)
case(Army-12, to-10)
det(Army-12, the-11)
nmod:to(Back-9, Army-12)
advmod(Army-12, again-13)
nsubj(said-17, Oo-16)
ccomp(sergeant-7, said-17)
nsubj(knew-19, I-18)
ccomp(said-17, knew-19)
advmod(due-26, when-20)
det(_-24, the-21)
compound(_-24, _-22)
compound(_-24, Jumner-23)
nsubj(due-26, _-24)
cop(due-26, was-25)
ccomp(knew-19, due-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB back))
      (PP (TO to)
        (NP (DT the) (NNP Army)))
      (ADVP (RB again)))
    (. !)))

nsubj(Army-6, I-1)
cop(Army-6, 'm-2)
advmod(Army-6, back-3)
case(Army-6, to-4)
det(Army-6, the-5)
root(ROOT-0, Army-6)
advmod(Army-6, again-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD carried)
        (NP (PRP$ my) (NNS slops))
        (PP (TO to)
          (NP (DT the) (NN tailor)))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP sez)
        (PP (TO to) (`` `)
          (NP
            (NP (NN im))
            (, ,)
            (NP
              (NP (`` ``) (NN None) (NN o) ('' '))
              (NP (PRP$ your) (NN lip)))))))
    (. !)))

nsubj(carried-2, I-1)
root(ROOT-0, carried-2)
nmod:poss(slops-4, my-3)
dobj(carried-2, slops-4)
case(tailor-7, to-5)
det(tailor-7, the-6)
nmod:to(carried-2, tailor-7)
nsubj(sez-10, I-9)
parataxis(carried-2, sez-10)
case(im-13, to-11)
nmod:to(sez-10, im-13)
compound(o-17, None-16)
appos(im-13, o-17)
nmod:poss(lip-20, your-19)
dep(o-17, lip-20)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB tight))
    (VP (VBZ 'em)
      (PP (IN over)
        (NP (DT the) (NNS shoulders)))
      (, ,)
      (NP
        (NP (DT an))
        ('' ')
        (SBAR
          (S
            (NP
              (NP (JJ loose) (NNS 'em))
              (PP (IN over)
                (NP (DT the) (`` `) (NN ip))))
            (, ,)
            (PP (IN For)
              (NP (DT the) (NN set) (NN o)))
            ('' ')
            (NP (DT the) (NN tunic))
            (VP (VBZ 's) (`` `)
              (ADJP (JJ orrid)))))))
    (. .) ('' '')))

nsubj('em-3, You-1)
advmod('em-3, tight-2)
root(ROOT-0, 'em-3)
case(shoulders-6, over-4)
det(shoulders-6, the-5)
nmod:over('em-3, shoulders-6)
dobj('em-3, an-8)
amod('em-11, loose-10)
nsubj(orrid-26, 'em-11)
case(ip-15, over-12)
det(ip-15, the-13)
nmod:over('em-11, ip-15)
case(o-20, For-17)
det(o-20, the-18)
compound(o-20, set-19)
nmod:for(orrid-26, o-20)
det(tunic-23, the-22)
nsubj(orrid-26, tunic-23)
cop(orrid-26, 's-24)
acl:relcl(an-8, orrid-26)

(ROOT
  (S
    (NP (NNP An) (POS '))
    (PRN ('' ')
      (S
        (NP (NNP e))
        (VP (VBP sez)
          (PP (TO to)
            (NP (PRP me)))))
      (, ,) (`` ``))
    (VP (VBD Strike)
      (SBAR
        (S
          (S
            (NP (PRP me))
            (ADJP (VBN dead)))
          (, ,)
          (CC But)
          (S
            (NP (PRP I))
            (VP (VBD thought)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBD was)
                    (VP (VBN used)
                      (PP (TO to)
                        (NP (DT the) (NN business))))))))))))
    (. !) ('' '')))

nsubj(Strike-10, An-1)
case(An-1, '-2)
nsubj(sez-5, e-4)
parataxis(Strike-10, sez-5)
case(me-7, to-6)
nmod:to(sez-5, me-7)
root(ROOT-0, Strike-10)
dep(dead-12, me-11)
dep(Strike-10, dead-12)
cc(dead-12, But-14)
nsubj(thought-16, I-15)
dep(Strike-10, thought-16)
conj:but(dead-12, thought-16)
nsubjpass(used-19, you-17)
auxpass(used-19, was-18)
ccomp(thought-16, used-19)
case(business-22, to-20)
det(business-22, the-21)
nmod:to(used-19, business-22)

(ROOT
  (S
    (VP
      (NP
        (NP (DT an))
        ('' ')
        (SBAR (IN so)
          (S
            (NP (POS '))
            (VP
              (ADVP (RB e))
              (VBN done)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP I))
                  (VP (VBD said)))))))))
    (. .)))

root(ROOT-0, an-1)
mark(done-6, so-3)
nsubj(done-6, '-4)
advmod(done-6, e-5)
dep(an-1, done-6)
dobj(said-9, what-7)
nsubj(said-9, I-8)
ccomp(done-6, said-9)

(ROOT
  (S
    (ADVP (RB Back)
      (PP (TO to)
        (NP (DT the) (NNP Army))))
    (ADVP (RB again))
    (, ,)
    (VP (VBP sergeant) (, ,)
      (ADVP (RB Back)
        (PP (TO to)
          (NP (DT the) (NNP Army))))
      (ADVP (RB again)))
    (. .)))

advmod(sergeant-7, Back-1)
case(Army-4, to-2)
det(Army-4, the-3)
nmod:to(Back-1, Army-4)
advmod(sergeant-7, again-5)
root(ROOT-0, sergeant-7)
advmod(sergeant-7, Back-9)
case(Army-12, to-10)
det(Army-12, the-11)
nmod:to(Back-9, Army-12)
advmod(sergeant-7, again-13)

(ROOT
  (FRAG
    (ADVP (RB Rather)
      (ADVP (RB too) (JJ free))
      (PP (IN with)
        (NP (PRP$ my) (NN fancies))))
    (. ?)))

root(ROOT-0, Rather-1)
advmod(free-3, too-2)
advmod(Rather-1, free-3)
case(fancies-6, with-4)
nmod:poss(fancies-6, my-5)
nmod:with(Rather-1, fancies-6)

(ROOT
  (NP
    (NP (NNP Wot))
    (: --)
    (NP (PRP me))
    (. ?)))

root(ROOT-0, Wot-1)
dep(Wot-1, me-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB back))
      (PP (TO to)
        (NP (DT the) (NNP Army)))
      (ADVP (RB again)))
    (. !)))

nsubj(Army-6, I-1)
cop(Army-6, 'm-2)
advmod(Army-6, back-3)
case(Army-6, to-4)
det(Army-6, the-5)
root(ROOT-0, Army-6)
advmod(Army-6, again-7)

(ROOT
  (S
    (S
      (NP (JJ Next) (NN week))
      (NP (PRP I))
      (VP (MD 'll) (`` `)
        (VP (VB ave)
          (S
            (NP (PRP 'em))
            (ADJP (JJ fitted))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB buy)
          (S
            (NP (PRP me))
            (NP (DT a) (NN swagger-cane))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (MD 'll)
        (VP (VB let)
          (S
            (NP (PRP me))
            (VP
              (VP
                (ADVP (JJ free))
                (VB o) ('' ')
                (NP
                  (NP (DT the) (NN barricks)
                    (S
                      (VP (TO to)
                        (VP (VB walk)
                          (PP (IN on)
                            (NP
                              (NP
                                (NP (DT the)
                                  (NAC (NNP Hoe)
                                    (PP
                                      (ADVP (RB again))
                                      (IN In)
                                      (NP (DT the) (NN name))))
                                  (NN o) (POS '))
                                (NNP William) (NNP Parsons))
                              (, ,)
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBD used)
                                    (S
                                      (VP (TO to)
                                        (VP (VB be)
                                          (NP (NNP Edward) (NNP Clay))))))))))))))
                  (, ,)
                  (NP (NNP An) (POS '))))
              (: --)
              (NP
                (NP (DT any) (JJ pore) (NN beggar))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ wants)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (MD can)
                            (VP (VB draw)
                              (NP
                                (NP (PRP$ my) (NN fourpence))
                                (NP (DT a) (NN day))))))))))))))))
    (. !)))

amod(week-2, Next-1)
nmod:tmod(ave-6, week-2)
nsubj(ave-6, I-3)
aux(ave-6, 'll-4)
root(ROOT-0, ave-6)
nsubj(fitted-8, 'em-7)
xcomp(ave-6, fitted-8)
nsubj(buy-12, I-10)
aux(buy-12, 'll-11)
parataxis(ave-6, buy-12)
nsubj(swagger-cane-15, me-13)
det(swagger-cane-15, a-14)
xcomp(buy-12, swagger-cane-15)
nsubj(let-19, They-17)
aux(let-19, 'll-18)
parataxis(ave-6, let-19)
nsubj(o-22, me-20)
advmod(o-22, free-21)
ccomp(let-19, o-22)
det(barricks-25, the-24)
dobj(o-22, barricks-25)
mark(walk-27, to-26)
acl(barricks-25, walk-27)
case(Parsons-38, on-28)
det(o-35, the-29)
dep(o-35, Hoe-30)
advmod(name-34, again-31)
case(name-34, In-32)
det(name-34, the-33)
nmod:in(Hoe-30, name-34)
nmod:poss(Parsons-38, o-35)
case(o-35, '-36)
compound(Parsons-38, William-37)
nmod:on(walk-27, Parsons-38)
nsubj(used-41, Parsons-38)
nsubj:xsubj(Clay-45, Parsons-38)
ref(Parsons-38, that-40)
acl:relcl(Parsons-38, used-41)
mark(Clay-45, to-42)
cop(Clay-45, be-43)
compound(Clay-45, Edward-44)
xcomp(used-41, Clay-45)
appos(barricks-25, An-47)
case(An-47, '-48)
det(beggar-52, any-50)
amod(beggar-52, pore-51)
dobj(o-22, beggar-52)
nsubj(wants-54, beggar-52)
ref(beggar-52, that-53)
acl:relcl(beggar-52, wants-54)
nsubj(draw-57, it-55)
aux(draw-57, can-56)
ccomp(wants-54, draw-57)
nmod:poss(fourpence-59, my-58)
dobj(draw-57, fourpence-59)
det(day-61, a-60)
dep(fourpence-59, day-61)

(ROOT
  (SINV
    (ADVP (RB Back)
      (PP (TO to)
        (NP (DT the) (NNP Army))))
    (ADVP (RB again))
    (, ,)
    (ADVP (RB sergeant))
    (, ,)
    (ADVP (RB Back)
      (PP (TO to)
        (NP (DT the) (NNP Army))))
    (VP
      (ADVP (RB again) (: :) (RB Out))
      (VBP o) (`` ')
      (NP
        (NP (DT the) (NN cold))
        (, an) ('' ')
        (NP
          (NP (DT the) (NN rain) (, ,) (NN sergeant) (, ,) (NNS Out) (NN o) ('' '))
          (NP (DT the) (JJ cold) (DT an)))
        ('' ')))
    (NP (DT the) (NN rain))
    (. .)))

advmod(o-16, Back-1)
case(Army-4, to-2)
det(Army-4, the-3)
nmod:to(Back-1, Army-4)
advmod(o-16, again-5)
advmod(o-16, sergeant-7)
advmod(o-16, Back-9)
case(Army-12, to-10)
det(Army-12, the-11)
nmod:to(Back-9, Army-12)
advmod(Out-15, again-13)
advmod(o-16, Out-15)
root(ROOT-0, o-16)
det(cold-19, the-18)
dobj(o-16, cold-19)
det(o-28, the-22)
compound(o-28, rain-23)
dep(o-28, sergeant-25)
dep(o-28, Out-27)
dep(cold-19, o-28)
det(cold-31, the-30)
dep(o-28, cold-31)
dep(cold-31, an-32)
det(rain-35, the-34)
nsubj(o-16, rain-35)

(ROOT
  (S (`` `)
    (NP (NNP Oo))
    (VP (VBZ 's)
      (ADVP (RB there)))
    (. ?)))

nsubj('s-3, Oo-2)
root(ROOT-0, 's-3)
advmod('s-3, there-4)

(ROOT
  (S
    (NP
      (NP
        (NP (DT A) (NN man))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (ADJP (RB too) (JJ good))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN lost)
                      (NP (PRP you))))))))))
      (, ,)
      (NP
        (NP (DT A) (NN man))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is) (`` `)
              (ADJP (JJ andled))))))
      (, an) ('' '))
    (VP (VBD made) (: --)
      (S
        (NP
          (NP (DT A) (NN man))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD will)
                (VP (VB pay)
                  (NP
                    (NP (WP what))
                    (POS ') (VBG e) (NN cost)))))))
        (NP (PRP you))
        (PP (IN In)
          (NP
            (NP (NN learnin) (POS '))
            (NP
              (FRAG
                (NP (DT the) (NNS others))
                (NP
                  (NP (PRP$ their) (NN trade))
                  (: --)
                  (NP (NN parade)))))))))
    (. !)))

det(man-2, A-1)
nsubj(good-6, man-2)
nsubjpass:xsubj(lost-9, man-2)
nsubj(made-20, man-2)
ref(man-2, that-3)
cop(good-6, 's-4)
advmod(good-6, too-5)
acl:relcl(man-2, good-6)
mark(lost-9, to-7)
auxpass(lost-9, be-8)
xcomp(good-6, lost-9)
dobj(lost-9, you-10)
det(man-13, A-12)
appos(man-2, man-13)
nsubj(andled-17, man-13)
ref(man-13, that-14)
cop(andled-17, is-15)
acl:relcl(man-13, andled-17)
root(ROOT-0, made-20)
det(man-23, A-22)
nsubj(pay-26, man-23)
nsubj(you-31, man-23)
ref(man-23, that-24)
aux(pay-26, will-25)
acl:relcl(man-23, pay-26)
nmod:poss(cost-30, what-27)
case(cost-30, '-28)
amod(cost-30, e-29)
dobj(pay-26, cost-30)
parataxis(made-20, you-31)
case(learnin-33, In-32)
dep(you-31, learnin-33)
case(learnin-33, '-34)
det(others-36, the-35)
dep(learnin-33, others-36)
nmod:poss(trade-38, their-37)
dep(others-36, trade-38)
dep(trade-38, parade-40)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBN droppin) ('' ')
        (NP (DT the) (NN pick) (NN o))
        ('' ')
        (SBAR
          (NP (DT the) (NN Army))
          (IN Because)
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (`` `) (VB elp)
                (S
                  (S
                    (NP (PRP 'em))
                    (VP (VBP remain)))
                  (, ,)
                  (CC But)
                  (S
                    (NP (NNS drives))
                    (VP (VBZ 'em)
                      (S
                        (VP (TO to)
                          (VP (VB cheat)
                            (S
                              (VP (TO to)
                                (VP (VB get)
                                  (PP (IN out)
                                    (NP
                                      (NP (NNP o) (POS '))
                                      (NP
                                        (NP (DT the) (NN street))
                                        (NP
                                          (NP (NNP An) (POS '))
                                          (NN back))))))))))))))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NNP Army))
                    (ADVP (RB again))))))))))
    (. !)))

nsubjpass(droppin-3, You-1)
auxpass(droppin-3, 're-2)
root(ROOT-0, droppin-3)
det(o-7, the-5)
compound(o-7, pick-6)
dobj(droppin-3, o-7)
det(Army-10, the-9)
dep(elp-16, Army-10)
mark(elp-16, Because-11)
nsubj(elp-16, you-12)
aux(elp-16, do-13)
neg(elp-16, n't-14)
advcl(droppin-3, elp-16)
nsubj(remain-18, 'em-17)
xcomp(elp-16, remain-18)
cc(remain-18, But-20)
nsubj('em-22, drives-21)
nsubj:xsubj(cheat-24, drives-21)
xcomp(elp-16, 'em-22)
conj:but(remain-18, 'em-22)
mark(cheat-24, to-23)
xcomp('em-22, cheat-24)
mark(get-26, to-25)
xcomp(cheat-24, get-26)
case(o-28, out-27)
nmod:'(get-26, o-28)
case(o-28, '-29)
det(street-31, the-30)
dep(o-28, street-31)
nmod:poss(back-34, An-32)
case(An-32, '-33)
dep(street-31, back-34)
case(Army-37, to-35)
det(Army-37, the-36)
nmod:to(elp-16, Army-37)
advmod(Army-37, again-38)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP BIRDS))
      (PP (IN OF)
        (NP (NNP PREY))))
    ('' '')
    (VP (VBD MARCH)
      (NP (NNP March)))
    (. !)))

nsubj(MARCH-6, BIRDS-2)
case(PREY-4, OF-3)
nmod:of(BIRDS-2, PREY-4)
root(ROOT-0, MARCH-6)
nmod:tmod(MARCH-6, March-7)

(ROOT
  (S
    (NP (DT The) (NN mud))
    (VP (VBZ is)
      (NP
        (NP
          (NP (NN cakin) (POS '))
          (NN good))
        (PP (IN about)
          (NP (PRP$ our) (NNS trousies)))))
    (. .)))

det(mud-2, The-1)
nsubj(good-6, mud-2)
cop(good-6, is-3)
nmod:poss(good-6, cakin-4)
case(cakin-4, '-5)
root(ROOT-0, good-6)
case(trousies-9, about-7)
nmod:poss(trousies-9, our-8)
nmod:about(good-6, trousies-9)

(ROOT
  (INTJ (UH Front) (. !)))

root(ROOT-0, Front-1)

(ROOT
  (S (: --)
    (S
      (ADVP
        (NP (NNS eyes))
        (RB front))
      (, ,)
      (NP (DT an))
      ('' ')
      (VP (VBP watch)
        (NP
          (NP (DT the) (NN Colour-casin) (POS 's))
          (NN drip))))
    (. .)))

nmod:npmod(front-3, eyes-2)
advmod(watch-7, front-3)
nsubj(watch-7, an-5)
root(ROOT-0, watch-7)
det(Colour-casin-9, the-8)
nmod:poss(drip-11, Colour-casin-9)
case(Colour-casin-9, 's-10)
dobj(watch-7, drip-11)

(ROOT
  (INTJ (UH Front) (. !)))

root(ROOT-0, Front-1)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS faces))
      (PP (IN of)
        (NP
          (NP (DT the) (NNS women))
          (PP (IN in)
            (NP (DT the) (`` `) (JJ ouses) (NN Ai))))))
    (VP (RB n't)
      (S
        (NP
          (NP (DT the) (NN kind) (NN o) (POS '))
          (NNS things)
          (S
            (VP (TO to)
              (VP (VB take)
                (PP (IN aboard)
                  (NP (DT the) (NN ship)))))))))
    (. .)))

det(faces-2, The-1)
nsubj(n't-11, faces-2)
case(women-5, of-3)
det(women-5, the-4)
nmod:of(faces-2, women-5)
case(Ai-10, in-6)
det(Ai-10, the-7)
amod(Ai-10, ouses-9)
nmod:in(women-5, Ai-10)
root(ROOT-0, n't-11)
det(o-14, the-12)
compound(o-14, kind-13)
nmod:poss(things-16, o-14)
case(o-14, '-15)
xcomp(n't-11, things-16)
mark(take-18, to-17)
acl(things-16, take-18)
case(ship-21, aboard-19)
det(ship-21, the-20)
nmod:aboard(take-18, ship-21)

(ROOT
  (S
    (VP (VB Cheer))
    (. !)))

root(ROOT-0, Cheer-1)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP we))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB march)
        (PP (TO to)
          (NP (NN victory)))))
    (. .)))

dep(march-6, An-1)
case(An-1, '-2)
nsubj(march-6, we-3)
aux(march-6, 'll-4)
neg(march-6, never-5)
root(ROOT-0, march-6)
case(victory-8, to-7)
nmod:to(march-6, victory-8)

(ROOT
  (S
    (VP (VB Cheer))
    (. !)))

root(ROOT-0, Cheer-1)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP we))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB live)
        (S
          (VP (TO to) (`` `)
            (VP (VB ear)
              (NP (DT the) (NN cannon) (NN roar)))))))
    (. !)))

dep(live-6, An-1)
case(An-1, '-2)
nsubj(live-6, we-3)
nsubj:xsubj(ear-9, we-3)
aux(live-6, 'll-4)
neg(live-6, never-5)
root(ROOT-0, live-6)
mark(ear-9, to-7)
xcomp(live-6, ear-9)
det(roar-12, the-10)
compound(roar-12, cannon-11)
dobj(ear-9, roar-12)

(ROOT
  (S
    (NP (DT The) (JJ Large)
      (NP (NNP Birds) (NNP o) (POS '))
      (NNP Prey))
    (PRN
      (S
        (NP (PRP They))
        (VP (MD will)
          (VP (VB carry)
            (NP (PRP us))
            (ADVP (RB away)))))
      (, ,))
    (NP
      (NP (NNP An) (POS '))
      (NN you))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB see)
        (NP (PRP$ your) (NNS soldiers))
        (ADVP (DT any) (RBR more))))
    (. !)))

det(Prey-6, The-1)
amod(Prey-6, Large-2)
compound(o-4, Birds-3)
nmod:poss(Prey-6, o-4)
case(o-4, '-5)
nsubj(see-18, Prey-6)
nsubj(carry-9, They-7)
aux(carry-9, will-8)
parataxis(see-18, carry-9)
dobj(carry-9, us-10)
advmod(carry-9, away-11)
nmod:poss(you-15, An-13)
case(An-13, '-14)
nsubj(see-18, you-15)
aux(see-18, 'll-16)
neg(see-18, never-17)
root(ROOT-0, see-18)
nmod:poss(soldiers-20, your-19)
dobj(see-18, soldiers-20)
dep(more-22, any-21)
advmod(see-18, more-22)

(ROOT
  (INTJ (UH Wheel) (. !)))

root(ROOT-0, Wheel-1)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (VP (VB keep)
        (NP (PRP$ your) (NN touch))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBP 're)
        (NP
          (NP
            (NP (NN goin) (POS '))
            (NN round))
          (NP (DT a) (NN corner)))))
    (. .)))

discourse(keep-3, Oh-1)
root(ROOT-0, keep-3)
nmod:poss(touch-5, your-4)
dobj(keep-3, touch-5)
nsubj(round-11, we-7)
cop(round-11, 're-8)
nmod:poss(round-11, goin-9)
case(goin-9, '-10)
parataxis(keep-3, round-11)
det(corner-13, a-12)
dep(round-11, corner-13)

(ROOT
  (FRAG
    (NP (NNP Time))
    (. !)))

root(ROOT-0, Time-1)

(ROOT
  (S (: --)
    (S
      (NP (NN mark) (NN time))
      (, ,)
      (NP (DT an))
      ('' ')
      (VP (VBD let)
        (SBAR
          (S
            (NP (DT the) (NNS men))
            (VP (VBD be'ind)
              (S
                (NP (PRP us))
                (ADJP (JJ close))))))))
    (. .)))

compound(time-3, mark-2)
nsubj(let-7, time-3)
nsubj(let-7, an-5)
root(ROOT-0, let-7)
det(men-9, the-8)
nsubj(be'ind-10, men-9)
ccomp(let-7, be'ind-10)
nsubj(close-12, us-11)
xcomp(be'ind-10, close-12)

(ROOT
  (INTJ (UH Lord) (. !)))

root(ROOT-0, Lord-1)

(ROOT
  (S
    (S
      (NP (DT the) (NN transport))
      (VP (VBZ 's)
        (ADJP (JJ full))))
    (, ,)
    (S
      (NP (DT an))
      ('' ')
      (VP (`` `) (VB alf)
        (S
          (NP
            (NP (PRP$ our) (NN lot))
            (PP (RB not) (IN on)
              (NP (`` `)
                (NP (NN er))
                (: --)
                (NP (NNP Cheer) (, ,) (NNP O)))))
          (VP (VB cheer)))))
    (. !)))

det(transport-2, the-1)
nsubj(full-4, transport-2)
cop(full-4, 's-3)
root(ROOT-0, full-4)
nsubj(alf-9, an-6)
parataxis(full-4, alf-9)
nmod:poss(lot-11, our-10)
nsubj(cheer-20, lot-11)
neg(er-15, not-12)
case(er-15, on-13)
nmod:on(lot-11, er-15)
compound(O-19, Cheer-17)
dep(er-15, O-19)
ccomp(alf-9, cheer-20)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (VP (VBG going)
        (PRT (RP off))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT no) (NN one))
            (VP (VBZ knows))))))
    (. .)))

nsubj(going-3, We-1)
aux(going-3, 're-2)
root(ROOT-0, going-3)
compound:prt(going-3, off-4)
advmod(knows-8, where-5)
neg(one-7, no-6)
nsubj(knows-8, one-7)
advcl(going-3, knows-8)

(ROOT
  (FRAG
    (NP (NNP March))
    (. !)))

root(ROOT-0, March-1)

(ROOT
  (NP
    (NP
      (NP (DT The) (NNP Devil) (POS 's))
      (NN none))
    (ADJP (RB so) (JJ black)
      (PP (IN as) ('' ')
        (NP
          (NP (NNP e))
          (SBAR
            (S
              (VP (VBZ is)
                (VP (VBN painted))))))))
    (. !)))

det(Devil-2, The-1)
nmod:poss(none-4, Devil-2)
case(Devil-2, 's-3)
root(ROOT-0, none-4)
advmod(black-6, so-5)
amod(none-4, black-6)
case(e-9, as-7)
nmod:as(black-6, e-9)
auxpass(painted-11, is-10)
acl:relcl(e-9, painted-11)

(ROOT
  (S
    (VP (VB Cheer))
    (. !)))

root(ROOT-0, Cheer-1)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD 'll) (`` `)
      (VP (VB ave)
        (NP (DT some) (NN fun))
        (SBAR (IN before)
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (VP (VBN put)
                (PRT (RP away))))))))
    (. .)))

nsubj(ave-4, We-1)
aux(ave-4, 'll-2)
root(ROOT-0, ave-4)
det(fun-6, some-5)
dobj(ave-4, fun-6)
mark(put-10, before-7)
nsubjpass(put-10, we-8)
auxpass(put-10, 're-9)
advcl(ave-4, put-10)
compound:prt(put-10, away-11)

(ROOT
  (S (`` `)
    (NP
      (NP (NNP Alt))
      (, ,)
      (NP (DT an)))
    ('' ') (`` `)
    (NP (NNP and))
    (VP (`` `)
      (VP (VBP er)
        (PRT (RP out)))
      (PRN (: --)
        (S
          (NP (DT a) (NN woman))
          (VP (VBZ 's)
            (VP (VBN gone)))))
      (CC and)
      (VP (VBD fainted)))
    (. !)))

nsubj(er-9, Alt-2)
nsubj(fainted-17, Alt-2)
appos(Alt-2, an-4)
nsubj(er-9, and-7)
root(ROOT-0, er-9)
compound:prt(er-9, out-10)
det(woman-13, a-12)
nsubjpass(gone-15, woman-13)
auxpass(gone-15, 's-14)
parataxis(er-9, gone-15)
cc(er-9, and-16)
conj:and(er-9, fainted-17)

(ROOT
  (S
    (VP (VB Cheer))
    (. !)))

root(ROOT-0, Cheer-1)

(ROOT
  (S
    (VP (VB Get)
      (PP (IN on))
      (: --)
      (S
        (NP (NNP Gawd))
        (VP (`` `) (VB elp)
          (S
            (NP (DT the) (VBN married) (NNS men))
            (ADJP (JJ to-day))))))
    (. !)))

root(ROOT-0, Get-1)
nmod(Get-1, on-2)
nsubj(elp-6, Gawd-4)
ccomp(Get-1, elp-6)
det(men-9, the-7)
amod(men-9, married-8)
nsubj(to-day-10, men-9)
xcomp(elp-6, to-day-10)

(ROOT
  (S
    (VP (VB Hoi))
    (. !)))

root(ROOT-0, Hoi-1)

(ROOT
  (S
    (S
      (VP (VB Come)
        (PRT (RP up))))
    (, ,)
    (NP (PRP you))
    (VP (`` `) (VBP ungry)
      (NP (NNS beggars))
      (, ,)
      (PP (TO to)
        (NP (NN yer) (NN sorrow))))
    (. .)))

ccomp(ungry-6, Come-1)
compound:prt(Come-1, up-2)
nsubj(ungry-6, you-4)
root(ROOT-0, ungry-6)
dobj(ungry-6, beggars-7)
case(sorrow-11, to-9)
compound(sorrow-11, yer-10)
nmod:to(ungry-6, sorrow-11)

(ROOT
  (S (-LRB- -LRB-)
    (NP (`` `)
      (NP (NN Ear))
      (SBAR
        (S
          (NP (PRP them))
          (VP (VBP say)
            (S
              (NP (PRP they))
              (VP (VB want)
                (NP (PRP$ their) (NN tea)))
              (, ,)))))
      (, an) ('' '))
    (VP (VBP want)
      (S
        (NP (PRP it))
        (ADJP (JJ quick))))
    (. !) (-RRB- -RRB-)))

nsubj(want-13, Ear-3)
nsubj(say-5, them-4)
acl:relcl(Ear-3, say-5)
nsubj(want-7, they-6)
ccomp(say-5, want-7)
nmod:poss(tea-9, their-8)
dobj(want-7, tea-9)
root(ROOT-0, want-13)
nsubj(quick-15, it-14)
xcomp(want-13, quick-15)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD wo) (RB n't)
        (VP (VB have)
          (NP
            (NP (DT no) (NN mind))
            (PP (IN for)
              (NP
                (NP (NNS slingers))
                (PRN (, ,) (RB not)
                  (NP
                    (NP (NN to-morrow))
                    (: --)
                    (NP (NNP No))))))))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB put)
          (NP
            (NP (DT the) (`` `) (JJ tween-decks) (NN stove))
            (ADJP (JJ out) (, ,) (JJ bein) ('' ') (JJ sick))))))
    (. !)))

nsubj(have-4, You-1)
aux(have-4, wo-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
neg(mind-6, no-5)
dobj(have-4, mind-6)
case(slingers-8, for-7)
nmod:for(mind-6, slingers-8)
dep(to-morrow-11, not-10)
dep(slingers-8, to-morrow-11)
dep(to-morrow-11, No-13)
nsubj(put-17, you-15)
aux(put-17, 'll-16)
parataxis(have-4, put-17)
det(stove-21, the-18)
amod(stove-21, tween-decks-20)
dobj(put-17, stove-21)
amod(sick-26, out-22)
amod(sick-26, bein-24)
amod(stove-21, sick-26)

(ROOT
  (S (`` `)
    (VP (VB Alt))
    (. !)))

root(ROOT-0, Alt-2)

(ROOT
  (NP
    (NP (DT The) (JJ married) (NN kit))
    (PP (`` `) (IN as)
      (NP (DT all)))
    (S
      (VP (TO to)
        (VP (VB go)
          (PP (IN before)
            (NP (PRP us))))))
    (. !)))

det(kit-3, The-1)
amod(kit-3, married-2)
root(ROOT-0, kit-3)
case(all-6, as-5)
nmod:as(kit-3, all-6)
mark(go-8, to-7)
acl(kit-3, go-8)
case(us-10, before-9)
nmod:before(go-8, us-10)

(ROOT
  (S (`` `)
    (ADVP (RB Course))
    (NP (PRP it))
    (VP (VBZ 's)
      (VP (VBN blocked)
        (NP
          (NP (DT the) (NN bloomin) (POS '))
          (NN gangway))
        (ADVP (RB up) (RB again))))
    (. !)))

advmod(blocked-5, Course-2)
nsubjpass(blocked-5, it-3)
auxpass(blocked-5, 's-4)
root(ROOT-0, blocked-5)
det(bloomin-7, the-6)
nmod:poss(gangway-9, bloomin-7)
case(bloomin-7, '-8)
dobj(blocked-5, gangway-9)
advmod(again-11, up-10)
advmod(blocked-5, again-11)

(ROOT
  (S
    (VP
      (VP (VB Cheer))
      (, ,)
      (VP
        (ADVP (RB O))
        (VB cheer)
        (S
          (S
            (NP
              (NP (DT the) (`` `) (NNP Orse) (NNPS Guards) (NNP watchin) (POS '))
              (NN tender) (NN o'er))
            (NP (PRP us)))
          (, ,)
          (S
            (NP (NNP Keepin) (POS '))
            (NP (PRP us))))
        (PP (IN since)
          (NP (CD eight))))
      (NP (DT this) (NN mornin) ('' '))
      (PP (IN in)
        (NP (DT the) (NN rain))))
    (. !)))

root(ROOT-0, Cheer-1)
advmod(cheer-4, O-3)
dep(Cheer-1, cheer-4)
det(watchin-9, the-5)
compound(watchin-9, Orse-7)
compound(watchin-9, Guards-8)
nmod:poss(o'er-12, watchin-9)
case(watchin-9, '-10)
compound(o'er-12, tender-11)
dep(us-13, o'er-12)
xcomp(cheer-4, us-13)
dep(us-17, Keepin-15)
case(Keepin-15, '-16)
parataxis(us-13, us-17)
case(eight-19, since-18)
nmod:since(cheer-4, eight-19)
det(mornin-21, this-20)
dobj(Cheer-1, mornin-21)
case(rain-25, in-23)
det(rain-25, the-24)
nmod:in(Cheer-1, rain-25)

(ROOT
  (NP
    (NP
      (NP (NN Stuck))
      (PP (IN in)
        (NP
          (NP (`` `) (NN eavy) (NN marchin) ('' '))
          (: -)
          (NP (NN order))
          (, ,)
          (ADJP (JJ sopped)
            (CC and)
            (JJ wringin))
          ('' '))))
    (: --)
    (NP
      (NP (NNP Sick))
      (, ,)
      (SBAR (IN before)
        (S
          (NP (PRP$ our) (NN time)
            (S
              (VP (TO to)
                (VP (VB watch)
                  (NP (`` `) (JJ er) (`` `) (NN eave) (, an) ('' '))))))
          (VP (VBP fall) (, ,) (`` `)
            (S
              (NP (NNP Ere))
              (VP (VBZ 's)
                (S
                  (NP (PRP$ your) (`` `) (JJ appy) (`` `)
                    (NX
                      (NP (NN ome))
                      (PP (IN at)
                        (NP
                          (NP (JJ last))
                          (, ,)
                          (NP (DT an)))))
                    ('' '))
                  (VP (VB stop)
                    (NP (PRP$ your) (NN singin))))))
            ('' ')))))
    (. .)))

root(ROOT-0, Stuck-1)
case(marchin-5, in-2)
compound(marchin-5, eavy-4)
nmod:in(Stuck-1, marchin-5)
dep(marchin-5, order-8)
amod(marchin-5, sopped-10)
cc(sopped-10, and-11)
amod(marchin-5, wringin-12)
conj:and(sopped-10, wringin-12)
dep(Stuck-1, Sick-15)
mark(fall-28, before-17)
nmod:poss(time-19, our-18)
nsubj(fall-28, time-19)
mark(watch-21, to-20)
acl(time-19, watch-21)
amod(eave-25, er-23)
dobj(watch-21, eave-25)
acl(Sick-15, fall-28)
nsubj('s-32, Ere-31)
ccomp(fall-28, 's-32)
nmod:poss(ome-37, your-33)
amod(ome-37, appy-35)
nsubj(stop-43, ome-37)
case(last-39, at-38)
nmod:at(ome-37, last-39)
appos(last-39, an-41)
ccomp('s-32, stop-43)
nmod:poss(singin-45, your-44)
dobj(stop-43, singin-45)

(ROOT
  (S (`` `)
    (VP (VB Alt))
    (. !)))

root(ROOT-0, Alt-2)

(ROOT
  (NP
    (NP (NN Fall))
    (PP (IN in)
      (PP (IN along)
        (NP (DT the) (NN troop-deck))))
    (. !)))

root(ROOT-0, Fall-1)
case(troop-deck-5, in-2)
case(troop-deck-5, along-3)
det(troop-deck-5, the-4)
nmod:along(Fall-1, troop-deck-5)

(ROOT
  (NP (CD Silence) (RB all) (. !)))

root(ROOT-0, Silence-1)
advmod(Silence-1, all-2)

(ROOT
  (S
    (VP (VB Cheer))
    (. !)))

root(ROOT-0, Cheer-1)

(ROOT
  (S (IN For)
    (NP (PRP we))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB live)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP
                (NP (DT no) (NN bloomin) (POS '))
                (NN victory)))))))
    (. !)))

dep(live-5, For-1)
nsubj(live-5, we-2)
nsubj:xsubj(see-7, we-2)
aux(live-5, 'll-3)
neg(live-5, never-4)
root(ROOT-0, live-5)
mark(see-7, to-6)
xcomp(live-5, see-7)
neg(bloomin-9, no-8)
nmod:poss(victory-11, bloomin-9)
case(bloomin-9, '-10)
dobj(see-7, victory-11)

(ROOT
  (S
    (VP (VB Cheer))
    (. !)))

root(ROOT-0, Cheer-1)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP we))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB live)
        (S
          (VP (TO to) (`` `)
            (VP (VB ear)
              (NP (DT the) (NN cannon) (NN roar)))))))
    (. !)))

dep(live-6, An-1)
case(An-1, '-2)
nsubj(live-6, we-3)
nsubj:xsubj(ear-9, we-3)
aux(live-6, 'll-4)
neg(live-6, never-5)
root(ROOT-0, live-6)
mark(ear-9, to-7)
xcomp(live-6, ear-9)
det(roar-12, the-10)
compound(roar-12, cannon-11)
dobj(ear-9, roar-12)

(ROOT
  (S (-LRB- -LRB-)
    (NP (PRP One))
    (VP (VBZ cheer)
      (ADJP (JJR more)))
    (. !) (-RRB- -RRB-)))

nsubj(cheer-3, One-2)
root(ROOT-0, cheer-3)
xcomp(cheer-3, more-4)

(ROOT
  (S
    (NP
      (NP (DT The) (NN jackal))
      (, an) ('' ')
      (NP
        (NP (DT the) (JJ kite) (`` `) (NNP Ave))
        (NP (DT an) (`` `) (JJ ealthy) (NN appetite)))
      (, ,)
      (NP
        (NP (NNP An) (POS '))
        (NN you)))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB see)
        (NP (PRP$ your) (NNS soldiers))
        (ADVP (DT any) (RBR more))))
    (. !)))

det(jackal-2, The-1)
nsubj(see-19, jackal-2)
det(Ave-8, the-5)
amod(Ave-8, kite-6)
dep(jackal-2, Ave-8)
det(appetite-12, an-9)
amod(appetite-12, ealthy-11)
dep(Ave-8, appetite-12)
nmod:poss(you-16, An-14)
case(An-14, '-15)
appos(jackal-2, you-16)
aux(see-19, 'll-17)
neg(see-19, never-18)
root(ROOT-0, see-19)
nmod:poss(soldiers-21, your-20)
dobj(see-19, soldiers-21)
dep(more-23, any-22)
advmod(see-19, more-23)

(ROOT
  (NP (-LRB- -LRB-)
    (NP (`` `) (NNP Ip))
    (PP (IN !))))

root(ROOT-0, Ip-3)
acl(Ip-3, !-4)

(ROOT
  (PRN
    (S
      (NP (NNP Urroar))
      (VP (VBZ !)))
    (-RRB- -RRB-)))

nsubj(!-2, Urroar-1)
root(ROOT-0, !-2)

(ROOT
  (S
    (S
      (NP (DT The)
        (NP (NN eagle))
        (, an) ('' ')
        (NP
          (NP (DT the) (NN crow))
          (NP (PRP They))))
      (VP (VBP are)
        (VP (VBN waitin) (`` ')
          (ADVP (RB ever) (RB so)))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (NN you))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB see)
        (NP (PRP$ your) (NNS soldiers))
        (ADVP (DT any) (RBR more))))
    (. !)))

det(eagle-2, The-1)
nsubjpass(waitin-9, eagle-2)
det(crow-6, the-5)
dep(eagle-2, crow-6)
dep(crow-6, They-7)
auxpass(waitin-9, are-8)
ccomp(see-19, waitin-9)
advmod(so-12, ever-11)
advmod(waitin-9, so-12)
nmod:poss(you-16, An-14)
case(An-14, '-15)
nsubj(see-19, you-16)
aux(see-19, 'll-17)
neg(see-19, never-18)
root(ROOT-0, see-19)
nmod:poss(soldiers-21, your-20)
dobj(see-19, soldiers-21)
dep(more-23, any-22)
advmod(see-19, more-23)

(ROOT
  (NP (-LRB- -LRB-)
    (NP (`` `) (NNP Ip))
    (PP (IN !))))

root(ROOT-0, Ip-3)
acl(Ip-3, !-4)

(ROOT
  (PRN
    (S
      (NP (NNP Urroar))
      (VP (VBZ !)))
    (-RRB- -RRB-)))

nsubj(!-2, Urroar-1)
root(ROOT-0, !-2)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP
      (NP (DT the) (JJ Large) (NNP Birds) (NN o) ('' ') (NN Prey))
      (SBAR
        (S
          (NP (PRP They))
          (VP (MD will)
            (VP (VB carry)
              (NP (PRP us))
              (ADVP (RB away)))))))
    (, ,)
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP you))
    (VP (MD 'll)
      (ADVP (RB never))
      (VP (VB see)
        (NP (PRP$ your) (NNS soldiers))
        (ADVP (DT any) (RBR more))))
    (. !)))

discourse(see-20, Yes-1)
det(Prey-8, the-3)
amod(Prey-8, Large-4)
compound(Prey-8, Birds-5)
compound(Prey-8, o-6)
nsubj(see-20, Prey-8)
nsubj(carry-11, They-9)
aux(carry-11, will-10)
acl:relcl(Prey-8, carry-11)
dobj(carry-11, us-12)
advmod(carry-11, away-13)
dep(see-20, An-15)
case(An-15, '-16)
nsubj(see-20, you-17)
aux(see-20, 'll-18)
neg(see-20, never-19)
root(ROOT-0, see-20)
nmod:poss(soldiers-22, your-21)
dobj(see-20, soldiers-22)
dep(more-24, any-23)
advmod(see-20, more-24)

(ROOT
  (S (`` ``)
    (NP
      (NP
        (NP (NNP SOLDIER) (NNP AN) (POS '))
        (NNP SAILOR) (NNP TOO) ('' ''))
      (SBAR
        (S
          (SBAR (IN As)
            (S
              (NP (PRP I))
              (VP (VBD was)
                (VP (VBN spittin) ('' ')
                  (PP (IN into)
                    (NP (DT the) (NNP Ditch)))
                  (PP (IN aboard)
                    (NP
                      (NP (NNP o) (POS '))
                      (NP (DT the) (NNP _) (NNP Crocodile) (NNP _))))))))
          (, ,)
          (NP (PRP I))
          (VP (VBZ seed)
            (NP (DT a) (NN man))
            (PP (IN on)
              (NP
                (NP (DT a) (NN man-o))
                ('' ') (: -)
                (NP (NN war))))))))
    (VP (VBD got)
      (PRT (RP up))
      (PP (IN in)
        (NP (DT the) (JJ Reg) (`` `) (NNS lars) ('' ') (NN style))))
    (. .) ('' ')))

compound(AN-3, SOLDIER-2)
nmod:poss(TOO-6, AN-3)
case(AN-3, '-4)
compound(TOO-6, SAILOR-5)
nsubj(got-34, TOO-6)
mark(spittin-11, As-8)
nsubjpass(spittin-11, I-9)
auxpass(spittin-11, was-10)
advcl(seed-25, spittin-11)
case(Ditch-15, into-13)
det(Ditch-15, the-14)
nmod:into(spittin-11, Ditch-15)
case(o-17, aboard-16)
nmod:'(spittin-11, o-17)
case(o-17, '-18)
det(_-22, the-19)
compound(_-22, _-20)
compound(_-22, Crocodile-21)
dep(o-17, _-22)
nsubj(seed-25, I-24)
acl:relcl(TOO-6, seed-25)
det(man-27, a-26)
dobj(seed-25, man-27)
case(man-o-30, on-28)
det(man-o-30, a-29)
nmod:on(seed-25, man-o-30)
dep(man-o-30, war-33)
root(ROOT-0, got-34)
compound:prt(got-34, up-35)
case(style-42, in-36)
det(style-42, the-37)
amod(style-42, Reg-38)
compound(style-42, lars-40)
nmod:in(got-34, style-42)

(ROOT
  (S
    (S
      (NP (NNP E))
      (VP (VBD was)
        (VP (VBN scrapin) ('' ')
          (NP (DT the) (NN paint))
          (PP (IN from)
            (PP (RB off) (IN of)
              (NP
                (NP (`` `)
                  (NP (NN er))
                  (NP (NNS plates))
                  (, ,)
                  (NP (DT an))
                  ('' '))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP sez)
                      (S
                        (VP (TO to) (`` `)
                          (VP (VB im)))))))))))))
    (, ,) ('' '') (`` `)
    (NP (NNP Oo))
    (VP (VBP are)
      (NP (PRP you)))
    (. ?) ('' '')))

nsubjpass(scrapin-3, E-1)
auxpass(scrapin-3, was-2)
ccomp(you-26, scrapin-3)
det(paint-6, the-5)
dobj(scrapin-3, paint-6)
case(er-11, from-7)
case(er-11, off-8)
mwe(off-8, of-9)
nmod:off_of(scrapin-3, er-11)
dep(er-11, plates-12)
appos(er-11, an-14)
nsubj(sez-17, I-16)
nsubj:xsubj(im-20, I-16)
acl:relcl(er-11, sez-17)
mark(im-20, to-18)
xcomp(sez-17, im-20)
nsubj(you-26, Oo-24)
cop(you-26, are-25)
root(ROOT-0, you-26)

(ROOT
  (S
    (S
      (S
        (VP (VBD Sez) (`` `)
          (X (SYM e))))
      (, ,) (`` ``)
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (DT a) (JJ Jolly))))
    (: --) (`` `)
    (S
      (NP (NNP Er) (NNP Majesty))
      (VP (VBZ 's)
        (ADJP (JJ Jolly))
        (: --)
        (NP
          (NP (NN soldier))
          (, an) ('' ')
          (VP (VBN sailor)
            (ADVP (RB too))))))
    (. !) ('' '')))

ccomp(Jolly-9, Sez-1)
dep(Sez-1, e-3)
nsubj(Jolly-9, I-6)
cop(Jolly-9, 'm-7)
det(Jolly-9, a-8)
root(ROOT-0, Jolly-9)
compound(Majesty-13, Er-12)
nsubj(Jolly-15, Majesty-13)
cop(Jolly-15, 's-14)
parataxis(Jolly-9, Jolly-15)
parataxis(Jolly-15, soldier-17)
acl(soldier-17, sailor-20)
advmod(sailor-20, too-21)

(ROOT
  (S
    (S
      (NP (RB Now))
      (`` `)
      (VP (VBZ is)
        (NP
          (NP (NN work))
          (SBAR
            (S
              (VP (VBZ begins)
                (PP (IN by)
                  (S
                    (S
                      (NP (NNP Gawd))
                      (VP (VBZ knows)
                        (NP (WRB when))))
                    (, ,)
                    (CC and)
                    (`` `)
                    (S
                      (VP (VBZ is)
                        (NP
                          (NP (NN work))
                          (SBAR
                            (S
                              (VP (VBZ is)
                                (ADVP (RB never))
                                (PP (IN through))))))))))))))))
    (: ;) ('' ')
    (PRN
      (S
        (NP (NNP E))
        (VP (VBZ is) (RB n't)
          (NP
            (NP (CD one) (NN o))
            ('' ')
            (SBAR
              (S
                (NP (DT the) (NN reg))
                (VP (`` `) (VBP lar)
                  (NP (NNP Line)))))))))
    (, ,)
    (S
      (NP
        (NP (NNP nor) (POS '))
        (NN e))
      (VP (VBZ is) (RB n't)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (NN crew))))))
    (. .)))

nsubj(work-4, Now-1)
cop(work-4, is-3)
root(ROOT-0, work-4)
acl:relcl(work-4, begins-5)
mark(knows-8, by-6)
nsubj(knows-8, Gawd-7)
advcl(begins-5, knows-8)
dobj(knows-8, when-9)
cc(knows-8, and-11)
cop(work-14, is-13)
advcl(begins-5, work-14)
conj:and(knows-8, work-14)
cop(through-17, is-15)
neg(through-17, never-16)
acl:relcl(work-14, through-17)
nsubj(o-24, E-20)
cop(o-24, is-21)
neg(o-24, n't-22)
nummod(o-24, one-23)
dep(work-4, o-24)
det(reg-27, the-26)
nsubj(lar-29, reg-27)
acl:relcl(o-24, lar-29)
dobj(lar-29, Line-30)
nmod:poss(e-34, nor-32)
case(nor-32, '-33)
nsubj(one-37, e-34)
cop(one-37, is-35)
neg(one-37, n't-36)
dep(work-4, one-37)
case(crew-40, of-38)
det(crew-40, the-39)
nmod:of(one-37, crew-40)

(ROOT
  (S
    (NP (`` `)
      (NP
        (NP (NNP E) (POS 's))
        (NP
          (NP (DT a) (NN kind))
          (PP (IN of)
            (NP (DT a) (JJ giddy) (NN harumfrodite)))))
      (: --)
      (NP (NN soldier) (DT an))
      ('' '))
    (VP (VBZ sailor)
      (ADVP (RB too)))
    (. !)))

nsubj(sailor-14, E-2)
case(E-2, 's-3)
det(kind-5, a-4)
dep(E-2, kind-5)
case(harumfrodite-9, of-6)
det(harumfrodite-9, a-7)
amod(harumfrodite-9, giddy-8)
nmod:of(kind-5, harumfrodite-9)
dep(E-2, soldier-11)
dep(soldier-11, an-12)
root(ROOT-0, sailor-14)
advmod(sailor-14, too-15)

(ROOT
  (S
    (NP
      (NP (NNP An) (POS '))
      (PP (IN after)
        (NP (PRP I))))
    (VP (VBD met) (`` `)
      (SINV
        (VP (VBP im)
          (NP (DT all))
          (PRT (RP over)))
        (NP
          (NP (DT the) (NN world))
          (, ,)
          (NP
            (NP (NN a-doin) (POS '))
            (NP
              (NP (DT all) (NNS kinds))
              (PP (IN of)
                (NP (NNS things))))))
        (, ,)
        (PP (IN Like)
          (NP
            (NP
              (NP (NN landin) (POS '))
              (`` `)
              (ADJP (JJ isself)
                (PP (IN with)
                  (NP
                    (NP (DT a) (NNP Gatlin) (POS '))
                    (NN gun)
                    (S
                      (VP (TO to)
                        (VP (VB talk)
                          (PP (TO to)
                            (NP
                              (NP (PRP them))
                              (`` `)
                              (NP (NN eathen) (NNS kings))
                              (: ;)))))))))
              ('' ') (NN E))
            (VP (VBZ sleeps)
              (PRT (RP in))
              (NP
                (NP (DT an) (`` `) (NN ammick))
                (PP (RB instead) (IN of)
                  (NP
                    (NP (DT a) (NN cot))
                    (, ,)
                    (NP (DT an)))))
              ('' ')))))
      ('' ')
      (PP
        (X
          (X (SYM e))
          (NP
            (NP (NNS drills))
            (PP (IN with)
              (NP (DT the) (NN deck)))))
        (IN on)
        (NP
          (NP (DT a) (NN slew))
          (, ,)
          (NP
            (NP
              (NP (NNP An) (POS '))
              ('' ') (NN e))
            (NP (NNS sweats)))))
      (PP (IN like)
        (NP
          (NP (DT a) (NN Jolly))
          (: --) (`` `)
          (S
            (NP
              (NP
                (NP (NNP Er) (NNP Majesty) (POS 's))
                (NN Jolly))
              (: --)
              (NP (NN soldier))
              (, an) ('' '))
            (VP (VBG sailor)
              (ADVP (RB too)))))))
    (. !)))

nsubj(met-5, An-1)
case(An-1, '-2)
case(I-4, after-3)
nmod:after(An-1, I-4)
root(ROOT-0, met-5)
dep(met-5, im-7)
dobj(im-7, all-8)
compound:prt(im-7, over-9)
det(world-11, the-10)
nsubj(im-7, world-11)
appos(world-11, a-doin-13)
case(a-doin-13, '-14)
det(kinds-16, all-15)
dep(a-doin-13, kinds-16)
case(things-18, of-17)
nmod:of(kinds-16, things-18)
case(E-39, Like-20)
nmod:poss(E-39, landin-21)
case(landin-21, '-22)
amod(E-39, isself-24)
case(gun-29, with-25)
det(Gatlin-27, a-26)
nmod:poss(gun-29, Gatlin-27)
case(Gatlin-27, '-28)
nmod:with(isself-24, gun-29)
mark(talk-31, to-30)
acl(gun-29, talk-31)
case(them-33, to-32)
nmod:to(talk-31, them-33)
compound(kings-36, eathen-35)
dep(them-33, kings-36)
nmod:like(im-7, E-39)
dep(E-39, sleeps-40)
compound:prt(sleeps-40, in-41)
det(ammick-44, an-42)
dobj(sleeps-40, ammick-44)
case(cot-48, instead-45)
mwe(instead-45, of-46)
det(cot-48, a-47)
nmod:instead_of(ammick-44, cot-48)
appos(cot-48, an-50)
dep(drills-54, e-53)
dep(slew-60, drills-54)
case(deck-57, with-55)
det(deck-57, the-56)
nmod:with(drills-54, deck-57)
case(slew-60, on-58)
det(slew-60, a-59)
nmod:on(met-5, slew-60)
nmod:poss(e-65, An-62)
case(An-62, '-63)
appos(slew-60, e-65)
dep(e-65, sweats-66)
case(Jolly-69, like-67)
det(Jolly-69, a-68)
nmod:like(met-5, Jolly-69)
compound(Majesty-73, Er-72)
nmod:poss(Jolly-75, Majesty-73)
case(Majesty-73, 's-74)
nsubj(sailor-80, Jolly-75)
dep(Jolly-75, soldier-77)
dep(Jolly-69, sailor-80)
advmod(sailor-80, too-81)

(ROOT
  (S
    (SBAR (IN For)
      (S
        (NP (EX there))
        (VP (VBZ is) (RB n't)
          (NP
            (NP (DT a) (NN job))
            (PP (IN on)
              (NP
                (NP (DT the) (JJ top) (NN o) (POS '))
                (DT the) (NN earth)))
            (SBAR
              (S
                (NP (DT the) (NN beggar))
                (VP
                  (VP (VBP do) (RB n't)
                    (VP (VB know)))
                  (, ,)
                  (CC nor)
                  (VP (VBP do)))))))))
    (PRN (: --)
      (S
        (NP (PRP You))
        (VP (MD can)
          (VP (VB leave) (`` `)
            (NP
              (NP (NN im))
              (PP (IN at)
                (NP (NN night))))
            (PP (IN on)
              (NP
                (NP (DT a) (JJ bald) (NN man) (POS 's))
                (`` `) (NN ead)))
            (, ,)
            (PP (TO to)
              (NP
                (NP (NN paddle))
                (`` `)
                (PP (VBZ is)
                  (NP (JJ own) (NN canoe))))))))
      (: --))
    (`` `)
    (NP (NNP E))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (DT a) (NN sort))
          (PP (IN of)
            (NP
              (NP (DT a) (NN bloomin) (POS '))
              (NN cosmopolouse))))
        (: --)
        (NP
          (NP (NN soldier))
          (, an) ('' ')
          (VP (VBG sailor)
            (ADVP (RB too))))))
    (. .)))

mark(is-3, For-1)
expl(is-3, there-2)
advcl('s-47, is-3)
neg(is-3, n't-4)
det(job-6, a-5)
nsubj(is-3, job-6)
case(earth-13, on-7)
det(o-10, the-8)
amod(o-10, top-9)
nmod:poss(earth-13, o-10)
case(o-10, '-11)
det(earth-13, the-12)
nmod:on(job-6, earth-13)
det(beggar-15, the-14)
nsubj(know-18, beggar-15)
nsubj(do-21, beggar-15)
aux(know-18, do-16)
neg(know-18, n't-17)
acl:relcl(job-6, know-18)
cc(know-18, nor-20)
acl:relcl(job-6, do-21)
conj:nor(know-18, do-21)
nsubj(leave-25, You-23)
aux(leave-25, can-24)
parataxis('s-47, leave-25)
dobj(leave-25, im-27)
case(night-29, at-28)
nmod:at(im-27, night-29)
case(ead-36, on-30)
det(man-33, a-31)
amod(man-33, bald-32)
nmod:poss(ead-36, man-33)
case(man-33, 's-34)
nmod:on(leave-25, ead-36)
case(paddle-39, to-38)
nmod:to(leave-25, paddle-39)
dep(canoe-43, is-41)
amod(canoe-43, own-42)
nmod(paddle-39, canoe-43)
nsubj('s-47, E-46)
root(ROOT-0, 's-47)
det(sort-49, a-48)
dep('s-47, sort-49)
case(cosmopolouse-54, of-50)
det(bloomin-52, a-51)
nmod:poss(cosmopolouse-54, bloomin-52)
case(bloomin-52, '-53)
nmod:of(sort-49, cosmopolouse-54)
dep(sort-49, soldier-56)
acl(soldier-56, sailor-59)
advmod(sailor-59, too-60)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN fought)
          (NP (PRP 'em))
          (PP (IN in)
            (NP (NN trooper)))
          (PRN (, ,)
            (S
              (NP (PRP we))
              (VP (VBP 've)
                (VP
                  (VP (VBN fought)
                    (NP (PRP 'em))
                    (PP (IN in)
                      (NP (NN dock))))
                  (, ,)
                  (CC and)
                  (VP
                    (ADJP (JJ drunk)
                      (PP (IN with)
                        (NP (PRP 'em))))
                    (PP (IN in)
                      (NP (NNS betweens)))))))
            (, ,))
          (SBAR
            (WHADVP (WRB When))
            (S
              (NP (PRP they))
              (VP (VBD called)
                (NP (PRP us))
                (SBAR
                  (S
                    (NP (DT the) (NN seasick))
                    (VP (VBP scull)
                      (NP (`` `)
                        (NP
                          (NP (NNS ry-maids))
                          (, ,)
                          (NP (DT an)))
                        ('' ')
                        (SBAR
                          (S
                            (NP (PRP we))
                            (VP (VBD called)
                              (S
                                (NP (PRP 'em))
                                (NP (DT the) (NNP Ass) (NNPS Marines))))))))))))))))
    (: ;)
    (S (CC But)
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBD was)
            (ADVP
              (ADVP (IN down)
                (PP (IN for)
                  (NP (DT a) (JJ double) (NN fatigue)))
                (, ,)
                (PP (IN from)
                  (NP (NNP Woolwich))))
              (PP (TO to)
                (NP (NNP Bernardmyo)))))))
      (, ,)
      (NP (PRP We))
      (VP (VBD sent)
        (PP (IN for)
          (NP (DT the) (NNPS Jollies)))
        (: --) (`` `)
        (S
          (NP
            (NP
              (NP (NNP Er) (NNP Majesty) (POS 's))
              (NNS Jollies))
            (: --)
            (NP (NN soldier))
            (, an) ('' '))
          (VP (VBG sailor)
            (ADVP (RB too))))))
    (. !)))

nsubj(fought-3, We-1)
aux(fought-3, 've-2)
root(ROOT-0, fought-3)
dobj(fought-3, 'em-4)
case(trooper-6, in-5)
nmod:in(fought-3, trooper-6)
nsubj(fought-10, we-8)
nsubj(drunk-16, we-8)
aux(fought-10, 've-9)
parataxis(fought-3, fought-10)
dobj(fought-10, 'em-11)
case(dock-13, in-12)
nmod:in(fought-10, dock-13)
cc(fought-10, and-15)
parataxis(fought-3, drunk-16)
conj:and(fought-10, drunk-16)
case('em-18, with-17)
nmod:with(drunk-16, 'em-18)
case(betweens-20, in-19)
nmod:in(drunk-16, betweens-20)
advmod(called-24, When-22)
nsubj(called-24, they-23)
advcl(fought-3, called-24)
dobj(called-24, us-25)
det(seasick-27, the-26)
nsubj(scull-28, seasick-27)
dep(called-24, scull-28)
dobj(scull-28, ry-maids-30)
appos(ry-maids-30, an-32)
nsubj(called-35, we-34)
acl:relcl(ry-maids-30, called-35)
nsubj(Marines-39, 'em-36)
det(Marines-39, the-37)
compound(Marines-39, Ass-38)
xcomp(called-35, Marines-39)
cc(sent-58, But-41)
advmod(was-45, when-43)
nsubj(was-45, we-44)
advcl(sent-58, was-45)
advmod(was-45, down-46)
case(fatigue-50, for-47)
det(fatigue-50, a-48)
amod(fatigue-50, double-49)
nmod:for(down-46, fatigue-50)
case(Woolwich-53, from-52)
nmod:from(down-46, Woolwich-53)
case(Bernardmyo-55, to-54)
nmod:to(down-46, Bernardmyo-55)
nsubj(sent-58, We-57)
parataxis(fought-3, sent-58)
case(Jollies-61, for-59)
det(Jollies-61, the-60)
nmod:for(sent-58, Jollies-61)
compound(Majesty-65, Er-64)
nmod:poss(Jollies-67, Majesty-65)
case(Majesty-65, 's-66)
nsubj(sailor-72, Jollies-67)
dep(Jollies-67, soldier-69)
dep(sent-58, sailor-72)
advmod(sailor-72, too-73)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP think)
      (PP (IN for)
        (NP
          (NP (NNP 'em) (NNS selves) (, ,))
          (, an) ('' ')
          (PRN
            (S
              (S
                (S
                  (NP (PRP they))
                  (VP (VBP steal)
                    (SBAR (IN for)
                      (S
                        (NP (PRP 'em))
                        (VP (VBZ selves))))))
                (, ,)
                (CC and)
                (S
                  (NP (PRP they))
                  (ADVP (RB never))
                  (VP (VBP ask)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ 's)
                          (S
                            (VP (TO to)
                              (VP (VB do))))))))))
              (, ,)
              (CC But)
              (S
                (NP (PRP they))
                (VP (VBP 're)
                  (VP (VBN camped))))))
          (, an) ('' ')
          (VP (VBN fed)
            (NP
              (NP (DT an))
              ('' ')
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP 're)
                    (ADVP (RB up)))))
              (, an) ('' ')
              (ADJP (VBN fed)
                (PP (IN before)
                  (NP
                    (NP (PRP$ our) (NN bugle) (POS 's))
                    (NN blew)))))))))
    (. .)))

nsubj(think-2, They-1)
root(ROOT-0, think-2)
case(selves-5, for-3)
compound(selves-5, 'em-4)
nmod:for(think-2, selves-5)
nsubj(steal-10, they-9)
parataxis(fed-30, steal-10)
mark(selves-13, for-11)
nsubj(selves-13, 'em-12)
advcl(steal-10, selves-13)
cc(steal-10, and-15)
nsubj(ask-18, they-16)
neg(ask-18, never-17)
conj:and(steal-10, ask-18)
parataxis(fed-30, ask-18)
nsubj('s-20, what-19)
nsubj:xsubj(do-22, what-19)
ccomp(ask-18, 's-20)
mark(do-22, to-21)
xcomp('s-20, do-22)
cc(steal-10, But-24)
nsubjpass(camped-27, they-25)
auxpass(camped-27, 're-26)
conj:and(steal-10, camped-27)
parataxis(fed-30, camped-27)
acl(selves-5, fed-30)
dobj(fed-30, an-31)
nsubj('re-34, they-33)
acl:relcl(an-31, 're-34)
advmod('re-34, up-35)
amod(an-31, fed-38)
case(blew-43, before-39)
nmod:poss(bugle-41, our-40)
nmod:poss(blew-43, bugle-41)
case(bugle-41, 's-42)
nmod:before(fed-38, blew-43)

(ROOT
  (INTJ (UH Ho) (. !)))

root(ROOT-0, Ho-1)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP ai) (RB n't)
      (NP
        (NP
          (NP (DT no) (NN limpin) (POS '))
          (NNS procrastitutes))
        (: --)
        (NP
          (NP (NN soldier))
          (, an) ('' ')
          (VP (VBG sailor)
            (ADVP (RB too))))))
    (. .)))

nsubj(procrastitutes-7, they-1)
cop(procrastitutes-7, ai-2)
neg(procrastitutes-7, n't-3)
neg(limpin-5, no-4)
nmod:poss(procrastitutes-7, limpin-5)
case(limpin-5, '-6)
root(ROOT-0, procrastitutes-7)
dep(procrastitutes-7, soldier-9)
acl(soldier-9, sailor-12)
advmod(sailor-12, too-13)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP are)
                (VP (VBN fond)
                  (PP (IN of)
                    (NP
                      (NP (DT an) (`` `) (NN arness-cut))
                      (, ,)
                      (CC or)
                      (NP (`` `)
                        (NP (NN ootin))
                        ('' ')
                        (PP (IN in)
                          (NP (NNS barrick-yards)))))))))))))
    (, ,)
    (CC Or)
    (S
      (VP (VBN startin) ('' ')
        (NP (DT a) (NNP Board) (NNP School) (NN mutiny))
        (PP (IN along)
          (NP
            (NP (NNP o) (POS '))
            (NP (DT the) (NNP Onion) (NNPS Guards))))))
    (: ;)
    (S (CC But)
      (ADVP (RB once)
        (PP (IN in)
          (NP (DT a) (NN while))))
      (NP (PRP we))
      (VP (MD can)
        (VP (VB finish)
          (PP (IN in)
            (NP
              (NP (NN style))
              (PP (IN for)
                (NP
                  (NP (DT the) (NNS ends))
                  (PP (IN of)
                    (NP (DT the) (NN earth)))))))
          (PP (TO to)
            (NP
              (NP (NN view))
              (, ,)
              (NP
                (NP (DT The) (JJ same))
                (PP (IN as)
                  (NP (DT the) (NNPS Jollies)))))))))
    (: --) (`` `)
    (S
      (NP
        (NP
          (NP (NNP Er) (NNP Majesty) (POS 's))
          (NNS Jollies))
        (: --)
        (NP (NN soldier))
        (, an) ('' '))
      (VP (VBZ sailor)
        (ADVP (RB too))))
    (. !)))

nsubj(say-3, You-1)
nsubj(startin-20, You-1)
aux(say-3, may-2)
root(ROOT-0, say-3)
nsubjpass(fond-6, we-4)
auxpass(fond-6, are-5)
ccomp(say-3, fond-6)
case(arness-cut-10, of-7)
det(arness-cut-10, an-8)
nmod:of(fond-6, arness-cut-10)
cc(arness-cut-10, or-12)
nmod:of(fond-6, ootin-14)
conj:or(arness-cut-10, ootin-14)
case(barrick-yards-17, in-16)
nmod:in(ootin-14, barrick-yards-17)
cc(say-3, Or-19)
conj:or(say-3, startin-20)
det(mutiny-25, a-22)
compound(mutiny-25, Board-23)
compound(mutiny-25, School-24)
dobj(startin-20, mutiny-25)
case(o-27, along-26)
nmod:'(startin-20, o-27)
case(o-27, '-28)
det(Guards-31, the-29)
compound(Guards-31, Onion-30)
dep(o-27, Guards-31)
cc(finish-40, But-33)
advmod(finish-40, once-34)
case(while-37, in-35)
det(while-37, a-36)
nmod:in(once-34, while-37)
nsubj(finish-40, we-38)
aux(finish-40, can-39)
conj:or(say-3, finish-40)
case(style-42, in-41)
nmod:in(finish-40, style-42)
case(ends-45, for-43)
det(ends-45, the-44)
nmod:for(style-42, ends-45)
case(earth-48, of-46)
det(earth-48, the-47)
nmod:of(ends-45, earth-48)
case(view-50, to-49)
nmod:to(finish-40, view-50)
det(same-53, The-52)
appos(view-50, same-53)
case(Jollies-56, as-54)
det(Jollies-56, the-55)
nmod:as(same-53, Jollies-56)
compound(Majesty-60, Er-59)
nmod:poss(Jollies-62, Majesty-60)
case(Majesty-60, 's-61)
nsubj(sailor-67, Jollies-62)
dep(Jollies-62, soldier-64)
conj:or(say-3, sailor-67)
advmod(sailor-67, too-68)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP come)
        (PP (IN of)
          (NP (PRP$ our) (NN lot)))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBD was)
        (NP
          (NP (NNS brothers))
          (PP (TO to)
            (NP (PRP us))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBD was)
        (NP
          (NP (NNS beggars))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD 'd)
                (VP (VBN met)
                  (NP (DT an)
                    (S
                      (NP (POS '))
                      (VP (VBD knew)))))))))))
    (: ;)
    (S
      (INTJ (UH Yes))
      (, ,)
      (S
        (VP (VBN barrin) ('' ')
          (NP (DT an) (NN inch))
          (PP (IN in)
            (NP
              (NP (DT the) (NN chest))
              (, an) ('' ')
              (NP (DT the) (NN arm))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD was)
        (ADVP (RB doubles))
        (VP (VBG o) ('' ')
          (NP (PRP me) (DT an))
          ('' ')
          (NP (PRP you)))))
    (: ;)
    (SBAR (IN For)
      (S
        (NP (PRP they))
        (VP (VBD were) (RB n't)
          (NP
            (NP (DT no) (JJ special) (NNS chrysanthemums))
            (: --)
            (NP
              (NP (NN soldier))
              (, an) ('' ')
              (VP (VBG sailor)
                (ADVP (RB too))))))))
    (. !)))

nsubj(come-2, They-1)
root(ROOT-0, come-2)
case(lot-5, of-3)
nmod:poss(lot-5, our-4)
nmod:of(come-2, lot-5)
nsubj(brothers-9, they-7)
cop(brothers-9, was-8)
dep(come-2, brothers-9)
case(us-11, to-10)
nmod:to(brothers-9, us-11)
nsubj(beggars-15, they-13)
cop(beggars-15, was-14)
parataxis(come-2, beggars-15)
nsubj(met-18, we-16)
aux(met-18, 'd-17)
acl:relcl(beggars-15, met-18)
dobj(met-18, an-19)
nsubj(knew-21, '-20)
dep(an-19, knew-21)
discourse(o-40, Yes-23)
advcl(o-40, barrin-25)
det(inch-28, an-27)
dobj(barrin-25, inch-28)
case(chest-31, in-29)
det(chest-31, the-30)
nmod:in(barrin-25, chest-31)
det(arm-35, the-34)
dep(chest-31, arm-35)
nsubj(o-40, they-37)
aux(o-40, was-38)
advmod(o-40, doubles-39)
parataxis(come-2, o-40)
dobj(o-40, me-42)
dep(me-42, an-43)
dobj(o-40, you-45)
mark(chrysanthemums-53, For-47)
nsubj(chrysanthemums-53, they-48)
cop(chrysanthemums-53, were-49)
neg(chrysanthemums-53, n't-50)
neg(chrysanthemums-53, no-51)
amod(chrysanthemums-53, special-52)
parataxis(come-2, chrysanthemums-53)
dep(chrysanthemums-53, soldier-55)
acl(soldier-55, sailor-58)
advmod(sailor-58, too-59)

(ROOT
  (S
    (S
      (NP
        (S
          (VP (TO To)
            (VP (VB take)
              (NP (PRP$ your) (NN chance))
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ thick))
                  (PP (IN of)
                    (NP (DT a) (NN rush))))))))
        (, ,)
        (RRC
          (PP (IN with)
            (NP (NN firing)))
          (PP
            (ADVP (DT all))
            (IN about)))
        (, ,))
      (VP (VBZ Is)
        (ADVP (NN nothing))
        (ADJP (RB so) (JJ bad))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VB 've)
              (S
                (VP (VB cover)
                  (S
                    (VP (TO to)
                      (VP (`` `) (VB and) (, ,)
                        (ADVP (DT an))
                        ('' ')
                        (NP (NN leave) (DT an)))))))
              ('' ')
              (S
                (ADJP (JJ likin) ('' ')
                  (S
                    (VP (TO to)
                      (VP (VB shout)))))))))))
    (: ;)
    (CC But)
    (S
      (S
        (VP (TO to)
          (VP (VB stand)
            (NP (DT an)
              (S
                (NP (POS '))
                (VP (VBP be)
                  (ADVP (RB still))
                  (PP (TO to)
                    (NP (DT the) (JJ _) (JJ Birken) (`` `) (NN ead) (CD _) (NN drill)))))))))
      (VP (VBZ is)
        (NP (DT a)
          (ADJP (RB damn) (JJ tough))
          (NN bullet)
          (S
            (VP (TO to)
              (VP
                (VP (VB chew))
                (, ,)
                (NP
                  (NP (NNP An))
                  ('' ')
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBN done)
                        (NP
                          (NP
                            (NP (PRP it))
                            (, ,)
                            (NP (DT the) (NNPS Jollies)))
                          (: --) (`` `)
                          (NP
                            (NP (NNP Er) (NNP Majesty) (POS 's))
                            (NNS Jollies))
                          (: --))
                        (ADVP (RB soldier)))))
                  (, an) ('' ')
                  (VP (VBG sailor)
                    (ADVP (RB too))))))))))
    (. !)))

mark(take-2, To-1)
nsubj(bad-20, take-2)
nmod:poss(chance-4, your-3)
dobj(take-2, chance-4)
case(thick-7, in-5)
det(thick-7, the-6)
nmod:in(take-2, thick-7)
case(rush-10, of-8)
det(rush-10, a-9)
nmod:of(thick-7, rush-10)
case(firing-13, with-12)
nmod:with(all-14, firing-13)
acl:relcl(take-2, all-14)
case(all-14, about-15)
cop(bad-20, Is-17)
advmod(bad-20, nothing-18)
advmod(bad-20, so-19)
root(ROOT-0, bad-20)
advmod('ve-23, when-21)
nsubj('ve-23, you-22)
advcl(bad-20, 've-23)
ccomp('ve-23, cover-24)
mark(and-27, to-25)
xcomp(cover-24, and-27)
advmod(and-27, an-29)
dobj(and-27, leave-31)
dep(leave-31, an-32)
xcomp('ve-23, likin-34)
mark(shout-37, to-36)
xcomp(likin-34, shout-37)
cc(bad-20, But-39)
mark(stand-41, to-40)
csubj(bullet-58, stand-41)
dobj(stand-41, an-42)
nsubj(drill-53, '-43)
cop(drill-53, be-44)
advmod(drill-53, still-45)
case(drill-53, to-46)
det(drill-53, the-47)
amod(drill-53, _-48)
amod(drill-53, Birken-49)
compound(drill-53, ead-51)
nummod(drill-53, _-52)
dep(an-42, drill-53)
cop(bullet-58, is-54)
det(bullet-58, a-55)
advmod(tough-57, damn-56)
amod(bullet-58, tough-57)
conj:but(bad-20, bullet-58)
mark(chew-60, to-59)
acl(bullet-58, chew-60)
dobj(chew-60, An-62)
nsubj(done-65, they-64)
acl:relcl(An-62, done-65)
dobj(done-65, it-66)
det(Jollies-69, the-68)
appos(it-66, Jollies-69)
compound(Majesty-73, Er-72)
nmod:poss(Jollies-75, Majesty-73)
case(Majesty-73, 's-74)
dep(it-66, Jollies-75)
advmod(done-65, soldier-77)
acl(An-62, sailor-80)
advmod(sailor-80, too-81)

(ROOT
  (S
    (NP (PRP$ Their) (NN work))
    (VP (VBD was)
      (VP (VBN done)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP it))
            (`` `)
            (NP
              (NP
                (NP
                  (NP (NN ad))
                  (VP (RB n't) (VBN begun)))
                (: ;)
                (S
                  (S
                    (NP (PRP they))
                    (VP (VBD was)
                      (NP
                        (NP
                          (NP (JJR younger))
                          (CC nor)
                          (NP (PRP me)))
                        (, an) ('' ')
                        (NP
                          (NP (PRP you))
                          (: ;)
                          (NP
                            (NP (PRP$ Their) (NN choice))
                            (SBAR
                              (S
                                (NP (PRP it))
                                (VP (VBD was)
                                  (ADJP (JJ plain)
                                    (PP (IN between)
                                      (NP (NN drownin) (POS '))))
                                  (PP (IN in)
                                    (NP (`` `)
                                      (NP (NNS eaps))
                                      (, an) ('' ')
                                      (NP
                                        (NP (NN bein) (POS '))
                                        (NN mopped))))
                                  (PP (IN by)
                                    (NP (DT the) (NN screw)))))))))))
                  (, ,) (IN So)
                  (S
                    (NP (PRP they))
                    (VP (VBD stood)))))
              (NP (DT an)))
            ('' ')
            (VP (VBD was)
              (ADVP (RB still))
              (PP (TO to)
                (NP
                  (NP (DT the) (NNP _) (NNP Birken) (`` `) (NN ead) (NN _) (NN drill) (, ,) (NN soldier) (, an) ('' '))
                  (ADVP
                    (NP (CD sailor))
                    (RB too)))))))))
    (. !)))

nmod:poss(work-2, Their-1)
nsubjpass(done-4, work-2)
auxpass(done-4, was-3)
root(ROOT-0, done-4)
advmod(soldier-57, when-5)
nsubj(soldier-57, it-6)
nsubj(soldier-57, ad-8)
neg(begun-10, n't-9)
acl(ad-8, begun-10)
nsubj(younger-14, they-12)
cop(younger-14, was-13)
dep(ad-8, younger-14)
cc(younger-14, nor-15)
dep(ad-8, me-16)
conj:nor(younger-14, me-16)
dep(younger-14, you-19)
nmod:poss(choice-22, Their-21)
dep(you-19, choice-22)
nsubj(plain-25, it-23)
cop(plain-25, was-24)
acl:relcl(choice-22, plain-25)
case(drownin-27, between-26)
nmod:'(plain-25, drownin-27)
case(drownin-27, '-28)
case(eaps-31, in-29)
nmod:in(plain-25, eaps-31)
nmod:poss(mopped-36, bein-34)
case(bein-34, '-35)
dep(eaps-31, mopped-36)
case(screw-39, by-37)
det(screw-39, the-38)
nmod:by(plain-25, screw-39)
dep(younger-14, So-41)
nsubj(stood-43, they-42)
parataxis(younger-14, stood-43)
dep(ad-8, an-44)
cop(soldier-57, was-46)
advmod(soldier-57, still-47)
case(soldier-57, to-48)
det(soldier-57, the-49)
compound(soldier-57, _-50)
compound(soldier-57, Birken-51)
compound(soldier-57, ead-53)
compound(soldier-57, _-54)
compound(soldier-57, drill-55)
advcl(done-4, soldier-57)
nmod:npmod(too-61, sailor-60)
advmod(soldier-57, too-61)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (NP
          (NP (JJS most))
          (PP (IN of)
            (NP (PRP us) (NNS liars))))))
    (PRN (, ,)
      (S
        (NP (PRP we))
        (VP (VBP 're)
          (NP (`` `)
            (NP
              (NP (NN arf))
              (PP (IN of)
                (NP
                  (NP (PRP us) (NNS thieves))
                  (, ,)
                  (NP (DT an)))))
            ('' ')
            (SBAR
              (S
                (NP (DT the) (NN rest))
                (VP (VBP are)
                  (PP (IN as)
                    (NP (NN rank)))))))
          (SBAR (IN as)
            (S
              (VP (MD can)
                (VP (VB be)))))))
      (, ,))
    (CC But)
    (S
      (ADVP (RB once))
      (PP (IN in)
        (NP (DT a) (NN while)))
      (NP (PRP we))
      (VP (MD can)
        (VP (VB finish)
          (PP (IN in)
            (NP
              (NP (NN style))
              (PRN (-LRB- -LRB-)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP I))
                    (`` `)
                    (VP (VBP ope)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (MD wo) (RB n't)
                            (VP (`` `) (VB appen)
                              (PP (TO to)
                                (NP (PRP me))))))))))
                (-RRB- -RRB-)))))))
    (. .)))

nsubj(most-3, We-1)
cop(most-3, 're-2)
root(ROOT-0, most-3)
case(liars-6, of-4)
dep(liars-6, us-5)
nmod:of(most-3, liars-6)
nsubj(arf-11, we-8)
cop(arf-11, 're-9)
dep(most-3, arf-11)
case(thieves-14, of-12)
dep(thieves-14, us-13)
nmod:of(arf-11, thieves-14)
appos(thieves-14, an-16)
det(rest-19, the-18)
nsubj(rank-22, rest-19)
cop(rank-22, are-20)
case(rank-22, as-21)
acl:relcl(arf-11, rank-22)
mark(be-25, as-23)
aux(be-25, can-24)
advcl(arf-11, be-25)
cc(most-3, But-27)
advmod(finish-34, once-28)
case(while-31, in-29)
det(while-31, a-30)
nmod:in(finish-34, while-31)
nsubj(finish-34, we-32)
aux(finish-34, can-33)
conj:but(most-3, finish-34)
case(style-36, in-35)
nmod:in(finish-34, style-36)
dobj(ope-41, which-38)
nsubj(ope-41, I-39)
dep(style-36, ope-41)
nsubj(appen-46, it-42)
aux(appen-46, wo-43)
neg(appen-46, n't-44)
ccomp(ope-41, appen-46)
case(me-48, to-47)
nmod:to(appen-46, me-48)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ makes)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP think)
            (ADVP (RBR better))
            (VP (VB o) ('' ')
              (NP
                (NP (PRP you))
                (, an) ('' ')
                (NP
                  (NP (PRP$ your) (NNS friends))
                  (, ,)
                  (NP (DT an))))
              ('' ')
              (NP
                (NP (DT the) (NN work))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD may) (`` `)
                      (VP (VB ave)
                        (S
                          (VP (TO to)
                            (VP (VB do) (, ,)
                              (SBAR
                                (WHADVP (WRB When))
                                (S
                                  (NP (PRP you))
                                  (VP (VBP think)
                                    (NP (NN o)))))
                              ('' ')
                              (NP
                                (NP
                                  (NP (DT the) (NN sinkin) (POS '))
                                  (JJ _)
                                  (NP (NNP Victorier) (NNP _) (POS 's))
                                  (NNP Jollies))
                                (: --)
                                (NP
                                  (NP (NN soldier))
                                  (, an) ('' ')
                                  (VP (VBG sailor)
                                    (ADVP (RB too))))))))))))))))))
    (. !)))

cc(makes-3, But-1)
nsubj(makes-3, it-2)
root(ROOT-0, makes-3)
nsubj(think-5, you-4)
ccomp(makes-3, think-5)
advmod(think-5, better-6)
dep(think-5, o-7)
dobj(o-7, you-9)
nmod:poss(friends-13, your-12)
dep(you-9, friends-13)
appos(friends-13, an-15)
det(work-18, the-17)
dobj(o-7, work-18)
nsubj(ave-22, you-19)
nsubj:xsubj(do-24, you-19)
aux(ave-22, may-20)
acl:relcl(work-18, ave-22)
mark(do-24, to-23)
xcomp(ave-22, do-24)
advmod(think-28, When-26)
nsubj(think-28, you-27)
advcl(do-24, think-28)
dobj(think-28, o-29)
det(sinkin-32, the-31)
nmod:poss(Jollies-38, sinkin-32)
case(sinkin-32, '-33)
amod(Jollies-38, _-34)
compound(_-36, Victorier-35)
nmod:poss(Jollies-38, _-36)
case(_-36, 's-37)
dobj(do-24, Jollies-38)
dep(Jollies-38, soldier-40)
acl(soldier-40, sailor-43)
advmod(sailor-43, too-44)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (EX there))
    (VP (VBZ is) (RB n't)
      (NP
        (NP (DT no) (NN room))
        (PP (IN for)
          (NP
            (S
              (VP (TO to)
                (VP (VB say)
                  (SBAR
                    (S
                      (NP (PRP ye))
                      (VP (VBP do) (RB n't)
                        (VP (VB know)
                          (PRN (: --)
                            (S
                              (NP (PRP they))
                              (VP (`` `)
                                (ADVP (RB ave))
                                (VBD proved)
                                (NP (PRP it))))
                            (ADJP (JJ plain)
                              (CC and)
                              (JJ true))
                            (: --))
                          (SBAR (IN That)
                            (S
                              (SBAR
                                (SBAR (IN whether)
                                  (S
                                    (NP (PRP it))
                                    (VP (VBZ 's)
                                      (NP (NNP Widow)))))
                                (, ,)
                                (CC or)
                                (SBAR (IN whether)
                                  (S
                                    (NP (PRP it))
                                    (VP (VBZ 's)
                                      (NP (NN ship))))))
                              (, ,)
                              (NP
                                (NP (NNP Victorier) (POS 's))
                                (NN work))
                              (VP (VBZ is)
                                (S
                                  (VP (TO to)
                                    (VP (VB do))))))))))))))
            (, ,)
            (NP
              (NP
                (NP (NNP An) (POS '))
                (NP (PRP they)))
              (VP (VBN done)
                (S
                  (NP (PRP it)))
                (, ,)
                (S
                  (NP (DT the) (NNPS Jollies))))))))
      (: --) (`` `)
      (NP
        (NP
          (NP (NNP Er) (NNP Majesty) (POS 's))
          (NNS Jollies))
        (: --)
        (NP
          (NP (NN soldier))
          (, an) ('' ')
          (VP (VBG sailor)
            (ADVP (RB too))))))
    (. !)))

advmod(is-3, Now-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
neg(is-3, n't-4)
neg(room-6, no-5)
nsubj(is-3, room-6)
case(An-43, for-7)
mark(say-9, to-8)
dep(An-43, say-9)
nsubj(know-13, ye-10)
aux(know-13, do-11)
neg(know-13, n't-12)
ccomp(say-9, know-13)
nsubj(proved-18, they-15)
advmod(proved-18, ave-17)
parataxis(know-13, proved-18)
dobj(proved-18, it-19)
dep(proved-18, plain-20)
cc(plain-20, and-21)
dep(proved-18, true-22)
conj:and(plain-20, true-22)
mark(is-39, That-24)
mark(Widow-28, whether-25)
nsubj(Widow-28, it-26)
cop(Widow-28, 's-27)
advcl(is-39, Widow-28)
cc(Widow-28, or-30)
mark(ship-34, whether-31)
nsubj(ship-34, it-32)
cop(ship-34, 's-33)
conj:or(Widow-28, ship-34)
advcl(is-39, ship-34)
nmod:poss(work-38, Victorier-36)
case(Victorier-36, 's-37)
nsubj(is-39, work-38)
nsubj:xsubj(do-41, work-38)
ccomp(know-13, is-39)
mark(do-41, to-40)
xcomp(is-39, do-41)
nmod:'(room-6, An-43)
case(An-43, '-44)
dep(An-43, they-45)
acl(An-43, done-46)
xcomp(done-46, it-47)
det(Jollies-50, the-49)
xcomp(done-46, Jollies-50)
compound(Majesty-54, Er-53)
nmod:poss(Jollies-56, Majesty-54)
case(Majesty-54, 's-55)
nsubj(is-3, Jollies-56)
dep(Jollies-56, soldier-58)
acl(soldier-58, sailor-61)
advmod(sailor-61, too-62)

(ROOT
  (FRAG
    (S
      (VP (VBZ SAPPERS)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (DT the) (NNP Waters))
            (VP (VBD were)
              (NP
                (NP (RB dried) (DT an))
                ('' ')
                (SBAR
                  (S
                    (NP (DT the) (NN Earth))
                    (VP (VBD did)
                      (ADJP (JJ appear))
                      (, ,)
                      (PRN (-LRB- -LRB-)
                        (S
                          (NP (`` ``) (PRP It))
                          (VP (VBZ 's)
                            (NP
                              (NP (DT all) (NN one))
                              (, ,) ('' '')
                              (SBAR
                                (S
                                  (VP (VBZ says)
                                    (NP (DT the) (NN Sapper))))))))
                        (-RRB- -RRB-)))))))))))
    (, ,)
    (NP (DT The) (NN Lord)
      (SBAR
        (S
          (NP (PRP He))
          (VP (VBD created)
            (NP
              (NP (DT the) (NN Engineer))
              (, ,)
              (NP
                (NP (PRP$ Her) (NN Majesty) (POS 's))
                (NNP Royal) (NNP Engineer))
              (, ,))
            (PP (IN With)
              (NP
                (NP (DT the) (NN rank)
                  (CC and)
                  (NN pay))
                (PP (IN of)
                  (NP (DT a) (NNP Sapper)))))))))
    (. !)))

dep(Lord-28, SAPPERS-1)
advmod(an-7, When-2)
det(Waters-4, the-3)
nsubj(an-7, Waters-4)
cop(an-7, were-5)
advmod(an-7, dried-6)
advcl(SAPPERS-1, an-7)
det(Earth-10, the-9)
nsubj(did-11, Earth-10)
acl:relcl(an-7, did-11)
xcomp(did-11, appear-12)
nsubj(one-19, It-16)
cop(one-19, 's-17)
det(one-19, all-18)
parataxis(did-11, one-19)
acl:relcl(one-19, says-22)
det(Sapper-24, the-23)
dobj(says-22, Sapper-24)
det(Lord-28, The-27)
root(ROOT-0, Lord-28)
nsubj(created-30, He-29)
ccomp(Lord-28, created-30)
det(Engineer-32, the-31)
dobj(created-30, Engineer-32)
nmod:poss(Majesty-35, Her-34)
nmod:poss(Engineer-38, Majesty-35)
case(Majesty-35, 's-36)
compound(Engineer-38, Royal-37)
appos(Engineer-32, Engineer-38)
case(rank-42, With-40)
det(rank-42, the-41)
nmod:with(created-30, rank-42)
cc(rank-42, and-43)
nmod:with(created-30, pay-44)
conj:and(rank-42, pay-44)
case(Sapper-47, of-45)
det(Sapper-47, a-46)
nmod:of(rank-42, Sapper-47)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NNP Flood))
        (VP (VBP come)
          (PRT (RP along))
          (PP (IN for)
            (NP (DT an) (JJ extra) (NN monsoon))))))
    (, ,)
    (NP (PRP 'T))
    (VP (VBD was)
      (NP
        (NP (NNP Noah))
        (VP (VBN constructed)
          (NP (DT the) (JJ first) (NN pontoon))
          (PP (TO To)
            (NP
              (NP (DT the) (NNS plans))
              (PP (IN of)
                (NP
                  (NP (PRP$ Her) (NN Majesty) (POS 's))
                  (, ,)
                  (NP (FW etc.)))))))))
    (. .)))

advmod(come-4, When-1)
det(Flood-3, the-2)
nsubj(come-4, Flood-3)
advcl(Noah-13, come-4)
compound:prt(come-4, along-5)
case(monsoon-9, for-6)
det(monsoon-9, an-7)
amod(monsoon-9, extra-8)
nmod:for(come-4, monsoon-9)
nsubj(Noah-13, 'T-11)
cop(Noah-13, was-12)
root(ROOT-0, Noah-13)
acl(Noah-13, constructed-14)
det(pontoon-17, the-15)
amod(pontoon-17, first-16)
dobj(constructed-14, pontoon-17)
case(plans-20, To-18)
det(plans-20, the-19)
nmod:to(constructed-14, plans-20)
case(Majesty-23, of-21)
nmod:poss(Majesty-23, Her-22)
nmod:'s(plans-20, Majesty-23)
case(Majesty-23, 's-24)
appos(Majesty-23, etc.-26)

(ROOT
  (S (CC But)
    (PP (IN after)
      (NP
        (NP (NN fatigue))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ wet) (DT an))
            ('' ')
            (SBAR
              (S
                (NP
                  (NP (DT the) (NN sun))
                  (, ,)
                  (NP (NNP Old) (NNP Noah)))
                (VP (VBD got)
                  (ADVP (NN drunk)))))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP he))
                (VP (MD would) (RB n't)
                  (VP (VB ha)))))))
        ('' ')
        (VP (VBN done)
          (SBAR (IN If)
            (S
              (NP (PRP he))
              (VP (VBD 'd)
                (VP (VBN trained)
                  (PP (IN with)))))))))
    (, ,)
    (VP (VBZ etc.))
    (. .)))

cc(etc.-30, But-1)
case(fatigue-3, after-2)
nmod:after(etc.-30, fatigue-3)
case(wet-6, in-4)
det(wet-6, the-5)
nmod:in(fatigue-3, wet-6)
dobj(ha-21, wet-6)
dep(wet-6, an-7)
det(sun-10, the-9)
nsubj(got-14, sun-10)
compound(Noah-13, Old-12)
appos(sun-10, Noah-13)
acl:relcl(wet-6, got-14)
advmod(got-14, drunk-15)
ref(wet-6, which-17)
nsubj(ha-21, he-18)
aux(ha-21, would-19)
neg(ha-21, n't-20)
acl:relcl(wet-6, ha-21)
acl(fatigue-3, done-23)
mark(trained-27, If-24)
nsubj(trained-27, he-25)
aux(trained-27, 'd-26)
advcl(done-23, trained-27)
nmod(trained-27, with-28)
root(ROOT-0, etc.-30)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP
          (NP (DT the) (NNP Tower) (NN o) (POS '))
          (NNP Babel))
        (VP (VBD had)
          (VP (VBN mixed)
            (PRT (RP up))
            (NP
              (NP (NNS men) (POS 's))
              (JJ _) (NN bat) (NN _))))))
    (, ,)
    (NP (DT Some) (JJ clever) (NN civilian))
    (VP (VBD was)
      (VP (VBG managing)
        (NP
          (NP
            (NP (DT that))
            (, ,)
            (NP
              (NP
                (NP (NNP An) (POS '))
                (NN none))
              (PP (IN of)))
            (, ,))
          (X (NN etc.)))))
    (. .)))

advmod(mixed-8, When-1)
det(o-4, the-2)
compound(o-4, Tower-3)
nmod:poss(Babel-6, o-4)
case(o-4, '-5)
nsubj(mixed-8, Babel-6)
aux(mixed-8, had-7)
advcl(managing-20, mixed-8)
compound:prt(mixed-8, up-9)
nmod:poss(_-14, men-10)
case(men-10, 's-11)
amod(_-14, _-12)
compound(_-14, bat-13)
dobj(mixed-8, _-14)
det(civilian-18, Some-16)
amod(civilian-18, clever-17)
nsubj(managing-20, civilian-18)
aux(managing-20, was-19)
root(ROOT-0, managing-20)
dobj(managing-20, that-21)
nmod:poss(none-25, An-23)
case(An-23, '-24)
appos(that-21, none-25)
acl(none-25, of-26)
dep(that-21, etc.-28)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (DT the) (NNPS Jews))
          (VP (VBD had)
            (NP
              (NP (DT a) (NN fight))
              (PP (IN at)
                (NP
                  (NP (DT the) (NN foot))
                  (PP (IN of)
                    (NP (DT a) (NN hill)))))))))
      (, ,)
      (NP (NNP Young) (NNP Joshua))
      (VP (VBD ordered)
        (NP (DT the) (NN sun)
          (S
            (VP (TO to)
              (VP (VB stand)
                (ADVP (RB still))))))))
    (, ,) (IN For)
    (S
      (NP (PRP he))
      (VP (VBD was)
        (NP
          (NP (DT a) (NNP Captain))
          (PP (IN of)
            (NP
              (NP (NNS Engineers))
              (, ,)
              (NP (FW etc.)))))))
    (. .)))

advmod(had-4, When-1)
det(Jews-3, the-2)
nsubj(had-4, Jews-3)
advcl(ordered-16, had-4)
det(fight-6, a-5)
dobj(had-4, fight-6)
case(foot-9, at-7)
det(foot-9, the-8)
nmod:at(fight-6, foot-9)
case(hill-12, of-10)
det(hill-12, a-11)
nmod:of(foot-9, hill-12)
compound(Joshua-15, Young-14)
nsubj(ordered-16, Joshua-15)
root(ROOT-0, ordered-16)
det(sun-18, the-17)
dobj(ordered-16, sun-18)
mark(stand-20, to-19)
acl(sun-18, stand-20)
advmod(stand-20, still-21)
dep(ordered-16, For-23)
nsubj(Captain-27, he-24)
cop(Captain-27, was-25)
det(Captain-27, a-26)
parataxis(ordered-16, Captain-27)
case(Engineers-29, of-28)
nmod:of(Captain-27, Engineers-29)
appos(Engineers-29, etc.-31)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP
          (NP (DT the) (NNS Children))
          (PP (IN of)
            (NP (NNP Israel))))
        (VP (VBD made)
          (NP (NNS bricks))
          (PP (IN without)
            (NP (NN straw))))))
    (, ,)
    (NP (PRP They))
    (VP (VBD were)
      (VP (VBN learnin) ('' ')
        (NP (DT the) (JJ regular) (NN work))
        (PP (IN of)
          (NP
            (NP (PRP$ our) (NNP Corps))
            (, ,)
            (NP
              (NP (DT The) (NN work))
              (PP (IN of))
              (, ,) (FW etc.))))))
    (. .)))

advmod(made-6, When-1)
det(Children-3, the-2)
nsubj(made-6, Children-3)
case(Israel-5, of-4)
nmod:of(Children-3, Israel-5)
advcl(learnin-13, made-6)
dobj(made-6, bricks-7)
case(straw-9, without-8)
nmod:without(made-6, straw-9)
nsubjpass(learnin-13, They-11)
auxpass(learnin-13, were-12)
root(ROOT-0, learnin-13)
det(work-17, the-15)
amod(work-17, regular-16)
dobj(learnin-13, work-17)
case(Corps-20, of-18)
nmod:poss(Corps-20, our-19)
nmod:of(learnin-13, Corps-20)
det(work-23, The-22)
appos(Corps-20, work-23)
acl(work-23, of-24)
dep(work-23, etc.-26)

(ROOT
  (S
    (PP (IN For)
      (PP
        (ADVP (RB ever))
        (IN since)
        (NP (RB then))))
    (, ,)
    (SBAR (IN if)
      (FRAG
        (NP (DT a) (NN war)
          (SBAR
            (S
              (NP (PRP they))
              (VP (MD would)
                (VP (VB wage))))))))
    (, ,)
    (VP (VBD Behold)
      (S
        (NP (PRP us))
        (ADJP (JJ a-shinin) ('' ')
          (PP (IN on)
            (NP
              (NP
                (NP (NN history) (POS 's))
                (NN page))
              (: --)
              (NP (JJ First) (NN page))))
          (PP (IN for))))
      (, ,)
      (S
        (NP (FW etc.))))
    (. .)))

case(then-4, For-1)
advmod(then-4, ever-2)
case(then-4, since-3)
nmod:since(Behold-13, then-4)
mark(war-8, if-6)
det(war-8, a-7)
advcl(Behold-13, war-8)
nsubj(wage-11, they-9)
aux(wage-11, would-10)
ccomp(war-8, wage-11)
root(ROOT-0, Behold-13)
nsubj(a-shinin-15, us-14)
xcomp(Behold-13, a-shinin-15)
case(page-20, on-17)
nmod:poss(page-20, history-18)
case(history-18, 's-19)
nmod:for(a-shinin-15, page-20)
amod(page-23, First-22)
dep(page-20, page-23)
case(page-20, for-24)
xcomp(Behold-13, etc.-26)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD lay)
      (PRT (RP down))
      (NP
        (NP (PRP$ their) (NNS sidings))
        (, an) ('' ')
        (SBAR
          (S
            (S
              (VP (VB help)
                (S
                  (S
                    (NP (PRP 'em))
                    (ADJP (JJ entrain)))
                  (, ,)
                  (S
                    (NP (NNP An) (POS '))
                    (NP (PRP we))))))
            (VP (VBZ sweep)
              (PRT (RP up))
              (NP (PRP$ their) (NN mess))
              (PP (IN through)
                (NP
                  (NP (DT the) (NN bloomin) (POS '))
                  (NN campaign)))))))
      (, ,)
      (PP (IN In)
        (NP
          (NP (DT the) (NN style))
          (PP (IN of))
          (, ,)
          (X (NN etc.)))))
    (. .)))

nsubj(lay-2, We-1)
root(ROOT-0, lay-2)
compound:prt(lay-2, down-3)
nmod:poss(sidings-5, their-4)
dobj(lay-2, sidings-5)
csubj(sweep-15, help-8)
dep(entrain-10, 'em-9)
xcomp(help-8, entrain-10)
dep(we-14, An-12)
case(An-12, '-13)
parataxis(entrain-10, we-14)
acl:relcl(sidings-5, sweep-15)
compound:prt(sweep-15, up-16)
nmod:poss(mess-18, their-17)
dobj(sweep-15, mess-18)
case(campaign-23, through-19)
det(bloomin-21, the-20)
nmod:poss(campaign-23, bloomin-21)
case(bloomin-21, '-22)
nmod:through(sweep-15, campaign-23)
case(style-27, In-25)
det(style-27, the-26)
nmod:in(lay-2, style-27)
acl(style-27, of-28)
dep(style-27, etc.-30)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP send)
      (NP (PRP us))
      (PP (IN in)
        (NP
          (UCP
            (PP
              (ADVP (NN front))
              (IN with)
              (NP
                (NP (DT a) (NN fuse))
                (, an) ('' ')
                (NP (DT a) (NN mine)
                  (S
                    (VP (TO To)
                      (VP (VB blow)
                        (PRT (RP up))
                        (NP
                          (NP (DT the) (NNS gates))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBP are)
                                (VP (VBN rushed)
                                  (PP (IN by)
                                    (NP (DT the) (NNP Line))))))))))))))
            (, ,)
            (CC But)
            (ADJP (JJ bent)
              (PP (IN by)))
            (, ,))
          (NNS etc.))))
    (. .)))

nsubj(send-2, They-1)
root(ROOT-0, send-2)
dobj(send-2, us-3)
case(etc.-29, in-4)
advmod(fuse-8, front-5)
case(fuse-8, with-6)
det(fuse-8, a-7)
nmod:with(etc.-29, fuse-8)
det(mine-12, a-11)
dep(fuse-8, mine-12)
mark(blow-14, To-13)
acl(mine-12, blow-14)
compound:prt(blow-14, up-15)
det(gates-17, the-16)
dobj(blow-14, gates-17)
nsubjpass(rushed-20, gates-17)
ref(gates-17, that-18)
auxpass(rushed-20, are-19)
acl:relcl(gates-17, rushed-20)
case(Line-23, by-21)
det(Line-23, the-22)
nmod:by(rushed-20, Line-23)
cc(fuse-8, But-25)
conj:but(fuse-8, bent-26)
nmod:with(etc.-29, bent-26)
nmod(bent-26, by-27)
nmod:in(send-2, etc.-29)

(ROOT
  (S
    (NP (PRP They))
    (VP (VB send)
      (NP (PRP us))
      (PP (IN behind) (IN with)
        (NP
          (NP (DT a) (NN pick))
          (, an) ('' ')
          (NP (DT a) (NN spade))))
      (, ,)
      (S
        (VP (TO To)
          (VP (VB dig)
            (PP (IN for)
              (NP
                (NP (DT the) (NNS guns))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN bullock-brigade))
                    (SBAR
                      (WHNP (WDT Which))
                      (S
                        (VP (VBZ has)
                          (VP (VBN asked)
                            (PP (IN for)))))))))))))
      (, ,)
      (NP (FW etc.)))
    (. .)))

nsubj(send-2, They-1)
root(ROOT-0, send-2)
dobj(send-2, us-3)
case(pick-7, behind-4)
case(pick-7, with-5)
det(pick-7, a-6)
nmod:with(send-2, pick-7)
det(spade-11, a-10)
dep(pick-7, spade-11)
mark(dig-14, To-13)
advcl(send-2, dig-14)
case(guns-17, for-15)
det(guns-17, the-16)
nmod:for(dig-14, guns-17)
case(bullock-brigade-20, of-18)
det(bullock-brigade-20, a-19)
nmod:of(guns-17, bullock-brigade-20)
nsubj(asked-23, bullock-brigade-20)
ref(bullock-brigade-20, Which-21)
aux(asked-23, has-22)
acl:relcl(bullock-brigade-20, asked-23)
nmod(asked-23, for-24)
dobj(send-2, etc.-26)

(ROOT
  (S
    (S
      (S
        (NP (PRP We))
        (VP (VBP work)
          (PP (IN under)
            (NP
              (NP (NN escort))
              (PP (IN in)
                (NP (NNS trousers)
                  (CC and)
                  (NN shirt)))))))
      (, ,)
      (S
        (NP (NNP An) (POS '))
        (NP (DT the) (NN heathen))))
    (NP (PRP they))
    (VP (VBP plug)
      (S
        (NP (PRP us))
        (NP
          (NP (NN tail-up))
          (PP (IN in)
            (NP
              (NP (DT the) (NN dirt))
              (, ,)
              (NP (NNP Annoying))
              (, ,) (FW etc.))))))
    (. .)))

nsubj(work-2, We-1)
dep(plug-15, work-2)
case(escort-4, under-3)
nmod:under(work-2, escort-4)
case(trousers-6, in-5)
nmod:in(escort-4, trousers-6)
cc(trousers-6, and-7)
nmod:in(escort-4, shirt-8)
conj:and(trousers-6, shirt-8)
dep(heathen-13, An-10)
case(An-10, '-11)
det(heathen-13, the-12)
parataxis(work-2, heathen-13)
nsubj(plug-15, they-14)
root(ROOT-0, plug-15)
nsubj(tail-up-17, us-16)
xcomp(plug-15, tail-up-17)
case(dirt-20, in-18)
det(dirt-20, the-19)
nmod:in(tail-up-17, dirt-20)
appos(dirt-20, Annoying-22)
dep(dirt-20, etc.-24)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VB blast)
        (PRT (RP out))
        (NP
          (NP (DT the) (NN rock))
          (, an) ('' ')
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBZ shovel)
                (NP (DT the) (NN mud))))))))
    (, ,)
    (NP (PRP We))
    (VP (VBP make)
      (NP
        (NP
          (NP (PRP 'em))
          (NP (JJ good) (NNS roads))
          (, an) ('' '))
        (PRN (: --)
          (S
            (NP (PRP they))
            (VP (VBP roll)
              (PRT (RP down))
              (NP (DT the) (JJ _) (JJ khud) (NN _))))
          (, ,)
          (NP
            (NP (NNP Reporting))
            (, ,)
            (NP (FW etc.))))))
    (. .)))

nsubj(blast-2, We-1)
ccomp(make-14, blast-2)
compound:prt(blast-2, out-3)
det(rock-5, the-4)
dobj(blast-2, rock-5)
nsubj(shovel-9, we-8)
acl:relcl(rock-5, shovel-9)
det(mud-11, the-10)
dobj(shovel-9, mud-11)
nsubj(make-14, We-13)
root(ROOT-0, make-14)
dobj(make-14, 'em-15)
amod(roads-17, good-16)
dep('em-15, roads-17)
nsubj(roll-22, they-21)
dep('em-15, roll-22)
compound:prt(roll-22, down-23)
det(_-27, the-24)
amod(_-27, _-25)
amod(_-27, khud-26)
dobj(roll-22, _-27)
dep(roll-22, Reporting-29)
appos(Reporting-29, etc.-31)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP make)
      (SBAR
        (S
          (PP (IN 'em)
            (NP
              (NP
                (NP (PRP$ their) (NNS bridges))
                (, ,)
                (NP (PRP$ their) (NNS wells))
                (, ,))
              (, an) ('' ')
              (NP
                (NP (PRP$ their) (NNS huts))
                (, ,)
                (NP
                  (NP (NNP An) (POS '))
                  (NP
                    (NP (DT the)
                      (ADJP (JJ telegraph-wire)
                        (NP (DT the) (NN enemy)))
                      (NNS cuts))
                    (, ,)
                    (NP (NNP An) (POS ')))))))
          (NP (PRP it))
          (VP (VBZ 's)
            (VP (VBN blamed)
              (PP (IN on))
              (, ,)
              (NP (FW etc.)))))))
    (. .)))

nsubj(make-2, We-1)
root(ROOT-0, make-2)
case(bridges-5, 'em-3)
nmod:poss(bridges-5, their-4)
nmod:on(blamed-27, bridges-5)
nmod:poss(wells-8, their-7)
appos(bridges-5, wells-8)
nmod:poss(huts-13, their-12)
dep(bridges-5, huts-13)
appos(huts-13, An-15)
case(An-15, '-16)
det(cuts-21, the-17)
amod(cuts-21, telegraph-wire-18)
det(enemy-20, the-19)
dep(telegraph-wire-18, enemy-20)
dep(An-15, cuts-21)
appos(cuts-21, An-23)
case(An-23, '-24)
nsubjpass(blamed-27, it-25)
auxpass(blamed-27, 's-26)
ccomp(make-2, blamed-27)
case(bridges-5, on-28)
dobj(blamed-27, etc.-30)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (PRN
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBP return) (, ,)
            (NP
              (NP (DT an))
              ('' ')
              (PP (IN from)
                (NP
                  (NP (NN war))
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (MD would)
                        (VP (VB cease)))))))))))
      (, ,))
    (NP (PRP They))
    (VP (VBP grudge)
      (S
        (NP (PRP us))
        (VP (VBN adornin) ('' ')
          (NP (DT the) (NNS billets))
          (PP (IN of)
            (NP
              (NP (NN peace))
              (, ,)
              (SBAR
                (WHNP (WDT Which))
                (S
                  (VP (VBP are)
                    (VP (VBN kept)
                      (PP (IN for))))))))
          (, ,)
          (ADVP (RB etc.)))))
    (. .)))

dep(grudge-16, An-1)
case(An-1, '-2)
advmod(return-5, when-3)
nsubj(return-5, we-4)
parataxis(grudge-16, return-5)
dobj(return-5, an-7)
case(war-10, from-9)
nmod:from(an-7, war-10)
nsubj(cease-13, we-11)
aux(cease-13, would-12)
acl:relcl(war-10, cease-13)
nsubj(grudge-16, They-15)
root(ROOT-0, grudge-16)
nsubj(adornin-18, us-17)
dep(grudge-16, adornin-18)
det(billets-21, the-20)
dobj(adornin-18, billets-21)
case(peace-23, of-22)
nmod:of(adornin-18, peace-23)
nsubjpass(kept-27, peace-23)
ref(peace-23, Which-25)
auxpass(kept-27, are-26)
acl:relcl(peace-23, kept-27)
nmod(kept-27, for-28)
advmod(adornin-18, etc.-30)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP build)
      (S
        (NP
          (NP
            (NP (JJ 'em) (JJ nice) (NNS barracks))
            (PRN (: --)
              (S
                (NP (PRP they))
                (VP (VBP swear)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBP are)
                        (ADJP (JJ bad))
                        (, ,)
                        (SBAR (IN That)
                          (S
                            (NP (PRP$ our) (NNS Colonels))
                            (VP (VBP are)
                              (ADJP (JJ Methodist) (, ,) (JJ married)
                                (CC or)
                                (JJ mad))))))))))))
          (, ,)
          (NP (NNP Insultin) (POS '))
          (, ,))
        (NP (FW etc.))))
    (. .)))

nsubj(build-2, We-1)
root(ROOT-0, build-2)
amod(barracks-5, 'em-3)
amod(barracks-5, nice-4)
nsubj(etc.-26, barracks-5)
nsubj(swear-8, they-7)
dep(barracks-5, swear-8)
nsubj(bad-11, they-9)
cop(bad-11, are-10)
ccomp(swear-8, bad-11)
mark(Methodist-17, That-13)
nmod:poss(Colonels-15, our-14)
nsubj(Methodist-17, Colonels-15)
nsubj(married-19, Colonels-15)
nsubj(mad-21, Colonels-15)
cop(Methodist-17, are-16)
ccomp(bad-11, Methodist-17)
ccomp(bad-11, married-19)
conj:or(Methodist-17, married-19)
cc(Methodist-17, or-20)
ccomp(bad-11, mad-21)
conj:or(Methodist-17, mad-21)
appos(barracks-5, Insultin-23)
case(Insultin-23, '-24)
xcomp(build-2, etc.-26)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP have) (RB n't)
        (NP
          (NP (DT no) (NNS manners))
          (CC nor)
          (NP
            (NP
              (NP (NN gratitude))
              (ADVP (RB too)))
            (, ,)
            (S
              (PP (IN For)
                (NP
                  (NP (DT the) (JJR more))
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP (VBP help)
                        (NP (PRP 'em)))))))
              (, ,)
              (X
                (X (DT the) (JJR less))
                (NP (NN will)))
              (NP (PRP they))
              (VP (VBP do)))))))
    (, ,)
    (CC But)
    (S
      (VP (VB mock)
        (ADVP (IN at))
        (, ,)
        (NP (FW etc.))))
    (. .)))

nsubj(have-2, They-1)
nsubj(mock-25, They-1)
root(ROOT-0, have-2)
neg(have-2, n't-3)
neg(manners-5, no-4)
dobj(have-2, manners-5)
cc(manners-5, nor-6)
dobj(have-2, gratitude-7)
conj:nor(manners-5, gratitude-7)
advmod(gratitude-7, too-8)
case(more-12, For-10)
det(more-12, the-11)
nmod:for(do-22, more-12)
mark(help-15, that-13)
nsubj(help-15, we-14)
dep(more-12, help-15)
dobj(help-15, 'em-16)
det(less-19, the-18)
dep(will-20, less-19)
dep(do-22, will-20)
nsubj(do-22, they-21)
dep(gratitude-7, do-22)
cc(have-2, But-24)
conj:but(have-2, mock-25)
advmod(mock-25, at-26)
dobj(mock-25, etc.-28)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT the) (NNP Line))
    (VP (VBZ 's)
      (CC but)
      (NP
        (NP (DT a) (NN man))
        (PP (IN with)
          (NP
            (NP
              (NP (DT a) (NN gun))
              (PP (IN in)
                (NP (PRP$ his) (NN hand))))
            (, ,)
            (NP
              (NP (NNP An) ('' ') (NNP Cavalry) (POS 's))
              (JJ only))
            (SBAR
              (WHNP (WP what) (NNS horses))
              (S
                (VP (MD can)
                  (VP (VB stand)
                    (PRN (, ,)
                      (SBAR
                        (WHADVP (WRB When))
                        (S
                          (VP (VBD helped)
                            (PP (IN by)))))
                      (, ,))
                    (NP (FW etc.))))))))))
    (. .)))

advmod('s-4, Now-1)
det(Line-3, the-2)
nsubj('s-4, Line-3)
root(ROOT-0, 's-4)
cc('s-4, but-5)
det(man-7, a-6)
conj:but('s-4, man-7)
case(gun-10, with-8)
det(gun-10, a-9)
nmod:with(man-7, gun-10)
det(horses-21, gun-10)
case(hand-13, in-11)
nmod:poss(hand-13, his-12)
nmod:in(gun-10, hand-13)
compound(Cavalry-17, An-15)
appos(gun-10, Cavalry-17)
case(Cavalry-17, 's-18)
amod(Cavalry-17, only-19)
ref(gun-10, what-20)
nsubj(stand-23, horses-21)
aux(stand-23, can-22)
acl:relcl(gun-10, stand-23)
advmod(helped-26, When-25)
parataxis(stand-23, helped-26)
nmod(helped-26, by-27)
dobj(stand-23, etc.-29)

(ROOT
  (S
    (S
      (NP (NNP Artillery))
      (VP (VBZ moves)
        (PP (IN by)
          (NP
            (NP (DT the) (NN leave) (NN o) (POS '))
            (DT the) (NN ground)))))
    (, ,)
    (CC But)
    (S
      (S
        (ADJP (JJ _)))
      (NP (PRP we))
      (ADVP (RB _))
      (VP (VBP are)
        (NP
          (NP (DT the) (NNS men))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP do)
                (NP
                  (NP (NN something))
                  (SBAR
                    (S
                      (NP (DT all) (NN round))
                      (, ,)
                      (PP (IN For)
                        (NP (NNP _)))
                      (NP (PRP we))
                      (ADVP (RB _))
                      (VP (VBP are)))))
                (, ,)
                (S
                  (NP (FW etc.)))))))))
    (. .)))

nsubj(moves-2, Artillery-1)
root(ROOT-0, moves-2)
case(ground-9, by-3)
det(o-6, the-4)
compound(o-6, leave-5)
nmod:poss(ground-9, o-6)
case(o-6, '-7)
det(ground-9, the-8)
nmod:by(moves-2, ground-9)
cc(moves-2, But-11)
dep(men-17, _-12)
nsubj(men-17, we-13)
advmod(men-17, _-14)
cop(men-17, are-15)
det(men-17, the-16)
conj:but(moves-2, men-17)
nsubj(do-19, men-17)
ref(men-17, that-18)
acl:relcl(men-17, do-19)
dobj(do-19, something-20)
det(round-22, all-21)
nsubj(are-28, round-22)
case(_-25, For-24)
nmod:for(are-28, _-25)
nsubj(are-28, we-26)
advmod(are-28, _-27)
acl:relcl(something-20, are-28)
xcomp(do-19, etc.-30)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN stated)
          (NP (PRP it))
          (ADVP (JJ plain))
          (, ,)
          (NP
            (NP (DT an))
            ('' ')
            (SBAR
              (S
                (NP (PRP$ my) (NN argument))
                (VP (VBZ 's)
                  (ADVP
                    (ADVP (RB thus))
                    (PRN (-LRB- -LRB-)
                      (S
                        (NP (`` ``) (PRP It))
                        (VP (VBZ 's)
                          (NP
                            (NP (DT all) (NN one))
                            (, ,) ('' '')
                            (SBAR
                              (S
                                (VP (VBZ says)
                                  (NP (DT the) (NN Sapper))))))))
                      (-RRB- -RRB-))))))))))
    (, ,)
    (NP (EX There))
    (VP (VBZ 's)
      (ADVP (RB only)
        (NP (CD one)))
      (NP
        (NP
          (NP
            (NP (NNP Corps))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (ADJP (JJ perfect))))))
          (: --)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (NP (PRP us))))))
        (: ;)
        (NP
          (NP
            (NP (NNP An) (POS '))
            (NX
              (NX
                (NP (PRP they))
                (VP (VBP call)
                  (S
                    (NP (PRP us))
                    (NP
                      (NP
                        (NP (PRP$ Her) (NN Majesty) (POS 's))
                        (NNS Engineers))
                      (, ,)
                      (NP
                        (NP (PRP$ Her) (NN Majesty) (POS 's))
                        (NNP Royal) (NNP Engineers))
                      (, ,))
                    (PP (IN With)
                      (NP (DT the) (NN rank))))))
              (CC and)
              (NX (NN pay))))
          (PP (IN of)
            (NP (DT a) (NNP Sapper))))))
    (. !)))

nsubj(stated-3, I-1)
aux(stated-3, have-2)
ccomp('s-27, stated-3)
dobj(stated-3, it-4)
advmod(stated-3, plain-5)
dobj(stated-3, an-7)
nmod:poss(argument-10, my-9)
nsubj('s-11, argument-10)
acl:relcl(an-7, 's-11)
advmod('s-11, thus-12)
nsubj(one-18, It-15)
cop(one-18, 's-16)
det(one-18, all-17)
dep(thus-12, one-18)
acl:relcl(one-18, says-21)
det(Sapper-23, the-22)
dobj(says-21, Sapper-23)
expl('s-27, There-26)
root(ROOT-0, 's-27)
advmod('s-27, only-28)
nmod:npmod(only-28, one-29)
nsubj('s-27, Corps-30)
nsubj(perfect-33, Corps-30)
nsubj(us-37, Corps-30)
ref(Corps-30, which-31)
cop(perfect-33, is-32)
acl:relcl(Corps-30, perfect-33)
ref(Corps-30, that-35)
cop(us-37, 's-36)
acl:relcl(Corps-30, us-37)
nmod:poss(they-41, An-39)
case(An-39, '-40)
dep(Corps-30, they-41)
dep(they-41, call-42)
nsubj(Engineers-47, us-43)
nmod:poss(Majesty-45, Her-44)
nmod:poss(Engineers-47, Majesty-45)
case(Majesty-45, 's-46)
xcomp(call-42, Engineers-47)
nmod:poss(Majesty-50, Her-49)
nmod:poss(Engineers-53, Majesty-50)
case(Majesty-50, 's-51)
compound(Engineers-53, Royal-52)
appos(Engineers-47, Engineers-53)
case(rank-57, With-55)
det(rank-57, the-56)
dep(Engineers-47, rank-57)
cc(they-41, and-58)
dep(Corps-30, pay-59)
conj:and(they-41, pay-59)
case(Sapper-62, of-60)
det(Sapper-62, a-61)
nmod:of(they-41, Sapper-62)

(ROOT
  (S
    (NP (JJ THAT) (NNP DAY))
    (NP (PRP It))
    (VP (VBD got)
      (ADVP (IN beyond) (DT all))
      (NP
        (NP (NNS orders))
        (, an) ('' ')
        (PRN
          (S
            (NP (PRP it))
            (VP (VBD got)
              (PP (IN beyond)
                (NP (DT all) (`` `) (NN ope))))))
        (: ;)
        (SBAR
          (S
            (NP (PRP It))
            (VP (VBD got)
              (PP (TO to)
                (NP
                  (NP (NN shammin))
                  ('' ')
                  (VP (VBN wounded))
                  (, an) ('' ')
                  (VP (VBN retirin) ('' ')
                    (PP (IN from)
                      (NP (DT the) (`` `) (NN alt)))))))))))
    (. .)))

amod(DAY-2, THAT-1)
nmod:tmod(got-4, DAY-2)
nsubj(got-4, It-3)
root(ROOT-0, got-4)
case(all-6, beyond-5)
advmod(got-4, all-6)
dobj(got-4, orders-7)
nsubj(got-11, it-10)
dep(orders-7, got-11)
case(ope-15, beyond-12)
det(ope-15, all-13)
nmod:beyond(got-11, ope-15)
nsubj(got-18, It-17)
acl:relcl(orders-7, got-18)
case(shammin-20, to-19)
nmod:to(got-18, shammin-20)
acl(shammin-20, wounded-22)
acl(shammin-20, retirin-25)
case(alt-30, from-27)
det(alt-30, the-28)
nmod:from(retirin-25, alt-30)

(ROOT
  (S (`` `)
    (S
      (S
        (NP (JJ Ole) (NNS companies))
        (VP (VBD was)
          (VP (VBN lookin) ('' ')
            (PP (IN for)
              (NP
                (NP (DT the) (JJS nearest) (NN road))
                (PP (TO to)
                  (NP (NN slope))))))))
      (: ;)
      (S
        (NP (PRP It))
        (VP (VBD were)
          (ADVP (RB just))
          (NP
            (NP
              (NP (DT a) (NN bloomin) (POS '))
              (NN knock-out))
            (: --)
            (NP (DT an))))))
    ('' ')
    (NP (PRP$ our))
    (VP (VBP fault))
    (. !)))

amod(companies-3, Ole-2)
nsubjpass(lookin-5, companies-3)
auxpass(lookin-5, was-4)
ccomp(fault-25, lookin-5)
case(road-10, for-7)
det(road-10, the-8)
amod(road-10, nearest-9)
nmod:for(lookin-5, road-10)
case(slope-12, to-11)
nmod:to(road-10, slope-12)
nsubj(knock-out-20, It-14)
cop(knock-out-20, were-15)
advmod(knock-out-20, just-16)
det(bloomin-18, a-17)
nmod:poss(knock-out-20, bloomin-18)
case(bloomin-18, '-19)
parataxis(lookin-5, knock-out-20)
dep(knock-out-20, an-22)
nsubj(fault-25, our-24)
root(ROOT-0, fault-25)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Now))
        (NP (EX there))
        (VP (VBP ai) (RB n't)
          (NP
            (NP (DT no) (NN chorus))
            (`` `)
            (VP (VBN ere)
              (S
                (VP (TO to)
                  (VP (VB give))))))))
      (, ,)
      (CC Nor)
      (S
        (NP (EX there))
        (VP (VBP ai) (RB n't)
          (NP (DT no) (NN band)
            (S
              (VP (TO to)
                (VP (VB play)))))))
      (: ;)
      (S
        (NP
          (NP (NNP An) (POS '))
          (NN I))
        (VP (VBP wish)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD was)
                (ADJP (JJ dead))
                (S
                  (VP (`` `) (VB fore)
                    (S
                      (NP (PRP I))
                      (VP (VBN done)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP I))
                            (VP (VBD did))))))))))))))
    (, ,)
    (CC Or)
    (S
      (VP (VBN seen)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBD seed)
              (NP (DT that) (NN day)))))))
    (. !)))

advmod(ai-3, Now-1)
expl(ai-3, there-2)
root(ROOT-0, ai-3)
neg(ai-3, n't-4)
neg(chorus-6, no-5)
nsubj(ai-3, chorus-6)
nsubj(seen-37, chorus-6)
acl(chorus-6, ere-8)
mark(give-10, to-9)
xcomp(ere-8, give-10)
cc(ai-3, Nor-12)
expl(ai-14, there-13)
conj:nor(ai-3, ai-14)
neg(ai-14, n't-15)
neg(band-17, no-16)
nsubj(ai-14, band-17)
mark(play-19, to-18)
acl(band-17, play-19)
nmod:poss(I-23, An-21)
case(An-21, '-22)
nsubj(wish-24, I-23)
conj:nor(ai-3, wish-24)
nsubj(dead-27, I-25)
cop(dead-27, was-26)
ccomp(wish-24, dead-27)
ccomp(dead-27, fore-29)
nsubj(done-31, I-30)
dep(fore-29, done-31)
dobj(did-34, what-32)
nsubj(did-34, I-33)
ccomp(done-31, did-34)
cc(ai-3, Or-36)
conj:nor(ai-3, seen-37)
dobj(seed-40, what-38)
nsubj(seed-40, I-39)
ccomp(seen-37, seed-40)
det(day-42, that-41)
nmod:tmod(seed-40, day-42)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD was)
      (NP
        (NP
          (NP (JJ sick) (NN o) (POS '))
          (NN bein) (POS '))
        (NN punished))
      (, ,)
      (NP
        (NP (DT an))
        ('' ')
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBD let)
              (SBAR
                (S
                  (NP (PRP 'em))
                  (VP (VBP know)
                    (SBAR
                      (S
                        (NP
                          (NP
                            (NP (PRP it))
                            (, ,)
                            (ADVP (RB too)))
                          (: ;)
                          (NP (NNP An))
                          ('' ')
                          (NP (DT a) (NN company-commander) (RP up))
                          (, an) ('' '))
                        (`` `)
                        (NP
                          (NP (PRP it))
                          (SBAR
                            (S
                              (NP
                                (NP (PRP us))
                                (PP (IN with)
                                  (NP
                                    (NP (DT a) (NN sword))
                                    (, ,)
                                    (NP
                                      (NP (NNP An) (POS '))
                                      (QP (DT some) (CD one))))))
                              (VP (VBD shouted)))))
                        ('' '')
                        (VP (`` `) (VBZ Ook)
                          (NP (PRP it)))))))))))))
    (. !) ('' '')))

nsubj(punished-8, We-1)
cop(punished-8, was-2)
amod(o-4, sick-3)
nmod:poss(bein-6, o-4)
case(o-4, '-5)
nmod:poss(punished-8, bein-6)
case(bein-6, '-7)
root(ROOT-0, punished-8)
dep(punished-8, an-10)
nsubj(let-13, we-12)
acl:relcl(an-10, let-13)
nsubj(know-15, 'em-14)
ccomp(let-13, know-15)
nsubj(Ook-41, it-16)
advmod(it-16, too-18)
dep(it-16, An-20)
det(company-commander-23, a-22)
dep(it-16, company-commander-23)
dep(company-commander-23, up-24)
nsubj(Ook-41, it-28)
nsubj(shouted-38, us-29)
case(sword-32, with-30)
det(sword-32, a-31)
nmod:with(us-29, sword-32)
appos(sword-32, An-34)
case(An-34, '-35)
advmod(one-37, some-36)
nummod(An-34, one-37)
acl:relcl(it-28, shouted-38)
ccomp(know-15, Ook-41)
dobj(Ook-41, it-42)

(ROOT
  (S
    (FRAG
      (NP (DT an)))
    ('' ')
    (NP (PRP it))
    (VP (VBP come)
      (S
        (VP (TO to)
          (VP
            (VP (VB _)
              (NP
                (NP (NNP sove-ki-poo) (NNP _) (, ,) (NNP An))
                ('' ')
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBD chucked)
                      (NP (PRP$ our) (NNS rifles))
                      (PP (IN from)
                        (NP (PRP us))))))))
            (: --)
            (VP (VB O)
              (NP (PRP$ my) (NN Gawd)))))))
    (. !)))

dep(come-4, an-1)
nsubj(come-4, it-3)
nsubj:xsubj(_-6, it-3)
root(ROOT-0, come-4)
mark(_-6, to-5)
xcomp(come-4, _-6)
compound(An-10, sove-ki-poo-7)
compound(An-10, _-8)
dobj(_-6, An-10)
nsubj(chucked-13, we-12)
acl:relcl(An-10, chucked-13)
nmod:poss(rifles-15, our-14)
dobj(chucked-13, rifles-15)
case(us-17, from-16)
nmod:from(chucked-13, us-17)
dep(_-6, O-19)
nmod:poss(Gawd-21, my-20)
dobj(O-19, Gawd-21)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (CD thirty) (NN dead))
          (, an) ('' ')
          (VP (VBN wounded)
            (PP (IN on)
              (NP
                (NP (DT the) (NN ground))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (MD would) (RB n't)
                      (VP (VB keep)))))))))))
    (: --)
    (S
      (INTJ (UH No))
      (, ,)
      (NP (EX there))
      (VP (VBD was) (RB n't)
        (ADJP
          (ADJP (JJR more))
          (PP (IN than)
            (NP (CD twenty))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN front))
            (VP (VBN begun)
              (S
                (VP (TO to)
                  (VP (VB go)))))))))
    (: ;)
    (CC But)
    (, ,)
    (PP (IN Christ))
    (. !)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nummod(dead-4, thirty-3)
nsubj(was-2, dead-4)
nsubj(was-19, dead-4)
acl(dead-4, wounded-7)
case(ground-10, on-8)
det(ground-10, the-9)
nmod:on(wounded-7, ground-10)
nsubj(keep-14, we-11)
aux(keep-14, would-12)
neg(keep-14, n't-13)
acl:relcl(ground-10, keep-14)
discourse(was-19, No-16)
expl(was-19, there-18)
conj:But(was-2, was-19)
neg(was-19, n't-20)
xcomp(was-19, more-21)
case(twenty-23, than-22)
nmod:than(more-21, twenty-23)
advmod(begun-27, when-24)
det(front-26, the-25)
nsubj(begun-27, front-26)
nsubj:xsubj(go-29, front-26)
advcl(was-19, begun-27)
mark(go-29, to-28)
xcomp(begun-27, go-29)
cc(was-2, But-31)
conj:But(was-2, Christ-33)

(ROOT
  (S
    (PP (IN along)
      (NP
        (NP (DT the) (NN line) (NN o) (POS '))
        (NN flight)))
    (NP (PRP they))
    (VP (VBD cut)
      (NP (PRP us))
      (PRT (RP up))
      (PP (IN like)
        (NP
          (NP (NN sheep))
          (, ,)
          (NP (NNP An))))
      ('' ')
      (SBAR (IN that)
        (S
          (VP (VBD was)
            (NP
              (NP (DT all))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBD gained)
                    (PP (IN by)
                      (NP (NN doin) (POS ')))
                    (ADVP (RB so))))))))))
    (. .)))

case(flight-6, along-1)
det(o-4, the-2)
compound(o-4, line-3)
nmod:poss(flight-6, o-4)
case(o-4, '-5)
nmod:along(cut-8, flight-6)
nsubj(cut-8, they-7)
root(ROOT-0, cut-8)
dobj(cut-8, us-9)
compound:prt(cut-8, up-10)
case(sheep-12, like-11)
nmod:like(cut-8, sheep-12)
appos(sheep-12, An-14)
mark(all-18, that-16)
cop(all-18, was-17)
ccomp(cut-8, all-18)
nsubj(gained-20, we-19)
acl:relcl(all-18, gained-20)
case(doin-22, by-21)
nmod:'(gained-20, doin-22)
case(doin-22, '-23)
advmod(gained-20, so-24)

(ROOT
  (S
    (S
      (NP (PRP I))
      (`` `)
      (VP (VBD eard)
        (SBAR
          (S
            (NP (DT the) (NNS knives))
            (VP (VBD be'ind)
              (NP (PRP me)))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP I))
        (VP (VBZ durs) (RB n't)
          (VP (VB face)
            (NP (PRP$ my) (NN man)))))
      (, ,)
      (CC Nor)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB know)
            (SBAR
              (WHADVP (WRB where))
              (S
                (S
                  (NP (PRP I))
                  (VP (VBD went)
                    (PP (TO to))))
                (, ,)
                (S
                  (ADVP (RB 'cause))
                  (NP (PRP I))
                  (VP (VBD did) (RB n't)
                    (VP (`` `) (VB alt)
                      (S
                        (VP (TO to)
                          (VP (VB see))))
                      (, ,)
                      (PP (IN Till)
                        (NP
                          (NP (PRP I))
                          (VP (`` `) (VBN eard)
                            (NP (DT a) (NN beggar) (NN squealin))
                            ('' ')
                            (SBAR
                              (ADVP (RB out))
                              (IN for)
                              (S
                                (NP
                                  (NP (NN quarter) (RB as) (POS '))
                                  (NN e))
                                (VP (VBD ran))))))))))
                (, ,)
                (S
                  (NP
                    (NP (NNP An) (POS '))
                    (NN I))
                  (VP (VBD thought)
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBD knew)
                          (NP (DT the) (NN voice) (, an) ('' ')))))))
                (: --)
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (NP (PRP me))))))))))
    (. !)))

nsubj(eard-3, I-1)
root(ROOT-0, eard-3)
det(knives-5, the-4)
nsubj(be'ind-6, knives-5)
ccomp(eard-3, be'ind-6)
dobj(be'ind-6, me-7)
cc(eard-3, but-9)
nsubj(durs-11, I-10)
conj:but(eard-3, durs-11)
neg(durs-11, n't-12)
dep(durs-11, face-13)
nmod:poss(man-15, my-14)
dobj(face-13, man-15)
cc(durs-11, Nor-17)
nsubj(know-21, I-18)
aux(know-21, do-19)
neg(know-21, n't-20)
conj:but(eard-3, know-21)
conj:nor(durs-11, know-21)
advmod(went-24, where-22)
nsubj(went-24, I-23)
ccomp(know-21, went-24)
nmod(went-24, to-25)
advmod(alt-32, 'cause-27)
nsubj(alt-32, I-28)
nsubj:xsubj(see-34, I-28)
aux(alt-32, did-29)
neg(alt-32, n't-30)
parataxis(went-24, alt-32)
mark(see-34, to-33)
xcomp(alt-32, see-34)
case(I-37, Till-36)
nmod:till(alt-32, I-37)
acl(I-37, eard-39)
det(squealin-42, a-40)
compound(squealin-42, beggar-41)
dobj(eard-39, squealin-42)
advmod(ran-50, out-44)
mark(ran-50, for-45)
nmod:poss(e-49, quarter-46)
advmod(quarter-46, as-47)
case(quarter-46, '-48)
nsubj(ran-50, e-49)
advcl(eard-39, ran-50)
nmod:poss(I-54, An-52)
case(An-52, '-53)
nsubj(thought-55, I-54)
parataxis(went-24, thought-55)
nsubj(knew-57, I-56)
ccomp(thought-55, knew-57)
det(voice-59, the-58)
dobj(knew-57, voice-59)
nsubj(me-65, it-63)
cop(me-65, was-64)
parataxis(went-24, me-65)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD was)
        (VP (`` `) (VBN idin) ('' ')
          (PP (IN under)
            (NP (NNS bedsteads)))
          (ADVP (JJR more) (IN than)
            (S
              (VP (`` `) (VB arf)
                (ADVP
                  (NP (DT a) (NN march))
                  (RB away))))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBD was)
        (VP (VBN lyin) ('' ')
          (PP (RP up)
            (PP (IN like)
              (NP (NNS rabbits))))
          (NP
            (NP (DT all))
            (PP (IN about)
              (NP (DT the) (NN countryside)))))))
    (: ;)
    (S
      (NP (NNP An) (POS ') (DT the) (JJ major) (NNS cursed))
      (`` `)
      (VP (VBZ is)
        (NP
          (NP
            (NP (NNP Maker) (NNP 'cause) (POS '))
            (NN e))
          (VP (VBN lived)
            (S
              (VP (TO to)
                (VP (VB see)
                  (NP (DT that) (NN day)))))))
        (PRN (, ,)
          (S
            (NP (NNP An) (POS ') (DT the) (NNP colonel))
            (VP (VBD broke))))
        (`` `)
        (SQ (VBZ is)
          (NP
            (NP (NN sword) (NN acrost))
            (, ,)
            (NP (DT an))
            ('' '))
          (VP (VBN cried)))))
    (. .)))

nsubjpass(idin-4, We-1)
auxpass(idin-4, was-2)
root(ROOT-0, idin-4)
case(bedsteads-7, under-6)
nmod:under(idin-4, bedsteads-7)
advmod(idin-4, more-8)
case(more-8, than-9)
dep(more-8, arf-11)
det(march-13, a-12)
nmod:npmod(away-14, march-13)
advmod(arf-11, away-14)
nsubjpass(lyin-18, We-16)
auxpass(lyin-18, was-17)
parataxis(idin-4, lyin-18)
dep(rabbits-22, up-20)
case(rabbits-22, like-21)
advcl(lyin-18, rabbits-22)
dobj(lyin-18, all-23)
case(countryside-26, about-24)
det(countryside-26, the-25)
nmod:about(all-23, countryside-26)
nmod:poss(cursed-32, An-28)
case(cursed-32, '-29)
det(cursed-32, the-30)
amod(cursed-32, major-31)
nsubj(e-38, cursed-32)
cop(e-38, is-34)
compound('cause-36, Maker-35)
nmod:poss(e-38, 'cause-36)
case('cause-36, '-37)
parataxis(idin-4, e-38)
acl(e-38, lived-39)
mark(see-41, to-40)
xcomp(lived-39, see-41)
det(day-43, that-42)
nmod:tmod(see-41, day-43)
nmod:poss(colonel-48, An-45)
case(colonel-48, '-46)
det(colonel-48, the-47)
nsubj(broke-49, colonel-48)
parataxis(e-38, broke-49)
auxpass(cried-57, is-51)
compound(acrost-53, sword-52)
nsubjpass(cried-57, acrost-53)
appos(acrost-53, an-55)
dep(e-38, cried-57)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD was)
        (VP (VBG rotten) (`` `)
          (NP
            (NP (NN fore))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBD started))))))))
    (: --)
    (S
      (NP (PRP we))
      (VP (VBD was)
        (ADVP (RB never))
        (VP (VBN disci_plined)
          (S
            (ADJP (JJ _))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBD made)
        (NP (PRP it))
        (PP (IN out)
          (NP (DT a) (NN favour)))
        (SBAR (IN if)
          (S
            (NP (DT an) (NN order))
            (VP (VBD was)
              (VP (VBN obeyed)))))))
    (: ;)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (DT every) (JJ little) (NN drummer) (`` `) (NN ad))
      (`` `)
      (VP (VBZ is)
        (NP
          (NP (NNS rights))
          (, an) ('' ')
          (SBAR
            (S
              (VP (VBZ wrongs)
                (S
                  (VP (TO to)
                    (VP (VB mind))))))))))
    (, ,) (IN So)
    (S
      (NP (PRP we))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB pay)
              (PP (IN for)
                (NP (NN teachin) (POS ')))
              (: --)
              (NP
                (NP (DT an))
                ('' ')
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBD paid))))))))))
    (. !)))

nsubj(rotten-3, We-1)
aux(rotten-3, was-2)
root(ROOT-0, rotten-3)
dobj(rotten-3, fore-5)
nsubj(started-7, we-6)
acl:relcl(fore-5, started-7)
nsubjpass(disci_plined-12, we-9)
auxpass(disci_plined-12, was-10)
neg(disci_plined-12, never-11)
parataxis(rotten-3, disci_plined-12)
xcomp(disci_plined-12, _-13)
nsubj(made-16, We-15)
parataxis(rotten-3, made-16)
dobj(made-16, it-17)
case(favour-20, out-18)
det(favour-20, a-19)
nmod:out(made-16, favour-20)
mark(obeyed-25, if-21)
det(order-23, an-22)
nsubjpass(obeyed-25, order-23)
auxpass(obeyed-25, was-24)
advcl(made-16, obeyed-25)
discourse(rights-36, Yes-27)
det(ad-33, every-29)
amod(ad-33, little-30)
compound(ad-33, drummer-31)
nsubj(rights-36, ad-33)
cop(rights-36, is-35)
parataxis(rotten-3, rights-36)
acl:relcl(rights-36, wrongs-39)
mark(mind-41, to-40)
xcomp(wrongs-39, mind-41)
dep(rotten-3, So-43)
nsubj(had-45, we-44)
nsubj:xsubj(pay-47, we-44)
parataxis(rotten-3, had-45)
mark(pay-47, to-46)
xcomp(had-45, pay-47)
case(teachin-49, for-48)
nmod:'(pay-47, teachin-49)
case(teachin-49, '-50)
dobj(pay-47, an-52)
nsubj(paid-55, we-54)
acl:relcl(an-52, paid-55)

(ROOT
  (S
    (S
      (NP (DT The) (NNS papers))
      (`` `)
      (VP (VBP id)
        (S
          (NP (PRP it))
          (`` `)
          (ADJP (JJ andsome)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBP know)
        (SBAR
          (S
            (NP (DT the) (NNP Army))
            (VP (VBZ knows)
              (S (: ;)
                (S
                  (NP (PRP We))
                  (VP (VBD was)
                    (VP (VBN put)
                      (S
                        (VP (TO to)
                          (VP (VB groomin) ('' ')
                            (NP
                              (NP
                                (NP (NNS camels))
                                (SBAR (IN till)
                                  (S
                                    (NP (DT the) (NNS regiments))
                                    (VP (VBD withdrew)))))
                              (, ,)
                              (NP (NNP An) (POS ')))))))))
                (S
                  (NP (PRP they))
                  (VP (VBD gave)
                    (NP (PRP us))
                    (NP (DT each)
                      (NP (DT a) (NN medal))
                      (PP (IN for)
                        (NP (NN subduin)))
                      ('' ')
                      (NP
                        (NP
                          (NP (NNP England) (POS 's))
                          (NNS foes))
                        (, ,)
                        (NP (NNP An) (POS '))))))
                (S
                  (NP (PRP I))
                  (`` `)
                  (VP (VBP ope)
                    (NP (PRP you))
                    (PP (IN like)
                      (NP (PRP$ my) (NN song)))
                    (: --)
                    (SBAR (IN because)
                      (S
                        (NP (PRP it))
                        (VP (VBZ 's)
                          (ADJP (JJ true)))))))))))))
    (. !)))

det(papers-2, The-1)
nsubj(id-4, papers-2)
root(ROOT-0, id-4)
dep(andsome-7, it-5)
xcomp(id-4, andsome-7)
cc(id-4, but-9)
nsubj(know-11, you-10)
conj:but(id-4, know-11)
det(Army-13, the-12)
nsubj(knows-14, Army-13)
ccomp(know-11, knows-14)
nsubjpass(put-18, We-16)
nsubj:xsubj(groomin-20, We-16)
auxpass(put-18, was-17)
xcomp(knows-14, put-18)
mark(groomin-20, to-19)
xcomp(put-18, groomin-20)
dobj(groomin-20, camels-22)
mark(withdrew-26, till-23)
det(regiments-25, the-24)
nsubj(withdrew-26, regiments-25)
acl:relcl(camels-22, withdrew-26)
appos(camels-22, An-28)
case(An-28, '-29)
nsubj(gave-31, they-30)
parataxis(put-18, gave-31)
iobj(gave-31, us-32)
det(medal-35, each-33)
det(medal-35, a-34)
dobj(gave-31, medal-35)
case(subduin-37, for-36)
nmod:for(medal-35, subduin-37)
nmod:poss(foes-41, England-39)
case(England-39, 's-40)
dep(medal-35, foes-41)
appos(foes-41, An-43)
case(An-43, '-44)
nsubj(ope-47, I-45)
parataxis(put-18, ope-47)
dobj(ope-47, you-48)
case(song-51, like-49)
nmod:poss(song-51, my-50)
nmod:like(ope-47, song-51)
mark(true-56, because-53)
nsubj(true-56, it-54)
cop(true-56, 's-55)
advcl(ope-47, true-56)

(ROOT
  (S
    (S
      (S
        (NP (NNP An) (POS '))
        (ADVP (RB there))
        (VP (VBP ai) (RB n't)
          (NP
            (NP (DT no) (NN chorus))
            (`` `)
            (VP (VBN ere)
              (S
                (VP (TO to)
                  (VP (VB give))))))))
      (, ,)
      (CC Nor)
      (S
        (S
          (NP (EX there))
          (VP (VBP ai) (RB n't)
            (NP (DT no) (NN band)
              (S
                (VP (TO to)
                  (VP (VB play)))))))
        (: ;)
        (CC But)
        (S
          (NP (PRP I))
          (VP (VBP wish)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD was)
                  (ADJP (JJ dead))
                  (S
                    (VP (`` `) (VB fore)
                      (S
                        (NP (PRP I))
                        (VP (VBN done)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP I))
                              (VP (VBD did)))))))))))))))
    (, ,)
    (CC Or)
    (S
      (VP (VBN seen)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBD seed)
              (NP (DT that) (NN day)))))))
    (. !)))

nsubj(chorus-7, An-1)
nsubj(seen-37, An-1)
case(An-1, '-2)
advmod(chorus-7, there-3)
cop(chorus-7, ai-4)
neg(chorus-7, n't-5)
neg(chorus-7, no-6)
root(ROOT-0, chorus-7)
acl(chorus-7, ere-9)
mark(give-11, to-10)
xcomp(ere-9, give-11)
cc(chorus-7, Nor-13)
expl(ai-15, there-14)
conj:nor(chorus-7, ai-15)
neg(ai-15, n't-16)
neg(band-18, no-17)
nsubj(ai-15, band-18)
mark(play-20, to-19)
acl(band-18, play-20)
cc(ai-15, But-22)
nsubj(wish-24, I-23)
conj:nor(chorus-7, wish-24)
conj:but(ai-15, wish-24)
nsubj(dead-27, I-25)
cop(dead-27, was-26)
ccomp(wish-24, dead-27)
ccomp(dead-27, fore-29)
nsubj(done-31, I-30)
dep(fore-29, done-31)
dobj(did-34, what-32)
nsubj(did-34, I-33)
ccomp(done-31, did-34)
cc(chorus-7, Or-36)
conj:nor(chorus-7, seen-37)
dobj(seed-40, what-38)
nsubj(seed-40, I-39)
ccomp(seen-37, seed-40)
det(day-42, that-41)
nmod:tmod(seed-40, day-42)

(ROOT
  (S (`` ``)
    (NP (DT THE) (NNP MEN) (NNP THAT) (NNP FOUGHT) (NNP AT) (NNP MINDEN))
    ('' '')
    (NP
      (NP
        (NP (DT A) (NN Song))
        (PP (IN of)
          (NP
            (NP (NNP Instruction))
            (NP
              (NP (DT The) (NNS men))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD fought)
                    (SBAR
                      (S
                        (PP (IN at)
                          (NP (NNP Minden)))
                        (, ,)
                        (NP (PRP they))
                        (VP (VBD was)
                          (NP
                            (NP (NNS rookies))
                            (PP (IN in)
                              (NP (PRP$ their) (NN time)))))))))))
            (: --))))
      (ADVP (RB So)))
    (VP (VBD was)
      (NP
        (NP (PRP them))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD fought)
              (PP (IN at)
                (NP (NNP Waterloo))))))))
    (. !)))

det(MINDEN-7, THE-2)
compound(MINDEN-7, MEN-3)
compound(MINDEN-7, THAT-4)
compound(MINDEN-7, FOUGHT-5)
compound(MINDEN-7, AT-6)
nsubj(them-29, MINDEN-7)
det(Song-10, A-9)
nsubj(them-29, Song-10)
case(Instruction-12, of-11)
nmod:of(Song-10, Instruction-12)
det(men-14, The-13)
dep(Instruction-12, men-14)
nsubj(fought-16, men-14)
ref(men-14, that-15)
acl:relcl(men-14, fought-16)
case(Minden-18, at-17)
nmod:at(rookies-22, Minden-18)
nsubj(rookies-22, they-20)
cop(rookies-22, was-21)
ccomp(fought-16, rookies-22)
case(time-25, in-23)
nmod:poss(time-25, their-24)
nmod:in(rookies-22, time-25)
advmod(Song-10, So-27)
cop(them-29, was-28)
root(ROOT-0, them-29)
nsubj(fought-31, them-29)
ref(them-29, that-30)
acl:relcl(them-29, fought-31)
case(Waterloo-33, at-32)
nmod:at(fought-31, Waterloo-33)

(ROOT
  (S
    (S
      (NP (PDT All) (DT the))
      (VP (`` `) (VBP ole)
        (NP
          (NP
            (NP (NN command))
            (, ,)
            (NP (NNS yuss))
            (, ,))
          (PP (IN from)
            (NP (NNP Minden))))
        (PP (TO to)
          (NP (NNP Maiwand)))))
    (, ,)
    (NP (PRP They))
    (VP (VBD was)
      (ADVP (RB once))
      (NP
        (NP
          (NP (NN dam) (POS '))
          (NNS sweeps))
        (PP (IN like)
          (NP (PRP you)))))
    (. !)))

det:predet(the-2, All-1)
nsubj(ole-4, the-2)
ccomp(sweeps-19, ole-4)
dobj(ole-4, command-5)
appos(command-5, yuss-7)
case(Minden-10, from-9)
nmod:from(command-5, Minden-10)
case(Maiwand-12, to-11)
nmod:to(ole-4, Maiwand-12)
nsubj(sweeps-19, They-14)
cop(sweeps-19, was-15)
advmod(sweeps-19, once-16)
nmod:poss(sweeps-19, dam-17)
case(dam-17, '-18)
root(ROOT-0, sweeps-19)
case(you-21, like-20)
nmod:like(sweeps-19, you-21)

(ROOT
  (S (RB Then)
    (VP (VB do) (RB not)
      (VP (VB be)
        (VP (VBN discouraged) (, ,) (`` `)
          (S
            (NP (NNP Eaven))
            (VP (VBZ is)
              (NP
                (NP (PRP$ your) (`` `) (NN elper))
                (, ,)
                (S
                  (S
                    (S
                      (NP (PRP We))
                      (VP (MD 'll)
                        (VP (VB learn)
                          (S
                            (NP (PRP you))
                            (RB not)
                            (VP (TO to)
                              (VP (VB forget)))))))
                    (: ;)
                    (S
                      (S
                        (NP
                          (NP (NNP An) (POS '))
                          (NN you))
                        (VP (MD must) (RB n't)
                          (VP (VB swear)
                            (NP
                              (NP (DT an))
                              (POS ') (NN curse)))))
                      (, ,)
                      (CC or)
                      (S
                        (NP (PRP you))
                        (VP (MD 'll)
                          (ADVP (RB only))
                          (VP (VB catch)
                            (S
                              (NP (PRP it))
                              (ADJP (RBR worse))))))))
                  (, ,) (IN For)
                  (S
                    (NP (PRP we))
                    (VP (MD 'll)
                      (VP (VB make)
                        (S
                          (NP (PRP you))
                          (NP (NNS soldiers)))
                        (ADVP (RB yet))))))))))))
    (. !)))

advmod(discouraged-5, Then-1)
aux(discouraged-5, do-2)
neg(discouraged-5, not-3)
auxpass(discouraged-5, be-4)
root(ROOT-0, discouraged-5)
nsubj(elper-12, Eaven-8)
cop(elper-12, is-9)
nmod:poss(elper-12, your-10)
ccomp(discouraged-5, elper-12)
nsubj(learn-16, We-14)
aux(learn-16, 'll-15)
dep(elper-12, learn-16)
dobj(learn-16, you-17)
nsubj:xsubj(forget-20, you-17)
neg(forget-20, not-18)
mark(forget-20, to-19)
xcomp(learn-16, forget-20)
nmod:poss(you-24, An-22)
case(An-22, '-23)
nsubj(swear-27, you-24)
aux(swear-27, must-25)
neg(swear-27, n't-26)
parataxis(learn-16, swear-27)
nmod:poss(curse-30, an-28)
case(curse-30, '-29)
dobj(swear-27, curse-30)
cc(swear-27, or-32)
nsubj(catch-36, you-33)
aux(catch-36, 'll-34)
advmod(catch-36, only-35)
parataxis(learn-16, catch-36)
conj:or(swear-27, catch-36)
nsubj(worse-38, it-37)
xcomp(catch-36, worse-38)
dep(learn-16, For-40)
nsubj(make-43, we-41)
aux(make-43, 'll-42)
parataxis(learn-16, make-43)
nsubj(soldiers-45, you-44)
xcomp(make-43, soldiers-45)
advmod(make-43, yet-46)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS men))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD fought)
            (PP (IN at)
              (NP (NNP Minden)))
            (, ,)
            (S
              (NP (PRP they))
              (NP (`` `)
                (NP
                  (NP (NN ad) (NNS stocks))
                  (PP (IN beneath)
                    (NP
                      (NP (PRP$ their) (NNS chins))
                      (, ,)
                      (NP (CD Six) (NN inch) (`` `) (NNS igh)))))
                (, an) ('' ')
                (NP
                  (NP (JJR more))
                  (: ;)
                  (S
                    (S (CC But)
                      (ADVP (RB fatigue))
                      (NP (PRP it))
                      (VP (VBD was)
                        (NP (PRP$ their) (NN pride))))
                    (, ,)
                    (CC and)
                    (S
                      (NP (PRP they))
                      (VP (VBZ _)))))))))))
    (VP (MD would)
      (ADVP (RB _))
      (RB not)
      (VP (VB be)
        (VP (VBN denied)
          (S
            (VP (TO To)
              (VP (VB clean)
                (NP
                  (NP (DT the) (NN cook))
                  (: -) (`` `)
                  (NP (JJ ouse) (NN floor)))))))))
    (. .)))

det(men-2, The-1)
nsubj(fought-4, men-2)
nsubjpass(denied-38, men-2)
nsubj:xsubj(clean-40, men-2)
ref(men-2, that-3)
acl:relcl(men-2, fought-4)
case(Minden-6, at-5)
nmod:at(fought-4, Minden-6)
nsubj(stocks-11, they-8)
compound(stocks-11, ad-10)
xcomp(fought-4, stocks-11)
case(chins-14, beneath-12)
nmod:poss(chins-14, their-13)
nmod:beneath(stocks-11, chins-14)
nummod(igh-19, Six-16)
compound(igh-19, inch-17)
appos(chins-14, igh-19)
dep(stocks-11, more-22)
cc(pride-29, But-24)
advmod(pride-29, fatigue-25)
nsubj(pride-29, it-26)
cop(pride-29, was-27)
nmod:poss(pride-29, their-28)
dep(more-22, pride-29)
cc(pride-29, and-31)
nsubj(_-33, they-32)
dep(more-22, _-33)
conj:and(pride-29, _-33)
aux(denied-38, would-34)
advmod(denied-38, _-35)
neg(denied-38, not-36)
auxpass(denied-38, be-37)
root(ROOT-0, denied-38)
mark(clean-40, To-39)
xcomp(denied-38, clean-40)
det(cook-42, the-41)
dobj(clean-40, cook-42)
amod(floor-46, ouse-45)
dep(cook-42, floor-46)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS men))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD fought)
            (PP (IN at)
              (NP (NNP Minden)))))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBD had)
        (NP
          (NP (JJ anarchistic) (NNS bombs))
          (VP (VBN Served)
            (PP (TO to)
              (NP (PRP 'em)))
            (PP (IN by)
              (NP
                (NP (NN name))
                (PP (IN of) (`` `)
                  (NP (NNS and-grenades)))))))))
    (: ;)
    (CC But)
    (S
      (NP (PRP they))
      (VP (VBD got)
        (NP (PRP it))
        (PP (IN in)
          (NP (DT the) (NN eye)))
        (PRN (-LRB- -LRB-)
          (ADJP
            (ADJP (JJ same))
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (MD will)
                  (VP
                    (VP (VBN by-an))
                    ('' ') (: -)
                    (PP (IN by)))))))
          (-RRB- -RRB-))
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP they))
            (VP (VBD clubbed)
              (NP (PRP$ their) (NNS field-parades)))))))
    (. .)))

det(men-2, The-1)
nsubj(fought-4, men-2)
dep(had-9, men-2)
ref(men-2, that-3)
acl:relcl(men-2, fought-4)
case(Minden-6, at-5)
nmod:at(fought-4, Minden-6)
nsubj(had-9, they-8)
root(ROOT-0, had-9)
amod(bombs-11, anarchistic-10)
dobj(had-9, bombs-11)
acl(bombs-11, Served-12)
case('em-14, to-13)
nmod:to(Served-12, 'em-14)
case(name-16, by-15)
nmod:by(Served-12, name-16)
case(and-grenades-19, of-17)
nmod:of(name-16, and-grenades-19)
cc(had-9, But-21)
nsubj(got-23, they-22)
conj:but(had-9, got-23)
dobj(got-23, it-24)
case(eye-27, in-25)
det(eye-27, the-26)
nmod:in(got-23, eye-27)
dep(got-23, same-29)
mark(by-an-33, as-30)
nsubj(by-an-33, you-31)
aux(by-an-33, will-32)
dep(same-29, by-an-33)
nmod(by-an-33, by-36)
advmod(clubbed-40, When-38)
nsubj(clubbed-40, they-39)
advcl(got-23, clubbed-40)
nmod:poss(field-parades-42, their-41)
dobj(clubbed-40, field-parades-42)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (DT The) (NNS men))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD fought)
                (PP (IN at)
                  (NP (NNP Minden)))))))
        (, ,)
        (NP
          (NP
            (NP
              (NP
                (NP (PRP they))
                (NP (`` `)
                  (NP (NN ad) (NNS buttons))
                  (PP (IN up)
                    (NP (DT an)))
                  ('' ')))
              (ADVP (IN down)))
            (, ,)
            (NP (NNP Two-an) (POS ')))
          (: -)
          (S
            (S
              (NP
                (NP (CD twenty) (NN dozen))
                (PP (IN of)
                  (NP (PRP 'em))))
              (VP (VBD told)))
            (: ;)
            (S (CC But)
              (NP (PRP they))
              (VP (VBD did) (RB n't)
                (VP (VB grouse))))))
        (, an) ('' '))
      (VP (VB shirk)
        (PP (IN at)
          (NP
            (NP (DT an) (NN hour) (POS 's))
            (JJ extry) (NN work)))))
    (, ,)
    (NP (PRP They))
    (VP (VBD kept)
      (S
        (NP (PRP 'em))
        (ADJP (JJ bright)
          (PP (IN as)
            (NP (NN gold))))))
    (. .)))

det(men-2, The-1)
nsubj(fought-4, men-2)
nsubj(shirk-33, men-2)
ref(men-2, that-3)
acl:relcl(men-2, fought-4)
case(Minden-6, at-5)
nmod:at(fought-4, Minden-6)
appos(men-2, they-8)
compound(buttons-11, ad-10)
dep(they-8, buttons-11)
case(an-13, up-12)
nmod:up(buttons-11, an-13)
advmod(they-8, down-15)
appos(they-8, Two-an-17)
case(Two-an-17, '-18)
nummod(dozen-21, twenty-20)
nsubj(told-24, dozen-21)
case('em-23, of-22)
nmod:of(dozen-21, 'em-23)
parataxis(they-8, told-24)
cc(grouse-30, But-26)
nsubj(grouse-30, they-27)
aux(grouse-30, did-28)
neg(grouse-30, n't-29)
parataxis(told-24, grouse-30)
ccomp(kept-42, shirk-33)
case(work-39, at-34)
det(hour-36, an-35)
nmod:poss(work-39, hour-36)
case(hour-36, 's-37)
amod(work-39, extry-38)
nmod:at(shirk-33, work-39)
nsubj(kept-42, They-41)
root(ROOT-0, kept-42)
nsubj(bright-44, 'em-43)
xcomp(kept-42, bright-44)
case(gold-46, as-45)
nmod:as(bright-44, gold-46)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS men))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD fought)
              (SBAR
                (S
                  (PP (IN at)
                    (NP (NNP Minden)))
                  (, ,)
                  (NP (PRP they))
                  (VP (VBD was)
                    (VP (VBN armed)
                      (PP (IN with)
                        (NP (NNS musketoons)))))))))))
      (, ,)
      (ADVP (RB Also))
      (, ,)
      (NP (PRP they))
      (VP (VBD was)
        (VP (VBN drilled)
          (PP (IN by) (`` `)
            (NP (NNS alberdiers))))))
    (: ;)
    (S
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP they))
                (VP (VBD were)))))))
      (, ,)
      (CC but)
      (S
        (NP (DT the) (NNS sergeants))
        (VP (VBD took)
          (NP
            (NP (JJ good) (NN care))
            (SBAR
              (S
                (NP (PRP They))
                (VP (VBD washed)
                  (VP (VBN be'ind)
                    (NP (PRP$ their) (NNS ears))))))))))
    (. .)))

det(men-2, The-1)
nsubj(fought-4, men-2)
nsubjpass(drilled-18, men-2)
ref(men-2, that-3)
acl:relcl(men-2, fought-4)
case(Minden-6, at-5)
nmod:at(armed-10, Minden-6)
nsubjpass(armed-10, they-8)
auxpass(armed-10, was-9)
ccomp(fought-4, armed-10)
case(musketoons-12, with-11)
nmod:with(armed-10, musketoons-12)
advmod(drilled-18, Also-14)
nsubjpass(drilled-18, they-16)
auxpass(drilled-18, was-17)
root(ROOT-0, drilled-18)
case(alberdiers-21, by-19)
nmod:by(drilled-18, alberdiers-21)
nsubj(know-26, I-23)
aux(know-26, do-24)
neg(know-26, n't-25)
parataxis(drilled-18, know-26)
dobj(were-29, what-27)
nsubj(were-29, they-28)
ccomp(know-26, were-29)
cc(know-26, but-31)
det(sergeants-33, the-32)
nsubj(took-34, sergeants-33)
parataxis(drilled-18, took-34)
conj:but(know-26, took-34)
amod(care-36, good-35)
dobj(took-34, care-36)
nsubj(washed-38, They-37)
acl:relcl(care-36, washed-38)
dep(washed-38, be'ind-39)
nmod:poss(ears-41, their-40)
dobj(be'ind-39, ears-41)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS men))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD fought)
            (PP (IN at)
              (NP
                (NP (NNP Minden))
                (, ,)
                (NP (PRP they))))
            (NP (`` `)
              (NP (NN ad))
              (ADJP (RB ever) (NN cash))
              (PP (IN in))
              (`` `)
              (CC and)
              (SBAR
                (WHNP (WDT Which))
                (S
                  (S
                    (NP (PRP they))
                    (VP
                      (VP (VBD did)
                        (NP (RB not) (NN bank)))
                      (CC nor)
                      (VP (VB save))))
                  (, ,)
                  (CC But)
                  (SINV
                    (VP (VBD spent)
                      (S
                        (NP (PRP it))
                        (NP
                          (NP
                            (NP (JJ gay) (DT an))
                            ('' ')
                            (PP
                              (ADVP (JJ free))
                              (IN on)
                              (NP (PRP$ their) (NNS betters))))
                          (PRN (: --)
                            (PP (JJ such) (IN as)
                              (NP (PRP me)))
                            (: --)))
                        (PP (IN For)
                          (NP (DT the) (JJ good) (NN advice)))))
                    (NP (PRP I))))))))))
    (VP (VBD gave))
    (. .)))

det(men-2, The-1)
nsubj(fought-4, men-2)
nsubj(gave-44, men-2)
ref(men-2, that-3)
acl:relcl(men-2, fought-4)
case(Minden-6, at-5)
nmod:at(fought-4, Minden-6)
appos(Minden-6, they-8)
dobj(fought-4, ad-10)
advmod(cash-12, ever-11)
amod(ad-10, cash-12)
acl(ad-10, in-13)
cc(ad-10, and-15)
dep(did-18, Which-16)
nsubj(did-18, they-17)
nsubj(save-22, they-17)
dobj(fought-4, did-18)
conj:and(ad-10, did-18)
neg(bank-20, not-19)
dobj(did-18, bank-20)
cc(did-18, nor-21)
conj:and(ad-10, save-22)
conj:nor(did-18, save-22)
cc(did-18, But-24)
conj:and(ad-10, spent-25)
conj:but(did-18, spent-25)
nsubj(gay-27, it-26)
xcomp(spent-25, gay-27)
dep(gay-27, an-28)
advmod(betters-33, free-30)
case(betters-33, on-31)
nmod:poss(betters-33, their-32)
nmod:on(gay-27, betters-33)
case(me-37, such-35)
mwe(such-35, as-36)
nmod:such_as(gay-27, me-37)
case(advice-42, For-39)
det(advice-42, the-40)
amod(advice-42, good-41)
dep(gay-27, advice-42)
nsubj(spent-25, I-43)
root(ROOT-0, gave-44)

(ROOT
  (FRAG
    (S
      (S
        (NP
          (NP (DT The) (NNS men))
          (SBAR
            (S
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD fought)
                    (SBAR
                      (S
                        (PP (IN at)
                          (NP (NNP Minden)))
                        (, ,)
                        (NP (PRP they))
                        (VP (VBD was)
                          (ADJP (JJ civil))))))))
              (PRN (: --)
                (S
                  (NP (NNS yuss))
                  (, ,)
                  (NP (PRP they))
                  (VP (VBD was)))
                (: --))
              (ADVP (RB Never))
              (VP (VBD did) (RB n't)
                (VP (VB talk)
                  (NP
                    (NP (NNP o) (POS '))
                    (NNS rights))))))
          (, an) ('' '))
        (VP (VBZ wrongs)))
      (, ,)
      (CC But)
      (S
        (NP (PRP they))
        (VP
          (VP (VBD got)
            (NP (PRP it))
            (PP (IN with)
              (NP (DT the) (NN toe))))
          (PRN (-LRB- -LRB-)
            (ADVP
              (ADVP (JJ same))
              (SBAR (IN as)
                (S
                  (NP (PRP you))
                  (VP (MD will)
                    (VP (VB get)
                      (NP (PRP it))
                      (: --)
                      (ADVP (RB so))))))
              (. !))
            (-RRB- -RRB-)))))))

det(men-2, The-1)
nsubj(fought-4, men-2)
nsubj(wrongs-26, men-2)
ref(men-2, that-3)
csubj(talk-20, fought-4)
case(Minden-6, at-5)
nmod:at(civil-10, Minden-6)
nsubj(civil-10, they-8)
cop(civil-10, was-9)
ccomp(fought-4, civil-10)
nsubj(was-15, yuss-12)
nsubj(was-15, they-14)
parataxis(talk-20, was-15)
neg(talk-20, Never-17)
aux(talk-20, did-18)
neg(talk-20, n't-19)
acl:relcl(men-2, talk-20)
nmod:poss(rights-23, o-21)
case(o-21, '-22)
dobj(talk-20, rights-23)
root(ROOT-0, wrongs-26)
cc(wrongs-26, But-28)
nsubj(got-30, they-29)
conj:but(wrongs-26, got-30)
dobj(got-30, it-31)
case(toe-34, with-32)
det(toe-34, the-33)
nmod:with(got-30, toe-34)
dep(got-30, same-36)
mark(get-40, as-37)
nsubj(get-40, you-38)
aux(get-40, will-39)
advcl(same-36, get-40)
dobj(get-40, it-41)
advmod(get-40, so-43)

(ROOT
  (PRN (: --)
    (PP (IN For)
      (S
        (VP (VBG interrupting)
          (NP (NNS songs))))
      (. .))))

mark(interrupting-3, For-2)
root(ROOT-0, interrupting-3)
dobj(interrupting-3, songs-4)

(ROOT
  (FRAG
    (NP
      (NP (DT The) (NNS men))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD fought)
            (SBAR
              (S
                (PP (IN at)
                  (NP (NNP Minden)))
                (, ,)
                (NP (PRP they))
                (VP (VBD was)
                  (NP
                    (NP (JJ several) (JJ other) (NNS things))
                    (SBAR
                      (WHNP (WDT Which))
                      (S
                        (NP (PRP I))
                        (VP (VBP do) (RB n't)
                          (VP (VB remember)
                            (ADJP (JJ clear))))))))))))))
    (: ;)
    (S (CC But)
      (ADVP (RB _))
      (NP (DT that))
      (VP (VBZ 's)
        (VP (VBG _)
          (NP
            (NP (DT the) (NN reason))
            (SBAR
              (WHADVP (WRB why))
              (PRN (, ,)
                (S
                  (ADVP (RB now))
                  (NP (DT the) (JJ six-year) (NNS men))
                  (VP (VBP are)
                    (ADJP (JJ dry))))
                (, ,))
              (S
                (NP (DT The) (NNS rooks))
                (VP (MD will)
                  (VP (VB stand)
                    (NP (DT the) (NN beer))))))))))
    (. !)))

det(men-2, The-1)
root(ROOT-0, men-2)
nsubj(fought-4, men-2)
ref(men-2, that-3)
acl:relcl(men-2, fought-4)
case(Minden-6, at-5)
nmod:at(things-12, Minden-6)
nsubj(things-12, they-8)
cop(things-12, was-9)
amod(things-12, several-10)
amod(things-12, other-11)
ccomp(fought-4, things-12)
dobj(clear-18, things-12)
ref(things-12, Which-13)
nsubj(remember-17, I-14)
aux(remember-17, do-15)
neg(remember-17, n't-16)
acl:relcl(things-12, remember-17)
xcomp(remember-17, clear-18)
cc(_-24, But-20)
advmod(_-24, _-21)
nsubj(_-24, that-22)
aux(_-24, 's-23)
parataxis(men-2, _-24)
det(reason-26, the-25)
dobj(_-24, reason-26)
advmod(stand-39, why-27)
advmod(dry-34, now-29)
det(men-32, the-30)
amod(men-32, six-year-31)
nsubj(dry-34, men-32)
cop(dry-34, are-33)
dep(stand-39, dry-34)
det(rooks-37, The-36)
nsubj(stand-39, rooks-37)
aux(stand-39, will-38)
acl:relcl(reason-26, stand-39)
det(beer-41, the-40)
dobj(stand-39, beer-41)

(ROOT
  (S (RB Then)
    (VP (VB do) (RB not)
      (VP (VB be)
        (VP (VBN discouraged) (, ,) (`` `)
          (S
            (NP (NNP Eaven))
            (VP (VBZ is)
              (NP
                (NP (PRP$ your) (`` `) (NN elper))
                (, ,)
                (S
                  (S
                    (S
                      (NP (PRP We))
                      (VP (MD 'll)
                        (VP (VB learn)
                          (S
                            (NP (PRP you))
                            (RB not)
                            (VP (TO to)
                              (VP (VB forget)))))))
                    (: ;)
                    (S
                      (S
                        (NP
                          (NP (NNP An) (POS '))
                          (NN you))
                        (VP (MD must) (RB n't)
                          (VP (VB swear)
                            (NP
                              (NP (DT an))
                              (POS ') (NN curse)))))
                      (, ,)
                      (CC or)
                      (S
                        (NP (PRP you))
                        (VP (MD 'll)
                          (ADVP (RB only))
                          (VP (VB catch)
                            (S
                              (NP (PRP it))
                              (ADJP (RBR worse))))))))
                  (, ,) (IN For)
                  (S
                    (NP (PRP we))
                    (VP (MD 'll)
                      (VP (VB make)
                        (S
                          (NP (PRP you))
                          (NP (NNS soldiers)))
                        (ADVP (RB yet))))))))))))
    (. !)))

advmod(discouraged-5, Then-1)
aux(discouraged-5, do-2)
neg(discouraged-5, not-3)
auxpass(discouraged-5, be-4)
root(ROOT-0, discouraged-5)
nsubj(elper-12, Eaven-8)
cop(elper-12, is-9)
nmod:poss(elper-12, your-10)
ccomp(discouraged-5, elper-12)
nsubj(learn-16, We-14)
aux(learn-16, 'll-15)
dep(elper-12, learn-16)
dobj(learn-16, you-17)
nsubj:xsubj(forget-20, you-17)
neg(forget-20, not-18)
mark(forget-20, to-19)
xcomp(learn-16, forget-20)
nmod:poss(you-24, An-22)
case(An-22, '-23)
nsubj(swear-27, you-24)
aux(swear-27, must-25)
neg(swear-27, n't-26)
parataxis(learn-16, swear-27)
nmod:poss(curse-30, an-28)
case(curse-30, '-29)
dobj(swear-27, curse-30)
cc(swear-27, or-32)
nsubj(catch-36, you-33)
aux(catch-36, 'll-34)
advmod(catch-36, only-35)
parataxis(learn-16, catch-36)
conj:or(swear-27, catch-36)
nsubj(worse-38, it-37)
xcomp(catch-36, worse-38)
dep(learn-16, For-40)
nsubj(make-43, we-41)
aux(make-43, 'll-42)
parataxis(learn-16, make-43)
nsubj(soldiers-45, you-44)
xcomp(make-43, soldiers-45)
advmod(make-43, yet-46)

(ROOT
  (FRAG
    (ADVP (RB Soldiers) (RB yet))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP 've)
          (VP (VBN got)
            (NP (PRP it))
            (PP (IN in)
              (NP (PRP you)))))))
    (: --)
    (S
      (NP
        (NP
          (NP (DT All))
          (PP (IN for)
            (NP
              (NP (DT the) (NN sake))
              (PP (IN of)
                (NP (DT the) (NNP Core))))))
        (: ;)
        (VP (VBN Soldiers)
          (ADVP (RB yet))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (`` `)
              (VP (VBP ave)
                (S
                  (VP (TO to)
                    (VP (VB skin)
                      (NP (PRP you)))))
                (: --)
                (NP (NNP Run))))))
        (, an) ('' '))
      (VP (VBP get)
        (NP
          (NP
            (NP (DT the) (NN beer))
            (, ,)
            (NP (NNP Johnny) (NNP Raw)))
          (: --)
          (NP (NNP Johnny) (NNP Raw)))))
    (. !)))

advmod(yet-2, Soldiers-1)
root(ROOT-0, yet-2)
mark(got-7, if-4)
nsubj(got-7, you-5)
aux(got-7, 've-6)
dep(yet-2, got-7)
dobj(got-7, it-8)
case(you-10, in-9)
nmod:in(got-7, you-10)
nsubj(get-34, All-12)
case(sake-15, for-13)
det(sake-15, the-14)
nmod:for(All-12, sake-15)
case(Core-18, of-16)
det(Core-18, the-17)
nmod:of(sake-15, Core-18)
acl(All-12, Soldiers-20)
advmod(Soldiers-20, yet-21)
mark(ave-26, if-23)
nsubj(ave-26, we-24)
advcl(Soldiers-20, ave-26)
mark(skin-28, to-27)
xcomp(ave-26, skin-28)
dobj(skin-28, you-29)
dobj(ave-26, Run-31)
nsubj:xsubj(skin-28, Run-31)
parataxis(yet-2, get-34)
det(beer-36, the-35)
dobj(get-34, beer-36)
compound(Raw-39, Johnny-38)
appos(beer-36, Raw-39)
compound(Raw-42, Johnny-41)
dep(beer-36, Raw-42)

(ROOT
  (INTJ (UH Ho) (. !)))

root(ROOT-0, Ho-1)

(ROOT
  (S
    (VP (VB run)
      (NP (DT an)
        (S
          (NP (POS '))
          (VP (VBP get)
            (NP (DT the) (NN beer))))))
    (, ,)
    (NP (NNP Johnny) (NNP Raw))
    (. !)))

root(ROOT-0, run-1)
dobj(run-1, an-2)
nsubj(get-4, '-3)
dep(an-2, get-4)
det(beer-6, the-5)
dobj(get-4, beer-6)
compound(Raw-9, Johnny-8)
dep(run-1, Raw-9)

(ROOT
  (S
    (S
      (NP (NNP CHOLERA))
      (VP (VBP CAMP)
        (SBAR
          (S
            (NP (PRP We))
            (VP (VBP 've)
              (VP (VBN got)
                (NP
                  (NP (DT the) (NN cholerer))
                  (PP (IN in)
                    (NP (NN camp))))))))))
    (: --)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP
          (ADJP (JJR worse))
          (PP (IN than)
            (NP (JJ forty) (NNS fights))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBP 're)
        (VP (VBN dyin) ('' ')
          (PP (IN in)
            (NP (DT the) (NN wilderness)))
          (NP
            (NP (DT the) (JJ same))
            (PP (IN as)
              (NP (NNP Isrulites)))))))
    (: ;)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (PP (IN before)
          (NP
            (NP (PRP us))
            (, ,)
            (NP
              (NP (DT an))
              ('' ')
              (VP (VBN be'ind)
                (NP (PRP us)))
              (, ,))
            (, an) ('' ')
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD can) (RB not)
                  (VP (VB get)
                    (PRT (RP away))))))))))
    (, ,)
    (S
      (NP
        (NP (NNP An) (POS '))
        (NP (DT the)
          (NP (NN doctor) (POS 's))))
      (ADVP (RB just))
      (VP (VBD reported)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP 've)
              (NP (CD ten) (JJR more) (NN to-day)))))))
    (. !)))

nsubj(CAMP-2, CHOLERA-1)
root(ROOT-0, CAMP-2)
nsubj(got-5, We-3)
aux(got-5, 've-4)
ccomp(CAMP-2, got-5)
det(cholerer-7, the-6)
dobj(got-5, cholerer-7)
case(camp-9, in-8)
nmod:in(cholerer-7, camp-9)
nsubj(worse-13, it-11)
cop(worse-13, 's-12)
parataxis(CAMP-2, worse-13)
case(fights-16, than-14)
amod(fights-16, forty-15)
nmod:than(worse-13, fights-16)
nsubjpass(dyin-20, We-18)
auxpass(dyin-20, 're-19)
parataxis(CAMP-2, dyin-20)
case(wilderness-24, in-22)
det(wilderness-24, the-23)
nmod:in(dyin-20, wilderness-24)
det(same-26, the-25)
dobj(dyin-20, same-26)
case(Isrulites-28, as-27)
nmod:as(same-26, Isrulites-28)
nsubj(us-33, It-30)
cop(us-33, 's-31)
case(us-33, before-32)
parataxis(CAMP-2, us-33)
appos(us-33, an-35)
acl(an-35, be'ind-37)
dobj(be'ind-37, us-38)
nsubj(get-45, we-42)
aux(get-45, can-43)
neg(get-45, not-44)
acl:relcl(us-33, get-45)
compound:prt(get-45, away-46)
nsubj(reported-54, An-48)
case(An-48, '-49)
det(doctor-51, the-50)
dep(An-48, doctor-51)
case(doctor-51, 's-52)
advmod(reported-54, just-53)
parataxis(CAMP-2, reported-54)
nsubj('ve-56, we-55)
ccomp(reported-54, 've-56)
nummod(to-day-59, ten-57)
amod(to-day-59, more-58)
dobj('ve-56, to-day-59)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (VP (VB strike)
        (NP
          (NP (PRP$ your) (NN camp))
          (, an) ('' ')
          (NP
            (NP (NN go))
            (, ,)
            (NP
              (NP (DT the)
                (NP (NNP Bugle) (POS 's))
                (NN callin) ('' '))
              (, ,)
              (S
                (S
                  (NP (DT The) (NNPS Rains))
                  (VP (VBP are)
                    (ADJP (JJ fallin) ('' '))))
                (: --)
                (S
                  (NP (DT The) (NN dead))
                  (VP (VBP are)
                    (VP (VBN bushed)))))))
          (, an) ('' ')
          (ADJP (VBN stoned)
            (S
              (VP (TO to)
                (VP (VB keep)
                  (S
                    (NP (PRP 'em))
                    (ADJP (JJ safe)))
                  (PP (IN below) (: ;)
                    (NP
                      (NP
                        (NP (DT The) (NNP Band) (POS 's))
                        (NN a-doin))
                      ('' ')
                      (SBAR
                        (WHNP (DT all))
                        (S
                          (NP (PRP she))
                          (VP (VBZ knows)
                            (S
                              (VP (TO to)
                                (VP (VB cheer)
                                  (NP (PRP us)))))))))))))))))
    (: ;)
    (S
      (NP (DT The) (NNP Chaplain))
      (VP (VBZ 's)
        (VP
          (VP (VBN gone))
          (CC and)
          (VP (VBN prayed)
            (S
              (VP (TO to)
                (VP (VB Gawd)
                  (S
                    (VP (TO to)
                      (VP (`` `) (VB ear)
                        (NP (PRP us))
                        (PRN (: --)
                          (VP (TO To) (`` `)
                            (VP (VB ear)
                              (NP (PRP us))))
                          (: --))
                        (NP
                          (NP (NNP O) (NNP Lord))
                          (, ,)
                          (PP (IN for)
                            (NP
                              (NP (PRP it) (POS 's))
                              (NN a-killin))))
                        ('' ')
                        (PP (IN of)
                          (NP (PRP us)))))))))
            (ADVP (RB so))))))
    (. !)))

discourse(strike-3, Oh-1)
root(ROOT-0, strike-3)
nmod:poss(camp-5, your-4)
dobj(strike-3, camp-5)
dep(camp-5, go-8)
det(callin-13, the-10)
nmod:poss(callin-13, Bugle-11)
case(Bugle-11, 's-12)
appos(go-8, callin-13)
det(Rains-17, The-16)
nsubj(fallin-19, Rains-17)
cop(fallin-19, are-18)
dep(callin-13, fallin-19)
det(dead-23, The-22)
nsubjpass(bushed-25, dead-23)
auxpass(bushed-25, are-24)
parataxis(fallin-19, bushed-25)
amod(camp-5, stoned-28)
mark(keep-30, to-29)
xcomp(stoned-28, keep-30)
nsubj(safe-32, 'em-31)
xcomp(keep-30, safe-32)
case(a-doin-38, below-33)
det(Band-36, The-35)
nmod:poss(a-doin-38, Band-36)
case(Band-36, 's-37)
nmod:below(keep-30, a-doin-38)
dobj(knows-42, all-40)
nsubj:xsubj(cheer-44, all-40)
nsubj(knows-42, she-41)
acl:relcl(a-doin-38, knows-42)
mark(cheer-44, to-43)
xcomp(knows-42, cheer-44)
dobj(cheer-44, us-45)
det(Chaplain-48, The-47)
nsubjpass(gone-50, Chaplain-48)
nsubjpass(prayed-52, Chaplain-48)
nsubj:xsubj(Gawd-54, Chaplain-48)
auxpass(gone-50, 's-49)
parataxis(strike-3, gone-50)
cc(gone-50, and-51)
parataxis(strike-3, prayed-52)
conj:and(gone-50, prayed-52)
mark(Gawd-54, to-53)
xcomp(prayed-52, Gawd-54)
mark(ear-57, to-55)
xcomp(Gawd-54, ear-57)
dobj(ear-57, us-58)
mark(ear-62, To-60)
dep(ear-57, ear-62)
dobj(ear-62, us-63)
compound(Lord-66, O-65)
dobj(ear-57, Lord-66)
case(a-killin-71, for-68)
nmod:poss(a-killin-71, it-69)
case(it-69, 's-70)
nmod:for(Lord-66, a-killin-71)
case(us-74, of-73)
nmod:of(ear-57, us-74)
advmod(prayed-52, so-75)

(ROOT
  (S
    (PP (IN Since)
      (NP (NNP August)))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBD started))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (VP (VBN been)
          (VP (VBN stickin) ('' ')
            (PP (TO to)
              (NP (PRP$ our) (NN tail)))))))
    (, ,)
    (S
      (SBAR (IN Though)
        (S
          (NP (PRP they))
          (VP (VBP 've)
            (NP (`` `)
              (NP
                (NP (NN ad))
                (NP
                  (NP (PRP us))
                  (NP
                    (ADVP (IN out)
                      (PP (IN by)
                        (NP (NNS marches))))
                    (DT an))))
              ('' ')
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP 've) (`` `)
                    (NP (NN ad)))))))))
      (S
        (NP (PRP us))
        (VP (VBP back)
          (PP (IN by)
            (NP (NN rail)))))
      (: ;)
      (CC But)
      (S
        (NP (PRP it))
        (VP (VBZ runs)
          (ADVP (RB as) (RB fast))
          (PP (IN as)
            (NP (NNS troop-trains))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP we))
        (VP (MD can) (RB not)
          (VP (VB get)
            (PRT (RP away)))))
      (: ;)
      (S
        (NP
          (NP (NNP An) (POS '))
          (NP (DT the) (NN sick-list))
          (PP (TO to)
            (NP (DT the) (NNP Colonel))))
        (VP (VBZ makes)
          (NP (CD ten) (JJR more) (NN to-day)))))
    (. .)))

case(August-2, Since-1)
nmod:since(stickin-11, August-2)
advmod(started-6, when-4)
nsubj(started-6, it-5)
advcl(stickin-11, started-6)
nsubjpass(stickin-11, it-8)
auxpass(stickin-11, 's-9)
auxpass(stickin-11, been-10)
root(ROOT-0, stickin-11)
case(tail-15, to-13)
nmod:poss(tail-15, our-14)
nmod:to(stickin-11, tail-15)
mark('ve-19, Though-17)
nsubj('ve-19, they-18)
advcl(back-33, 've-19)
dobj('ve-19, ad-21)
dep(ad-21, us-22)
advmod(an-26, out-23)
case(marches-25, by-24)
nmod:by(out-23, marches-25)
dep(us-22, an-26)
nsubj('ve-29, they-28)
acl:relcl(ad-21, 've-29)
dobj('ve-29, ad-31)
nsubj(back-33, us-32)
ccomp(stickin-11, back-33)
case(rail-35, by-34)
nmod:by(back-33, rail-35)
cc(back-33, But-37)
nsubj(runs-39, it-38)
ccomp(stickin-11, runs-39)
conj:but(back-33, runs-39)
advmod(fast-41, as-40)
advmod(runs-39, fast-41)
case(troop-trains-43, as-42)
nmod:as(runs-39, troop-trains-43)
cc(stickin-11, and-45)
nsubj(get-49, we-46)
aux(get-49, can-47)
neg(get-49, not-48)
conj:and(stickin-11, get-49)
compound:prt(get-49, away-50)
nsubj(makes-59, An-52)
case(An-52, '-53)
det(sick-list-55, the-54)
dep(An-52, sick-list-55)
case(Colonel-58, to-56)
det(Colonel-58, the-57)
nmod:to(An-52, Colonel-58)
parataxis(get-49, makes-59)
nummod(to-day-62, ten-60)
amod(to-day-62, more-61)
dobj(makes-59, to-day-62)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP ai) (RB n't)
        (NP
          (NP (DT no) (NN fun))
          (PP (IN in)
            (NP (NNS women))))))
    (CC nor)
    (S
      (NP (EX there))
      (VP (VBP ai) (RB n't)
        (NP (DT no) (NN bite)
          (S
            (VP (TO to)
              (VP (VB drink)))))))
    (: ;)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADJP
          (ADJP (RB much) (RB too) (JJ wet))
          (PP (IN for)
            (NP (NN shootin) (POS ')))
          (, ,)
          (SBAR
            (S
              (NP (PRP we))
              (VP (MD can)
                (ADVP (RB only))
                (VP (VB march)
                  (CC and)
                  (VB think))))))))
    (: ;)
    (S
      (NP
        (NP (NNP An) (POS '))
        (UCP
          (PP (IN at)
            (NP (NN evenin) (POS ')))
          (, ,)
          (ADVP (RB down)
            (NP (DT the) (NN _))))
        (NNS nullahs))
      (VP (VBZ _)))
    (, ,)
    (S
      (NP (PRP we))
      (VP (MD can) (`` `)
        (VP
          (VP (VB ear)
            (SBAR
              (S
                (NP (DT the) (NNS jackals))
                (VP (VBP say)))))
          (, ,) (`` ``)
          (VP (VB Get)
            (PRT (RP up))
            (, ,)
            (NP (PRP you)))
          (NP (JJ rotten) (NNS beggars)))))
    (, ,)
    (S
      (NP (PRP you))
      (VP (VBP 've)
        (NP (CD ten) (JJR more) (NN to-day))))
    (. !) ('' '')))

expl(ai-2, There-1)
root(ROOT-0, ai-2)
neg(ai-2, n't-3)
neg(fun-5, no-4)
nsubj(ai-2, fun-5)
case(women-7, in-6)
nmod:in(fun-5, women-7)
cc(ai-2, nor-8)
expl(ai-10, there-9)
conj:nor(ai-2, ai-10)
neg(ai-10, n't-11)
neg(bite-13, no-12)
nsubj(ai-10, bite-13)
mark(drink-15, to-14)
acl(bite-13, drink-15)
nsubj(wet-21, It-17)
cop(wet-21, 's-18)
advmod(wet-21, much-19)
advmod(wet-21, too-20)
dep(ai-2, wet-21)
case(shootin-23, for-22)
nmod:'(wet-21, shootin-23)
case(shootin-23, '-24)
nsubj(march-29, we-26)
nsubj(think-31, we-26)
aux(march-29, can-27)
advmod(march-29, only-28)
ccomp(wet-21, march-29)
cc(march-29, and-30)
ccomp(wet-21, think-31)
conj:and(march-29, think-31)
nmod:poss(nullahs-42, An-33)
case(An-33, '-34)
case(evenin-36, at-35)
nmod:'(nullahs-42, evenin-36)
case(evenin-36, '-37)
dep(evenin-36, down-39)
det(_-41, the-40)
nmod:npmod(down-39, _-41)
nsubj(_-43, nullahs-42)
dep(ai-2, _-43)
nsubj(ear-48, we-45)
aux(ear-48, can-46)
parataxis(ai-2, ear-48)
det(jackals-50, the-49)
nsubj(say-51, jackals-50)
ccomp(ear-48, say-51)
dep(ear-48, Get-54)
compound:prt(Get-54, up-55)
dobj(Get-54, you-57)
amod(beggars-59, rotten-58)
dobj(ear-48, beggars-59)
nsubj('ve-62, you-61)
parataxis(ai-2, 've-62)
nummod(to-day-65, ten-63)
amod(to-day-65, more-64)
dobj('ve-62, to-day-65)

(ROOT
  (S (`` `)
    (S
      (NP (NNP Twould))
      (VP (VBP make)
        (S
          (NP (DT a) (NN monkey) (NN cough))
          (VP (TO to)
            (VP (VB see)
              (NP
                (NP
                  (NP
                    (NP (PRP$ our) (NN way) (NN o) (POS '))
                    (NN doin) ('' ') (NNS things))
                  (: --)
                  (NP
                    (NP (NNP Lieutenants) (NNP takin) (POS '))
                    (NNS companies)))
                (, an) ('' ')
                (NP
                  (NP
                    (NP (JJ captains) (NN takin) (POS '))
                    (NNS wings))
                  (, ,)
                  (NP
                    (NP (NNP An) (POS '))
                    (NP (NNP Lances) (NNP actin) (POS '))
                    (NNP Sergeants)))
                (: --)
                (NP
                  (NP (CD eight) (NN file))
                  (PP (TO to)
                    (NP (NN obey))))))))))
    (: --)
    (S (IN For)
      (NP (PRP we))
      (VP (VBP 've)
        (NP
          (NP
            (NP (NNP lots) (NNP o) (POS '))
            (JJ quick) (NN promotion))
          (PP (IN on)
            (NP
              (NP (CD ten) (NNS deaths))
              (NP (DT a) (NN day)))))))
    (. !)))

nsubj(make-3, Twould-2)
root(ROOT-0, make-3)
det(cough-6, a-4)
compound(cough-6, monkey-5)
dobj(make-3, cough-6)
nsubj:xsubj(see-8, cough-6)
mark(see-8, to-7)
xcomp(make-3, see-8)
nmod:poss(o-11, our-9)
compound(o-11, way-10)
nmod:poss(things-15, o-11)
case(o-11, '-12)
compound(things-15, doin-13)
dobj(see-8, things-15)
compound(takin-18, Lieutenants-17)
nmod:poss(companies-20, takin-18)
case(takin-18, '-19)
dep(things-15, companies-20)
amod(takin-24, captains-23)
nmod:poss(wings-26, takin-24)
case(takin-24, '-25)
dep(things-15, wings-26)
nmod:poss(Sergeants-33, An-28)
case(An-28, '-29)
compound(actin-31, Lances-30)
nmod:poss(Sergeants-33, actin-31)
case(actin-31, '-32)
appos(wings-26, Sergeants-33)
nummod(file-36, eight-35)
dep(things-15, file-36)
case(obey-38, to-37)
nmod:to(file-36, obey-38)
dep('ve-42, For-40)
nsubj('ve-42, we-41)
parataxis(make-3, 've-42)
compound(o-44, lots-43)
nmod:poss(promotion-47, o-44)
case(o-44, '-45)
amod(promotion-47, quick-46)
dobj('ve-42, promotion-47)
case(deaths-50, on-48)
nummod(deaths-50, ten-49)
nmod:on(promotion-47, deaths-50)
det(day-52, a-51)
dep(deaths-50, day-52)

(ROOT
  (S
    (S
      (NP (PRP$ Our) (NN Colonel))
      (VP (VBZ 's)
        (NP
          (NP (JJ white) (DT an))
          (POS ') (NN twitterly))))
    (: --) ('' ')
    (S
      (S
        (NP (NNP e))
        (VP (VBZ gets)
          (NP (DT no) (NN sleep)
            (CC nor)
            (NN food))))
      (, ,)
      (CC But)
      (S
        (NP
          (NP (NNS mucks))
          (PP (IN about)
            (PP (IN in))))
        (`` `)
        (VP (VBP orspital)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (NN nothing))
              (VP (VBZ does)
                (ADJP (RB no) (JJ good))))))))
    (. .) ('' ')))

nmod:poss(Colonel-2, Our-1)
nsubj(twitterly-7, Colonel-2)
cop(twitterly-7, 's-3)
nmod:poss(twitterly-7, white-4)
dep(white-4, an-5)
case(twitterly-7, '-6)
root(ROOT-0, twitterly-7)
nsubj(gets-11, e-10)
parataxis(twitterly-7, gets-11)
neg(sleep-13, no-12)
dobj(gets-11, sleep-13)
cc(sleep-13, nor-14)
dobj(gets-11, food-15)
conj:nor(sleep-13, food-15)
cc(gets-11, But-17)
nsubj(orspital-22, mucks-18)
case(in-20, about-19)
acl(mucks-18, in-20)
parataxis(twitterly-7, orspital-22)
conj:but(gets-11, orspital-22)
advmod(does-25, where-23)
nsubj(does-25, nothing-24)
advcl(orspital-22, does-25)
neg(good-27, no-26)
xcomp(does-25, good-27)

(ROOT
  (S
    (NP (NNP E))
    (VP (VBZ sends)
      (NP (PRP us))
      (`` `)
      (S
        (S
          (NP
            (NP (JJ eaps) (NN o) (POS '))
            (NNS comforts))
          (, ,)
          (NP
            (NP (DT all))
            (VP (VBN bought)
              (PP (IN from))))
          (`` `)
          (VP (VBZ is)
            (NP (NN pay))))
        (: --)
        (CC But)
        (S
          (NP (EX there))
          (VP (VBP are) (RB n't)
            (NP
              (NP (JJ much) (NN comfort))
              (`` `)
              (ADJP (JJ andy)
                (PP (IN on)
                  (NP
                    (NP (CD ten) (NNS deaths))
                    (NP (DT a) (NN day))))))))))
    (. .)))

nsubj(sends-2, E-1)
root(ROOT-0, sends-2)
dobj(sends-2, us-3)
amod(o-6, eaps-5)
nmod:poss(comforts-8, o-6)
case(o-6, '-7)
nsubj(pay-15, comforts-8)
nsubj(pay-15, all-10)
acl(all-10, bought-11)
nmod(bought-11, from-12)
cop(pay-15, is-14)
xcomp(sends-2, pay-15)
cc(pay-15, But-17)
expl(are-19, there-18)
xcomp(sends-2, are-19)
conj:but(pay-15, are-19)
neg(are-19, n't-20)
amod(comfort-22, much-21)
nsubj(are-19, comfort-22)
amod(comfort-22, andy-24)
case(deaths-27, on-25)
nummod(deaths-27, ten-26)
nmod:on(andy-24, deaths-27)
det(day-29, a-28)
dep(deaths-27, day-29)

(ROOT
  (S
    (S
      (NP (NNP Our) (NNP Chaplain) (POS 's))
      (VP
        (VP (VBD got)
          (NP (DT a) (NN banjo)))
        (, ,)
        (NP
          (NP (DT an))
          ('' ')
          (SBAR
            (S
              (NP
                (NP
                  (NP (DT a) (JJ skinny) (NN mule) (POS '))
                  (JJ e) (NNS rides))
                (, ,)
                (NP
                  (NP (NNP An) (POS '))
                  (NP (DT the) (NN stuff) (POS '))
                  (NNP e)))
              (VP (VBZ says)
                (NP (DT an)
                  (S
                    (NP (POS '))
                    (VP (VBZ sings)
                      (NP (PRP us))))))))
          (, ,)
          (NP (NNP Lord)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ makes)
      (SBAR
        (S
          (NP (PRP us))
          (VP (VBD split)
            (NP (PRP$ our) (NNS sides))))))
    (. !)))

compound(Chaplain-2, Our-1)
nsubj(got-4, Chaplain-2)
case(Chaplain-2, 's-3)
ccomp(makes-32, got-4)
det(banjo-6, a-5)
dobj(got-4, banjo-6)
dobj(got-4, an-8)
det(mule-12, a-10)
amod(mule-12, skinny-11)
nmod:poss(rides-15, mule-12)
case(mule-12, '-13)
amod(rides-15, e-14)
nsubj(says-23, rides-15)
nmod:poss(e-22, An-17)
case(An-17, '-18)
det(stuff-20, the-19)
nmod:poss(e-22, stuff-20)
case(stuff-20, '-21)
appos(rides-15, e-22)
acl:relcl(an-8, says-23)
dobj(says-23, an-24)
nsubj(sings-26, '-25)
dep(an-24, sings-26)
dobj(sings-26, us-27)
appos(an-8, Lord-29)
nsubj(makes-32, it-31)
root(ROOT-0, makes-32)
nsubj(split-34, us-33)
ccomp(makes-32, split-34)
nmod:poss(sides-36, our-35)
dobj(split-34, sides-36)

(ROOT
  (S
    (SBAR (IN With)
      (S
        (VP (`` `) (VBZ is)
          (ADJP (JJ black)))))
    (VP (VBZ coat-tails)
      (ADJP (JJ a-bobbin) ('' ')
        (PP (TO to)
          (NP (NNP _) (NNP Ta-ra-ra) (NNP Boom-der-ay)))))
    (. !)))

mark(black-4, With-1)
cop(black-4, is-3)
csubj(coat-tails-5, black-4)
root(ROOT-0, coat-tails-5)
xcomp(coat-tails-5, a-bobbin-6)
case(Boom-der-ay-11, to-8)
compound(Boom-der-ay-11, _-9)
compound(Boom-der-ay-11, Ta-ra-ra-10)
nmod:to(a-bobbin-6, Boom-der-ay-11)

(ROOT
  (S
    (ADVP (RB _))
    (`` `)
    (NP (NNP E))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (DT the) (JJ proper) (NN kind) (NN o) (POS '))
          (JJ _) (NN padre) (NN _))
        (PP (IN for)
          (NP
            (NP (CD ten) (NNS deaths))
            (NP (DT a) (NN day))))))
    (. .)))

advmod(_-12, _-1)
nsubj(_-12, E-3)
cop(_-12, 's-4)
det(o-8, the-5)
amod(o-8, proper-6)
compound(o-8, kind-7)
nmod:poss(_-12, o-8)
case(o-8, '-9)
amod(_-12, _-10)
compound(_-12, padre-11)
root(ROOT-0, _-12)
case(deaths-15, for-13)
nummod(deaths-15, ten-14)
nmod:for(_-12, deaths-15)
det(day-17, a-16)
dep(deaths-15, day-17)

(ROOT
  (S
    (S
      (NP
        (NP (NNP An) (POS '))
        (NX (NNP Father) (NNP Victor)))
      (VP (`` `) (VBZ elps) (`` `)
        (S
          (S
            (VP (VBN im)
              (PP (IN with)
                (NP (PRP$ our) (NNP Roman) (NNS Catholicks)))))
          (: --)
          (S
            (NP (PRP He))
            (VP (VBZ knows)
              (NP
                (NP
                  (NP (DT an) (`` `) (NN eap))
                  (PP (IN of)
                    (NP
                      (NP (JJ Irish) (NNS songs))
                      (, an) ('' ')
                      (NP
                        (NP (JJ rummy) (NN conjurin) (POS '))
                        (NNS tricks)))))
                (: ;)
                (NP (NNP An))))))
        ('' ')
        (NP
          (NP (DT the) (CD two))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBZ works)
                (PRT (RP together))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP it))
                    (VP (VBZ comes)
                      (S
                        (VP (TO to)
                          (VP (VB play)
                            (CC or)
                            (VB pray)))))))))))))
    (: ;) (RB So)
    (S
      (NP (PRP we))
      (VP (VB keep)
        (NP (DT the) (NN ball) (NN a-rollin))
        ('' ')
        (PP (IN on)
          (NP
            (NP (CD ten) (NNS deaths))
            (NP (DT a) (NN day))))))
    (. .)))

nmod:poss(Victor-4, An-1)
case(An-1, '-2)
compound(Victor-4, Father-3)
nsubj(elps-6, Victor-4)
root(ROOT-0, elps-6)
xcomp(elps-6, im-8)
case(Catholicks-12, with-9)
nmod:poss(Catholicks-12, our-10)
compound(Catholicks-12, Roman-11)
nmod:with(im-8, Catholicks-12)
nsubj(knows-15, He-14)
parataxis(im-8, knows-15)
det(eap-18, an-16)
dobj(knows-15, eap-18)
case(songs-21, of-19)
amod(songs-21, Irish-20)
nmod:of(eap-18, songs-21)
amod(conjurin-25, rummy-24)
nmod:poss(tricks-27, conjurin-25)
case(conjurin-25, '-26)
dep(songs-21, tricks-27)
dep(eap-18, An-29)
det(two-32, the-31)
dobj(elps-6, two-32)
nsubj(works-34, they-33)
acl:relcl(two-32, works-34)
compound:prt(works-34, together-35)
advmod(comes-38, when-36)
nsubj(comes-38, it-37)
nsubj:xsubj(play-40, it-37)
nsubj:xsubj(pray-42, it-37)
advcl(works-34, comes-38)
mark(play-40, to-39)
xcomp(comes-38, play-40)
cc(play-40, or-41)
xcomp(comes-38, pray-42)
conj:or(play-40, pray-42)
advmod(elps-6, So-44)
nsubj(keep-46, we-45)
dep(elps-6, keep-46)
det(a-rollin-49, the-47)
compound(a-rollin-49, ball-48)
dobj(keep-46, a-rollin-49)
case(deaths-53, on-51)
nummod(deaths-53, ten-52)
nmod:on(keep-46, deaths-53)
det(day-55, a-54)
dep(deaths-53, day-55)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN got)
          (NP
            (NP (DT the) (NN cholerer))
            (PP (IN in)
              (NP (NN camp)))))))
    (: --)
    (S
      (NP (PRP we))
      (VP (VBP 've)
        (VP (VBN got)
          (S
            (NP
              (NP (PRP it))
              (`` `)
              (NP (NN ot) (DT an))
              ('' '))
            (ADJP (JJ sweet))))))
    (: ;)
    (S
      (NP (PRP It))
      (VP (VBP ai) (RB n't)
        (NP (DT no) (NNP Christmas) (NN dinner))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (`` `)
          (NP (JJ elped) (DT an))
          ('' ')
          (SBAR
            (S
              (NP (PRP we))
              (VP (MD must)
                (VP (VB eat))))))))
    (. .)))

nsubj(got-3, We-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
det(cholerer-5, the-4)
dobj(got-3, cholerer-5)
case(camp-7, in-6)
nmod:in(cholerer-5, camp-7)
nsubj(got-11, we-9)
aux(got-11, 've-10)
conj:but(got-3, got-11)
nsubj(sweet-17, it-12)
dep(it-12, ot-14)
dep(ot-14, an-15)
xcomp(got-11, sweet-17)
nsubj(dinner-24, It-19)
cop(dinner-24, ai-20)
neg(dinner-24, n't-21)
neg(dinner-24, no-22)
compound(dinner-24, Christmas-23)
conj:but(got-3, dinner-24)
cc(got-3, but-26)
nsubj(elped-30, it-27)
cop(elped-30, 's-28)
conj:but(got-3, elped-30)
dep(elped-30, an-31)
nsubj(eat-35, we-33)
aux(eat-35, must-34)
acl:relcl(elped-30, eat-35)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN gone)
          (PP (IN beyond)
            (NP (DT the) (NN funkin) (POS '))))))
    (, ,)
    (VP (VBP 'cause)
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP 've)
            (VP (VBN found)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ does) (RB n't)
                    (VP
                      (VP (VB pay))
                      (, ,)
                      (NP
                        (NP (NNP An))
                        ('' ')
                        (SBAR
                          (S
                            (NP (PRP we))
                            (VP (VBP 're)
                              (NP
                                (NP (NN rockin) (POS '))
                                (NN round)))))))))))))))
    (NP
      (NP (DT the) (NN Districk))
      (PP (IN on)
        (NP
          (NP (CD ten) (NNS deaths))
          (NP (DT a) (NN day)))))
    (. !)))

nsubj(gone-3, We-1)
aux(gone-3, 've-2)
ccomp('cause-9, gone-3)
case(funkin-6, beyond-4)
det(funkin-6, the-5)
nmod:'(gone-3, funkin-6)
case(funkin-6, '-7)
root(ROOT-0, 'cause-9)
nsubj(found-12, we-10)
aux(found-12, 've-11)
ccomp('cause-9, found-12)
nsubj(pay-16, it-13)
aux(pay-16, does-14)
neg(pay-16, n't-15)
ccomp(found-12, pay-16)
dobj(pay-16, An-18)
nsubj(round-24, we-20)
cop(round-24, 're-21)
nmod:poss(round-24, rockin-22)
case(rockin-22, '-23)
acl:relcl(An-18, round-24)
det(Districk-26, the-25)
dep('cause-9, Districk-26)
case(deaths-29, on-27)
nummod(deaths-29, ten-28)
nmod:on(Districk-26, deaths-29)
det(day-31, a-30)
dep(deaths-29, day-31)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (VP (VB strike)
        (NP
          (NP (PRP$ your) (NN camp))
          (, an) ('' ')
          (SBAR
            (S
              (VP (VBP go)))))))
    (, ,)
    (NP (DT the) (NNPS Rains))
    (VP (VBP are)
      (NP
        (NP (NN fallin) ('' '))
        (, ,)
        (NP
          (NP (DT The) (NNP Bugle) (POS 's))
          (NN callin))
        ('' ')))
    (. !)))

advmod(strike-2, Then-1)
ccomp(fallin-12, strike-2)
nmod:poss(camp-4, your-3)
dobj(strike-2, camp-4)
acl:relcl(camp-4, go-7)
det(Rains-10, the-9)
nsubj(fallin-12, Rains-10)
cop(fallin-12, are-11)
root(ROOT-0, fallin-12)
det(Bugle-16, The-15)
nmod:poss(callin-18, Bugle-16)
case(Bugle-16, 's-17)
appos(fallin-12, callin-18)

(ROOT
  (S
    (NP (DT The) (NN dead))
    (VP (VBP are)
      (NP
        (NP (JJ bushed) (DT an))
        ('' ')
        (VP (VBG stoned)
          (S
            (VP (TO to)
              (VP (VB keep)
                (S
                  (NP (PRP 'em))
                  (ADJP (JJ safe))
                  (ADVP (RB below)))))))))
    (. !)))

det(dead-2, The-1)
nsubj(bushed-4, dead-2)
cop(bushed-4, are-3)
root(ROOT-0, bushed-4)
dep(bushed-4, an-5)
acl(bushed-4, stoned-7)
mark(keep-9, to-8)
xcomp(stoned-7, keep-9)
nsubj(safe-11, 'em-10)
xcomp(keep-9, safe-11)
advmod(safe-11, below-12)

(ROOT
  (S
    (S
      (S
        (S
          (S
            (NP (NNP An) (POS '))
            (X
              (NP (PRP them))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP do) (RB not)
                    (VP (VB like)
                      (S
                        (NP (PRP it))
                        (NP (PRP they)))))))))
          (VP (MD can)
            (VP (VB lump)
              (NP (PRP it)))))
        (, ,)
        (S
          (NP (NNP An) (POS '))
          (NP (PRP them))))
      (NP (DT that))
      (VP (MD can) (RB not)
        (VP (VB stand)
          (NP (PRP it))
          (SBAR
            (S
              (NP (PRP they))
              (VP (MD can)
                (VP (VB jump)
                  (NP (PRP it)))))))))
    (: ;)
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB die)
                (NP
                  (NP (RB somewhere))
                  (PRN (: --)
                    (NP
                      (NP (DT some) (NN way))
                      (: --)
                      (NP (NN some'ow)))
                    (: --))
                  (SBAR
                    (S
                      (NP (PRP We))
                      (VP (MD might)
                        (ADVP (RB as) (RB well))
                        (VP (VB begin)
                          (S
                            (VP (TO to)
                              (VP (VB do)
                                (NP (PRP it))
                                (ADVP (RB now))))))))))))))))
    (. !)))

csubj(lump-11, An-1)
case(An-1, '-2)
dep(An-1, them-3)
nsubj(like-7, that-4)
aux(like-7, do-5)
neg(like-7, not-6)
dep(them-3, like-7)
nsubj(they-9, it-8)
xcomp(like-7, they-9)
aux(lump-11, can-10)
dep(stand-20, lump-11)
dobj(lump-11, it-12)
dep(them-16, An-14)
case(An-14, '-15)
parataxis(lump-11, them-16)
nsubj(stand-20, that-17)
aux(stand-20, can-18)
neg(stand-20, not-19)
root(ROOT-0, stand-20)
dobj(stand-20, it-21)
nsubj(jump-24, they-22)
aux(jump-24, can-23)
dep(stand-20, jump-24)
dobj(jump-24, it-25)
nsubj(got-29, We-27)
nsubj:xsubj(die-31, We-27)
aux(got-29, 've-28)
parataxis(stand-20, got-29)
mark(die-31, to-30)
xcomp(got-29, die-31)
dobj(die-31, somewhere-32)
det(way-35, some-34)
dep(somewhere-32, way-35)
dep(way-35, some'ow-37)
nsubj(begin-43, We-39)
nsubj:xsubj(do-45, We-39)
aux(begin-43, might-40)
advmod(begin-43, as-41)
mwe(as-41, well-42)
acl:relcl(somewhere-32, begin-43)
mark(do-45, to-44)
xcomp(begin-43, do-45)
dobj(do-45, it-46)
advmod(do-45, now-47)

(ROOT
  (S
    (ADVP (RB Then))
    (, ,)
    (NP
      (NP (NNP Number) (CD One))
      (, ,)
      (VP (VBN let)
        (PRT (RP down))
        (NP (DT the) (JJ tent-pole) (JJ slow)))
      (, ,))
    (VP (VBZ Knock)
      (PP (IN out)
        (NP
          (NP (DT the) (NN pegs))
          (, an) ('' ') (`` `)
          (NP (JJ old) (DT the) (NNS corners))))
      (: --)
      (ADVP (RB so)))
    (. !)))

advmod(Knock-12, Then-1)
nsubj(Knock-12, Number-3)
nummod(Number-3, One-4)
acl(Number-3, let-6)
compound:prt(let-6, down-7)
det(slow-10, the-8)
amod(slow-10, tent-pole-9)
dobj(let-6, slow-10)
root(ROOT-0, Knock-12)
case(pegs-15, out-13)
det(pegs-15, the-14)
nmod:out(Knock-12, pegs-15)
amod(corners-21, old-19)
det(corners-21, the-20)
dep(pegs-15, corners-21)
advmod(Knock-12, so-23)

(ROOT
  (SINV
    (S
      (VP (VBN Fold)
        (PP (IN in)
          (NP (DT the) (NNS flies)))))
    (, ,)
    (VP (VBP furl)
      (PRT (RP up)))
    (NP
      (NP (DT the) (NNS ropes))
      (, ,)
      (NP
        (NP
          (NP (DT an))
          (POS '))
        (NN stow)))
    (. !)))

dep(furl-6, Fold-1)
case(flies-4, in-2)
det(flies-4, the-3)
nmod:in(Fold-1, flies-4)
root(ROOT-0, furl-6)
compound:prt(furl-6, up-7)
det(ropes-9, the-8)
nsubj(furl-6, ropes-9)
nmod:poss(stow-13, an-11)
case(an-11, '-12)
appos(ropes-9, stow-13)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (VP (VB strike)))
    (: --)
    (S
      (INTJ (UH oh))
      (, ,)
      (NP
        (NP (NN strike))
        (NP (PRP$ your) (NN camp))
        (, an) ('' '))
      (VP (VBP go)))
    (. !)))

discourse(strike-3, Oh-1)
root(ROOT-0, strike-3)
discourse(go-12, oh-5)
nsubj(go-12, strike-7)
nmod:poss(camp-9, your-8)
dep(strike-7, camp-9)
parataxis(strike-3, go-12)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Gawd))
    (VP (`` `) (VBP elp)
      (NP (PRP us)))
    (. !) (-RRB- -RRB-)))

nsubj(elp-4, Gawd-2)
root(ROOT-0, elp-4)
dobj(elp-4, us-5)

(ROOT
  (S
    (S
      (NP
        (NP (DT THE) (NNS LADIES)
          (S
            (S
              (NP (PRP I))
              (VP (VBP 've)
                (VP (VBN taken)
                  (NP (PRP$ my) (NN fun))
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (PRP I))
                      (VP (VBP 've)
                        (VP (VBN found)
                          (NP (PRP it)))))))))
            (: ;)
            (S
              (NP (PRP I))
              (VP (VBP 've)
                (VP (VBN rogued))))))
        (, an) ('' ')
        (NP (PRP I)))
      (VP (VBP 've)
        (VP (VBN ranged)
          (PP (IN in)
            (NP (PRP$ my) (NN time))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP
        (VP (VBP 've)
          (NP (`` `)
            (NP
              (NP (NN ad))
              (NP
                (NP (PRP$ my) (NN pickin) (POS '))
                (NN o)))
            ('' ')
            (ADJP (JJ sweet))))
        (NP (`` `)
          (NP
            (NP (NNS earts))
            (, ,)
            (NP
              (NP (NNP An) (POS '))
              (CD four) (NN o)))
          ('' ')
          (SBAR
            (S
              (NP (DT the) (NN lot))
              (VP (VBD was)
                (ADJP (JJ prime))))))))
    (. .)))

det(LADIES-2, THE-1)
nsubj(ranged-21, LADIES-2)
nsubj(taken-5, I-3)
aux(taken-5, 've-4)
dep(LADIES-2, taken-5)
nmod:poss(fun-7, my-6)
dobj(taken-5, fun-7)
advmod(found-11, where-8)
nsubj(found-11, I-9)
aux(found-11, 've-10)
advcl(taken-5, found-11)
dobj(found-11, it-12)
nsubj(rogued-16, I-14)
aux(rogued-16, 've-15)
parataxis(taken-5, rogued-16)
dep(LADIES-2, I-19)
aux(ranged-21, 've-20)
root(ROOT-0, ranged-21)
case(time-24, in-22)
nmod:poss(time-24, my-23)
nmod:in(ranged-21, time-24)
nsubj('ve-27, I-26)
parataxis(ranged-21, 've-27)
dobj('ve-27, ad-29)
nmod:poss(pickin-31, my-30)
nmod:poss(o-33, pickin-31)
case(pickin-31, '-32)
dep(ad-29, o-33)
amod(ad-29, sweet-35)
dobj('ve-27, earts-37)
nmod:poss(o-42, An-39)
case(An-39, '-40)
nummod(o-42, four-41)
appos(earts-37, o-42)
det(lot-45, the-44)
nsubj(prime-47, lot-45)
cop(prime-47, was-46)
acl:relcl(earts-37, prime-47)

(ROOT
  (S
    (S
      (NP (PRP One))
      (VP (VBD was)
        (NP (DT an) (`` `) (JJ arf-caste) (NN widow))))
    (, ,)
    (S
      (NP (PRP One))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN woman))
          (PP (IN at)
            (NP (NNP Prome))))))
    (, ,)
    (S
      (NP (PRP One))
      (VP (VBD was)
        (NP
          (NP (DT the) (NN wife))
          (PP (IN of)
            (NP (DT a) (JJ _) (JJ jemadar-sais) (NN _))))))
    (, ,)
    (S
      (NP
        (NP (NNP An) (POS '))
        (NN one))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN girl))
          (PP (IN at) (`` `)
            (NP (NN ome))))))
    (. .)))

nsubj(widow-6, One-1)
cop(widow-6, was-2)
det(widow-6, an-3)
amod(widow-6, arf-caste-5)
root(ROOT-0, widow-6)
nsubj(woman-11, One-8)
cop(woman-11, was-9)
det(woman-11, a-10)
parataxis(widow-6, woman-11)
case(Prome-13, at-12)
nmod:at(woman-11, Prome-13)
nsubj(wife-18, One-15)
cop(wife-18, was-16)
det(wife-18, the-17)
parataxis(widow-6, wife-18)
case(_-23, of-19)
det(_-23, a-20)
amod(_-23, _-21)
amod(_-23, jemadar-sais-22)
nmod:of(wife-18, _-23)
nmod:poss(one-27, An-25)
case(An-25, '-26)
nsubj(girl-30, one-27)
cop(girl-30, is-28)
det(girl-30, a-29)
parataxis(widow-6, girl-30)
case(ome-33, at-31)
nmod:at(girl-30, ome-33)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP I))
      (VP (VBP are) (RB n't)
        (NP
          (NP
            (NP (DT no) (`` `) (NNP and))
            (SBAR
              (S
                (SBAR (IN with)
                  (S
                    (NP
                      (NP (DT the) (NNS ladies))
                      (, ,)
                      (PRN
                        (PP (IN For)))
                      (, ,)
                      (NP
                        (NP (NN takin) (POS '))
                        (NN 'em)))
                    (ADVP (DT all) (IN along))))
                (, ,)
                (NP (PRP You))
                (ADVP (RB never))
                (VP (MD can)
                  (VP (VB say)
                    (SBAR (IN till)
                      (S
                        (NP (PRP you))
                        (VP (VBP 've)
                          (VP (VBN tried)
                            (NP (PRP 'em)))))))))))
          (, ,)
          (NP (NNP An) (POS ')))))
    (RB then)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (JJ like)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ wrong))))))))
    (. .)))

advmod(and-7, Now-1)
nsubj(and-7, I-2)
cop(and-7, are-3)
neg(and-7, n't-4)
neg(and-7, no-5)
root(ROOT-0, and-7)
mark(ladies-10, with-8)
det(ladies-10, the-9)
advcl(say-23, ladies-10)
nmod(ladies-10, For-12)
nmod:poss('em-16, takin-14)
case(takin-14, '-15)
appos(ladies-10, 'em-16)
advmod(ladies-10, all-17)
case(all-17, along-18)
nsubj(say-23, You-20)
neg(say-23, never-21)
aux(say-23, can-22)
acl:relcl(and-7, say-23)
mark(tried-27, till-24)
nsubj(tried-27, you-25)
aux(tried-27, 've-26)
advcl(say-23, tried-27)
dobj(tried-27, 'em-28)
appos(and-7, An-30)
case(An-30, '-31)
advmod(and-7, then-32)
nsubj(like-35, you-33)
nsubj:xsubj(wrong-38, you-33)
cop(like-35, are-34)
parataxis(and-7, like-35)
mark(wrong-38, to-36)
cop(wrong-38, be-37)
xcomp(like-35, wrong-38)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (NNS times))
          (SBAR
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (MD 'll)
                    (VP (VB think)
                      (SBAR (IN that)
                        (S
                          (NP (PRP you))
                          (VP (MD might) (RB n't))))))))
              (, ,)
              (NP (EX There))
              (VP (VBZ 's)
                (NP
                  (NP (NNS times))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP you))
                      (VP (MD 'll)
                        (VP (VB know)
                          (SBAR (IN that)
                            (S
                              (NP (PRP you))
                              (VP (MD might)))))))))))))))
    (: ;)
    (CC But)
    (S
      (NP (DT the) (NNS things))
      (PRN
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB learn)
              (PP (IN from)
                (NP
                  (NP (DT the) (NNP Yellow))
                  (, an) ('' ')
                  (NP (NNP Brown)))))))
        (, ,))
      (NP (PRP They))
      (VP (MD 'll) (`` `)
        (VP (VB elp)
          (S
            (NP (PRP you))
            (NP
              (NP (DT a) (NN lot))
              (PP (IN with)
                (NP (DT the) (NNP White))))))))
    (. !)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
nsubj('s-2, times-3)
mark(might-22, times-3)
advmod(think-7, when-4)
nsubj(think-7, you-5)
aux(think-7, 'll-6)
advcl('s-14, think-7)
mark(might-10, that-8)
nsubj(might-10, you-9)
ccomp(think-7, might-10)
neg(might-10, n't-11)
expl('s-14, There-13)
acl:relcl(times-3, 's-14)
nsubj('s-14, times-15)
mark(might-22, times-15)
advmod(know-19, when-16)
nsubj(know-19, you-17)
aux(know-19, 'll-18)
acl:relcl(times-15, know-19)
ref(times-3, that-20)
ref(times-15, that-20)
nsubj(might-22, you-21)
ccomp(know-19, might-22)
cc('s-2, But-24)
det(things-26, the-25)
nsubj(elp-40, things-26)
nsubj(learn-29, you-27)
aux(learn-29, will-28)
parataxis(elp-40, learn-29)
case(Yellow-32, from-30)
det(Yellow-32, the-31)
nmod:from(learn-29, Yellow-32)
dep(Yellow-32, Brown-35)
nsubj(elp-40, They-37)
aux(elp-40, 'll-38)
conj:but('s-2, elp-40)
nsubj(lot-43, you-41)
det(lot-43, a-42)
xcomp(elp-40, lot-43)
case(White-46, with-44)
det(White-46, the-45)
nmod:with(lot-43, White-46)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was)
        (NP
          (NP (DT a) (JJ young) (NN un))
          (PP (IN at)
            (NP (`` `)
              (NP (NNP Oogli))
              (, ,)
              (VP (VBN Shy)
                (PP (IN as)
                  (NP (DT a) (NN girl)))
                (S
                  (VP (TO to)
                    (VP (VB begin)))))
              (: ;)
              (NP
                (NP
                  (NP (NNP Aggie) (IN de) (NNP Castrer))
                  (SBAR
                    (S
                      (NP (PRP she))
                      (VP (VBD made)
                        (SBAR
                          (S
                            (NP
                              (NP (PRP me))
                              (, ,)
                              (NP
                                (NP (NNP An) (POS '))
                                (NNP Aggie)))
                            (VP (VBD was)
                              (ADJP (JJ clever)
                                (PP (IN as)
                                  (NP (NN sin)))))))))))
                (: ;)
                (NP
                  (NP (JJR Older))
                  (PP (IN than)
                    (NP (PRP me))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP$ my) (JJ first) (NN un))
      (: --)
      (ADVP (RBR More)
        (PP (IN like)
          (NP (DT a) (NN mother))))
      (NP (PRP she))
      (VP (VBD were)
        (PRN (: --)
          (S
            (VP (VB Showed)
              (S
                (NP (PRP me))
                (NP
                  (NP
                    (NP
                      (NP (DT the) (NN way))
                      (PP (TO to)
                        (NP (NN promotion) (DT an)))
                      (POS '))
                    (NN pay))
                  (, ,)
                  (NP
                    (NP (NNP An) (POS '))
                    (NN I)))))))
        (VP (VBN learned)
          (PP (IN about)
            (NP (NNS women)))
          (PP (IN from) (`` `)
            (NP (NN er))))))
    (. !)))

nsubj(un-5, I-1)
cop(un-5, was-2)
det(un-5, a-3)
amod(un-5, young-4)
root(ROOT-0, un-5)
case(Oogli-8, at-6)
nmod:at(un-5, Oogli-8)
acl(Oogli-8, Shy-10)
case(girl-13, as-11)
det(girl-13, a-12)
nmod:as(Shy-10, girl-13)
mark(begin-15, to-14)
xcomp(Shy-10, begin-15)
compound(Castrer-19, Aggie-17)
amod(Castrer-19, de-18)
dep(Oogli-8, Castrer-19)
nsubj(made-21, she-20)
acl:relcl(Castrer-19, made-21)
nsubj(clever-28, me-22)
nmod:poss(Aggie-26, An-24)
case(An-24, '-25)
appos(me-22, Aggie-26)
cop(clever-28, was-27)
ccomp(made-21, clever-28)
case(sin-30, as-29)
nmod:as(clever-28, sin-30)
dep(Castrer-19, Older-32)
case(me-34, than-33)
nmod:than(Older-32, me-34)
cc(un-5, but-36)
nmod:poss(un-39, my-37)
amod(un-39, first-38)
nsubjpass(learned-61, un-39)
advmod(learned-61, More-41)
case(mother-44, like-42)
det(mother-44, a-43)
nmod:like(More-41, mother-44)
nsubjpass(learned-61, she-45)
auxpass(learned-61, were-46)
parataxis(learned-61, Showed-48)
nsubj(pay-56, me-49)
det(way-51, the-50)
nmod:poss(pay-56, way-51)
case(promotion-53, to-52)
nmod:to(way-51, promotion-53)
dep(promotion-53, an-54)
case(way-51, '-55)
xcomp(Showed-48, pay-56)
nmod:poss(I-60, An-58)
case(An-58, '-59)
appos(pay-56, I-60)
conj:but(un-5, learned-61)
case(women-63, about-62)
nmod:about(learned-61, women-63)
case(er-66, from-64)
nmod:from(learned-61, er-66)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBN ordered)
          (PP (TO to)
            (NP
              (NP (NN Burma))
              (, ,)
              (NP
                (NP (NNP Actin) (POS '))
                (PP (IN in)
                  (NP
                    (NP (NN charge) (NN o) (POS '))
                    (NN Bazar)))))))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (NN I))
    (VP (VBD got)
      (S
        (NP (PRP me))
        (NP
          (NP (DT a)
            (ADJP (RB tiddy) (JJ live))
            (`` `)
            (ADJP (JJ eathen)
              (PP (IN Through)
                (NP (NN buyin))))
            ('' ') (NNS supplies))
          (PP (IN off) (`` `)
            (NP (NN er) (NN pa))))))
    (. .)))

advmod(ordered-4, Then-1)
nsubjpass(ordered-4, I-2)
auxpass(ordered-4, was-3)
ccomp(got-19, ordered-4)
case(Burma-6, to-5)
nmod:to(ordered-4, Burma-6)
appos(Burma-6, Actin-8)
case(Actin-8, '-9)
case(Bazar-14, in-10)
compound(o-12, charge-11)
nmod:poss(Bazar-14, o-12)
case(o-12, '-13)
nmod:in(Actin-8, Bazar-14)
nmod:poss(I-18, An-16)
case(An-16, '-17)
nsubj(got-19, I-18)
root(ROOT-0, got-19)
nsubj(supplies-29, me-20)
det(supplies-29, a-21)
advmod(live-23, tiddy-22)
amod(supplies-29, live-23)
amod(supplies-29, eathen-25)
case(buyin-27, Through-26)
nmod:through(eathen-25, buyin-27)
xcomp(got-19, supplies-29)
case(pa-33, off-30)
compound(pa-33, er-32)
nmod:off(supplies-29, pa-33)

(ROOT
  (NP
    (NP
      (NP
        (NP (NNP Funny) (DT an))
        (POS '))
      (NN yellow))
    (, an) ('' ')
    (PRN
      (SBAR
        (UCP
          (ADJP (NN faithful))
          (: --)
          (NP
            (NP (NNP Doll))
            (PP (IN in)
              (NP (DT a) (NN teacup)))))
        (S
          (S
            (NP (PRP she))
            (VP (VBD were)))
          (, ,)
          (CC But)
          (S
            (NP (PRP we))
            (VP (VBD lived)
              (PP (IN on)
                (NP (DT the) (NN square))))))))
    (, ,)
    (PP (IN like)
      (NP
        (NP (DT a) (JJ true-married) (NN pair))
        (, ,)
        (NP
          (NP
            (NP (NNP An) (POS '))
            (NN I))
          (VP (VBN learned)
            (PP (IN about)
              (NP (NNS women)))))))
    (PP (IN from) (`` `)
      (NP (NN er)))
    (. !)))

nmod:poss(yellow-4, Funny-1)
dep(Funny-1, an-2)
case(Funny-1, '-3)
root(ROOT-0, yellow-4)
dep(were-14, faithful-7)
dep(faithful-7, Doll-9)
case(teacup-12, in-10)
det(teacup-12, a-11)
nmod:in(Doll-9, teacup-12)
nsubj(were-14, she-13)
dep(yellow-4, were-14)
cc(were-14, But-16)
nsubj(lived-18, we-17)
dep(yellow-4, lived-18)
conj:but(were-14, lived-18)
case(square-21, on-19)
det(square-21, the-20)
nmod:on(lived-18, square-21)
case(pair-26, like-23)
det(pair-26, a-24)
amod(pair-26, true-married-25)
nmod:like(yellow-4, pair-26)
nmod:poss(I-30, An-28)
case(An-28, '-29)
appos(pair-26, I-30)
acl(I-30, learned-31)
case(women-33, about-32)
nmod:about(learned-31, women-33)
case(er-36, from-34)
nmod:from(yellow-4, er-36)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP we))
      (VP (VBD was)
        (VP (VBN shifted)
          (PP (TO to)
            (NP (NNP Neemuch))))))
    (PRN (-LRB- -LRB-)
      (VP (VB Or)
        (S
          (NP (PRP I))
          (VP (NN might)
            (NP
              (NP (NN ha))
              ('' ')
              (VP (VBN been)
                (NP
                  (NP (NN keepin) (POS '))
                  (`` `) (NN er))))))
        (ADVP (RB now)))
      (-RRB- -RRB-))
    (, ,)
    (S
      (NP
        (NP (NNP An) (POS '))
        (NN I))
      (VP (VBD took)
        (PP (IN with)
          (NP
            (NP (DT a) (JJ shiny) (NN she-devil))
            (, ,)
            (NP
              (NP (DT The) (NN wife))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN nigger))
                  (PP (IN at)
                    (NP (NNP Mhow))))))))
        (: ;) (`` `)
        (S
          (VP (VB Taught)
            (NP (PRP me)))
          (NP
            (NP (DT the) (NNS gipsy-folks) (POS '))
            (JJ _) (NN bolee) (NN _)))))
    (: ;)
    (S
      (PP (IN Kind)
        (NP
          (NP (NNP o) (POS '))
          (NN volcano)))
      (NP (PRP she))
      (VP (VBD were)))
    (, ,) (IN For)
    (S
      (S
        (NP (PRP she))
        (VP (VBD knifed)
          (SBAR
            (S
              (NP (PRP me))
              (NP (CD one) (NN night))
              (VP (VBP 'cause)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBD wished)
                      (SBAR
                        (S
                          (NP (PRP she))
                          (VP (VBD was)
                            (ADJP (JJ white)))))))))))))
      (, ,)
      (CC And)
      (S
        (NP (PRP I))
        (VP (VBD learned)
          (PP (IN about)
            (NP (NNS women)))
          (PP (IN from) (`` `)
            (NP (NN er))))))
    (. !)))

advmod(shifted-4, Then-1)
nsubjpass(shifted-4, we-2)
auxpass(shifted-4, was-3)
root(ROOT-0, shifted-4)
case(Neemuch-6, to-5)
nmod:to(shifted-4, Neemuch-6)
dep(shifted-4, Or-8)
nsubj(might-10, I-9)
ccomp(Or-8, might-10)
dobj(might-10, ha-11)
cop(er-17, been-13)
nmod:poss(er-17, keepin-14)
case(keepin-14, '-15)
acl(ha-11, er-17)
advmod(Or-8, now-18)
nmod:poss(I-23, An-21)
case(An-21, '-22)
nsubj(took-24, I-23)
dep(shifted-4, took-24)
case(she-devil-28, with-25)
det(she-devil-28, a-26)
amod(she-devil-28, shiny-27)
nmod:with(took-24, she-devil-28)
det(wife-31, The-30)
appos(she-devil-28, wife-31)
case(nigger-34, of-32)
det(nigger-34, a-33)
nmod:of(wife-31, nigger-34)
case(Mhow-36, at-35)
nmod:at(nigger-34, Mhow-36)
ccomp(took-24, Taught-39)
dobj(Taught-39, me-40)
det(gipsy-folks-42, the-41)
nmod:poss(_-46, gipsy-folks-42)
case(gipsy-folks-42, '-43)
amod(_-46, _-44)
compound(_-46, bolee-45)
dep(Taught-39, _-46)
case(volcano-51, Kind-48)
nmod:poss(volcano-51, o-49)
case(o-49, '-50)
nmod:kind(were-53, volcano-51)
nsubj(were-53, she-52)
parataxis(shifted-4, were-53)
dep(shifted-4, For-55)
nsubj(knifed-57, she-56)
parataxis(shifted-4, knifed-57)
nsubj('cause-61, me-58)
nummod(night-60, one-59)
nsubj('cause-61, night-60)
ccomp(knifed-57, 'cause-61)
nsubj(wished-63, I-62)
ccomp('cause-61, wished-63)
nsubj(white-66, she-64)
cop(white-66, was-65)
ccomp(wished-63, white-66)
cc(knifed-57, And-68)
nsubj(learned-70, I-69)
parataxis(shifted-4, learned-70)
conj:and(knifed-57, learned-70)
case(women-72, about-71)
nmod:about(learned-70, women-72)
case(er-75, from-73)
nmod:from(learned-70, er-75)

(ROOT
  (S (RB Then)
    (NP (PRP I))
    (VP (VBP come) (`` `)
      (NP
        (NP (NN ome))
        (PP (IN in)
          (NP
            (NP (DT the) (NN trooper))
            (, ,)
            (NP (`` `)
              (NP
                (NP (NNP Long))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN kid) (NN o) (POS '))
                    (NN sixteen))))
              (: --)
              (NP
                (NP (NNP Girl))
                (PP (IN from)
                  (NP (DT a) (NN convent)))
                (PP (IN at)
                  (NP (NNP Meerut)))
                (, ,)
                (NP (DT The) (JJ straightest) (NN I)))))))
      (PP (RB ever)
        (ADJP (`` `) (RB ave) (VBN seen))))
    (. .)))

advmod(come-3, Then-1)
nsubj(come-3, I-2)
root(ROOT-0, come-3)
dobj(come-3, ome-5)
case(trooper-8, in-6)
det(trooper-8, the-7)
nmod:in(ome-5, trooper-8)
appos(trooper-8, Long-11)
case(sixteen-17, of-12)
det(o-15, a-13)
compound(o-15, kid-14)
nmod:poss(sixteen-17, o-15)
case(o-15, '-16)
nmod:of(Long-11, sixteen-17)
dep(Long-11, Girl-19)
case(convent-22, from-20)
det(convent-22, a-21)
nmod:from(Girl-19, convent-22)
case(Meerut-24, at-23)
nmod:at(Girl-19, Meerut-24)
det(I-28, The-26)
amod(I-28, straightest-27)
appos(Girl-19, I-28)
advmod(seen-32, ever-29)
advmod(seen-32, ave-31)
advcl(come-3, seen-32)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (NN Love))
          (PP (IN at)
            (NP (JJ first) (NN sight))))
        (VP (VBD was) (`` `)
          (NP (NN er) (NN trouble))))
      (, ,)
      (ADVP (RB _))
      (S
        (NP (PRP She))
        (ADVP (RB _))
        (VP (VBD did) (RB n't)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP it))
                (VP (VBD were)
                  (S (: ;)
                    (S
                      (NP
                        (NP (NNP An) (POS '))
                        (NN I))
                      (VP (MD would) (RB n't)
                        (VP (VB do)
                          (PP (JJ such)))))
                    (, ,)
                    (ADVP (RB 'cause))
                    (S
                      (NP (PRP I))
                      (VP (VBD liked)
                        (S
                          (VP (`` `) (VB er)
                            (ADVP (RB too) (RB much))))))))))))))
    (, ,)
    (CC But)
    (S
      (LST (: --))
      (NP (PRP I))
      (VP (VBD learned)
        (PP (IN about)
          (NP (NNS women)))
        (PP (IN from) (`` `)
          (NP (NN er)))))
    (. !)))

nsubj(trouble-8, Love-1)
case(sight-4, at-2)
amod(sight-4, first-3)
nmod:at(Love-1, sight-4)
cop(trouble-8, was-5)
compound(trouble-8, er-7)
root(ROOT-0, trouble-8)
advmod(know-15, _-10)
nsubj(know-15, She-11)
advmod(know-15, _-12)
aux(know-15, did-13)
neg(know-15, n't-14)
parataxis(trouble-8, know-15)
dobj(do-25, what-16)
nsubj(were-18, it-17)
ccomp(know-15, were-18)
nmod:poss(I-22, An-20)
case(An-20, '-21)
nsubj(do-25, I-22)
aux(do-25, would-23)
neg(do-25, n't-24)
xcomp(were-18, do-25)
advcl(do-25, such-26)
advmod(liked-30, 'cause-28)
nsubj(liked-30, I-29)
parataxis(do-25, liked-30)
ccomp(liked-30, er-32)
advmod(much-34, too-33)
advmod(er-32, much-34)
cc(trouble-8, But-36)
nsubj(learned-39, I-38)
conj:But(trouble-8, learned-39)
case(women-41, about-40)
nmod:about(learned-39, women-41)
case(er-44, from-42)
nmod:from(learned-39, er-44)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (VP (VBN taken)
            (NP
              (NP
                (NP (PRP$ my) (NN fun))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP I))
                    (VP (VBP 've)
                      (VP (VBN found)
                        (NP (PRP it)))))))
              (, ,)
              (NP (NNP An) (POS ')))
            (SBAR (RB now)
              (S
                (NP (PRP I))
                (VP (MD must)
                  (VP (VB pay)
                    (PP (IN for)
                      (NP (PRP$ my) (NN fun))))))))))
      (, ,) (IN For)
      (S
        (X
          (X
            (X (DT the) (JJR more))
            (NP (PRP you)))
          (NP
            (NP (`` `) (NN ave) (JJ known) (NN o) ('' '))
            (NP (DT the) (NNS others))))
        (X
          (X (DT The) (JJR less))
          (NP (NN will)))
        (NP (PRP you))
        (VP (VBP settle)
          (PP (TO to)
            (NP
              (NP (CD one))
              (: ;)
              (NP
                (NP (NNP An) (POS '))
                (NP
                  (NP
                    (NP (DT the) (NN end))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (PRP it) (POS 's))
                          (NN sittin))
                        ('' ')
                        (CC and)
                        (NP (NN thinkin))
                        ('' '))))
                  (, ,)
                  (NP
                    (NP (NNP An) (POS '))
                    (NN dreamin))))
              ('' ')))
          (S
            (ADVP (RB Hell-fires))
            (VP (TO to)
              (VP (VB see)))
            (: ;) (RB So)
            (S
              (VP (VB be)
                (VP (VBN warned)
                  (PP (IN by)
                    (NP
                      (NP (PRP$ my) (NN lot))
                      (PRN (-LRB- -LRB-)
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (NP (PRP I))
                            (VP (VBP know)
                              (SBAR
                                (S
                                  (NP (PRP you))
                                  (VP (MD will) (RB not)))))))
                        (-RRB- -RRB-)))))))))))
    (, ,)
    (NP (NNP An) (POS '))
    (VP (VBP learn)
      (PP (IN about)
        (NP
          (NP (NNS women))
          (PP (IN from)
            (NP (PRP me))))))
    (. !)))

nsubj(taken-3, I-1)
aux(taken-3, 've-2)
ccomp(learn-79, taken-3)
nmod:poss(fun-5, my-4)
dobj(taken-3, fun-5)
advmod(found-9, where-6)
nsubj(found-9, I-7)
aux(found-9, 've-8)
acl:relcl(fun-5, found-9)
dobj(found-9, it-10)
appos(fun-5, An-12)
case(An-12, '-13)
advmod(pay-17, now-14)
nsubj(pay-17, I-15)
aux(pay-17, must-16)
dep(taken-3, pay-17)
case(fun-20, for-18)
nmod:poss(fun-20, my-19)
nmod:for(pay-17, fun-20)
dep(taken-3, For-22)
det(more-24, the-23)
dep(you-25, more-24)
dep(o-29, you-25)
compound(o-29, ave-27)
amod(o-29, known-28)
dep(settle-37, o-29)
det(others-32, the-31)
dep(o-29, others-32)
det(less-34, The-33)
dep(will-35, less-34)
dep(settle-37, will-35)
nsubj(settle-37, you-36)
nsubj:xsubj(see-60, you-36)
parataxis(taken-3, settle-37)
case(one-39, to-38)
nmod:to(settle-37, one-39)
dep(one-39, An-41)
case(An-41, '-42)
det(end-44, the-43)
dep(An-41, end-44)
case(sittin-48, of-45)
nmod:poss(sittin-48, it-46)
case(it-46, 's-47)
nmod:of(end-44, sittin-48)
cc(sittin-48, and-50)
nmod:of(end-44, thinkin-51)
conj:and(sittin-48, thinkin-51)
nmod:poss(dreamin-56, An-54)
case(An-54, '-55)
appos(end-44, dreamin-56)
advmod(see-60, Hell-fires-58)
mark(see-60, to-59)
xcomp(settle-37, see-60)
advmod(see-60, So-62)
auxpass(warned-64, be-63)
dep(see-60, warned-64)
case(lot-67, by-65)
nmod:poss(lot-67, my-66)
nmod:by(warned-64, lot-67)
dobj(know-71, which-69)
nsubj(know-71, I-70)
dep(lot-67, know-71)
nsubj(will-73, you-72)
ccomp(know-71, will-73)
neg(will-73, not-74)
nsubj(learn-79, An-77)
case(An-77, '-78)
root(ROOT-0, learn-79)
case(women-81, about-80)
nmod:about(learn-79, women-81)
case(me-83, from-82)
nmod:from(women-81, me-83)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBD did)
      (NP
        (NP (DT the) (NNP Colonel) (POS 's))
        (NN Lady))
      (VP (VB think)))
    (. ?)))

dobj(think-7, What-1)
aux(think-7, did-2)
det(Colonel-4, the-3)
nmod:poss(Lady-6, Colonel-4)
case(Colonel-4, 's-5)
nsubj(think-7, Lady-6)
root(ROOT-0, think-7)

(ROOT
  (S
    (NP (NN Nobody))
    (ADVP (RB never))
    (VP (VBD knew))
    (. .)))

nsubj(knew-3, Nobody-1)
neg(knew-3, never-2)
root(ROOT-0, knew-3)

(ROOT
  (S
    (S
      (NP (NN Somebody))
      (VP (VBD asked)
        (NP
          (NP (DT the) (NNP Sergeant) (POS 's))
          (NN wife))))
    (, ,)
    (NP (NNP _) (NNP An) (POS '))
    (VP (VBD _)
      (SBAR
        (S
          (NP (PRP she))
          (VP (VBD told)
            (S
              (NP (PRP 'em))
              (ADJP (JJ true)))))))
    (. !)))

nsubj(asked-2, Somebody-1)
ccomp(_-11, asked-2)
det(Sergeant-4, the-3)
nmod:poss(wife-6, Sergeant-4)
case(Sergeant-4, 's-5)
dobj(asked-2, wife-6)
compound(An-9, _-8)
nsubj(_-11, An-9)
case(An-9, '-10)
root(ROOT-0, _-11)
nsubj(told-13, she-12)
ccomp(_-11, told-13)
nsubj(true-15, 'em-14)
xcomp(told-13, true-15)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP get)
          (PP (TO to)
            (NP
              (NP (DT a) (NN man))
              (PP (IN in)
                (NP (DT the) (NN case))))))))
    (, ,)
    (NP (PRP They))
    (VP (VBP 're)
      (ADJP (JJ like)
        (PP (IN as)
          (NP
            (NP (DT a) (NN row))
            (PP (IN of)
              (NP (NNS pins))))))
      (PRN (: --)
        (PP (IN For)
          (NP
            (NP
              (NP (DT the) (NNP Colonel) (POS 's))
              (NN Lady))
            (, an) ('' ')
            (NP
              (NP (NNP Judy) (NNP O'Grady) (NNP Are))
              (NP (NNS sisters)))))
        (PP (IN under)
          (NP (PRP$ their) (NNS skins)))))
    (. !)))

advmod(get-3, When-1)
nsubj(get-3, you-2)
advcl(like-13, get-3)
case(man-6, to-4)
det(man-6, a-5)
nmod:to(get-3, man-6)
case(case-9, in-7)
det(case-9, the-8)
nmod:in(man-6, case-9)
nsubj(like-13, They-11)
cop(like-13, 're-12)
root(ROOT-0, like-13)
case(row-16, as-14)
det(row-16, a-15)
nmod:as(like-13, row-16)
case(pins-18, of-17)
nmod:of(row-16, pins-18)
case(Lady-24, For-20)
det(Colonel-22, the-21)
nmod:poss(Lady-24, Colonel-22)
case(Colonel-22, 's-23)
dep(like-13, Lady-24)
compound(Are-29, Judy-27)
compound(Are-29, O'Grady-28)
dep(Lady-24, Are-29)
dep(Are-29, sisters-30)
case(skins-33, under-31)
nmod:poss(skins-33, their-32)
nmod:under(Lady-24, skins-33)

(ROOT
  (FRAG
    (S
      (VP (VBG BILL)
        (NP (`` `) (NNS AWKINS) ('' ''))
        (`` `)
        (PP (IN As)
          (NP
            (NP (NN anybody))
            (VP (VBN seen)
              (S
                (NP (NNP Bill))
                (`` `)
                (NP (NNP Awkins))))))))
    (. ?) ('' '')))

root(ROOT-0, BILL-1)
dobj(BILL-1, AWKINS-3)
case(anybody-7, As-6)
nmod:as(BILL-1, anybody-7)
acl(anybody-7, seen-8)
dep(Awkins-11, Bill-9)
xcomp(seen-8, Awkins-11)

(ROOT
  (S (`` ``)
    (SBAR (RB Now)
      (S
        (NP
          (NP (`` `) (NN ow))
          (PP (IN in)
            (NP (DT the) (NNP devil))))
        (VP (MD would))))
    (NP (PRP I))
    (VP (VBP know))
    (. ?) ('' '') ('' '')))

advmod(would-8, Now-2)
nsubj(would-8, ow-4)
case(devil-7, in-5)
det(devil-7, the-6)
nmod:in(ow-4, devil-7)
advcl(know-10, would-8)
nsubj(know-10, I-9)
root(ROOT-0, know-10)

(ROOT
  (S (`` `)
    (S
      (NP (NNP E))
      (VP (VBZ 's)
        (VP (VBN taken)
          (NP (PRP$ my) (NN girl))
          (PP (IN out)
            (NP
              (NP (NN walkin) (POS '))
              (, ,)
              (NP (NNP An)))))))
    ('' ')
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN got)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP (`` `)
                (NP (NN im))
                (ADVP (RB so))
                (: --)
                (NP (NNP Gawd)))
              (PRN (: --)
                (S
                  (VP (VB bless)))
                (: --))
              (`` `)
              (NP (NN im)))))))
    (. !)))

nsubjpass(taken-4, E-2)
auxpass(taken-4, 's-3)
ccomp(got-15, taken-4)
nmod:poss(girl-6, my-5)
dobj(taken-4, girl-6)
case(walkin-8, out-7)
nmod:'(taken-4, walkin-8)
case(walkin-8, '-9)
appos(walkin-8, An-11)
nsubj(got-15, I-13)
nsubj:xsubj(tell-17, I-13)
aux(got-15, 've-14)
root(ROOT-0, got-15)
mark(tell-17, to-16)
xcomp(got-15, tell-17)
dobj(tell-17, im-19)
advmod(im-19, so-20)
dep(im-19, Gawd-22)
parataxis(tell-17, bless-24)
dobj(tell-17, im-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN got)
        (S
          (VP (TO to)
            (VP (VB tell) (`` `)
              (NP (NN im) (RB so)))))))
    (. .) ('' '')))

nsubj(got-3, I-1)
nsubj:xsubj(tell-5, I-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
mark(tell-5, to-4)
xcomp(got-3, tell-5)
dobj(tell-5, im-7)
advmod(im-7, so-8)

(ROOT
  (S (`` ``)
    (NP (NNP D'yer))
    (VP (VBP know)
      (NP (WP what))
      (`` `)
      (SBAR
        (S
          (NP (NNP e) (POS 's))
          (VP (VBP like) (, ,)
            (S
              (NP (NNP Bill))
              (`` `)
              (NP (NNP Awkins)))))))
    (. ?) ('' '')))

nsubj(know-3, D'yer-2)
root(ROOT-0, know-3)
dobj(know-3, what-4)
nsubj(like-8, e-6)
case(e-6, 's-7)
dep(know-3, like-8)
dep(Awkins-12, Bill-10)
xcomp(like-8, Awkins-12)

(ROOT
  (S (`` ``)
    (NP
      (NP (RB Now))
      (SBAR
        (WHNP (WP what))
        (S
          (PP (IN in)
            (NP (DT the) (NNP devil)))
          (VP (MD would)))))
    (NP (PRP I))
    (VP (VBP care))
    (. ?) ('' '') ('' '')))

nsubj(would-7, Now-2)
nsubj(care-9, Now-2)
ref(Now-2, what-3)
case(devil-6, in-4)
det(devil-6, the-5)
nmod:in(would-7, devil-6)
acl:relcl(Now-2, would-7)
nsubj(care-9, I-8)
root(ROOT-0, care-9)

(ROOT
  (S
    (S
      (NP (`` `)
        (NP
          (NP (NNP E) (POS 's))
          (JJ the) (NN livin))
        ('' ')
        (PRN (, ,)
          (NP
            (NP
              (NP (NN breathin) (POS '))
              (NN image))
            (PP (IN of)
              (NP
                (NP (DT an) (NN organ-grinder) (POS 's))
                (NN monkey))))
          (, ,))
        (PP (IN With)
          (NP
            (NP (DT a) (NN pound))
            (PP (IN of)
              (NP
                (NP (NN grease))
                (PP (IN in)))))))
      (`` `)
      (VP (VBZ is) (`` `)
        (NP (NN air))))
    (: --)
    (S
      (NP
        (NP (NNP Gawd))
        (PRN (: --)
          (S
            (VP (VB bless)))
          (: --))
        (`` `))
      (VP (VBP im)))
    (. !)))

nmod:poss(livin-5, E-2)
case(E-2, 's-3)
amod(livin-5, the-4)
nsubj(air-26, livin-5)
nmod:poss(image-10, breathin-8)
case(breathin-8, '-9)
dep(livin-5, image-10)
case(monkey-15, of-11)
det(organ-grinder-13, an-12)
nmod:poss(monkey-15, organ-grinder-13)
case(organ-grinder-13, 's-14)
nmod:of(image-10, monkey-15)
case(pound-19, With-17)
det(pound-19, a-18)
nmod:with(livin-5, pound-19)
case(grease-21, of-20)
nmod:of(pound-19, grease-21)
acl(grease-21, in-22)
cop(air-26, is-24)
root(ROOT-0, air-26)
nsubj(im-33, Gawd-28)
dep(Gawd-28, bless-30)
parataxis(air-26, im-33)

(ROOT
  (S
    (NP
      (NP (NNP An) (POS '))
      (NP (DT a) (NN pound) (NN o) (POS '))
      (NNP grease))
    (ADVP (RB in))
    (VP (`` `) (VBZ is)
      (ADJP (`` `) (JJ air)))
    (. .) ('' '')))

nmod:poss(grease-7, An-1)
case(An-1, '-2)
det(o-5, a-3)
compound(o-5, pound-4)
nmod:poss(grease-7, o-5)
case(o-5, '-6)
nsubj(air-12, grease-7)
advmod(air-12, in-8)
cop(air-12, is-10)
root(ROOT-0, air-12)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP An) (POS '))
      (VP (VBZ s) (`` `)
        (VP (VB pose)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBD met)
                (S
                  (NP (NNP Bill))
                  (`` `)
                  (NP (NNP Awkins)))))))))
    (, ,)
    (ADVP (RB Now))
    (S
      (NP
        (NP (WP what))
        (PP (IN in)
          (NP (DT the) (NNP devil))))
      (`` `)
      (VP (VBP ud)
        (SBAR
          (S
            (NP (PRP ye))
            (VP (VBP do))))))
    (. ?) ('' '')))

nsubj(pose-6, An-2)
case(An-2, '-3)
aux(pose-6, s-4)
root(ROOT-0, pose-6)
nsubj(met-8, you-7)
ccomp(pose-6, met-8)
dep(Awkins-11, Bill-9)
xcomp(met-8, Awkins-11)
advmod(ud-19, Now-13)
nsubj(ud-19, what-14)
case(devil-17, in-15)
det(devil-17, the-16)
nmod:in(what-14, devil-17)
parataxis(pose-6, ud-19)
nsubj(do-21, ye-20)
ccomp(ud-19, do-21)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB open) (`` `)
        (S
          (VP (VBZ is)
            (ADJP (JJ cheek)
              (PP (TO to)))
            (`` `)
            (SQ (VBZ is)
              (NP
                (NP (NN chin-strap))
                (S
                  (VP (VB buckle) (, ,)
                    (S
                      (NP (NNP An) (POS '))
                      (VP (VBG bung)
                        (PRT (RP up))
                        (`` `)
                        (S
                          (S
                            (VP (VBZ is)
                              (NP
                                (NP
                                  (NP (DT both) (NNS eyes))
                                  (, ,)
                                  (ADVP (RB too)))
                                (: --)
                                (NP
                                  (NP (NNP Gawd))
                                  (PRN (: --)
                                    (S
                                      (VP (VB bless)))
                                    (: --))))))
                          (`` `)
                          (ADJP (JJ im)))))))))))))
    (. !)))

nsubj(open-4, I-2)
aux(open-4, 'd-3)
root(ROOT-0, open-4)
cop(cheek-7, is-6)
ccomp(open-4, cheek-7)
nmod(cheek-7, to-8)
dep(cheek-7, is-10)
nsubj(is-10, chin-strap-11)
dep(chin-strap-11, buckle-12)
nsubj(bung-16, An-14)
case(An-14, '-15)
dep(buckle-12, bung-16)
compound:prt(bung-16, up-17)
cop(eyes-21, is-19)
det(eyes-21, both-20)
xcomp(bung-16, eyes-21)
advmod(eyes-21, too-23)
dep(eyes-21, Gawd-25)
dep(Gawd-25, bless-27)
dep(eyes-21, im-30)

(ROOT
  (S
    (S
      (NP (NNP An) (POS '))
      (VP (VBG bung)
        (PRT (RP up))
        (`` `)
        (S
          (VP (VBZ is)
            (NP (DT both) (NNS eyes))))))
    (, ,)
    (ADVP (RB too))
    (. !) ('' '')))

nsubj(bung-3, An-1)
case(An-1, '-2)
root(ROOT-0, bung-3)
compound:prt(bung-3, up-4)
cop(eyes-8, is-6)
det(eyes-8, both-7)
ccomp(bung-3, eyes-8)
advmod(bung-3, too-10)

(ROOT
  (S (`` ``)
    (VP (VB Look)
      (NP (`` `)
        (NP (NN ere))
        (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (POS '))
            (ADVP (RB e))
            (VP (VBZ comes) (, ,)
              (S
                (NP (NNP Bill))
                (`` `)
                (NP (NNP Awkins))))))))
    (. !)))

root(ROOT-0, Look-2)
dobj(Look-2, ere-4)
advmod(comes-9, where-6)
nsubj(comes-9, '-7)
advmod(comes-9, e-8)
acl:relcl(ere-4, comes-9)
dep(Awkins-13, Bill-11)
xcomp(comes-9, Awkins-13)

(ROOT
  (SBARQ
    (ADVP (RB Now))
    (WHNP
      (WHNP (WP what))
      (PP (IN in)
        (NP (DT the) (JJ devil) (NN will) (PRP you))))
    (SQ
      (VP (VBP say)))
    (. ?) ('' '')))

advmod(say-8, Now-1)
nsubj(say-8, what-2)
case(will-6, in-3)
det(will-6, the-4)
amod(will-6, devil-5)
nmod:in(what-2, will-6)
dep(will-6, you-7)
root(ROOT-0, say-8)

(ROOT
  (S
    (S (`` ``)
      (S
        (NP (PRP It))
        (VP (VBZ is) (RB n't)
          (NP (NN fit) (DT an))))
      ('' ')
      (VP (VBZ proper)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN fightin) ('' ')
                (PP (IN on)
                  (NP (DT a) (NNP Sunday)))))))))
    (, ,) (IN So)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB pass) (`` `)
          (S
            (VP (VB im)
              (NP
                (NP
                  (NP (DT the) (NN time) (NN o) (POS '))
                  (NN day))
                (PRN (: --)
                  (NP
                    (NP (NNP Gawd))
                    (: --)
                    (NP (NNP bless)))
                  (: --)))
              (`` `) (VB im))))))
    (. !)))

nsubj(fit-5, It-2)
cop(fit-5, is-3)
neg(fit-5, n't-4)
ccomp(proper-8, fit-5)
dep(fit-5, an-6)
root(ROOT-0, proper-8)
mark(fightin-11, to-9)
auxpass(fightin-11, be-10)
xcomp(proper-8, fightin-11)
case(Sunday-15, on-13)
det(Sunday-15, a-14)
nmod:on(fightin-11, Sunday-15)
dep(proper-8, So-17)
nsubj(pass-20, I-18)
aux(pass-20, 'll-19)
parataxis(proper-8, pass-20)
ccomp(pass-20, im-22)
det(o-25, the-23)
compound(o-25, time-24)
nmod:poss(day-27, o-25)
case(o-25, '-26)
dobj(im-22, day-27)
dep(day-27, Gawd-29)
dep(Gawd-29, bless-31)
dep(im-22, im-34)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB pass) (`` `)
        (NP (JJ im)
          (NP (DT the) (NN time) (NN o) (POS '))
          (NN day))))
    (. !) ('' '')))

nsubj(pass-3, I-1)
aux(pass-3, 'll-2)
root(ROOT-0, pass-3)
amod(day-10, im-5)
det(o-8, the-6)
compound(o-8, time-7)
nmod:poss(day-10, o-8)
case(o-8, '-9)
nmod:tmod(pass-3, day-10)

(ROOT
  (S
    (S
      (NP (DT THE) (NN MOTHER-LODGE))
      (ADVP (RB There))
      (VP (VBD was)
        (NP
          (NP (NNP Rundle))
          (, ,)
          (NP (NNP Station) (NNP Master))
          (, ,)
          (NP
            (NP
              (NP (NNP An) (POS '))
              (NNP Beazeley))
            (PP (IN of)
              (NP
                (NP (DT the) (NNP Rail))
                (, ,)
                (NP
                  (NP (NNP An) (POS '))
                  (`` `)
                  (NP (NNP Ackman) (, ,) (NNP Commissariat) (, ,) (NNP An) ('' ') (NNP Donkin))
                  ('' ') (NN o)))))
          ('' ')
          (NP (DT the) (NN Jail))
          (: ;)
          (NP
            (NP
              (NP (NNP An) (POS '))
              (NNP Blake))
            (, ,)
            (NP (NNP Conductor-Sargent))))))
    (, ,)
    (S
      (NP (PRP$ Our) (NN Master))
      (ADVP (RB twice))
      (VP (VBD was) (`` `)
        (ADJP (JJ e))))
    (, ,)
    (PP (IN With)
      (NP (`` `)
        (NP
          (NP (NN im))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD kept)
                (NP (DT the) (NN Europe-shop))))))
        (, ,)
        (NP (NNP Old) (NNP Framjee) (NNP Eduljee))))
    (. .)))

det(MOTHER-LODGE-2, THE-1)
nsubj(Rundle-5, MOTHER-LODGE-2)
advmod(Rundle-5, There-3)
cop(Rundle-5, was-4)
root(ROOT-0, Rundle-5)
compound(Master-8, Station-7)
appos(Rundle-5, Master-8)
nmod:poss(Beazeley-12, An-10)
case(An-10, '-11)
appos(Rundle-5, Beazeley-12)
case(Rail-15, of-13)
det(Rail-15, the-14)
nmod:of(Beazeley-12, Rail-15)
nmod:poss(o-28, An-17)
case(An-17, '-18)
compound(Donkin-26, Ackman-20)
appos(Donkin-26, Commissariat-22)
appos(Donkin-26, An-24)
compound(o-28, Donkin-26)
appos(Rail-15, o-28)
det(Jail-31, the-30)
dep(Rundle-5, Jail-31)
nmod:poss(Blake-35, An-33)
case(An-33, '-34)
dep(Rundle-5, Blake-35)
appos(Blake-35, Conductor-Sargent-37)
nmod:poss(Master-40, Our-39)
nsubj(e-44, Master-40)
advmod(e-44, twice-41)
cop(e-44, was-42)
parataxis(Rundle-5, e-44)
case(im-48, With-46)
nmod:with(Rundle-5, im-48)
nsubj(kept-50, im-48)
ref(im-48, that-49)
acl:relcl(im-48, kept-50)
det(Europe-shop-52, the-51)
dobj(kept-50, Europe-shop-52)
compound(Eduljee-56, Old-54)
compound(Eduljee-56, Framjee-55)
appos(im-48, Eduljee-56)

(ROOT
  (FRAG
    (PP (IN Outside))
    (: --) (`` ``)
    (S
      (VP (VB Sergeant)))
    (. !)))

dep(Sergeant-4, Outside-1)
root(ROOT-0, Sergeant-4)

(ROOT
  (FRAG
    (NP (NNP Sir))
    (. !)))

root(ROOT-0, Sir-1)

(ROOT
  (S
    (VP (VB Salute))
    (. !)))

root(ROOT-0, Salute-1)

(ROOT
  (ADVP (RB Salaam) (. !) ('' '')))

root(ROOT-0, Salaam-1)

(ROOT
  (S
    (FRAG
      (NP
        (NP (NNP Inside))
        (: --)
        (NP
          (NP (`` ``) (NNS Brother) ('' ''))
          (, ,)
          (NP (DT an)))))
    ('' ')
    (NP (PRP it))
    (VP (VBZ does) (RB n't)
      (VP (VB do)
        (NP (DT no) (`` `) (NN arm))))
    (. .)))

dep(do-12, Inside-1)
dep(Inside-1, Brother-4)
appos(Brother-4, an-7)
nsubj(do-12, it-9)
aux(do-12, does-10)
neg(do-12, n't-11)
root(ROOT-0, do-12)
neg(arm-15, no-13)
dobj(do-12, arm-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD met)
      (PP (IN upon)
        (NP
          (NP (DT the) (NN Level))
          (, an) ('' ')
          (PRN
            (S
              (NP (PRP we))
              (VP (VBD parted)
                (PP (IN on)
                  (NP (DT the) (NNP Square))))))
          (, ,)
          (SBAR
            (S
              (NP
                (NP (NNP An) (POS '))
                (NN I))
              (VP (VBD was)
                (NP
                  (NP (NNP Junior) (NNP Deacon))
                  (PP (IN in)
                    (NP (PRP$ my) (NN Mother-Lodge))))
                (PP (IN out)
                  (NP (RB there)))))))))
    (. !)))

nsubj(met-2, We-1)
root(ROOT-0, met-2)
case(Level-5, upon-3)
det(Level-5, the-4)
nmod:upon(met-2, Level-5)
nsubj(parted-9, we-8)
dep(Level-5, parted-9)
case(Square-12, on-10)
det(Square-12, the-11)
nmod:on(parted-9, Square-12)
nmod:poss(I-16, An-14)
case(An-14, '-15)
nsubj(Deacon-19, I-16)
cop(Deacon-19, was-17)
compound(Deacon-19, Junior-18)
acl:relcl(Level-5, Deacon-19)
case(Mother-Lodge-22, in-20)
nmod:poss(Mother-Lodge-22, my-21)
nmod:in(Deacon-19, Mother-Lodge-22)
case(there-24, out-23)
nmod:out(Deacon-19, there-24)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD 'd)
        (NP
          (NP (NNP Bola) (NNP Nath) (, ,) (NNP Accountant) (, ,) (NNP An) ('' ') (NNP Saul))
          (SBAR
            (S
              (NP
                (NP (DT the) (NNP Aden) (NNP Jew))
                (, ,)
                (NP
                  (NP (NNP An) (POS '))
                  (NNP Din) (NNP Mohammed))
                (, ,))
              (VP (VBP draughtsman)
                (PP (IN Of)
                  (NP (DT the) (NNP Survey) (NNP Office)))
                (ADVP (RB too))))))))
    (: ;)
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (NNP Babu) (NNP Chuckerbutty))
          (, ,)
          (NP
            (NP
              (NP (NNP An) (POS '))
              (NNP Amir) (NNP Singh))
            (NP (DT the) (NNP Sikh)))
          (, ,)
          (NP
            (NP
              (NP (NNP An) (POS '))
              (NNP Castro))
            (PP (IN from)
              (NP (DT the) (NN fittin) (POS '))))
          (: -)
          (NP
            (NP (NNS sheds))
            (, ,)
            (NP (DT The) (NNP Roman) (NNP Catholick))))))
    (. !)))

nsubj('d-2, We-1)
root(ROOT-0, 'd-2)
compound(Saul-10, Bola-3)
compound(Saul-10, Nath-4)
appos(Saul-10, Accountant-6)
appos(Saul-10, An-8)
dobj('d-2, Saul-10)
det(Jew-13, the-11)
compound(Jew-13, Aden-12)
nsubj(draughtsman-20, Jew-13)
nmod:poss(Mohammed-18, An-15)
case(An-15, '-16)
compound(Mohammed-18, Din-17)
appos(Jew-13, Mohammed-18)
acl:relcl(Saul-10, draughtsman-20)
case(Office-24, Of-21)
det(Office-24, the-22)
compound(Office-24, Survey-23)
nmod:of(draughtsman-20, Office-24)
advmod(draughtsman-20, too-25)
expl(was-28, There-27)
parataxis('d-2, was-28)
compound(Chuckerbutty-30, Babu-29)
nsubj(was-28, Chuckerbutty-30)
nmod:poss(Singh-35, An-32)
case(An-32, '-33)
compound(Singh-35, Amir-34)
appos(Chuckerbutty-30, Singh-35)
det(Sikh-37, the-36)
dep(Singh-35, Sikh-37)
nmod:poss(Castro-41, An-39)
case(An-39, '-40)
appos(Chuckerbutty-30, Castro-41)
case(fittin-44, from-42)
det(fittin-44, the-43)
nmod:'(Castro-41, fittin-44)
case(fittin-44, '-45)
dep(Chuckerbutty-30, sheds-47)
det(Catholick-51, The-49)
compound(Catholick-51, Roman-50)
appos(sheds-47, Catholick-51)

(ROOT
  (S
    (S
      (NP (PRP We))
      (`` `)
      (NP
        (NP (NN ad))
        (SBAR
          (S
            (NP
              (NP
                (NP
                  (ADJP (RB n't) (JJ good))
                  (NN regalia))
                (, ,)
                (NP (NNP An) (POS ')))
              (NP (PRP$ our) (NN Lodge)))
            (VP (VBD was)
              (ADJP (JJ old)))))
        (, an) ('' '))
      (VP (VBZ bare)))
    (, ,)
    (CC But)
    (S
      (NP (PRP we))
      (VP (VBD knew)
        (NP
          (NP (DT the) (JJ Ancient) (NNP Landmarks) (, ,) (NNP An))
          ('' ')
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP kep) ('' ')
                (NP (PRP 'em))
                (PP (TO to)
                  (NP (DT a) (NN hair)))))))))
    (: ;)
    (S
      (NP (NNP An) (POS '))
      (VP (VBP lookin) ('' ')
        (PP (IN on)
          (NP (PRP it)))
        (ADVP (RB backwards)
          (SBAR
            (S
              (NP (PRP It))
              (ADVP (RB often))
              (VP (VBZ strikes)
                (NP (PRP me))
                (ADVP (RB thus))))))))
    (, ,)
    (S
      (NP (EX There))
      (VP (VBP ai) (RB n't)
        (NP (JJ such) (NNS things))
        (PP (IN as)
          (NP
            (NP (NNS infidels))
            (, ,)
            (NP (NNP Excep) (POS '))
            (, ,)
            (PP (IN per) (`` `)
              (NP (NN aps)))))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (PRP us))))
    (. .)))

nsubj(bare-16, We-1)
nsubj(bare-16, ad-3)
neg(good-5, n't-4)
amod(regalia-6, good-5)
nsubj(old-13, regalia-6)
appos(regalia-6, An-8)
case(An-8, '-9)
nmod:poss(Lodge-11, our-10)
dep(regalia-6, Lodge-11)
cop(old-13, was-12)
acl:relcl(ad-3, old-13)
root(ROOT-0, bare-16)
cc(bare-16, But-18)
nsubj(knew-20, we-19)
conj:but(bare-16, knew-20)
det(An-25, the-21)
amod(An-25, Ancient-22)
compound(An-25, Landmarks-23)
dobj(knew-20, An-25)
nsubj(kep-28, we-27)
acl:relcl(An-25, kep-28)
dobj(kep-28, 'em-30)
case(hair-33, to-31)
det(hair-33, a-32)
nmod:to(kep-28, hair-33)
nsubj(lookin-37, An-35)
case(An-35, '-36)
conj:but(bare-16, lookin-37)
case(it-40, on-39)
nmod:on(lookin-37, it-40)
advmod(lookin-37, backwards-41)
nsubj(strikes-44, It-42)
advmod(strikes-44, often-43)
dep(backwards-41, strikes-44)
dobj(strikes-44, me-45)
advmod(strikes-44, thus-46)
expl(ai-49, There-48)
conj:but(bare-16, ai-49)
neg(ai-49, n't-50)
amod(things-52, such-51)
nsubj(ai-49, things-52)
case(infidels-54, as-53)
nmod:as(ai-49, infidels-54)
appos(infidels-54, Excep-56)
case(Excep-56, '-57)
case(aps-61, per-59)
nmod:per(infidels-54, aps-61)
nsubj(us-65, it-63)
cop(us-65, 's-64)
conj:but(bare-16, us-65)

(ROOT
  (S
    (PP (IN For)
      (ADVP (RB monthly)))
    (, ,)
    (PP (IN after)
      (NP (NNP Labour)))
    (PRN (, ,)
      (S
        (NP (PRP We))
        (VP
          (VP (MD 'd) (RB all)
            (VP (VB sit)
              (PRT (RP down))))
          (CC and)
          (VP (VBP smoke)
            (PRN (-LRB- -LRB-)
              (S
                (NP (PRP We))
                (VP (VBZ durs) (RB n't)
                  (VP (VB give)
                    (NP (DT no) (NNS banquits))
                    (, ,)
                    (NP
                      (NP (NNP Lest))
                      (SBAR
                        (S
                          (NP
                            (NP (DT a) (NNP Brother) (POS 's))
                            (NN caste))
                          (VP (VBD were)
                            (ADJP (JJ broke)))))))))
              (-RRB- -RRB-)))))
      (, ,))
    (NP
      (NP
        (NP (NNP An) (POS '))
        (NN man))
      (PP (IN on)
        (NP (NN man))))
    (VP (VBD got)
      (NP
        (NP
          (NP (NN talkin) (POS '))
          (NNP Religion))
        (, an) ('' ')
        (NP
          (NP (DT the) (NN rest))
          (, ,)
          (NP
            (NP
              (NP (NNP An) (POS '))
              (NP (DT every) (NN man) (NN comparin) (POS '))
              (NNP Of))
            (SBAR
              (S
                (NP
                  (NP (DT the) (NNP God) (POS '))
                  (NN e))
                (VP (VBD knew)
                  (NP (DT the) (JJS best)))))))))
    (. .)))

case(monthly-2, For-1)
advcl(got-36, monthly-2)
case(Labour-5, after-4)
nmod:after(got-36, Labour-5)
nsubj(sit-10, We-7)
nsubj(smoke-13, We-7)
aux(sit-10, 'd-8)
advmod(sit-10, all-9)
parataxis(got-36, sit-10)
compound:prt(sit-10, down-11)
cc(sit-10, and-12)
conj:and(sit-10, smoke-13)
parataxis(got-36, smoke-13)
nsubj(durs-16, We-15)
parataxis(smoke-13, durs-16)
neg(durs-16, n't-17)
dep(durs-16, give-18)
neg(banquits-20, no-19)
dobj(give-18, banquits-20)
dobj(give-18, Lest-22)
det(Brother-24, a-23)
nmod:poss(caste-26, Brother-24)
case(Brother-24, 's-25)
nsubj(broke-28, caste-26)
cop(broke-28, were-27)
acl:relcl(Lest-22, broke-28)
nmod:poss(man-33, An-31)
case(An-31, '-32)
nsubj(got-36, man-33)
case(man-35, on-34)
nmod:on(man-33, man-35)
root(ROOT-0, got-36)
nmod:poss(Religion-39, talkin-37)
case(talkin-37, '-38)
dobj(got-36, Religion-39)
det(rest-43, the-42)
dep(Religion-39, rest-43)
nmod:poss(Of-51, An-45)
case(An-45, '-46)
det(comparin-49, every-47)
compound(comparin-49, man-48)
nmod:poss(Of-51, comparin-49)
case(comparin-49, '-50)
appos(rest-43, Of-51)
det(God-53, the-52)
nmod:poss(e-55, God-53)
case(God-53, '-54)
nsubj(knew-56, e-55)
acl:relcl(Of-51, knew-56)
det(best-58, the-57)
dobj(knew-56, best-58)

(ROOT
  (S (IN So)
    (S
      (NP
        (NP (NN man))
        (PP (IN on)
          (NP (NN man))))
      (VP (VBD got)
        (NP (NN talkin) ('' '))))
    (, ,)
    (S
      (NP
        (NP (NNP An) (POS '))
        (VP
          (ADVP (RB not)
            (NP (DT a) (JJ Brother) (NNS stirred))
            (PP (IN Till)
              (NP (NN mornin) (POS '))))
          (VBN waked)
          (S
            (NP (DT the) (NNS parrots))
            (NP (NNP An)))
          ('' ')
          (SBAR (IN that)
            (S
              (NP
                (NP (NN dam) (POS '))
                (NN brain-fever-bird))
              (: ;)
              (NP (PRP We))
              (VP (MD 'd)
                (VP (VB say))))))
        (NN 't))
      (VP (VBD was)
        (NP (`` `)
          (NP
            (NP (JJ ighly) (NNS curious))
            (, ,)
            (NP (NNP An)))
          ('' ')
          (SBAR
            (S
              (NP (PRP we))
              (VP (MD 'd) (RB all)
                (VP (VB ride) (`` `)
                  (NP
                    (NP (NN ome))
                    (PP (TO to)
                      (NP (NN bed)))))))))))
    (, ,)
    (PP (IN With)
      (NP
        (NP (NNP Mo'ammed) (, ,) (NNP God) (, ,))
        (, an) ('' ')
        (VP (VBG Shiva)
          (S
            (NP
              (NP
                (NP (NNP Changin) (POS '))
                (NNS pickets))
              (PP (IN in)
                (NP (PRP$ our))))
            (`` `)
            (ADJP (JJ ead))))))
    (. .)))

dep(got-5, So-1)
nsubj(got-5, man-2)
case(man-4, on-3)
nmod:on(man-2, man-4)
root(ROOT-0, got-5)
dobj(got-5, talkin-6)
nmod:poss('t-31, An-9)
case(An-9, '-10)
neg(waked-18, not-11)
det(stirred-14, a-12)
amod(stirred-14, Brother-13)
nmod:npmod(not-11, stirred-14)
case(mornin-16, Till-15)
nmod:till(not-11, mornin-16)
case(mornin-16, '-17)
acl('t-31, waked-18)
det(parrots-20, the-19)
nsubj(An-21, parrots-20)
xcomp(waked-18, An-21)
mark(say-30, that-23)
nmod:poss(brain-fever-bird-26, dam-24)
case(dam-24, '-25)
nsubj(say-30, brain-fever-bird-26)
nsubj(say-30, We-28)
aux(say-30, 'd-29)
ccomp(waked-18, say-30)
nsubj(curious-35, 't-31)
cop(curious-35, was-32)
amod(curious-35, ighly-34)
parataxis(got-5, curious-35)
appos(curious-35, An-37)
nsubj(ride-42, we-39)
aux(ride-42, 'd-40)
advmod(ride-42, all-41)
acl:relcl(curious-35, ride-42)
dobj(ride-42, ome-44)
case(bed-46, to-45)
nmod:to(ome-44, bed-46)
case(God-51, With-48)
compound(God-51, Mo'ammed-49)
nmod:with(got-5, God-51)
acl(God-51, Shiva-55)
nmod:poss(pickets-58, Changin-56)
case(Changin-56, '-57)
dep(ead-62, pickets-58)
case(our-60, in-59)
nmod:in(pickets-58, our-60)
xcomp(Shiva-55, ead-62)

(ROOT
  (S
    (S
      (NP
        (NP (JJ Full) (NN oft))
        (PP (IN on)
          (NP (NNP Guv))))
      (`` `)
      (VP (VBP ment)
        (VP (VB service)
          (S
            (NP
              (NP (DT This) (NN rovin) (POS '))
              (NN foot))
            (`` `)
            (ADJP (RB ath) (VBN pressed))))))
    (, ,)
    (NP (NNP An) (POS '))
    (VP (VBD bore)
      (SBAR
        (S
          (NP (JJ fraternal) (NN greetin))
          (VP (VBZ 's)
            (PP (TO To)
              (NP
                (NP (DT the) (NNPS Lodges))
                (ADVP (JJ east))
                (, an) ('' ')
                (SBAR
                  (S
                    (S
                      (ADVP (NN west))
                      (, ,)
                      (NP (NNP Accordin) (POS '))
                      (ADVP (IN as))
                      (VP (VBD commanded)
                        (PP (IN From)
                          (NP (NNP Kohat)))
                        (PP (TO to)
                          (NP (NNP Singapore)))))
                    (, ,)
                    (CC But)
                    (S
                      (NP (PRP I))
                      (VP (VBP wish)
                        (SBAR (IN that)
                          (S
                            (NP (PRP I))
                            (VP (MD might)
                              (VP (VB see)
                                (S
                                  (NP (PRP them))
                                  (PP (IN In)
                                    (NP (PRP$ my) (NN Mother-Lodge))))
                                (ADVP (RB once) (RBR more))))))))))))))))
    (. !)))

amod(oft-2, Full-1)
nsubj(ment-6, oft-2)
case(Guv-4, on-3)
nmod:on(oft-2, Guv-4)
ccomp(bore-18, ment-6)
xcomp(ment-6, service-7)
det(rovin-9, This-8)
nmod:poss(foot-11, rovin-9)
case(rovin-9, '-10)
dep(pressed-14, foot-11)
advmod(pressed-14, ath-13)
xcomp(service-7, pressed-14)
nsubj(bore-18, An-16)
case(An-16, '-17)
root(ROOT-0, bore-18)
amod(greetin-20, fraternal-19)
nsubj(Lodges-24, greetin-20)
cop(Lodges-24, 's-21)
case(Lodges-24, To-22)
det(Lodges-24, the-23)
ccomp(bore-18, Lodges-24)
advmod(Lodges-24, east-25)
advmod(commanded-33, west-28)
nsubj(commanded-33, Accordin-30)
case(Accordin-30, '-31)
advmod(commanded-33, as-32)
acl:relcl(Lodges-24, commanded-33)
case(Kohat-35, From-34)
nmod:from(commanded-33, Kohat-35)
case(Singapore-37, to-36)
nmod:to(commanded-33, Singapore-37)
cc(commanded-33, But-39)
nsubj(wish-41, I-40)
acl:relcl(Lodges-24, wish-41)
conj:but(commanded-33, wish-41)
mark(see-45, that-42)
nsubj(see-45, I-43)
aux(see-45, might-44)
ccomp(wish-41, see-45)
xcomp(see-45, them-46)
case(Mother-Lodge-49, In-47)
nmod:poss(Mother-Lodge-49, my-48)
dep(them-46, Mother-Lodge-49)
advmod(more-51, once-50)
advmod(see-45, more-51)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD might)
            (VP (VB see)
              (NP
                (NP (PRP them))
                (, ,)
                (NP
                  (NP (PRP$ My) (NNS Brethren))
                  (NP (JJ black) (DT an))))
              ('' ')
              (ADVP (RB brown))
              (, ,)
              (S
                (S
                  (PP (IN With)
                    (NP
                      (NP
                        (NP (DT the) (JJ trichies) (NN smellin) (POS '))
                        (NNP pleasant) (NNP An) (POS '))
                      (NP (DT the) (JJ _) (JJ hog-darn) (NN _) (NN passin) ('' '))
                      (PP (IN down) (: ;)
                        (NP
                          (NP (NNP An) (POS '))
                          (NP (DT the)
                            (ADJP (JJ old) (JJ khansamah))
                            (NN snorin)))
                        ('' '))))
                  (PP (IN On)
                    (NP (DT the) (JJ bottle-khana) (NN floor))))
                (, ,)
                (S
                  (PP (IN Like)
                    (NP
                      (NP (DT a) (NN Master))
                      (PP (IN in)
                        (NP (JJ good) (NN standing)))))
                  (PP (IN With)
                    (NP (PRP$ my) (NN Mother-Lodge)))))))))
      (ADVP (RB once) (RBR more)))
    (. !)))

nsubj(wish-2, I-1)
root(ROOT-0, wish-2)
mark(see-6, that-3)
nsubj(see-6, I-4)
aux(see-6, might-5)
ccomp(wish-2, see-6)
dobj(see-6, them-7)
nmod:poss(Brethren-10, My-9)
appos(them-7, Brethren-10)
dep(Brethren-10, black-11)
dep(black-11, an-12)
advmod(see-6, brown-14)
case(An-22, With-16)
det(smellin-19, the-17)
amod(smellin-19, trichies-18)
nmod:poss(An-22, smellin-19)
case(smellin-19, '-20)
compound(An-22, pleasant-21)
dep(floor-42, An-22)
case(An-22, '-23)
det(passin-28, the-24)
amod(passin-28, _-25)
amod(passin-28, hog-darn-26)
compound(passin-28, _-27)
dep(An-22, passin-28)
case(An-32, down-30)
nmod:down(An-22, An-32)
case(An-32, '-33)
det(snorin-37, the-34)
amod(khansamah-36, old-35)
amod(snorin-37, khansamah-36)
dep(An-32, snorin-37)
case(floor-42, On-39)
det(floor-42, the-40)
amod(floor-42, bottle-khana-41)
xcomp(see-6, floor-42)
case(Master-46, Like-44)
det(Master-46, a-45)
dep(Mother-Lodge-52, Master-46)
case(standing-49, in-47)
amod(standing-49, good-48)
nmod:in(Master-46, standing-49)
case(Mother-Lodge-52, With-50)
nmod:poss(Mother-Lodge-52, my-51)
parataxis(floor-42, Mother-Lodge-52)
advmod(more-54, once-53)
advmod(wish-2, more-54)

(ROOT
  (FRAG
    (PP (IN Outside))
    (: --) (`` ``)
    (S
      (VP (VB Sergeant)))
    (. !)))

dep(Sergeant-4, Outside-1)
root(ROOT-0, Sergeant-4)

(ROOT
  (FRAG
    (NP (NNP Sir))
    (. !)))

root(ROOT-0, Sir-1)

(ROOT
  (S
    (VP (VB Salute))
    (. !)))

root(ROOT-0, Salute-1)

(ROOT
  (ADVP (RB Salaam) (. !) ('' '')))

root(ROOT-0, Salaam-1)

(ROOT
  (S
    (FRAG
      (NP
        (NP (NNP Inside))
        (: --)
        (NP
          (NP (`` ``) (NNS Brother) ('' ''))
          (, ,)
          (NP (DT an)))))
    ('' ')
    (NP (PRP it))
    (VP (VBZ does) (RB n't)
      (VP (VB do)
        (NP (DT no) (`` `) (NN arm))))
    (. .)))

dep(do-12, Inside-1)
dep(Inside-1, Brother-4)
appos(Brother-4, an-7)
nsubj(do-12, it-9)
aux(do-12, does-10)
neg(do-12, n't-11)
root(ROOT-0, do-12)
neg(arm-15, no-13)
dobj(do-12, arm-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD met)
      (PP (IN upon)
        (NP
          (NP (DT the) (NN Level))
          (, an) ('' ')
          (PRN
            (S
              (NP (PRP we))
              (VP (VBD parted)
                (PP (IN on)
                  (NP (DT the) (NNP Square))))))
          (, ,)
          (SBAR
            (S
              (NP
                (NP (NNP An) (POS '))
                (NN I))
              (VP (VBD was)
                (NP
                  (NP (NNP Junior) (NNP Deacon))
                  (PP (IN in)
                    (NP (PRP$ my) (NN Mother-Lodge))))
                (PP (IN out)
                  (NP (RB there)))))))))
    (. !)))

nsubj(met-2, We-1)
root(ROOT-0, met-2)
case(Level-5, upon-3)
det(Level-5, the-4)
nmod:upon(met-2, Level-5)
nsubj(parted-9, we-8)
dep(Level-5, parted-9)
case(Square-12, on-10)
det(Square-12, the-11)
nmod:on(parted-9, Square-12)
nmod:poss(I-16, An-14)
case(An-14, '-15)
nsubj(Deacon-19, I-16)
cop(Deacon-19, was-17)
compound(Deacon-19, Junior-18)
acl:relcl(Level-5, Deacon-19)
case(Mother-Lodge-22, in-20)
nmod:poss(Mother-Lodge-22, my-21)
nmod:in(Deacon-19, Mother-Lodge-22)
case(there-24, out-23)
nmod:out(Deacon-19, there-24)

(ROOT
  (S (`` ``)
    (NP (NNP FOLLOW) (NNP ME) (`` `) (NNP OME) ('' ''))
    (ADVP (RB There))
    (VP (VBD was)
      (ADVP (RB no)
        (NP (CD one))
        (PP (IN like)
          (NP (`` `)
            (NP (NN im))
            (, ,)
            (NP (`` `)
              (NP (NNP Orse)
                (CC or)
                (NNP Foot))
              (, ,) (RB Nor)
              (NP (DT any) (NN o))
              ('' ')))))
      (NP
        (NP
          (NP (DT the) (NNS Guns))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD knew)))))
        (: ;)
        (NP
          (NP (NNP An))
          ('' ')
          (SBAR (IN because)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADVP (RB so))
                (, ,)
                (SBAR
                  (WHADVP (WRB why))
                  (, ,)
                  (S
                    (NP
                      (NP
                        (NP (NNP o) (POS '))
                        (NN course) (POS '))
                      (NN e))
                    (VP (VBD went)
                      (NP (DT an)
                        (S
                          (NP (POS '))
                          (VP (VBD died))))))))))
          (, ,)
          (SBAR
            (WHNP (WDT Which))
            (S
              (VP (VBZ is)
                (SBAR
                  (WHADJP (RB just) (WP what))
                  (S
                    (NP (DT the) (JJS best) (NNS men))
                    (VP (VBP do))))))))))
    (. .)))

compound(OME-5, FOLLOW-2)
compound(OME-5, ME-3)
nsubj(Guns-25, OME-5)
advmod(Guns-25, There-7)
cop(Guns-25, was-8)
advmod(Guns-25, no-9)
nmod:npmod(no-9, one-10)
case(im-13, like-11)
nmod:like(no-9, im-13)
appos(im-13, Orse-16)
cc(Orse-16, or-17)
appos(im-13, Foot-18)
conj:or(Orse-16, Foot-18)
advmod(Orse-16, Nor-20)
det(o-22, any-21)
dep(Orse-16, o-22)
det(Guns-25, the-24)
root(ROOT-0, Guns-25)
nsubj(knew-27, I-26)
acl:relcl(Guns-25, knew-27)
dep(Guns-25, An-29)
nsubj(is-49, An-29)
mark(was-33, because-31)
nsubj(was-33, it-32)
dep(An-29, was-33)
advmod(was-33, so-34)
advmod(went-43, why-36)
nmod:poss(course-40, o-38)
case(o-38, '-39)
nmod:poss(e-42, course-40)
case(course-40, '-41)
nsubj(went-43, e-42)
advcl(was-33, went-43)
dobj(went-43, an-44)
nsubj(died-46, '-45)
dep(an-44, died-46)
ref(An-29, Which-48)
acl:relcl(An-29, is-49)
advmod(what-51, just-50)
dep(do-55, what-51)
det(men-54, the-52)
amod(men-54, best-53)
nsubj(do-55, men-54)
ccomp(is-49, do-55)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ 's)
      (VP (VB knock)
        (PRT (RP out))
        (NP
          (NP (PRP$ your) (NNS pipes))
          (, an) ('' ')
          (SBAR
            (S
              (VP (VBP follow)
                (NP (PRP me))))))))
    (. !)))

dep(knock-4, So-1)
nsubj(knock-4, it-2)
aux(knock-4, 's-3)
root(ROOT-0, knock-4)
compound:prt(knock-4, out-5)
nmod:poss(pipes-7, your-6)
dobj(knock-4, pipes-7)
acl:relcl(pipes-7, follow-10)
dobj(follow-10, me-11)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP it))
    (VP (VBZ 's)
      (VP (VB finish)
        (PRT (RP up))
        (NP
          (NP (PRP$ your) (NNS swipes))
          (, an) ('' ')
          (SBAR
            (S
              (VP (VBP follow)
                (NP (PRP me))))))))
    (. !)))

dep(finish-5, An-1)
case(An-1, '-2)
nsubj(finish-5, it-3)
aux(finish-5, 's-4)
root(ROOT-0, finish-5)
compound:prt(finish-5, up-6)
nmod:poss(swipes-8, your-7)
dobj(finish-5, swipes-8)
acl:relcl(swipes-8, follow-11)
dobj(follow-11, me-12)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (VP
      (VP (`` `) (VB ark)
        (PP (TO to)
          (NP (DT the) (JJ big) (JJ drum) (NN callin) ('' '))))
      (, ,)
      (VP
        (VP (VB Follow)
          (NP (PRP me)))
        (: --)
        (VP (VB follow)
          (S
            (NP (PRP me))
            (`` `)
            (ADJP (JJ ome))))))
    (. !)))

discourse(ark-4, Oh-1)
root(ROOT-0, ark-4)
case(callin-9, to-5)
det(callin-9, the-6)
amod(callin-9, big-7)
amod(callin-9, drum-8)
nmod:to(ark-4, callin-9)
dep(ark-4, Follow-12)
dobj(Follow-12, me-13)
dep(Follow-12, follow-15)
dep(ome-18, me-16)
xcomp(follow-15, ome-18)

(ROOT
  (S (`` `)
    (SQ (VBZ Is)
      (NP (NN mare))
      (NP (PRP she))
      (VP
        (VP (VB neighs)
          (NP (DT the) (`` `) (NN ole) (NN day))
          (ADVP (RB long)))
        (PRN (, ,)
          (S
            (NP (PRP She))
            (VP (VBZ paws)
              (NP (DT the) (`` `) (NN ole) (NN night))
              (ADVP (RB through))))
          (, ,))
        (NP (NNP An))))
    ('' ')
    (NP (PRP she))
    (VP (MD wo) (RB n't)
      (VP (VB take) (`` `)
        (S
          (NP (NN er) (NN feed))
          (NP
            (NP (JJ 'cause) (NN o) (POS '))
            (NN waitin)))
        ('' ')
        (PP (IN for) (`` `)
          (S
            (VP (VBZ is)
              (NP
                (NP (NN step))
                (, ,)
                (SBAR
                  (WHNP (WDT Which))
                  (S
                    (VP (VBZ is)
                      (SBAR
                        (WHADJP (RB just) (WP what))
                        (S
                          (NP (DT a) (NN beast))
                          (VP (MD would)
                            (VP (VB do))))))))))))))
    (. .)))

cop(neighs-5, Is-2)
nsubj(neighs-5, mare-3)
nsubj(neighs-5, she-4)
dep(take-25, neighs-5)
det(day-9, the-6)
compound(day-9, ole-8)
nmod:tmod(neighs-5, day-9)
advmod(neighs-5, long-10)
nsubj(paws-13, She-12)
parataxis(neighs-5, paws-13)
det(night-17, the-14)
compound(night-17, ole-16)
nmod:tmod(paws-13, night-17)
advmod(paws-13, through-18)
dobj(neighs-5, An-20)
nsubj(take-25, she-22)
aux(take-25, wo-23)
neg(take-25, n't-24)
root(ROOT-0, take-25)
compound(feed-28, er-27)
nsubj(waitin-32, feed-28)
amod(o-30, 'cause-29)
nmod:poss(waitin-32, o-30)
case(o-30, '-31)
xcomp(take-25, waitin-32)
case(step-37, for-34)
cop(step-37, is-36)
advcl(take-25, step-37)
nsubj(is-40, step-37)
ref(step-37, Which-39)
acl:relcl(step-37, is-40)
advmod(what-42, just-41)
dep(do-46, what-42)
det(beast-44, a-43)
nsubj(do-46, beast-44)
aux(do-46, would-45)
ccomp(is-40, do-46)

(ROOT
  (S (`` `)
    (SQ (VBZ Is)
      (NP
        (NP (NN girl))
        (SBAR
          (S
            (NP (PRP she))
            (VP (VBZ goes)
              (PP (IN with)
                (NP
                  (NP (DT a) (NN bombardier))
                  (SBAR (IN Before)
                    (S (`` `)
                      (NP (NN er) (NN month))
                      (VP (VBZ is)
                        (ADVP (RB through)))))
                  (: ;)
                  (NP (NNP An)))))))))
    ('' ')
    (NP (DT the) (NNS banns))
    (VP (VBP are)
      (ADVP (RB up)
        (PP (IN in)
          (NP (NN church))))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP she))
          (VP (VBZ 's)
            (VP (VBN got)
              (NP
                (NP (DT the) (NN beggar))
                (VP (VBN hooked))
                (, ,)
                (SBAR
                  (WHNP (WDT Which))
                  (S
                    (VP (VBZ is)
                      (SBAR
                        (WHADJP (RB just) (WP what))
                        (S
                          (NP (DT a) (NN girl))
                          (VP (MD would)
                            (VP (VB do))))))))))))))
    (. .)))

dep(are-20, Is-2)
nsubj(Is-2, girl-3)
nsubj(goes-5, she-4)
acl:relcl(girl-3, goes-5)
case(bombardier-8, with-6)
det(bombardier-8, a-7)
nmod:with(goes-5, bombardier-8)
mark(is-13, Before-9)
compound(month-12, er-11)
nsubj(is-13, month-12)
acl(bombardier-8, is-13)
advmod(is-13, through-14)
dep(bombardier-8, An-16)
det(banns-19, the-18)
nsubj(are-20, banns-19)
root(ROOT-0, are-20)
advmod(are-20, up-21)
case(church-23, in-22)
nmod:in(up-21, church-23)
mark(got-28, for-25)
nsubjpass(got-28, she-26)
auxpass(got-28, 's-27)
advcl(are-20, got-28)
det(beggar-30, the-29)
dobj(got-28, beggar-30)
nsubj(is-34, beggar-30)
acl(beggar-30, hooked-31)
ref(beggar-30, Which-33)
acl:relcl(beggar-30, is-34)
advmod(what-36, just-35)
dep(do-40, what-36)
det(girl-38, a-37)
nsubj(do-40, girl-38)
aux(do-40, would-39)
ccomp(is-34, do-40)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBD fought) (`` `)
        (S
          (VP (VBG bout)
            (NP (DT a) (NN dog))))))
    (: --)
    (S
      (NP (JJ last) (NN week))
      (NP (PRP it))
      (VP
        (VP (VBD were))
        (: --)
        (NP
          (NP (DT No)
            (QP (JJR more) (IN than) (DT a))
            (NN round))
          (CC or)
          (NP (CD two)))))
    (: ;)
    (CC But)
    (S
      (NP (PRP I))
      (VP (VBP strook)
        (NP (`` `)
          (NP
            (NP (JJ im) (JJ cruel) (`` `) (NN ard))
            (, ,)
            (NP (DT an)))
          ('' ')
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP wish)
                (NP (PRP I))
                (NP (`` `)
                  (NP
                    (NP (NN ad))
                    (VP (RB n't)
                      (NP (RB now))))
                  (, ,)
                  (SBAR
                    (WHNP (WDT Which))
                    (S
                      (VP (VBZ is)
                        (SBAR
                          (WHADJP (RB just) (WP what))
                          (S
                            (NP (DT a) (NN man))
                            (VP (MD ca) (RB n't)
                              (VP (VB do)))))))))))))))
    (. .) ('' ')))

nsubj(fought-2, We-1)
root(ROOT-0, fought-2)
xcomp(fought-2, bout-4)
det(dog-6, a-5)
dobj(bout-4, dog-6)
amod(week-9, last-8)
nmod:tmod(were-11, week-9)
nsubj(were-11, it-10)
conj:but(fought-2, were-11)
neg(round-17, No-13)
advmod(a-16, more-14)
mwe(more-14, than-15)
nummod(round-17, a-16)
dobj(were-11, round-17)
cc(round-17, or-18)
dobj(were-11, two-19)
conj:or(round-17, two-19)
cc(fought-2, But-21)
nsubj(strook-23, I-22)
conj:but(fought-2, strook-23)
amod(ard-28, im-25)
amod(ard-28, cruel-26)
dobj(strook-23, ard-28)
nsubj(is-41, ard-28)
appos(ard-28, an-30)
nsubj(wish-33, I-32)
acl:relcl(ard-28, wish-33)
iobj(wish-33, I-34)
dobj(wish-33, ad-36)
nsubj(is-41, ad-36)
neg(now-38, n't-37)
dep(ad-36, now-38)
ref(ard-28, Which-40)
ref(ad-36, Which-40)
acl:relcl(ad-36, is-41)
advmod(what-43, just-42)
dep(do-48, what-43)
det(man-45, a-44)
nsubj(do-48, man-45)
aux(do-48, ca-46)
neg(do-48, n't-47)
ccomp(is-41, do-48)

(ROOT
  (S
    (NP (NNP E))
    (VP (VBD was)
      (NP
        (NP
          (NP (DT all))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (`` `)
              (NP
                (NP (NN ad))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN way))
                    (PP (IN of)
                      (NP
                        (NP (DT a) (NN friend))
                        (, ,)
                        (NP
                          (NP (NNP An) (POS '))
                          (NN I)))))))
              (VP (VBP 've)
                (S (`` `)
                  (S
                    (NP (NN ad))
                    (VP (TO to)
                      (VP (VB find)
                        (S
                          (NP (PRP one))
                          (ADJP (JJ new))))))
                  (: ;)
                  (CC But)
                  (S
                    (NP (PRP I))
                    (VP (MD 'd)
                      (VP (VB give)
                        (NP (PRP$ my) (NN pay))))))))))
        (, an) ('' ')
        (NP
          (NP (NN stripe))
          (PP (IN for)
            (NP
              (S
                (VP (TO to)
                  (VP (VB get)
                    (NP (DT the) (NN beggar))
                    (ADVP (RB back)))))
              (, ,)
              (SBAR
                (WHNP (WDT Which))
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADVP (RB just))
                    (ADJP (RB too) (JJ late))
                    (S
                      (VP (TO to)
                        (VP (VB do))))))))))))
    (. .)))

nsubj(all-3, E-1)
cop(all-3, was-2)
root(ROOT-0, all-3)
mark('ve-18, that-4)
nsubj('ve-18, I-5)
nsubj('ve-18, ad-7)
case(way-10, in-8)
det(way-10, the-9)
nmod:in(ad-7, way-10)
case(friend-13, of-11)
det(friend-13, a-12)
nmod:of(way-10, friend-13)
nmod:poss(I-17, An-15)
case(An-15, '-16)
appos(friend-13, I-17)
dep(all-3, 've-18)
nsubj(find-22, ad-20)
mark(find-22, to-21)
xcomp('ve-18, find-22)
nsubj(new-24, one-23)
xcomp(find-22, new-24)
cc(find-22, But-26)
nsubj(give-29, I-27)
aux(give-29, 'd-28)
xcomp('ve-18, give-29)
conj:but(find-22, give-29)
nmod:poss(pay-31, my-30)
dobj(give-29, pay-31)
dep(all-3, stripe-34)
case(get-37, for-35)
mark(get-37, to-36)
nmod:for(stripe-34, get-37)
det(beggar-39, the-38)
dobj(get-37, beggar-39)
advmod(get-37, back-40)
dobj(late-47, Which-42)
nsubj:xsubj(do-49, Which-42)
nsubj(late-47, it-43)
cop(late-47, 's-44)
advmod(late-47, just-45)
advmod(late-47, too-46)
dep(get-37, late-47)
mark(do-49, to-48)
xcomp(late-47, do-49)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ 's)
      (VP (VB knock)
        (PRT (RP out))
        (NP
          (NP (PRP$ your) (NNS pipes))
          (, an) ('' ')
          (SBAR
            (S
              (VP (VBP follow)
                (NP (PRP me))))))))
    (. !)))

dep(knock-4, So-1)
nsubj(knock-4, it-2)
aux(knock-4, 's-3)
root(ROOT-0, knock-4)
compound:prt(knock-4, out-5)
nmod:poss(pipes-7, your-6)
dobj(knock-4, pipes-7)
acl:relcl(pipes-7, follow-10)
dobj(follow-10, me-11)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP An) (POS '))
        (NP (PRP it) (POS 's))
        (NNP finish))
      (PP (IN off)
        (NP (PRP$ your) (NNS swipes)))
      (, an) ('' '))
    (VP (VBP follow)
      (NP (PRP me)))
    (. !)))

nmod:poss(finish-5, An-1)
case(An-1, '-2)
nmod:poss(finish-5, it-3)
case(it-3, 's-4)
nsubj(follow-11, finish-5)
case(swipes-8, off-6)
nmod:poss(swipes-8, your-7)
nmod:off(finish-5, swipes-8)
root(ROOT-0, follow-11)
dobj(follow-11, me-12)

(ROOT
  (FRAG
    (INTJ (UH Oh))
    (, ,)
    (NP
      (NP (`` `) (NN ark))
      (PP (TO to)
        (NP (DT the) (NNS fifes) (NN a-crawlin) ('' '))))
    (. !)))

discourse(ark-4, Oh-1)
root(ROOT-0, ark-4)
case(a-crawlin-8, to-5)
det(a-crawlin-8, the-6)
compound(a-crawlin-8, fifes-7)
nmod:to(ark-4, a-crawlin-8)

(ROOT
  (SQ
    (VP
      (VP (VB Follow)
        (NP (PRP me)))
      (: --)
      (VP (VB follow)
        (S
          (NP (PRP me))
          (`` `)
          (ADJP (JJ ome)))))
    (. !)))

root(ROOT-0, Follow-1)
dobj(Follow-1, me-2)
dep(Follow-1, follow-4)
dep(ome-7, me-5)
xcomp(follow-4, ome-7)

(ROOT
  (S
    (VP (VB Take)
      (S
        (VP (`` `) (VB im)
          (ADVP (RB away)))))
    (. !)))

root(ROOT-0, Take-1)
ccomp(Take-1, im-3)
advmod(im-3, away-4)

(ROOT
  (S (`` `)
    (NP (NNP E))
    (VP (VBZ 's)
      (VP (VBN gone)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (JJS best) (NNS men))
            (VP (VBP go))))))
    (. .)))

nsubjpass(gone-4, E-2)
auxpass(gone-4, 's-3)
root(ROOT-0, gone-4)
advmod(go-9, where-5)
det(men-8, the-6)
amod(men-8, best-7)
nsubj(go-9, men-8)
advcl(gone-4, go-9)

(ROOT
  (S
    (VP (VB Take)
      (S
        (VP (`` `) (VB im)
          (ADVP (RB away)))))
    (. !)))

root(ROOT-0, Take-1)
ccomp(Take-1, im-3)
advmod(im-3, away-4)

(ROOT
  (S
    (NP (NNP An) (POS ') (DT the) (NN gun-wheels) (NNS turnin) ('' '))
    (VP (VB slow))
    (. .)))

nmod:poss(turnin-5, An-1)
case(turnin-5, '-2)
det(turnin-5, the-3)
compound(turnin-5, gun-wheels-4)
nsubj(slow-7, turnin-5)
root(ROOT-0, slow-7)

(ROOT
  (S
    (VP (VB Take)
      (S
        (VP (`` `) (VB im)
          (ADVP (RB away)))))
    (. !)))

root(ROOT-0, Take-1)
ccomp(Take-1, im-3)
advmod(im-3, away-4)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (ADVP (RBR more)
        (PP (IN from)
          (NP
            (NP (DT the) (NN place) (POS '))
            (NN e))))
      (VP (VBN come)))
    (. .)))

expl(come-9, There-1)
auxpass(come-9, 's-2)
advmod(come-9, more-3)
case(e-8, from-4)
det(place-6, the-5)
nmod:poss(e-8, place-6)
case(place-6, '-7)
nmod:from(more-3, e-8)
root(ROOT-0, come-9)

(ROOT
  (S
    (VP (VB Take)
      (VP (`` `) (VBN im)
        (ADVP (RB away))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT the) (NN limber))
            (, an) ('' ')
            (NP (DT the) (NN drum))))))
    (. .)))

root(ROOT-0, Take-1)
dep(Take-1, im-3)
advmod(im-3, away-4)
case(limber-8, with-6)
det(limber-8, the-7)
nmod:with(im-3, limber-8)
det(drum-12, the-11)
dep(limber-8, drum-12)

(ROOT
  (S (IN For)
    (S
      (NP
        (NP (PRP it))
        (SBAR
          (S
            (VP (VBZ 's) (`` ``)
              (ADJP
                (NP (CD Three) (NNS rounds))
                (JJ blank))
              ('' ''))))
        (, an) ('' '))
      (VP
        (VP (VBP follow)
          (NP (PRP me)))
        (, ,)
        (NP
          (NP (NNP An))
          ('' ')
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ 's) (`` ``)
                (NP (JJ Thirteen) (NN rank))
                ('' ''))))
          (, an) ('' ')
          (S
            (VP (VB follow)
              (NP (PRP me)))))))
    (: ;)
    (S
      (INTJ (UH Oh))
      (, ,)
      (VP
        (VP (VB passin) (`` ')
          (NP
            (NP (DT the) (NN love) (NN o) (POS '))
            (NNS women)))
        (, ,)
        (VP
          (VP (VB Follow)
            (NP (PRP me)))
          (: --)
          (VP (VB follow)
            (S
              (NP (PRP me))
              (`` `)
              (ADJP (JJ ome)))))))
    (. !)))

dep(follow-11, For-1)
nsubj(follow-11, it-2)
cop(blank-7, 's-3)
nummod(rounds-6, Three-5)
nmod:npmod(blank-7, rounds-6)
acl:relcl(it-2, blank-7)
root(ROOT-0, follow-11)
dobj(follow-11, me-12)
dobj(follow-11, An-14)
nsubj(rank-20, it-16)
cop(rank-20, 's-17)
amod(rank-20, Thirteen-19)
acl:relcl(An-14, rank-20)
dep(An-14, follow-24)
dobj(follow-24, me-25)
discourse(passin-29, Oh-27)
parataxis(follow-11, passin-29)
det(o-33, the-31)
compound(o-33, love-32)
nmod:poss(women-35, o-33)
case(o-33, '-34)
dobj(passin-29, women-35)
dep(passin-29, Follow-37)
dobj(Follow-37, me-38)
dep(Follow-37, follow-40)
dep(ome-43, me-41)
xcomp(follow-40, ome-43)

(ROOT
  (S
    (S
      (NP (DT THE) (NN SERGEANT))
      (VP (VBZ 'S)
        (NP
          (NP
            (NP (NNP WEDDIN) (POS '))
            ('' ') (NN E))
          (SBAR
            (S
              (VP (VBD was)
                (VP (VBN warned)
                  (NP
                    (NP (NN agin) (POS '))
                    (`` `) (NN er)))))))))
    (: --)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD made) (`` `)
              (S
                (NP (NN im))
                (VP (VB look))))))))
    (: ;)
    (S
      (NP (PRP She))
      (VP (VBD was)
        (VP (VBN warned)
          (NP
            (NP (NN agin) (POS '))
            (`` `) (NN im)))))
    (: --)
    (S
      (NP (DT That))
      (VP (VBZ is)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP she))
            (VP (VBD took))))))
    (. .)))

det(SERGEANT-2, THE-1)
nsubj(E-7, SERGEANT-2)
cop(E-7, 'S-3)
nmod:poss(E-7, WEDDIN-4)
case(WEDDIN-4, '-5)
root(ROOT-0, E-7)
auxpass(warned-9, was-8)
acl:relcl(E-7, warned-9)
nmod:poss(er-13, agin-10)
case(agin-10, '-11)
dobj(warned-9, er-13)
nsubj('s-16, That-15)
parataxis(E-7, 's-16)
nsubj(made-18, what-17)
ccomp('s-16, made-18)
nsubj(look-21, im-20)
ccomp(made-18, look-21)
nsubjpass(warned-25, She-23)
auxpass(warned-25, was-24)
parataxis(E-7, warned-25)
nmod:poss(im-29, agin-26)
case(agin-26, '-27)
dobj(warned-25, im-29)
nsubj(is-32, That-31)
parataxis(E-7, is-32)
advmod(took-35, why-33)
nsubj(took-35, she-34)
advcl(is-32, took-35)

(ROOT
  (S (`` `)
    (S
      (VP (MD Would) (RB n't)
        (VP (`` `) (VB ear)
          (NP
            (NP (DT no) (NN reason))
            (, ,) (`` `)
            (NP (NNP Went) (DT an))
            ('' '))
          (S
            (VP (VBN done)
              (S
                (NP (PRP it))
                (ADJP (JJ blind))))))))
    (: ;)
    (NP (PRP We))
    (VP (VBP know)
      (PP (DT all) (IN about)
        (NP (PRP 'em)))
      (, ,)
      (SBAR
        (S
          (NP (PRP They))
          (VP (VBP 've)
            (VP (VBN got)
              (S (RB all)
                (VP (TO to)
                  (VP (VB find)))))))))
    (. !)))

aux(ear-5, Would-2)
neg(ear-5, n't-3)
dep(know-18, ear-5)
neg(reason-7, no-6)
dobj(ear-5, reason-7)
dep(reason-7, Went-10)
dep(Went-10, an-11)
dep(ear-5, done-13)
nsubj(blind-15, it-14)
xcomp(done-13, blind-15)
nsubj(know-18, We-17)
root(ROOT-0, know-18)
dep('em-21, all-19)
case('em-21, about-20)
nmod:about(know-18, 'em-21)
nsubj(got-25, They-23)
nsubj:xsubj(find-28, They-23)
aux(got-25, 've-24)
ccomp(know-18, got-25)
advmod(find-28, all-26)
mark(find-28, to-27)
xcomp(got-25, find-28)

(ROOT
  (NP
    (NP
      (NP (NNP Cheer))
      (PP (IN for)
        (NP
          (NP (DT the) (NNP Sergeant) (POS 's))
          (NN weddin)))
      ('' '))
    (: --)
    (S
      (VP (VB Give)
        (S
          (NP (PRP 'em))
          (ADJP
            (NP (CD one) (NN cheer))
            (JJR more)))))
    (. !)))

root(ROOT-0, Cheer-1)
case(weddin-6, for-2)
det(Sergeant-4, the-3)
nmod:poss(weddin-6, Sergeant-4)
case(Sergeant-4, 's-5)
nmod:for(Cheer-1, weddin-6)
parataxis(Cheer-1, Give-9)
nsubj(more-13, 'em-10)
nummod(cheer-12, one-11)
nmod:npmod(more-13, cheer-12)
xcomp(Give-9, more-13)

(ROOT
  (NP
    (NP (NNP Grey) (NN gun))
    (: -) (`` `)
    (S
      (NP
        (NP (NNS orses))
        (PP (IN in)
          (NP
            (NP (DT the) (NN lando))
            (, ,)
            (NP
              (NP (NNP An) (POS '))
              (NP (DT a) (NN rogue))))))
      (VP (VBZ is)
        (VP (VBN married)
          (S
            (VP (TO to))))))
    (, ,)
    (NP (FW etc.))
    (. .)))

compound(gun-2, Grey-1)
root(ROOT-0, gun-2)
nsubjpass(married-15, orses-5)
nsubj:xsubj(to-16, orses-5)
case(lando-8, in-6)
det(lando-8, the-7)
nmod:in(orses-5, lando-8)
appos(lando-8, An-10)
case(An-10, '-11)
det(rogue-13, a-12)
dep(An-10, rogue-13)
auxpass(married-15, is-14)
dep(gun-2, married-15)
xcomp(married-15, to-16)
appos(gun-2, etc.-18)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT the) (NN use) (NN o) (POS '))
        (NP
          (NP
            (NP (NN tellin) (POS '))
            (`` `) (JJ Arf) (DT the) (NN lot))
          (SBAR
            (S
              (NP (PRP she))
              (VP (VBZ 's)
                (VP (VBN been))))))))
    (. ?)))

root(ROOT-0, What-1)
cop(What-1, 's-2)
det(o-5, the-3)
compound(o-5, use-4)
nsubj(What-1, o-5)
case(o-5, '-6)
nmod:poss(lot-12, tellin-7)
case(tellin-7, '-8)
amod(lot-12, Arf-10)
det(lot-12, the-11)
dep(o-5, lot-12)
nsubjpass(been-15, she-13)
auxpass(been-15, 's-14)
acl:relcl(lot-12, been-15)

(ROOT
  (S (`` `)
    (S
      (NP (NNP E))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN bloomin) (POS '))
          (NN robber))))
    (, ,)
    (NP
      (NP (NNP _) (NNP An) (POS '))
      (NP (NNP _) (POS '))
      (NNP e))
    (VP (VBZ keeps)
      (NP (NN canteen)))
    (. .)))

nsubj(robber-7, E-2)
cop(robber-7, 's-3)
det(bloomin-5, a-4)
nmod:poss(robber-7, bloomin-5)
case(bloomin-5, '-6)
ccomp(keeps-15, robber-7)
compound(An-10, _-9)
nmod:poss(e-14, An-10)
case(An-10, '-11)
nmod:poss(e-14, _-12)
case(_-12, '-13)
nsubj(keeps-15, e-14)
root(ROOT-0, keeps-15)
dobj(keeps-15, canteen-16)

(ROOT
  (S (`` `)
    (S
      (NP (NNP Ow))
      (VP (VBD did)))
    ('' ')
    (NP (NNP e))
    (VP (VBP get)
      (SBAR
        (S
          (VP (`` `) (VBZ is)
            (ADJP (JJ buggy))))))
    (. ?)))

nsubj(did-3, Ow-2)
ccomp(get-6, did-3)
nsubj(get-6, e-5)
root(ROOT-0, get-6)
cop(buggy-9, is-8)
ccomp(get-6, buggy-9)

(ROOT
  (S
    (S
      (VP (VBN Gawd)))
    (, ,)
    (NP (PRP you))
    (VP (VBP need) (RB n't)
      (VP (VB ask)))
    (. !)))

advcl(need-4, Gawd-1)
nsubj(need-4, you-3)
root(ROOT-0, need-4)
neg(need-4, n't-5)
dep(need-4, ask-6)

(ROOT
  (S (`` `)
    (ADVP (RB Made))
    (`` `)
    (VP (VBZ is)
      (NP
        (NP (JJ forty) (NN gallon) (IN Out))
        (PP (IN of)
          (NP (DT every) (NN cask)))))
    (. !)))

advmod(gallon-6, Made-2)
cop(gallon-6, is-4)
amod(gallon-6, forty-5)
root(ROOT-0, gallon-6)
amod(gallon-6, Out-7)
case(cask-10, of-8)
det(cask-10, every-9)
nmod:of(gallon-6, cask-10)

(ROOT
  (NP
    (NP
      (NP (NNP Watch))
      (VP (`` `) (VBN im) (, ,)
        (SBAR (IN with)
          (S (`` `)
            (S
              (VP (VBZ is) (`` `)
                (NP (NN air) (NN cut))))
            (, ,)
            (NP
              (NP (NNP Count))
              (SBAR
                (S
                  (NP (PRP us))
                  (VP
                    (VP (VB filin) ('' ')
                      (PP (IN by)))
                    (: --)
                    (VP
                      (ADVP (RB Wo))
                      (RB n't)
                      (NP (DT the) (NNP Colonel) (NN praise)))))))
            (`` `)
            (VP (VBZ is)
              (ADJP (JJ Pop)))))))
    (: --)
    (NP
      (NP (NN u))
      (PRN (: --)
        (NP
          (NP (NN lar))
          (: --)
          (NP (FW i)))
        (: --))
      (NP (NN ty)))
    (. !)))

root(ROOT-0, Watch-1)
acl(Watch-1, im-3)
mark(Pop-25, with-5)
cop(cut-10, is-7)
compound(cut-10, air-9)
ccomp(Pop-25, cut-10)
nsubj(Pop-25, Count-12)
nsubj(filin-14, us-13)
acl:relcl(Count-12, filin-14)
nmod(filin-14, by-16)
advmod(praise-22, Wo-18)
neg(praise-22, n't-19)
det(praise-22, the-20)
compound(praise-22, Colonel-21)
dep(filin-14, praise-22)
cop(Pop-25, is-24)
advcl(im-3, Pop-25)
dep(Watch-1, u-27)
dep(u-27, lar-29)
dep(lar-29, i-31)
dep(u-27, ty-33)

(ROOT
  (S
    (S
      (NP (PRP We))
      (`` `)
      (VP (VBP ave)
        (S
          (NP (NNS scores))
          (VP (TO to)
            (VP (VB settle) (: --)
              (NP (NNS Scores))
              (PP (IN for)
                (NP
                  (QP (JJR more) (IN than) (CD beer)))))))))
    (: ;)
    (S
      (NP (PRP She))
      (VP (VBZ 's)
        (NP (DT the) (NN girl)
          (S
            (VP (TO to)
              (VP (VB pay)
                (NP (PRP 'em))))))))
    (: --)
    (S
      (NP (DT That))
      (VP (VBZ is)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP we))
            (VP (VBP 're) (`` `)
              (NP (NN ere)))))))
    (. !)))

nsubj(ave-3, We-1)
root(ROOT-0, ave-3)
dobj(ave-3, scores-4)
nsubj:xsubj(settle-6, scores-4)
mark(settle-6, to-5)
xcomp(ave-3, settle-6)
dobj(settle-6, Scores-8)
case(beer-12, for-9)
advmod(beer-12, more-10)
mwe(more-10, than-11)
nmod:for(settle-6, beer-12)
nsubj(girl-17, She-14)
cop(girl-17, 's-15)
det(girl-17, the-16)
parataxis(ave-3, girl-17)
mark(pay-19, to-18)
acl(girl-17, pay-19)
dobj(pay-19, 'em-20)
nsubj(is-23, That-22)
parataxis(ave-3, is-23)
advmod(ere-28, why-24)
nsubj(ere-28, we-25)
cop(ere-28, 're-26)
advcl(is-23, ere-28)

(ROOT
  (SQ
    (VP (VB See)
      (NP (DT the) (NN chaplain) (NN thinkin) ('' ')))
    (. ?)))

root(ROOT-0, See-1)
det(thinkin-4, the-2)
compound(thinkin-4, chaplain-3)
dobj(See-1, thinkin-4)

(ROOT
  (SQ
    (VP (VB See)
      (NP (DT the) (NNS women) (NN smile)))
    (. ?)))

root(ROOT-0, See-1)
det(smile-4, the-2)
compound(smile-4, women-3)
dobj(See-1, smile-4)

(ROOT
  (S
    (S
      (VP (VBG Twig)
        (NP (DT the) (JJ married) (NN winkin))
        ('' ')
        (PP (IN As)
          (NP (PRP they)))))
    (VP (VBP take)
      (NP (DT the) (NN aisle)))
    (. ?)))

csubj(take-8, Twig-1)
det(winkin-4, the-2)
amod(winkin-4, married-3)
dobj(Twig-1, winkin-4)
case(they-7, As-6)
nmod:as(Twig-1, they-7)
root(ROOT-0, take-8)
det(aisle-10, the-9)
dobj(take-8, aisle-10)

(ROOT
  (S
    (VP (VB Keep)
      (NP (PRP$ your) (JJ side-arms) (NN quiet))
      (, ,)
      (NP
        (NP (NNP Dressin))
        ('' ')
        (PP (IN by)
          (NP (DT the) (NNP Band)))))
    (. .)))

root(ROOT-0, Keep-1)
nmod:poss(quiet-4, your-2)
amod(quiet-4, side-arms-3)
dobj(Keep-1, quiet-4)
dobj(Keep-1, Dressin-6)
case(Band-10, by-8)
det(Band-10, the-9)
nmod:by(Dressin-6, Band-10)

(ROOT
  (INTJ (UH Ho) (. !)))

root(ROOT-0, Ho-1)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (`` `) (VBP oly)
        (NP (NNS beggars))))
    (, ,)
    (NP (NNP Cough))
    (VP (VBD be'ind)
      (S
        (NP (PRP your))
        (`` `)
        (NP (NNP and))))
    (. !)))

nsubj(oly-3, You-1)
ccomp(be'ind-7, oly-3)
dobj(oly-3, beggars-4)
nsubj(be'ind-7, Cough-6)
root(ROOT-0, be'ind-7)
dep(and-10, your-8)
xcomp(be'ind-7, and-10)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP it))
      (VP (VBZ 's)
        (VP (VBN done)
          (NP
            (NP (DT an))
            ('' ')
            (PP (IN over) (, ,) (`` `)
              (S
                (NP
                  (NP (NN Ear))
                  (NP (DT the) (NN organ) (NN squeak))
                  (, ,) ('' ''))
                (VP (VBG _) (`` `)
                  (NP
                    (NP (NNP Voice))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD breathed)
                          (NP
                            (NP (NN o'er))
                            (NNP Eden) (NNP _) ('' '')))))))))))))
    (: --)
    (S
      (S
        (VP (VB Ai) (RB n't)))
      (NP (PRP she))
      (VP (VBD got)
        (NP (DT the) (NN cheek))))
    (. !)))

advmod(done-4, Now-1)
nsubjpass(done-4, it-2)
auxpass(done-4, 's-3)
root(ROOT-0, done-4)
dobj(done-4, an-5)
case(_-16, over-7)
nsubj(_-16, Ear-10)
det(squeak-13, the-11)
compound(squeak-13, organ-12)
dep(Ear-10, squeak-13)
acl(an-5, _-16)
dobj(_-16, Voice-18)
nsubj(breathed-20, Voice-18)
ref(Voice-18, that-19)
acl:relcl(Voice-18, breathed-20)
compound(_-23, o'er-21)
compound(_-23, Eden-22)
dobj(breathed-20, _-23)
dep(got-29, Ai-26)
neg(Ai-26, n't-27)
nsubj(got-29, she-28)
parataxis(done-4, got-29)
det(cheek-31, the-30)
dobj(got-29, cheek-31)

(ROOT
  (S
    (NP
      (NP (NNP White))
      (, an) ('' ')
      (NP
        (NP (NN laylock))
        (NP (NNS ribbons)))
      (, ,))
    (VP (VBP Think)
      (S
        (NP (PRP yourself))
        (ADJP (RB so) (JJ fine))))
    (. !)))

nsubj(Think-7, White-1)
dep(White-1, laylock-4)
dep(laylock-4, ribbons-5)
root(ROOT-0, Think-7)
nsubj(fine-10, yourself-8)
advmod(fine-10, so-9)
xcomp(Think-7, fine-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (ADVP (RB pray))
      (VP (VB Gawd)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (NN yer))
              (`` `)
              (NP
                (NP (NNP Fore))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBD made)
                      (NP (NN yer) (NN mine)))))))))))
    (. !)))

nsubj(Gawd-4, I-1)
nsubj:xsubj(take-6, I-1)
aux(Gawd-4, 'd-2)
advmod(Gawd-4, pray-3)
root(ROOT-0, Gawd-4)
mark(take-6, to-5)
xcomp(Gawd-4, take-6)
dobj(take-6, yer-7)
dobj(take-6, Fore-9)
nsubj(made-11, I-10)
acl:relcl(Fore-9, made-11)
compound(mine-13, yer-12)
dobj(made-11, mine-13)

(ROOT
  (NP
    (NP (NNP Escort))
    (PP (TO to)
      (NP
        (NP (DT the) (NN kerridge) (, ,) (NNP Wish) (`` `) (NN im) (NN luck))
        (, ,)
        (NP (DT the) (NN brute))))
    (. !)))

root(ROOT-0, Escort-1)
case(luck-9, to-2)
det(luck-9, the-3)
compound(luck-9, kerridge-4)
dep(luck-9, Wish-6)
compound(luck-9, im-8)
nmod:to(Escort-1, luck-9)
det(brute-12, the-11)
appos(luck-9, brute-12)

(ROOT
  (SINV
    (VP (VBZ Chuck)
      (NP
        (NP (DT the) (NNS slippers))
        (FRAG
          (PP (IN after))
          (: --)
          (S
            (NP (NNP -LSB-) (NNP Pity))
            (`` `)
            (VP (VBP tai)
              (VP (RB n't)
                (NP (DT a) (NN boot)))))
          (. !))))
    (NP (NNP -RSB-))))

root(ROOT-0, Chuck-1)
det(slippers-3, the-2)
dobj(Chuck-1, slippers-3)
dep(tai-9, after-4)
compound(Pity-7, -LSB--6)
nsubj(tai-9, Pity-7)
dep(slippers-3, tai-9)
neg(boot-12, n't-10)
det(boot-12, a-11)
dep(tai-9, boot-12)
nsubj(Chuck-1, -RSB--14)

(ROOT
  (S
    (S
      (NP (NNP Bowin) (POS '))
      (VP (VBP like)
        (NP (DT a) (NN lady))))
    (, ,)
    (NP (NNP Blushin) (POS '))
    (VP (VBP like)
      (NP
        (NP (DT a) (NN lad))
        (: --) (`` `)
        (S
          (NP (NNP Oo))
          (VP (MD would)
            (VP (VB say)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP (PRP 'em))
                    (SBAR
                      (S
                        (NP (DT Both))
                        (VP (VBZ is)
                          (ADJP (RB rotten) (JJ bad)))))))))))))
    (. ?)))

nsubj(like-3, Bowin-1)
case(Bowin-1, '-2)
ccomp(like-9, like-3)
det(lady-5, a-4)
dobj(like-3, lady-5)
nsubj(like-9, Blushin-7)
case(Blushin-7, '-8)
root(ROOT-0, like-9)
det(lad-11, a-10)
dobj(like-9, lad-11)
nsubj(say-16, Oo-14)
nsubj:xsubj(see-18, Oo-14)
aux(say-16, would-15)
dep(lad-11, say-16)
mark(see-18, to-17)
xcomp(say-16, see-18)
dobj(see-18, 'em-19)
nsubj(bad-23, Both-20)
cop(bad-23, is-21)
advmod(bad-23, rotten-22)
dep(see-18, bad-23)

(ROOT
  (NP
    (NP
      (NP (NNP Cheer))
      (PP (IN for)
        (NP
          (NP (DT the) (NNP Sergeant) (POS 's))
          (NN weddin)))
      ('' '))
    (: --)
    (S
      (VP (VB Give)
        (S
          (NP (PRP 'em))
          (ADJP
            (NP (CD one) (NN cheer))
            (JJR more)))))
    (. !)))

root(ROOT-0, Cheer-1)
case(weddin-6, for-2)
det(Sergeant-4, the-3)
nmod:poss(weddin-6, Sergeant-4)
case(Sergeant-4, 's-5)
nmod:for(Cheer-1, weddin-6)
parataxis(Cheer-1, Give-9)
nsubj(more-13, 'em-10)
nummod(cheer-12, one-11)
nmod:npmod(more-13, cheer-12)
xcomp(Give-9, more-13)

(ROOT
  (NP
    (NP (NNP Grey) (NN gun))
    (: -) (`` `)
    (S
      (NP
        (NP (NNS orses))
        (PP (IN in)
          (NP
            (NP (DT the) (NN lando))
            (, ,)
            (NP
              (NP (NNP An) (POS '))
              (NP (DT a) (NN rogue))))))
      (VP (VBZ is)
        (VP (VBN married)
          (S
            (VP (TO to))))))
    (, ,)
    (NP (FW etc.))
    (. .)))

compound(gun-2, Grey-1)
root(ROOT-0, gun-2)
nsubjpass(married-15, orses-5)
nsubj:xsubj(to-16, orses-5)
case(lando-8, in-6)
det(lando-8, the-7)
nmod:in(orses-5, lando-8)
appos(lando-8, An-10)
case(An-10, '-11)
det(rogue-13, a-12)
dep(An-10, rogue-13)
auxpass(married-15, is-14)
dep(gun-2, married-15)
xcomp(married-15, to-16)
appos(gun-2, etc.-18)

(ROOT
  (S
    (NP (DT THE) (NN JACKET))
    (PP (IN Through)
      (NP
        (NP (DT the) (NNPS Plagues))
        (PP (IN of)
          (NP
            (NP (NNP Egyp))
            ('' ')
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBD was)
                  (NP
                    (NP
                      (NP (NN chasin) (POS '))
                      (NNP Arabi))
                    (, ,)
                    (NP
                      (NP (NNP Gettin) (POS '))
                      (ADJP (RB down) (DT an))
                      ('' ') (NN shovin)))
                  ('' ')
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN sun))
                      (: ;)
                      (SBAR
                        (S
                          (NP
                            (NP (NNP An) (POS '))
                            (NN you))
                          (VP (MD might) (`` `)
                            (VP (VB ave)
                              (VP (VBN called)
                                (S
                                  (NP (PRP us))
                                  (ADJP (JJ dirty))))))))
                      (, ,))))))
            (, an) ('' ')
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD might)
                  (VP (VB ha)))))))
        ('' ')
        (VP (VBN called)
          (S
            (S
              (NP (PRP us))
              (ADJP (JJ dry)))
            (, ,)
            (S
              (NP (NNP An) (POS '))
              (NP (PRP you)))))))
    (VP (MD might)
      (VP (`` `) (VB ave) (`` `)
        (S
          (ADJP (JJ eard))
          (NP
            (NP (PRP us))
            (NP (NN talkin))))
        ('' ')
        (PP (IN at)
          (NP (DT the) (NN gun)))))
    (. .)))

det(JACKET-2, THE-1)
nsubj(ave-51, JACKET-2)
case(Plagues-5, Through-3)
det(Plagues-5, the-4)
nmod:through(ave-51, Plagues-5)
case(Egyp-7, of-6)
nmod:of(Plagues-5, Egyp-7)
nsubj(Arabi-13, we-9)
cop(Arabi-13, was-10)
nmod:poss(Arabi-13, chasin-11)
case(chasin-11, '-12)
acl:relcl(Egyp-7, Arabi-13)
nmod:poss(shovin-20, Gettin-15)
case(Gettin-15, '-16)
advmod(an-18, down-17)
amod(shovin-20, an-18)
appos(Arabi-13, shovin-20)
case(sun-24, in-22)
det(sun-24, the-23)
nmod:in(Arabi-13, sun-24)
nmod:poss(you-28, An-26)
case(An-26, '-27)
nsubj(ave-31, you-28)
aux(ave-31, might-29)
acl:relcl(sun-24, ave-31)
dep(ave-31, called-32)
nsubj(dirty-34, us-33)
xcomp(called-32, dirty-34)
nsubj(ha-40, you-38)
aux(ha-40, might-39)
acl:relcl(Egyp-7, ha-40)
acl(Plagues-5, called-42)
dep(dry-44, us-43)
xcomp(called-42, dry-44)
dep(you-48, An-46)
case(An-46, '-47)
parataxis(dry-44, you-48)
aux(ave-51, might-49)
root(ROOT-0, ave-51)
xcomp(ave-51, eard-53)
dep(eard-53, us-54)
dep(us-54, talkin-55)
case(gun-59, at-57)
det(gun-59, the-58)
nmod:at(ave-51, gun-59)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NNP Captain))
      (SBAR
        (S (`` `)
          (S
            (NP (NN ad))
            (VP (`` `) (VBZ is)
              (NP (NN jacket))
              (, ,)
              (ADVP (DT an))
              ('' ')
              (NP
                (NP (DT the) (NN jacket))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (ADJP (JJ new))))))))
          (: --)
          (S (-LRB- -LRB-)
            (NP (`` `) (NNP Orse))
            (VP (VBZ Gunners))
            (, ,)))))
    (VP (VBP listen)
      (PP (TO to)
        (NP (PRP$ my) (NN song))))
    (. !) (-RRB- -RRB-)))

cc(listen-23, But-1)
det(Captain-3, the-2)
nsubj(listen-23, Captain-3)
nsubj(jacket-8, ad-5)
cop(jacket-8, is-7)
acl:relcl(Captain-3, jacket-8)
advmod(jacket-8, an-10)
det(jacket-13, the-12)
dep(jacket-8, jacket-13)
nsubj(new-16, it-14)
cop(new-16, was-15)
acl:relcl(jacket-13, new-16)
nsubj(Gunners-21, Orse-20)
parataxis(jacket-8, Gunners-21)
root(ROOT-0, listen-23)
case(song-26, to-24)
nmod:poss(song-26, my-25)
nmod:to(listen-23, song-26)

(ROOT
  (S
    (S
      (NP
        (NP (NNP An) (POS '))
        (NP
          (NP (DT the) (NN wettin) (POS '))
          (PP (IN of)
            (NP (DT the) (NN jacket)))))
      (VP (VBZ is)
        (NP (DT the) (JJ proper) (NN thing)
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (, ,)
    (CC Nor)
    (S
      (NP (PRP we))
      (VP (VBD did) (RB n't)
        (VP (VB keep)
          (NP
            (NP (`` `) (NN im) (NN waitin) ('' '))
            (ADJP (RB very) (JJ long))))))
    (. .)))

nsubj(thing-12, An-1)
case(An-1, '-2)
det(wettin-4, the-3)
dep(An-1, wettin-4)
case(wettin-4, '-5)
case(jacket-8, of-6)
det(jacket-8, the-7)
nmod:of(wettin-4, jacket-8)
cop(thing-12, is-9)
det(thing-12, the-10)
amod(thing-12, proper-11)
root(ROOT-0, thing-12)
mark(do-14, to-13)
acl(thing-12, do-14)
cc(thing-12, Nor-16)
nsubj(keep-20, we-17)
aux(keep-20, did-18)
neg(keep-20, n't-19)
conj:nor(thing-12, keep-20)
compound(waitin-23, im-22)
dobj(keep-20, waitin-23)
advmod(long-26, very-25)
amod(waitin-23, long-26)

(ROOT
  (S
    (S
      (NP (CD One) (NN day))
      (NP (PRP they))
      (VP (VBD gave)
        (NP (PRP us))
        (NP
          (NP (NNS orders))
          (PP (IN for)
            (NP
              (S
                (VP (TO to)
                  (VP (VB shell)
                    (NP (DT a) (NN sand) (NN redoubt)))))
              (, ,)
              (NP
                (NP (NNP Loadin) (POS '))
                (PP (IN down)
                  (NP
                    (NP (DT the) (NNS axle-arms))
                    (PP (IN with)
                      (NP (NN case)))))))))))
    (: ;)
    (CC But)
    (S
      (NP (DT the) (NNP Captain))
      (VP (VBD knew)
        (SBAR
          (S (`` `)
            (S
              (VP (VBZ is)
                (ADJP (JJ dooty))
                (, ,)
                (NP
                  (NP (DT an))
                  ('' ')
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD took)
                        (NP (DT the) (NNS crackers))
                        (PP (IN out)
                          (NP (NNP An)))))))))
            ('' ')
            (NP (PRP he))
            (VP (VBD put)
              (NP (DT some) (JJ proper) (NN liquor))
              (PP (IN in)
                (NP (PRP$ its) (NN place))))))))
    (. .)))

nummod(day-2, One-1)
nmod:tmod(gave-4, day-2)
nsubj(gave-4, they-3)
root(ROOT-0, gave-4)
iobj(gave-4, us-5)
dobj(gave-4, orders-6)
case(Loadin-14, for-7)
mark(shell-9, to-8)
dep(Loadin-14, shell-9)
det(redoubt-12, a-10)
compound(redoubt-12, sand-11)
dobj(shell-9, redoubt-12)
nmod:'(orders-6, Loadin-14)
case(Loadin-14, '-15)
case(axle-arms-18, down-16)
det(axle-arms-18, the-17)
nmod:down(Loadin-14, axle-arms-18)
case(case-20, with-19)
nmod:with(axle-arms-18, case-20)
cc(gave-4, But-22)
det(Captain-24, the-23)
nsubj(knew-25, Captain-24)
conj:but(gave-4, knew-25)
cop(dooty-28, is-27)
ccomp(put-40, dooty-28)
dep(dooty-28, an-30)
nsubj(took-33, he-32)
acl:relcl(an-30, took-33)
det(crackers-35, the-34)
dobj(took-33, crackers-35)
case(An-37, out-36)
nmod:out(took-33, An-37)
nsubj(put-40, he-39)
ccomp(knew-25, put-40)
det(liquor-43, some-41)
amod(liquor-43, proper-42)
dobj(put-40, liquor-43)
case(place-46, in-44)
nmod:poss(place-46, its-45)
nmod:in(put-40, place-46)

(ROOT
  (S
    (NP (NNP An) (POS ') (DT the) (NNP Captain))
    (VP (VBD saw)
      (NP
        (NP (DT the) (NN shrapnel))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (NP
                (NP (NN six-an) ('' '))
                (: -)
                (ADJP (CD thirty) (JJ clear))))))))
    (. .)))

nmod:poss(Captain-4, An-1)
case(Captain-4, '-2)
det(Captain-4, the-3)
nsubj(saw-5, Captain-4)
root(ROOT-0, saw-5)
det(shrapnel-7, the-6)
dobj(saw-5, shrapnel-7)
nsubj(six-an-11, shrapnel-7)
ref(shrapnel-7, which-9)
cop(six-an-11, is-10)
acl:relcl(shrapnel-7, six-an-11)
compound(clear-15, thirty-14)
amod(six-an-11, clear-15)

(ROOT
  (S (-LRB- -LRB-)
    (VP (`` `) (VB Orse)
      (S
        (NP (NNP Gunners))
        (, ,)
        (VP (VB listen)
          (PP (TO to)
            (NP (PRP$ my) (NN song))))))
    (. !) (-RRB- -RRB-)))

root(ROOT-0, Orse-3)
nsubj(listen-6, Gunners-4)
ccomp(Orse-3, listen-6)
case(song-9, to-7)
nmod:poss(song-9, my-8)
nmod:to(listen-6, song-9)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Will) (PRP you))
      (VP (VBP draw)
        (NP (DT the) (NN weight))))
    (, ,) ('' '')
    (NP (NN sez))
    (`` `)
    (VP (VBZ e) (, ,) (`` ``)
      (SBARQ (CC or)
        (SQ (MD will)
          (NP (PRP you))
          (VP (VB draw)
            (NP (DT the) (NN beer))))
        (. ?)))
    ('' '')))

nsubj(draw-4, Will-2)
dep(Will-2, you-3)
ccomp(e-11, draw-4)
det(weight-6, the-5)
dobj(draw-4, weight-6)
nsubj(e-11, sez-9)
root(ROOT-0, e-11)
cc(draw-17, or-14)
aux(draw-17, will-15)
nsubj(draw-17, you-16)
ccomp(e-11, draw-17)
det(beer-19, the-18)
dobj(draw-17, beer-19)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP we))
    (VP (VBD did) (RB n't)
      (VP (VB keep)
        (NP
          (NP (`` `) (NN im) (NN waitin) ('' '))
          (ADJP (RB very) (JJ long)))))
    (. .)))

dep(keep-6, An-1)
case(An-1, '-2)
nsubj(keep-6, we-3)
aux(keep-6, did-4)
neg(keep-6, n't-5)
root(ROOT-0, keep-6)
compound(waitin-9, im-8)
dobj(keep-6, waitin-9)
advmod(long-12, very-11)
amod(waitin-9, long-12)

(ROOT
  (S
    (VP (VB _)
      (S
        (S
          (PP (IN For)
            (NP (DT the) (NNP Captain)))
          (, ,)
          (NP (FW etc.))
          (VP (VBZ _)
            (S
              (S
                (ADVP (RB Then))
                (NP (PRP we))
                (VP (VBD trotted)
                  (ADJP (JJ gentle))
                  (, ,)
                  (S (RB not)
                    (VP (TO to)
                      (VP (VB break)
                        (NP
                          (NP (DT the) (NN bloomin) (POS '))
                          (NN glass)))))))
              (, ,)
              (S
                (PP (IN Though)
                  (NP (DT the) (JJ Arabites) (`` `) (NN ad)))
                (NP (PDT all) (PRP$ their) (NNS ranges))
                (VP (VBD marked))))))
        (: ;)
        (CC But)
        (S
          (S
            (NP (PRP we))
            (VP (VBZ durs) (RB n't)
              (VP (`` `)
                (ADVP (RB ardly))
                (VB gallop) (, ,)
                (SBAR (IN for)
                  (S
                    (NP (DT the) (JJS most))
                    (VP (VBD was)
                      (VP (VBN bottled)
                        (NP
                          (NP (NNP Bass) (, ,) (NNP An))
                          ('' ')
                          (SBAR
                            (S
                              (NP (PRP we))
                              (VP (VBD 'd)
                                (VP (VBN dreamed)
                                  (PP (IN of)
                                    (NP (PRP it)))
                                  (SBAR (IN since)
                                    (S
                                      (NP (PRP we))
                                      (VP (VBD was)
                                        (VP (VBN disembarked)))))))))))))))))
          (: :) (RB So)
          (S
            (NP (PRP we))
            (VP (VBD fired)
              (S
                (ADJP (JJ economic)))
              (PP (IN with)
                (NP
                  (NP (DT the) (NNS shells))
                  (NP (PRP we))))
              (`` `)
              (NP
                (NP (NN ad))
                (PP (IN in) (`` `)
                  (NP (NNP and))))
              (, ,)
              (PRN (-LRB- -LRB-)
                (S
                  (NP (`` `) (NN Orse) (NN Gunners) (, ,))
                  (VP (VBP listen)
                    (PP (TO to)
                      (NP (PRP$ my) (NN song)))))
                (. !) (-RRB- -RRB-)))))))))

root(ROOT-0, _-1)
case(Captain-4, For-2)
det(Captain-4, the-3)
nmod:for(_-7, Captain-4)
nsubj(_-7, etc.-6)
xcomp(_-1, _-7)
advmod(trotted-10, Then-8)
nsubj(trotted-10, we-9)
nsubj:xsubj(break-15, we-9)
xcomp(_-7, trotted-10)
xcomp(trotted-10, gentle-11)
neg(break-15, not-13)
mark(break-15, to-14)
xcomp(trotted-10, break-15)
det(bloomin-17, the-16)
nmod:poss(glass-19, bloomin-17)
case(bloomin-17, '-18)
dobj(break-15, glass-19)
case(ad-25, Though-21)
det(ad-25, the-22)
amod(ad-25, Arabites-23)
nmod:though(marked-29, ad-25)
det:predet(ranges-28, all-26)
nmod:poss(ranges-28, their-27)
nsubj(marked-29, ranges-28)
parataxis(trotted-10, marked-29)
cc(_-7, But-31)
nsubj(durs-33, we-32)
xcomp(_-1, durs-33)
conj:but(_-7, durs-33)
neg(durs-33, n't-34)
advmod(gallop-37, ardly-36)
dep(durs-33, gallop-37)
mark(bottled-43, for-39)
det(most-41, the-40)
nsubjpass(bottled-43, most-41)
auxpass(bottled-43, was-42)
advcl(gallop-37, bottled-43)
compound(An-46, Bass-44)
dobj(bottled-43, An-46)
nsubj(dreamed-50, we-48)
aux(dreamed-50, 'd-49)
acl:relcl(An-46, dreamed-50)
case(it-52, of-51)
nmod:of(dreamed-50, it-52)
mark(disembarked-56, since-53)
nsubjpass(disembarked-56, we-54)
auxpass(disembarked-56, was-55)
advcl(dreamed-50, disembarked-56)
advmod(durs-33, So-58)
nsubj(fired-60, we-59)
parataxis(durs-33, fired-60)
xcomp(fired-60, economic-61)
case(shells-64, with-62)
det(shells-64, the-63)
nmod:with(fired-60, shells-64)
dep(shells-64, we-65)
dobj(fired-60, ad-67)
case(and-70, in-68)
nmod:in(ad-67, and-70)
compound(Gunners-75, Orse-74)
nsubj(listen-77, Gunners-75)
parataxis(fired-60, listen-77)
case(song-80, to-78)
nmod:poss(song-80, my-79)
nmod:to(listen-77, song-80)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NNS beggars))
      (PP (IN under)
        (NP (NN cover) (`` `) (NN ad)))
      (SBAR
        (S
          (NP (DT the) (NN impidence))
          (VP (TO to)
            (VP (VB stand))))))
    (, ,)
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP we))
    (VP (MD could) (RB n't)
      (VP (VB keep)
        (NP (NNP 'em) (NNP waitin) (POS '))
        (ADVP (RB very) (RB long))))
    (. .)))

cc(keep-18, But-1)
det(beggars-3, the-2)
nsubj(keep-18, beggars-3)
case(ad-7, under-4)
compound(ad-7, cover-5)
nmod:under(beggars-3, ad-7)
det(impidence-9, the-8)
nsubj(stand-11, impidence-9)
mark(stand-11, to-10)
acl:relcl(beggars-3, stand-11)
dep(keep-18, An-13)
case(An-13, '-14)
nsubj(keep-18, we-15)
aux(keep-18, could-16)
neg(keep-18, n't-17)
root(ROOT-0, keep-18)
compound(waitin-20, 'em-19)
dobj(keep-18, waitin-20)
case(waitin-20, '-21)
advmod(long-23, very-22)
advmod(keep-18, long-23)

(ROOT
  (S
    (ADVP (RB _))
    (S (CC And)
      (NP
        (NP (DT the) (NNP Captain))
        (, ,)
        (X (NN etc.)))
      (VP (VBZ _)))
    (IN So)
    (S
      (NP (PRP we))
      (VP (VBD finished)
        (SBAR
          (S (`` `)
            (S
              (VP
                (VP (VB arf)
                  (SBAR
                    (S
                      (NP
                        (NP (DT the) (NN liquor))
                        (PRN (-LRB- -LRB-)
                          (NP (DT an)
                            (S
                              (VP (`` ')
                                (ADVP (DT the) (RB Captain))
                                (VBD took)
                                (NP (NN champagne)))))
                          (-RRB- -RRB-)))
                      (, ,)
                      (NP (NNP An) (POS ') (DT the) (NNP Arabites))
                      (VP (VBD was)
                        (VP (VBN shootin) ('' ')
                          (NP (PDT all) (DT the) (NN while)))))))
                (: ;)
                (NP
                  (NP (NNP An))
                  ('' ')
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (VBD left)
                        (NP (PRP$ our) (JJ wounded) (`` `) (NN appy))
                        (PP (IN with)
                          (NP (DT the) (NNS empties)))
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NN plain))
                            (, ,)
                            (NP (NNP An))))))))))
            ('' ')
            (NP (PRP we))
            (VP (VBD used)
              (NP
                (NP (DT the) (NN bloomin) (POS '))
                (NNS guns))
              (PP (IN for)
                (NP (NN pro-jec-tile))))))))
    (. !)))

advmod(_-7, _-1)
cc(_-7, And-2)
det(Captain-4, the-3)
nsubj(_-7, Captain-4)
dep(Captain-4, etc.-6)
root(ROOT-0, _-7)
dep(_-7, So-8)
nsubj(finished-10, we-9)
parataxis(_-7, finished-10)
ccomp(used-53, arf-12)
det(liquor-14, the-13)
nsubjpass(shootin-29, liquor-14)
dep(liquor-14, an-16)
dep(Captain-19, the-18)
advmod(took-20, Captain-19)
dep(an-16, took-20)
dobj(took-20, champagne-21)
nmod:poss(Arabites-27, An-24)
case(Arabites-27, '-25)
det(Arabites-27, the-26)
nsubjpass(shootin-29, Arabites-27)
auxpass(shootin-29, was-28)
ccomp(arf-12, shootin-29)
det:predet(while-33, all-31)
det(while-33, the-32)
dobj(shootin-29, while-33)
dobj(arf-12, An-35)
nsubj(left-38, we-37)
acl:relcl(An-35, left-38)
nmod:poss(appy-42, our-39)
amod(appy-42, wounded-40)
dobj(left-38, appy-42)
case(empties-45, with-43)
det(empties-45, the-44)
nmod:with(left-38, empties-45)
case(plain-48, on-46)
det(plain-48, the-47)
nmod:on(left-38, plain-48)
appos(plain-48, An-50)
nsubj(used-53, we-52)
ccomp(finished-10, used-53)
det(bloomin-55, the-54)
nmod:poss(guns-57, bloomin-55)
case(bloomin-55, '-56)
dobj(used-53, guns-57)
case(pro-jec-tile-59, for-58)
nmod:for(used-53, pro-jec-tile-59)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD limbered)
      (NP
        (NP (RB up) (DT an))
        ('' ')
        (VP
          (VP (VBN galloped)
            (PRN (: --)
              (S
                (NP (EX there))
                (VP (VBD were)
                  (NP
                    (NP (NN nothin) (POS '))
                    (NN else)
                    (S
                      (VP (TO to)
                        (VP (VB do)))))))
              (: --)))
          (PRN (-LRB- -LRB-)
            (S
              (NP (`` `) (NN Orse) (NN Gunners) (, ,))
              (VP (VBP listen)
                (PP (TO to)
                  (NP (PRP$ my) (NN song)))))
            (. !) (-RRB- -RRB-)))))))

nsubj(limbered-2, We-1)
root(ROOT-0, limbered-2)
advmod(an-4, up-3)
dobj(limbered-2, an-4)
dep(an-4, galloped-6)
expl(were-9, there-8)
parataxis(galloped-6, were-9)
nmod:poss(else-12, nothin-10)
case(nothin-10, '-11)
nsubj(were-9, else-12)
mark(do-14, to-13)
acl(else-12, do-14)
compound(Gunners-19, Orse-18)
nsubj(listen-21, Gunners-19)
parataxis(galloped-6, listen-21)
case(song-24, to-22)
nmod:poss(song-24, my-23)
nmod:to(listen-21, song-24)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ') (DT the) (NNP Battery))
      (VP (VBD came)
        (ADJP (JJ a-boundin) ('' ')
          (PP (IN like)
            (NP
              (NP (DT a) (NN boundin) (POS '))
              (NN kangaroo))))))
    (, ,)
    (CC But)
    (S
      (NP (PRP they))
      (VP (VBD did) (RB n't)
        (VP (VB watch)
          (S
            (NP (PRP us))
            (NP
              (NP (NN comin) ('' '))
              (ADJP (RB very) (JJ long)))))))
    (. .)))

nmod:poss(Battery-4, An-1)
case(Battery-4, '-2)
det(Battery-4, the-3)
nsubj(came-5, Battery-4)
root(ROOT-0, came-5)
xcomp(came-5, a-boundin-6)
case(kangaroo-12, like-8)
det(boundin-10, a-9)
nmod:poss(kangaroo-12, boundin-10)
case(boundin-10, '-11)
nmod:like(a-boundin-6, kangaroo-12)
cc(came-5, But-14)
nsubj(watch-18, they-15)
aux(watch-18, did-16)
neg(watch-18, n't-17)
conj:but(came-5, watch-18)
nsubj(comin-20, us-19)
xcomp(watch-18, comin-20)
advmod(long-23, very-22)
amod(comin-20, long-23)

(ROOT
  (S
    (S
      (PP
        (ADVP (RB _))
        (IN As)
        (NP (DT the) (NNP Captain)))
      (, ,)
      (NP (FW etc.))
      (VP (VBD _)
        (SBAR
          (S
            (NP (PRP We))
            (VP (VBD was)
              (NP
                (NP
                  (NP (NN goin) (POS '))
                  (JJS most) (JJ extended)
                  (PRN (: --)
                    (S
                      (NP (PRP we))
                      (VP (VBD was)
                        (NP
                          (NP (NN drivin))
                          ('' ')
                          (SBAR
                            (S
                              (S
                                (ADJP (RB very) (JJ fine)))
                              (, ,)
                              (NP (NNP An) (POS ') (DT the) (NNP Arabites))
                              (VP (VBD were)
                                (NP
                                  (NP (NN loosin) (POS '))
                                  (`` `) (NN igh)))))
                          (, an) ('' ')
                          (ADJP
                            (ADJP
                              (ADJP (JJ wide) (, ,)
                                (PP (IN Till)
                                  (NP (DT the) (NNP Captain))))
                              (SBAR
                                (S
                                  (VP (VBD took)
                                    (NP (DT the) (NN glassy))))))
                            (PP (IN with)
                              (NP
                                (NP (DT a) (NN rattlin) (POS '))
                                (NN right))))))))
                  (NN incline))
                (, ,)
                (NP (NNP An) (POS '))))))))
    (NP (PRP we))
    (VP (VBD dropped)
      (PP (IN upon)
        (NP
          (NP (PRP$ their) (`` `) (NN eads))
          (NP (DT the) (JJ other) (NN side)))))
    (. .)))

advmod(Captain-4, _-1)
case(Captain-4, As-2)
det(Captain-4, the-3)
nmod:as(_-7, Captain-4)
nsubj(_-7, etc.-6)
dep(dropped-51, _-7)
nsubj(incline-46, We-8)
cop(incline-46, was-9)
nmod:poss(incline-46, goin-10)
case(goin-10, '-11)
amod(incline-46, most-12)
amod(incline-46, extended-13)
nsubj(drivin-17, we-15)
cop(drivin-17, was-16)
dep(incline-46, drivin-17)
advmod(fine-20, very-19)
ccomp(igh-30, fine-20)
nmod:poss(Arabites-25, An-22)
case(Arabites-25, '-23)
det(Arabites-25, the-24)
nsubj(igh-30, Arabites-25)
cop(igh-30, were-26)
nmod:poss(igh-30, loosin-27)
case(loosin-27, '-28)
acl:relcl(drivin-17, igh-30)
amod(drivin-17, wide-33)
case(Captain-37, Till-35)
det(Captain-37, the-36)
nmod:till(wide-33, Captain-37)
ccomp(wide-33, took-38)
det(glassy-40, the-39)
dobj(took-38, glassy-40)
case(right-45, with-41)
det(rattlin-43, a-42)
nmod:poss(right-45, rattlin-43)
case(rattlin-43, '-44)
nmod:with(wide-33, right-45)
ccomp(_-7, incline-46)
appos(incline-46, An-48)
case(An-48, '-49)
nsubj(dropped-51, we-50)
root(ROOT-0, dropped-51)
case(eads-55, upon-52)
nmod:poss(eads-55, their-53)
nmod:upon(dropped-51, eads-55)
det(side-58, the-56)
amod(side-58, other-57)
dep(eads-55, side-58)

(ROOT
  (S
    (SBAR
      (ADVP (RB Then))
      (S
        (NP (PRP we))
        (VP (VBP give)
          (NP (PRP 'em))
          (NP
            (NP (NN quarter))
            (: --)
            (PP (JJ such) (IN as) (`` `)
              (NP
                (NP (NN ad))
                (VP
                  (VP (RB n't)
                    (ADJP (IN up)))
                  (CC and)
                  (VP (VBN cut)))))))))
    (, ,) (-LRB- -LRB-)
    (NP (`` `) (NN Orse) (NN Gunners) (, ,))
    (VP (VBP listen)
      (PP (TO to)
        (NP (PRP$ my) (NN song))))
    (. !) (-RRB- -RRB-)))

advmod(give-3, Then-1)
nsubj(give-3, we-2)
advcl(listen-21, give-3)
iobj(give-3, 'em-4)
dobj(give-3, quarter-5)
case(ad-10, such-7)
mwe(such-7, as-8)
nmod:such_as(quarter-5, ad-10)
neg(up-12, n't-11)
dep(ad-10, up-12)
cc(up-12, and-13)
dep(ad-10, cut-14)
conj:and(up-12, cut-14)
compound(Gunners-19, Orse-18)
nsubj(listen-21, Gunners-19)
root(ROOT-0, listen-21)
case(song-24, to-22)
nmod:poss(song-24, my-23)
nmod:to(listen-21, song-24)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ') (DT the) (NNP Captain))
      (VP (VBD stood)
        (NP
          (NP
            (NP (DT a) (NN limberful))
            (PP (IN of)
              (NP (NN fizzy))))
          (: --)
          (NP (NNP somethin') (NNP Brutt)))))
    (, ,)
    (CC But)
    (S
      (NP (PRP we))
      (VP (VBD did) (RB n't)
        (VP (VB leave)
          (S
            (NP (PRP it))
            (VP (VBG fizzing)
              (ADVP (RB very) (RB long)))))))
    (. .)))

nmod:poss(Captain-4, An-1)
case(Captain-4, '-2)
det(Captain-4, the-3)
nsubj(stood-5, Captain-4)
root(ROOT-0, stood-5)
det(limberful-7, a-6)
dobj(stood-5, limberful-7)
case(fizzy-9, of-8)
nmod:of(limberful-7, fizzy-9)
compound(Brutt-12, somethin'-11)
dep(limberful-7, Brutt-12)
cc(stood-5, But-14)
nsubj(leave-18, we-15)
aux(leave-18, did-16)
neg(leave-18, n't-17)
conj:but(stood-5, leave-18)
nsubj(fizzing-20, it-19)
dep(leave-18, fizzing-20)
advmod(long-22, very-21)
advmod(fizzing-20, long-22)

(ROOT
  (S
    (PP
      (ADVP (RB _))
      (IN For)
      (NP (DT the) (NNP Captain)))
    (, ,)
    (NP (FW etc.))
    (VP (VBD _)
      (SBAR
        (S
          (NP (PRP We))
          (VP (MD might)
            (VP (VB ha) ('' ')
              (S
                (S
                  (VP (VBN been)
                    (VP (VBN court-martialled))))
                (, ,)
                (S (CC but)
                  (NP (PRP it))
                  (ADVP (DT all))
                  (VP (VBP come)
                    (PRT (RP out))
                    (ADVP (DT all) (RB right)))))
              (SBAR
                (WHADVP (WRB When))
                (S
                  (NP (PRP they))
                  (VP (VBD signalled)
                    (S
                      (NP (PRP us))
                      (VP (TO to)
                        (VP (VB join)
                          (NP (DT the) (JJ main) (NN command)))))))))))))
    (. .)))

advmod(Captain-4, _-1)
case(Captain-4, For-2)
det(Captain-4, the-3)
nmod:for(_-7, Captain-4)
nsubj(_-7, etc.-6)
root(ROOT-0, _-7)
nsubj(ha-10, We-8)
aux(ha-10, might-9)
ccomp(_-7, ha-10)
auxpass(court-martialled-13, been-12)
xcomp(ha-10, court-martialled-13)
cc(come-18, but-15)
nsubj(come-18, it-16)
advmod(come-18, all-17)
parataxis(court-martialled-13, come-18)
compound:prt(come-18, out-19)
dep(right-21, all-20)
advmod(come-18, right-21)
advmod(signalled-24, When-22)
nsubj(signalled-24, they-23)
advcl(ha-10, signalled-24)
dobj(signalled-24, us-25)
nsubj:xsubj(join-27, us-25)
mark(join-27, to-26)
xcomp(signalled-24, join-27)
det(command-30, the-28)
amod(command-30, main-29)
dobj(join-27, command-30)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (DT every) (NN round))
          (VP (VBN expended)))))
    (, ,)
    (S
      (NP (EX there))
      (VP (VBD was)
        (ADJP (DT every) (JJ gunner) (JJ tight))))
    (, ,)
    (S
      (NP (NNP An) (POS ') (DT the) (NNP Captain))
      (VP (VBD waved)
        (SBAR
          (S
            (NP
              (NP (DT a) (NN corkscrew))
              (PP (IN in)))
            (`` `)
            (VP (VBZ is) (`` `)
              (VP (VB and)))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(round-4, every-3)
nsubj(was-2, round-4)
acl(round-4, expended-5)
expl(was-8, there-7)
parataxis(was-2, was-8)
det(tight-11, every-9)
amod(tight-11, gunner-10)
xcomp(was-8, tight-11)
nmod:poss(Captain-16, An-13)
case(Captain-16, '-14)
det(Captain-16, the-15)
nsubj(waved-17, Captain-16)
parataxis(was-2, waved-17)
det(corkscrew-19, a-18)
nsubj(and-24, corkscrew-19)
acl(corkscrew-19, in-20)
aux(and-24, is-22)
ccomp(waved-17, and-24)

(ROOT
  (S
    (ADVP (RB _))
    (S (CC But)
      (NP (DT the) (NN Captain) (`` `) (NN ad))
      (`` `)
      (VP (VBZ is)
        (NP (NN jacket))
        (PRN (, ,)
          (S
            (NP (FW etc.))
            (VP (VBZ _)
              (NP
                (NP (DT THE) (`` `) (NNP EATHEN))
                (SBAR
                  (S
                    (NP (DT The) (`` `)
                      (VP (VBN eathen)
                        (PP (IN in)
                          (NP (`` `)
                            (S
                              (VP (VBZ is)
                                (NP (NN blindness) (NNS bows))
                                (ADVP (RB down)
                                  (PP (TO to)
                                    (NP (NN wood))))))
                            (, an) ('' ')
                            (NP
                              (NP (NN stone))
                              (, ;) ('' ')
                              (SBAR
                                (SBAR
                                  (S
                                    (NP (NNP E))
                                    (VP (VBP do) (RB n't)
                                      (VP (VB obey)
                                        (NP (DT no) (NNS orders))))))
                                (SBAR (IN unless)
                                  (S
                                    (NP (PRP they))
                                    (VP (VBZ is) (`` `)
                                      (S
                                        (VP (VBZ is)
                                          (ADJP (JJ own))))))
                                  (: ;)))))))
                      ('' ') (NN E))
                    (VP (VBZ keeps))))))))
        (`` `)
        (SQ (VBZ is)
          (NP (NNS side-arms))
          (ADJP (JJ awful)))))
    (: :) ('' ')
    (PRN
      (S
        (NP (NNP e))
        (VP (VBZ leaves)
          (NP (PRP 'em))
          (ADVP (DT all) (IN about)))))
    (, ,)
    (S
      (NP (NNP An) (POS '))
      (ADVP (RB then))
      (VP (VBZ comes)
        (PRT (RP up))
        (NP
          (NP (DT the) (JJ regiment) (DT an))
          ('' ')
          (SBAR
            (S
              (VP (VBZ pokes)
                (NP (DT the) (`` `) (NN eathen))
                (PRT (RP out))))))))
    (. .)))

advmod(jacket-9, _-1)
cc(jacket-9, But-2)
det(ad-6, the-3)
compound(ad-6, Captain-4)
nsubj(jacket-9, ad-6)
cop(jacket-9, is-8)
root(ROOT-0, jacket-9)
nsubj(_-12, etc.-11)
parataxis(jacket-9, _-12)
det(EATHEN-15, THE-13)
dobj(_-12, EATHEN-15)
det(E-46, The-16)
dep(E-46, eathen-18)
case(stone-29, in-19)
cop(bows-23, is-21)
compound(bows-23, blindness-22)
dep(stone-29, bows-23)
advmod(bows-23, down-24)
case(wood-26, to-25)
nmod:to(down-24, wood-26)
nmod:in(eathen-18, stone-29)
nsubj(obey-35, E-32)
aux(obey-35, do-33)
neg(obey-35, n't-34)
dep(stone-29, obey-35)
neg(orders-37, no-36)
dobj(obey-35, orders-37)
mark(is-40, unless-38)
nsubj(is-40, they-39)
dep(obey-35, is-40)
cop(own-43, is-42)
ccomp(is-40, own-43)
nsubj(keeps-47, E-46)
acl:relcl(EATHEN-15, keeps-47)
cop(awful-51, is-49)
nsubj(awful-51, side-arms-50)
dep(jacket-9, awful-51)
nsubj(leaves-55, e-54)
dep(jacket-9, leaves-55)
dobj(leaves-55, 'em-56)
advmod(leaves-55, all-57)
case(all-57, about-58)
nsubj(comes-63, An-60)
case(An-60, '-61)
advmod(comes-63, then-62)
parataxis(jacket-9, comes-63)
compound:prt(comes-63, up-64)
det(regiment-66, the-65)
dobj(comes-63, regiment-66)
dep(regiment-66, an-67)
acl:relcl(regiment-66, pokes-69)
det(eathen-72, the-70)
dobj(pokes-69, eathen-72)
compound:prt(pokes-69, out-73)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN along)
        (NP
          (NP
            (NP
              (NP (NNP o) (POS '))
              (NNS dirtiness))
            (, ,)
            (NP
              (NP (DT all))
              (PP (IN along)
                (NP
                  (NP
                    (NP (NNP o) (POS '))
                    (NN mess))
                  (, ,)
                  (ADVP (RB All)
                    (PP (IN along)
                      (NP
                        (NP (NNP o) (POS '))
                        (NN doin) ('' ') (NNS things))))
                  (NP (NNS rather-more-or-less))
                  (, ,)
                  (ADVP (DT All) (IN along))))
              (PP (IN of)
                (NP
                  (NP (NN abby-nay))
                  (, ,)
                  (NP (NN kul))
                  (, ,))))
            (, an) ('' '))
          (ADJP (JJ hazar-ho)))))
    (, ,)
    (X
      (X (SYM *))
      (NP (NNP Mind)))
    (NP (PRP you))
    (VP (VBP keep)
      (NP
        (NP (PRP$ your) (NN rifle))
        (, an) ('' ')
        (NP
          (NP (PRP yourself))
          (NP (NN jus)))
        ('' ')
        (ADVP (RB so))))
    (. !)))

nsubj(keep-36, All-1)
case(dirtiness-5, along-2)
nmod:poss(dirtiness-5, o-3)
case(o-3, '-4)
nmod:along(All-1, dirtiness-5)
appos(dirtiness-5, all-7)
case(mess-11, along-8)
nmod:poss(mess-11, o-9)
case(o-9, '-10)
nmod:along(all-7, mess-11)
advmod(mess-11, All-13)
case(things-19, along-14)
nmod:poss(things-19, o-15)
case(o-15, '-16)
compound(things-19, doin-17)
nmod:along(All-13, things-19)
dep(mess-11, rather-more-or-less-20)
advmod(mess-11, All-22)
case(All-22, along-23)
case(abby-nay-25, of-24)
nmod:of(all-7, abby-nay-25)
appos(abby-nay-25, kul-27)
amod(dirtiness-5, hazar-ho-31)
dep(Mind-34, *-33)
dep(keep-36, Mind-34)
nsubj(keep-36, you-35)
root(ROOT-0, keep-36)
nmod:poss(rifle-38, your-37)
dobj(keep-36, rifle-38)
dep(rifle-38, yourself-41)
dep(yourself-41, jus-42)
advmod(rifle-38, so-44)

(ROOT
  (FRAG
    (NP (JJ _) (JJ *) (NN abby-nay))
    (: :)
    (FRAG (RB Not)
      (ADVP (RB now)))
    (. .)))

amod(abby-nay-3, _-1)
amod(abby-nay-3, *-2)
root(ROOT-0, abby-nay-3)
dep(abby-nay-3, Not-5)
dep(Not-5, now-6)

(ROOT
  (NP
    (NP (NN kul))
    (: :)
    (NP (NNP To-morrow))
    (. .)))

root(ROOT-0, kul-1)
dep(kul-1, To-morrow-3)

(ROOT
  (NP
    (NP (NN hazar-ho))
    (: :)
    (NP
      (NP (NNP Wait))
      (NP (DT a) (NN bit)))
    (. .)))

root(ROOT-0, hazar-ho-1)
dep(hazar-ho-1, Wait-3)
det(bit-5, a-4)
dep(Wait-3, bit-5)

(ROOT
  (S
    (S
      (ADVP (RB _))
      (NP (DT The) (JJ young) (NN recruit))
      (VP (VBZ is) (`` `)
        (ADJP (JJ aughty))))
    (: --)
    (S
      (S
        (NP (POS '))
        (X
          (X (SYM e))
          (NP
            (NP (NN draf))
            (SBAR
              (S
                (VP (VBZ 's)
                  (PP (IN from)
                    (NP (NNP Gawd)))))))))
      (VP (VBZ knows)
        (VP
          (FRAG
            (WHADVP (WRB where))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (VBD bid)
        (NP (`` `)
          (NP (NN im) (NN show))
          (`` `)
          (SBAR
            (S
              (VP (VBZ is)
                (NP
                  (NP (NN stockin))
                  (SBAR
                    (S
                      (VP (VBZ 's)
                        (NP (DT an)
                          (S
                            (NP (POS '))
                            (VP (VBD lay)
                              (SBAR
                                (S
                                  (VP (`` `) (VBZ is)
                                    (ADJP (JJ mattress) (RB square))))))))))))))))))
    (: ;)
    (S
      (NP (POS '))
      (ADVP (RB E))
      (VP (VBZ calls)
        (S
          (NP (PRP it))
          (NP
            (NP (NN bloomin) (POS '))
            (NN nonsense)))))
    (: --)
    (S
      (NP (POS '))
      (ADVP (RB e))
      (VP (VBZ does) (RB n't)
        (VP (VB know)
          (ADVP (DT no) (RBR more)))))
    (: --)
    (S
      (NP (NNP An) (POS '))
      (ADVP (RB then) (RB up))
      (VP (VBZ comes)
        (SBAR
          (S (`` `)
            (S
              (VP (VBZ is)
                (NP (NN Company) (DT an))))
            ('' ')
            (VP (VBZ kicks) (`` `)
              (NP
                (NP (NN im) (NN round))
                (NP (DT the) (NN floor))))))))
    (. !)))

advmod(aughty-7, _-1)
det(recruit-4, The-2)
amod(recruit-4, young-3)
nsubj(aughty-7, recruit-4)
cop(aughty-7, is-5)
root(ROOT-0, aughty-7)
csubj(knows-15, '-9)
dep(draf-11, e-10)
dep('-9, draf-11)
cop(Gawd-14, 's-12)
case(Gawd-14, from-13)
acl:relcl(draf-11, Gawd-14)
parataxis(aughty-7, knows-15)
dep(knows-15, where-16)
nsubj(bid-19, They-18)
parataxis(aughty-7, bid-19)
compound(show-22, im-21)
dobj(bid-19, show-22)
cop(stockin-25, is-24)
acl:relcl(show-22, stockin-25)
cop(an-27, 's-26)
acl:relcl(stockin-25, an-27)
nsubj(lay-29, '-28)
dep(an-27, lay-29)
cop(mattress-32, is-31)
ccomp(lay-29, mattress-32)
advmod(mattress-32, square-33)
nsubj(calls-37, '-35)
advmod(calls-37, E-36)
parataxis(aughty-7, calls-37)
nsubj(nonsense-41, it-38)
nmod:poss(nonsense-41, bloomin-39)
case(bloomin-39, '-40)
xcomp(calls-37, nonsense-41)
nsubj(know-47, '-43)
advmod(know-47, e-44)
aux(know-47, does-45)
neg(know-47, n't-46)
parataxis(aughty-7, know-47)
neg(more-49, no-48)
advmod(know-47, more-49)
nsubj(comes-55, An-51)
case(An-51, '-52)
advmod(up-54, then-53)
advmod(comes-55, up-54)
parataxis(aughty-7, comes-55)
cop(Company-58, is-57)
ccomp(kicks-61, Company-58)
dep(Company-58, an-59)
ccomp(comes-55, kicks-61)
compound(round-64, im-63)
dobj(kicks-61, round-64)
det(floor-66, the-65)
dep(round-64, floor-66)

(ROOT
  (S
    (S
      (NP (DT The) (JJ young) (NN recruit))
      (VP
        (VP (VBZ is) (`` `)
          (ADJP (JJ ammered)))
        (: --) (`` ')
        (ADVP (RB e))
        (VP (VBZ takes)
          (S
            (NP (PRP it))
            (ADJP (RB very) (`` `) (JJ ard))))))
    (: ;) ('' ')
    (PRN
      (S
        (NP (NNP E))
        (VP (`` `) (VBZ angs)
          (S (`` `)
            (S
              (VP (VBZ is) (`` `)
                (NP (NN ead) (DT an))
                ('' ')))
            (VP (VBZ mutters) (: --) (`` ')
              (NP
                (NP (JJ e) (NNS sulks))
                (PP (IN about)
                  (NP (DT the) (NN yard))))))
          (: ;) (`` ')
          (S
            (NP (NN E) (NNS talks))
            (VP (VB o)))
          ('' ')
          (NP
            (NP (`` ``) (JJ cruel) (NNS tyrants) ('' ''))
            (NP (`` `)
              (FRAG
                (X (SYM e))
                (VP (MD 'll)
                  (VP (VB swing)
                    (PP (IN for)
                      (NP (NN by-an))))))
              ('' ')
              (PRN (: -)
                (PP (IN by))))))))
    (, ,)
    (S
      (NP
        (NP (NNP An) (POS '))
        (NP
          (NP (DT the) (NNS others))
          (NP (`` `) (NNS ears) (, an) ('' '))))
      (VP (VBZ mocks)
        (NP (`` `)
          (NP
            (NP (NN im))
            (, ,)
            (NP (DT an)))
          ('' ')
          (SBAR
            (S
              (NP (DT the) (NN boy))
              (VP (VBZ goes)
                (NP (NN orf))
                (S
                  (VP (TO to)
                    (VP (VB cry))))))))))
    (. .)))

det(recruit-3, The-1)
amod(recruit-3, young-2)
nsubj(ammered-6, recruit-3)
cop(ammered-6, is-4)
root(ROOT-0, ammered-6)
advmod(ammered-6, e-9)
dep(ammered-6, takes-10)
nsubj(ard-14, it-11)
advmod(ard-14, very-12)
xcomp(takes-10, ard-14)
nsubj(angs-19, E-17)
dep(ammered-6, angs-19)
cop(ead-23, is-21)
csubj(mutters-26, ead-23)
dep(ead-23, an-24)
ccomp(angs-19, mutters-26)
amod(sulks-30, e-29)
dobj(mutters-26, sulks-30)
case(yard-33, about-31)
det(yard-33, the-32)
nmod:about(sulks-30, yard-33)
compound(talks-37, E-36)
nsubj(o-38, talks-37)
ccomp(angs-19, o-38)
amod(tyrants-42, cruel-41)
dobj(angs-19, tyrants-42)
dep(swing-47, e-45)
aux(swing-47, 'll-46)
dep(by-52, swing-47)
case(by-an-49, for-48)
nmod:for(swing-47, by-an-49)
dep(tyrants-42, by-52)
nsubj(mocks-62, An-54)
case(An-54, '-55)
det(others-57, the-56)
dep(An-54, others-57)
dep(others-57, ears-59)
dep(ammered-6, mocks-62)
dobj(mocks-62, im-64)
appos(im-64, an-66)
det(boy-69, the-68)
nsubj(goes-70, boy-69)
acl:relcl(im-64, goes-70)
dobj(goes-70, orf-71)
mark(cry-73, to-72)
advcl(goes-70, cry-73)

(ROOT
  (S
    (S
      (NP (DT The) (JJ young) (NN recruit))
      (VP (VBZ is)
        (ADJP (JJ silly))))
    (: --) ('' ')
    (PRN
      (S
        (NP (NNP e))
        (VP (VBZ thinks)
          (NP
            (NP (NNP o) (POS '))
            (NN suicide)))))
    (: ;) (`` `)
    (S
      (NP (NNP E) (POS 's))
      (VP (VBD lost)
        (SBAR
          (S
            (VP (`` `) (VBZ is)
              (ADJP (JJ gutter-devil)))))))
    (: ;)
    (S
      (NP (POS '))
      (VP (VBD e) (`` `)
        (SBAR (IN as)
          (S
            (S
              (VP
                (ADVP (RB n't))
                (VBN got)))
            (`` `)
            (VP (VBZ is)
              (NP (NN pride)))))))
    (: ;)
    (CC But)
    (S
      (NP
        (NP (NN day))
        (PP (IN by)
          (NP
            (NP (NN day))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBZ kicks) (`` `)
                  (NP
                    (NP (NN im))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (`` `) (VBZ elps)
                          (NP
                            (NP (`` `)
                              (NP (NN im))
                              (PP (IN on)
                                (NP (DT a) (NN bit)))
                              (, ,)
                              (NP (NNP Till))
                              ('' '))
                            (X (SYM e)))))))))))))
      (VP (VBZ finds) (`` `)
        (NP
          (NP
            (NP (NN isself) (CD one))
            (ADJP (JJ mornin) ('' ')
              (PP (IN with)
                (NP (DT a) (JJ full) (DT an))))
            (POS '))
          (JJ proper) (NN kit))))
    (. .)))

det(recruit-3, The-1)
amod(recruit-3, young-2)
nsubj(silly-5, recruit-3)
cop(silly-5, is-4)
root(ROOT-0, silly-5)
nsubj(thinks-9, e-8)
dep(silly-5, thinks-9)
nmod:poss(suicide-12, o-10)
case(o-10, '-11)
dobj(thinks-9, suicide-12)
nsubj(lost-17, E-15)
case(E-15, 's-16)
conj:but(silly-5, lost-17)
cop(gutter-devil-20, is-19)
ccomp(lost-17, gutter-devil-20)
nsubj(e-23, '-22)
conj:but(silly-5, e-23)
mark(pride-30, as-25)
neg(got-27, n't-26)
csubj(pride-30, got-27)
cop(pride-30, is-29)
advcl(e-23, pride-30)
cc(silly-5, But-32)
nsubj(finds-53, day-33)
case(day-35, by-34)
nmod:by(day-33, day-35)
nsubj(elps-43, day-35)
nsubj(kicks-37, they-36)
acl:relcl(day-35, kicks-37)
dobj(kicks-37, im-39)
nsubj(elps-43, im-39)
ref(day-35, which-41)
ref(im-39, which-41)
acl:relcl(im-39, elps-43)
dobj(elps-43, im-45)
case(bit-48, on-46)
det(bit-48, a-47)
nmod:on(im-45, bit-48)
appos(im-45, Till-50)
dep(im-45, e-52)
conj:but(silly-5, finds-53)
nmod:poss(kit-65, isself-55)
nummod(isself-55, one-56)
amod(isself-55, mornin-57)
case(full-61, with-59)
det(full-61, a-60)
nmod:with(mornin-57, full-61)
dep(full-61, an-62)
case(isself-55, '-63)
amod(kit-65, proper-64)
dobj(finds-53, kit-65)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP
            (NP (NNP Gettin) (POS '))
            (JJ clear) (NN o) ('' ') (NNS dirtiness))
          (, ,)
          (NP (NN gettin) (POS ')))
        (VP (VBN done)
          (PP (IN with)
            (NP (NN mess)))))
      (, ,)
      (NP (NNP Gettin) (POS '))
      (VP (VBD shut)
        (SBAR
          (S
            (NP
              (NP
                (NP (NNP o) (POS '))
                (NN doin) (POS '))
              (NNS things))
            (VP (VBZ rather-more-or-less))))))
    (: ;)
    (S
      (NP
        (ADJP
          (ADJP (RB Not) (RB so) (JJ fond)
            (PP (IN of)
              (NP
                (NP (NN abby-nay))
                (, ,)
                (NP (NN kul)))))
          (, ,)
          (CC nor)
          (ADJP (JJ hazar-ho))
          (, ,))
        (NNS Learns)
        (S
          (VP (TO to)
            (VP (VB keep)))))
      (`` `)
      (VP (VBZ is)
        (NP
          (NP (NN rifle))
          (, an) ('' ')
          (NP
            (NP (`` `) (NN isself) (NN jus) ('' '))
            (ADVP (RB so))))))
    (. !)))

nmod:poss(dirtiness-6, Gettin-1)
case(Gettin-1, '-2)
amod(dirtiness-6, clear-3)
compound(dirtiness-6, o-4)
nsubj(shut-16, dirtiness-6)
appos(dirtiness-6, gettin-8)
case(gettin-8, '-9)
acl(dirtiness-6, done-10)
case(mess-12, with-11)
nmod:with(done-10, mess-12)
nsubj(shut-16, Gettin-14)
case(Gettin-14, '-15)
root(ROOT-0, shut-16)
nmod:poss(doin-19, o-17)
case(o-17, '-18)
nmod:poss(things-21, doin-19)
case(doin-19, '-20)
nsubj(rather-more-or-less-22, things-21)
ccomp(shut-16, rather-more-or-less-22)
neg(fond-26, Not-24)
advmod(fond-26, so-25)
amod(Learns-35, fond-26)
case(abby-nay-28, of-27)
nmod:of(fond-26, abby-nay-28)
appos(abby-nay-28, kul-30)
cc(fond-26, nor-32)
conj:nor(fond-26, hazar-ho-33)
amod(Learns-35, hazar-ho-33)
nsubj(rifle-40, Learns-35)
mark(keep-37, to-36)
acl(Learns-35, keep-37)
cop(rifle-40, is-39)
parataxis(shut-16, rifle-40)
compound(jus-45, isself-44)
dep(rifle-40, jus-45)
advmod(jus-45, so-47)

(ROOT
  (S
    (S
      (NP (DT The) (JJ young) (NN recruit))
      (VP (VBZ is) (`` `)
        (ADJP (JJ appy))))
    (: --) ('' ')
    (PRN
      (S
        (NP (NNP e))
        (VP (VBZ throws)
          (NP (DT a) (NN chest))
          (PP (TO to)
            (NP (NN suit))))))
    (: ;)
    (S
      (NP (PRP You))
      (VP (VBP see)
        (S (`` `)
          (NP (NN im))
          (VP (VB grow)
            (NP (NNS mustaches))))))
    (: ;)
    (S
      (NP (PRP you))
      (`` `)
      (NP (JJ ear) (`` `) (NN im) (NN slap))
      (`` `)
      (VP (VBZ is)
        (VP (VBG boot) (: ;) (`` ')
          (S
            (NP (NNP E) (NNP learns))
            (VP (TO to)
              (VP (VB drop)
                (NP (DT the) (`` ``) (NNS bloodies) ('' ''))
                (PP (IN from)
                  (NP
                    (NP (DT every) (NN word) (POS '))
                    (JJ e) (NNS slings)))))))))
    (, ,)
    (S
      (NP
        (NP
          (NP (NNP An) (POS '))
          ('' ') (NN e))
        (SBAR
          (S
            (VP (VBZ shows)
              (NP (DT an) (`` `)
                (S
                  (ADVP (RB ealthy))
                  (VP (VB brisket)
                    (FRAG
                      (WHADVP (WRB when)))))
                ('' ') (NN e))))))
      (VP (VBZ strips)
        (PP (IN for)
          (NP
            (NP (NNS bars))
            (, an) ('' ')
            (NP (NNS rings))))))
    (. .)))

det(recruit-3, The-1)
amod(recruit-3, young-2)
nsubj(appy-6, recruit-3)
cop(appy-6, is-4)
root(ROOT-0, appy-6)
nsubj(throws-10, e-9)
dep(appy-6, throws-10)
det(chest-12, a-11)
dobj(throws-10, chest-12)
case(suit-14, to-13)
nmod:to(throws-10, suit-14)
nsubj(see-17, You-16)
parataxis(appy-6, see-17)
nsubj(grow-20, im-19)
ccomp(see-17, grow-20)
dobj(grow-20, mustaches-21)
nsubj(boot-31, you-23)
amod(slap-28, ear-25)
compound(slap-28, im-27)
nsubj(boot-31, slap-28)
aux(boot-31, is-30)
parataxis(appy-6, boot-31)
compound(learns-35, E-34)
dobj(boot-31, learns-35)
nsubj:xsubj(drop-37, learns-35)
mark(drop-37, to-36)
xcomp(boot-31, drop-37)
det(bloodies-40, the-38)
dobj(drop-37, bloodies-40)
case(slings-47, from-42)
det(word-44, every-43)
nmod:poss(slings-47, word-44)
case(word-44, '-45)
amod(slings-47, e-46)
nmod:from(drop-37, slings-47)
nmod:poss(e-52, An-49)
case(An-49, '-50)
nsubj(strips-61, e-52)
acl:relcl(e-52, shows-53)
det(e-60, an-54)
advmod(brisket-57, ealthy-56)
dep(e-60, brisket-57)
dep(brisket-57, when-58)
dobj(shows-53, e-60)
parataxis(appy-6, strips-61)
case(bars-63, for-62)
nmod:for(strips-61, bars-63)
dep(bars-63, rings-66)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS cruel-tyrant-sergeants))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP watch)
              (NP (`` `) (JJ im) (`` `) (NN arf))
              (NP (DT a) (NN year))
              (: ;)
              (S
                (NP (PRP They))
                (VP (VB watch) (`` `)
                  (NP (NN im))
                  (PP (IN with))))))))
      (`` `)
      (VP (VBZ is)
        (NP (NNS comrades))
        (PRN (, ,)
          (S
            (NP (PRP they))
            (VP (VBP watch) (`` `)
              (NP (NN im))
              (PP (IN with)))))
        (`` `)
        (SQ (VBZ is)
          (NP (NN beer)))))
    (: ;)
    (S
      (S
        (NP (PRP They))
        (VP (VBP watch) (`` `)
          (NP
            (NP (NN im))
            (PP (IN with)
              (NP
                (NP (DT the) (NNS women))
                (PP (IN at)
                  (NP (DT the) (JJ regimental) (NN dance))))))))
      (, ,)
      (CC And)
      (S
        (NP (DT the) (JJ cruel-tyrant-sergeants) (NN send))
        (`` `)
        (VP (VBZ is)
          (VP (VBG name)
            (PRT (RP along))
            (PP (IN for) (`` ``)
              (NP (NNP Lance))
              ('' ''))))))
    (. .)))

det(cruel-tyrant-sergeants-2, The-1)
nsubj(comrades-19, cruel-tyrant-sergeants-2)
nsubj(watch-4, they-3)
acl:relcl(cruel-tyrant-sergeants-2, watch-4)
amod(arf-8, im-6)
dobj(watch-4, arf-8)
det(year-10, a-9)
nmod:tmod(watch-4, year-10)
nsubj(watch-13, They-12)
parataxis(watch-4, watch-13)
dobj(watch-13, im-15)
nmod(watch-13, with-16)
cop(comrades-19, is-18)
root(ROOT-0, comrades-19)
nsubj(watch-22, they-21)
parataxis(comrades-19, watch-22)
dobj(watch-22, im-24)
nmod(watch-22, with-25)
dep(comrades-19, is-27)
nsubj(is-27, beer-28)
nsubj(watch-31, They-30)
parataxis(comrades-19, watch-31)
dobj(watch-31, im-33)
case(women-36, with-34)
det(women-36, the-35)
nmod:with(im-33, women-36)
case(dance-40, at-37)
det(dance-40, the-38)
amod(dance-40, regimental-39)
nmod:at(women-36, dance-40)
cc(watch-31, And-42)
det(send-45, the-43)
amod(send-45, cruel-tyrant-sergeants-44)
nsubj(name-48, send-45)
aux(name-48, is-47)
parataxis(comrades-19, name-48)
conj:and(watch-31, name-48)
compound:prt(name-48, along-49)
case(Lance-52, for-50)
nmod:for(name-48, Lance-52)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP An) (POS '))
        (JJ now))
      (`` `)
      (S
        (S
          (NP
            (NP (NNP e) (POS 's))
            (`` `)
            (NX
              (NP (NNP arf) (NNP o) (POS '))
              (NNP nothin))
            ('' '))
          (, ,)
          (NP
            (NP (DT an))
            ('' ')
            (RRC
              (ADJP
                (ADVP (DT all) (DT a))
                (JJ private))
              (ADVP (RB yet)))
            (, ,))
          (`` `)
          (VP (VBZ Is)
            (VP (VBN room)
              (NP (PRP they))
              (NP
                (NP (RB up) (DT an))
                ('' ')
                (SBAR
                  (S
                    (VP (VBZ rags) (`` `)
                      (ADJP (JJ im)
                        (S
                          (VP (TO to)
                            (VP (VB see)
                              (SBAR
                                (WHNP (WP what))
                                (S
                                  (NP (PRP they))
                                  (VP (MD will)
                                    (VP (VB get))))))))))))))))
        (: ;)
        (S
          (NP (PRP They))
          (VP (VBZ rags)
            (NP (`` `)
              (NP (NN im) (NN low))
              (, an) ('' ')
              (NP
                (NP (NN cunnin) ('' '))
                (, ,)
                (NP
                  (NP (DT each) (JJ dirty) (NN trick))
                  (SBAR
                    (S
                      (S
                        (NP (PRP they))
                        (VP (MD can)))
                      (, ,)
                      (CC But)
                      (S
                        (S
                          (NP (POS '))
                          (X
                            (X (SYM e))
                            (ADJP (JJ learns)
                              (S
                                (VP (TO to)
                                  (VP (VB sweat)))))))
                        (VP (`` `) (VBZ is)
                          (ADJP (JJ temper))))))
                  (, an) ('' ')))))))
      ('' '))
    (ADVP (RB e))
    (VP (VBZ learns)
      (SBAR
        (S
          (S
            (VP (TO to)
              (VP (VB sweat))))
          (`` `)
          (VP (VBZ is)
            (NP (NN man))))))
    (. .)))

nsubj(learns-67, An-1)
case(An-1, '-2)
amod(An-1, now-3)
nmod:poss(nothin-11, e-5)
case(e-5, 's-6)
compound(o-9, arf-8)
dep(nothin-11, o-9)
case(o-9, '-10)
nsubjpass(room-23, nothin-11)
nsubjpass(room-23, an-14)
dep(a-17, all-16)
advmod(private-18, a-17)
acl:relcl(an-14, private-18)
advmod(private-18, yet-19)
auxpass(room-23, Is-22)
dep(An-1, room-23)
iobj(room-23, they-24)
advmod(an-26, up-25)
dobj(room-23, an-26)
acl:relcl(an-26, rags-28)
xcomp(rags-28, im-30)
mark(see-32, to-31)
xcomp(im-30, see-32)
dobj(get-36, what-33)
nsubj(get-36, they-34)
aux(get-36, will-35)
ccomp(see-32, get-36)
nsubj(rags-39, They-38)
parataxis(room-23, rags-39)
compound(low-42, im-41)
dobj(rags-39, low-42)
dep(low-42, cunnin-45)
det(trick-50, each-48)
amod(trick-50, dirty-49)
appos(cunnin-45, trick-50)
nsubj(can-52, they-51)
acl:relcl(trick-50, can-52)
cc(can-52, But-54)
csubj(temper-62, '-55)
dep(learns-57, e-56)
dep('-55, learns-57)
mark(sweat-59, to-58)
xcomp(learns-57, sweat-59)
cop(temper-62, is-61)
acl:relcl(trick-50, temper-62)
conj:but(can-52, temper-62)
advmod(learns-67, e-66)
root(ROOT-0, learns-67)
mark(sweat-69, to-68)
csubj(man-72, sweat-69)
cop(man-72, is-71)
ccomp(learns-67, man-72)

(ROOT
  (S
    (NP (NNP An) (POS '))
    (, ,)
    (ADVP (RB last))
    (, ,)
    (NP (DT a) (NN Colour-Sergeant))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (JJ such))
        (VP (TO to)
          (VP (VB be)
            (VP (VBN obeyed))))))
    (, ,) ('' ')
    (NP (NN E) (NNS schools))
    (`` `)
    (VP (VBZ is)
      (NP
        (NP (NNS men))
        (PP (IN at)
          (NP
            (NP
              (NP (NN cricket))
              (PRN (, ,) ('' ')
                (S
                  (NP (NNP e))
                  (VP (VBZ tells)
                    (NP (PRP 'em))
                    (PP (IN on)
                      (NP
                        (NP (NN parade))
                        (: ;)
                        (S
                          (NP (PRP They))
                          (VP (VBZ sees)
                            (S
                              (NP (PRP 'em))
                              (ADJP (JJ quick)))))))))))
            (, an) ('' ') (`` `)
            (NP (JJ andy) (, ,) (JJ uncommon) (NN set))
            (, an) ('' ')
            (NP
              (NP (JJ smart))
              (, ,)
              (NP
                (NP
                  (NP (NNP An) (POS '))
                  (ADJP (RB so))
                  ('' ') (NNS e))
                (SBAR
                  (S
                    (VP (VBZ talks)
                      (PP (TO to)
                        (NP
                          (NP (NNS orficers))
                          (SBAR
                            (WHNP (WDT which))
                            (S (`` `)
                              (VP (VBP ave)
                                (NP (DT the) (NNP Core))
                                (PP (IN at) (`` `)
                                  (ADJP (JJ eart)))))))))))))))))
    (. .) ('' ')))

nsubj(men-20, An-1)
case(An-1, '-2)
advmod(men-20, last-4)
det(Colour-Sergeant-7, a-6)
nsubj(men-20, Colour-Sergeant-7)
mark(obeyed-13, as-9)
nsubjpass(obeyed-13, such-10)
mark(obeyed-13, to-11)
auxpass(obeyed-13, be-12)
advcl(men-20, obeyed-13)
compound(schools-17, E-16)
nsubj(men-20, schools-17)
cop(men-20, is-19)
root(ROOT-0, men-20)
case(cricket-22, at-21)
nmod:at(men-20, cricket-22)
nsubj(tells-26, e-25)
dep(cricket-22, tells-26)
dobj(tells-26, 'em-27)
case(parade-29, on-28)
nmod:on(tells-26, parade-29)
nsubj(sees-32, They-31)
appos(parade-29, sees-32)
nsubj(quick-34, 'em-33)
xcomp(sees-32, quick-34)
amod(set-41, andy-38)
amod(set-41, uncommon-40)
dep(cricket-22, set-41)
dep(cricket-22, smart-44)
nmod:poss(e-50, An-46)
case(An-46, '-47)
amod(e-50, so-48)
appos(smart-44, e-50)
nsubj(ave-56, e-50)
acl:relcl(e-50, talks-51)
case(orficers-53, to-52)
nmod:to(talks-51, orficers-53)
nsubj(ave-56, orficers-53)
ref(e-50, which-54)
ref(orficers-53, which-54)
acl:relcl(orficers-53, ave-56)
det(Core-58, the-57)
dobj(ave-56, Core-58)
case(eart-61, at-59)
advcl(ave-56, eart-61)

(ROOT
  (S
    (S
      (NP (NNP E))
      (VP (VBZ learns)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (`` `)
                (S
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ watchin) ('' ')
                        (PP (IN without)
                          (NP (PRP it))))))
                  (VP (VBP showin)))
                ('' ') (NN plain)))))))
    (: ;) ('' ')
    (PRN
      (S
        (NP (NNP E))
        (VP (VBZ learns)
          (S
            (VP (TO to)
              (VP (VB save)
                (NP (DT a) (NN dummy))))))))
    (, ,)
    (S
      (NP (DT an)
        (S
          (NP (POS '))
          (VP (VBZ shove) (`` `)
            (NP
              (NP (NN im))
              (PP (RB straight)
                (ADVP (RB again))))
            (: ;) (`` ')
            (S
              (NP (NNP E) (NNP learns))
              (VP (TO to)
                (VP (VB check)
                  (NP (DT a) (NN ranker))
                  (NP
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ 's)
                          (NP
                            (NP (NN buyin) (POS '))
                            (NN leave)
                            (S
                              (VP (TO to)
                                (VP (VB shirk))))))))
                    (: ;)
                    (NP
                      (NP (NNP An) (POS '))
                      ('' ') (NN e)))))))))
      (VP (VBZ learns)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (NNS men))
              (PP (IN like) (`` `)
                (NP (NN im)))
              (SBAR (IN so)
                (S
                  (NP (PRP they))
                  (VP (MD 'll)
                    (VP (VB learn)
                      (S
                        (VP (TO to)
                          (VP (VB like)
                            (NP (PRP$ their) (NN work))))))))))))))
    (. .)))

nsubj(learns-2, E-1)
nsubj:xsubj(do-4, E-1)
root(ROOT-0, learns-2)
mark(do-4, to-3)
xcomp(learns-2, do-4)
cop(watchin-7, is-6)
csubj(showin-11, watchin-7)
case(it-10, without-9)
nmod:without(watchin-7, it-10)
dep(plain-13, showin-11)
dobj(do-4, plain-13)
nsubj(learns-17, E-16)
nsubj:xsubj(save-19, E-16)
dep(learns-2, learns-17)
mark(save-19, to-18)
xcomp(learns-17, save-19)
det(dummy-21, a-20)
dobj(save-19, dummy-21)
nsubj(learns-50, an-23)
nsubj:xsubj(make-52, an-23)
nsubj(shove-25, '-24)
dep(an-23, shove-25)
dobj(shove-25, im-27)
advmod(again-29, straight-28)
acl(im-27, again-29)
compound(learns-33, E-32)
dobj(shove-25, learns-33)
mark(check-35, to-34)
advcl(shove-25, check-35)
det(ranker-37, a-36)
iobj(check-35, ranker-37)
nsubj(leave-42, that-38)
cop(leave-42, 's-39)
nmod:poss(leave-42, buyin-40)
case(buyin-40, '-41)
dep(e-49, leave-42)
mark(shirk-44, to-43)
acl(leave-42, shirk-44)
nmod:poss(e-49, An-46)
case(An-46, '-47)
dobj(check-35, e-49)
dep(learns-2, learns-50)
mark(make-52, to-51)
xcomp(learns-50, make-52)
dobj(make-52, men-53)
case(im-56, like-54)
nmod:like(make-52, im-56)
mark(learn-60, so-57)
nsubj(learn-60, they-58)
nsubj:xsubj(like-62, they-58)
aux(learn-60, 'll-59)
advcl(make-52, learn-60)
mark(like-62, to-61)
xcomp(learn-60, like-62)
nmod:poss(work-64, their-63)
dobj(like-62, work-64)

(ROOT
  (S
    (S
      (NP (NNP An) (POS '))
      (ADVP (WRB when))
      (VP
        (ADVP (PRP it))
        (VBZ comes)
        (S
          (VP (TO to)
            (VP (VB marchin) ('' ')
              (S
                (NP (PRP he))
                (VP (MD 'll)
                  (VP (VB see)
                    (NP
                      (NP
                        (NP (PRP$ their) (NNS socks))
                        (SBAR
                          (S
                            (VP (VBP are)
                              (ADJP (JJ right))))))
                      (, ,)
                      (NP (NNP An) (POS '))))))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP it))
                  (VP (VBZ comes)
                    (PP (TO to)
                      (NP (NN action)))
                    ('' ')
                    (SBAR
                      (SBAR
                        (X (SYM e))
                        (S
                          (NP (NNS shows))
                          (VP (VBZ 'em) (`` `)
                            (NP
                              (NP (NN ow))
                              (PP (TO to)
                                (NP (NN sight))))
                            (: ;) (`` ')
                            (S
                              (NP (NNP E))
                              (VP (VBZ knows)
                                (NP
                                  (NP (PRP$ their) (NNS ways))
                                  (PP (IN of)
                                    (NP (NN thinkin))))))
                            ('' '))))
                      (CC and)
                      (SBAR
                        (WHNP (RB just) (WP what))
                        (S
                          (VP (VBZ 's)
                            (PP (IN in)
                              (NP (PRP$ their) (NN mind)))))))))))))))
    (: ;) ('' ')
    (S
      (NP (NNP E))
      (VP (VBZ knows)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBP are)
              (ADJP (JJ takin) ('' ')
                (PP (IN on)
                  (NP (DT an))))
              ('' ')
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP they))
                  (VP (VBP 've)
                    (VP (VBD fell)
                      (S
                        (ADJP (JJ be'ind))))))))))))
    (. .) ('' ')))

nsubj(comes-5, An-1)
nsubj:xsubj(marchin-7, An-1)
case(An-1, '-2)
advmod(comes-5, when-3)
advmod(comes-5, it-4)
root(ROOT-0, comes-5)
mark(marchin-7, to-6)
xcomp(comes-5, marchin-7)
nsubj(see-11, he-9)
aux(see-11, 'll-10)
ccomp(marchin-7, see-11)
nmod:poss(socks-13, their-12)
dobj(see-11, socks-13)
cop(right-15, are-14)
acl:relcl(socks-13, right-15)
appos(socks-13, An-17)
case(An-17, '-18)
advmod(comes-21, when-19)
nsubj(comes-21, it-20)
advcl(marchin-7, comes-21)
case(action-23, to-22)
nmod:to(comes-21, action-23)
dep('em-27, e-25)
nsubj('em-27, shows-26)
dep(comes-21, 'em-27)
dobj('em-27, ow-29)
case(sight-31, to-30)
nmod:to(ow-29, sight-31)
nsubj(knows-35, E-34)
dep('em-27, knows-35)
nmod:poss(ways-37, their-36)
dobj(knows-35, ways-37)
case(thinkin-39, of-38)
nmod:of(ways-37, thinkin-39)
cc('em-27, and-41)
advmod(what-43, just-42)
nsubj(mind-47, what-43)
cop(mind-47, 's-44)
case(mind-47, in-45)
nmod:poss(mind-47, their-46)
dep(comes-21, mind-47)
conj:and('em-27, mind-47)
nsubj(knows-51, E-50)
dep(comes-5, knows-51)
advmod(takin-55, when-52)
nsubj(takin-55, they-53)
cop(takin-55, are-54)
ccomp(knows-51, takin-55)
case(an-58, on-57)
nmod:on(takin-55, an-58)
advmod(fell-63, when-60)
nsubj(fell-63, they-61)
aux(fell-63, 've-62)
advcl(takin-55, fell-63)
xcomp(fell-63, be'ind-64)

(ROOT
  (S
    (S
      (NP (NNP E))
      (VP (VBZ knows)
        (SBAR
          (S
            (NP
              (NP (DT each) (NN talkin) (POS '))
              (NN corpril)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ leads)
                    (SBAR
                      (S
                        (NP (DT a) (NN squad))
                        (VP (VBZ astray) (: ;) (`` ')
                          (S
                            (NP (NNP E))
                            (VP (VBZ feels))))))))))
            (`` `)
            (VP (VBZ is)
              (ADVP (RB innards))
              (ADJP (`` `) (JJ eavin) ('' '))
              (, ,) (`` `)
              (SQ (VBZ is)
                (NP
                  (NP (JJ bowels) (NN givin) (POS '))
                  (NN way))))))))
    (: ;) ('' ')
    (PRN
      (S
        (NP (NNP E))
        (VP (VBZ sees)
          (SBAR
            (S
              (NP (DT the) (NN blue-white))
              (VP (VBZ faces)
                (NP
                  (NP (DT all) (NN tryin) (POS '))
                  (`` `) (NN ard))
                (PP (TO to)
                  (NP (NN grin)))))))))
    (, ,)
    (S
      (NP
        (NP
          (NP
            (NP (NNP An) (POS '))
            ('' ') (NN e))
          (NP (NNS stands)))
        (, an) ('' ')
        (VP (VBN waits))
        (, an) ('' '))
      (VP (VBZ suffers)
        (SBAR (IN till)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP (NN time)
                (S
                  (VP (TO to)
                    (VP (VB cap)
                      (NP (PRP 'em))
                      (PP (IN in)))))))))))
    (. .)))

nsubj(knows-2, E-1)
root(ROOT-0, knows-2)
det(talkin-4, each-3)
nmod:poss(corpril-6, talkin-4)
case(talkin-4, '-5)
nsubj(eavin-20, corpril-6)
nsubj(leads-8, that-7)
ccomp(corpril-6, leads-8)
det(squad-10, a-9)
nsubj(astray-11, squad-10)
ccomp(leads-8, astray-11)
nsubj(feels-15, E-14)
ccomp(astray-11, feels-15)
cop(eavin-20, is-17)
advmod(eavin-20, innards-18)
ccomp(knows-2, eavin-20)
dep(eavin-20, is-24)
amod(givin-26, bowels-25)
nmod:poss(way-28, givin-26)
case(givin-26, '-27)
nsubj(is-24, way-28)
nsubj(sees-32, E-31)
dep(knows-2, sees-32)
det(blue-white-34, the-33)
nsubj(faces-35, blue-white-34)
ccomp(sees-32, faces-35)
det(tryin-37, all-36)
nmod:poss(ard-40, tryin-37)
case(tryin-37, '-38)
dobj(faces-35, ard-40)
case(grin-42, to-41)
nmod:to(faces-35, grin-42)
nmod:poss(e-47, An-44)
case(An-44, '-45)
nsubj(suffers-54, e-47)
dep(e-47, stands-48)
acl(e-47, waits-51)
dep(knows-2, suffers-54)
mark(time-58, till-55)
nsubj(time-58, it-56)
cop(time-58, 's-57)
advcl(suffers-54, time-58)
mark(cap-60, to-59)
acl(time-58, cap-60)
dobj(cap-60, 'em-61)
nmod(cap-60, in-62)

(ROOT
  (S
    (NP (NNP An) (POS '))
    (VP
      (ADVP (RB now)
        (NP (DT the) (JJ hugly) (NNS bullets)))
      (VBP come)
      (NP
        (NP (NN peckin))
        ('' ')
        (SBAR
          (S
            (S
              (S
                (PP (IN through)
                  (NP (DT the) (NN dust)))
                (, ,)
                (NP (NNP An) (POS '))
                (ADVP (RB no)
                  (NP (CD one)))
                (VP (VBZ wants)
                  (S
                    (VP (TO to)
                      (VP (VB face)
                        (NP (PRP 'em)))))))
              (, ,)
              (CC but)
              (S
                (NP (DT every) (NN beggar))
                (VP (MD must))))
            (: ;)
            (S
              (ADVP (RB So))
              (, ,)
              (PP (IN like)
                (NP
                  (NP (DT a) (NN man))
                  (PP (IN in)
                    (NP
                      (NP (NNS irons))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is) (RB n't)
                            (ADJP (JJ glad)
                              (S
                                (VP (TO to)
                                  (VP (VB go))))))))))))
              (, ,)
              (NP (PRP They))
              (VP (VBZ moves)
                (NP (PRP 'em))
                (PRT (RP off))
                (PP (IN by)
                  (NP
                    (NP (NNS companies))
                    (ADJP (JJ uncommon) (JJ stiff))))))))
        (, an) ('' ')
        (S
          (VP (VB slow)))))
    (. .)))

nsubj(come-7, An-1)
case(An-1, '-2)
advmod(come-7, now-3)
det(bullets-6, the-4)
amod(bullets-6, hugly-5)
nmod:npmod(now-3, bullets-6)
root(ROOT-0, come-7)
dobj(come-7, peckin-8)
case(dust-12, through-10)
det(dust-12, the-11)
nmod:through(wants-18, dust-12)
nsubj(wants-18, An-14)
nsubj:xsubj(face-20, An-14)
case(An-14, '-15)
advmod(wants-18, no-16)
nmod:npmod(no-16, one-17)
acl:relcl(peckin-8, wants-18)
mark(face-20, to-19)
xcomp(wants-18, face-20)
dobj(face-20, 'em-21)
cc(wants-18, but-23)
det(beggar-25, every-24)
nsubj(must-26, beggar-25)
acl:relcl(peckin-8, must-26)
conj:but(wants-18, must-26)
advmod(moves-43, So-28)
case(man-32, like-30)
det(man-32, a-31)
nmod:like(moves-43, man-32)
case(irons-34, in-33)
nmod:in(man-32, irons-34)
nsubj(glad-38, irons-34)
nsubj:xsubj(go-40, irons-34)
ref(irons-34, which-35)
cop(glad-38, is-36)
neg(glad-38, n't-37)
acl:relcl(irons-34, glad-38)
mark(go-40, to-39)
xcomp(glad-38, go-40)
nsubj(moves-43, They-42)
parataxis(wants-18, moves-43)
dobj(moves-43, 'em-44)
compound:prt(moves-43, off-45)
case(companies-47, by-46)
nmod:by(moves-43, companies-47)
amod(stiff-49, uncommon-48)
amod(companies-47, stiff-49)
dep(peckin-8, slow-52)

(ROOT
  (S
    (PP (IN Of)
      (NP
        (NP (DT all))
        (SBAR
          (S (`` `)
            (S
              (VP (VBZ is)
                (NP
                  (NP (CD five) (NNS years) (POS '))
                  (NN schoolin))))
            ('' ')
            (NP (PRP they))
            (VP (VBP do) (RB n't)
              (VP (VB remember)
                (ADVP (RB much))
                (NP
                  (NP (NNP Excep) (POS '))
                  (NP (DT the) (RB not) (NN retreatin)))
                ('' ')))))))
    (, ,)
    (NP
      (NP (DT the) (NN step))
      (, an) ('' ')
      (VP (VBN keepin) ('' ')))
    (VP (VB touch))
    (. .)))

case(all-2, Of-1)
nmod:of(touch-28, all-2)
cop(schoolin-8, is-4)
nummod(years-6, five-5)
nmod:poss(schoolin-8, years-6)
case(years-6, '-7)
ccomp(remember-13, schoolin-8)
nsubj(remember-13, they-10)
aux(remember-13, do-11)
neg(remember-13, n't-12)
acl:relcl(all-2, remember-13)
advmod(remember-13, much-14)
dobj(remember-13, Excep-15)
case(Excep-15, '-16)
det(retreatin-19, the-17)
neg(retreatin-19, not-18)
dep(Excep-15, retreatin-19)
det(step-23, the-22)
nsubj(touch-28, step-23)
acl(step-23, keepin-26)
root(ROOT-0, touch-28)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ looks)
        (SBAR (IN like)
          (S
            (NP
              (NP (NN teachin))
              (POS '))
            (VP (VBN wasted)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP
                    (NP
                      (NP (PRP they))
                      (NP (NN duck)))
                    (, an) ('' ')
                    (VP (VBN spread))
                    (, an) ('' '))
                  (`` `)
                  (VP (VBP op)))))))))
    (, ,)
    (CC But)
    (S
      (SBAR (IN if)
        (S
          (S
            (VP (`` ') (VBG e) (`` `)
              (NP (NN ad))))
          (VP (RB n't)
            (VP (VBD learned)
              (NP (PRP 'em))))))
      (NP (PRP they))
      (VP (MD 'd)
        (VP (VB be)
          (NP
            (NP (DT all))
            (PP (IN about)
              (NP (DT the) (NN shop)))))))
    (. !)))

nsubj(looks-2, It-1)
root(ROOT-0, looks-2)
mark(wasted-6, like-3)
nsubj(wasted-6, teachin-4)
case(teachin-4, '-5)
advcl(looks-2, wasted-6)
advmod(op-16, when-7)
nsubj(op-16, they-8)
dep(they-8, duck-9)
acl(they-8, spread-12)
advcl(wasted-6, op-16)
cc(looks-2, But-18)
mark(learned-25, if-19)
csubj(learned-25, e-21)
dobj(e-21, ad-23)
neg(learned-25, n't-24)
advcl(all-30, learned-25)
dobj(learned-25, 'em-26)
nsubj(all-30, they-27)
aux(all-30, 'd-28)
cop(all-30, be-29)
conj:but(looks-2, all-30)
case(shop-33, about-31)
det(shop-33, the-32)
nmod:about(all-30, shop-33)

(ROOT
  (SBAR
    (S
      (NP
        (NP (NNP An) (POS '))
        (NP
          (NP (RB now))
          (NP (PRP it) (POS 's))))
      ('' '')
      (VP (`` `) (VBD Oo)
        (SBAR
          (S
            (VP (VBZ goes))))
        (ADVP (RB backward))))
    (. ?) ('' '')))

nsubj(Oo-8, An-1)
case(An-1, '-2)
dep(An-1, now-3)
nmod:poss(now-3, it-4)
case(it-4, 's-5)
root(ROOT-0, Oo-8)
ccomp(Oo-8, goes-9)
advmod(Oo-8, backward-10)

(ROOT
  (SBAR
    (S
      (NP
        (NP
          (NP (DT an))
          ('' ')
          (PP (RB now)
            (NP (PRP it))))
        (NP (PRP 's)))
      ('' '')
      (VP (`` `) (VBZ Oo)
        (S
          (VP (VBZ comes)
            (PRT (RP on))))))
    (. ?) ('' '')))

nsubj(Oo-8, an-1)
advmod(it-4, now-3)
nmod(an-1, it-4)
dep(an-1, 's-5)
root(ROOT-0, Oo-8)
ccomp(Oo-8, comes-9)
compound:prt(comes-9, on-10)

(ROOT
  (S (CC And)
    (S
      (ADVP (RB now))
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (`` ``)
          (S
            (VP (NNP Get)
              (NP (DT the) (NN doolies) (, ,) ('' ''))))
          (, an) ('' ')
          (NP
            (NP (RB now))
            (SBAR
              (S
                (NP (DT the) (NN captain))
                (VP (VBZ 's)
                  (VP (VBN gone)))))))))
    (: ;)
    (S
      (NP (NNP An) (POS '))
      (X
        (SBAR (RB now)
          (S
            (NP (PRP it))
            (VP
              (VP (VBZ 's)
                (NP (JJ bloody) (NN murder)))
              (, ,)
              (CC but)
              (VP
                (NP (PDT all) (DT the))
                (SBAR (IN while)
                  (S
                    (NP (PRP they))
                    (`` `)
                    (VP (VBZ ear)
                      (S (`` `)
                        (NP
                          (S
                            (VP (NNP Is)
                              (NP (NN voice)))))))))))))
        (, ,)
        (X (DT the)
          (ADJP (JJ same)
            (PP (IN as)
              (NP
                (NP (NN barrick) (NN drill))
                (, ,)
                (ADJP (JJ a-shepherdin))
                ('' ')))))
        (NP (DT the) (NN rear))))
    (. .)))

cc(now-13, And-1)
advmod(now-13, now-2)
nsubj(now-13, it-3)
cop(now-13, 's-4)
dep(doolies-8, Get-6)
det(doolies-8, the-7)
dep(now-13, doolies-8)
root(ROOT-0, now-13)
det(captain-15, the-14)
nsubjpass(gone-17, captain-15)
auxpass(gone-17, 's-16)
acl:relcl(now-13, gone-17)
parataxis(now-13, An-19)
case(An-19, '-20)
advmod(murder-25, now-21)
nsubj(murder-25, it-22)
cop(murder-25, 's-23)
amod(murder-25, bloody-24)
dep(rear-47, murder-25)
cc(murder-25, but-27)
det:predet(the-29, all-28)
conj:but(murder-25, the-29)
dep(rear-47, the-29)
mark(ear-33, while-30)
nsubj(ear-33, they-31)
advcl(the-29, ear-33)
dep(voice-36, Is-35)
xcomp(ear-33, voice-36)
det(same-39, the-38)
dep(rear-47, same-39)
case(drill-42, as-40)
compound(drill-42, barrick-41)
nmod:as(same-39, drill-42)
amod(drill-42, a-shepherdin-44)
det(rear-47, the-46)
dep(An-19, rear-47)

(ROOT
  (S (`` `)
    (S
      (NP (NNP E))
      (VP (VBZ 's)
        (ADVP (RB just))
        (ADJP (RB as) (JJ sick))
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP
              (VP (VBP are))
              (, ,) (`` `)
              (VP (VBZ is) (`` `)
                (NP
                  (NP (NN eart))
                  (SBAR
                    (S
                      (VP (VBZ is)
                        (ADJP (JJ like)
                          (S
                            (VP (TO to)
                              (VP (VB split)))))))))))))))
    (, ,)
    (CC But)
    (S
      (NP (POS '))
      (X
        (X (SYM e))
        (NP
          (NP (NNS works))
          (SBAR
            (S
              (NP (PRP 'em))
              (, ,)
              (S
                (VP (VBZ works)
                  (SBAR
                    (S
                      (NP (PRP 'em))
                      (, ,)
                      (S
                        (VP (VBZ works)
                          (NP (PRP 'em))
                          (SBAR (IN till)
                            (S
                              (S
                                (NP (PRP he))
                                (VP (VBZ feels)
                                  (S
                                    (NP (PRP 'em))
                                    (VP (VB take)
                                      (NP (DT the) (NN bit))))))
                              (: ;)
                              (S
                                (NP (DT The) (NN rest))
                                (VP (VBZ is)
                                  (NP (`` `)
                                    (NP
                                      (NP
                                        (NP (NN oldin) (POS '))
                                        (ADJP (JJ steady)
                                          (PP (IN till)
                                            (NP (DT the) (JJ watchful) (NNS bugles))))
                                        (NN play))
                                      (, ,)
                                      (NP (NNP An) (POS ')))
                                    ('' ')
                                    (SBAR
                                      (FRAG
                                        (X (SYM e))
                                        (VP (VBZ lifts)
                                          (NP (PRP 'em))))))))))))
                      (, ,)
                      (VP (VBZ lifts)
                        (NP (PRP 'em)))))))
              (, ,)
              (VP (VBZ lifts)
                (NP (PRP 'em))
                (PP (IN through)
                  (NP
                    (NP (DT the) (NN charge))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ wins)
                          (NP (DT the) (NN day)))))))))))))
    (. !)))

nsubj(sick-6, E-2)
cop(sick-6, 's-3)
advmod(sick-6, just-4)
advmod(sick-6, as-5)
root(ROOT-0, sick-6)
mark(are-9, as-7)
nsubj(are-9, they-8)
advcl(sick-6, are-9)
cop(eart-14, is-12)
dep(are-9, eart-14)
cop(like-16, is-15)
acl:relcl(eart-14, like-16)
mark(split-18, to-17)
xcomp(like-16, split-18)
cc(sick-6, But-20)
conj:but(sick-6, '-21)
dep(works-23, e-22)
dep('-21, works-23)
nsubj(wins-68, works-23)
nsubj(lifts-62, 'em-24)
ccomp(lifts-62, works-26)
nsubj(lifts-59, 'em-27)
ccomp(lifts-59, works-29)
dobj(works-29, 'em-30)
mark(feels-33, till-31)
nsubj(feels-33, he-32)
advcl(works-29, feels-33)
nsubj(take-35, 'em-34)
ccomp(feels-33, take-35)
det(bit-37, the-36)
dobj(take-35, bit-37)
det(rest-40, The-39)
nsubj(play-50, rest-40)
cop(play-50, is-41)
nmod:poss(play-50, oldin-43)
case(oldin-43, '-44)
amod(play-50, steady-45)
case(bugles-49, till-46)
det(bugles-49, the-47)
amod(bugles-49, watchful-48)
nmod:till(steady-45, bugles-49)
parataxis(feels-33, play-50)
appos(play-50, An-52)
case(An-52, '-53)
dep(lifts-56, e-55)
dep(play-50, lifts-56)
dobj(lifts-56, 'em-57)
ccomp(works-26, lifts-59)
dobj(lifts-59, 'em-60)
acl:relcl(works-23, lifts-62)
dobj(lifts-62, 'em-63)
case(charge-66, through-64)
det(charge-66, the-65)
nmod:through(lifts-62, charge-66)
nsubj(wins-68, charge-66)
ref(works-23, that-67)
ref(charge-66, that-67)
acl:relcl(charge-66, wins-68)
det(day-70, the-69)
nmod:tmod(wins-68, day-70)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (`` `) (NN eathen))
        (PP (IN in)))
      (`` `)
      (VP (VBZ is)
        (VP (VBG blindness)
          (NP (NNS bows))
          (PRT (RP down))
          (PP (TO to)
            (NP (NN wood) (DT an)))
          ('' ')
          (NP (NN stone)))))
    (: ;) ('' ')
    (PRN
      (S
        (NP (NNP E))
        (VP (VBP do) (RB n't)
          (VP (VB obey)
            (NP (DT no) (NNS orders))
            (SBAR (IN unless)
              (S
                (NP (PRP they))
                (VP (VBZ is) (`` `)
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ own)))))))))))
    (: ;)
    (S
      (NP
        (NP (DT The) (`` `) (NN eathen))
        (PP (IN in)
          (NP (`` `)
            (S
              (VP (VBZ is)
                (NP
                  (NP (NN blindness))
                  (SBAR
                    (S
                      (VP (MD must)
                        (VP (VB end)
                          (SBARQ
                            (WHADVP (WRB where))))))))))
            ('' ') (NNS e))))
      (VP (VBD began)))
    (, ,)
    (CC But)
    (S
      (NP
        (NP (DT the) (NN backbone))
        (PP (IN of)
          (NP (DT the) (NNP Army))))
      (VP (VBZ is)
        (NP (DT the) (JJ non-commissioned) (NN man))))
    (. !)))

det(eathen-3, The-1)
nsubj(blindness-7, eathen-3)
acl(eathen-3, in-4)
aux(blindness-7, is-6)
root(ROOT-0, blindness-7)
dobj(blindness-7, bows-8)
compound:prt(blindness-7, down-9)
case(wood-11, to-10)
nmod:to(blindness-7, wood-11)
dep(wood-11, an-12)
dobj(blindness-7, stone-14)
nsubj(obey-20, E-17)
aux(obey-20, do-18)
neg(obey-20, n't-19)
dep(blindness-7, obey-20)
neg(orders-22, no-21)
dobj(obey-20, orders-22)
mark(is-25, unless-23)
nsubj(is-25, they-24)
advcl(obey-20, is-25)
cop(own-28, is-27)
ccomp(is-25, own-28)
det(eathen-32, The-30)
nsubj(began-42, eathen-32)
case(e-41, in-33)
cop(blindness-36, is-35)
dep(e-41, blindness-36)
aux(end-38, must-37)
acl:relcl(blindness-36, end-38)
ccomp(end-38, where-39)
nmod:in(eathen-32, e-41)
conj:but(blindness-7, began-42)
cc(blindness-7, But-44)
det(backbone-46, the-45)
nsubj(man-53, backbone-46)
case(Army-49, of-47)
det(Army-49, the-48)
nmod:of(backbone-46, Army-49)
cop(man-53, is-50)
det(man-53, the-51)
amod(man-53, non-commissioned-52)
conj:but(blindness-7, man-53)

(ROOT
  (S
    (VP (VB Keep)
      (ADVP (RB away))
      (PP (IN from)
        (NP
          (NP (NNS dirtiness))
          (: --)
          (S
            (VP (VB keep)
              (PRT (RP away))
              (PP (IN from)
                (NP (NN mess))))))))
    (. .)))

root(ROOT-0, Keep-1)
advmod(Keep-1, away-2)
case(dirtiness-4, from-3)
nmod:from(Keep-1, dirtiness-4)
appos(dirtiness-4, keep-6)
compound:prt(keep-6, away-7)
case(mess-9, from-8)
nmod:from(keep-6, mess-9)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP (VB get)
        (PP (IN into)
          (NP
            (NP (NN doin) (POS '))
            (NNS things) (NNS rather-more-or-less)))))
    (. !)))

aux(get-3, Do-1)
neg(get-3, n't-2)
root(ROOT-0, get-3)
case(rather-more-or-less-8, into-4)
nmod:poss(rather-more-or-less-8, doin-5)
case(doin-5, '-6)
compound(rather-more-or-less-8, things-7)
nmod:into(get-3, rather-more-or-less-8)

(ROOT
  (S
    (S
      (NP (NNP Let))
      (VP (VBZ 's)
        (NP
          (NP (NNP ha) (POS '))
          (ADJP (VBN done)
            (PP (IN with)
              (NP
                (NP (NN abby-nay))
                (, ,)
                (NP
                  (NP (NN kul))
                  (, ,)
                  (NP (DT an))))))
          ('' ') (NN hazar-ho))))
    (: ;)
    (S
      (NP (NNP Mind) (PRP you))
      (VP (VBP keep)
        (NP
          (NP (PRP$ your) (NN rifle))
          (, an) ('' ')
          (NP
            (NP (PRP yourself))
            (NP (NN jus)))
          ('' ')
          (ADVP (RB so)))))
    (. !)))

nsubj(hazar-ho-13, Let-1)
cop(hazar-ho-13, 's-2)
nmod:poss(hazar-ho-13, ha-3)
case(ha-3, '-4)
amod(hazar-ho-13, done-5)
case(abby-nay-7, with-6)
nmod:with(done-5, abby-nay-7)
appos(abby-nay-7, kul-9)
appos(kul-9, an-11)
root(ROOT-0, hazar-ho-13)
nsubj(keep-17, Mind-15)
dep(Mind-15, you-16)
parataxis(hazar-ho-13, keep-17)
nmod:poss(rifle-19, your-18)
dobj(keep-17, rifle-19)
dep(rifle-19, yourself-22)
dep(yourself-22, jus-23)
advmod(rifle-19, so-25)

(ROOT
  (S
    (NP
      (NP (DT THE) (NNP SHUT-EYE) (NNP SENTRY) (NNP Sez))
      (SBAR
        (S
          (NP
            (NP (DT the) (NNP Junior) (NNP Orderly) (NNP Sergeant))
            (PP (TO To)
              (NP (DT the) (NNP Senior) (NNP Orderly))))
          (VP (VBZ Man) (: :) (`` ``)
            (S
              (NP (PRP$ Our) (NN Orderly))
              (VP (VB Orf)
                (NP (`` `)
                  (NP (NNP cer) (POS 's))
                  (JJ _) (JJ hokee-mut) (NNS _))))))))
    (, ,)
    (S
      (NP (PRP You))
      (`` `)
      (VP (VBP elp) (`` `)
        (NP (NN im))))
    (RB all)
    (S
      (NP (PRP you))
      (VP (MD can)))
    (. .)))

det(Sez-4, THE-1)
compound(Sez-4, SHUT-EYE-2)
compound(Sez-4, SENTRY-3)
dep(elp-28, Sez-4)
det(Sergeant-8, the-5)
compound(Sergeant-8, Junior-6)
compound(Sergeant-8, Orderly-7)
nsubj(Man-13, Sergeant-8)
case(Orderly-12, To-9)
det(Orderly-12, the-10)
compound(Orderly-12, Senior-11)
nmod:to(Sergeant-8, Orderly-12)
acl:relcl(Sez-4, Man-13)
nmod:poss(Orderly-17, Our-16)
nsubj(Orf-18, Orderly-17)
ccomp(Man-13, Orf-18)
nmod:poss(_-24, cer-20)
case(cer-20, 's-21)
amod(_-24, _-22)
amod(_-24, hokee-mut-23)
dobj(Orf-18, _-24)
nsubj(elp-28, You-26)
root(ROOT-0, elp-28)
dobj(elp-28, im-30)
advmod(elp-28, all-31)
nsubj(can-33, you-32)
parataxis(elp-28, can-33)

(ROOT
  (S
    (PP (IN For)
      (S
        (S
          (NP (DT the) (NN wine))
          (VP (VBD was)
            (ADJP (JJ old))))
        (CC and)
        (S
          (NP (DT the) (NN night))
          (VP (VBZ is)
            (ADJP (JJ cold))
            (, ,)
            (NP
              (NP
                (NP (NNP An) (POS '))
                (ADJP
                  (ADJP (DT the) (JJS best))
                  (PRN
                    (S
                      (NP (PRP we))
                      (VP (MD may)
                        (VP (VB go)
                          (ADJP (JJ wrong))
                          (, ,)
                          (ADVP (RB So))))))
                  (, ,)
                  (ADJP (`` `) (RB fore) ('' ') (JJR e)))
                (NNS gits))
              (PP (TO to)
                (NP (DT the) (JJ sentry-box))))))))
    (, ,)
    (NP (PRP You))
    (VP (VBP pass)
      (NP (DT the) (NN word))
      (PRT (RP along)))
    (. .) ('' '')))

mark(old-5, For-1)
det(wine-3, the-2)
nsubj(old-5, wine-3)
cop(old-5, was-4)
advcl(pass-33, old-5)
cc(old-5, and-6)
det(night-8, the-7)
nsubj(cold-10, night-8)
cop(cold-10, is-9)
conj:and(old-5, cold-10)
advcl(pass-33, cold-10)
nmod:poss(gits-27, An-12)
case(An-12, '-13)
det(best-15, the-14)
amod(gits-27, best-15)
nsubj(go-18, we-16)
aux(go-18, may-17)
dep(best-15, go-18)
xcomp(go-18, wrong-19)
advmod(go-18, So-21)
advmod(e-26, fore-24)
dep(best-15, e-26)
dep(cold-10, gits-27)
case(sentry-box-30, to-28)
det(sentry-box-30, the-29)
nmod:to(gits-27, sentry-box-30)
nsubj(pass-33, You-32)
root(ROOT-0, pass-33)
det(word-35, the-34)
dobj(pass-33, word-35)
compound:prt(pass-33, along-36)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBD was) (`` ``)
      (NP (NNS Rounds)))
    (. !)))

dep(Rounds-5, So-1)
nsubj(Rounds-5, it-2)
cop(Rounds-5, was-3)
root(ROOT-0, Rounds-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ Rounds)))
    (. ?) ('' '')))

nsubj(Rounds-2, What-1)
root(ROOT-0, Rounds-2)

(ROOT
  (S
    (PP (IN at)
      (NP
        (NP (CD two))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ frosty) (NN night))
            (, ,) (`` `)
            (NP
              (NP
                (NP (NNP E) (POS 's))
                (`` `) (NN oldin) ('' '))
              (PP (IN on)
                (PP (IN by)
                  (NP
                    (NP (DT the) (NN sergeant) (POS 's))
                    (NN sash)))))
            (, ,)
            (ADVP (CC but))))))
    (, ,)
    (ADVP (RB sentry))
    (, ,)
    (VP (VBD shut)
      (NP (PRP$ your) (NN eye)))
    (. .)))

case(two-2, at-1)
nmod:at(shut-25, two-2)
case(night-6, of-3)
det(night-6, a-4)
amod(night-6, frosty-5)
nmod:of(two-2, night-6)
nmod:poss(oldin-12, E-9)
case(E-9, 's-10)
dep(night-6, oldin-12)
case(sash-19, on-14)
case(sash-19, by-15)
det(sergeant-17, the-16)
nmod:poss(sash-19, sergeant-17)
case(sergeant-17, 's-18)
nmod:by(oldin-12, sash-19)
advmod(night-6, but-21)
advmod(shut-25, sentry-23)
root(ROOT-0, shut-25)
nmod:poss(eye-27, your-26)
dobj(shut-25, eye-27)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP it))
    (VP (VBD was) (`` ``)
      (ADJP (JJ Pass)))
    (. !)))

dep(Pass-6, An-1)
case(An-1, '-2)
nsubj(Pass-6, it-3)
cop(Pass-6, was-4)
root(ROOT-0, Pass-6)

(ROOT
  (S
    (NP (DT All))
    (VP (VBZ 's)
      (ADVP (RB well)))
    (. !) ('' '')))

nsubj('s-2, All-1)
root(ROOT-0, 's-2)
advmod('s-2, well-3)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (VP (VB ai) (RB n't)
      (VP (`` ')
        (ADVP (RB e))
        (VB drippin) ('' ')
        (NP (JJ tight))))
    (. !)))

discourse(drippin-7, Oh-1)
aux(drippin-7, ai-3)
neg(drippin-7, n't-4)
advmod(drippin-7, e-6)
root(ROOT-0, drippin-7)
dobj(drippin-7, tight-9)

(ROOT
  (S (`` `)
    (NP (NNP E))
    (VP (MD 'll)
      (VP (VB need)
        (NP
          (NP (DT an) (NN affidavit))
          (ADJP (RB pretty) (RB badly) (JJ by-an)))
        ('' ') (: -)
        (PP (IN by))))
    (. .)))

nsubj(need-4, E-2)
aux(need-4, 'll-3)
root(ROOT-0, need-4)
det(affidavit-6, an-5)
dobj(need-4, affidavit-6)
advmod(by-an-9, pretty-7)
advmod(by-an-9, badly-8)
amod(affidavit-6, by-an-9)
nmod(need-4, by-12)

(ROOT
  (S
    (S
      (NP (DT The) (NN moon))
      (VP (VBD was)
        (ADJP (JJ white)
          (PP (IN on)
            (NP (DT the) (NNS barricks))))))
    (, ,)
    (NP (DT The) (NN road))
    (VP (VBD was)
      (NP
        (NP (JJ white) (DT an))
        ('' ')
        (SBAR
          (S
            (NP
              (NP (NNP wide) (, ,) (NNP An) (POS ') (DT the) (NNP Orderly) (NNP Orf))
              (`` `)
              (VP (VBN cer)))
            (VP (VBD took)
              (S
                (S
                  (NP (PRP it))
                  (NP (DT all)))
                (, ,)
                (S
                  (NP (NNP An) (POS '))
                  (NP (DT the) (JJ ten-foot) (NN ditch))))
              (PP (IN beside)))))))
    (. .)))

det(moon-2, The-1)
nsubj(white-4, moon-2)
cop(white-4, was-3)
ccomp(white-12, white-4)
case(barricks-7, on-5)
det(barricks-7, the-6)
nmod:on(white-4, barricks-7)
det(road-10, The-9)
nsubj(white-12, road-10)
cop(white-12, was-11)
root(ROOT-0, white-12)
dep(white-12, an-13)
compound(Orf-21, wide-15)
appos(Orf-21, An-17)
case(Orf-21, '-18)
det(Orf-21, the-19)
compound(Orf-21, Orderly-20)
nsubj(took-24, Orf-21)
acl(Orf-21, cer-23)
acl:relcl(white-12, took-24)
dep(all-26, it-25)
xcomp(took-24, all-26)
dep(ditch-32, An-28)
case(An-28, '-29)
det(ditch-32, the-30)
amod(ditch-32, ten-foot-31)
parataxis(all-26, ditch-32)
nmod(took-24, beside-33)

(ROOT
  (S
    (S
      (S
        (NP (NNP An) (POS ') (DT the) (NNP corporal))
        (VP (VBD pulled)
          (NP
            (NP (DT an))
            ('' ')
            (SBAR
              (S
                (NP (DT the) (NN sergeant))
                (VP (VBD pushed)))))))
      (, ,)
      (S
        (NP (NNP An) (POS '))
        (NP (DT the) (CD three))))
    (PRN
      (S
        (S
          (NP (PRP they))
          (VP (VBN danced)
            (PRT (RP along))))
        (, ,)
        (CC But)
        (S
          (NP (PRP I))
          (VP (MD 'd)
            (VP (VB shut)
              (NP (PRP$ my) (NNS eyes))
              (PP (IN in)
                (NP (DT the) (JJ sentry-box)))))))
      (, ,))
    (IN So)
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB see)
          (NP (NNP nothin) (POS '))
          (ADVP (RB wrong)))))
    (. .)))

nmod:poss(corporal-4, An-1)
case(corporal-4, '-2)
det(corporal-4, the-3)
nsubj(pulled-5, corporal-4)
root(ROOT-0, pulled-5)
dobj(pulled-5, an-6)
det(sergeant-9, the-8)
nsubj(pushed-10, sergeant-9)
acl:relcl(an-6, pushed-10)
dep(three-15, An-12)
case(An-12, '-13)
det(three-15, the-14)
parataxis(pulled-5, three-15)
nsubj(danced-17, they-16)
dep(pulled-5, danced-17)
compound:prt(danced-17, along-18)
cc(danced-17, But-20)
nsubj(shut-23, I-21)
aux(shut-23, 'd-22)
dep(pulled-5, shut-23)
conj:but(danced-17, shut-23)
nmod:poss(eyes-25, my-24)
dobj(shut-23, eyes-25)
case(sentry-box-28, in-26)
det(sentry-box-28, the-27)
nmod:in(shut-23, sentry-box-28)
dep(pulled-5, So-30)
nsubj(see-34, I-31)
aux(see-34, did-32)
neg(see-34, n't-33)
parataxis(pulled-5, see-34)
dobj(see-34, nothin-35)
case(nothin-35, '-36)
advmod(see-34, wrong-37)

(ROOT
  (FRAG
    (SBAR (IN Though)
      (S
        (NP (PRP it))
        (VP (VBD was) (`` ``)
          (NP (NNS Rounds)))))
    (. !)))

mark(Rounds-5, Though-1)
nsubj(Rounds-5, it-2)
cop(Rounds-5, was-3)
root(ROOT-0, Rounds-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ Rounds)))
    (. ?) ('' '')))

nsubj(Rounds-2, What-1)
root(ROOT-0, Rounds-2)

(ROOT
  (S
    (NP (NNP O))
    (VP (VBP corporal) (, ,)
      (NP (`` `) (JJ old) (`` `) (NN im))
      (ADVP (RB up)))
    (. !)))

nsubj(corporal-2, O-1)
root(ROOT-0, corporal-2)
amod(im-7, old-5)
dobj(corporal-2, im-7)
advmod(corporal-2, up-8)

(ROOT
  (S (`` `)
    (NP (NNP E))
    (VP (VBZ 's)
      (ADJP (JJ usin) ('' '))
      (`` `)
      (SQ (VBZ is)
        (NP
          (NP (NN cap))
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP
                (VP (MD should) (RB n't)
                  (VP (VB be)
                    (VP (VBN used)))
                  (, ,))
                (CC but)
                (PRN (, ,)
                  (ADVP (RB sentry))
                  (, ,))
                (VP (VBD shut)
                  (NP (PRP$ your) (NN eye)))))))))
    (. .)))

nsubj(usin-4, E-2)
cop(usin-4, 's-3)
root(ROOT-0, usin-4)
dep(usin-4, is-7)
nsubj(is-7, cap-8)
mark(used-14, as-9)
nsubjpass(used-14, it-10)
nsubjpass(shut-20, it-10)
aux(used-14, should-11)
neg(used-14, n't-12)
auxpass(used-14, be-13)
dep(cap-8, used-14)
cc(used-14, but-16)
dep(used-14, sentry-18)
dep(cap-8, shut-20)
conj:but(used-14, shut-20)
nmod:poss(eye-22, your-21)
dobj(shut-20, eye-22)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP it))
    (VP (VBD was) (`` ``)
      (ADJP (JJ Pass)))
    (. !)))

dep(Pass-6, An-1)
case(An-1, '-2)
nsubj(Pass-6, it-3)
cop(Pass-6, was-4)
root(ROOT-0, Pass-6)

(ROOT
  (S
    (NP (DT All))
    (VP (VBZ 's)
      (ADVP (RB well)))
    (. !) ('' '')))

nsubj('s-2, All-1)
root(ROOT-0, 's-2)
advmod('s-2, well-3)

(ROOT
  (S
    (NP (NNP Ho))
    (, ,)
    (VP (VB shun)
      (NP
        (NP (DT the) (NN foamin) (POS '))
        (NN cup)))
    (. !)))

nsubj(shun-3, Ho-1)
root(ROOT-0, shun-3)
det(foamin-5, the-4)
nmod:poss(cup-7, foamin-5)
case(foamin-5, '-6)
dobj(shun-3, cup-7)

(ROOT
  (S (`` `)
    (NP (NNP E))
    (VP (MD 'll)
      (VP (VB need) (, ,)
        (ADVP (RB etc.))))
    (. .)))

nsubj(need-4, E-2)
aux(need-4, 'll-3)
root(ROOT-0, need-4)
advmod(need-4, etc.-6)

(ROOT
  (S
    (S
      (NP (PRP 'T))
      (VP (VBD was)
        (PP (IN after)
          (NP (CD four)))
        (PP (IN in)
          (NP (DT the) (NN mornin) (POS ')))))
    (: ;)
    (S
      (NP (PRP We))
      (`` `)
      (NP
        (NP (NN ad))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB stop)
                (NP
                  (NP (DT the) (NN fun))
                  (, ,)
                  (NP
                    (NP (NNP An) (POS '))
                    (NP (PRP we)))))))))
      (VP (VBD sent)
        (NP (`` `) (JJ im) (`` `) (NN ome))
        (PP (IN on)
          (NP (DT a) (NN bullock-cart)))
        (, ,)
        (PP (IN With)
          (NP (`` `)
            (S
              (VP (VBZ is)
                (NP (NN belt))))
            (, an) ('' ')
            (NP
              (NP (NN stock))
              (VP (VBN undone)))))))
    (: ;)
    (CC But)
    (S
      (NP (PRP we))
      (VP (VBD sluiced)
        (NP (`` `)
          (NP (NN im) (RP down))
          (, an) ('' ')
          (PRN
            (S
              (NP (PRP we))
              (VP (VBD washed) (`` `)
                (S
                  (VP (VB im)
                    (PRT (RP out)))))))
          (, ,)
          (NP
            (NP
              (NP (NNP An) (POS '))
              (ADJP (DT a) (JJ first-class))
              (NN job))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBD made) (, ,)
                  (SBAR
                    (WHADVP (WRB When))
                    (S
                      (NP (PRP we))
                      (VP (VBD saved)
                        (NP (`` `)
                          (NP (NN im))
                          (, ,)
                          (ADJP (JJ smart)
                            (PP (IN as)
                              (NP (DT a) (NN bombardier))))
                          (, ,))
                        (PP (IN For)
                          (NP (JJ six-o'clock) (NN parade)))))))))))))
    (. .)))

nsubj(four-4, 'T-1)
cop(four-4, was-2)
case(four-4, after-3)
root(ROOT-0, four-4)
case(mornin-7, in-5)
det(mornin-7, the-6)
nmod:'(four-4, mornin-7)
case(mornin-7, '-8)
nsubj(sent-21, We-10)
nsubj(sent-21, ad-12)
mark(stop-14, to-13)
acl(ad-12, stop-14)
det(fun-16, the-15)
dobj(stop-14, fun-16)
appos(fun-16, An-18)
case(An-18, '-19)
dep(An-18, we-20)
conj:but(four-4, sent-21)
amod(ome-25, im-23)
dobj(sent-21, ome-25)
case(bullock-cart-28, on-26)
det(bullock-cart-28, a-27)
nmod:on(sent-21, bullock-cart-28)
case(stock-36, With-30)
cop(belt-33, is-32)
dep(stock-36, belt-33)
nmod:with(sent-21, stock-36)
acl(stock-36, undone-37)
cc(four-4, But-39)
nsubj(sluiced-41, we-40)
conj:but(four-4, sluiced-41)
dobj(sluiced-41, im-43)
dep(im-43, down-44)
nsubj(washed-48, we-47)
dep(im-43, washed-48)
ccomp(washed-48, im-50)
compound:prt(im-50, out-51)
nmod:poss(job-57, An-53)
case(An-53, '-54)
det(first-class-56, a-55)
amod(job-57, first-class-56)
appos(im-43, job-57)
nsubj(made-59, we-58)
acl:relcl(job-57, made-59)
advmod(saved-63, When-61)
nsubj(saved-63, we-62)
advcl(made-59, saved-63)
dobj(saved-63, im-65)
amod(im-65, smart-67)
case(bombardier-70, as-68)
det(bombardier-70, a-69)
nmod:as(smart-67, bombardier-70)
case(parade-74, For-72)
amod(parade-74, six-o'clock-73)
nmod:for(saved-63, parade-74)

(ROOT
  (NP
    (NP
      (NP (PRP It))
      (`` `)
      (NP (NN ad)))
    (VP (VBN been) (`` ``)
      (ADJP (JJ Rounds)))
    (. !)))

root(ROOT-0, It-1)
dep(It-1, ad-3)
cop(Rounds-6, been-4)
acl(It-1, Rounds-6)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ Rounds)))
    (. ?) ('' '')))

nsubj(Rounds-2, What-1)
root(ROOT-0, Rounds-2)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (VP (VB shove) (`` `)
      (NP (NN im))
      (PP (RB straight)
        (ADVP (RB again))))
    (. !)))

discourse(shove-3, Oh-1)
root(ROOT-0, shove-3)
dobj(shove-3, im-5)
advmod(again-7, straight-6)
advcl(shove-3, again-7)

(ROOT
  (S
    (NP
      (NP (`` `)
        (NP (NNP E) (POS 's))
        (NN usin) ('' '))
      (SBAR
        (S
          (VP (`` `) (VBZ is)
            (ADJP (JJ sword)
              (PP (IN for)
                (NP (DT a) (NN bicycle))))))))
    (, ,)
    (ADVP (CC but))
    (, ,)
    (ADVP (RB sentry))
    (, ,)
    (VP (VBD shut)
      (NP (PRP$ your) (NN eye)))
    (. .)))

nmod:poss(usin-4, E-2)
case(E-2, 's-3)
nsubj(shut-17, usin-4)
cop(sword-8, is-7)
acl:relcl(usin-4, sword-8)
case(bicycle-11, for-9)
det(bicycle-11, a-10)
nmod:for(sword-8, bicycle-11)
advmod(shut-17, but-13)
advmod(shut-17, sentry-15)
root(ROOT-0, shut-17)
nmod:poss(eye-19, your-18)
dobj(shut-17, eye-19)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP it))
    (VP (VBD was) (`` ``)
      (ADJP (JJ Pass)))
    (. !)))

dep(Pass-6, An-1)
case(An-1, '-2)
nsubj(Pass-6, it-3)
cop(Pass-6, was-4)
root(ROOT-0, Pass-6)

(ROOT
  (S
    (NP (DT All))
    (VP (VBZ 's)
      (ADVP (RB well)))
    (. !) ('' '')))

nsubj('s-2, All-1)
root(ROOT-0, 's-2)
advmod('s-2, well-3)

(ROOT
  (S (`` `)
    (NP (NNP E))
    (VP (VBZ 's)
      (VP (VBN called)
        (S
          (NP (PRP me))
          (`` ``)
          (NP
            (NP (NNP Darlin) (POS '))
            (NNP Jane)))))
    ('' '') (. !)))

nsubjpass(called-4, E-2)
auxpass(called-4, 's-3)
root(ROOT-0, called-4)
dep(Jane-9, me-5)
nmod:poss(Jane-9, Darlin-7)
case(Darlin-7, '-8)
xcomp(called-4, Jane-9)

(ROOT
  (S (`` `)
    (NP (NNP E))
    (VP (MD 'll)
      (VP (VB need) (, ,)
        (ADVP (RB etc.))))
    (. .)))

nsubj(need-4, E-2)
aux(need-4, 'll-3)
root(ROOT-0, need-4)
advmod(need-4, etc.-6)

(ROOT
  (S
    (NP (DT The) (NN drill))
    (VP (VBD was)
      (NP
        (NP (RB long) (DT an))
        ('' ')
        (SBAR
          (S (`` `)
            (S
              (ADVP (RB eavy))
              (PRN (, ,)
                (S
                  (NP (DT The) (NN sky))
                  (VP (VBD was) (`` `)
                    (NP
                      (NP (NN ot))
                      (, an) ('' ')
                      (NP
                        (NP (NN blue))
                        (, ,)
                        (NP (NNP An)))
                      ('' ')))))
              (`` `)
              (VP (VBZ is)
                (SBAR
                  (S
                    (NP
                      (NP (NN eye))
                      (SBAR
                        (S
                          (VP (VBD was)
                            (ADJP (JJ wild)))))
                      (, an) ('' '))
                    (`` `)
                    (VP (VBZ is) (`` `)
                      (NP
                        (NP (NN air))
                        (SBAR
                          (S
                            (VP (VBD was)
                              (ADJP (JJ wet)))))))))))
            (, ,)
            (CC But)
            (`` `)
            (S
              (S
                (VP (VBZ is)
                  (NP (NN sergeant))))
              (VP (VBD pulled) (`` `)
                (NP (NN im))
                (PP (IN through))))))))
    (. .)))

det(drill-2, The-1)
nsubj(an-5, drill-2)
cop(an-5, was-3)
advmod(an-5, long-4)
root(ROOT-0, an-5)
advmod(is-22, eavy-8)
det(sky-11, The-10)
nsubj(ot-14, sky-11)
cop(ot-14, was-12)
parataxis(is-22, ot-14)
dep(ot-14, blue-17)
appos(blue-17, An-19)
acl:relcl(an-5, is-22)
nsubj(air-31, eye-23)
cop(wild-25, was-24)
acl:relcl(eye-23, wild-25)
cop(air-31, is-29)
ccomp(is-22, air-31)
cop(wet-33, was-32)
acl:relcl(air-31, wet-33)
cc(is-22, But-35)
cop(sergeant-38, is-37)
csubj(pulled-39, sergeant-38)
acl:relcl(an-5, pulled-39)
conj:But(is-22, pulled-39)
dobj(pulled-39, im-41)
nmod(pulled-39, through-42)

(ROOT
  (S
    (S
      (NP (PRP$ Our) (NNS men))
      (VP (VBD was)
        (NP (JJ good) (JJ old) (NNS trusties))))
    (: --)
    (S
      (NP (PRP They))
      (VP (VBD 'd)
        (VP (VBN done)
          (NP (PRP it))
          (PP (IN on)
            (NP
              (NP (PRP$ their))
              (`` `)
              (NP (NN ead)))))))
    (: ;)
    (CC But)
    (S
      (NP (PRP you))
      (VP (MD ought)
        (S
          (VP (TO to) (`` `)
            (VP (VB ave)
              (NP (`` `) (JJ eard) (CD 'em) (NN markin) ('' ') (NN time))
              (S
                (VP (TO To) (`` `)
                  (VP (VB ide)
                    (SBAR
                      (S
                        (NP
                          (NP (DT the) (NNS things) (POS '))
                          (NN e))
                        (VP (VBD said))))))))))))
    (. !)))

nmod:poss(men-2, Our-1)
nsubj(trusties-6, men-2)
cop(trusties-6, was-3)
amod(trusties-6, good-4)
amod(trusties-6, old-5)
root(ROOT-0, trusties-6)
nsubj(done-10, They-8)
aux(done-10, 'd-9)
conj:but(trusties-6, done-10)
dobj(done-10, it-11)
case(their-13, on-12)
nmod:on(done-10, their-13)
dep(their-13, ead-15)
cc(trusties-6, But-17)
nsubj(ought-19, you-18)
nsubj:xsubj(ave-22, you-18)
conj:but(trusties-6, ought-19)
mark(ave-22, to-20)
xcomp(ought-19, ave-22)
amod(time-28, eard-24)
nummod(time-28, 'em-25)
compound(time-28, markin-26)
dobj(ave-22, time-28)
mark(ide-31, To-29)
advcl(ave-22, ide-31)
det(things-33, the-32)
nmod:poss(e-35, things-33)
case(things-33, '-34)
nsubj(said-36, e-35)
ccomp(ide-31, said-36)

(ROOT
  (S (IN For)
    (NP (PRP it))
    (VP (VBD was)
      (NP (`` ``)
        (NP (NNP Right) (NN flank))
        (: --)
        (NP (NN wheel))))
    (. !) ('' '')))

dep(flank-6, For-1)
nsubj(flank-6, it-2)
cop(flank-6, was-3)
compound(flank-6, Right-5)
root(ROOT-0, flank-6)
dep(flank-6, wheel-8)

(ROOT
  (S
    (FRAG
      (PP (IN for)))
    ('' '')
    (NP (`` `) (NNP Alt))
    (PRN
      (S (, ,)
        (NP (DT an))
        ('' ')
        (VP (VBP stand)
          (PP (IN at)))))
    (VP (VBZ ease))
    (. !) ('' '')))

dep(ease-10, for-1)
nsubj(ease-10, Alt-4)
nsubj(stand-8, an-6)
parataxis(ease-10, stand-8)
nmod(stand-8, at-9)
root(ROOT-0, ease-10)

(ROOT
  (S
    (NP
      (NP (NNP An) (POS '))
      (`` ``) (NNS Left))
    (VP (VBP extend))
    (. !) ('' '')))

nmod:poss(Left-4, An-1)
case(An-1, '-2)
nsubj(extend-5, Left-4)
root(ROOT-0, extend-5)

(ROOT
  (PP (IN for)
    (S (`` ``)
      (S
        (VP (VBG Centre)
          (NP (NN close))))
      (. !) ('' ''))))

mark(Centre-3, for-1)
root(ROOT-0, Centre-3)
dobj(Centre-3, close-4)

(ROOT
  (S
    (NP (NNP O) (NN marker))
    (, ,)
    (VP (VB shut)
      (NP (PRP$ your) (NN eye)))
    (. !)))

compound(marker-2, O-1)
nsubj(shut-4, marker-2)
root(ROOT-0, shut-4)
nmod:poss(eye-6, your-5)
dobj(shut-4, eye-6)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP it))
    (VP (VBD was) (, ,) ('' '')
      (NP (`` `)
        (NP (NNP Ere))
        (, ,)
        (SBAR
          (S
            (VP (VBP sir)))))
      (, ,)
      (S (`` `)
        (VP (VB ere))))
    (. !)))

dep(Ere-8, An-1)
case(An-1, '-2)
nsubj(Ere-8, it-3)
cop(Ere-8, was-4)
root(ROOT-0, Ere-8)
acl:relcl(Ere-8, sir-10)
dep(Ere-8, ere-13)

(ROOT
  (S
    (ADVP (RB before))
    (NP (DT the) (NNP Colonel))
    (VP (VBZ sees))
    (. !) ('' '')))

advmod(sees-4, before-1)
det(Colonel-3, the-2)
nsubj(sees-4, Colonel-3)
root(ROOT-0, sees-4)

(ROOT
  (S (IN So)
    (NP (PRP he))
    (VP (VBD needed)
      (NP
        (NP
          (NP (NNS affidavits))
          (ADJP (RB pretty) (RB badly) (JJ by-an))
          (POS '))
        (NN -))
      (PP (IN by)))
    (. .)))

dep(needed-3, So-1)
nsubj(needed-3, he-2)
root(ROOT-0, needed-3)
nmod:poss(--9, affidavits-4)
advmod(by-an-7, pretty-5)
advmod(by-an-7, badly-6)
amod(affidavits-4, by-an-7)
case(affidavits-4, '-8)
dobj(needed-3, --9)
nmod(needed-3, by-10)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBD was)
        (ADJP (JJ two-an) ('' '))))
    (: -)
    (S
      (NP (CD thirty) (NNS sergeants))
      (PRN (, ,)
        (S
          (NP (EX There))
          (VP (VBD was)
            (NP
              (NP (NN corp))
              (`` `)
              (ADJP (JJ rals) (JJ forty-one)))))
        (, ,))
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (RB just) (CD nine))
          (SBAR
            (S
              (NP (`` `)
                (NP (JJ undred) (NN rank))
                (, an) ('' '))
              (VP (VBP file)
                (S
                  (VP (TO To)
                    (VP (VB swear)
                      (PP (TO to)
                        (NP
                          (NP (DT a) (NN touch) (NN o) (POS '))
                          (NN sun))))))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
xcomp(was-2, two-an-3)
nummod(sergeants-7, thirty-6)
nsubj(was-17, sergeants-7)
expl(was-10, There-9)
parataxis(was-17, was-10)
nsubj(was-10, corp-11)
amod(forty-one-14, rals-13)
amod(corp-11, forty-one-14)
expl(was-17, There-16)
parataxis(was-2, was-17)
advmod(nine-19, just-18)
nsubj(was-17, nine-19)
amod(rank-22, undred-21)
nsubj(file-25, rank-22)
nsubj:xsubj(swear-27, rank-22)
acl:relcl(nine-19, file-25)
mark(swear-27, To-26)
xcomp(file-25, swear-27)
case(sun-33, to-28)
det(o-31, a-29)
compound(o-31, touch-30)
nmod:poss(sun-33, o-31)
case(o-31, '-32)
nmod:to(swear-27, sun-33)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP
        (NP (PRP me))
        (SBAR
          (S (`` `)
            (S
              (NP (NNP e))
              (VP (VBD 'd)
                (VP (VBN kissed)
                  (PP (IN in)
                    (NP (DT the) (JJ sentry-box))))))
            (, ,)
            (S
              (SBAR (IN As)
                (S
                  (NP (PRP I))
                  (`` `)
                  (VP (VBP ave) (RB not))))
              (VP (VBD told)
                (PP (IN in)
                  (NP (PRP$ my) (NN song)))))
            (, ,)
            (CC But)
            (S
              (NP (PRP I))
              (VP (VBD took)
                (NP
                  (NP (PRP$ my) (NN oath))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD were)
                        (NP (NNP Bible) (NN truth))))))))
            (, ,)
            (S
              (NP (PRP I))
              (`` `)
              (NP
                (NP (NN ad))
                (VP (RB n't) (VBN seen)))
              (VP (VBD nothin) ('' ')
                (ADVP (RB wrong))))))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
nsubj(was-2, me-3)
nsubj(kissed-7, e-5)
aux(kissed-7, 'd-6)
acl:relcl(me-3, kissed-7)
case(sentry-box-10, in-8)
det(sentry-box-10, the-9)
nmod:in(kissed-7, sentry-box-10)
mark(ave-15, As-12)
nsubj(ave-15, I-13)
csubj(told-17, ave-15)
neg(ave-15, not-16)
ccomp(kissed-7, told-17)
case(song-20, in-18)
nmod:poss(song-20, my-19)
nmod:in(told-17, song-20)
cc(kissed-7, But-22)
nsubj(took-24, I-23)
acl:relcl(me-3, took-24)
conj:but(kissed-7, took-24)
nmod:poss(oath-26, my-25)
dobj(took-24, oath-26)
nsubj(truth-31, oath-26)
ref(oath-26, which-28)
cop(truth-31, were-29)
compound(truth-31, Bible-30)
acl:relcl(oath-26, truth-31)
nsubj(nothin-38, I-33)
nsubj(nothin-38, ad-35)
neg(seen-37, n't-36)
acl(ad-35, seen-37)
acl:relcl(me-3, nothin-38)
conj:but(kissed-7, nothin-38)
advmod(nothin-38, wrong-40)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (PRP them))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (NP (`` `)
                  (NP (NN ot) (DT an))
                  ('' ')
                  (SBAR
                    (S
                      (S (`` `)
                        (ADVP (RB aughty))
                        (, ,)
                        (NP (EX There))
                        (VP (VBZ 's)
                          (S
                            (NP
                              (NP
                                (NP (PRP them))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBZ 's)
                                      (ADJP (JJ cold))))))
                              (, an) ('' ')
                              (NP (`` `) (NN ard))))))
                      (, ,)
                      (CC But)
                      (S
                        (NP (EX there))
                        (VP (VBZ comes)
                          (NP
                            (NP (DT a) (NN night))
                            (SBAR
                              (WHADVP (WRB when))
                              (S
                                (NP (DT the) (JJS best))
                                (VP (VBZ gets)
                                  (ADJP (JJ tight)))))))))))))))))
    (, ,)
    (CC And)
    (S
      (NP (RB then))
      (VP (VBZ turns)
        (PRT (RP out))
        (NP (DT the) (NN Guard))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
nsubj('s-2, them-3)
nsubj(ot-7, them-3)
ref(them-3, that-4)
cop(ot-7, 's-5)
acl:relcl(them-3, ot-7)
nsubj(cold-18, ot-7)
dep(ot-7, an-8)
advmod('s-14, aughty-11)
expl('s-14, There-13)
acl:relcl(ot-7, 's-14)
xcomp('s-14, them-15)
nsubj(cold-18, them-15)
ref(ot-7, that-16)
ref(them-15, that-16)
cop(cold-18, 's-17)
acl:relcl(them-15, cold-18)
dep(them-15, ard-22)
cc('s-14, But-24)
expl(comes-26, there-25)
acl:relcl(ot-7, comes-26)
conj:but('s-14, comes-26)
det(night-28, a-27)
dobj(comes-26, night-28)
advmod(gets-32, when-29)
det(best-31, the-30)
nsubj(gets-32, best-31)
acl:relcl(night-28, gets-32)
xcomp(gets-32, tight-33)
cc('s-2, And-35)
nsubj(turns-37, then-36)
conj:and('s-2, turns-37)
compound:prt(turns-37, out-38)
det(Guard-40, the-39)
dobj(turns-37, Guard-40)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN seen)
          (S
            (NP (PRP them))
            (ADJP (`` `) (JJ ide))
            (NP (PRP$ their) (NN liquor))
            (PP (IN In)
              (NP
                (NP (DT every) (NN kind) (NN o) (POS '))
                (NN way)))))))
    (, ,)
    (CC But)
    (S
      (NP (JJS most))
      (VP (VBZ depends)
        (PP (IN on)
          (NP
            (NP (NN makin) (POS '))
            (NNS friends)))
        (PP (IN With)
          (NP (NNP Privit) (NNP Thomas) (NNP A.)))))
    (. !)))

nsubj(seen-3, I-1)
aux(seen-3, 've-2)
root(ROOT-0, seen-3)
nsubj(ide-6, them-4)
xcomp(seen-3, ide-6)
nmod:poss(liquor-8, their-7)
dep(ide-6, liquor-8)
case(way-14, In-9)
det(o-12, every-10)
compound(o-12, kind-11)
nmod:poss(way-14, o-12)
case(o-12, '-13)
dep(ide-6, way-14)
cc(seen-3, But-16)
nsubj(depends-18, most-17)
conj:but(seen-3, depends-18)
case(friends-22, on-19)
nmod:poss(friends-22, makin-20)
case(makin-20, '-21)
nmod:on(depends-18, friends-22)
case(A.-26, With-23)
compound(A.-26, Privit-24)
compound(A.-26, Thomas-25)
nmod:with(depends-18, A.-26)

(ROOT
  (FRAG
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP it))
        (VP (VBZ is) (`` ``)
          (ADJP (JJ Rounds)))))
    (. !)))

advmod(Rounds-5, When-1)
nsubj(Rounds-5, it-2)
cop(Rounds-5, is-3)
root(ROOT-0, Rounds-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ Rounds)))
    (. ?) ('' '')))

nsubj(Rounds-2, What-1)
root(ROOT-0, Rounds-2)

(ROOT
  (S
    (NP
      (NP (`` `)
        (NP (NNP E) (POS 's))
        (NN breathin) ('' '))
      (ADVP (RB through)))
    (VP (`` `) (VBZ is)
      (ADJP (JJ nose)))
    (. .)))

nmod:poss(breathin-4, E-2)
case(E-2, 's-3)
nsubj(nose-9, breathin-4)
advmod(breathin-4, through-6)
cop(nose-9, is-8)
root(ROOT-0, nose-9)

(ROOT
  (S
    (NP
      (NP
        (NP (`` `)
          (NP (NNP E) (POS 's))
          (NN reelin) ('' '))
        (, ,)
        (NP (NN rollin) (POS ')))
      (, ,)
      (NP
        (NP (NN roarin) (POS '))
        (JJ tight)))
    (, ,)
    (ADVP (CC but))
    (, ,)
    (ADVP (RB sentry))
    (, ,)
    (VP (VBD shut)
      (NP (PRP$ your) (NN eye)))
    (. .)))

nmod:poss(reelin-4, E-2)
case(E-2, 's-3)
nsubj(shut-18, reelin-4)
appos(reelin-4, rollin-7)
case(rollin-7, '-8)
appos(reelin-4, roarin-10)
case(roarin-10, '-11)
amod(roarin-10, tight-12)
advmod(shut-18, but-14)
advmod(shut-18, sentry-16)
root(ROOT-0, shut-18)
nmod:poss(eye-20, your-19)
dobj(shut-18, eye-20)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (PRP it))
    (VP (VBZ is) (`` ``)
      (ADJP (JJ Pass)))
    (. !)))

dep(Pass-6, An-1)
case(An-1, '-2)
nsubj(Pass-6, it-3)
cop(Pass-6, is-4)
root(ROOT-0, Pass-6)

(ROOT
  (S
    (NP (DT All))
    (VP (VBZ 's)
      (ADVP (RB well)))
    (. !) ('' '')))

nsubj('s-2, All-1)
root(ROOT-0, 's-2)
advmod('s-2, well-3)

(ROOT
  (S
    (S
      (NP (NNP An) (POS ')))
    (NP (DT that))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN way))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ goes) (: :)
              (S
                (NP (PRP We))
                (VP (MD 'll) (`` `)
                  (VP (VB elp)
                    (NP
                      (NP (`` `) (NN im))
                      (PP (IN for)))
                    (`` `)
                    (SQ (VBZ is)
                      (NP
                        (NP (NN mother))
                        (, ,)
                        (NP (DT an))))
                    ('' '))))))))
      (PRN
        (S (`` `)
          (NP (NNP e))
          (VP (MD 'll) (`` `)
            (VP (VB elp)
              (S
                (NP (PRP us))
                (ADJP (JJ by-an)))))
          ('' '))
        (, -))
      (PP (IN by)))
    (. !)))

dep(way-6, An-1)
case(An-1, '-2)
nsubj(way-6, that-3)
cop(way-6, 's-4)
det(way-6, the-5)
root(ROOT-0, way-6)
nsubj(goes-8, it-7)
acl:relcl(way-6, goes-8)
nsubj(elp-13, We-10)
aux(elp-13, 'll-11)
ccomp(goes-8, elp-13)
dobj(elp-13, im-15)
acl(im-15, for-16)
dep(elp-13, is-18)
nsubj(is-18, mother-19)
appos(mother-19, an-21)
nsubj(elp-27, e-24)
aux(elp-27, 'll-25)
parataxis(way-6, elp-27)
nsubj(by-an-29, us-28)
xcomp(elp-27, by-an-29)
nmod(way-6, by-32)

(ROOT
  (FRAG (`` ``)
    (NP (NNP MARY))
    (, ,)
    (NP (NNP PITY) (NNP WOMEN))
    (. !) ('' '')))

root(ROOT-0, MARY-2)
compound(WOMEN-5, PITY-4)
appos(MARY-2, WOMEN-5)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP call)
        (S
          (NP (PRP yourself))
          (NP (DT a) (NN man)))))
    (, ,)
    (S
      (PP (IN For)
        (NP (DT all)))
      (NP (PRP you))
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB swear))))))
    (, ,)
    (S
      (NP (NNP An) (POS '))
      (VP (VBP leave)
        (NP (PRP me))))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP you))
        (VP
          (VP (MD can))
          (, ,)
          (NP (PRP$ My) (JJ certain) (NN shame)
            (S
              (VP (TO to)
                (VP (VB bear))))))))
    (. ?)))

nsubj(call-2, You-1)
root(ROOT-0, call-2)
nsubj(man-5, yourself-3)
det(man-5, a-4)
xcomp(call-2, man-5)
case(all-8, For-7)
nmod:for(used-10, all-8)
nsubj(used-10, you-9)
nsubj:xsubj(swear-12, you-9)
parataxis(call-2, used-10)
mark(swear-12, to-11)
xcomp(used-10, swear-12)
nsubj(leave-16, An-14)
case(An-14, '-15)
parataxis(call-2, leave-16)
dobj(leave-16, me-17)
mark(can-21, as-19)
nsubj(can-21, you-20)
dep(call-2, can-21)
nmod:poss(shame-25, My-23)
amod(shame-25, certain-24)
dobj(can-21, shame-25)
mark(bear-27, to-26)
acl(shame-25, bear-27)

(ROOT
  (S
    (NP (PRP I))
    (`` `)
    (VP (VBZ ear))
    (. !)))

nsubj(ear-3, I-1)
root(ROOT-0, ear-3)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP do) (RB not)
        (VP (VB care))))
    (: --)
    (S
      (NP (PRP You))
      (VP (VBN done)
        (NP
          (NP (DT the) (JJS worst))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP know)))))))
    (. .)))

nsubj(care-4, You-1)
aux(care-4, do-2)
neg(care-4, not-3)
root(ROOT-0, care-4)
nsubj(done-7, You-6)
parataxis(care-4, done-7)
det(worst-9, the-8)
dobj(done-7, worst-9)
nsubj(know-11, you-10)
acl:relcl(worst-9, know-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (`` `) (VBD ate)
      (NP (PRP you))
      (, ,)
      (S
        (VP (VBG grinnin) ('' ')
          (NP (RB there)))))
    (: ...) (. .)))

nsubj(ate-3, I-1)
root(ROOT-0, ate-3)
dobj(ate-3, you-4)
advcl(ate-3, grinnin-6)
dobj(grinnin-6, there-8)

(ROOT
  (S
    (FRAG
      (INTJ (UH Ah))
      (, ,)
      (NP (NNP Gawd)))
    (, ,)
    (NP (PRP I))
    (VP (VBP love)
      (NP (PRP you))
      (ADVP (RB so)))
    (. !)))

discourse(Gawd-3, Ah-1)
dep(love-6, Gawd-3)
nsubj(love-6, I-5)
root(ROOT-0, love-6)
dobj(love-6, you-7)
advmod(love-6, so-8)

(ROOT
  (S
    (VP (VB Nice)
      (SBAR (IN while)
        (S
          (NP (PRP it))
          (VP
            (VP (VBD lasted))
            (, ,)
            (NP
              (NP (DT an))
              ('' ')
              (SBAR
                (S
                  (ADVP (RB now))
                  (NP (PRP it))
                  (VP (VBZ is)
                    (ADJP (RP over)))))))))
      (: --)
      (S
        (S
          (VP (VB Tear)
            (PRT (RP out))
            (NP (PRP$ your) (`` `) (NN eart) (, an) ('' '))))
        (ADJP (JJ good-bye)
          (PP (TO to)
            (NP (PRP$ your) (NN lover))))))
    (. !)))

root(ROOT-0, Nice-1)
mark(lasted-4, while-2)
nsubj(lasted-4, it-3)
advcl(Nice-1, lasted-4)
dobj(lasted-4, an-6)
advmod(over-11, now-8)
nsubj(over-11, it-9)
cop(over-11, is-10)
acl:relcl(an-6, over-11)
parataxis(Nice-1, Tear-13)
compound:prt(Tear-13, out-14)
nmod:poss(eart-17, your-15)
dobj(Tear-13, eart-17)
dep(Tear-13, good-bye-20)
case(lover-23, to-21)
nmod:poss(lover-23, your-22)
nmod:to(good-bye-20, lover-23)

(ROOT
  (SBAR
    (WHNP (WP What))
    (S
      (VP (VBZ 's)
        (NP
          (NP
            (NP (DT the) (NN use)
              (NP (NNP o) (POS '))
              (NN grievin) ('' '))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP
                  (NP (DT the) (NN mother))
                  (NP (DT that)))
                (VP (VBD bore)
                  (NP (PRP you))))))
          (PRN (-LRB- -LRB-)
            (NP (NNP Mary))
            (, ,)
            (NP (NN pity) (NNS women))
            (. !) (-RRB- -RRB-)))))))

nsubj(grievin-7, What-1)
cop(grievin-7, 's-2)
det(grievin-7, the-3)
compound(grievin-7, use-4)
nmod:poss(grievin-7, o-5)
case(o-5, '-6)
root(ROOT-0, grievin-7)
dep(mother-12, grievin-7)
advmod(bore-14, when-10)
det(mother-12, the-11)
nsubj(bore-14, mother-12)
ref(grievin-7, that-13)
acl:relcl(grievin-7, bore-14)
dobj(bore-14, you-15)
dep(grievin-7, Mary-17)
compound(women-20, pity-19)
dep(Mary-17, women-20)

(ROOT
  (SQ (VBP knew)
    (NP (PRP it))
    (PP
      (ADVP (DT all))
      (IN before)
      (NP (PRP you)))
    (. ?)))

root(ROOT-0, knew-1)
nsubj(knew-1, it-2)
advmod(you-5, all-3)
case(you-5, before-4)
nmod:before(knew-1, you-5)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBP are) (RB n't)
        (NP
          (NP
            (NP (DT no) (JJ false) (NN alarm))
            (, ,)
            (NP
              (NP (DT The) (NN finish))
              (PP (TO to)
                (NP (PRP$ your) (NN fun)))))
          (: ;)
          (NP (PRP You)))))
    (: --)
    (S
      (NP (PRP you))
      (`` `)
      (VP (VBP ave)
        (S
          (VP (VBG brung)
            (SBAR
              (S
                (NP (DT the) (`` `) (NN arm) (, ,) (NNP An) ('' ') (NN I))
                (VP (VBP 'm)
                  (NP
                    (NP (DT the) (JJ ruined) (NN one))
                    (: ;)
                    (NP (NNP An))
                    ('' '))
                  (SBAR (RB now)
                    (S
                      (NP (PRP you))
                      (VP (MD 'll)
                        (VP
                          (PP (IN off)
                            (NP (DT an)))
                          ('' ') (VB run)))))))))))
      (PP (IN With)
        (NP
          (NP (DT some) (JJ new) (NN fool))
          (PP (IN in)
            (NP (RB tow))))))
    (. .)))

nsubj(alarm-6, It-1)
cop(alarm-6, are-2)
neg(alarm-6, n't-3)
neg(alarm-6, no-4)
amod(alarm-6, false-5)
root(ROOT-0, alarm-6)
det(finish-9, The-8)
appos(alarm-6, finish-9)
case(fun-12, to-10)
nmod:poss(fun-12, your-11)
nmod:to(finish-9, fun-12)
dep(alarm-6, You-14)
nsubj(ave-18, you-16)
parataxis(alarm-6, ave-18)
xcomp(ave-18, brung-19)
det(I-26, the-20)
compound(I-26, arm-22)
dep(I-26, An-24)
nsubj(one-30, I-26)
cop(one-30, 'm-27)
det(one-30, the-28)
amod(one-30, ruined-29)
ccomp(brung-19, one-30)
dep(one-30, An-32)
advmod(run-40, now-34)
nsubj(run-40, you-35)
aux(run-40, 'll-36)
case(an-38, off-37)
nmod:off(run-40, an-38)
dep(one-30, run-40)
case(fool-44, With-41)
det(fool-44, some-42)
amod(fool-44, new-43)
nmod:with(ave-18, fool-44)
case(tow-46, in-45)
nmod:in(fool-44, tow-46)

(ROOT
  (SQ
    (VP (VB Your) (`` `)
      (NP (NN eart)))
    (. ?)))

root(ROOT-0, Your-1)
dobj(Your-1, eart-3)

(ROOT
  (S
    (NP (PRP You))
    (`` `)
    (VP (VBP ave) (RB n't)
      (VP (VB none)))
    (: ...) (. .)))

nsubj(ave-3, You-1)
root(ROOT-0, ave-3)
neg(ave-3, n't-4)
dep(ave-3, none-5)

(ROOT
  (S
    (FRAG
      (INTJ (UH Ah))
      (, ,)
      (NP (NNP Gawd)))
    (, ,)
    (NP (PRP I))
    (VP (VBP love)
      (NP (PRP you))
      (ADVP (RB so)))
    (. !)))

discourse(Gawd-3, Ah-1)
dep(love-6, Gawd-3)
nsubj(love-6, I-5)
root(ROOT-0, love-6)
dobj(love-6, you-7)
advmod(love-6, so-8)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (DT a) (NN man))
          (VP (VBZ is)
            (ADJP (JJ tired)
              (SBAR
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (ADJP (JJ naught)))))))))
      (VP (MD will)
        (VP (VB bind) (`` `)
          (NP (NN im)))))
    (: ;)
    (S
      (S
        (NP (NNP All) (POS '))
        (X
          (X (SYM e))
          (NP
            (NP (NN solemn))
            (SBAR
              (S
                (VP (VBD promised) (`` ')
                  (X (SYM e))))))))
      (VP (MD will)
        (VP (VB shove)
          (VP (VBN be'ind) (`` `)
            (ADVP (RB im))))))
    (. .)))

advmod(tired-5, When-1)
det(man-3, a-2)
nsubj(tired-5, man-3)
cop(tired-5, is-4)
advcl(bind-10, tired-5)
expl(is-7, there-6)
ccomp(tired-5, is-7)
xcomp(is-7, naught-8)
aux(bind-10, will-9)
root(ROOT-0, bind-10)
dobj(bind-10, im-12)
csubj(shove-22, All-14)
case(All-14, '-15)
dep(solemn-17, e-16)
dep(All-14, solemn-17)
acl:relcl(solemn-17, promised-18)
dep(promised-18, e-20)
aux(shove-22, will-21)
parataxis(bind-10, shove-22)
dep(shove-22, be'ind-23)
advmod(be'ind-23, im-25)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP
          (NP
            (NP (DT the) (JJ good) (NN o) (POS '))
            (NN prayin))
          ('' ')
          (PP (IN for)
            (NP (DT The) (NN Wrath)))
          (PP (TO to)
            (NP (NN strike) (`` `) (NN im))))
        (PRN (-LRB- -LRB-)
          (NP (NNP Mary))
          (, ,)
          (NP (NN pity) (NNS women))
          (. !) (-RRB- -RRB-))))))

root(ROOT-0, What-1)
cop(What-1, 's-2)
det(o-5, the-3)
amod(o-5, good-4)
nmod:poss(prayin-7, o-5)
case(o-5, '-6)
nsubj(What-1, prayin-7)
case(Wrath-11, for-9)
det(Wrath-11, The-10)
nmod:for(prayin-7, Wrath-11)
case(im-15, to-12)
compound(im-15, strike-13)
nmod:to(prayin-7, im-15)
dep(prayin-7, Mary-17)
compound(women-20, pity-19)
dep(Mary-17, women-20)

(ROOT
  (PRN (, ,)
    (S
      (ADVP (WRB when))
      (NP (DT the) (NN rest))
      (VP (VBP are)
        (NP
          (NP (JJ like))
          (`` `)
          (NP (NNP im) (. ?)))))))

advmod(like-6, when-2)
det(rest-4, the-3)
nsubj(like-6, rest-4)
cop(like-6, are-5)
root(ROOT-0, like-6)
dep(like-6, im-8)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (`` `) (VB ope)
        (PP (IN for)
          (NP
            (NP
              (NP (PRP me))
              (ADVP (CC or)))
            (: --)
            (NP (PRP it))))))
    (. ?)))

nsubj(ope-3, What-1)
root(ROOT-0, ope-3)
case(me-5, for-4)
nmod:for(ope-3, me-5)
advmod(me-5, or-6)
dep(me-5, it-8)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (VP (VBN left)
        (PP (IN for)
          (NP (PRP us)))
        (S
          (VP (TO to)
            (VP (VB do))))))
    (. ?)))

nsubjpass(left-3, What-1)
nsubj:xsubj(do-7, What-1)
auxpass(left-3, 's-2)
root(ROOT-0, left-3)
case(us-5, for-4)
nmod:for(left-3, us-5)
mark(do-7, to-6)
xcomp(left-3, do-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBD walked)
          (PP (IN with)
            (NP
              (NP (NNS men))
              (NP (DT a) (NN bit)))))))
    (, ,)
    (CC But)
    (S
      (NP (DT this))
      (: --)
      (ADVP (CC but))
      (NP (DT this))
      (VP (VBZ is)
        (NP (PRP you))))
    (. .)))

nsubj(walked-3, I-1)
aux(walked-3, 've-2)
root(ROOT-0, walked-3)
case(men-5, with-4)
nmod:with(walked-3, men-5)
det(bit-7, a-6)
dep(men-5, bit-7)
cc(walked-3, But-9)
nsubj(you-15, this-10)
advmod(you-15, but-12)
nsubj(you-15, this-13)
cop(you-15, is-14)
conj:but(walked-3, you-15)

(ROOT
  (S (RB So)
    (VP (`` `) (VB elp)
      (S
        (NP (PRP me))
        (VP (VB Christ) (, ,)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (JJ true)))))))
    (. !)))

advmod(elp-3, So-1)
root(ROOT-0, elp-3)
nsubj(Christ-5, me-4)
ccomp(elp-3, Christ-5)
nsubj(true-9, it-7)
cop(true-9, 's-8)
ccomp(Christ-5, true-9)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (MD can)
      (NP (PRP I))
      (VP (`` `) (VB ide)
        (ADVP (CC or))
        (S
          (VP (VB go)))))
    (. ?)))

advmod(ide-5, Where-1)
aux(ide-5, can-2)
nsubj(ide-5, I-3)
root(ROOT-0, ide-5)
advmod(ide-5, or-6)
ccomp(ide-5, go-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBZ coward)
      (ADVP (IN through)
        (CC and)
        (IN through)))
    (. !)))

nsubj(coward-2, You-1)
root(ROOT-0, coward-2)
case(and-4, through-3)
advmod(coward-2, and-4)
case(and-4, through-5)

(ROOT
  (S (: ...)
    (S
      (S
        (INTJ (UH Ah))
        (, ,)
        (VP (VB Gawd)))
      (, ,)
      (NP (PRP I))
      (VP (VBP love)
        (NP (PRP you))
        (ADVP (RB so))))
    (. !)))

discourse(Gawd-4, Ah-2)
ccomp(love-7, Gawd-4)
nsubj(love-7, I-6)
root(ROOT-0, love-7)
dobj(love-7, you-8)
advmod(love-7, so-9)

(ROOT
  (S
    (NP
      (NP (PDT All) (DT the) (JJR more))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP give)
            (NP (PRP 'em))
            (NP
              (NP (DT the) (JJR less))
              (SBAR
                (S
                  (VP (VBP are)
                    (NP
                      (NP (PRP they))
                      (PP (IN for)
                        (NP
                          (NP (NN givin))
                          ('' ') (: --)
                          (NP
                            (NP (NN Love))
                            (SBAR
                              (S
                                (VP (VBZ lies)
                                  (ADJP (JJ dead))))))
                          (, ,)))))))))))
      (, an) ('' '))
    (NP (PRP you))
    (VP (MD can) (RB not)
      (VP (VB kiss) (`` `)
        (NP (NN im) (NN livin))
        ('' ')))
    (. .)))

det:predet(more-3, All-1)
det(more-3, the-2)
nsubj(kiss-24, more-3)
nsubj(give-5, you-4)
acl:relcl(more-3, give-5)
iobj(give-5, 'em-6)
det(less-8, the-7)
dobj(give-5, less-8)
cop(they-10, are-9)
acl:relcl(less-8, they-10)
case(givin-12, for-11)
nmod:for(they-10, givin-12)
dep(givin-12, Love-15)
acl:relcl(Love-15, lies-16)
xcomp(lies-16, dead-17)
nsubj(kiss-24, you-21)
aux(kiss-24, can-22)
neg(kiss-24, not-23)
root(ROOT-0, kiss-24)
compound(livin-27, im-26)
dobj(kiss-24, livin-27)

(ROOT
  (SINV
    (PP (IN Down)
      (NP
        (NP (DT the) (NN road) (POS '))
        (NN e)))
    (VP (VBD led)
      (SBAR
        (S
          (NP (PRP you))
          (ADVP (RB there))
          (VP (VBZ is)))))
    (NP
      (NP (DT no) (NN returnin) ('' '))
      (PRN (-LRB- -LRB-)
        (NP (NNP Mary))
        (, ,)
        (NP (NN pity) (NNS women))
        (. !) (-RRB- -RRB-)))))

case(e-5, Down-1)
det(road-3, the-2)
nmod:poss(e-5, road-3)
case(road-3, '-4)
nmod:down(led-6, e-5)
root(ROOT-0, led-6)
nsubj(is-9, you-7)
advmod(is-9, there-8)
ccomp(led-6, is-9)
neg(returnin-11, no-10)
nsubj(led-6, returnin-11)
dep(returnin-11, Mary-14)
compound(women-17, pity-16)
dep(Mary-14, women-17)

(ROOT
  (S
    (NP
      (PRN (, ,)
        (PP (CC but)
          (NP (PRP you)))))
    (VP (VBP 're)
      (ADJP (JJ late)
        (PP (IN in)
          (NP (NN learnin) (POS ')))))
    (. !)))

case(you-3, but-2)
nsubj(late-5, you-3)
cop(late-5, 're-4)
root(ROOT-0, late-5)
case(learnin-7, in-6)
nmod:'(late-5, learnin-7)
case(learnin-7, '-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'd)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB treat)
              (S
                (NP (PRP me))
                (ADJP (JJ fair))))))))
    (. ?)))

nsubj(like-3, You-1)
nsubj:xsubj(treat-5, You-1)
aux(like-3, 'd-2)
root(ROOT-0, like-3)
mark(treat-5, to-4)
xcomp(like-3, treat-5)
nsubj(fair-7, me-6)
xcomp(treat-5, fair-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't) (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP we))
          (VP (VBP 're)
            (ADJP (JJ pore))))))
    (. ?)))

nsubj(ca-2, You-1)
root(ROOT-0, ca-2)
neg(ca-2, n't-3)
mark(pore-8, because-5)
nsubj(pore-8, we-6)
cop(pore-8, 're-7)
advcl(ca-2, pore-8)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD 'd)
      (VP (VB starve)))
    (. ?)))

nsubj(starve-3, We-1)
aux(starve-3, 'd-2)
root(ROOT-0, starve-3)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP I))
      (VP (VB care))
      (. !))))

dobj(care-4, What-1)
aux(care-4, do-2)
nsubj(care-4, I-3)
root(ROOT-0, care-4)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD might)))
    (, ,)
    (CC but)
    (S
      (ADVP (RB _))
      (NP (DT this) (NN _))
      (VP (VBZ is)
        (VP (NN shore))))
    (. !)))

nsubj(might-2, We-1)
root(ROOT-0, might-2)
cc(might-2, but-4)
advmod(shore-9, _-5)
det(_-7, this-6)
nsubj(shore-9, _-7)
aux(shore-9, is-8)
conj:but(might-2, shore-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (NP
        (NP (DT the) (NN name))
        (: --)
        (NP (DT no)
          (ADJP
            (ADJP (JJR more))
            (PRN (: --)
              (NP
                (NP (DT The) (NN name))
                (, ,)
                (NP (DT an)))))
          ('' ') (NNS lines)))
      (S
        (VP (TO to)
          (VP (VB show) (, ,)
            (SBAR
              (S
                (NP (NNP An) (POS '))
                (VP (RB not) (TO to)
                  (VP (VB be)
                    (NP (DT an) (`` `) (NN ore))))))))))
    (: ...) (. .)))

nsubj(want-2, I-1)
root(ROOT-0, want-2)
det(name-4, the-3)
dobj(want-2, name-4)
neg(lines-14, no-6)
amod(lines-14, more-7)
det(name-10, The-9)
dep(more-7, name-10)
appos(name-10, an-12)
dep(name-4, lines-14)
mark(show-16, to-15)
advcl(want-2, show-16)
nsubj(ore-25, An-18)
case(An-18, '-19)
neg(ore-25, not-20)
mark(ore-25, to-21)
cop(ore-25, be-22)
det(ore-25, an-23)
ccomp(show-16, ore-25)

(ROOT
  (S
    (FRAG
      (INTJ (UH Ah))
      (, ,)
      (NP (NNP Gawd)))
    (, ,)
    (NP (PRP I))
    (VP (VBP love)
      (NP (PRP you))
      (ADVP (RB so)))
    (. !)))

discourse(Gawd-3, Ah-1)
dep(love-6, Gawd-3)
nsubj(love-6, I-5)
root(ROOT-0, love-6)
dobj(love-6, you-7)
advmod(love-6, so-8)

(ROOT
  (SBAR
    (WHNP (WP What))
    (S
      (VP (VBZ 's)
        (NP
          (NP
            (NP (DT the) (JJ good)
              (NP (NNP o) (POS '))
              (NN pleadin) ('' '))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP
                  (NP (DT the) (NN mother))
                  (NP (DT that)))
                (VP (VBD bore)
                  (NP (PRP you))))))
          (PRN (-LRB- -LRB-)
            (NP (NNP Mary))
            (, ,)
            (NP (NN pity) (NNS women))
            (. !) (-RRB- -RRB-)))))))

nsubj(pleadin-7, What-1)
cop(pleadin-7, 's-2)
det(pleadin-7, the-3)
amod(pleadin-7, good-4)
nmod:poss(pleadin-7, o-5)
case(o-5, '-6)
root(ROOT-0, pleadin-7)
dep(mother-12, pleadin-7)
advmod(bore-14, when-10)
det(mother-12, the-11)
nsubj(bore-14, mother-12)
ref(pleadin-7, that-13)
acl:relcl(pleadin-7, bore-14)
dobj(bore-14, you-15)
dep(pleadin-7, Mary-17)
compound(women-20, pity-19)
dep(Mary-17, women-20)

(ROOT
  (SQ (VBP knew)
    (NP (PRP it))
    (PP
      (ADVP (DT all))
      (IN before)
      (NP (PRP you)))
    (. ?)))

root(ROOT-0, knew-1)
nsubj(knew-1, it-2)
advmod(you-5, all-3)
case(you-5, before-4)
nmod:before(knew-1, you-5)

(ROOT
  (FRAG
    (NP (NNP Sleep))
    (PP (IN on) (`` `)
      (S
        (VP (VBZ is)
          (NP
            (NP (NNS promises))
            (, an) ('' ')
            (SBAR
              (S
                (VP (VBP wake)
                  (PP (TO to)
                    (NP
                      (NP (PRP$ your) (NN sorrow))
                      (PRN (-LRB- -LRB-)
                        (NP (NNP Mary))
                        (, ,)
                        (NP (NN pity) (NNS women))
                        (. !) (-RRB- -RRB-)))))))))))))

root(ROOT-0, Sleep-1)
case(promises-5, on-2)
cop(promises-5, is-4)
dep(Sleep-1, promises-5)
acl:relcl(promises-5, wake-8)
case(sorrow-11, to-9)
nmod:poss(sorrow-11, your-10)
nmod:to(wake-8, sorrow-11)
dep(sorrow-11, Mary-13)
compound(women-16, pity-15)
dep(Mary-13, women-16)

(ROOT
  (S
    (NP
      (PRN (, ,)
        (PP (IN for)
          (NP (PRP we)))))
    (VP (VBP sail)
      (NP (NN to-morrow)))
    (. !)))

case(we-3, for-2)
nsubj(sail-4, we-3)
root(ROOT-0, sail-4)
dobj(sail-4, to-morrow-5)

(ROOT
  (S
    (S
      (PP (IN FOR)
        (NP (NNP TO) (NNP ADMIRE)))
      (NP (DT The) (NNP Injian) (NNP Ocean))
      (VP (VBZ sets)
        (NP (DT an)
          (S
            (NP (POS '))
            (VP (VBZ smiles)
              (ADJP
                (ADJP (RB So) (JJ sof) ('' '))
                (, ,)
                (ADJP (RB so) (JJ bright))
                (, ,)
                (ADJP (RB so) (JJ bloomin) ('' '))
                (NP (JJ blue))))))))
    (: ;)
    (S
      (NP (EX There))
      (VP (VBP are) (RB n't)
        (NP
          (NP (DT a) (NN wave))
          (PP (IN for)
            (NP (NNS miles)))
          (, an) ('' ')
          (NP
            (NP (NNS miles))
            (NP (NNP Excep)))
          ('' ')
          (NP
            (NP (DT the) (NN jiggle))
            (PP (IN from)
              (NP (DT the) (NN screw)))))))
    (. .)))

case(ADMIRE-3, FOR-1)
compound(ADMIRE-3, TO-2)
nmod:for(sets-7, ADMIRE-3)
det(Ocean-6, The-4)
compound(Ocean-6, Injian-5)
nsubj(sets-7, Ocean-6)
root(ROOT-0, sets-7)
dobj(sets-7, an-8)
nsubj(smiles-10, '-9)
dep(an-8, smiles-10)
advmod(sof-12, So-11)
xcomp(smiles-10, sof-12)
advmod(bright-16, so-15)
dep(sof-12, bright-16)
advmod(bloomin-19, so-18)
dep(sof-12, bloomin-19)
dep(sof-12, blue-21)
expl(are-24, There-23)
parataxis(sets-7, are-24)
neg(are-24, n't-25)
det(wave-27, a-26)
nsubj(are-24, wave-27)
case(miles-29, for-28)
nmod:for(wave-27, miles-29)
dep(wave-27, miles-32)
appos(miles-32, Excep-33)
det(jiggle-36, the-35)
dep(wave-27, jiggle-36)
case(screw-39, from-37)
det(screw-39, the-38)
nmod:from(jiggle-36, screw-39)

(ROOT
  (S
    (S
      (NP (DT The) (NN ship))
      (VP (VBZ is)
        (NP (NN swep) ('' '))))
    (, ,)
    (S
      (NP (DT the) (NN day))
      (VP (VBZ is)
        (VP (VBN done))))
    (, ,)
    (S
      (NP (DT The) (NN bugle))
      (VP (VBZ 's)
        (VP (VBN gone)
          (PP (IN for)
            (NP
              (NP (NN smoke)
                (CC and)
                (NN play))
              (: ;)
              (NP
                (NP (NNP An) (POS '))
                (JJ black) (NN agin) ('' '))))
          (NP
            (NP
              (NP (DT the) (NN settin) (POS '))
              (NN sun))
            (SBAR
              (S
                (NP (DT The) (NNP Lascar))
                (VP (VBZ sings))))))))
    (, ,) ('' '')
    (S
      (NP (NNP _) (NNP Hum))
      (ADVP (RB deckty))
      (VP (VBP hai)))
    (. !)))

det(ship-2, The-1)
nsubj(swep-4, ship-2)
cop(swep-4, is-3)
root(ROOT-0, swep-4)
det(day-8, the-7)
nsubjpass(done-10, day-8)
auxpass(done-10, is-9)
parataxis(swep-4, done-10)
det(bugle-13, The-12)
nsubjpass(gone-15, bugle-13)
auxpass(gone-15, 's-14)
parataxis(swep-4, gone-15)
case(smoke-17, for-16)
nmod:for(gone-15, smoke-17)
cc(smoke-17, and-18)
nmod:for(gone-15, play-19)
conj:and(smoke-17, play-19)
nmod:poss(agin-24, An-21)
case(An-21, '-22)
amod(agin-24, black-23)
dep(smoke-17, agin-24)
det(settin-27, the-26)
nmod:poss(sun-29, settin-27)
case(settin-27, '-28)
dobj(gone-15, sun-29)
det(Lascar-31, The-30)
nsubj(sings-32, Lascar-31)
acl:relcl(sun-29, sings-32)
compound(Hum-36, _-35)
nsubj(hai-38, Hum-36)
advmod(hai-38, deckty-37)
parataxis(swep-4, hai-38)

(ROOT
  (S
    (S
      (VP (VBG _) ('' '')
        (PP (IN For)
          (PP (TO to)
            (NP (NN admire) (DT an))))
        ('' ')
        (PP (IN for)
          (S
            (S
              (VP (TO to)
                (VP (VB see))))
            (, ,)
            (SBAR (IN For)
              (S
                (VP (TO to)
                  (VP (VB be'old)
                    (S
                      (NP (DT this) (NN world))
                      (ADJP (RB so) (JJ wide)))))))))))
    (: --)
    (S
      (S
        (NP (PRP It))
        (ADVP (RB never))
        (VP (VBN done)
          (S
            (ADJP (RB no) (JJ good)))
          (PP (TO to)
            (NP (PRP me)))))
      (, ,)
      (CC But)
      (S
        (NP (PRP I))
        (VP (MD ca) (RB n't)
          (VP (VB drop)
            (NP (PRP it))
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBD tried))))))))
    (. !)))

root(ROOT-0, _-1)
case(admire-5, For-3)
case(admire-5, to-4)
nmod:to(_-1, admire-5)
dep(admire-5, an-6)
mark(see-10, for-8)
mark(see-10, to-9)
advcl(_-1, see-10)
mark(be'old-14, For-12)
mark(be'old-14, to-13)
dep(see-10, be'old-14)
det(world-16, this-15)
nsubj(wide-18, world-16)
advmod(wide-18, so-17)
xcomp(be'old-14, wide-18)
nsubj(done-22, It-20)
neg(done-22, never-21)
parataxis(_-1, done-22)
neg(good-24, no-23)
xcomp(done-22, good-24)
case(me-26, to-25)
nmod:to(done-22, me-26)
cc(done-22, But-28)
nsubj(drop-32, I-29)
aux(drop-32, ca-30)
neg(drop-32, n't-31)
parataxis(_-1, drop-32)
conj:but(done-22, drop-32)
dobj(drop-32, it-33)
mark(tried-36, if-34)
nsubj(tried-36, I-35)
advcl(drop-32, tried-36)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP see)
        (NP
          (NP (DT the) (NNS sergeants) (NN pitchin) (POS '))
          (NNS quoits))))
    (, ,)
    (S
      (NP (PRP I))
      (`` `)
      (NP
        (NP (NN ear))
        (NP (DT the) (NNS women) (NN laugh))
        (, an) ('' '))
      (VP (VBP talk)))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBD spy)
        (PP (IN upon)
          (NP (DT the) (NN quarter-deck)))
        (NP
          (NP (DT The) (JJ orficers) (DT an))
          ('' ')
          (SBAR
            (S
              (NP (NNS lydies))
              (VP (VBP walk)))))))
    (. .)))

nsubj(see-2, I-1)
root(ROOT-0, see-2)
det(pitchin-5, the-3)
compound(pitchin-5, sergeants-4)
nmod:poss(quoits-7, pitchin-5)
case(pitchin-5, '-6)
dobj(see-2, quoits-7)
nsubj(talk-17, I-9)
nsubj(talk-17, ear-11)
det(laugh-14, the-12)
compound(laugh-14, women-13)
dep(ear-11, laugh-14)
parataxis(see-2, talk-17)
nsubj(spy-20, I-19)
parataxis(see-2, spy-20)
case(quarter-deck-23, upon-21)
det(quarter-deck-23, the-22)
nmod:upon(spy-20, quarter-deck-23)
det(orficers-25, The-24)
dobj(spy-20, orficers-25)
dep(orficers-25, an-26)
nsubj(walk-29, lydies-28)
acl:relcl(orficers-25, walk-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBZ thinks)
        (PP (IN about)
          (NP
            (NP (DT the) (NNS things))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was))))))))
    (, ,)
    (NP (NNP An) (POS '))
    (VP (VBZ leans)
      (NP (DT an)
        (S
          (NP (POS '))
          (VP (VBZ looks)
            (VP (VB acrost)
              (NP (DT the) (NN sea))))))
      (, ,)
      (PP (IN Till)
        (NP
          (NP (NN spite))
          (PP (IN of)
            (NP
              (NP (PDT all) (DT the) (JJ crowded) (NN ship))
              (SBAR
                (S
                  (NP (EX There))
                  (VP (VBZ 's)
                    (NP
                      (NP
                        (NP (DT no) (NN one) (NN lef) (POS '))
                        (NN alive))
                      (PP (CC but)
                        (NP (PRP me))))))))))))
    (. .)))

nsubj(thinks-2, I-1)
ccomp(leans-11, thinks-2)
case(things-5, about-3)
det(things-5, the-4)
nmod:about(thinks-2, things-5)
nsubj(was-7, things-5)
ref(things-5, that-6)
acl:relcl(things-5, was-7)
nsubj(leans-11, An-9)
case(An-9, '-10)
root(ROOT-0, leans-11)
dobj(leans-11, an-12)
nsubj(looks-14, '-13)
dep(an-12, looks-14)
xcomp(looks-14, acrost-15)
det(sea-17, the-16)
dobj(acrost-15, sea-17)
case(spite-20, Till-19)
nmod:till(leans-11, spite-20)
case(ship-25, of-21)
det:predet(ship-25, all-22)
det(ship-25, the-23)
amod(ship-25, crowded-24)
nmod:of(spite-20, ship-25)
expl('s-27, There-26)
acl:relcl(ship-25, 's-27)
neg(lef-30, no-28)
compound(lef-30, one-29)
nmod:poss(alive-32, lef-30)
case(lef-30, '-31)
nsubj('s-27, alive-32)
case(me-34, but-33)
nmod:but(alive-32, me-34)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS things))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD was)
            (SBAR
              (WHNP (WDT which))
              (S
                (S
                  (NP (PRP I))
                  (`` `)
                  (VP
                    (ADVP (RB ave))
                    (VBN seen)))
                (, ,)
                (S
                  (PP (IN In)
                    (NP
                      (NP
                        (NP (NN barrick))
                        (, ,)
                        (NP (NN camp))
                        (, ,))
                      (, an) ('' ')
                      (NP
                        (NP (NN action))
                        (ADVP (RB too)))))
                  (, ,)
                  (NP (PRP I))
                  (VP (VBZ tells)
                    (NP (PRP them))
                    (PRT (RP over))
                    (PP (IN by)
                      (NP (PRP myself)))))
                (, ,)
                (S
                  (NP (NNP An) (POS '))
                  (ADVP (RB sometimes))
                  (VP (VBZ wonders)
                    (SBAR (IN if)
                      (S
                        (NP (PRP they))
                        (VP (VBP 're)
                          (ADJP (JJ true)))))))
                (: ;)
                (S
                  (SBAR (IN For)
                    (S
                      (S
                        (NP (PRP they))
                        (VP (VBD was)
                          (ADJP (JJ odd))
                          (PRN (: --)
                            (FRAG
                              (ADJP (RBS most) (JJ awful))
                              (ADJP (JJ odd)))
                            (: --))))
                      (CC But)
                      (S
                        (ADVP (PDT all) (DT the) (JJ same))
                        (ADVP (RB now))
                        (NP (PRP they))
                        (VP (VBP are)
                          (ADJP (JJ o'er))))))
                  (, ,)
                  (NP (EX There))
                  (VP (MD must)
                    (VP (VB be) (`` `)
                      (NP
                        (NP
                          (NP
                            (NP (JJ eaps) (NN o) (POS '))
                            (NN plenty) (JJ such))
                          (, ,)
                          (NP (NNP An) (POS ')))
                        (SBAR (IN if)
                          (S
                            (NP (PRP I))
                            (VP (VB wait)
                              (NP (PRP I)))))))))))))))
    (VP (MD 'll)
      (VP (VB see)
        (NP (DT some) (JJR more))))
    (. .)))

det(things-2, The-1)
nsubj(was-4, things-2)
nsubj(see-72, things-2)
ref(things-2, that-3)
acl:relcl(things-2, was-4)
dep(seen-9, which-5)
nsubj(seen-9, I-6)
advmod(seen-9, ave-8)
dep(was-4, seen-9)
case(barrick-12, In-11)
nmod:in(tells-22, barrick-12)
appos(barrick-12, camp-14)
dep(barrick-12, action-18)
advmod(action-18, too-19)
nsubj(tells-22, I-21)
dep(seen-9, tells-22)
dobj(tells-22, them-23)
compound:prt(tells-22, over-24)
case(myself-26, by-25)
nmod:by(tells-22, myself-26)
nsubj(wonders-31, An-28)
case(An-28, '-29)
advmod(wonders-31, sometimes-30)
dep(seen-9, wonders-31)
mark(true-35, if-32)
nsubj(true-35, they-33)
cop(true-35, 're-34)
advcl(wonders-31, true-35)
mark(odd-40, For-37)
nsubj(odd-40, they-38)
cop(odd-40, was-39)
advcl(plenty-62, odd-40)
advmod(awful-43, most-42)
dep(odd-40, awful-43)
dep(awful-43, odd-44)
cc(odd-40, But-46)
dep(same-49, all-47)
det(same-49, the-48)
advmod(o'er-53, same-49)
advmod(o'er-53, now-50)
nsubj(o'er-53, they-51)
cop(o'er-53, are-52)
conj:but(odd-40, o'er-53)
advcl(plenty-62, o'er-53)
expl(plenty-62, There-55)
aux(plenty-62, must-56)
cop(plenty-62, be-57)
amod(o-60, eaps-59)
nmod:poss(plenty-62, o-60)
case(o-60, '-61)
parataxis(seen-9, plenty-62)
amod(plenty-62, such-63)
appos(plenty-62, An-65)
case(An-65, '-66)
mark(wait-69, if-67)
nsubj(wait-69, I-68)
dep(plenty-62, wait-69)
dobj(wait-69, I-70)
aux(see-72, 'll-71)
root(ROOT-0, see-72)
det(more-74, some-73)
dobj(see-72, more-74)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (NP (PRP I))
      (`` `)
      (VP (VBP ave)
        (SBAR
          (S
            (S
              (VP (VBN come)
                (PP (IN upon)
                  (NP
                    (NP (DT the) (NNS books))
                    (, ,)
                    (NP
                      (NP (NNP An) (POS '))
                      (JJ frequent))))))
            (VP (VBD broke)
              (NP (DT a) (NN barrick) (NN rule)))))))
    (, ,)
    (NP (NNP An) (POS '))
    (VP (VBD stood)
      (PP (IN beside)
        (NP
          (NP (DT an))
          ('' ')
          (VP (VBN watched)
            (S
              (NP (PRP myself))
              (NP (NNP Be'avin)))
            ('' ')
            (PP (IN like)
              (NP
                (NP (DT a) (NN bloomin) (POS '))
                (NN fool)))))))
    (. .)))

discourse(ave-5, Oh-1)
nsubj(ave-5, I-3)
ccomp(stood-21, ave-5)
csubj(broke-14, come-6)
case(books-9, upon-7)
det(books-9, the-8)
nmod:upon(come-6, books-9)
appos(books-9, An-11)
case(An-11, '-12)
amod(An-11, frequent-13)
ccomp(ave-5, broke-14)
det(rule-17, a-15)
compound(rule-17, barrick-16)
dobj(broke-14, rule-17)
nsubj(stood-21, An-19)
case(An-19, '-20)
root(ROOT-0, stood-21)
case(an-23, beside-22)
nmod:beside(stood-21, an-23)
acl(an-23, watched-25)
nsubj(Be'avin-27, myself-26)
xcomp(watched-25, Be'avin-27)
case(fool-33, like-29)
det(bloomin-31, a-30)
nmod:poss(fool-33, bloomin-31)
case(bloomin-31, '-32)
nmod:like(watched-25, fool-33)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD paid)
        (NP (PRP$ my) (NN price))
        (PP (IN for)
          (NP
            (NP (NN findin) (POS '))
            (NN out)))))
    (, ,)
    (CC Nor)
    (S
      (S
        (S
          (VP
            (ADVP (RB never))
            (VBN grutched)
            (NP (DT the) (NN price))))
        (NP (PRP I))
        (VP (VBD paid)))
      (, ,)
      (CC But)
      (S
        (S
          (VP (VBN sat)
            (PP (IN in)
              (NP (NNP Clink)))
            (PP (IN without)
              (NP
                (NP (PRP$ my) (NNS boots))
                (, ,)
                (NP
                  (NP (NNP Admirin) (POS '))
                  (`` `) (JJ ow) (DT the) (NN world))))))
        (VP (VBD was)
          (VP (VBN made)))))
    (. .)))

nsubj(paid-2, I-1)
root(ROOT-0, paid-2)
nmod:poss(price-4, my-3)
dobj(paid-2, price-4)
case(out-8, for-5)
nmod:poss(out-8, findin-6)
case(findin-6, '-7)
nmod:for(paid-2, out-8)
cc(paid-2, Nor-10)
neg(grutched-12, never-11)
dep(paid-16, grutched-12)
det(price-14, the-13)
dobj(grutched-12, price-14)
nsubj(paid-16, I-15)
conj:nor(paid-2, paid-16)
cc(paid-16, But-18)
csubjpass(made-33, sat-19)
case(Clink-21, in-20)
nmod:in(sat-19, Clink-21)
case(boots-24, without-22)
nmod:poss(boots-24, my-23)
nmod:without(sat-19, boots-24)
nmod:poss(world-31, Admirin-26)
case(Admirin-26, '-27)
amod(world-31, ow-29)
det(world-31, the-30)
appos(boots-24, world-31)
auxpass(made-33, was-32)
conj:nor(paid-2, made-33)
conj:but(paid-16, made-33)

(ROOT
  (S
    (S
      (VP (VBN Be'old)
        (NP (DT a) (NN crowd))
        (PP (IN upon)
          (NP (DT the) (NN beam)))))
    (, ,)
    (NP
      (NP (NNP An) (POS '))
      (`` `) (NN umped))
    (VP
      (ADVP (IN above)
        (NP (DT the) (NN sea)))
      (VBZ appears)
      (NP
        (NP (NNP Old) (NNP Aden))
        (, ,)
        (PP (IN like)
          (NP
            (NP (DT a) (NN barrick-stove))
            (SBAR (IN That)
              (S
                (NP (DT no) (NN one))
                (VP (VBZ 's)
                  (VP (VBN lit)
                    (PP (IN for)
                      (NP
                        (NP (NNS years))
                        (, an) ('' ')
                        (NP (NNS years))))))))))))
    (. !)))

advcl(appears-15, Be'old-1)
det(crowd-3, a-2)
dobj(Be'old-1, crowd-3)
case(beam-6, upon-4)
det(beam-6, the-5)
nmod:upon(Be'old-1, beam-6)
nmod:poss(umped-11, An-8)
case(An-8, '-9)
nsubj(appears-15, umped-11)
case(sea-14, above-12)
det(sea-14, the-13)
advmod(appears-15, sea-14)
root(ROOT-0, appears-15)
compound(Aden-17, Old-16)
dobj(appears-15, Aden-17)
case(barrick-stove-21, like-19)
det(barrick-stove-21, a-20)
nmod:like(Aden-17, barrick-stove-21)
mark(lit-26, That-22)
neg(one-24, no-23)
nsubjpass(lit-26, one-24)
auxpass(lit-26, 's-25)
dep(barrick-stove-21, lit-26)
case(years-28, for-27)
nmod:for(lit-26, years-28)
dep(years-28, years-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD passed)
      (PP (IN by)
        (SBAR (IN that)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP I))
                (VP (VBD began))))
            (, ,)
            (NP
              (NP (NNP An) (POS '))
              (NN I))
            (VP (VBP go)
              (SBAR
                (S (`` `)
                  (S
                    (VP (VB ome)
                      (NP
                        (NP (DT the) (NN road))
                        (SBAR
                          (S
                            (NP (PRP I))
                            (VP (VBD came)))))))
                  (, ,)
                  (NP
                    (NP (DT A) (JJ time-expired) (NN soldier-man))
                    (PP (IN With)
                      (NP
                        (NP
                          (NP (CD six) (NNS years) (POS '))
                          (NN service))
                        (PP (TO to)))))
                  (`` `)
                  (VP (VBZ is)
                    (NP (NN name))))))))))
    (. .)))

nsubj(passed-2, I-1)
root(ROOT-0, passed-2)
mark(go-12, by-3)
mark(go-12, that-4)
advmod(began-7, when-5)
nsubj(began-7, I-6)
advcl(go-12, began-7)
nmod:poss(I-11, An-9)
case(An-9, '-10)
nsubj(go-12, I-11)
advcl(passed-2, go-12)
ccomp(name-31, ome-14)
det(road-16, the-15)
dobj(ome-14, road-16)
nsubj(came-18, I-17)
acl:relcl(road-16, came-18)
det(soldier-man-22, A-20)
amod(soldier-man-22, time-expired-21)
nsubj(name-31, soldier-man-22)
case(service-27, With-23)
nummod(years-25, six-24)
nmod:poss(service-27, years-25)
case(years-25, '-26)
nmod:with(soldier-man-22, service-27)
acl(service-27, to-28)
cop(name-31, is-30)
ccomp(go-12, name-31)

(ROOT
  (S
    (NP (PRP$ My) (NN girl))
    (PRN
      (S
        (NP (PRP she))
        (VP (VBD said) (, ,) (`` ``)
          (INTJ (UH Oh))))
      (, ,))
    (VP (VBP stay)
      (PP (IN with)
        (NP (PRP me))))
    (. !) ('' '')))

nmod:poss(girl-2, My-1)
nsubj(stay-9, girl-2)
nsubj(said-4, she-3)
parataxis(stay-9, said-4)
discourse(said-4, Oh-7)
root(ROOT-0, stay-9)
case(me-11, with-10)
nmod:with(stay-9, me-11)

(ROOT
  (S
    (NP (PRP$ My) (NN mother))
    (VP (`` `) (VB eld)
      (S
        (NP (PRP me))
        (VP (TO to) (`` `)
          (VP (VB er)
            (NP (NN breast))))))
    (. .)))

nmod:poss(mother-2, My-1)
nsubj(eld-4, mother-2)
root(ROOT-0, eld-4)
dobj(eld-4, me-5)
nsubj:xsubj(er-8, me-5)
mark(er-8, to-6)
xcomp(eld-4, er-8)
dobj(er-8, breast-9)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 've)
      (ADVP (RB never))
      (VP (VBN written)
        (NP
          (NP (NN none))
          (, ,)
          (NP (DT an)))
        ('' ')
        (SBAR (IN so)
          (S
            (NP (PRP They))
            (VP (MD must) (`` `)
              (VP (VB ave)
                (VP (VBN gone)
                  (PP (IN with)
                    (NP (PDT all) (DT the) (NN rest))))))))
        (: --)
        (PP (IN With)
          (NP
            (NP (PDT all) (DT the) (NN rest))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP I))
                (`` `)
                (NP
                  (NP
                    (NP (NN ave))
                    (VP (VBN seen)
                      (SBAR
                        (S
                          (NP (NNP An) (POS '))
                          (VP (VBD found))))))
                  (, an) ('' ')
                  (NP (JJ known) (DT an)))
                ('' ')
                (VP (VBD met)
                  (PRT (RP along)))))))))
    (. .)))

nsubj(written-4, They-1)
aux(written-4, 've-2)
neg(written-4, never-3)
root(ROOT-0, written-4)
dobj(written-4, none-5)
appos(none-5, an-7)
mark(ave-13, so-9)
nsubj(ave-13, They-10)
aux(ave-13, must-11)
advcl(written-4, ave-13)
dep(ave-13, gone-14)
case(rest-18, with-15)
det:predet(rest-18, all-16)
det(rest-18, the-17)
nmod:with(gone-14, rest-18)
case(rest-23, With-20)
det:predet(rest-23, all-21)
det(rest-23, the-22)
nmod:with(written-4, rest-23)
dobj(met-37, rest-23)
ref(rest-23, which-24)
nsubj(met-37, I-25)
nsubj(met-37, ave-27)
acl(ave-27, seen-28)
nsubj(found-31, An-29)
case(An-29, '-30)
ccomp(seen-28, found-31)
dep(ave-27, known-34)
dep(known-34, an-35)
acl:relcl(rest-23, met-37)
compound:prt(met-37, along-38)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB say)
          (NP (DT the) (NNS things))
          (SBAR
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP feel))))
            (, ,)
            (CC And)
            (SBAR (IN so)
              (S
                (NP (PRP I))
                (VP (VBP sing)
                  (NP
                    (NP (PRP$ my) (NN evenin) (POS '))
                    (NN song)))
                (: :)
                (SBAR (IN For)
                  (S
                    (VP (TO to)
                      (VP (VB admire)
                        (NP (DT an))
                        ('' ')
                        (PP (IN for)
                          (S
                            (S
                              (VP (TO to)
                                (VP (VB see))))
                            (, ,)
                            (SBAR (IN For)
                              (S
                                (VP (TO to)
                                  (VP (VB be'old)
                                    (S
                                      (NP (DT this) (NN world))
                                      (ADJP (RB so) (JJ wide)))))))))))))))))))
    (: --)
    (S
      (S
        (NP (PRP It))
        (ADVP (RB never))
        (VP (VBN done)
          (S
            (ADJP (RB no) (JJ good)))
          (PP (TO to)
            (NP (PRP me)))))
      (, ,)
      (CC But)
      (S
        (NP (PRP I))
        (VP (MD ca) (RB n't)
          (VP (VB drop)
            (NP (PRP it))
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBD tried))))))))
    (. !)))

nsubj(say-4, I-1)
aux(say-4, can-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
det(things-6, the-5)
dobj(say-4, things-6)
nsubj(feel-8, I-7)
advcl(say-4, feel-8)
cc(feel-8, And-10)
mark(sing-13, so-11)
nsubj(sing-13, I-12)
advcl(say-4, sing-13)
conj:and(feel-8, sing-13)
nmod:poss(evenin-15, my-14)
nmod:poss(song-17, evenin-15)
case(evenin-15, '-16)
dobj(sing-13, song-17)
mark(admire-21, For-19)
mark(admire-21, to-20)
parataxis(sing-13, admire-21)
dobj(admire-21, an-22)
mark(see-26, for-24)
mark(see-26, to-25)
advcl(admire-21, see-26)
mark(be'old-30, For-28)
mark(be'old-30, to-29)
dep(see-26, be'old-30)
det(world-32, this-31)
nsubj(wide-34, world-32)
advmod(wide-34, so-33)
xcomp(be'old-30, wide-34)
nsubj(done-38, It-36)
neg(done-38, never-37)
parataxis(say-4, done-38)
neg(good-40, no-39)
xcomp(done-38, good-40)
case(me-42, to-41)
nmod:to(done-38, me-42)
cc(done-38, But-44)
nsubj(drop-48, I-45)
aux(drop-48, ca-46)
neg(drop-48, n't-47)
parataxis(say-4, drop-48)
conj:but(done-38, drop-48)
dobj(drop-48, it-49)
mark(tried-52, if-50)
nsubj(tried-52, I-51)
advcl(drop-48, tried-52)

(ROOT
  (S
    (NP
      (NP (NNP L'ENVOI))
      (SBAR
        (WHADVP (WRB When))
        (S
          (S
            (NP
              (NP (NNP Earth) (POS 's))
              (JJ last) (NN picture))
            (VP (VBZ is)
              (VP (VBN painted))))
          (CC and)
          (S
            (NP (DT the) (NNS tubes))
            (VP
              (VP (VBP are)
                (ADJP (JJ twisted)))
              (CC and)
              (VP (VBD dried)))))))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (S
            (NP (DT the) (JJS oldest) (NNS colours))
            (VP (VBP have)
              (VP (VBN faded))))
          (, ,)
          (CC and)
          (S
            (NP (DT the) (JJS youngest) (NN critic))
            (VP (VBZ has)
              (VP (VBN died))))))
      (, ,)
      (NP (PRP We))
      (VP (MD shall)
        (VP (VB rest))))
    (, ,)
    (CC and)
    (PRN (, ,)
      (ADVP (RB faith))
      (, ,))
    (S
      (NP (PRP we))
      (VP (MD shall)
        (VP (VB need)
          (NP (PRP it))
          (: --)
          (S
            (VP (VB lie)
              (PRT (RP down))
              (PP (IN for)
                (NP
                  (NP (DT an) (JJ -RSB-) (NN aeon))
                  (CC or)
                  (NP (CD two))))))
          (, ,)
          (PP (IN Till)
            (NP
              (NP (DT the) (NN Master))
              (PP (IN of)
                (NP
                  (NP (DT All))
                  (SBAR
                    (S
                      (NP (NNP Good) (NNP Workmen))
                      (VP (MD shall)
                        (VP (VB put)
                          (S
                            (NP (PRP us))
                            (VP (TO to)
                              (VP (VB work)
                                (ADVP (RB anew))))))))))))))))
    (. !)))

dep(rest-33, L'ENVOI-1)
advmod(painted-8, When-2)
nmod:poss(picture-6, Earth-3)
case(Earth-3, 's-4)
amod(picture-6, last-5)
nsubjpass(painted-8, picture-6)
auxpass(painted-8, is-7)
acl:relcl(L'ENVOI-1, painted-8)
cc(painted-8, and-9)
det(tubes-11, the-10)
nsubj(twisted-13, tubes-11)
nsubj(dried-15, tubes-11)
cop(twisted-13, are-12)
acl:relcl(L'ENVOI-1, twisted-13)
conj:and(painted-8, twisted-13)
cc(twisted-13, and-14)
conj:and(painted-8, dried-15)
conj:and(twisted-13, dried-15)
advmod(faded-22, When-17)
det(colours-20, the-18)
amod(colours-20, oldest-19)
nsubj(faded-22, colours-20)
aux(faded-22, have-21)
advcl(rest-33, faded-22)
cc(faded-22, and-24)
det(critic-27, the-25)
amod(critic-27, youngest-26)
nsubj(died-29, critic-27)
aux(died-29, has-28)
conj:and(faded-22, died-29)
advcl(rest-33, died-29)
nsubj(rest-33, We-31)
aux(rest-33, shall-32)
root(ROOT-0, rest-33)
cc(rest-33, and-35)
dep(rest-33, faith-37)
nsubj(need-41, we-39)
aux(need-41, shall-40)
ccomp(rest-33, need-41)
dobj(need-41, it-42)
parataxis(need-41, lie-44)
compound:prt(lie-44, down-45)
case(aeon-49, for-46)
det(aeon-49, an-47)
amod(aeon-49, -RSB--48)
nmod:for(lie-44, aeon-49)
cc(aeon-49, or-50)
nmod:for(lie-44, two-51)
conj:or(aeon-49, two-51)
case(Master-55, Till-53)
det(Master-55, the-54)
nmod:till(need-41, Master-55)
case(All-57, of-56)
nmod:of(Master-55, All-57)
compound(Workmen-59, Good-58)
nsubj(put-61, Workmen-59)
aux(put-61, shall-60)
acl:relcl(All-57, put-61)
dobj(put-61, us-62)
nsubj:xsubj(work-64, us-62)
mark(work-64, to-63)
xcomp(put-61, work-64)
advmod(work-64, anew-65)

(ROOT
  (S
    (S (CC And)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD were)
              (ADJP (JJ good))))))
      (VP (MD shall)
        (VP (VB be)
          (ADJP (JJ happy)))))
    (: :)
    (S
      (NP (PRP they))
      (VP (MD shall)
        (VP (VB sit)
          (PP (IN in)
            (NP (DT a) (JJ golden) (NN chair))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (MD shall)
        (VP (VB splash)
          (PP (IN at)
            (NP (DT a) (JJ ten-league) (NN canvas)))
          (PP (IN with)
            (NP
              (NP (NNS brushes))
              (PP (IN of)
                (NP
                  (NP (NNS comets) (POS '))
                  (NN hair))))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (MD shall)
        (VP (VB find)
          (NP (JJ real) (NNS saints))
          (S
            (VP (TO to)
              (VP (VB draw)
                (PP (IN from)
                  (PRN (: --)
                    (NP
                      (NP (NNP Magdalene))
                      (, ,)
                      (NP (NNP Peter))
                      (, ,)
                      (CC and)
                      (NP (NNP Paul)))))))))))
    (: ;)
    (S
      (NP (PRP They))
      (VP (MD shall)
        (VP
          (VP (VB work)
            (PP (IN for)
              (NP
                (NP (DT an) (NN age))
                (PP (IN at)
                  (NP (DT a) (VBG sitting))))))
          (CC and)
          (ADVP (RB never))
          (VP (VB be)
            (ADJP (JJ tired))
            (ADVP (IN at) (DT all))))))
    (. !)))

cc(happy-8, And-1)
nsubj(good-5, those-2)
nsubj(happy-8, those-2)
ref(those-2, that-3)
cop(good-5, were-4)
acl:relcl(those-2, good-5)
aux(happy-8, shall-6)
cop(happy-8, be-7)
root(ROOT-0, happy-8)
nsubj(sit-12, they-10)
aux(sit-12, shall-11)
parataxis(happy-8, sit-12)
case(chair-16, in-13)
det(chair-16, a-14)
amod(chair-16, golden-15)
nmod:in(sit-12, chair-16)
nsubj(splash-20, They-18)
aux(splash-20, shall-19)
parataxis(happy-8, splash-20)
case(canvas-24, at-21)
det(canvas-24, a-22)
amod(canvas-24, ten-league-23)
nmod:at(splash-20, canvas-24)
case(brushes-26, with-25)
nmod:with(splash-20, brushes-26)
case(hair-30, of-27)
nmod:poss(hair-30, comets-28)
case(comets-28, '-29)
nmod:of(brushes-26, hair-30)
nsubj(find-34, They-32)
aux(find-34, shall-33)
parataxis(happy-8, find-34)
amod(saints-36, real-35)
dobj(find-34, saints-36)
mark(draw-38, to-37)
advcl(find-34, draw-38)
case(Magdalene-41, from-39)
advcl(draw-38, Magdalene-41)
advcl(draw-38, Peter-43)
conj:and(Magdalene-41, Peter-43)
cc(Magdalene-41, and-45)
advcl(draw-38, Paul-46)
conj:and(Magdalene-41, Paul-46)
nsubj(work-50, They-48)
nsubj(tired-60, They-48)
aux(work-50, shall-49)
parataxis(happy-8, work-50)
case(age-53, for-51)
det(age-53, an-52)
nmod:for(work-50, age-53)
case(a-55, at-54)
nmod:at(age-53, a-55)
amod(a-55, sitting-56)
cc(work-50, and-57)
neg(tired-60, never-58)
cop(tired-60, be-59)
parataxis(happy-8, tired-60)
conj:and(work-50, tired-60)
case(all-62, at-61)
nmod:at(tired-60, all-62)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB only))
      (NP (DT the) (NN Master))
      (VP (MD shall)
        (VP (VB praise)
          (NP (PRP us)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB only))
      (NP (DT the) (NN Master))
      (VP (MD shall)
        (VP (VB blame))))
    (: ;)
    (CC And)
    (S
      (S
        (NP (DT no) (NN one))
        (VP (MD shall)
          (VP (VB work)
            (PP (IN for)
              (NP (NN money))))))
      (, ,)
      (CC and)
      (S
        (S
          (NP (DT no) (NN one))
          (VP (MD shall)
            (VP (VB work)
              (PP (IN for)
                (NP (NN fame))))))
        (, ,)
        (CC But)
        (S
          (NP
            (NP (DT each))
            (PP (IN for)
              (NP
                (NP (DT the) (NN joy))
                (PP (IN of)
                  (NP
                    (NP
                      (NP (DT the) (NN working))
                      (, ,)
                      (CC and)
                      (NP (DT each))
                      (, ,))
                    (PP (IN in)
                      (NP (PRP$ his) (JJ separate) (NN star))))))))
          (, ,)
          (NP (NNP Shall))
          (VP (VBP draw)
            (NP (DT the) (NN Thing))
            (SBAR (IN as)
              (S
                (NP (PRP he))
                (VP (VBZ sees)
                  (NP (PRP It))
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NNP God))
                      (PP (IN of)
                        (NP (NNS Things)))))
                  (SBAR (IN as)
                    (S
                      (NP (PRP They))
                      (VP (VBP Are)))))))))))
    (. !)))

cc(praise-6, And-1)
advmod(praise-6, only-2)
det(Master-4, the-3)
nsubj(praise-6, Master-4)
aux(praise-6, shall-5)
root(ROOT-0, praise-6)
dobj(praise-6, us-7)
cc(praise-6, and-9)
advmod(blame-14, only-10)
det(Master-12, the-11)
nsubj(blame-14, Master-12)
aux(blame-14, shall-13)
conj:and(praise-6, blame-14)
cc(praise-6, And-16)
neg(one-18, no-17)
nsubj(work-20, one-18)
aux(work-20, shall-19)
conj:and(praise-6, work-20)
case(money-22, for-21)
nmod:for(work-20, money-22)
cc(work-20, and-24)
neg(one-26, no-25)
nsubj(work-28, one-26)
aux(work-28, shall-27)
conj:and(praise-6, work-28)
conj:and(work-20, work-28)
case(fame-30, for-29)
nmod:for(work-28, fame-30)
cc(work-28, But-32)
nsubj(draw-50, each-33)
case(joy-36, for-34)
det(joy-36, the-35)
nmod:for(each-33, joy-36)
case(working-39, of-37)
det(working-39, the-38)
nmod:of(joy-36, working-39)
cc(working-39, and-41)
nmod:of(joy-36, each-42)
conj:and(working-39, each-42)
case(star-47, in-44)
nmod:poss(star-47, his-45)
amod(star-47, separate-46)
nmod:in(working-39, star-47)
nsubj(draw-50, Shall-49)
conj:and(work-20, draw-50)
conj:but(work-28, draw-50)
det(Thing-52, the-51)
dobj(draw-50, Thing-52)
mark(sees-55, as-53)
nsubj(sees-55, he-54)
advcl(draw-50, sees-55)
dobj(sees-55, It-56)
case(God-59, for-57)
det(God-59, the-58)
nmod:for(sees-55, God-59)
case(Things-61, of-60)
nmod:of(God-59, Things-61)
mark(Are-64, as-62)
nsubj(Are-64, They-63)
advcl(sees-55, Are-64)

